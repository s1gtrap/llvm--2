
	.text
	.globl	_main
_main:
	pushq	%rbp
	pushq	%rbx
	pushq	%r12
	pushq	%r13
	pushq	%r14
	pushq	%r15
	movq	%rsp, %rbp
	subq	$0, %rsp
	pushq	%rdi
	pushq	%rsi
	popq	%rdx
	popq	%rsi
	.text
_main$2:
	# %3 = icmp sgt i32 %0, 1
	movq	$0, %rax
	movl	%esi, %eax
	movq	$0, %rcx
	movl	$1, %ecx
	cmpl	%ecx, %eax
	movq	$0, %rbx
	setg	%bl
	# br i1 %3, label %4, label %10
	movq	%rbx, %rax
	cmpq	$0, %rax
	movq	$1, %rax
	movq	%rax, %rdx
	je	_main$10
	movq	$1, %rax
	movq	%rax, %rdx
	jmp	_main$4
	.text
_main$4:
	# %5 = phi i32 [%7, %4], [1, %2]
	# %6 = phi i32 [%8, %4], [%0, %2]
	# %7 = mul i32 %5, %6
	movq	%rdx, %rax
	movq	%rsi, %rcx
	imulq	%rcx, %rax
	movq	%rax, %rdx
	# %8 = add i32 %6, -1
	movq	%rsi, %rax
	movq	$-1, %rcx
	addq	%rcx, %rax
	movq	%rax, %rsi
	# %9 = icmp sgt i32 %6, 2
	movq	$0, %rax
	movl	%esi, %eax
	movq	$0, %rcx
	movl	$2, %ecx
	cmpl	%ecx, %eax
	movq	$0, %rbx
	setg	%bl
	# br i1 %9, label %4, label %10
	movq	%rbx, %rax
	cmpq	$0, %rax
	je	_main$10
	jmp	_main$4
	.text
_main$10:
	# %11 = phi i32 [1, %2], [%7, %4]
	# ret i32 %11
	movq	%rdx, %rax
	movq	%rbp, %rsp
	popq	%r15
	popq	%r14
	popq	%r13
	popq	%r12
	popq	%rbx
	popq	%rbp
	retq	
