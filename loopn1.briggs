
	.text
	.globl	_main
_main:
	pushq	%rbp
	pushq	%rbx
	pushq	%r12
	pushq	%r13
	pushq	%r14
	pushq	%r15
	movq	%rsp, %rbp
	subq	$0, %rsp
	pushq	%rdi
	pushq	%rsi
	popq	%rdx
	popq	%rbx
	# %3 = getelementptr i8*, i8* %1, i64 1
	movq	%rdx, %rcx
	movq	$1, %rax
	imulq	$8, %rax
	addq	%rax, %rcx
	movq	%rcx, %rdx
	# %4 = load i8*, i8** %3
	movq	%rdx, %rax
	movq	(%rax), %rax
	movq	%rax, %rdx
	# %5 = call i64 @strtoull (i8* %4, i8* null, i32 10)
	pushq	%rcx
	pushq	%rdx
	pushq	%rsi
	pushq	%rdi
	pushq	%r8
	pushq	%r9
	pushq	%r10
	pushq	%r11
	movq	$0, %rax
	movq	%rdx, %rax
	pushq	%rax
	movq	$0, %rax
	movq	$0, %rax
	pushq	%rax
	movq	$0, %rax
	movl	$10, %eax
	pushq	%rax
	popq	%rdx
	popq	%rsi
	popq	%rdi
	xorq	%rax, %rax
	callq	_strtoull
	addq	$0, %rsp
	popq	%r11
	popq	%r10
	popq	%r9
	popq	%r8
	popq	%rdi
	popq	%rsi
	popq	%rdx
	popq	%rcx
	movq	%rax, %rsi
	# %6 = icmp eq i64 %5, 0
	movq	%rsi, %rax
	movq	$0, %rcx
	cmpq	%rcx, %rax
	movq	$0, %rdx
	sete	%dl
	# br i1 %6, label %7, label %8
	movq	%rdx, %rax
	cmpq	$0, %rax
	je	_main$8
	jmp	_main$7
	.text
_main$7:
	# ret i32 0
	movq	$0, %rax
	movq	%rbp, %rsp
	popq	%r15
	popq	%r14
	popq	%r13
	popq	%r12
	popq	%rbx
	popq	%rbp
	retq	
	.text
_main$8:
	# %9 = phi i64 [%10, %8], [0, %2]
	# %10 = add i64 %9, 1
	movq	%rbx, %rax
	movq	$1, %rcx
	addq	%rcx, %rax
	movq	%rax, %rbx
	# %11 = icmp eq i64 %9, %5
	movq	%rbx, %rax
	movq	%rsi, %rcx
	cmpq	%rcx, %rax
	movq	$0, %rdx
	sete	%dl
	# br i1 %11, label %7, label %8
	movq	%rdx, %rax
	cmpq	$0, %rax
	je	_main$8
	jmp	_main$7
