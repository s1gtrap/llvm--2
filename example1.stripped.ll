%struct.anon = type { i32, i8* }
%struct.mz_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, i8*, i8*, i8*, i8*, i32, i64, i64 }
%struct.tdefl_compressor = type { i8*, i8*, i32, [2 x i32], i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i32, i8*, i64, i64, [33025 x i8], [3 x [288 x i16]], [3 x [288 x i16]], [3 x [288 x i8]], [65536 x i8], [32768 x i16], [32768 x i16], [85196 x i8] }
%struct.inflate_state = type { %struct.tinfl_decompressor_tag, i32, i32, i32, i32, i32, [32768 x i8], i32 }
%struct.tinfl_decompressor_tag = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i64, i64, [3 x [1024 x i16]], [576 x i16], [64 x i16], [38 x i16], [288 x i8], [32 x i8], [19 x i8], [4 x i8], [457 x i8] }
%struct.tdefl_output_buffer = type { i64, i64, i8*, i32 }
%struct.mz_zip_archive = type { i64, i64, i32, i32, i32, i32, i64, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.mz_zip_internal_state_tag = type { %struct.mz_zip_array, %struct.mz_zip_array, %struct.mz_zip_array, i32, i32, i32, i8*, i64, i8*, i64, i64 }
%struct.mz_zip_array = type { i8*, i64, i64, i32 }
%struct.mz_zip_archive_file_stat = type { i32, i64, i16, i16, i16, i16, i32, i64, i64, i16, i32, i64, i32, i32, i32, i32, [512 x i8], [512 x i8], i64 }
%struct.mz_zip_reader_extract_iter_state = type { i8*, i32, i32, i64, i64, i64, i64, i64, i64, %struct.mz_zip_archive_file_stat, i8*, i8*, i64, %struct.tinfl_decompressor_tag, i32 }
%struct.utimbuf = type { i64, i64 }
%struct.mz_zip_writer_add_state = type { i8*, i64, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.stat = type { i32, i16, i16, i64, i32, i32, i32, %struct.timespec, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64, i32, i32, i32, i32, [2 x i64] }
%struct.timespec = type { i64, i64 }
%struct.tdefl_sym_freq = type { i16, i16 }

@mz_crc32.s_crc_table = global [256 x i32] [i32 0, i32 1996959894, i32 -301047508, i32 -1727442502, i32 124634137, i32 1886057615, i32 -379345611, i32 -1637575261, i32 249268274, i32 2044508324, i32 -522852066, i32 -1747789432, i32 162941995, i32 2125561021, i32 -407360249, i32 -1866523247, i32 498536548, i32 1789927666, i32 -205950648, i32 -2067906082, i32 450548861, i32 1843258603, i32 -187386543, i32 -2083289657, i32 325883990, i32 1684777152, i32 -43845254, i32 -1973040660, i32 335633487, i32 1661365465, i32 -99664541, i32 -1928851979, i32 997073096, i32 1281953886, i32 -715111964, i32 -1570279054, i32 1006888145, i32 1258607687, i32 -770865667, i32 -1526024853, i32 901097722, i32 1119000684, i32 -608450090, i32 -1396901568, i32 853044451, i32 1172266101, i32 -589951537, i32 -1412350631, i32 651767980, i32 1373503546, i32 -925412992, i32 -1076862698, i32 565507253, i32 1454621731, i32 -809855591, i32 -1195530993, i32 671266974, i32 1594198024, i32 -972236366, i32 -1324619484, i32 795835527, i32 1483230225, i32 -1050600021, i32 -1234817731, i32 1994146192, i32 31158534, i32 -1731059524, i32 -271249366, i32 1907459465, i32 112637215, i32 -1614814043, i32 -390540237, i32 2013776290, i32 251722036, i32 -1777751922, i32 -519137256, i32 2137656763, i32 141376813, i32 -1855689577, i32 -429695999, i32 1802195444, i32 476864866, i32 -2056965928, i32 -228458418, i32 1812370925, i32 453092731, i32 -2113342271, i32 -183516073, i32 1706088902, i32 314042704, i32 -1950435094, i32 -54949764, i32 1658658271, i32 366619977, i32 -1932296973, i32 -69972891, i32 1303535960, i32 984961486, i32 -1547960204, i32 -725929758, i32 1256170817, i32 1037604311, i32 -1529756563, i32 -740887301, i32 1131014506, i32 879679996, i32 -1385723834, i32 -631195440, i32 1141124467, i32 855842277, i32 -1442165665, i32 -586318647, i32 1342533948, i32 654459306, i32 -1106571248, i32 -921952122, i32 1466479909, i32 544179635, i32 -1184443383, i32 -832445281, i32 1591671054, i32 702138776, i32 -1328506846, i32 -942167884, i32 1504918807, i32 783551873, i32 -1212326853, i32 -1061524307, i32 -306674912, i32 -1698712650, i32 62317068, i32 1957810842, i32 -355121351, i32 -1647151185, i32 81470997, i32 1943803523, i32 -480048366, i32 -1805370492, i32 225274430, i32 2053790376, i32 -468791541, i32 -1828061283, i32 167816743, i32 2097651377, i32 -267414716, i32 -2029476910, i32 503444072, i32 1762050814, i32 -144550051, i32 -2140837941, i32 426522225, i32 1852507879, i32 -19653770, i32 -1982649376, i32 282753626, i32 1742555852, i32 -105259153, i32 -1900089351, i32 397917763, i32 1622183637, i32 -690576408, i32 -1580100738, i32 953729732, i32 1340076626, i32 -776247311, i32 -1497606297, i32 1068828381, i32 1219638859, i32 -670225446, i32 -1358292148, i32 906185462, i32 1090812512, i32 -547295293, i32 -1469587627, i32 829329135, i32 1181335161, i32 -882789492, i32 -1134132454, i32 628085408, i32 1382605366, i32 -871598187, i32 -1156888829, i32 570562233, i32 1426400815, i32 -977650754, i32 -1296233688, i32 733239954, i32 1555261956, i32 -1026031705, i32 -1244606671, i32 752459403, i32 1541320221, i32 -1687895376, i32 -328994266, i32 1969922972, i32 40735498, i32 -1677130071, i32 -351390145, i32 1913087877, i32 83908371, i32 -1782625662, i32 -491226604, i32 2075208622, i32 213261112, i32 -1831694693, i32 -438977011, i32 2094854071, i32 198958881, i32 -2032938284, i32 -237706686, i32 1759359992, i32 534414190, i32 -2118248755, i32 -155638181, i32 1873836001, i32 414664567, i32 -2012718362, i32 -15766928, i32 1711684554, i32 285281116, i32 -1889165569, i32 -127750551, i32 1634467795, i32 376229701, i32 -1609899400, i32 -686959890, i32 1308918612, i32 956543938, i32 -1486412191, i32 -799009033, i32 1231636301, i32 1047427035, i32 -1362007478, i32 -640263460, i32 1088359270, i32 936918000, i32 -1447252397, i32 -558129467, i32 1202900863, i32 817233897, i32 -1111625188, i32 -893730166, i32 1404277552, i32 615818150, i32 -1160759803, i32 -841546093, i32 1423857449, i32 601450431, i32 -1285129682, i32 -1000256840, i32 1567103746, i32 711928724, i32 -1274298825, i32 -1022587231, i32 1510334235, i32 755167117]
@.str = global [7 x i8] c"11.0.2\00"
@mz_error.s_error_descs = global [10 x %struct.anon] [%struct.anon {i32 0, i8* @.str.1}, %struct.anon {i32 1, i8* @.str.2}, %struct.anon {i32 2, i8* @.str.3}, %struct.anon {i32 -1, i8* @.str.4}, %struct.anon {i32 -2, i8* @.str.5}, %struct.anon {i32 -3, i8* @.str.6}, %struct.anon {i32 -4, i8* @.str.7}, %struct.anon {i32 -5, i8* @.str.8}, %struct.anon {i32 -6, i8* @.str.9}, %struct.anon {i32 -10000, i8* @.str.10}]
@.str.1 = global [1 x i8] c"\00"
@.str.2 = global [11 x i8] c"stream end\00"
@.str.3 = global [16 x i8] c"need dictionary\00"
@.str.4 = global [11 x i8] c"file error\00"
@.str.5 = global [13 x i8] c"stream error\00"
@.str.6 = global [11 x i8] c"data error\00"
@.str.7 = global [14 x i8] c"out of memory\00"
@.str.8 = global [10 x i8] c"buf error\00"
@.str.9 = global [14 x i8] c"version error\00"
@.str.10 = global [16 x i8] c"parameter error\00"
@__func__.tdefl_compress_buffer = global [22 x i8] c"tdefl_compress_buffer\00"
@.str.11 = global [11 x i8] c"example1.c\00"
@.str.12 = global [19 x i8] c"d->m_pPut_buf_func\00"
@s_tdefl_num_probes = global [11 x i32] [i32 0, i32 1, i32 6, i32 32, i32 16, i32 32, i32 128, i32 256, i32 512, i32 768, i32 1500]
@tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes = global [11 x i32] [i32 0, i32 1, i32 6, i32 32, i32 16, i32 32, i32 128, i32 256, i32 512, i32 768, i32 1500]
@tdefl_write_image_to_png_file_in_memory_ex.chans = global [5 x i8] c"\00\00\04\02\06"
@__const.tdefl_write_image_to_png_file_in_memory_ex.pnghdr = global [41 x i8] c"\89PNG\0D\0A\1A\0A\00\00\00\0DIHDR\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\00IDAT"
@.str.13 = global [17 x i8] c"\00\00\00\00\00\00\00\00IEND\AEB`\82\00"
@tinfl_decompress.s_length_base = global [31 x i16] [i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 13, i16 15, i16 17, i16 19, i16 23, i16 27, i16 31, i16 35, i16 43, i16 51, i16 59, i16 67, i16 83, i16 99, i16 115, i16 131, i16 163, i16 195, i16 227, i16 258, i16 0, i16 0]
@tinfl_decompress.s_length_extra = global [31 x i8] c"\00\00\00\00\00\00\00\00\01\01\01\01\02\02\02\02\03\03\03\03\04\04\04\04\05\05\05\05\00\00\00"
@tinfl_decompress.s_dist_base = global [32 x i16] [i16 1, i16 2, i16 3, i16 4, i16 5, i16 7, i16 9, i16 13, i16 17, i16 25, i16 33, i16 49, i16 65, i16 97, i16 129, i16 193, i16 257, i16 385, i16 513, i16 769, i16 1025, i16 1537, i16 2049, i16 3073, i16 4097, i16 6145, i16 8193, i16 12289, i16 16385, i16 24577, i16 0, i16 0]
@tinfl_decompress.s_dist_extra = global [32 x i8] c"\00\00\00\00\01\01\02\02\03\03\04\04\05\05\06\06\07\07\08\08\09\09\0A\0A\0B\0B\0C\0C\0D\0D\00\00"
@tinfl_decompress.s_length_dezigzag = global [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F"
@tinfl_decompress.s_min_table_sizes = global [3 x i16] [i16 257, i16 1, i16 4]
@.str.14 = global [4 x i8] c"\05\05\04\00"
@.str.15 = global [4 x i8] c"\02\03\07\00"
@.str.16 = global [4 x i8] c"\03\03\0B\00"
@__func__.tinfl_decompress = global [17 x i8] c"tinfl_decompress\00"
@.str.17 = global [10 x i8] c"!num_bits\00"
@.str.18 = global [3 x i8] c"rb\00"
@.str.19 = global [3 x i8] c"wb\00"
@.str.20 = global [4 x i8] c"w+b\00"
@.str.21 = global [4 x i8] c"r+b\00"
@__func__.mz_zip_writer_add_mem_ex_v2 = global [28 x i8] c"mz_zip_writer_add_mem_ex_v2\00"
@.str.22 = global [66 x i8] c"(local_dir_header_ofs & (pZip->m_file_offset_alignment - 1)) == 0\00"
@.str.23 = global [44 x i8] c"bit_flags & MZ_ZIP_LDH_BIT_FLAG_HAS_LOCATOR\00"
@__func__.mz_zip_writer_add_read_buf_callback = global [36 x i8] c"mz_zip_writer_add_read_buf_callback\00"
@.str.24 = global [66 x i8] c"(cur_archive_file_ofs & (pZip->m_file_offset_alignment - 1)) == 0\00"
@__func__.mz_zip_writer_add_from_zip_reader = global [34 x i8] c"mz_zip_writer_add_from_zip_reader\00"
@.str.25 = global [9 x i8] c"no error\00"
@.str.26 = global [16 x i8] c"undefined error\00"
@.str.27 = global [15 x i8] c"too many files\00"
@.str.28 = global [15 x i8] c"file too large\00"
@.str.29 = global [19 x i8] c"unsupported method\00"
@.str.30 = global [23 x i8] c"unsupported encryption\00"
@.str.31 = global [20 x i8] c"unsupported feature\00"
@.str.32 = global [33 x i8] c"failed finding central directory\00"
@.str.33 = global [18 x i8] c"not a ZIP archive\00"
@.str.34 = global [39 x i8] c"invalid header or archive is corrupted\00"
@.str.35 = global [30 x i8] c"unsupported multidisk archive\00"
@.str.36 = global [45 x i8] c"decompression failed or archive is corrupted\00"
@.str.37 = global [19 x i8] c"compression failed\00"
@.str.38 = global [29 x i8] c"unexpected decompressed size\00"
@.str.39 = global [20 x i8] c"CRC-32 check failed\00"
@.str.40 = global [35 x i8] c"unsupported central directory size\00"
@.str.41 = global [18 x i8] c"allocation failed\00"
@.str.42 = global [17 x i8] c"file open failed\00"
@.str.43 = global [19 x i8] c"file create failed\00"
@.str.44 = global [18 x i8] c"file write failed\00"
@.str.45 = global [17 x i8] c"file read failed\00"
@.str.46 = global [18 x i8] c"file close failed\00"
@.str.47 = global [17 x i8] c"file seek failed\00"
@.str.48 = global [17 x i8] c"file stat failed\00"
@.str.49 = global [18 x i8] c"invalid parameter\00"
@.str.50 = global [17 x i8] c"invalid filename\00"
@.str.51 = global [17 x i8] c"buffer too small\00"
@.str.52 = global [15 x i8] c"internal error\00"
@.str.53 = global [15 x i8] c"file not found\00"
@.str.54 = global [21 x i8] c"archive is too large\00"
@.str.55 = global [18 x i8] c"validation failed\00"
@.str.56 = global [22 x i8] c"write callback failed\00"
@.str.57 = global [13 x i8] c"total errors\00"
@.str.58 = global [14 x i8] c"unknown error\00"
@s_pStr = global i8* @.str.79
@.str.59 = global [21 x i8] c"miniz.c version: %s\0A\00"
@.str.60 = global [16 x i8] c"Out of memory!\0A\00"
@.str.61 = global [20 x i8] c"compress() failed!\0A\00"
@.str.62 = global [32 x i8] c"Compressed from %u to %u bytes\0A\00"
@.str.63 = global [48 x i8] c"Simple fuzzy test: step %u total_succeeded: %u\0A\00"
@.str.64 = global [20 x i8] c"uncompress failed!\0A\00"
@.str.65 = global [34 x i8] c"Decompressed from %u to %u bytes\0A\00"
@.str.66 = global [23 x i8] c"Decompression failed!\0A\00"
@.str.67 = global [10 x i8] c"Success.\0A\00"
@__func__.tdefl_compress_normal = global [22 x i8] c"tdefl_compress_normal\00"
@.str.68 = global [35 x i8] c"d->m_lookahead_size >= len_to_move\00"
@__func__.tdefl_find_match = global [17 x i8] c"tdefl_find_match\00"
@.str.69 = global [37 x i8] c"max_match_len <= TDEFL_MAX_MATCH_LEN\00"
@__func__.tdefl_record_match = global [19 x i8] c"tdefl_record_match\00"
@.str.70 = global [94 x i8] c"(match_len >= TDEFL_MIN_MATCH_LEN) && (match_dist >= 1) && (match_dist <= TDEFL_LZ_DICT_SIZE)\00"
@s_tdefl_small_dist_sym = global [512 x i8] c
@s_tdefl_large_dist_sym = global [128 x i8] c"\00\00\12\13\14\14\15\15\16\16\16\16\17\17\17\17\18\18\18\18\18\18\18\18\19\19\19\19\19\19\19\19\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D"
@s_tdefl_len_sym = global [256 x i16] [i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 265, i16 266, i16 266, i16 267, i16 267, i16 268, i16 268, i16 269, i16 269, i16 269, i16 269, i16 270, i16 270, i16 270, i16 270, i16 271, i16 271, i16 271, i16 271, i16 272, i16 272, i16 272, i16 272, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 285]
@__func__.tdefl_flush_block = global [18 x i8] c"tdefl_flush_block\00"
@.str.71 = global [29 x i8] c"!d->m_output_flush_remaining\00"
@.str.72 = global [27 x i8] c"bits <= ((1U << len) - 1U)\00"
@.str.73 = global [40 x i8] c"d->m_pOutput_buf < d->m_pOutput_buf_end\00"
@__func__.tdefl_start_static_block = global [25 x i8] c"tdefl_start_static_block\00"
@__func__.tdefl_start_dynamic_block = global [26 x i8] c"tdefl_start_dynamic_block\00"
@s_tdefl_packed_code_size_syms_swizzle = global [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F"
@.str.74 = global [32 x i8] c"code < TDEFL_MAX_HUFF_SYMBOLS_2\00"
@__func__.tdefl_compress_lz_codes = global [24 x i8] c"tdefl_compress_lz_codes\00"
@.str.75 = global [52 x i8] c"d->m_huff_code_sizes[0][s_tdefl_len_sym[match_len]]\00"
@mz_bitmasks = global [17 x i32] [i32 0, i32 1, i32 3, i32 7, i32 15, i32 31, i32 63, i32 127, i32 255, i32 511, i32 1023, i32 2047, i32 4095, i32 8191, i32 16383, i32 32767, i32 65535]
@s_tdefl_len_extra = global [256 x i8] c
@s_tdefl_small_dist_extra = global [512 x i8] c
@s_tdefl_large_dist_extra = global [128 x i8] c"\00\00\08\08\09\09\09\09\0A\0A\0A\0A\0A\0A\0A\0A\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D"
@.str.76 = global [29 x i8] c"d->m_huff_code_sizes[1][sym]\00"
@.str.77 = global [29 x i8] c"d->m_huff_code_sizes[0][lit]\00"
@__func__.mz_zip_array_ensure_capacity = global [29 x i8] c"mz_zip_array_ensure_capacity\00"
@.str.78 = global [23 x i8] c"pArray->m_element_size\00"
@.str.79 = global [491 x i8] c"Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.\00"

declare void @free(i8*)
declare i8* @malloc(i64)
declare i8* @realloc(i8*, i64)
declare void @memset(i8*, i8, i64, i1)
declare i8* @__memcpy_chk(i8*, i8*, i64, i64)
declare i64 @llvm.objectsize.i64.p0(i8*, i1, i1, i1)
declare i8* @__memset_chk(i8*, i32, i64, i64)
declare void @__assert_rtn(i8*, i8*, i32, i8*)
declare void @memcpy(i8*, i8*, i64, i1)
declare i8* @fopen(i8*, i8*)
declare i32 @fseeko(i8*, i64, i32)
declare i32 @fclose(i8*)
declare i64 @ftello(i8*)
declare i64 @strlen(i8*)
declare i32 @memcmp(i8*, i8*, i64)
declare i8* @freopen(i8*, i8*, i8*)
declare i64 @time(i8*)
declare i32 @fflush(i8*)
declare i32 @stat(i8*, i8*)
declare i32 @remove(i8*)
declare i32 @printf(i8*, ...)
declare i32 @rand()
declare i64 @fread(i8*, i64, i64, i8*)
declare i64 @fwrite(i8*, i64, i64, i8*)
declare i32 @utime(i8*, i8*)
declare i64 @mktime(i8*)
declare i8* @localtime(i8*)

define i64 @mz_adler32 (i64 %0, i8* %1, i64 %2) {
 %4 = alloca i64
 %5 = alloca i64
 %6 = alloca i8*
 %7 = alloca i64
 %8 = alloca i32
 %9 = alloca i32
 %10 = alloca i32
 %11 = alloca i64
 store i64 %0, i64* %5
 store i8* %1, i8** %6
 store i64 %2, i64* %7
 %12 = load i64, i64* %5
 %13 = and i64 %12, 65535
 %14 = trunc i64 %13 to i32
 store i32 %14, i32* %9
 %15 = load i64, i64* %5
 %16 = lshr i64 %15, 16
 %17 = trunc i64 %16 to i32
 store i32 %17, i32* %10
 %18 = load i64, i64* %7
 %19 = urem i64 %18, 5552
 store i64 %19, i64* %11
 %20 = load i8*, i8** %6
 %21 = icmp ne i8* %20, null
 br i1 %21, label %23, label %22
22:
 store i64 1, i64* %4
 br label %145
23:
 br label %24
24:
 %25 = load i64, i64* %7
 %26 = icmp ne i64 %25, 0
 br i1 %26, label %27, label %139
27:
 store i32 0, i32* %8
 br label %28
28:
 %29 = load i32, i32* %8
 %30 = add i32 %29, 7
 %31 = zext i32 %30 to i64
 %32 = load i64, i64* %11
 %33 = icmp ult i64 %31, %32
 br i1 %33, label %34, label %112
34:
 %35 = load i8*, i8** %6
 %36 = getelementptr i8, i8* %35, i64 0
 %37 = load i8, i8* %36
 %38 = zext i8 %37 to i32
 %39 = load i32, i32* %9
 %40 = add i32 %39, %38
 store i32 %40, i32* %9
 %41 = load i32, i32* %9
 %42 = load i32, i32* %10
 %43 = add i32 %42, %41
 store i32 %43, i32* %10
 %44 = load i8*, i8** %6
 %45 = getelementptr i8, i8* %44, i64 1
 %46 = load i8, i8* %45
 %47 = zext i8 %46 to i32
 %48 = load i32, i32* %9
 %49 = add i32 %48, %47
 store i32 %49, i32* %9
 %50 = load i32, i32* %9
 %51 = load i32, i32* %10
 %52 = add i32 %51, %50
 store i32 %52, i32* %10
 %53 = load i8*, i8** %6
 %54 = getelementptr i8, i8* %53, i64 2
 %55 = load i8, i8* %54
 %56 = zext i8 %55 to i32
 %57 = load i32, i32* %9
 %58 = add i32 %57, %56
 store i32 %58, i32* %9
 %59 = load i32, i32* %9
 %60 = load i32, i32* %10
 %61 = add i32 %60, %59
 store i32 %61, i32* %10
 %62 = load i8*, i8** %6
 %63 = getelementptr i8, i8* %62, i64 3
 %64 = load i8, i8* %63
 %65 = zext i8 %64 to i32
 %66 = load i32, i32* %9
 %67 = add i32 %66, %65
 store i32 %67, i32* %9
 %68 = load i32, i32* %9
 %69 = load i32, i32* %10
 %70 = add i32 %69, %68
 store i32 %70, i32* %10
 %71 = load i8*, i8** %6
 %72 = getelementptr i8, i8* %71, i64 4
 %73 = load i8, i8* %72
 %74 = zext i8 %73 to i32
 %75 = load i32, i32* %9
 %76 = add i32 %75, %74
 store i32 %76, i32* %9
 %77 = load i32, i32* %9
 %78 = load i32, i32* %10
 %79 = add i32 %78, %77
 store i32 %79, i32* %10
 %80 = load i8*, i8** %6
 %81 = getelementptr i8, i8* %80, i64 5
 %82 = load i8, i8* %81
 %83 = zext i8 %82 to i32
 %84 = load i32, i32* %9
 %85 = add i32 %84, %83
 store i32 %85, i32* %9
 %86 = load i32, i32* %9
 %87 = load i32, i32* %10
 %88 = add i32 %87, %86
 store i32 %88, i32* %10
 %89 = load i8*, i8** %6
 %90 = getelementptr i8, i8* %89, i64 6
 %91 = load i8, i8* %90
 %92 = zext i8 %91 to i32
 %93 = load i32, i32* %9
 %94 = add i32 %93, %92
 store i32 %94, i32* %9
 %95 = load i32, i32* %9
 %96 = load i32, i32* %10
 %97 = add i32 %96, %95
 store i32 %97, i32* %10
 %98 = load i8*, i8** %6
 %99 = getelementptr i8, i8* %98, i64 7
 %100 = load i8, i8* %99
 %101 = zext i8 %100 to i32
 %102 = load i32, i32* %9
 %103 = add i32 %102, %101
 store i32 %103, i32* %9
 %104 = load i32, i32* %9
 %105 = load i32, i32* %10
 %106 = add i32 %105, %104
 store i32 %106, i32* %10
 br label %107
107:
 %108 = load i32, i32* %8
 %109 = add i32 %108, 8
 store i32 %109, i32* %8
 %110 = load i8*, i8** %6
 %111 = getelementptr i8, i8* %110, i64 8
 store i8* %111, i8** %6
 br label %28
112:
 br label %113
113:
 %114 = load i32, i32* %8
 %115 = zext i32 %114 to i64
 %116 = load i64, i64* %11
 %117 = icmp ult i64 %115, %116
 br i1 %117, label %118, label %131
118:
 %119 = load i8*, i8** %6
 %120 = getelementptr i8, i8* %119, i32 1
 store i8* %120, i8** %6
 %121 = load i8, i8* %119
 %122 = zext i8 %121 to i32
 %123 = load i32, i32* %9
 %124 = add i32 %123, %122
 store i32 %124, i32* %9
 %125 = load i32, i32* %9
 %126 = load i32, i32* %10
 %127 = add i32 %126, %125
 store i32 %127, i32* %10
 br label %128
128:
 %129 = load i32, i32* %8
 %130 = add i32 %129, 1
 store i32 %130, i32* %8
 br label %113
131:
 %132 = load i32, i32* %9
 %133 = urem i32 %132, 65521
 store i32 %133, i32* %9
 %134 = load i32, i32* %10
 %135 = urem i32 %134, 65521
 store i32 %135, i32* %10
 %136 = load i64, i64* %11
 %137 = load i64, i64* %7
 %138 = sub i64 %137, %136
 store i64 %138, i64* %7
 store i64 5552, i64* %11
 br label %24
139:
 %140 = load i32, i32* %10
 %141 = shl i32 %140, 16
 %142 = load i32, i32* %9
 %143 = add i32 %141, %142
 %144 = zext i32 %143 to i64
 store i64 %144, i64* %4
 br label %145
145:
 %146 = load i64, i64* %4
 ret i64 %146
}

define i64 @mz_crc32 (i64 %0, i8* %1, i64 %2) {
 %4 = alloca i64
 %5 = alloca i8*
 %6 = alloca i64
 %7 = alloca i32
 %8 = alloca i8*
 store i64 %0, i64* %4
 store i8* %1, i8** %5
 store i64 %2, i64* %6
 %9 = load i64, i64* %4
 %10 = trunc i64 %9 to i32
 %11 = xor i32 %10, -1
 store i32 %11, i32* %7
 %12 = load i8*, i8** %5
 store i8* %12, i8** %8
 br label %13
13:
 %14 = load i64, i64* %6
 %15 = icmp uge i64 %14, 4
 br i1 %15, label %16, label %73
16:
 %17 = load i32, i32* %7
 %18 = lshr i32 %17, 8
 %19 = load i32, i32* %7
 %20 = load i8*, i8** %8
 %21 = getelementptr i8, i8* %20, i64 0
 %22 = load i8, i8* %21
 %23 = zext i8 %22 to i32
 %24 = xor i32 %19, %23
 %25 = and i32 %24, 255
 %26 = zext i32 %25 to i64
 %27 = getelementptr [256 x i32], i8* @mz_crc32.s_crc_table, i64 0, i64 %26
 %28 = load i32, i32* %27
 %29 = xor i32 %18, %28
 store i32 %29, i32* %7
 %30 = load i32, i32* %7
 %31 = lshr i32 %30, 8
 %32 = load i32, i32* %7
 %33 = load i8*, i8** %8
 %34 = getelementptr i8, i8* %33, i64 1
 %35 = load i8, i8* %34
 %36 = zext i8 %35 to i32
 %37 = xor i32 %32, %36
 %38 = and i32 %37, 255
 %39 = zext i32 %38 to i64
 %40 = getelementptr [256 x i32], i8* @mz_crc32.s_crc_table, i64 0, i64 %39
 %41 = load i32, i32* %40
 %42 = xor i32 %31, %41
 store i32 %42, i32* %7
 %43 = load i32, i32* %7
 %44 = lshr i32 %43, 8
 %45 = load i32, i32* %7
 %46 = load i8*, i8** %8
 %47 = getelementptr i8, i8* %46, i64 2
 %48 = load i8, i8* %47
 %49 = zext i8 %48 to i32
 %50 = xor i32 %45, %49
 %51 = and i32 %50, 255
 %52 = zext i32 %51 to i64
 %53 = getelementptr [256 x i32], i8* @mz_crc32.s_crc_table, i64 0, i64 %52
 %54 = load i32, i32* %53
 %55 = xor i32 %44, %54
 store i32 %55, i32* %7
 %56 = load i32, i32* %7
 %57 = lshr i32 %56, 8
 %58 = load i32, i32* %7
 %59 = load i8*, i8** %8
 %60 = getelementptr i8, i8* %59, i64 3
 %61 = load i8, i8* %60
 %62 = zext i8 %61 to i32
 %63 = xor i32 %58, %62
 %64 = and i32 %63, 255
 %65 = zext i32 %64 to i64
 %66 = getelementptr [256 x i32], i8* @mz_crc32.s_crc_table, i64 0, i64 %65
 %67 = load i32, i32* %66
 %68 = xor i32 %57, %67
 store i32 %68, i32* %7
 %69 = load i8*, i8** %8
 %70 = getelementptr i8, i8* %69, i64 4
 store i8* %70, i8** %8
 %71 = load i64, i64* %6
 %72 = sub i64 %71, 4
 store i64 %72, i64* %6
 br label %13
73:
 br label %74
74:
 %75 = load i64, i64* %6
 %76 = icmp ne i64 %75, 0
 br i1 %76, label %77, label %95
77:
 %78 = load i32, i32* %7
 %79 = lshr i32 %78, 8
 %80 = load i32, i32* %7
 %81 = load i8*, i8** %8
 %82 = getelementptr i8, i8* %81, i64 0
 %83 = load i8, i8* %82
 %84 = zext i8 %83 to i32
 %85 = xor i32 %80, %84
 %86 = and i32 %85, 255
 %87 = zext i32 %86 to i64
 %88 = getelementptr [256 x i32], i8* @mz_crc32.s_crc_table, i64 0, i64 %87
 %89 = load i32, i32* %88
 %90 = xor i32 %79, %89
 store i32 %90, i32* %7
 %91 = load i8*, i8** %8
 %92 = getelementptr i8, i8* %91, i32 1
 store i8* %92, i8** %8
 %93 = load i64, i64* %6
 %94 = add i64 %93, -1
 store i64 %94, i64* %6
 br label %74
95:
 %96 = load i32, i32* %7
 %97 = xor i32 %96, -1
 %98 = zext i32 %97 to i64
 ret i64 %98
}

define void @mz_free (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 call void @free (i8* %3)
 ret void
}

define i8* @miniz_def_alloc_func (i8* %0, i64 %1, i64 %2) {
 %4 = alloca i8*
 %5 = alloca i64
 %6 = alloca i64
 store i8* %0, i8** %4
 store i64 %1, i64* %5
 store i64 %2, i64* %6
 %7 = load i8*, i8** %4
 %8 = load i64, i64* %5
 %9 = load i64, i64* %6
 %10 = load i64, i64* %5
 %11 = load i64, i64* %6
 %12 = mul i64 %10, %11
 %13 = call i8* @malloc (i64 %12)
 ret i8* %13
}

define void @miniz_def_free_func (i8* %0, i8* %1) {
 %3 = alloca i8*
 %4 = alloca i8*
 store i8* %0, i8** %3
 store i8* %1, i8** %4
 %5 = load i8*, i8** %3
 %6 = load i8*, i8** %4
 %7 = load i8*, i8** %4
 call void @free (i8* %7)
 ret void
}

define i8* @miniz_def_realloc_func (i8* %0, i8* %1, i64 %2, i64 %3) {
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i64
 %8 = alloca i64
 store i8* %0, i8** %5
 store i8* %1, i8** %6
 store i64 %2, i64* %7
 store i64 %3, i64* %8
 %9 = load i8*, i8** %5
 %10 = load i8*, i8** %6
 %11 = load i64, i64* %7
 %12 = load i64, i64* %8
 %13 = load i8*, i8** %6
 %14 = load i64, i64* %7
 %15 = load i64, i64* %8
 %16 = mul i64 %14, %15
 %17 = call i8* @realloc (i8* %13, i64 %16)
 ret i8* %17
}

define i8* @mz_version () {
 ret i8* @.str
}

define i32 @mz_deflateInit (i8* %0, i32 %1) {
 %3 = alloca i8*
 %4 = alloca i32
 store i8* %0, i8** %3
 store i32 %1, i32* %4
 %5 = load i8*, i8** %3
 %6 = load i32, i32* %4
 %7 = call i32 @mz_deflateInit2 (i8* %5, i32 %6, i32 8, i32 15, i32 9, i32 0)
 ret i32 %7
}

define i32 @mz_deflateInit2 (i8* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) {
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i32
 %11 = alloca i32
 %12 = alloca i32
 %13 = alloca i32
 %14 = alloca i8*
 %15 = alloca i32
 store i8* %0, i8** %8
 store i32 %1, i32* %9
 store i32 %2, i32* %10
 store i32 %3, i32* %11
 store i32 %4, i32* %12
 store i32 %5, i32* %13
 %16 = load i32, i32* %9
 %17 = load i32, i32* %11
 %18 = load i32, i32* %13
 %19 = call i32 @tdefl_create_comp_flags_from_zip_params (i32 %16, i32 %17, i32 %18)
 %20 = or i32 8192, %19
 store i32 %20, i32* %15
 %21 = load i8*, i8** %8
 %22 = icmp ne i8* %21, null
 br i1 %22, label %24, label %23
23:
 store i32 -2, i32* %7
 br label %92
24:
 %25 = load i32, i32* %10
 %26 = icmp ne i32 %25, 8
 br i1 %26, label %40, label %27
27:
 %28 = load i32, i32* %12
 %29 = icmp slt i32 %28, 1
 br i1 %29, label %40, label %30
30:
 %31 = load i32, i32* %12
 %32 = icmp sgt i32 %31, 9
 br i1 %32, label %40, label %33
33:
 %34 = load i32, i32* %11
 %35 = icmp ne i32 %34, 15
 br i1 %35, label %36, label %41
36:
 %37 = load i32, i32* %11
 %38 = sub i32 0, %37
 %39 = icmp ne i32 %38, 15
 br i1 %39, label %40, label %41
40:
 store i32 -10000, i32* %7
 br label %92
41:
 %42 = load i8*, i8** %8
 %43 = getelementptr %struct.mz_stream_s, i8* %42, i32 0, i32 11
 store i32 0, i32* %43
 %44 = load i8*, i8** %8
 %45 = getelementptr %struct.mz_stream_s, i8* %44, i32 0, i32 12
 store i64 1, i64* %45
 %46 = load i8*, i8** %8
 %47 = getelementptr %struct.mz_stream_s, i8* %46, i32 0, i32 6
 store i8* null, i8** %47
 %48 = load i8*, i8** %8
 %49 = getelementptr %struct.mz_stream_s, i8* %48, i32 0, i32 13
 store i64 0, i64* %49
 %50 = load i8*, i8** %8
 %51 = getelementptr %struct.mz_stream_s, i8* %50, i32 0, i32 2
 store i64 0, i64* %51
 %52 = load i8*, i8** %8
 %53 = getelementptr %struct.mz_stream_s, i8* %52, i32 0, i32 5
 store i64 0, i64* %53
 %54 = load i8*, i8** %8
 %55 = getelementptr %struct.mz_stream_s, i8* %54, i32 0, i32 8
 %56 = load i8*, i8** %55
 %57 = icmp ne i8* %56, null
 br i1 %57, label %61, label %58
58:
 %59 = load i8*, i8** %8
 %60 = getelementptr %struct.mz_stream_s, i8* %59, i32 0, i32 8
 store i8* @miniz_def_alloc_func, i8** %60
 br label %61
61:
 %62 = load i8*, i8** %8
 %63 = getelementptr %struct.mz_stream_s, i8* %62, i32 0, i32 9
 %64 = load i8*, i8** %63
 %65 = icmp ne i8* %64, null
 br i1 %65, label %69, label %66
66:
 %67 = load i8*, i8** %8
 %68 = getelementptr %struct.mz_stream_s, i8* %67, i32 0, i32 9
 store i8* @miniz_def_free_func, i8** %68
 br label %69
69:
 %70 = load i8*, i8** %8
 %71 = getelementptr %struct.mz_stream_s, i8* %70, i32 0, i32 8
 %72 = load i8*, i8** %71
 %73 = load i8*, i8** %8
 %74 = getelementptr %struct.mz_stream_s, i8* %73, i32 0, i32 10
 %75 = load i8*, i8** %74
 %76 = call i8* %72 (i8* %75, i64 1, i64 319352)
 store i8* %76, i8** %14
 %77 = load i8*, i8** %14
 %78 = icmp ne i8* %77, null
 br i1 %78, label %80, label %79
79:
 store i32 -4, i32* %7
 br label %92
80:
 %81 = load i8*, i8** %14
 %82 = load i8*, i8** %8
 %83 = getelementptr %struct.mz_stream_s, i8* %82, i32 0, i32 7
 store i8* %81, i8** %83
 %84 = load i8*, i8** %14
 %85 = load i32, i32* %15
 %86 = call i32 @tdefl_init (i8* %84, i8* null, i8* null, i32 %85)
 %87 = icmp ne i32 %86, 0
 br i1 %87, label %88, label %91
88:
 %89 = load i8*, i8** %8
 %90 = call i32 @mz_deflateEnd (i8* %89)
 store i32 -10000, i32* %7
 br label %92
91:
 store i32 0, i32* %7
 br label %92
92:
 %93 = load i32, i32* %7
 ret i32 %93
}

define i32 @tdefl_create_comp_flags_from_zip_params (i32 %0, i32 %1, i32 %2) {
 %4 = alloca i32
 %5 = alloca i32
 %6 = alloca i32
 %7 = alloca i32
 store i32 %0, i32* %4
 store i32 %1, i32* %5
 store i32 %2, i32* %6
 %8 = load i32, i32* %4
 %9 = icmp sge i32 %8, 0
 br i1 %9, label %10, label %18
10:
 %11 = load i32, i32* %4
 %12 = icmp slt i32 10, %11
 br i1 %12, label %13, label %14
13:
 br label %16
14:
 %15 = load i32, i32* %4
 br label %16
16:
 %17 = phi i32 [10, %13], [%15, %14]
 br label %19
18:
 br label %19
19:
 %20 = phi i32 [%17, %16], [6, %18]
 %21 = sext i32 %20 to i64
 %22 = getelementptr [11 x i32], i8* @s_tdefl_num_probes, i64 0, i64 %21
 %23 = load i32, i32* %22
 %24 = load i32, i32* %4
 %25 = icmp sle i32 %24, 3
 %26 = zext i1 %25 to i64
 %27 = select i1 %25, i32 16384, i32 0
 %28 = or i32 %23, %27
 store i32 %28, i32* %7
 %29 = load i32, i32* %5
 %30 = icmp sgt i32 %29, 0
 br i1 %30, label %31, label %34
31:
 %32 = load i32, i32* %7
 %33 = or i32 %32, 4096
 store i32 %33, i32* %7
 br label %34
34:
 %35 = load i32, i32* %4
 %36 = icmp ne i32 %35, 0
 br i1 %36, label %40, label %37
37:
 %38 = load i32, i32* %7
 %39 = or i32 %38, 524288
 store i32 %39, i32* %7
 br label %68
40:
 %41 = load i32, i32* %6
 %42 = icmp eq i32 %41, 1
 br i1 %42, label %43, label %46
43:
 %44 = load i32, i32* %7
 %45 = or i32 %44, 131072
 store i32 %45, i32* %7
 br label %67
46:
 %47 = load i32, i32* %6
 %48 = icmp eq i32 %47, 2
 br i1 %48, label %49, label %52
49:
 %50 = load i32, i32* %7
 %51 = and i32 %50, -4096
 store i32 %51, i32* %7
 br label %66
52:
 %53 = load i32, i32* %6
 %54 = icmp eq i32 %53, 4
 br i1 %54, label %55, label %58
55:
 %56 = load i32, i32* %7
 %57 = or i32 %56, 262144
 store i32 %57, i32* %7
 br label %65
58:
 %59 = load i32, i32* %6
 %60 = icmp eq i32 %59, 3
 br i1 %60, label %61, label %64
61:
 %62 = load i32, i32* %7
 %63 = or i32 %62, 65536
 store i32 %63, i32* %7
 br label %64
64:
 br label %65
65:
 br label %66
66:
 br label %67
67:
 br label %68
68:
 %69 = load i32, i32* %7
 ret i32 %69
}

define i32 @tdefl_init (i8* %0, i8* %1, i8* %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i32
 store i8* %0, i8** %5
 store i8* %1, i8** %6
 store i8* %2, i8** %7
 store i32 %3, i32* %8
 %9 = load i8*, i8** %6
 %10 = load i8*, i8** %5
 %11 = getelementptr %struct.tdefl_compressor, i8* %10, i32 0, i32 0
 store i8* %9, i8** %11
 %12 = load i8*, i8** %7
 %13 = load i8*, i8** %5
 %14 = getelementptr %struct.tdefl_compressor, i8* %13, i32 0, i32 1
 store i8* %12, i8** %14
 %15 = load i32, i32* %8
 %16 = load i8*, i8** %5
 %17 = getelementptr %struct.tdefl_compressor, i8* %16, i32 0, i32 2
 store i32 %15, i32* %17
 %18 = load i32, i32* %8
 %19 = and i32 %18, 4095
 %20 = add i32 %19, 2
 %21 = sdiv i32 %20, 3
 %22 = add i32 1, %21
 %23 = load i8*, i8** %5
 %24 = getelementptr %struct.tdefl_compressor, i8* %23, i32 0, i32 3
 %25 = getelementptr [2 x i32], i8* %24, i64 0, i64 0
 store i32 %22, i32* %25
 %26 = load i32, i32* %8
 %27 = and i32 %26, 16384
 %28 = icmp ne i32 %27, 0
 %29 = zext i1 %28 to i32
 %30 = load i8*, i8** %5
 %31 = getelementptr %struct.tdefl_compressor, i8* %30, i32 0, i32 4
 store i32 %29, i32* %31
 %32 = load i32, i32* %8
 %33 = and i32 %32, 4095
 %34 = ashr i32 %33, 2
 %35 = add i32 %34, 2
 %36 = sdiv i32 %35, 3
 %37 = add i32 1, %36
 %38 = load i8*, i8** %5
 %39 = getelementptr %struct.tdefl_compressor, i8* %38, i32 0, i32 3
 %40 = getelementptr [2 x i32], i8* %39, i64 0, i64 1
 store i32 %37, i32* %40
 %41 = load i32, i32* %8
 %42 = and i32 %41, 32768
 %43 = icmp ne i32 %42, 0
 br i1 %43, label %53, label %44
44:
 %45 = load i8*, i8** %5
 %46 = getelementptr %struct.tdefl_compressor, i8* %45, i32 0, i32 41
 %47 = getelementptr [32768 x i16], i8* %46, i64 0, i64 0
 %48 = load i8*, i8** %5
 %49 = getelementptr %struct.tdefl_compressor, i8* %48, i32 0, i32 41
 %50 = getelementptr [32768 x i16], i8* %49, i64 0, i64 0
 %51 = call i64 @llvm.objectsize.i64.p0 (i8* %50, i1 0, i1 1, i1 0)
 %52 = call i8* @__memset_chk (i8* %47, i32 0, i64 65536, i64 %51)
 br label %53
53:
 %54 = load i8*, i8** %5
 %55 = getelementptr %struct.tdefl_compressor, i8* %54, i32 0, i32 16
 store i32 0, i32* %55
 %56 = load i8*, i8** %5
 %57 = getelementptr %struct.tdefl_compressor, i8* %56, i32 0, i32 15
 store i32 0, i32* %57
 %58 = load i8*, i8** %5
 %59 = getelementptr %struct.tdefl_compressor, i8* %58, i32 0, i32 14
 store i32 0, i32* %59
 %60 = load i8*, i8** %5
 %61 = getelementptr %struct.tdefl_compressor, i8* %60, i32 0, i32 8
 store i32 0, i32* %61
 %62 = load i8*, i8** %5
 %63 = getelementptr %struct.tdefl_compressor, i8* %62, i32 0, i32 7
 store i32 0, i32* %63
 %64 = load i8*, i8** %5
 %65 = getelementptr %struct.tdefl_compressor, i8* %64, i32 0, i32 6
 store i32 0, i32* %65
 %66 = load i8*, i8** %5
 %67 = getelementptr %struct.tdefl_compressor, i8* %66, i32 0, i32 25
 store i32 0, i32* %67
 %68 = load i8*, i8** %5
 %69 = getelementptr %struct.tdefl_compressor, i8* %68, i32 0, i32 17
 store i32 0, i32* %69
 %70 = load i8*, i8** %5
 %71 = getelementptr %struct.tdefl_compressor, i8* %70, i32 0, i32 24
 store i32 0, i32* %71
 %72 = load i8*, i8** %5
 %73 = getelementptr %struct.tdefl_compressor, i8* %72, i32 0, i32 23
 store i32 0, i32* %73
 %74 = load i8*, i8** %5
 %75 = getelementptr %struct.tdefl_compressor, i8* %74, i32 0, i32 22
 store i32 0, i32* %75
 %76 = load i8*, i8** %5
 %77 = getelementptr %struct.tdefl_compressor, i8* %76, i32 0, i32 21
 store i32 0, i32* %77
 %78 = load i8*, i8** %5
 %79 = getelementptr %struct.tdefl_compressor, i8* %78, i32 0, i32 39
 %80 = getelementptr [65536 x i8], i8* %79, i64 0, i64 0
 %81 = getelementptr i8, i8* %80, i64 1
 %82 = load i8*, i8** %5
 %83 = getelementptr %struct.tdefl_compressor, i8* %82, i32 0, i32 9
 store i8* %81, i8** %83
 %84 = load i8*, i8** %5
 %85 = getelementptr %struct.tdefl_compressor, i8* %84, i32 0, i32 39
 %86 = getelementptr [65536 x i8], i8* %85, i64 0, i64 0
 %87 = load i8*, i8** %5
 %88 = getelementptr %struct.tdefl_compressor, i8* %87, i32 0, i32 10
 store i8* %86, i8** %88
 %89 = load i8*, i8** %5
 %90 = getelementptr %struct.tdefl_compressor, i8* %89, i32 0, i32 10
 %91 = load i8*, i8** %90
 store i8 0, i8* %91
 %92 = load i8*, i8** %5
 %93 = getelementptr %struct.tdefl_compressor, i8* %92, i32 0, i32 13
 store i32 8, i32* %93
 %94 = load i8*, i8** %5
 %95 = getelementptr %struct.tdefl_compressor, i8* %94, i32 0, i32 42
 %96 = getelementptr [85196 x i8], i8* %95, i64 0, i64 0
 %97 = load i8*, i8** %5
 %98 = getelementptr %struct.tdefl_compressor, i8* %97, i32 0, i32 11
 store i8* %96, i8** %98
 %99 = load i8*, i8** %5
 %100 = getelementptr %struct.tdefl_compressor, i8* %99, i32 0, i32 42
 %101 = getelementptr [85196 x i8], i8* %100, i64 0, i64 0
 %102 = load i8*, i8** %5
 %103 = getelementptr %struct.tdefl_compressor, i8* %102, i32 0, i32 12
 store i8* %101, i8** %103
 %104 = load i8*, i8** %5
 %105 = getelementptr %struct.tdefl_compressor, i8* %104, i32 0, i32 26
 store i32 0, i32* %105
 %106 = load i8*, i8** %5
 %107 = getelementptr %struct.tdefl_compressor, i8* %106, i32 0, i32 20
 store i32 0, i32* %107
 %108 = load i8*, i8** %5
 %109 = getelementptr %struct.tdefl_compressor, i8* %108, i32 0, i32 19
 store i32 0, i32* %109
 %110 = load i8*, i8** %5
 %111 = getelementptr %struct.tdefl_compressor, i8* %110, i32 0, i32 18
 store i32 0, i32* %111
 %112 = load i8*, i8** %5
 %113 = getelementptr %struct.tdefl_compressor, i8* %112, i32 0, i32 5
 store i32 1, i32* %113
 %114 = load i8*, i8** %5
 %115 = getelementptr %struct.tdefl_compressor, i8* %114, i32 0, i32 27
 store i8* null, i8** %115
 %116 = load i8*, i8** %5
 %117 = getelementptr %struct.tdefl_compressor, i8* %116, i32 0, i32 28
 store i8* null, i8** %117
 %118 = load i8*, i8** %5
 %119 = getelementptr %struct.tdefl_compressor, i8* %118, i32 0, i32 29
 store i8* null, i8** %119
 %120 = load i8*, i8** %5
 %121 = getelementptr %struct.tdefl_compressor, i8* %120, i32 0, i32 30
 store i8* null, i8** %121
 %122 = load i8*, i8** %5
 %123 = getelementptr %struct.tdefl_compressor, i8* %122, i32 0, i32 31
 store i32 0, i32* %123
 %124 = load i8*, i8** %5
 %125 = getelementptr %struct.tdefl_compressor, i8* %124, i32 0, i32 32
 store i8* null, i8** %125
 %126 = load i8*, i8** %5
 %127 = getelementptr %struct.tdefl_compressor, i8* %126, i32 0, i32 33
 store i64 0, i64* %127
 %128 = load i8*, i8** %5
 %129 = getelementptr %struct.tdefl_compressor, i8* %128, i32 0, i32 34
 store i64 0, i64* %129
 %130 = load i32, i32* %8
 %131 = and i32 %130, 32768
 %132 = icmp ne i32 %131, 0
 br i1 %132, label %142, label %133
133:
 %134 = load i8*, i8** %5
 %135 = getelementptr %struct.tdefl_compressor, i8* %134, i32 0, i32 35
 %136 = getelementptr [33025 x i8], i8* %135, i64 0, i64 0
 %137 = load i8*, i8** %5
 %138 = getelementptr %struct.tdefl_compressor, i8* %137, i32 0, i32 35
 %139 = getelementptr [33025 x i8], i8* %138, i64 0, i64 0
 %140 = call i64 @llvm.objectsize.i64.p0 (i8* %139, i1 0, i1 1, i1 0)
 %141 = call i8* @__memset_chk (i8* %136, i32 0, i64 33025, i64 %140)
 br label %142
142:
 %143 = load i8*, i8** %5
 %144 = getelementptr %struct.tdefl_compressor, i8* %143, i32 0, i32 36
 %145 = getelementptr [3 x [288 x i16]], i8* %144, i64 0, i64 0
 %146 = getelementptr [288 x i16], i8* %145, i64 0, i64 0
 %147 = load i8*, i8** %5
 %148 = getelementptr %struct.tdefl_compressor, i8* %147, i32 0, i32 36
 %149 = getelementptr [3 x [288 x i16]], i8* %148, i64 0, i64 0
 %150 = getelementptr [288 x i16], i8* %149, i64 0, i64 0
 %151 = call i64 @llvm.objectsize.i64.p0 (i8* %150, i1 0, i1 1, i1 0)
 %152 = call i8* @__memset_chk (i8* %146, i32 0, i64 576, i64 %151)
 %153 = load i8*, i8** %5
 %154 = getelementptr %struct.tdefl_compressor, i8* %153, i32 0, i32 36
 %155 = getelementptr [3 x [288 x i16]], i8* %154, i64 0, i64 1
 %156 = getelementptr [288 x i16], i8* %155, i64 0, i64 0
 %157 = load i8*, i8** %5
 %158 = getelementptr %struct.tdefl_compressor, i8* %157, i32 0, i32 36
 %159 = getelementptr [3 x [288 x i16]], i8* %158, i64 0, i64 1
 %160 = getelementptr [288 x i16], i8* %159, i64 0, i64 0
 %161 = call i64 @llvm.objectsize.i64.p0 (i8* %160, i1 0, i1 1, i1 0)
 %162 = call i8* @__memset_chk (i8* %156, i32 0, i64 64, i64 %161)
 ret i32 0
}

define i32 @mz_deflateEnd (i8* %0) {
 %2 = alloca i32
 %3 = alloca i8*
 store i8* %0, i8** %3
 %4 = load i8*, i8** %3
 %5 = icmp ne i8* %4, null
 br i1 %5, label %7, label %6
6:
 store i32 -2, i32* %2
 br label %25
7:
 %8 = load i8*, i8** %3
 %9 = getelementptr %struct.mz_stream_s, i8* %8, i32 0, i32 7
 %10 = load i8*, i8** %9
 %11 = icmp ne i8* %10, null
 br i1 %11, label %12, label %24
12:
 %13 = load i8*, i8** %3
 %14 = getelementptr %struct.mz_stream_s, i8* %13, i32 0, i32 9
 %15 = load i8*, i8** %14
 %16 = load i8*, i8** %3
 %17 = getelementptr %struct.mz_stream_s, i8* %16, i32 0, i32 10
 %18 = load i8*, i8** %17
 %19 = load i8*, i8** %3
 %20 = getelementptr %struct.mz_stream_s, i8* %19, i32 0, i32 7
 %21 = load i8*, i8** %20
 call void %15 (i8* %18, i8* %21)
 %22 = load i8*, i8** %3
 %23 = getelementptr %struct.mz_stream_s, i8* %22, i32 0, i32 7
 store i8* null, i8** %23
 br label %24
24:
 store i32 0, i32* %2
 br label %25
25:
 %26 = load i32, i32* %2
 ret i32 %26
}

define i32 @mz_deflateReset (i8* %0) {
 %2 = alloca i32
 %3 = alloca i8*
 store i8* %0, i8** %3
 %4 = load i8*, i8** %3
 %5 = icmp ne i8* %4, null
 br i1 %5, label %6, label %21
6:
 %7 = load i8*, i8** %3
 %8 = getelementptr %struct.mz_stream_s, i8* %7, i32 0, i32 7
 %9 = load i8*, i8** %8
 %10 = icmp ne i8* %9, null
 br i1 %10, label %11, label %21
11:
 %12 = load i8*, i8** %3
 %13 = getelementptr %struct.mz_stream_s, i8* %12, i32 0, i32 8
 %14 = load i8*, i8** %13
 %15 = icmp ne i8* %14, null
 br i1 %15, label %16, label %21
16:
 %17 = load i8*, i8** %3
 %18 = getelementptr %struct.mz_stream_s, i8* %17, i32 0, i32 9
 %19 = load i8*, i8** %18
 %20 = icmp ne i8* %19, null
 br i1 %20, label %22, label %21
21:
 store i32 -2, i32* %2
 br label %36
22:
 %23 = load i8*, i8** %3
 %24 = getelementptr %struct.mz_stream_s, i8* %23, i32 0, i32 5
 store i64 0, i64* %24
 %25 = load i8*, i8** %3
 %26 = getelementptr %struct.mz_stream_s, i8* %25, i32 0, i32 2
 store i64 0, i64* %26
 %27 = load i8*, i8** %3
 %28 = getelementptr %struct.mz_stream_s, i8* %27, i32 0, i32 7
 %29 = load i8*, i8** %28
 %30 = load i8*, i8** %3
 %31 = getelementptr %struct.mz_stream_s, i8* %30, i32 0, i32 7
 %32 = load i8*, i8** %31
 %33 = getelementptr %struct.tdefl_compressor, i8* %32, i32 0, i32 2
 %34 = load i32, i32* %33
 %35 = call i32 @tdefl_init (i8* %29, i8* null, i8* null, i32 %34)
 store i32 0, i32* %2
 br label %36
36:
 %37 = load i32, i32* %2
 ret i32 %37
}

define i32 @mz_deflate (i8* %0, i32 %1) {
 %3 = alloca i32
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i64
 %7 = alloca i64
 %8 = alloca i64
 %9 = alloca i64
 %10 = alloca i32
 %11 = alloca i32
 store i8* %0, i8** %4
 store i32 %1, i32* %5
 store i32 0, i32* %10
 %12 = load i8*, i8** %4
 %13 = icmp ne i8* %12, null
 br i1 %13, label %14, label %30
14:
 %15 = load i8*, i8** %4
 %16 = getelementptr %struct.mz_stream_s, i8* %15, i32 0, i32 7
 %17 = load i8*, i8** %16
 %18 = icmp ne i8* %17, null
 br i1 %18, label %19, label %30
19:
 %20 = load i32, i32* %5
 %21 = icmp slt i32 %20, 0
 br i1 %21, label %30, label %22
22:
 %23 = load i32, i32* %5
 %24 = icmp sgt i32 %23, 4
 br i1 %24, label %30, label %25
25:
 %26 = load i8*, i8** %4
 %27 = getelementptr %struct.mz_stream_s, i8* %26, i32 0, i32 3
 %28 = load i8*, i8** %27
 %29 = icmp ne i8* %28, null
 br i1 %29, label %31, label %30
30:
 store i32 -2, i32* %3
 br label %171
31:
 %32 = load i8*, i8** %4
 %33 = getelementptr %struct.mz_stream_s, i8* %32, i32 0, i32 4
 %34 = load i32, i32* %33
 %35 = icmp ne i32 %34, 0
 br i1 %35, label %37, label %36
36:
 store i32 -5, i32* %3
 br label %171
37:
 %38 = load i32, i32* %5
 %39 = icmp eq i32 %38, 1
 br i1 %39, label %40, label %41
40:
 store i32 2, i32* %5
 br label %41
41:
 %42 = load i8*, i8** %4
 %43 = getelementptr %struct.mz_stream_s, i8* %42, i32 0, i32 7
 %44 = load i8*, i8** %43
 %45 = getelementptr %struct.tdefl_compressor, i8* %44, i32 0, i32 26
 %46 = load i32, i32* %45
 %47 = icmp eq i32 %46, 1
 br i1 %47, label %48, label %53
48:
 %49 = load i32, i32* %5
 %50 = icmp eq i32 %49, 4
 %51 = zext i1 %50 to i64
 %52 = select i1 %50, i32 1, i32 -5
 store i32 %52, i32* %3
 br label %171
53:
 %54 = load i8*, i8** %4
 %55 = getelementptr %struct.mz_stream_s, i8* %54, i32 0, i32 2
 %56 = load i64, i64* %55
 store i64 %56, i64* %8
 %57 = load i8*, i8** %4
 %58 = getelementptr %struct.mz_stream_s, i8* %57, i32 0, i32 5
 %59 = load i64, i64* %58
 store i64 %59, i64* %9
 br label %60
60:
 %61 = load i8*, i8** %4
 %62 = getelementptr %struct.mz_stream_s, i8* %61, i32 0, i32 1
 %63 = load i32, i32* %62
 %64 = zext i32 %63 to i64
 store i64 %64, i64* %6
 %65 = load i8*, i8** %4
 %66 = getelementptr %struct.mz_stream_s, i8* %65, i32 0, i32 4
 %67 = load i32, i32* %66
 %68 = zext i32 %67 to i64
 store i64 %68, i64* %7
 %69 = load i8*, i8** %4
 %70 = getelementptr %struct.mz_stream_s, i8* %69, i32 0, i32 7
 %71 = load i8*, i8** %70
 %72 = load i8*, i8** %4
 %73 = getelementptr %struct.mz_stream_s, i8* %72, i32 0, i32 0
 %74 = load i8*, i8** %73
 %75 = load i8*, i8** %4
 %76 = getelementptr %struct.mz_stream_s, i8* %75, i32 0, i32 3
 %77 = load i8*, i8** %76
 %78 = load i32, i32* %5
 %79 = call i32 @tdefl_compress (i8* %71, i8* %74, i8* %6, i8* %77, i8* %7, i32 %78)
 store i32 %79, i32* %11
 %80 = load i64, i64* %6
 %81 = trunc i64 %80 to i32
 %82 = load i8*, i8** %4
 %83 = getelementptr %struct.mz_stream_s, i8* %82, i32 0, i32 0
 %84 = load i8*, i8** %83
 %85 = zext i32 %81 to i64
 %86 = getelementptr i8, i8* %84, i64 %85
 store i8* %86, i8** %83
 %87 = load i64, i64* %6
 %88 = trunc i64 %87 to i32
 %89 = load i8*, i8** %4
 %90 = getelementptr %struct.mz_stream_s, i8* %89, i32 0, i32 1
 %91 = load i32, i32* %90
 %92 = sub i32 %91, %88
 store i32 %92, i32* %90
 %93 = load i64, i64* %6
 %94 = trunc i64 %93 to i32
 %95 = zext i32 %94 to i64
 %96 = load i8*, i8** %4
 %97 = getelementptr %struct.mz_stream_s, i8* %96, i32 0, i32 2
 %98 = load i64, i64* %97
 %99 = add i64 %98, %95
 store i64 %99, i64* %97
 %100 = load i8*, i8** %4
 %101 = getelementptr %struct.mz_stream_s, i8* %100, i32 0, i32 7
 %102 = load i8*, i8** %101
 %103 = call i32 @tdefl_get_adler32 (i8* %102)
 %104 = zext i32 %103 to i64
 %105 = load i8*, i8** %4
 %106 = getelementptr %struct.mz_stream_s, i8* %105, i32 0, i32 12
 store i64 %104, i64* %106
 %107 = load i64, i64* %7
 %108 = trunc i64 %107 to i32
 %109 = load i8*, i8** %4
 %110 = getelementptr %struct.mz_stream_s, i8* %109, i32 0, i32 3
 %111 = load i8*, i8** %110
 %112 = zext i32 %108 to i64
 %113 = getelementptr i8, i8* %111, i64 %112
 store i8* %113, i8** %110
 %114 = load i64, i64* %7
 %115 = trunc i64 %114 to i32
 %116 = load i8*, i8** %4
 %117 = getelementptr %struct.mz_stream_s, i8* %116, i32 0, i32 4
 %118 = load i32, i32* %117
 %119 = sub i32 %118, %115
 store i32 %119, i32* %117
 %120 = load i64, i64* %7
 %121 = trunc i64 %120 to i32
 %122 = zext i32 %121 to i64
 %123 = load i8*, i8** %4
 %124 = getelementptr %struct.mz_stream_s, i8* %123, i32 0, i32 5
 %125 = load i64, i64* %124
 %126 = add i64 %125, %122
 store i64 %126, i64* %124
 %127 = load i32, i32* %11
 %128 = icmp slt i32 %127, 0
 br i1 %128, label %129, label %130
129:
 store i32 -2, i32* %10
 br label %169
130:
 %131 = load i32, i32* %11
 %132 = icmp eq i32 %131, 1
 br i1 %132, label %133, label %134
133:
 store i32 1, i32* %10
 br label %169
134:
 %135 = load i8*, i8** %4
 %136 = getelementptr %struct.mz_stream_s, i8* %135, i32 0, i32 4
 %137 = load i32, i32* %136
 %138 = icmp ne i32 %137, 0
 br i1 %138, label %140, label %139
139:
 br label %169
140:
 %141 = load i8*, i8** %4
 %142 = getelementptr %struct.mz_stream_s, i8* %141, i32 0, i32 1
 %143 = load i32, i32* %142
 %144 = icmp ne i32 %143, 0
 br i1 %144, label %165, label %145
145:
 %146 = load i32, i32* %5
 %147 = icmp ne i32 %146, 4
 br i1 %147, label %148, label %165
148:
 %149 = load i32, i32* %5
 %150 = icmp ne i32 %149, 0
 br i1 %150, label %163, label %151
151:
 %152 = load i8*, i8** %4
 %153 = getelementptr %struct.mz_stream_s, i8* %152, i32 0, i32 2
 %154 = load i64, i64* %153
 %155 = load i64, i64* %8
 %156 = icmp ne i64 %154, %155
 br i1 %156, label %163, label %157
157:
 %158 = load i8*, i8** %4
 %159 = getelementptr %struct.mz_stream_s, i8* %158, i32 0, i32 5
 %160 = load i64, i64* %159
 %161 = load i64, i64* %9
 %162 = icmp ne i64 %160, %161
 br i1 %162, label %163, label %164
163:
 br label %169
164:
 store i32 -5, i32* %3
 br label %171
165:
 br label %166
166:
 br label %167
167:
 br label %168
168:
 br label %60
169:
 %170 = load i32, i32* %10
 store i32 %170, i32* %3
 br label %171
171:
 %172 = load i32, i32* %3
 ret i32 %172
}

define i32 @tdefl_compress (i8* %0, i8* %1, i8* %2, i8* %3, i8* %4, i32 %5) {
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i8*
 %10 = alloca i8*
 %11 = alloca i8*
 %12 = alloca i8*
 %13 = alloca i32
 store i8* %0, i8** %8
 store i8* %1, i8** %9
 store i8* %2, i8** %10
 store i8* %3, i8** %11
 store i8* %4, i8** %12
 store i32 %5, i32* %13
 %14 = load i8*, i8** %8
 %15 = icmp ne i8* %14, null
 br i1 %15, label %27, label %16
16:
 %17 = load i8*, i8** %10
 %18 = icmp ne i8* %17, null
 br i1 %18, label %19, label %21
19:
 %20 = load i8*, i8** %10
 store i64 0, i64* %20
 br label %21
21:
 %22 = load i8*, i8** %12
 %23 = icmp ne i8* %22, null
 br i1 %23, label %24, label %26
24:
 %25 = load i8*, i8** %12
 store i64 0, i64* %25
 br label %26
26:
 store i32 -2, i32* %7
 br label %234
27:
 %28 = load i8*, i8** %9
 %29 = load i8*, i8** %8
 %30 = getelementptr %struct.tdefl_compressor, i8* %29, i32 0, i32 27
 store i8* %28, i8** %30
 %31 = load i8*, i8** %10
 %32 = load i8*, i8** %8
 %33 = getelementptr %struct.tdefl_compressor, i8* %32, i32 0, i32 29
 store i8* %31, i8** %33
 %34 = load i8*, i8** %11
 %35 = load i8*, i8** %8
 %36 = getelementptr %struct.tdefl_compressor, i8* %35, i32 0, i32 28
 store i8* %34, i8** %36
 %37 = load i8*, i8** %12
 %38 = load i8*, i8** %8
 %39 = getelementptr %struct.tdefl_compressor, i8* %38, i32 0, i32 30
 store i8* %37, i8** %39
 %40 = load i8*, i8** %9
 %41 = load i8*, i8** %8
 %42 = getelementptr %struct.tdefl_compressor, i8* %41, i32 0, i32 32
 store i8* %40, i8** %42
 %43 = load i8*, i8** %10
 %44 = icmp ne i8* %43, null
 br i1 %44, label %45, label %48
45:
 %46 = load i8*, i8** %10
 %47 = load i64, i64* %46
 br label %49
48:
 br label %49
49:
 %50 = phi i64 [%47, %45], [0, %48]
 %51 = load i8*, i8** %8
 %52 = getelementptr %struct.tdefl_compressor, i8* %51, i32 0, i32 33
 store i64 %50, i64* %52
 %53 = load i8*, i8** %8
 %54 = getelementptr %struct.tdefl_compressor, i8* %53, i32 0, i32 34
 store i64 0, i64* %54
 %55 = load i32, i32* %13
 %56 = load i8*, i8** %8
 %57 = getelementptr %struct.tdefl_compressor, i8* %56, i32 0, i32 31
 store i32 %55, i32* %57
 %58 = load i8*, i8** %8
 %59 = getelementptr %struct.tdefl_compressor, i8* %58, i32 0, i32 0
 %60 = load i8*, i8** %59
 %61 = icmp ne i8* %60, null
 %62 = zext i1 %61 to i32
 %63 = load i8*, i8** %11
 %64 = icmp ne i8* %63, null
 br i1 %64, label %68, label %65
65:
 %66 = load i8*, i8** %12
 %67 = icmp ne i8* %66, null
 br label %68
68:
 %69 = phi i1 [1, %49], [%67, %65]
 %70 = zext i1 %69 to i32
 %71 = icmp eq i32 %62, %70
 br i1 %71, label %105, label %72
72:
 %73 = load i8*, i8** %8
 %74 = getelementptr %struct.tdefl_compressor, i8* %73, i32 0, i32 26
 %75 = load i32, i32* %74
 %76 = icmp ne i32 %75, 0
 br i1 %76, label %105, label %77
77:
 %78 = load i8*, i8** %8
 %79 = getelementptr %struct.tdefl_compressor, i8* %78, i32 0, i32 25
 %80 = load i32, i32* %79
 %81 = icmp ne i32 %80, 0
 br i1 %81, label %82, label %85
82:
 %83 = load i32, i32* %13
 %84 = icmp ne i32 %83, 4
 br i1 %84, label %105, label %85
85:
 %86 = load i8*, i8** %10
 %87 = icmp ne i8* %86, null
 br i1 %87, label %88, label %95
88:
 %89 = load i8*, i8** %10
 %90 = load i64, i64* %89
 %91 = icmp ne i64 %90, 0
 br i1 %91, label %92, label %95
92:
 %93 = load i8*, i8** %9
 %94 = icmp ne i8* %93, null
 br i1 %94, label %95, label %105
95:
 %96 = load i8*, i8** %12
 %97 = icmp ne i8* %96, null
 br i1 %97, label %98, label %118
98:
 %99 = load i8*, i8** %12
 %100 = load i64, i64* %99
 %101 = icmp ne i64 %100, 0
 br i1 %101, label %102, label %118
102:
 %103 = load i8*, i8** %11
 %104 = icmp ne i8* %103, null
 br i1 %104, label %118, label %105
105:
 %106 = load i8*, i8** %10
 %107 = icmp ne i8* %106, null
 br i1 %107, label %108, label %110
108:
 %109 = load i8*, i8** %10
 store i64 0, i64* %109
 br label %110
110:
 %111 = load i8*, i8** %12
 %112 = icmp ne i8* %111, null
 br i1 %112, label %113, label %115
113:
 %114 = load i8*, i8** %12
 store i64 0, i64* %114
 br label %115
115:
 %116 = load i8*, i8** %8
 %117 = getelementptr %struct.tdefl_compressor, i8* %116, i32 0, i32 26
 store i32 -2, i32* %117
 store i32 -2, i32* %7
 br label %234
118:
 %119 = load i32, i32* %13
 %120 = icmp eq i32 %119, 4
 %121 = zext i1 %120 to i32
 %122 = load i8*, i8** %8
 %123 = getelementptr %struct.tdefl_compressor, i8* %122, i32 0, i32 25
 %124 = load i32, i32* %123
 %125 = or i32 %124, %121
 store i32 %125, i32* %123
 %126 = load i8*, i8** %8
 %127 = getelementptr %struct.tdefl_compressor, i8* %126, i32 0, i32 22
 %128 = load i32, i32* %127
 %129 = icmp ne i32 %128, 0
 br i1 %129, label %135, label %130
130:
 %131 = load i8*, i8** %8
 %132 = getelementptr %struct.tdefl_compressor, i8* %131, i32 0, i32 23
 %133 = load i32, i32* %132
 %134 = icmp ne i32 %133, 0
 br i1 %134, label %135, label %140
135:
 %136 = load i8*, i8** %8
 %137 = call i32 @tdefl_flush_output_buffer (i8* %136)
 %138 = load i8*, i8** %8
 %139 = getelementptr %struct.tdefl_compressor, i8* %138, i32 0, i32 26
 store i32 %137, i32* %139
 store i32 %137, i32* %7
 br label %234
140:
 %141 = load i8*, i8** %8
 %142 = call i32 @tdefl_compress_normal (i8* %141)
 %143 = icmp ne i32 %142, 0
 br i1 %143, label %148, label %144
144:
 %145 = load i8*, i8** %8
 %146 = getelementptr %struct.tdefl_compressor, i8* %145, i32 0, i32 26
 %147 = load i32, i32* %146
 store i32 %147, i32* %7
 br label %234
148:
 %149 = load i8*, i8** %8
 %150 = getelementptr %struct.tdefl_compressor, i8* %149, i32 0, i32 2
 %151 = load i32, i32* %150
 %152 = and i32 %151, 12288
 %153 = icmp ne i32 %152, 0
 br i1 %153, label %154, label %174
154:
 %155 = load i8*, i8** %9
 %156 = icmp ne i8* %155, null
 br i1 %156, label %157, label %174
157:
 %158 = load i8*, i8** %8
 %159 = getelementptr %struct.tdefl_compressor, i8* %158, i32 0, i32 5
 %160 = load i32, i32* %159
 %161 = zext i32 %160 to i64
 %162 = load i8*, i8** %9
 %163 = load i8*, i8** %8
 %164 = getelementptr %struct.tdefl_compressor, i8* %163, i32 0, i32 32
 %165 = load i8*, i8** %164
 %166 = load i8*, i8** %9
 %167 = ptrtoint i8** %165 to i64
 %168 = ptrtoint i8** %166 to i64
 %169 = sub i64 %167, %168
 %170 = call i64 @mz_adler32 (i64 %161, i8* %162, i64 %169)
 %171 = trunc i64 %170 to i32
 %172 = load i8*, i8** %8
 %173 = getelementptr %struct.tdefl_compressor, i8* %172, i32 0, i32 5
 store i32 %171, i32* %173
 br label %174
174:
 %175 = load i32, i32* %13
 %176 = icmp ne i32 %175, 0
 br i1 %176, label %177, label %229
177:
 %178 = load i8*, i8** %8
 %179 = getelementptr %struct.tdefl_compressor, i8* %178, i32 0, i32 7
 %180 = load i32, i32* %179
 %181 = icmp ne i32 %180, 0
 br i1 %181, label %229, label %182
182:
 %183 = load i8*, i8** %8
 %184 = getelementptr %struct.tdefl_compressor, i8* %183, i32 0, i32 33
 %185 = load i64, i64* %184
 %186 = icmp ne i64 %185, 0
 br i1 %186, label %229, label %187
187:
 %188 = load i8*, i8** %8
 %189 = getelementptr %struct.tdefl_compressor, i8* %188, i32 0, i32 22
 %190 = load i32, i32* %189
 %191 = icmp ne i32 %190, 0
 br i1 %191, label %229, label %192
192:
 %193 = load i8*, i8** %8
 %194 = load i32, i32* %13
 %195 = call i32 @tdefl_flush_block (i8* %193, i32 %194)
 %196 = icmp slt i32 %195, 0
 br i1 %196, label %197, label %201
197:
 %198 = load i8*, i8** %8
 %199 = getelementptr %struct.tdefl_compressor, i8* %198, i32 0, i32 26
 %200 = load i32, i32* %199
 store i32 %200, i32* %7
 br label %234
201:
 %202 = load i32, i32* %13
 %203 = icmp eq i32 %202, 4
 %204 = zext i1 %203 to i32
 %205 = load i8*, i8** %8
 %206 = getelementptr %struct.tdefl_compressor, i8* %205, i32 0, i32 23
 store i32 %204, i32* %206
 %207 = load i32, i32* %13
 %208 = icmp eq i32 %207, 3
 br i1 %208, label %209, label %228
209:
 %210 = load i8*, i8** %8
 %211 = getelementptr %struct.tdefl_compressor, i8* %210, i32 0, i32 41
 %212 = getelementptr [32768 x i16], i8* %211, i64 0, i64 0
 %213 = load i8*, i8** %8
 %214 = getelementptr %struct.tdefl_compressor, i8* %213, i32 0, i32 41
 %215 = getelementptr [32768 x i16], i8* %214, i64 0, i64 0
 %216 = call i64 @llvm.objectsize.i64.p0 (i8* %215, i1 0, i1 1, i1 0)
 %217 = call i8* @__memset_chk (i8* %212, i32 0, i64 65536, i64 %216)
 %218 = load i8*, i8** %8
 %219 = getelementptr %struct.tdefl_compressor, i8* %218, i32 0, i32 40
 %220 = getelementptr [32768 x i16], i8* %219, i64 0, i64 0
 %221 = load i8*, i8** %8
 %222 = getelementptr %struct.tdefl_compressor, i8* %221, i32 0, i32 40
 %223 = getelementptr [32768 x i16], i8* %222, i64 0, i64 0
 %224 = call i64 @llvm.objectsize.i64.p0 (i8* %223, i1 0, i1 1, i1 0)
 %225 = call i8* @__memset_chk (i8* %220, i32 0, i64 65536, i64 %224)
 %226 = load i8*, i8** %8
 %227 = getelementptr %struct.tdefl_compressor, i8* %226, i32 0, i32 8
 store i32 0, i32* %227
 br label %228
228:
 br label %229
229:
 %230 = load i8*, i8** %8
 %231 = call i32 @tdefl_flush_output_buffer (i8* %230)
 %232 = load i8*, i8** %8
 %233 = getelementptr %struct.tdefl_compressor, i8* %232, i32 0, i32 26
 store i32 %231, i32* %233
 store i32 %231, i32* %7
 br label %234
234:
 %235 = load i32, i32* %7
 ret i32 %235
}

define i32 @tdefl_get_adler32 (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 %4 = getelementptr %struct.tdefl_compressor, i8* %3, i32 0, i32 5
 %5 = load i32, i32* %4
 ret i32 %5
}

define i64 @mz_deflateBound (i8* %0, i64 %1) {
 %3 = alloca i8*
 %4 = alloca i64
 store i8* %0, i8** %3
 store i64 %1, i64* %4
 %5 = load i8*, i8** %3
 %6 = load i64, i64* %4
 %7 = mul i64 %6, 110
 %8 = udiv i64 %7, 100
 %9 = add i64 128, %8
 %10 = load i64, i64* %4
 %11 = add i64 128, %10
 %12 = load i64, i64* %4
 %13 = udiv i64 %12, 31744
 %14 = add i64 %13, 1
 %15 = mul i64 %14, 5
 %16 = add i64 %11, %15
 %17 = icmp ugt i64 %9, %16
 br i1 %17, label %18, label %23
18:
 %19 = load i64, i64* %4
 %20 = mul i64 %19, 110
 %21 = udiv i64 %20, 100
 %22 = add i64 128, %21
 br label %31
23:
 %24 = load i64, i64* %4
 %25 = add i64 128, %24
 %26 = load i64, i64* %4
 %27 = udiv i64 %26, 31744
 %28 = add i64 %27, 1
 %29 = mul i64 %28, 5
 %30 = add i64 %25, %29
 br label %31
31:
 %32 = phi i64 [%22, %18], [%30, %23]
 ret i64 %32
}

define i32 @mz_compress2 (i8* %0, i8* %1, i8* %2, i64 %3, i32 %4) {
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i8*
 %10 = alloca i64
 %11 = alloca i32
 %12 = alloca i32
 %13 = alloca %struct.mz_stream_s
 store i8* %0, i8** %7
 store i8* %1, i8** %8
 store i8* %2, i8** %9
 store i64 %3, i64* %10
 store i32 %4, i32* %11
 call void @memset (i8* %13, i8 0, i64 112, i1 0)
 %14 = load i64, i64* %10
 %15 = load i8*, i8** %8
 %16 = load i64, i64* %15
 %17 = or i64 %14, %16
 %18 = icmp ugt i64 %17, 4294967295
 br i1 %18, label %19, label %20
19:
 store i32 -10000, i32* %6
 br label %56
20:
 %21 = load i8*, i8** %9
 %22 = getelementptr %struct.mz_stream_s, i8* %13, i32 0, i32 0
 store i8* %21, i8** %22
 %23 = load i64, i64* %10
 %24 = trunc i64 %23 to i32
 %25 = getelementptr %struct.mz_stream_s, i8* %13, i32 0, i32 1
 store i32 %24, i32* %25
 %26 = load i8*, i8** %7
 %27 = getelementptr %struct.mz_stream_s, i8* %13, i32 0, i32 3
 store i8* %26, i8** %27
 %28 = load i8*, i8** %8
 %29 = load i64, i64* %28
 %30 = trunc i64 %29 to i32
 %31 = getelementptr %struct.mz_stream_s, i8* %13, i32 0, i32 4
 store i32 %30, i32* %31
 %32 = load i32, i32* %11
 %33 = call i32 @mz_deflateInit (i8* %13, i32 %32)
 store i32 %33, i32* %12
 %34 = load i32, i32* %12
 %35 = icmp ne i32 %34, 0
 br i1 %35, label %36, label %38
36:
 %37 = load i32, i32* %12
 store i32 %37, i32* %6
 br label %56
38:
 %39 = call i32 @mz_deflate (i8* %13, i32 4)
 store i32 %39, i32* %12
 %40 = load i32, i32* %12
 %41 = icmp ne i32 %40, 1
 br i1 %41, label %42, label %51
42:
 %43 = call i32 @mz_deflateEnd (i8* %13)
 %44 = load i32, i32* %12
 %45 = icmp eq i32 %44, 0
 br i1 %45, label %46, label %47
46:
 br label %49
47:
 %48 = load i32, i32* %12
 br label %49
49:
 %50 = phi i32 [-5, %46], [%48, %47]
 store i32 %50, i32* %6
 br label %56
51:
 %52 = getelementptr %struct.mz_stream_s, i8* %13, i32 0, i32 5
 %53 = load i64, i64* %52
 %54 = load i8*, i8** %8
 store i64 %53, i64* %54
 %55 = call i32 @mz_deflateEnd (i8* %13)
 store i32 %55, i32* %6
 br label %56
56:
 %57 = load i32, i32* %6
 ret i32 %57
}

define i32 @mz_compress (i8* %0, i8* %1, i8* %2, i64 %3) {
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i64
 store i8* %0, i8** %5
 store i8* %1, i8** %6
 store i8* %2, i8** %7
 store i64 %3, i64* %8
 %9 = load i8*, i8** %5
 %10 = load i8*, i8** %6
 %11 = load i8*, i8** %7
 %12 = load i64, i64* %8
 %13 = call i32 @mz_compress2 (i8* %9, i8* %10, i8* %11, i64 %12, i32 -1)
 ret i32 %13
}

define i64 @mz_compressBound (i64 %0) {
 %2 = alloca i64
 store i64 %0, i64* %2
 %3 = load i64, i64* %2
 %4 = call i64 @mz_deflateBound (i8* null, i64 %3)
 ret i64 %4
}

define i32 @mz_inflateInit2 (i8* %0, i32 %1) {
 %3 = alloca i32
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i8*
 store i8* %0, i8** %4
 store i32 %1, i32* %5
 %7 = load i8*, i8** %4
 %8 = icmp ne i8* %7, null
 br i1 %8, label %10, label %9
9:
 store i32 -2, i32* %3
 br label %79
10:
 %11 = load i32, i32* %5
 %12 = icmp ne i32 %11, 15
 br i1 %12, label %13, label %18
13:
 %14 = load i32, i32* %5
 %15 = sub i32 0, %14
 %16 = icmp ne i32 %15, 15
 br i1 %16, label %17, label %18
17:
 store i32 -10000, i32* %3
 br label %79
18:
 %19 = load i8*, i8** %4
 %20 = getelementptr %struct.mz_stream_s, i8* %19, i32 0, i32 11
 store i32 0, i32* %20
 %21 = load i8*, i8** %4
 %22 = getelementptr %struct.mz_stream_s, i8* %21, i32 0, i32 12
 store i64 0, i64* %22
 %23 = load i8*, i8** %4
 %24 = getelementptr %struct.mz_stream_s, i8* %23, i32 0, i32 6
 store i8* null, i8** %24
 %25 = load i8*, i8** %4
 %26 = getelementptr %struct.mz_stream_s, i8* %25, i32 0, i32 2
 store i64 0, i64* %26
 %27 = load i8*, i8** %4
 %28 = getelementptr %struct.mz_stream_s, i8* %27, i32 0, i32 5
 store i64 0, i64* %28
 %29 = load i8*, i8** %4
 %30 = getelementptr %struct.mz_stream_s, i8* %29, i32 0, i32 13
 store i64 0, i64* %30
 %31 = load i8*, i8** %4
 %32 = getelementptr %struct.mz_stream_s, i8* %31, i32 0, i32 8
 %33 = load i8*, i8** %32
 %34 = icmp ne i8* %33, null
 br i1 %34, label %38, label %35
35:
 %36 = load i8*, i8** %4
 %37 = getelementptr %struct.mz_stream_s, i8* %36, i32 0, i32 8
 store i8* @miniz_def_alloc_func, i8** %37
 br label %38
38:
 %39 = load i8*, i8** %4
 %40 = getelementptr %struct.mz_stream_s, i8* %39, i32 0, i32 9
 %41 = load i8*, i8** %40
 %42 = icmp ne i8* %41, null
 br i1 %42, label %46, label %43
43:
 %44 = load i8*, i8** %4
 %45 = getelementptr %struct.mz_stream_s, i8* %44, i32 0, i32 9
 store i8* @miniz_def_free_func, i8** %45
 br label %46
46:
 %47 = load i8*, i8** %4
 %48 = getelementptr %struct.mz_stream_s, i8* %47, i32 0, i32 8
 %49 = load i8*, i8** %48
 %50 = load i8*, i8** %4
 %51 = getelementptr %struct.mz_stream_s, i8* %50, i32 0, i32 10
 %52 = load i8*, i8** %51
 %53 = call i8* %49 (i8* %52, i64 1, i64 41168)
 store i8* %53, i8** %6
 %54 = load i8*, i8** %6
 %55 = icmp ne i8* %54, null
 br i1 %55, label %57, label %56
56:
 store i32 -4, i32* %3
 br label %79
57:
 %58 = load i8*, i8** %6
 %59 = load i8*, i8** %4
 %60 = getelementptr %struct.mz_stream_s, i8* %59, i32 0, i32 7
 store i8* %58, i8** %60
 br label %61
61:
 %62 = load i8*, i8** %6
 %63 = getelementptr %struct.inflate_state, i8* %62, i32 0, i32 0
 %64 = getelementptr %struct.tinfl_decompressor_tag, i8* %63, i32 0, i32 0
 store i32 0, i32* %64
 br label %65
65:
 %66 = load i8*, i8** %6
 %67 = getelementptr %struct.inflate_state, i8* %66, i32 0, i32 1
 store i32 0, i32* %67
 %68 = load i8*, i8** %6
 %69 = getelementptr %struct.inflate_state, i8* %68, i32 0, i32 2
 store i32 0, i32* %69
 %70 = load i8*, i8** %6
 %71 = getelementptr %struct.inflate_state, i8* %70, i32 0, i32 7
 store i32 1, i32* %71
 %72 = load i8*, i8** %6
 %73 = getelementptr %struct.inflate_state, i8* %72, i32 0, i32 3
 store i32 1, i32* %73
 %74 = load i8*, i8** %6
 %75 = getelementptr %struct.inflate_state, i8* %74, i32 0, i32 4
 store i32 0, i32* %75
 %76 = load i32, i32* %5
 %77 = load i8*, i8** %6
 %78 = getelementptr %struct.inflate_state, i8* %77, i32 0, i32 5
 store i32 %76, i32* %78
 store i32 0, i32* %3
 br label %79
79:
 %80 = load i32, i32* %3
 ret i32 %80
}

define i32 @mz_inflateInit (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 %4 = call i32 @mz_inflateInit2 (i8* %3, i32 15)
 ret i32 %4
}

define i32 @mz_inflateReset (i8* %0) {
 %2 = alloca i32
 %3 = alloca i8*
 %4 = alloca i8*
 store i8* %0, i8** %3
 %5 = load i8*, i8** %3
 %6 = icmp ne i8* %5, null
 br i1 %6, label %8, label %7
7:
 store i32 -2, i32* %2
 br label %39
8:
 %9 = load i8*, i8** %3
 %10 = getelementptr %struct.mz_stream_s, i8* %9, i32 0, i32 11
 store i32 0, i32* %10
 %11 = load i8*, i8** %3
 %12 = getelementptr %struct.mz_stream_s, i8* %11, i32 0, i32 12
 store i64 0, i64* %12
 %13 = load i8*, i8** %3
 %14 = getelementptr %struct.mz_stream_s, i8* %13, i32 0, i32 6
 store i8* null, i8** %14
 %15 = load i8*, i8** %3
 %16 = getelementptr %struct.mz_stream_s, i8* %15, i32 0, i32 2
 store i64 0, i64* %16
 %17 = load i8*, i8** %3
 %18 = getelementptr %struct.mz_stream_s, i8* %17, i32 0, i32 5
 store i64 0, i64* %18
 %19 = load i8*, i8** %3
 %20 = getelementptr %struct.mz_stream_s, i8* %19, i32 0, i32 13
 store i64 0, i64* %20
 %21 = load i8*, i8** %3
 %22 = getelementptr %struct.mz_stream_s, i8* %21, i32 0, i32 7
 %23 = load i8*, i8** %22
 store i8* %23, i8** %4
 br label %24
24:
 %25 = load i8*, i8** %4
 %26 = getelementptr %struct.inflate_state, i8* %25, i32 0, i32 0
 %27 = getelementptr %struct.tinfl_decompressor_tag, i8* %26, i32 0, i32 0
 store i32 0, i32* %27
 br label %28
28:
 %29 = load i8*, i8** %4
 %30 = getelementptr %struct.inflate_state, i8* %29, i32 0, i32 1
 store i32 0, i32* %30
 %31 = load i8*, i8** %4
 %32 = getelementptr %struct.inflate_state, i8* %31, i32 0, i32 2
 store i32 0, i32* %32
 %33 = load i8*, i8** %4
 %34 = getelementptr %struct.inflate_state, i8* %33, i32 0, i32 7
 store i32 1, i32* %34
 %35 = load i8*, i8** %4
 %36 = getelementptr %struct.inflate_state, i8* %35, i32 0, i32 3
 store i32 1, i32* %36
 %37 = load i8*, i8** %4
 %38 = getelementptr %struct.inflate_state, i8* %37, i32 0, i32 4
 store i32 0, i32* %38
 store i32 0, i32* %2
 br label %39
39:
 %40 = load i32, i32* %2
 ret i32 %40
}

define i32 @mz_inflate (i8* %0, i32 %1) {
 %3 = alloca i32
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i32
 %9 = alloca i32
 %10 = alloca i64
 %11 = alloca i64
 %12 = alloca i64
 %13 = alloca i32
 store i8* %0, i8** %4
 store i32 %1, i32* %5
 store i32 8, i32* %9
 %14 = load i8*, i8** %4
 %15 = icmp ne i8* %14, null
 br i1 %15, label %16, label %21
16:
 %17 = load i8*, i8** %4
 %18 = getelementptr %struct.mz_stream_s, i8* %17, i32 0, i32 7
 %19 = load i8*, i8** %18
 %20 = icmp ne i8* %19, null
 br i1 %20, label %22, label %21
21:
 store i32 -2, i32* %3
 br label %455
22:
 %23 = load i32, i32* %5
 %24 = icmp eq i32 %23, 1
 br i1 %24, label %25, label %26
25:
 store i32 2, i32* %5
 br label %26
26:
 %27 = load i32, i32* %5
 %28 = icmp ne i32 %27, 0
 br i1 %28, label %29, label %36
29:
 %30 = load i32, i32* %5
 %31 = icmp ne i32 %30, 2
 br i1 %31, label %32, label %36
32:
 %33 = load i32, i32* %5
 %34 = icmp ne i32 %33, 4
 br i1 %34, label %35, label %36
35:
 store i32 -2, i32* %3
 br label %455
36:
 %37 = load i8*, i8** %4
 %38 = getelementptr %struct.mz_stream_s, i8* %37, i32 0, i32 7
 %39 = load i8*, i8** %38
 store i8* %39, i8** %6
 %40 = load i8*, i8** %6
 %41 = getelementptr %struct.inflate_state, i8* %40, i32 0, i32 5
 %42 = load i32, i32* %41
 %43 = icmp sgt i32 %42, 0
 br i1 %43, label %44, label %47
44:
 %45 = load i32, i32* %9
 %46 = or i32 %45, 1
 store i32 %46, i32* %9
 br label %47
47:
 %48 = load i8*, i8** %4
 %49 = getelementptr %struct.mz_stream_s, i8* %48, i32 0, i32 1
 %50 = load i32, i32* %49
 %51 = zext i32 %50 to i64
 store i64 %51, i64* %12
 %52 = load i8*, i8** %6
 %53 = getelementptr %struct.inflate_state, i8* %52, i32 0, i32 3
 %54 = load i32, i32* %53
 store i32 %54, i32* %8
 %55 = load i8*, i8** %6
 %56 = getelementptr %struct.inflate_state, i8* %55, i32 0, i32 3
 store i32 0, i32* %56
 %57 = load i8*, i8** %6
 %58 = getelementptr %struct.inflate_state, i8* %57, i32 0, i32 7
 %59 = load i32, i32* %58
 %60 = icmp slt i32 %59, 0
 br i1 %60, label %61, label %62
61:
 store i32 -3, i32* %3
 br label %455
62:
 %63 = load i8*, i8** %6
 %64 = getelementptr %struct.inflate_state, i8* %63, i32 0, i32 4
 %65 = load i32, i32* %64
 %66 = icmp ne i32 %65, 0
 br i1 %66, label %67, label %71
67:
 %68 = load i32, i32* %5
 %69 = icmp ne i32 %68, 4
 br i1 %69, label %70, label %71
70:
 store i32 -2, i32* %3
 br label %455
71:
 %72 = load i32, i32* %5
 %73 = icmp eq i32 %72, 4
 %74 = zext i1 %73 to i32
 %75 = load i8*, i8** %6
 %76 = getelementptr %struct.inflate_state, i8* %75, i32 0, i32 4
 %77 = load i32, i32* %76
 %78 = or i32 %77, %74
 store i32 %78, i32* %76
 %79 = load i32, i32* %5
 %80 = icmp eq i32 %79, 4
 br i1 %80, label %81, label %169
81:
 %82 = load i32, i32* %8
 %83 = icmp ne i32 %82, 0
 br i1 %83, label %84, label %169
84:
 %85 = load i32, i32* %9
 %86 = or i32 %85, 4
 store i32 %86, i32* %9
 %87 = load i8*, i8** %4
 %88 = getelementptr %struct.mz_stream_s, i8* %87, i32 0, i32 1
 %89 = load i32, i32* %88
 %90 = zext i32 %89 to i64
 store i64 %90, i64* %10
 %91 = load i8*, i8** %4
 %92 = getelementptr %struct.mz_stream_s, i8* %91, i32 0, i32 4
 %93 = load i32, i32* %92
 %94 = zext i32 %93 to i64
 store i64 %94, i64* %11
 %95 = load i8*, i8** %6
 %96 = getelementptr %struct.inflate_state, i8* %95, i32 0, i32 0
 %97 = load i8*, i8** %4
 %98 = getelementptr %struct.mz_stream_s, i8* %97, i32 0, i32 0
 %99 = load i8*, i8** %98
 %100 = load i8*, i8** %4
 %101 = getelementptr %struct.mz_stream_s, i8* %100, i32 0, i32 3
 %102 = load i8*, i8** %101
 %103 = load i8*, i8** %4
 %104 = getelementptr %struct.mz_stream_s, i8* %103, i32 0, i32 3
 %105 = load i8*, i8** %104
 %106 = load i32, i32* %9
 %107 = call i32 @tinfl_decompress (i8* %96, i8* %99, i8* %10, i8* %102, i8* %105, i8* %11, i32 %106)
 store i32 %107, i32* %13
 %108 = load i32, i32* %13
 %109 = load i8*, i8** %6
 %110 = getelementptr %struct.inflate_state, i8* %109, i32 0, i32 7
 store i32 %108, i32* %110
 %111 = load i64, i64* %10
 %112 = trunc i64 %111 to i32
 %113 = load i8*, i8** %4
 %114 = getelementptr %struct.mz_stream_s, i8* %113, i32 0, i32 0
 %115 = load i8*, i8** %114
 %116 = zext i32 %112 to i64
 %117 = getelementptr i8, i8* %115, i64 %116
 store i8* %117, i8** %114
 %118 = load i64, i64* %10
 %119 = trunc i64 %118 to i32
 %120 = load i8*, i8** %4
 %121 = getelementptr %struct.mz_stream_s, i8* %120, i32 0, i32 1
 %122 = load i32, i32* %121
 %123 = sub i32 %122, %119
 store i32 %123, i32* %121
 %124 = load i64, i64* %10
 %125 = trunc i64 %124 to i32
 %126 = zext i32 %125 to i64
 %127 = load i8*, i8** %4
 %128 = getelementptr %struct.mz_stream_s, i8* %127, i32 0, i32 2
 %129 = load i64, i64* %128
 %130 = add i64 %129, %126
 store i64 %130, i64* %128
 %131 = load i8*, i8** %6
 %132 = getelementptr %struct.inflate_state, i8* %131, i32 0, i32 0
 %133 = getelementptr %struct.tinfl_decompressor_tag, i8* %132, i32 0, i32 7
 %134 = load i32, i32* %133
 %135 = zext i32 %134 to i64
 %136 = load i8*, i8** %4
 %137 = getelementptr %struct.mz_stream_s, i8* %136, i32 0, i32 12
 store i64 %135, i64* %137
 %138 = load i64, i64* %11
 %139 = trunc i64 %138 to i32
 %140 = load i8*, i8** %4
 %141 = getelementptr %struct.mz_stream_s, i8* %140, i32 0, i32 3
 %142 = load i8*, i8** %141
 %143 = zext i32 %139 to i64
 %144 = getelementptr i8, i8* %142, i64 %143
 store i8* %144, i8** %141
 %145 = load i64, i64* %11
 %146 = trunc i64 %145 to i32
 %147 = load i8*, i8** %4
 %148 = getelementptr %struct.mz_stream_s, i8* %147, i32 0, i32 4
 %149 = load i32, i32* %148
 %150 = sub i32 %149, %146
 store i32 %150, i32* %148
 %151 = load i64, i64* %11
 %152 = trunc i64 %151 to i32
 %153 = zext i32 %152 to i64
 %154 = load i8*, i8** %4
 %155 = getelementptr %struct.mz_stream_s, i8* %154, i32 0, i32 5
 %156 = load i64, i64* %155
 %157 = add i64 %156, %153
 store i64 %157, i64* %155
 %158 = load i32, i32* %13
 %159 = icmp slt i32 %158, 0
 br i1 %159, label %160, label %161
160:
 store i32 -3, i32* %3
 br label %455
161:
 %162 = load i32, i32* %13
 %163 = icmp ne i32 %162, 0
 br i1 %163, label %164, label %167
164:
 %165 = load i8*, i8** %6
 %166 = getelementptr %struct.inflate_state, i8* %165, i32 0, i32 7
 store i32 -1, i32* %166
 store i32 -5, i32* %3
 br label %455
167:
 br label %168
168:
 store i32 1, i32* %3
 br label %455
169:
 %170 = load i32, i32* %5
 %171 = icmp ne i32 %170, 4
 br i1 %171, label %172, label %175
172:
 %173 = load i32, i32* %9
 %174 = or i32 %173, 2
 store i32 %174, i32* %9
 br label %175
175:
 %176 = load i8*, i8** %6
 %177 = getelementptr %struct.inflate_state, i8* %176, i32 0, i32 2
 %178 = load i32, i32* %177
 %179 = icmp ne i32 %178, 0
 br i1 %179, label %180, label %260
180:
 %181 = load i8*, i8** %6
 %182 = getelementptr %struct.inflate_state, i8* %181, i32 0, i32 2
 %183 = load i32, i32* %182
 %184 = load i8*, i8** %4
 %185 = getelementptr %struct.mz_stream_s, i8* %184, i32 0, i32 4
 %186 = load i32, i32* %185
 %187 = icmp ult i32 %183, %186
 br i1 %187, label %188, label %192
188:
 %189 = load i8*, i8** %6
 %190 = getelementptr %struct.inflate_state, i8* %189, i32 0, i32 2
 %191 = load i32, i32* %190
 br label %196
192:
 %193 = load i8*, i8** %4
 %194 = getelementptr %struct.mz_stream_s, i8* %193, i32 0, i32 4
 %195 = load i32, i32* %194
 br label %196
196:
 %197 = phi i32 [%191, %188], [%195, %192]
 store i32 %197, i32* %7
 %198 = load i8*, i8** %4
 %199 = getelementptr %struct.mz_stream_s, i8* %198, i32 0, i32 3
 %200 = load i8*, i8** %199
 %201 = load i8*, i8** %6
 %202 = getelementptr %struct.inflate_state, i8* %201, i32 0, i32 6
 %203 = getelementptr [32768 x i8], i8* %202, i64 0, i64 0
 %204 = load i8*, i8** %6
 %205 = getelementptr %struct.inflate_state, i8* %204, i32 0, i32 1
 %206 = load i32, i32* %205
 %207 = zext i32 %206 to i64
 %208 = getelementptr i8, i8* %203, i64 %207
 %209 = load i32, i32* %7
 %210 = zext i32 %209 to i64
 %211 = load i8*, i8** %4
 %212 = getelementptr %struct.mz_stream_s, i8* %211, i32 0, i32 3
 %213 = load i8*, i8** %212
 %214 = call i64 @llvm.objectsize.i64.p0 (i8* %213, i1 0, i1 1, i1 0)
 %215 = call i8* @__memcpy_chk (i8* %200, i8* %208, i64 %210, i64 %214)
 %216 = load i32, i32* %7
 %217 = load i8*, i8** %4
 %218 = getelementptr %struct.mz_stream_s, i8* %217, i32 0, i32 3
 %219 = load i8*, i8** %218
 %220 = zext i32 %216 to i64
 %221 = getelementptr i8, i8* %219, i64 %220
 store i8* %221, i8** %218
 %222 = load i32, i32* %7
 %223 = load i8*, i8** %4
 %224 = getelementptr %struct.mz_stream_s, i8* %223, i32 0, i32 4
 %225 = load i32, i32* %224
 %226 = sub i32 %225, %222
 store i32 %226, i32* %224
 %227 = load i32, i32* %7
 %228 = zext i32 %227 to i64
 %229 = load i8*, i8** %4
 %230 = getelementptr %struct.mz_stream_s, i8* %229, i32 0, i32 5
 %231 = load i64, i64* %230
 %232 = add i64 %231, %228
 store i64 %232, i64* %230
 %233 = load i32, i32* %7
 %234 = load i8*, i8** %6
 %235 = getelementptr %struct.inflate_state, i8* %234, i32 0, i32 2
 %236 = load i32, i32* %235
 %237 = sub i32 %236, %233
 store i32 %237, i32* %235
 %238 = load i8*, i8** %6
 %239 = getelementptr %struct.inflate_state, i8* %238, i32 0, i32 1
 %240 = load i32, i32* %239
 %241 = load i32, i32* %7
 %242 = add i32 %240, %241
 %243 = and i32 %242, 32767
 %244 = load i8*, i8** %6
 %245 = getelementptr %struct.inflate_state, i8* %244, i32 0, i32 1
 store i32 %243, i32* %245
 %246 = load i8*, i8** %6
 %247 = getelementptr %struct.inflate_state, i8* %246, i32 0, i32 7
 %248 = load i32, i32* %247
 %249 = icmp eq i32 %248, 0
 br i1 %249, label %250, label %256
250:
 %251 = load i8*, i8** %6
 %252 = getelementptr %struct.inflate_state, i8* %251, i32 0, i32 2
 %253 = load i32, i32* %252
 %254 = icmp ne i32 %253, 0
 %255 = xor i1 %254, 1
 br label %256
256:
 %257 = phi i1 [0, %196], [%255, %250]
 %258 = zext i1 %257 to i64
 %259 = select i1 %257, i32 1, i32 0
 store i32 %259, i32* %3
 br label %455
260:
 br label %261
261:
 %262 = load i8*, i8** %4
 %263 = getelementptr %struct.mz_stream_s, i8* %262, i32 0, i32 1
 %264 = load i32, i32* %263
 %265 = zext i32 %264 to i64
 store i64 %265, i64* %10
 %266 = load i8*, i8** %6
 %267 = getelementptr %struct.inflate_state, i8* %266, i32 0, i32 1
 %268 = load i32, i32* %267
 %269 = sub i32 32768, %268
 %270 = zext i32 %269 to i64
 store i64 %270, i64* %11
 %271 = load i8*, i8** %6
 %272 = getelementptr %struct.inflate_state, i8* %271, i32 0, i32 0
 %273 = load i8*, i8** %4
 %274 = getelementptr %struct.mz_stream_s, i8* %273, i32 0, i32 0
 %275 = load i8*, i8** %274
 %276 = load i8*, i8** %6
 %277 = getelementptr %struct.inflate_state, i8* %276, i32 0, i32 6
 %278 = getelementptr [32768 x i8], i8* %277, i64 0, i64 0
 %279 = load i8*, i8** %6
 %280 = getelementptr %struct.inflate_state, i8* %279, i32 0, i32 6
 %281 = getelementptr [32768 x i8], i8* %280, i64 0, i64 0
 %282 = load i8*, i8** %6
 %283 = getelementptr %struct.inflate_state, i8* %282, i32 0, i32 1
 %284 = load i32, i32* %283
 %285 = zext i32 %284 to i64
 %286 = getelementptr i8, i8* %281, i64 %285
 %287 = load i32, i32* %9
 %288 = call i32 @tinfl_decompress (i8* %272, i8* %275, i8* %10, i8* %278, i8* %286, i8* %11, i32 %287)
 store i32 %288, i32* %13
 %289 = load i32, i32* %13
 %290 = load i8*, i8** %6
 %291 = getelementptr %struct.inflate_state, i8* %290, i32 0, i32 7
 store i32 %289, i32* %291
 %292 = load i64, i64* %10
 %293 = trunc i64 %292 to i32
 %294 = load i8*, i8** %4
 %295 = getelementptr %struct.mz_stream_s, i8* %294, i32 0, i32 0
 %296 = load i8*, i8** %295
 %297 = zext i32 %293 to i64
 %298 = getelementptr i8, i8* %296, i64 %297
 store i8* %298, i8** %295
 %299 = load i64, i64* %10
 %300 = trunc i64 %299 to i32
 %301 = load i8*, i8** %4
 %302 = getelementptr %struct.mz_stream_s, i8* %301, i32 0, i32 1
 %303 = load i32, i32* %302
 %304 = sub i32 %303, %300
 store i32 %304, i32* %302
 %305 = load i64, i64* %10
 %306 = trunc i64 %305 to i32
 %307 = zext i32 %306 to i64
 %308 = load i8*, i8** %4
 %309 = getelementptr %struct.mz_stream_s, i8* %308, i32 0, i32 2
 %310 = load i64, i64* %309
 %311 = add i64 %310, %307
 store i64 %311, i64* %309
 %312 = load i8*, i8** %6
 %313 = getelementptr %struct.inflate_state, i8* %312, i32 0, i32 0
 %314 = getelementptr %struct.tinfl_decompressor_tag, i8* %313, i32 0, i32 7
 %315 = load i32, i32* %314
 %316 = zext i32 %315 to i64
 %317 = load i8*, i8** %4
 %318 = getelementptr %struct.mz_stream_s, i8* %317, i32 0, i32 12
 store i64 %316, i64* %318
 %319 = load i64, i64* %11
 %320 = trunc i64 %319 to i32
 %321 = load i8*, i8** %6
 %322 = getelementptr %struct.inflate_state, i8* %321, i32 0, i32 2
 store i32 %320, i32* %322
 %323 = load i8*, i8** %6
 %324 = getelementptr %struct.inflate_state, i8* %323, i32 0, i32 2
 %325 = load i32, i32* %324
 %326 = load i8*, i8** %4
 %327 = getelementptr %struct.mz_stream_s, i8* %326, i32 0, i32 4
 %328 = load i32, i32* %327
 %329 = icmp ult i32 %325, %328
 br i1 %329, label %330, label %334
330:
 %331 = load i8*, i8** %6
 %332 = getelementptr %struct.inflate_state, i8* %331, i32 0, i32 2
 %333 = load i32, i32* %332
 br label %338
334:
 %335 = load i8*, i8** %4
 %336 = getelementptr %struct.mz_stream_s, i8* %335, i32 0, i32 4
 %337 = load i32, i32* %336
 br label %338
338:
 %339 = phi i32 [%333, %330], [%337, %334]
 store i32 %339, i32* %7
 %340 = load i8*, i8** %4
 %341 = getelementptr %struct.mz_stream_s, i8* %340, i32 0, i32 3
 %342 = load i8*, i8** %341
 %343 = load i8*, i8** %6
 %344 = getelementptr %struct.inflate_state, i8* %343, i32 0, i32 6
 %345 = getelementptr [32768 x i8], i8* %344, i64 0, i64 0
 %346 = load i8*, i8** %6
 %347 = getelementptr %struct.inflate_state, i8* %346, i32 0, i32 1
 %348 = load i32, i32* %347
 %349 = zext i32 %348 to i64
 %350 = getelementptr i8, i8* %345, i64 %349
 %351 = load i32, i32* %7
 %352 = zext i32 %351 to i64
 %353 = load i8*, i8** %4
 %354 = getelementptr %struct.mz_stream_s, i8* %353, i32 0, i32 3
 %355 = load i8*, i8** %354
 %356 = call i64 @llvm.objectsize.i64.p0 (i8* %355, i1 0, i1 1, i1 0)
 %357 = call i8* @__memcpy_chk (i8* %342, i8* %350, i64 %352, i64 %356)
 %358 = load i32, i32* %7
 %359 = load i8*, i8** %4
 %360 = getelementptr %struct.mz_stream_s, i8* %359, i32 0, i32 3
 %361 = load i8*, i8** %360
 %362 = zext i32 %358 to i64
 %363 = getelementptr i8, i8* %361, i64 %362
 store i8* %363, i8** %360
 %364 = load i32, i32* %7
 %365 = load i8*, i8** %4
 %366 = getelementptr %struct.mz_stream_s, i8* %365, i32 0, i32 4
 %367 = load i32, i32* %366
 %368 = sub i32 %367, %364
 store i32 %368, i32* %366
 %369 = load i32, i32* %7
 %370 = zext i32 %369 to i64
 %371 = load i8*, i8** %4
 %372 = getelementptr %struct.mz_stream_s, i8* %371, i32 0, i32 5
 %373 = load i64, i64* %372
 %374 = add i64 %373, %370
 store i64 %374, i64* %372
 %375 = load i32, i32* %7
 %376 = load i8*, i8** %6
 %377 = getelementptr %struct.inflate_state, i8* %376, i32 0, i32 2
 %378 = load i32, i32* %377
 %379 = sub i32 %378, %375
 store i32 %379, i32* %377
 %380 = load i8*, i8** %6
 %381 = getelementptr %struct.inflate_state, i8* %380, i32 0, i32 1
 %382 = load i32, i32* %381
 %383 = load i32, i32* %7
 %384 = add i32 %382, %383
 %385 = and i32 %384, 32767
 %386 = load i8*, i8** %6
 %387 = getelementptr %struct.inflate_state, i8* %386, i32 0, i32 1
 store i32 %385, i32* %387
 %388 = load i32, i32* %13
 %389 = icmp slt i32 %388, 0
 br i1 %389, label %390, label %391
390:
 store i32 -3, i32* %3
 br label %455
391:
 %392 = load i32, i32* %13
 %393 = icmp eq i32 %392, 1
 br i1 %393, label %394, label %398
394:
 %395 = load i64, i64* %12
 %396 = icmp ne i64 %395, 0
 br i1 %396, label %398, label %397
397:
 store i32 -5, i32* %3
 br label %455
398:
 %399 = load i32, i32* %5
 %400 = icmp eq i32 %399, 4
 br i1 %400, label %401, label %419
401:
 %402 = load i32, i32* %13
 %403 = icmp eq i32 %402, 0
 br i1 %403, label %404, label %411
404:
 %405 = load i8*, i8** %6
 %406 = getelementptr %struct.inflate_state, i8* %405, i32 0, i32 2
 %407 = load i32, i32* %406
 %408 = icmp ne i32 %407, 0
 %409 = zext i1 %408 to i64
 %410 = select i1 %408, i32 -5, i32 1
 store i32 %410, i32* %3
 br label %455
411:
 %412 = load i8*, i8** %4
 %413 = getelementptr %struct.mz_stream_s, i8* %412, i32 0, i32 4
 %414 = load i32, i32* %413
 %415 = icmp ne i32 %414, 0
 br i1 %415, label %417, label %416
416:
 store i32 -5, i32* %3
 br label %455
417:
 br label %418
418:
 br label %439
419:
 %420 = load i32, i32* %13
 %421 = icmp eq i32 %420, 0
 br i1 %421, label %437, label %422
422:
 %423 = load i8*, i8** %4
 %424 = getelementptr %struct.mz_stream_s, i8* %423, i32 0, i32 1
 %425 = load i32, i32* %424
 %426 = icmp ne i32 %425, 0
 br i1 %426, label %427, label %437
427:
 %428 = load i8*, i8** %4
 %429 = getelementptr %struct.mz_stream_s, i8* %428, i32 0, i32 4
 %430 = load i32, i32* %429
 %431 = icmp ne i32 %430, 0
 br i1 %431, label %432, label %437
432:
 %433 = load i8*, i8** %6
 %434 = getelementptr %struct.inflate_state, i8* %433, i32 0, i32 2
 %435 = load i32, i32* %434
 %436 = icmp ne i32 %435, 0
 br i1 %436, label %437, label %438
437:
 br label %442
438:
 br label %439
439:
 br label %440
440:
 br label %441
441:
 br label %261
442:
 %443 = load i32, i32* %13
 %444 = icmp eq i32 %443, 0
 br i1 %444, label %445, label %451
445:
 %446 = load i8*, i8** %6
 %447 = getelementptr %struct.inflate_state, i8* %446, i32 0, i32 2
 %448 = load i32, i32* %447
 %449 = icmp ne i32 %448, 0
 %450 = xor i1 %449, 1
 br label %451
451:
 %452 = phi i1 [0, %442], [%450, %445]
 %453 = zext i1 %452 to i64
 %454 = select i1 %452, i32 1, i32 0
 store i32 %454, i32* %3
 br label %455
455:
 %456 = load i32, i32* %3
 ret i32 %456
}

define i32 @tinfl_decompress (i8* %0, i8* %1, i8* %2, i8* %3, i8* %4, i8* %5, i32 %6) {
 %8 = alloca i32
 %9 = alloca i8*
 %10 = alloca i8*
 %11 = alloca i8*
 %12 = alloca i8*
 %13 = alloca i8*
 %14 = alloca i8*
 %15 = alloca i32
 %16 = alloca [3 x i8*]
 %17 = alloca [3 x i8*]
 %18 = alloca i32
 %19 = alloca i32
 %20 = alloca i32
 %21 = alloca i32
 %22 = alloca i32
 %23 = alloca i64
 %24 = alloca i8*
 %25 = alloca i8*
 %26 = alloca i8*
 %27 = alloca i8*
 %28 = alloca i64
 %29 = alloca i64
 %30 = alloca i32
 %31 = alloca i32
 %32 = alloca i32
 %33 = alloca i32
 %34 = alloca i64
 %35 = alloca i8*
 %36 = alloca i32
 %37 = alloca i32
 %38 = alloca i32
 %39 = alloca i32
 %40 = alloca i32
 %41 = alloca i32
 %42 = alloca i8*
 %43 = alloca i8*
 %44 = alloca i8*
 %45 = alloca i32
 %46 = alloca i32
 %47 = alloca i32
 %48 = alloca i32
 %49 = alloca i32
 %50 = alloca [17 x i32]
 %51 = alloca [16 x i32]
 %52 = alloca i32
 %53 = alloca i32
 %54 = alloca i32
 %55 = alloca i32
 %56 = alloca i16
 %57 = alloca i32
 %58 = alloca i32
 %59 = alloca i32
 %60 = alloca i32
 %61 = alloca i32
 %62 = alloca i8*
 %63 = alloca i32
 %64 = alloca i32
 %65 = alloca i32
 %66 = alloca i32
 %67 = alloca i32
 %68 = alloca i32
 %69 = alloca i32
 %70 = alloca i32
 %71 = alloca i32
 %72 = alloca i32
 %73 = alloca i32
 %74 = alloca i32
 %75 = alloca i32
 %76 = alloca i32
 %77 = alloca i32
 %78 = alloca i8*
 %79 = alloca i64
 %80 = alloca i32
 %81 = alloca i32
 %82 = alloca i32
 %83 = alloca i64
 store i8* %0, i8** %9
 store i8* %1, i8** %10
 store i8* %2, i8** %11
 store i8* %3, i8** %12
 store i8* %4, i8** %13
 store i8* %5, i8** %14
 store i32 %6, i32* %15
 store i32 -1, i32* %18
 %84 = load i8*, i8** %10
 store i8* %84, i8** %24
 %85 = load i8*, i8** %10
 %86 = load i8*, i8** %11
 %87 = load i64, i64* %86
 %88 = getelementptr i8, i8* %85, i64 %87
 store i8* %88, i8** %25
 %89 = load i8*, i8** %13
 store i8* %89, i8** %26
 %90 = load i8*, i8** %13
 %91 = icmp ne i8* %90, null
 br i1 %91, label %92, label %97
92:
 %93 = load i8*, i8** %13
 %94 = load i8*, i8** %14
 %95 = load i64, i64* %94
 %96 = getelementptr i8, i8* %93, i64 %95
 br label %98
97:
 br label %98
98:
 %99 = phi i8* [%96, %92], [null, %97]
 store i8* %99, i8** %27
 %100 = load i32, i32* %15
 %101 = and i32 %100, 4
 %102 = icmp ne i32 %101, 0
 br i1 %102, label %103, label %104
103:
 br label %114
104:
 %105 = load i8*, i8** %13
 %106 = load i8*, i8** %12
 %107 = ptrtoint i8** %105 to i64
 %108 = ptrtoint i8** %106 to i64
 %109 = sub i64 %107, %108
 %110 = load i8*, i8** %14
 %111 = load i64, i64* %110
 %112 = add i64 %109, %111
 %113 = sub i64 %112, 1
 br label %114
114:
 %115 = phi i64 [-1, %103], [%113, %104]
 store i64 %115, i64* %28
 %116 = load i64, i64* %28
 %117 = add i64 %116, 1
 %118 = load i64, i64* %28
 %119 = and i64 %117, %118
 %120 = icmp ne i64 %119, 0
 br i1 %120, label %125, label %121
121:
 %122 = load i8*, i8** %13
 %123 = load i8*, i8** %12
 %124 = icmp ult i8* %122, %123
 br i1 %124, label %125, label %128
125:
 %126 = load i8*, i8** %14
 store i64 0, i64* %126
 %127 = load i8*, i8** %11
 store i64 0, i64* %127
 store i32 -3, i32* %8
 br label %2874
128:
 %129 = load i8*, i8** %9
 %130 = getelementptr %struct.tinfl_decompressor_tag, i8* %129, i32 0, i32 15
 %131 = getelementptr [576 x i16], i8* %130, i64 0, i64 0
 %132 = getelementptr [3 x i8*], i8* %16, i64 0, i64 0
 store i8* %131, i8** %132
 %133 = load i8*, i8** %9
 %134 = getelementptr %struct.tinfl_decompressor_tag, i8* %133, i32 0, i32 16
 %135 = getelementptr [64 x i16], i8* %134, i64 0, i64 0
 %136 = getelementptr [3 x i8*], i8* %16, i64 0, i64 1
 store i8* %135, i8** %136
 %137 = load i8*, i8** %9
 %138 = getelementptr %struct.tinfl_decompressor_tag, i8* %137, i32 0, i32 17
 %139 = getelementptr [38 x i16], i8* %138, i64 0, i64 0
 %140 = getelementptr [3 x i8*], i8* %16, i64 0, i64 2
 store i8* %139, i8** %140
 %141 = load i8*, i8** %9
 %142 = getelementptr %struct.tinfl_decompressor_tag, i8* %141, i32 0, i32 18
 %143 = getelementptr [288 x i8], i8* %142, i64 0, i64 0
 %144 = getelementptr [3 x i8*], i8* %17, i64 0, i64 0
 store i8* %143, i8** %144
 %145 = load i8*, i8** %9
 %146 = getelementptr %struct.tinfl_decompressor_tag, i8* %145, i32 0, i32 19
 %147 = getelementptr [32 x i8], i8* %146, i64 0, i64 0
 %148 = getelementptr [3 x i8*], i8* %17, i64 0, i64 1
 store i8* %147, i8** %148
 %149 = load i8*, i8** %9
 %150 = getelementptr %struct.tinfl_decompressor_tag, i8* %149, i32 0, i32 20
 %151 = getelementptr [19 x i8], i8* %150, i64 0, i64 0
 %152 = getelementptr [3 x i8*], i8* %17, i64 0, i64 2
 store i8* %151, i8** %152
 %153 = load i8*, i8** %9
 %154 = getelementptr %struct.tinfl_decompressor_tag, i8* %153, i32 0, i32 1
 %155 = load i32, i32* %154
 store i32 %155, i32* %19
 %156 = load i8*, i8** %9
 %157 = getelementptr %struct.tinfl_decompressor_tag, i8* %156, i32 0, i32 12
 %158 = load i64, i64* %157
 store i64 %158, i64* %23
 %159 = load i8*, i8** %9
 %160 = getelementptr %struct.tinfl_decompressor_tag, i8* %159, i32 0, i32 8
 %161 = load i32, i32* %160
 store i32 %161, i32* %20
 %162 = load i8*, i8** %9
 %163 = getelementptr %struct.tinfl_decompressor_tag, i8* %162, i32 0, i32 9
 %164 = load i32, i32* %163
 store i32 %164, i32* %21
 %165 = load i8*, i8** %9
 %166 = getelementptr %struct.tinfl_decompressor_tag, i8* %165, i32 0, i32 10
 %167 = load i32, i32* %166
 store i32 %167, i32* %22
 %168 = load i8*, i8** %9
 %169 = getelementptr %struct.tinfl_decompressor_tag, i8* %168, i32 0, i32 13
 %170 = load i64, i64* %169
 store i64 %170, i64* %29
 %171 = load i8*, i8** %9
 %172 = getelementptr %struct.tinfl_decompressor_tag, i8* %171, i32 0, i32 0
 %173 = load i32, i32* %172
 switch i32 %173, label %2655 [
    i32 0, label %174
    i32 1, label %201
    i32 2, label %225
    i32 36, label %296
    i32 3, label %321
    i32 5, label %385
    i32 6, label %445
    i32 7, label %495
    i32 39, label %544
    i32 51, label %576
    i32 52, label %614
    i32 9, label %636
    i32 38, label %652
    i32 10, label %742
    i32 11, label %837
    i32 14, label %947
    i32 35, label %1090
    i32 16, label %1345
    i32 17, label %1459
    i32 18, label %1489
    i32 21, label %1586
    i32 23, label %1735
    i32 24, label %1838
    i32 25, label %2030
    i32 26, label %2156
    i32 27, label %2280
    i32 37, label %2347
    i32 53, label %2387
    i32 32, label %2484
    i32 41, label %2580
    i32 42, label %2625
    i32 34, label %2652
  ]
174:
 %175 = load i8*, i8** %9
 %176 = getelementptr %struct.tinfl_decompressor_tag, i8* %175, i32 0, i32 3
 store i32 0, i32* %176
 %177 = load i8*, i8** %9
 %178 = getelementptr %struct.tinfl_decompressor_tag, i8* %177, i32 0, i32 2
 store i32 0, i32* %178
 store i32 0, i32* %22
 store i32 0, i32* %21
 store i32 0, i32* %20
 store i32 0, i32* %19
 store i64 0, i64* %23
 %179 = load i8*, i8** %9
 %180 = getelementptr %struct.tinfl_decompressor_tag, i8* %179, i32 0, i32 7
 store i32 1, i32* %180
 %181 = load i8*, i8** %9
 %182 = getelementptr %struct.tinfl_decompressor_tag, i8* %181, i32 0, i32 4
 store i32 1, i32* %182
 %183 = load i32, i32* %15
 %184 = and i32 %183, 1
 %185 = icmp ne i32 %184, 0
 br i1 %185, label %186, label %300
186:
 br label %187
187:
 br label %188
188:
 %189 = load i8*, i8** %24
 %190 = load i8*, i8** %25
 %191 = icmp uge i8* %189, %190
 br i1 %191, label %192, label %203
192:
 br label %193
193:
 %194 = load i32, i32* %15
 %195 = and i32 %194, 2
 %196 = icmp ne i32 %195, 0
 %197 = zext i1 %196 to i64
 %198 = select i1 %196, i32 1, i32 -4
 store i32 %198, i32* %18
 %199 = load i8*, i8** %9
 %200 = getelementptr %struct.tinfl_decompressor_tag, i8* %199, i32 0, i32 0
 store i32 1, i32* %200
 br label %2656
201:
 br label %202
202:
 br label %188
203:
 %204 = load i8*, i8** %24
 %205 = getelementptr i8, i8* %204, i32 1
 store i8* %205, i8** %24
 %206 = load i8, i8* %204
 %207 = zext i8 %206 to i32
 %208 = load i8*, i8** %9
 %209 = getelementptr %struct.tinfl_decompressor_tag, i8* %208, i32 0, i32 2
 store i32 %207, i32* %209
 br label %210
210:
 br label %211
211:
 br label %212
212:
 %213 = load i8*, i8** %24
 %214 = load i8*, i8** %25
 %215 = icmp uge i8* %213, %214
 br i1 %215, label %216, label %227
216:
 br label %217
217:
 %218 = load i32, i32* %15
 %219 = and i32 %218, 2
 %220 = icmp ne i32 %219, 0
 %221 = zext i1 %220 to i64
 %222 = select i1 %220, i32 1, i32 -4
 store i32 %222, i32* %18
 %223 = load i8*, i8** %9
 %224 = getelementptr %struct.tinfl_decompressor_tag, i8* %223, i32 0, i32 0
 store i32 2, i32* %224
 br label %2656
225:
 br label %226
226:
 br label %212
227:
 %228 = load i8*, i8** %24
 %229 = getelementptr i8, i8* %228, i32 1
 store i8* %229, i8** %24
 %230 = load i8, i8* %228
 %231 = zext i8 %230 to i32
 %232 = load i8*, i8** %9
 %233 = getelementptr %struct.tinfl_decompressor_tag, i8* %232, i32 0, i32 3
 store i32 %231, i32* %233
 br label %234
234:
 %235 = load i8*, i8** %9
 %236 = getelementptr %struct.tinfl_decompressor_tag, i8* %235, i32 0, i32 2
 %237 = load i32, i32* %236
 %238 = mul i32 %237, 256
 %239 = load i8*, i8** %9
 %240 = getelementptr %struct.tinfl_decompressor_tag, i8* %239, i32 0, i32 3
 %241 = load i32, i32* %240
 %242 = add i32 %238, %241
 %243 = urem i32 %242, 31
 %244 = icmp ne i32 %243, 0
 br i1 %244, label %257, label %245
245:
 %246 = load i8*, i8** %9
 %247 = getelementptr %struct.tinfl_decompressor_tag, i8* %246, i32 0, i32 3
 %248 = load i32, i32* %247
 %249 = and i32 %248, 32
 %250 = icmp ne i32 %249, 0
 br i1 %250, label %257, label %251
251:
 %252 = load i8*, i8** %9
 %253 = getelementptr %struct.tinfl_decompressor_tag, i8* %252, i32 0, i32 2
 %254 = load i32, i32* %253
 %255 = and i32 %254, 15
 %256 = icmp ne i32 %255, 8
 br label %257
257:
 %258 = phi i1 [1, %245], [1, %234], [%256, %251]
 %259 = zext i1 %258 to i32
 store i32 %259, i32* %21
 %260 = load i32, i32* %15
 %261 = and i32 %260, 4
 %262 = icmp ne i32 %261, 0
 br i1 %262, label %287, label %263
263:
 %264 = load i8*, i8** %9
 %265 = getelementptr %struct.tinfl_decompressor_tag, i8* %264, i32 0, i32 2
 %266 = load i32, i32* %265
 %267 = lshr i32 %266, 4
 %268 = add i32 8, %267
 %269 = shl i32 1, %268
 %270 = icmp ugt i32 %269, 32768
 br i1 %270, label %282, label %271
271:
 %272 = load i64, i64* %28
 %273 = add i64 %272, 1
 %274 = load i8*, i8** %9
 %275 = getelementptr %struct.tinfl_decompressor_tag, i8* %274, i32 0, i32 2
 %276 = load i32, i32* %275
 %277 = lshr i32 %276, 4
 %278 = add i32 8, %277
 %279 = zext i32 %278 to i64
 %280 = shl i64 1, %279
 %281 = icmp ult i64 %273, %280
 br label %282
282:
 %283 = phi i1 [1, %263], [%281, %271]
 %284 = zext i1 %283 to i32
 %285 = load i32, i32* %21
 %286 = or i32 %285, %284
 store i32 %286, i32* %21
 br label %287
287:
 %288 = load i32, i32* %21
 %289 = icmp ne i32 %288, 0
 br i1 %289, label %290, label %299
290:
 br label %291
291:
 br label %292
292:
 br label %293
293:
 store i32 -1, i32* %18
 %294 = load i8*, i8** %9
 %295 = getelementptr %struct.tinfl_decompressor_tag, i8* %294, i32 0, i32 0
 store i32 36, i32* %295
 br label %2656
296:
 br label %297
297:
 br label %292
298:
 br label %299
299:
 br label %300
300:
 br label %301
301:
 br label %302
302:
 %303 = load i32, i32* %19
 %304 = icmp ult i32 %303, 3
 br i1 %304, label %305, label %342
305:
 br label %306
306:
 br label %307
307:
 br label %308
308:
 %309 = load i8*, i8** %24
 %310 = load i8*, i8** %25
 %311 = icmp uge i8* %309, %310
 br i1 %311, label %312, label %323
312:
 br label %313
313:
 %314 = load i32, i32* %15
 %315 = and i32 %314, 2
 %316 = icmp ne i32 %315, 0
 %317 = zext i1 %316 to i64
 %318 = select i1 %316, i32 1, i32 -4
 store i32 %318, i32* %18
 %319 = load i8*, i8** %9
 %320 = getelementptr %struct.tinfl_decompressor_tag, i8* %319, i32 0, i32 0
 store i32 3, i32* %320
 br label %2656
321:
 br label %322
322:
 br label %308
323:
 %324 = load i8*, i8** %24
 %325 = getelementptr i8, i8* %324, i32 1
 store i8* %325, i8** %24
 %326 = load i8, i8* %324
 %327 = zext i8 %326 to i32
 store i32 %327, i32* %30
 br label %328
328:
 %329 = load i32, i32* %30
 %330 = zext i32 %329 to i64
 %331 = load i32, i32* %19
 %332 = zext i32 %331 to i64
 %333 = shl i64 %330, %332
 %334 = load i64, i64* %23
 %335 = or i64 %334, %333
 store i64 %335, i64* %23
 %336 = load i32, i32* %19
 %337 = add i32 %336, 8
 store i32 %337, i32* %19
 br label %338
338:
 %339 = load i32, i32* %19
 %340 = icmp ult i32 %339, 3
 br i1 %340, label %306, label %341
341:
 br label %342
342:
 %343 = load i64, i64* %23
 %344 = and i64 %343, 7
 %345 = trunc i64 %344 to i32
 %346 = load i8*, i8** %9
 %347 = getelementptr %struct.tinfl_decompressor_tag, i8* %346, i32 0, i32 5
 store i32 %345, i32* %347
 %348 = load i64, i64* %23
 %349 = lshr i64 %348, 3
 store i64 %349, i64* %23
 %350 = load i32, i32* %19
 %351 = sub i32 %350, 3
 store i32 %351, i32* %19
 br label %352
352:
 %353 = load i8*, i8** %9
 %354 = getelementptr %struct.tinfl_decompressor_tag, i8* %353, i32 0, i32 5
 %355 = load i32, i32* %354
 %356 = lshr i32 %355, 1
 %357 = load i8*, i8** %9
 %358 = getelementptr %struct.tinfl_decompressor_tag, i8* %357, i32 0, i32 6
 store i32 %356, i32* %358
 %359 = load i8*, i8** %9
 %360 = getelementptr %struct.tinfl_decompressor_tag, i8* %359, i32 0, i32 6
 %361 = load i32, i32* %360
 %362 = icmp eq i32 %361, 0
 br i1 %362, label %363, label %731
363:
 br label %364
364:
 %365 = load i32, i32* %19
 %366 = load i32, i32* %19
 %367 = and i32 %366, 7
 %368 = icmp ult i32 %365, %367
 br i1 %368, label %369, label %408
369:
 br label %370
370:
 br label %371
371:
 br label %372
372:
 %373 = load i8*, i8** %24
 %374 = load i8*, i8** %25
 %375 = icmp uge i8* %373, %374
 br i1 %375, label %376, label %387
376:
 br label %377
377:
 %378 = load i32, i32* %15
 %379 = and i32 %378, 2
 %380 = icmp ne i32 %379, 0
 %381 = zext i1 %380 to i64
 %382 = select i1 %380, i32 1, i32 -4
 store i32 %382, i32* %18
 %383 = load i8*, i8** %9
 %384 = getelementptr %struct.tinfl_decompressor_tag, i8* %383, i32 0, i32 0
 store i32 5, i32* %384
 br label %2656
385:
 br label %386
386:
 br label %372
387:
 %388 = load i8*, i8** %24
 %389 = getelementptr i8, i8* %388, i32 1
 store i8* %389, i8** %24
 %390 = load i8, i8* %388
 %391 = zext i8 %390 to i32
 store i32 %391, i32* %31
 br label %392
392:
 %393 = load i32, i32* %31
 %394 = zext i32 %393 to i64
 %395 = load i32, i32* %19
 %396 = zext i32 %395 to i64
 %397 = shl i64 %394, %396
 %398 = load i64, i64* %23
 %399 = or i64 %398, %397
 store i64 %399, i64* %23
 %400 = load i32, i32* %19
 %401 = add i32 %400, 8
 store i32 %401, i32* %19
 br label %402
402:
 %403 = load i32, i32* %19
 %404 = load i32, i32* %19
 %405 = and i32 %404, 7
 %406 = icmp ult i32 %403, %405
 br i1 %406, label %370, label %407
407:
 br label %408
408:
 %409 = load i32, i32* %19
 %410 = and i32 %409, 7
 %411 = load i64, i64* %23
 %412 = zext i32 %410 to i64
 %413 = lshr i64 %411, %412
 store i64 %413, i64* %23
 %414 = load i32, i32* %19
 %415 = and i32 %414, 7
 %416 = load i32, i32* %19
 %417 = sub i32 %416, %415
 store i32 %417, i32* %19
 br label %418
418:
 store i32 0, i32* %21
 br label %419
419:
 %420 = load i32, i32* %21
 %421 = icmp ult i32 %420, 4
 br i1 %421, label %422, label %511
422:
 %423 = load i32, i32* %19
 %424 = icmp ne i32 %423, 0
 br i1 %424, label %425, label %480
425:
 br label %426
426:
 %427 = load i32, i32* %19
 %428 = icmp ult i32 %427, 8
 br i1 %428, label %429, label %466
429:
 br label %430
430:
 br label %431
431:
 br label %432
432:
 %433 = load i8*, i8** %24
 %434 = load i8*, i8** %25
 %435 = icmp uge i8* %433, %434
 br i1 %435, label %436, label %447
436:
 br label %437
437:
 %438 = load i32, i32* %15
 %439 = and i32 %438, 2
 %440 = icmp ne i32 %439, 0
 %441 = zext i1 %440 to i64
 %442 = select i1 %440, i32 1, i32 -4
 store i32 %442, i32* %18
 %443 = load i8*, i8** %9
 %444 = getelementptr %struct.tinfl_decompressor_tag, i8* %443, i32 0, i32 0
 store i32 6, i32* %444
 br label %2656
445:
 br label %446
446:
 br label %432
447:
 %448 = load i8*, i8** %24
 %449 = getelementptr i8, i8* %448, i32 1
 store i8* %449, i8** %24
 %450 = load i8, i8* %448
 %451 = zext i8 %450 to i32
 store i32 %451, i32* %32
 br label %452
452:
 %453 = load i32, i32* %32
 %454 = zext i32 %453 to i64
 %455 = load i32, i32* %19
 %456 = zext i32 %455 to i64
 %457 = shl i64 %454, %456
 %458 = load i64, i64* %23
 %459 = or i64 %458, %457
 store i64 %459, i64* %23
 %460 = load i32, i32* %19
 %461 = add i32 %460, 8
 store i32 %461, i32* %19
 br label %462
462:
 %463 = load i32, i32* %19
 %464 = icmp ult i32 %463, 8
 br i1 %464, label %430, label %465
465:
 br label %466
466:
 %467 = load i64, i64* %23
 %468 = and i64 %467, 255
 %469 = trunc i64 %468 to i8
 %470 = load i8*, i8** %9
 %471 = getelementptr %struct.tinfl_decompressor_tag, i8* %470, i32 0, i32 21
 %472 = load i32, i32* %21
 %473 = zext i32 %472 to i64
 %474 = getelementptr [4 x i8], i8* %471, i64 0, i64 %473
 store i8 %469, i8* %474
 %475 = load i64, i64* %23
 %476 = lshr i64 %475, 8
 store i64 %476, i64* %23
 %477 = load i32, i32* %19
 %478 = sub i32 %477, 8
 store i32 %478, i32* %19
 br label %479
479:
 br label %507
480:
 br label %481
481:
 br label %482
482:
 %483 = load i8*, i8** %24
 %484 = load i8*, i8** %25
 %485 = icmp uge i8* %483, %484
 br i1 %485, label %486, label %497
486:
 br label %487
487:
 %488 = load i32, i32* %15
 %489 = and i32 %488, 2
 %490 = icmp ne i32 %489, 0
 %491 = zext i1 %490 to i64
 %492 = select i1 %490, i32 1, i32 -4
 store i32 %492, i32* %18
 %493 = load i8*, i8** %9
 %494 = getelementptr %struct.tinfl_decompressor_tag, i8* %493, i32 0, i32 0
 store i32 7, i32* %494
 br label %2656
495:
 br label %496
496:
 br label %482
497:
 %498 = load i8*, i8** %24
 %499 = getelementptr i8, i8* %498, i32 1
 store i8* %499, i8** %24
 %500 = load i8, i8* %498
 %501 = load i8*, i8** %9
 %502 = getelementptr %struct.tinfl_decompressor_tag, i8* %501, i32 0, i32 21
 %503 = load i32, i32* %21
 %504 = zext i32 %503 to i64
 %505 = getelementptr [4 x i8], i8* %502, i64 0, i64 %504
 store i8 %500, i8* %505
 br label %506
506:
 br label %507
507:
 br label %508
508:
 %509 = load i32, i32* %21
 %510 = add i32 %509, 1
 store i32 %510, i32* %21
 br label %419
511:
 %512 = load i8*, i8** %9
 %513 = getelementptr %struct.tinfl_decompressor_tag, i8* %512, i32 0, i32 21
 %514 = getelementptr [4 x i8], i8* %513, i64 0, i64 0
 %515 = load i8, i8* %514
 %516 = zext i8 %515 to i32
 %517 = load i8*, i8** %9
 %518 = getelementptr %struct.tinfl_decompressor_tag, i8* %517, i32 0, i32 21
 %519 = getelementptr [4 x i8], i8* %518, i64 0, i64 1
 %520 = load i8, i8* %519
 %521 = zext i8 %520 to i32
 %522 = shl i32 %521, 8
 %523 = or i32 %516, %522
 store i32 %523, i32* %21
 %524 = load i8*, i8** %9
 %525 = getelementptr %struct.tinfl_decompressor_tag, i8* %524, i32 0, i32 21
 %526 = getelementptr [4 x i8], i8* %525, i64 0, i64 2
 %527 = load i8, i8* %526
 %528 = zext i8 %527 to i32
 %529 = load i8*, i8** %9
 %530 = getelementptr %struct.tinfl_decompressor_tag, i8* %529, i32 0, i32 21
 %531 = getelementptr [4 x i8], i8* %530, i64 0, i64 3
 %532 = load i8, i8* %531
 %533 = zext i8 %532 to i32
 %534 = shl i32 %533, 8
 %535 = or i32 %528, %534
 %536 = xor i32 65535, %535
 %537 = icmp ne i32 %523, %536
 br i1 %537, label %538, label %547
538:
 br label %539
539:
 br label %540
540:
 br label %541
541:
 store i32 -1, i32* %18
 %542 = load i8*, i8** %9
 %543 = getelementptr %struct.tinfl_decompressor_tag, i8* %542, i32 0, i32 0
 store i32 39, i32* %543
 br label %2656
544:
 br label %545
545:
 br label %540
546:
 br label %547
547:
 br label %548
548:
 %549 = load i32, i32* %21
 %550 = icmp ne i32 %549, 0
 br i1 %550, label %551, label %554
551:
 %552 = load i32, i32* %19
 %553 = icmp ne i32 %552, 0
 br label %554
554:
 %555 = phi i1 [0, %548], [%553, %551]
 br i1 %555, label %556, label %623
556:
 br label %557
557:
 %558 = load i32, i32* %19
 %559 = icmp ult i32 %558, 8
 br i1 %559, label %560, label %597
560:
 br label %561
561:
 br label %562
562:
 br label %563
563:
 %564 = load i8*, i8** %24
 %565 = load i8*, i8** %25
 %566 = icmp uge i8* %564, %565
 br i1 %566, label %567, label %578
567:
 br label %568
568:
 %569 = load i32, i32* %15
 %570 = and i32 %569, 2
 %571 = icmp ne i32 %570, 0
 %572 = zext i1 %571 to i64
 %573 = select i1 %571, i32 1, i32 -4
 store i32 %573, i32* %18
 %574 = load i8*, i8** %9
 %575 = getelementptr %struct.tinfl_decompressor_tag, i8* %574, i32 0, i32 0
 store i32 51, i32* %575
 br label %2656
576:
 br label %577
577:
 br label %563
578:
 %579 = load i8*, i8** %24
 %580 = getelementptr i8, i8* %579, i32 1
 store i8* %580, i8** %24
 %581 = load i8, i8* %579
 %582 = zext i8 %581 to i32
 store i32 %582, i32* %33
 br label %583
583:
 %584 = load i32, i32* %33
 %585 = zext i32 %584 to i64
 %586 = load i32, i32* %19
 %587 = zext i32 %586 to i64
 %588 = shl i64 %585, %587
 %589 = load i64, i64* %23
 %590 = or i64 %589, %588
 store i64 %590, i64* %23
 %591 = load i32, i32* %19
 %592 = add i32 %591, 8
 store i32 %592, i32* %19
 br label %593
593:
 %594 = load i32, i32* %19
 %595 = icmp ult i32 %594, 8
 br i1 %595, label %561, label %596
596:
 br label %597
597:
 %598 = load i64, i64* %23
 %599 = and i64 %598, 255
 %600 = trunc i64 %599 to i32
 store i32 %600, i32* %20
 %601 = load i64, i64* %23
 %602 = lshr i64 %601, 8
 store i64 %602, i64* %23
 %603 = load i32, i32* %19
 %604 = sub i32 %603, 8
 store i32 %604, i32* %19
 br label %605
605:
 br label %606
606:
 %607 = load i8*, i8** %26
 %608 = load i8*, i8** %27
 %609 = icmp uge i8* %607, %608
 br i1 %609, label %610, label %616
610:
 br label %611
611:
 store i32 2, i32* %18
 %612 = load i8*, i8** %9
 %613 = getelementptr %struct.tinfl_decompressor_tag, i8* %612, i32 0, i32 0
 store i32 52, i32* %613
 br label %2656
614:
 br label %615
615:
 br label %606
616:
 %617 = load i32, i32* %20
 %618 = trunc i32 %617 to i8
 %619 = load i8*, i8** %26
 %620 = getelementptr i8, i8* %619, i32 1
 store i8* %620, i8** %26
 store i8 %618, i8* %619
 %621 = load i32, i32* %21
 %622 = add i32 %621, -1
 store i32 %622, i32* %21
 br label %548
623:
 br label %624
624:
 %625 = load i32, i32* %21
 %626 = icmp ne i32 %625, 0
 br i1 %626, label %627, label %730
627:
 br label %628
628:
 %629 = load i8*, i8** %26
 %630 = load i8*, i8** %27
 %631 = icmp uge i8* %629, %630
 br i1 %631, label %632, label %638
632:
 br label %633
633:
 store i32 2, i32* %18
 %634 = load i8*, i8** %9
 %635 = getelementptr %struct.tinfl_decompressor_tag, i8* %634, i32 0, i32 0
 store i32 9, i32* %635
 br label %2656
636:
 br label %637
637:
 br label %628
638:
 br label %639
639:
 %640 = load i8*, i8** %24
 %641 = load i8*, i8** %25
 %642 = icmp uge i8* %640, %641
 br i1 %642, label %643, label %654
643:
 br label %644
644:
 %645 = load i32, i32* %15
 %646 = and i32 %645, 2
 %647 = icmp ne i32 %646, 0
 %648 = zext i1 %647 to i64
 %649 = select i1 %647, i32 1, i32 -4
 store i32 %649, i32* %18
 %650 = load i8*, i8** %9
 %651 = getelementptr %struct.tinfl_decompressor_tag, i8* %650, i32 0, i32 0
 store i32 38, i32* %651
 br label %2656
652:
 br label %653
653:
 br label %639
654:
 %655 = load i8*, i8** %27
 %656 = load i8*, i8** %26
 %657 = ptrtoint i8** %655 to i64
 %658 = ptrtoint i8** %656 to i64
 %659 = sub i64 %657, %658
 %660 = load i8*, i8** %25
 %661 = load i8*, i8** %24
 %662 = ptrtoint i8** %660 to i64
 %663 = ptrtoint i8** %661 to i64
 %664 = sub i64 %662, %663
 %665 = icmp ult i64 %659, %664
 br i1 %665, label %666, label %672
666:
 %667 = load i8*, i8** %27
 %668 = load i8*, i8** %26
 %669 = ptrtoint i8** %667 to i64
 %670 = ptrtoint i8** %668 to i64
 %671 = sub i64 %669, %670
 br label %678
672:
 %673 = load i8*, i8** %25
 %674 = load i8*, i8** %24
 %675 = ptrtoint i8** %673 to i64
 %676 = ptrtoint i8** %674 to i64
 %677 = sub i64 %675, %676
 br label %678
678:
 %679 = phi i64 [%671, %666], [%677, %672]
 %680 = load i32, i32* %21
 %681 = zext i32 %680 to i64
 %682 = icmp ult i64 %679, %681
 br i1 %682, label %683, label %709
683:
 %684 = load i8*, i8** %27
 %685 = load i8*, i8** %26
 %686 = ptrtoint i8** %684 to i64
 %687 = ptrtoint i8** %685 to i64
 %688 = sub i64 %686, %687
 %689 = load i8*, i8** %25
 %690 = load i8*, i8** %24
 %691 = ptrtoint i8** %689 to i64
 %692 = ptrtoint i8** %690 to i64
 %693 = sub i64 %691, %692
 %694 = icmp ult i64 %688, %693
 br i1 %694, label %695, label %701
695:
 %696 = load i8*, i8** %27
 %697 = load i8*, i8** %26
 %698 = ptrtoint i8** %696 to i64
 %699 = ptrtoint i8** %697 to i64
 %700 = sub i64 %698, %699
 br label %707
701:
 %702 = load i8*, i8** %25
 %703 = load i8*, i8** %24
 %704 = ptrtoint i8** %702 to i64
 %705 = ptrtoint i8** %703 to i64
 %706 = sub i64 %704, %705
 br label %707
707:
 %708 = phi i64 [%700, %695], [%706, %701]
 br label %712
709:
 %710 = load i32, i32* %21
 %711 = zext i32 %710 to i64
 br label %712
712:
 %713 = phi i64 [%708, %707], [%711, %709]
 store i64 %713, i64* %34
 %714 = load i8*, i8** %26
 %715 = load i8*, i8** %24
 %716 = load i64, i64* %34
 %717 = load i8*, i8** %26
 %718 = call i64 @llvm.objectsize.i64.p0 (i8* %717, i1 0, i1 1, i1 0)
 %719 = call i8* @__memcpy_chk (i8* %714, i8* %715, i64 %716, i64 %718)
 %720 = load i64, i64* %34
 %721 = load i8*, i8** %24
 %722 = getelementptr i8, i8* %721, i64 %720
 store i8* %722, i8** %24
 %723 = load i64, i64* %34
 %724 = load i8*, i8** %26
 %725 = getelementptr i8, i8* %724, i64 %723
 store i8* %725, i8** %26
 %726 = load i64, i64* %34
 %727 = trunc i64 %726 to i32
 %728 = load i32, i32* %21
 %729 = sub i32 %728, %727
 store i32 %729, i32* %21
 br label %624
730:
 br label %2454
731:
 %732 = load i8*, i8** %9
 %733 = getelementptr %struct.tinfl_decompressor_tag, i8* %732, i32 0, i32 6
 %734 = load i32, i32* %733
 %735 = icmp eq i32 %734, 3
 br i1 %735, label %736, label %745
736:
 br label %737
737:
 br label %738
738:
 br label %739
739:
 store i32 -1, i32* %18
 %740 = load i8*, i8** %9
 %741 = getelementptr %struct.tinfl_decompressor_tag, i8* %740, i32 0, i32 0
 store i32 10, i32* %741
 br label %2656
742:
 br label %743
743:
 br label %738
744:
 br label %2453
745:
 %746 = load i8*, i8** %9
 %747 = getelementptr %struct.tinfl_decompressor_tag, i8* %746, i32 0, i32 6
 %748 = load i32, i32* %747
 %749 = icmp eq i32 %748, 1
 br i1 %749, label %750, label %808
750:
 %751 = load i8*, i8** %9
 %752 = getelementptr %struct.tinfl_decompressor_tag, i8* %751, i32 0, i32 18
 %753 = getelementptr [288 x i8], i8* %752, i64 0, i64 0
 store i8* %753, i8** %35
 %754 = load i8*, i8** %9
 %755 = getelementptr %struct.tinfl_decompressor_tag, i8* %754, i32 0, i32 11
 %756 = getelementptr [3 x i32], i8* %755, i64 0, i64 0
 store i32 288, i32* %756
 %757 = load i8*, i8** %9
 %758 = getelementptr %struct.tinfl_decompressor_tag, i8* %757, i32 0, i32 11
 %759 = getelementptr [3 x i32], i8* %758, i64 0, i64 1
 store i32 32, i32* %759
 %760 = load i8*, i8** %9
 %761 = getelementptr %struct.tinfl_decompressor_tag, i8* %760, i32 0, i32 19
 %762 = getelementptr [32 x i8], i8* %761, i64 0, i64 0
 %763 = load i8*, i8** %9
 %764 = getelementptr %struct.tinfl_decompressor_tag, i8* %763, i32 0, i32 19
 %765 = getelementptr [32 x i8], i8* %764, i64 0, i64 0
 %766 = call i64 @llvm.objectsize.i64.p0 (i8* %765, i1 0, i1 1, i1 0)
 %767 = call i8* @__memset_chk (i8* %762, i32 5, i64 32, i64 %766)
 store i32 0, i32* %36
 br label %768
768:
 %769 = load i32, i32* %36
 %770 = icmp ule i32 %769, 143
 br i1 %770, label %771, label %777
771:
 %772 = load i8*, i8** %35
 %773 = getelementptr i8, i8* %772, i32 1
 store i8* %773, i8** %35
 store i8 8, i8* %772
 br label %774
774:
 %775 = load i32, i32* %36
 %776 = add i32 %775, 1
 store i32 %776, i32* %36
 br label %768
777:
 br label %778
778:
 %779 = load i32, i32* %36
 %780 = icmp ule i32 %779, 255
 br i1 %780, label %781, label %787
781:
 %782 = load i8*, i8** %35
 %783 = getelementptr i8, i8* %782, i32 1
 store i8* %783, i8** %35
 store i8 9, i8* %782
 br label %784
784:
 %785 = load i32, i32* %36
 %786 = add i32 %785, 1
 store i32 %786, i32* %36
 br label %778
787:
 br label %788
788:
 %789 = load i32, i32* %36
 %790 = icmp ule i32 %789, 279
 br i1 %790, label %791, label %797
791:
 %792 = load i8*, i8** %35
 %793 = getelementptr i8, i8* %792, i32 1
 store i8* %793, i8** %35
 store i8 7, i8* %792
 br label %794
794:
 %795 = load i32, i32* %36
 %796 = add i32 %795, 1
 store i32 %796, i32* %36
 br label %788
797:
 br label %798
798:
 %799 = load i32, i32* %36
 %800 = icmp ule i32 %799, 287
 br i1 %800, label %801, label %807
801:
 %802 = load i8*, i8** %35
 %803 = getelementptr i8, i8* %802, i32 1
 store i8* %803, i8** %35
 store i8 8, i8* %802
 br label %804
804:
 %805 = load i32, i32* %36
 %806 = add i32 %805, 1
 store i32 %806, i32* %36
 br label %798
807:
 br label %994
808:
 store i32 0, i32* %21
 br label %809
809:
 %810 = load i32, i32* %21
 %811 = icmp ult i32 %810, 3
 br i1 %811, label %812, label %911
812:
 br label %813
813:
 %814 = load i32, i32* %19
 %815 = load i32, i32* %21
 %816 = zext i32 %815 to i64
 %817 = getelementptr [4 x i8], i8* @.str.14, i64 0, i64 %816
 %818 = load i8, i8* %817
 %819 = sext i8 %818 to i32
 %820 = icmp ult i32 %814, %819
 br i1 %820, label %821, label %863
821:
 br label %822
822:
 br label %823
823:
 br label %824
824:
 %825 = load i8*, i8** %24
 %826 = load i8*, i8** %25
 %827 = icmp uge i8* %825, %826
 br i1 %827, label %828, label %839
828:
 br label %829
829:
 %830 = load i32, i32* %15
 %831 = and i32 %830, 2
 %832 = icmp ne i32 %831, 0
 %833 = zext i1 %832 to i64
 %834 = select i1 %832, i32 1, i32 -4
 store i32 %834, i32* %18
 %835 = load i8*, i8** %9
 %836 = getelementptr %struct.tinfl_decompressor_tag, i8* %835, i32 0, i32 0
 store i32 11, i32* %836
 br label %2656
837:
 br label %838
838:
 br label %824
839:
 %840 = load i8*, i8** %24
 %841 = getelementptr i8, i8* %840, i32 1
 store i8* %841, i8** %24
 %842 = load i8, i8* %840
 %843 = zext i8 %842 to i32
 store i32 %843, i32* %37
 br label %844
844:
 %845 = load i32, i32* %37
 %846 = zext i32 %845 to i64
 %847 = load i32, i32* %19
 %848 = zext i32 %847 to i64
 %849 = shl i64 %846, %848
 %850 = load i64, i64* %23
 %851 = or i64 %850, %849
 store i64 %851, i64* %23
 %852 = load i32, i32* %19
 %853 = add i32 %852, 8
 store i32 %853, i32* %19
 br label %854
854:
 %855 = load i32, i32* %19
 %856 = load i32, i32* %21
 %857 = zext i32 %856 to i64
 %858 = getelementptr [4 x i8], i8* @.str.14, i64 0, i64 %857
 %859 = load i8, i8* %858
 %860 = sext i8 %859 to i32
 %861 = icmp ult i32 %855, %860
 br i1 %861, label %822, label %862
862:
 br label %863
863:
 %864 = load i64, i64* %23
 %865 = load i32, i32* %21
 %866 = zext i32 %865 to i64
 %867 = getelementptr [4 x i8], i8* @.str.14, i64 0, i64 %866
 %868 = load i8, i8* %867
 %869 = sext i8 %868 to i32
 %870 = shl i32 1, %869
 %871 = sub i32 %870, 1
 %872 = sext i32 %871 to i64
 %873 = and i64 %864, %872
 %874 = trunc i64 %873 to i32
 %875 = load i8*, i8** %9
 %876 = getelementptr %struct.tinfl_decompressor_tag, i8* %875, i32 0, i32 11
 %877 = load i32, i32* %21
 %878 = zext i32 %877 to i64
 %879 = getelementptr [3 x i32], i8* %876, i64 0, i64 %878
 store i32 %874, i32* %879
 %880 = load i32, i32* %21
 %881 = zext i32 %880 to i64
 %882 = getelementptr [4 x i8], i8* @.str.14, i64 0, i64 %881
 %883 = load i8, i8* %882
 %884 = sext i8 %883 to i32
 %885 = load i64, i64* %23
 %886 = zext i32 %884 to i64
 %887 = lshr i64 %885, %886
 store i64 %887, i64* %23
 %888 = load i32, i32* %21
 %889 = zext i32 %888 to i64
 %890 = getelementptr [4 x i8], i8* @.str.14, i64 0, i64 %889
 %891 = load i8, i8* %890
 %892 = sext i8 %891 to i32
 %893 = load i32, i32* %19
 %894 = sub i32 %893, %892
 store i32 %894, i32* %19
 br label %895
895:
 %896 = load i32, i32* %21
 %897 = zext i32 %896 to i64
 %898 = getelementptr [3 x i16], i8* @tinfl_decompress.s_min_table_sizes, i64 0, i64 %897
 %899 = load i16, i16* %898
 %900 = zext i16 %899 to i32
 %901 = load i8*, i8** %9
 %902 = getelementptr %struct.tinfl_decompressor_tag, i8* %901, i32 0, i32 11
 %903 = load i32, i32* %21
 %904 = zext i32 %903 to i64
 %905 = getelementptr [3 x i32], i8* %902, i64 0, i64 %904
 %906 = load i32, i32* %905
 %907 = add i32 %906, %900
 store i32 %907, i32* %905
 br label %908
908:
 %909 = load i32, i32* %21
 %910 = add i32 %909, 1
 store i32 %910, i32* %21
 br label %809
911:
 %912 = load i8*, i8** %9
 %913 = getelementptr %struct.tinfl_decompressor_tag, i8* %912, i32 0, i32 20
 %914 = getelementptr [19 x i8], i8* %913, i64 0, i64 0
 %915 = load i8*, i8** %9
 %916 = getelementptr %struct.tinfl_decompressor_tag, i8* %915, i32 0, i32 20
 %917 = getelementptr [19 x i8], i8* %916, i64 0, i64 0
 %918 = call i64 @llvm.objectsize.i64.p0 (i8* %917, i1 0, i1 1, i1 0)
 %919 = call i8* @__memset_chk (i8* %914, i32 0, i64 19, i64 %918)
 store i32 0, i32* %21
 br label %920
920:
 %921 = load i32, i32* %21
 %922 = load i8*, i8** %9
 %923 = getelementptr %struct.tinfl_decompressor_tag, i8* %922, i32 0, i32 11
 %924 = getelementptr [3 x i32], i8* %923, i64 0, i64 2
 %925 = load i32, i32* %924
 %926 = icmp ult i32 %921, %925
 br i1 %926, label %927, label %990
927:
 br label %928
928:
 %929 = load i32, i32* %19
 %930 = icmp ult i32 %929, 3
 br i1 %930, label %931, label %968
931:
 br label %932
932:
 br label %933
933:
 br label %934
934:
 %935 = load i8*, i8** %24
 %936 = load i8*, i8** %25
 %937 = icmp uge i8* %935, %936
 br i1 %937, label %938, label %949
938:
 br label %939
939:
 %940 = load i32, i32* %15
 %941 = and i32 %940, 2
 %942 = icmp ne i32 %941, 0
 %943 = zext i1 %942 to i64
 %944 = select i1 %942, i32 1, i32 -4
 store i32 %944, i32* %18
 %945 = load i8*, i8** %9
 %946 = getelementptr %struct.tinfl_decompressor_tag, i8* %945, i32 0, i32 0
 store i32 14, i32* %946
 br label %2656
947:
 br label %948
948:
 br label %934
949:
 %950 = load i8*, i8** %24
 %951 = getelementptr i8, i8* %950, i32 1
 store i8* %951, i8** %24
 %952 = load i8, i8* %950
 %953 = zext i8 %952 to i32
 store i32 %953, i32* %39
 br label %954
954:
 %955 = load i32, i32* %39
 %956 = zext i32 %955 to i64
 %957 = load i32, i32* %19
 %958 = zext i32 %957 to i64
 %959 = shl i64 %956, %958
 %960 = load i64, i64* %23
 %961 = or i64 %960, %959
 store i64 %961, i64* %23
 %962 = load i32, i32* %19
 %963 = add i32 %962, 8
 store i32 %963, i32* %19
 br label %964
964:
 %965 = load i32, i32* %19
 %966 = icmp ult i32 %965, 3
 br i1 %966, label %932, label %967
967:
 br label %968
968:
 %969 = load i64, i64* %23
 %970 = and i64 %969, 7
 %971 = trunc i64 %970 to i32
 store i32 %971, i32* %38
 %972 = load i64, i64* %23
 %973 = lshr i64 %972, 3
 store i64 %973, i64* %23
 %974 = load i32, i32* %19
 %975 = sub i32 %974, 3
 store i32 %975, i32* %19
 br label %976
976:
 %977 = load i32, i32* %38
 %978 = trunc i32 %977 to i8
 %979 = load i8*, i8** %9
 %980 = getelementptr %struct.tinfl_decompressor_tag, i8* %979, i32 0, i32 20
 %981 = load i32, i32* %21
 %982 = zext i32 %981 to i64
 %983 = getelementptr [19 x i8], i8* @tinfl_decompress.s_length_dezigzag, i64 0, i64 %982
 %984 = load i8, i8* %983
 %985 = zext i8 %984 to i64
 %986 = getelementptr [19 x i8], i8* %980, i64 0, i64 %985
 store i8 %978, i8* %986
 br label %987
987:
 %988 = load i32, i32* %21
 %989 = add i32 %988, 1
 store i32 %989, i32* %21
 br label %920
990:
 %991 = load i8*, i8** %9
 %992 = getelementptr %struct.tinfl_decompressor_tag, i8* %991, i32 0, i32 11
 %993 = getelementptr [3 x i32], i8* %992, i64 0, i64 2
 store i32 19, i32* %993
 br label %994
994:
 br label %995
995:
 %996 = load i8*, i8** %9
 %997 = getelementptr %struct.tinfl_decompressor_tag, i8* %996, i32 0, i32 6
 %998 = load i32, i32* %997
 %999 = icmp sge i32 %998, 0
 br i1 %999, label %1000, label %1634
1000:
 %1001 = load i8*, i8** %9
 %1002 = getelementptr %struct.tinfl_decompressor_tag, i8* %1001, i32 0, i32 14
 %1003 = load i8*, i8** %9
 %1004 = getelementptr %struct.tinfl_decompressor_tag, i8* %1003, i32 0, i32 6
 %1005 = load i32, i32* %1004
 %1006 = zext i32 %1005 to i64
 %1007 = getelementptr [3 x [1024 x i16]], i8* %1002, i64 0, i64 %1006
 %1008 = getelementptr [1024 x i16], i8* %1007, i64 0, i64 0
 store i8* %1008, i8** %42
 %1009 = load i8*, i8** %9
 %1010 = getelementptr %struct.tinfl_decompressor_tag, i8* %1009, i32 0, i32 6
 %1011 = load i32, i32* %1010
 %1012 = zext i32 %1011 to i64
 %1013 = getelementptr [3 x i8*], i8* %16, i64 0, i64 %1012
 %1014 = load i8*, i8** %1013
 store i8* %1014, i8** %43
 %1015 = load i8*, i8** %9
 %1016 = getelementptr %struct.tinfl_decompressor_tag, i8* %1015, i32 0, i32 6
 %1017 = load i32, i32* %1016
 %1018 = zext i32 %1017 to i64
 %1019 = getelementptr [3 x i8*], i8* %17, i64 0, i64 %1018
 %1020 = load i8*, i8** %1019
 store i8* %1020, i8** %44
 %1021 = getelementptr [16 x i32], i8* %51, i64 0, i64 0
 call void @memset (i8* %1021, i8 0, i64 64, i1 0)
 %1022 = load i8*, i8** %42
 %1023 = load i8*, i8** %42
 %1024 = call i64 @llvm.objectsize.i64.p0 (i8* %1023, i1 0, i1 1, i1 0)
 %1025 = call i8* @__memset_chk (i8* %1022, i32 0, i64 2048, i64 %1024)
 %1026 = load i8*, i8** %9
 call void @tinfl_clear_tree (i8* %1026)
 store i32 0, i32* %45
 br label %1027
1027:
 %1028 = load i32, i32* %45
 %1029 = load i8*, i8** %9
 %1030 = getelementptr %struct.tinfl_decompressor_tag, i8* %1029, i32 0, i32 11
 %1031 = load i8*, i8** %9
 %1032 = getelementptr %struct.tinfl_decompressor_tag, i8* %1031, i32 0, i32 6
 %1033 = load i32, i32* %1032
 %1034 = zext i32 %1033 to i64
 %1035 = getelementptr [3 x i32], i8* %1030, i64 0, i64 %1034
 %1036 = load i32, i32* %1035
 %1037 = icmp ult i32 %1028, %1036
 br i1 %1037, label %1038, label %1051
1038:
 %1039 = load i8*, i8** %44
 %1040 = load i32, i32* %45
 %1041 = zext i32 %1040 to i64
 %1042 = getelementptr i8, i8* %1039, i64 %1041
 %1043 = load i8, i8* %1042
 %1044 = zext i8 %1043 to i64
 %1045 = getelementptr [16 x i32], i8* %51, i64 0, i64 %1044
 %1046 = load i32, i32* %1045
 %1047 = add i32 %1046, 1
 store i32 %1047, i32* %1045
 br label %1048
1048:
 %1049 = load i32, i32* %45
 %1050 = add i32 %1049, 1
 store i32 %1050, i32* %45
 br label %1027
1051:
 store i32 0, i32* %47
 store i32 0, i32* %48
 %1052 = getelementptr [17 x i32], i8* %50, i64 0, i64 1
 store i32 0, i32* %1052
 %1053 = getelementptr [17 x i32], i8* %50, i64 0, i64 0
 store i32 0, i32* %1053
 store i32 1, i32* %45
 br label %1054
1054:
 %1055 = load i32, i32* %45
 %1056 = icmp ule i32 %1055, 15
 br i1 %1056, label %1057, label %1078
1057:
 %1058 = load i32, i32* %45
 %1059 = zext i32 %1058 to i64
 %1060 = getelementptr [16 x i32], i8* %51, i64 0, i64 %1059
 %1061 = load i32, i32* %1060
 %1062 = load i32, i32* %47
 %1063 = add i32 %1062, %1061
 store i32 %1063, i32* %47
 %1064 = load i32, i32* %48
 %1065 = load i32, i32* %45
 %1066 = zext i32 %1065 to i64
 %1067 = getelementptr [16 x i32], i8* %51, i64 0, i64 %1066
 %1068 = load i32, i32* %1067
 %1069 = add i32 %1064, %1068
 %1070 = shl i32 %1069, 1
 store i32 %1070, i32* %48
 %1071 = load i32, i32* %45
 %1072 = add i32 %1071, 1
 %1073 = zext i32 %1072 to i64
 %1074 = getelementptr [17 x i32], i8* %50, i64 0, i64 %1073
 store i32 %1070, i32* %1074
 br label %1075
1075:
 %1076 = load i32, i32* %45
 %1077 = add i32 %1076, 1
 store i32 %1077, i32* %45
 br label %1054
1078:
 %1079 = load i32, i32* %48
 %1080 = icmp ne i32 65536, %1079
 br i1 %1080, label %1081, label %1093
1081:
 %1082 = load i32, i32* %47
 %1083 = icmp ugt i32 %1082, 1
 br i1 %1083, label %1084, label %1093
1084:
 br label %1085
1085:
 br label %1086
1086:
 br label %1087
1087:
 store i32 -1, i32* %18
 %1088 = load i8*, i8** %9
 %1089 = getelementptr %struct.tinfl_decompressor_tag, i8* %1088, i32 0, i32 0
 store i32 35, i32* %1089
 br label %2656
1090:
 br label %1091
1091:
 br label %1086
1092:
 br label %1093
1093:
 store i32 -1, i32* %40
 store i32 0, i32* %49
 br label %1094
1094:
 %1095 = load i32, i32* %49
 %1096 = load i8*, i8** %9
 %1097 = getelementptr %struct.tinfl_decompressor_tag, i8* %1096, i32 0, i32 11
 %1098 = load i8*, i8** %9
 %1099 = getelementptr %struct.tinfl_decompressor_tag, i8* %1098, i32 0, i32 6
 %1100 = load i32, i32* %1099
 %1101 = zext i32 %1100 to i64
 %1102 = getelementptr [3 x i32], i8* %1097, i64 0, i64 %1101
 %1103 = load i32, i32* %1102
 %1104 = icmp ult i32 %1095, %1103
 br i1 %1104, label %1105, label %1242
1105:
 store i32 0, i32* %52
 %1106 = load i8*, i8** %44
 %1107 = load i32, i32* %49
 %1108 = zext i32 %1107 to i64
 %1109 = getelementptr i8, i8* %1106, i64 %1108
 %1110 = load i8, i8* %1109
 %1111 = zext i8 %1110 to i32
 store i32 %1111, i32* %55
 %1112 = load i32, i32* %55
 %1113 = icmp ne i32 %1112, 0
 br i1 %1113, label %1115, label %1114
1114:
 br label %1239
1115:
 %1116 = load i32, i32* %55
 %1117 = zext i32 %1116 to i64
 %1118 = getelementptr [17 x i32], i8* %50, i64 0, i64 %1117
 %1119 = load i32, i32* %1118
 %1120 = add i32 %1119, 1
 store i32 %1120, i32* %1118
 store i32 %1119, i32* %54
 %1121 = load i32, i32* %55
 store i32 %1121, i32* %53
 br label %1122
1122:
 %1123 = load i32, i32* %53
 %1124 = icmp ugt i32 %1123, 0
 br i1 %1124, label %1125, label %1136
1125:
 %1126 = load i32, i32* %52
 %1127 = shl i32 %1126, 1
 %1128 = load i32, i32* %54
 %1129 = and i32 %1128, 1
 %1130 = or i32 %1127, %1129
 store i32 %1130, i32* %52
 br label %1131
1131:
 %1132 = load i32, i32* %53
 %1133 = add i32 %1132, -1
 store i32 %1133, i32* %53
 %1134 = load i32, i32* %54
 %1135 = lshr i32 %1134, 1
 store i32 %1135, i32* %54
 br label %1122
1136:
 %1137 = load i32, i32* %55
 %1138 = icmp ule i32 %1137, 10
 br i1 %1138, label %1139, label %1159
1139:
 %1140 = load i32, i32* %55
 %1141 = shl i32 %1140, 9
 %1142 = load i32, i32* %49
 %1143 = or i32 %1141, %1142
 %1144 = trunc i32 %1143 to i16
 store i16 %1144, i16* %56
 br label %1145
1145:
 %1146 = load i32, i32* %52
 %1147 = icmp ult i32 %1146, 1024
 br i1 %1147, label %1148, label %1158
1148:
 %1149 = load i16, i16* %56
 %1150 = load i8*, i8** %42
 %1151 = load i32, i32* %52
 %1152 = zext i32 %1151 to i64
 %1153 = getelementptr i16, i8* %1150, i64 %1152
 store i16 %1149, i16* %1153
 %1154 = load i32, i32* %55
 %1155 = shl i32 1, %1154
 %1156 = load i32, i32* %52
 %1157 = add i32 %1156, %1155
 store i32 %1157, i32* %52
 br label %1145
1158:
 br label %1239
1159:
 %1160 = load i8*, i8** %42
 %1161 = load i32, i32* %52
 %1162 = and i32 %1161, 1023
 %1163 = zext i32 %1162 to i64
 %1164 = getelementptr i16, i8* %1160, i64 %1163
 %1165 = load i16, i16* %1164
 %1166 = sext i16 %1165 to i32
 store i32 %1166, i32* %41
 %1167 = icmp eq i32 0, %1166
 br i1 %1167, label %1168, label %1179
1168:
 %1169 = load i32, i32* %40
 %1170 = trunc i32 %1169 to i16
 %1171 = load i8*, i8** %42
 %1172 = load i32, i32* %52
 %1173 = and i32 %1172, 1023
 %1174 = zext i32 %1173 to i64
 %1175 = getelementptr i16, i8* %1171, i64 %1174
 store i16 %1170, i16* %1175
 %1176 = load i32, i32* %40
 store i32 %1176, i32* %41
 %1177 = load i32, i32* %40
 %1178 = sub i32 %1177, 2
 store i32 %1178, i32* %40
 br label %1179
1179:
 %1180 = load i32, i32* %52
 %1181 = lshr i32 %1180, 9
 store i32 %1181, i32* %52
 %1182 = load i32, i32* %55
 store i32 %1182, i32* %46
 br label %1183
1183:
 %1184 = load i32, i32* %46
 %1185 = icmp ugt i32 %1184, 11
 br i1 %1185, label %1186, label %1225
1186:
 %1187 = load i32, i32* %52
 %1188 = lshr i32 %1187, 1
 store i32 %1188, i32* %52
 %1189 = and i32 %1188, 1
 %1190 = load i32, i32* %41
 %1191 = sub i32 %1190, %1189
 store i32 %1191, i32* %41
 %1192 = load i8*, i8** %43
 %1193 = load i32, i32* %41
 %1194 = sub i32 0, %1193
 %1195 = sub i32 %1194, 1
 %1196 = sext i32 %1195 to i64
 %1197 = getelementptr i16, i8* %1192, i64 %1196
 %1198 = load i16, i16* %1197
 %1199 = icmp ne i16 %1198, 0
 br i1 %1199, label %1212, label %1200
1200:
 %1201 = load i32, i32* %40
 %1202 = trunc i32 %1201 to i16
 %1203 = load i8*, i8** %43
 %1204 = load i32, i32* %41
 %1205 = sub i32 0, %1204
 %1206 = sub i32 %1205, 1
 %1207 = sext i32 %1206 to i64
 %1208 = getelementptr i16, i8* %1203, i64 %1207
 store i16 %1202, i16* %1208
 %1209 = load i32, i32* %40
 store i32 %1209, i32* %41
 %1210 = load i32, i32* %40
 %1211 = sub i32 %1210, 2
 store i32 %1211, i32* %40
 br label %1221
1212:
 %1213 = load i8*, i8** %43
 %1214 = load i32, i32* %41
 %1215 = sub i32 0, %1214
 %1216 = sub i32 %1215, 1
 %1217 = sext i32 %1216 to i64
 %1218 = getelementptr i16, i8* %1213, i64 %1217
 %1219 = load i16, i16* %1218
 %1220 = sext i16 %1219 to i32
 store i32 %1220, i32* %41
 br label %1221
1221:
 br label %1222
1222:
 %1223 = load i32, i32* %46
 %1224 = add i32 %1223, -1
 store i32 %1224, i32* %46
 br label %1183
1225:
 %1226 = load i32, i32* %52
 %1227 = lshr i32 %1226, 1
 store i32 %1227, i32* %52
 %1228 = and i32 %1227, 1
 %1229 = load i32, i32* %41
 %1230 = sub i32 %1229, %1228
 store i32 %1230, i32* %41
 %1231 = load i32, i32* %49
 %1232 = trunc i32 %1231 to i16
 %1233 = load i8*, i8** %43
 %1234 = load i32, i32* %41
 %1235 = sub i32 0, %1234
 %1236 = sub i32 %1235, 1
 %1237 = sext i32 %1236 to i64
 %1238 = getelementptr i16, i8* %1233, i64 %1237
 store i16 %1232, i16* %1238
 br label %1239
1239:
 %1240 = load i32, i32* %49
 %1241 = add i32 %1240, 1
 store i32 %1241, i32* %49
 br label %1094
1242:
 %1243 = load i8*, i8** %9
 %1244 = getelementptr %struct.tinfl_decompressor_tag, i8* %1243, i32 0, i32 6
 %1245 = load i32, i32* %1244
 %1246 = icmp eq i32 %1245, 2
 br i1 %1246, label %1247, label %1628
1247:
 store i32 0, i32* %21
 br label %1248
1248:
 %1249 = load i32, i32* %21
 %1250 = load i8*, i8** %9
 %1251 = getelementptr %struct.tinfl_decompressor_tag, i8* %1250, i32 0, i32 11
 %1252 = getelementptr [3 x i32], i8* %1251, i64 0, i64 0
 %1253 = load i32, i32* %1252
 %1254 = load i8*, i8** %9
 %1255 = getelementptr %struct.tinfl_decompressor_tag, i8* %1254, i32 0, i32 11
 %1256 = getelementptr [3 x i32], i8* %1255, i64 0, i64 1
 %1257 = load i32, i32* %1256
 %1258 = add i32 %1253, %1257
 %1259 = icmp ult i32 %1249, %1258
 br i1 %1259, label %1260, label %1568
1260:
 br label %1261
1261:
 %1262 = load i32, i32* %19
 %1263 = icmp ult i32 %1262, 15
 br i1 %1263, label %1264, label %1390
1264:
 %1265 = load i8*, i8** %25
 %1266 = load i8*, i8** %24
 %1267 = ptrtoint i8** %1265 to i64
 %1268 = ptrtoint i8** %1266 to i64
 %1269 = sub i64 %1267, %1268
 %1270 = icmp slt i64 %1269, 2
 br i1 %1270, label %1271, label %1366
1271:
 br label %1272
1272:
 %1273 = load i8*, i8** %9
 %1274 = getelementptr %struct.tinfl_decompressor_tag, i8* %1273, i32 0, i32 14
 %1275 = getelementptr [3 x [1024 x i16]], i8* %1274, i64 0, i64 2
 %1276 = load i64, i64* %23
 %1277 = and i64 %1276, 1023
 %1278 = getelementptr [1024 x i16], i8* %1275, i64 0, i64 %1277
 %1279 = load i16, i16* %1278
 %1280 = sext i16 %1279 to i32
 store i32 %1280, i32* %58
 %1281 = load i32, i32* %58
 %1282 = icmp sge i32 %1281, 0
 br i1 %1282, label %1283, label %1294
1283:
 %1284 = load i32, i32* %58
 %1285 = ashr i32 %1284, 9
 store i32 %1285, i32* %59
 %1286 = load i32, i32* %59
 %1287 = icmp ne i32 %1286, 0
 br i1 %1287, label %1288, label %1293
1288:
 %1289 = load i32, i32* %19
 %1290 = load i32, i32* %59
 %1291 = icmp uge i32 %1289, %1290
 br i1 %1291, label %1292, label %1293
1292:
 br label %1365
1293:
 br label %1330
1294:
 %1295 = load i32, i32* %19
 %1296 = icmp ugt i32 %1295, 10
 br i1 %1296, label %1297, label %1329
1297:
 store i32 10, i32* %59
 br label %1298
1298:
 %1299 = load i8*, i8** %9
 %1300 = getelementptr %struct.tinfl_decompressor_tag, i8* %1299, i32 0, i32 17
 %1301 = load i32, i32* %58
 %1302 = xor i32 %1301, -1
 %1303 = sext i32 %1302 to i64
 %1304 = load i64, i64* %23
 %1305 = load i32, i32* %59
 %1306 = add i32 %1305, 1
 store i32 %1306, i32* %59
 %1307 = zext i32 %1305 to i64
 %1308 = lshr i64 %1304, %1307
 %1309 = and i64 %1308, 1
 %1310 = add i64 %1303, %1309
 %1311 = getelementptr [38 x i16], i8* %1300, i64 0, i64 %1310
 %1312 = load i16, i16* %1311
 %1313 = sext i16 %1312 to i32
 store i32 %1313, i32* %58
 br label %1314
1314:
 %1315 = load i32, i32* %58
 %1316 = icmp slt i32 %1315, 0
 br i1 %1316, label %1317, label %1322
1317:
 %1318 = load i32, i32* %19
 %1319 = load i32, i32* %59
 %1320 = add i32 %1319, 1
 %1321 = icmp uge i32 %1318, %1320
 br label %1322
1322:
 %1323 = phi i1 [0, %1314], [%1321, %1317]
 br i1 %1323, label %1298, label %1324
1324:
 %1325 = load i32, i32* %58
 %1326 = icmp sge i32 %1325, 0
 br i1 %1326, label %1327, label %1328
1327:
 br label %1365
1328:
 br label %1329
1329:
 br label %1330
1330:
 br label %1331
1331:
 br label %1332
1332:
 %1333 = load i8*, i8** %24
 %1334 = load i8*, i8** %25
 %1335 = icmp uge i8* %1333, %1334
 br i1 %1335, label %1336, label %1347
1336:
 br label %1337
1337:
 %1338 = load i32, i32* %15
 %1339 = and i32 %1338, 2
 %1340 = icmp ne i32 %1339, 0
 %1341 = zext i1 %1340 to i64
 %1342 = select i1 %1340, i32 1, i32 -4
 store i32 %1342, i32* %18
 %1343 = load i8*, i8** %9
 %1344 = getelementptr %struct.tinfl_decompressor_tag, i8* %1343, i32 0, i32 0
 store i32 16, i32* %1344
 br label %2656
1345:
 br label %1346
1346:
 br label %1332
1347:
 %1348 = load i8*, i8** %24
 %1349 = getelementptr i8, i8* %1348, i32 1
 store i8* %1349, i8** %24
 %1350 = load i8, i8* %1348
 %1351 = zext i8 %1350 to i32
 store i32 %1351, i32* %60
 br label %1352
1352:
 %1353 = load i32, i32* %60
 %1354 = zext i32 %1353 to i64
 %1355 = load i32, i32* %19
 %1356 = zext i32 %1355 to i64
 %1357 = shl i64 %1354, %1356
 %1358 = load i64, i64* %23
 %1359 = or i64 %1358, %1357
 store i64 %1359, i64* %23
 %1360 = load i32, i32* %19
 %1361 = add i32 %1360, 8
 store i32 %1361, i32* %19
 br label %1362
1362:
 %1363 = load i32, i32* %19
 %1364 = icmp ult i32 %1363, 15
 br i1 %1364, label %1272, label %1365
1365:
 br label %1389
1366:
 %1367 = load i8*, i8** %24
 %1368 = getelementptr i8, i8* %1367, i64 0
 %1369 = load i8, i8* %1368
 %1370 = zext i8 %1369 to i64
 %1371 = load i32, i32* %19
 %1372 = zext i32 %1371 to i64
 %1373 = shl i64 %1370, %1372
 %1374 = load i8*, i8** %24
 %1375 = getelementptr i8, i8* %1374, i64 1
 %1376 = load i8, i8* %1375
 %1377 = zext i8 %1376 to i64
 %1378 = load i32, i32* %19
 %1379 = add i32 %1378, 8
 %1380 = zext i32 %1379 to i64
 %1381 = shl i64 %1377, %1380
 %1382 = or i64 %1373, %1381
 %1383 = load i64, i64* %23
 %1384 = or i64 %1383, %1382
 store i64 %1384, i64* %23
 %1385 = load i8*, i8** %24
 %1386 = getelementptr i8, i8* %1385, i64 2
 store i8* %1386, i8** %24
 %1387 = load i32, i32* %19
 %1388 = add i32 %1387, 16
 store i32 %1388, i32* %19
 br label %1389
1389:
 br label %1390
1390:
 %1391 = load i8*, i8** %9
 %1392 = getelementptr %struct.tinfl_decompressor_tag, i8* %1391, i32 0, i32 14
 %1393 = getelementptr [3 x [1024 x i16]], i8* %1392, i64 0, i64 2
 %1394 = load i64, i64* %23
 %1395 = and i64 %1394, 1023
 %1396 = getelementptr [1024 x i16], i8* %1393, i64 0, i64 %1395
 %1397 = load i16, i16* %1396
 %1398 = sext i16 %1397 to i32
 store i32 %1398, i32* %58
 %1399 = icmp sge i32 %1398, 0
 br i1 %1399, label %1400, label %1405
1400:
 %1401 = load i32, i32* %58
 %1402 = ashr i32 %1401, 9
 store i32 %1402, i32* %59
 %1403 = load i32, i32* %58
 %1404 = and i32 %1403, 511
 store i32 %1404, i32* %58
 br label %1426
1405:
 store i32 10, i32* %59
 br label %1406
1406:
 %1407 = load i8*, i8** %9
 %1408 = getelementptr %struct.tinfl_decompressor_tag, i8* %1407, i32 0, i32 17
 %1409 = load i32, i32* %58
 %1410 = xor i32 %1409, -1
 %1411 = sext i32 %1410 to i64
 %1412 = load i64, i64* %23
 %1413 = load i32, i32* %59
 %1414 = add i32 %1413, 1
 store i32 %1414, i32* %59
 %1415 = zext i32 %1413 to i64
 %1416 = lshr i64 %1412, %1415
 %1417 = and i64 %1416, 1
 %1418 = add i64 %1411, %1417
 %1419 = getelementptr [38 x i16], i8* %1408, i64 0, i64 %1418
 %1420 = load i16, i16* %1419
 %1421 = sext i16 %1420 to i32
 store i32 %1421, i32* %58
 br label %1422
1422:
 %1423 = load i32, i32* %58
 %1424 = icmp slt i32 %1423, 0
 br i1 %1424, label %1406, label %1425
1425:
 br label %1426
1426:
 %1427 = load i32, i32* %58
 store i32 %1427, i32* %20
 %1428 = load i32, i32* %59
 %1429 = load i64, i64* %23
 %1430 = zext i32 %1428 to i64
 %1431 = lshr i64 %1429, %1430
 store i64 %1431, i64* %23
 %1432 = load i32, i32* %59
 %1433 = load i32, i32* %19
 %1434 = sub i32 %1433, %1432
 store i32 %1434, i32* %19
 br label %1435
1435:
 %1436 = load i32, i32* %20
 %1437 = icmp ult i32 %1436, 16
 br i1 %1437, label %1438, label %1447
1438:
 %1439 = load i32, i32* %20
 %1440 = trunc i32 %1439 to i8
 %1441 = load i8*, i8** %9
 %1442 = getelementptr %struct.tinfl_decompressor_tag, i8* %1441, i32 0, i32 22
 %1443 = load i32, i32* %21
 %1444 = add i32 %1443, 1
 store i32 %1444, i32* %21
 %1445 = zext i32 %1443 to i64
 %1446 = getelementptr [457 x i8], i8* %1442, i64 0, i64 %1445
 store i8 %1440, i8* %1446
 br label %1248
1447:
 %1448 = load i32, i32* %20
 %1449 = icmp eq i32 %1448, 16
 br i1 %1449, label %1450, label %1462
1450:
 %1451 = load i32, i32* %21
 %1452 = icmp ne i32 %1451, 0
 br i1 %1452, label %1462, label %1453
1453:
 br label %1454
1454:
 br label %1455
1455:
 br label %1456
1456:
 store i32 -1, i32* %18
 %1457 = load i8*, i8** %9
 %1458 = getelementptr %struct.tinfl_decompressor_tag, i8* %1457, i32 0, i32 0
 store i32 17, i32* %1458
 br label %2656
1459:
 br label %1460
1460:
 br label %1455
1461:
 br label %1462
1462:
 %1463 = load i32, i32* %20
 %1464 = sub i32 %1463, 16
 %1465 = zext i32 %1464 to i64
 %1466 = getelementptr [4 x i8], i8* @.str.15, i64 0, i64 %1465
 %1467 = load i8, i8* %1466
 %1468 = sext i8 %1467 to i32
 store i32 %1468, i32* %22
 br label %1469
1469:
 %1470 = load i32, i32* %19
 %1471 = load i32, i32* %22
 %1472 = icmp ult i32 %1470, %1471
 br i1 %1472, label %1473, label %1511
1473:
 br label %1474
1474:
 br label %1475
1475:
 br label %1476
1476:
 %1477 = load i8*, i8** %24
 %1478 = load i8*, i8** %25
 %1479 = icmp uge i8* %1477, %1478
 br i1 %1479, label %1480, label %1491
1480:
 br label %1481
1481:
 %1482 = load i32, i32* %15
 %1483 = and i32 %1482, 2
 %1484 = icmp ne i32 %1483, 0
 %1485 = zext i1 %1484 to i64
 %1486 = select i1 %1484, i32 1, i32 -4
 store i32 %1486, i32* %18
 %1487 = load i8*, i8** %9
 %1488 = getelementptr %struct.tinfl_decompressor_tag, i8* %1487, i32 0, i32 0
 store i32 18, i32* %1488
 br label %2656
1489:
 br label %1490
1490:
 br label %1476
1491:
 %1492 = load i8*, i8** %24
 %1493 = getelementptr i8, i8* %1492, i32 1
 store i8* %1493, i8** %24
 %1494 = load i8, i8* %1492
 %1495 = zext i8 %1494 to i32
 store i32 %1495, i32* %61
 br label %1496
1496:
 %1497 = load i32, i32* %61
 %1498 = zext i32 %1497 to i64
 %1499 = load i32, i32* %19
 %1500 = zext i32 %1499 to i64
 %1501 = shl i64 %1498, %1500
 %1502 = load i64, i64* %23
 %1503 = or i64 %1502, %1501
 store i64 %1503, i64* %23
 %1504 = load i32, i32* %19
 %1505 = add i32 %1504, 8
 store i32 %1505, i32* %19
 br label %1506
1506:
 %1507 = load i32, i32* %19
 %1508 = load i32, i32* %22
 %1509 = icmp ult i32 %1507, %1508
 br i1 %1509, label %1474, label %1510
1510:
 br label %1511
1511:
 %1512 = load i64, i64* %23
 %1513 = load i32, i32* %22
 %1514 = shl i32 1, %1513
 %1515 = sub i32 %1514, 1
 %1516 = sext i32 %1515 to i64
 %1517 = and i64 %1512, %1516
 %1518 = trunc i64 %1517 to i32
 store i32 %1518, i32* %57
 %1519 = load i32, i32* %22
 %1520 = load i64, i64* %23
 %1521 = zext i32 %1519 to i64
 %1522 = lshr i64 %1520, %1521
 store i64 %1522, i64* %23
 %1523 = load i32, i32* %22
 %1524 = load i32, i32* %19
 %1525 = sub i32 %1524, %1523
 store i32 %1525, i32* %19
 br label %1526
1526:
 %1527 = load i32, i32* %20
 %1528 = sub i32 %1527, 16
 %1529 = zext i32 %1528 to i64
 %1530 = getelementptr [4 x i8], i8* @.str.16, i64 0, i64 %1529
 %1531 = load i8, i8* %1530
 %1532 = sext i8 %1531 to i32
 %1533 = load i32, i32* %57
 %1534 = add i32 %1533, %1532
 store i32 %1534, i32* %57
 %1535 = load i8*, i8** %9
 %1536 = getelementptr %struct.tinfl_decompressor_tag, i8* %1535, i32 0, i32 22
 %1537 = getelementptr [457 x i8], i8* %1536, i64 0, i64 0
 %1538 = load i32, i32* %21
 %1539 = zext i32 %1538 to i64
 %1540 = getelementptr i8, i8* %1537, i64 %1539
 %1541 = load i32, i32* %20
 %1542 = icmp eq i32 %1541, 16
 br i1 %1542, label %1543, label %1552
1543:
 %1544 = load i8*, i8** %9
 %1545 = getelementptr %struct.tinfl_decompressor_tag, i8* %1544, i32 0, i32 22
 %1546 = load i32, i32* %21
 %1547 = sub i32 %1546, 1
 %1548 = zext i32 %1547 to i64
 %1549 = getelementptr [457 x i8], i8* %1545, i64 0, i64 %1548
 %1550 = load i8, i8* %1549
 %1551 = zext i8 %1550 to i32
 br label %1553
1552:
 br label %1553
1553:
 %1554 = phi i32 [%1551, %1543], [0, %1552]
 %1555 = load i32, i32* %57
 %1556 = zext i32 %1555 to i64
 %1557 = load i8*, i8** %9
 %1558 = getelementptr %struct.tinfl_decompressor_tag, i8* %1557, i32 0, i32 22
 %1559 = getelementptr [457 x i8], i8* %1558, i64 0, i64 0
 %1560 = load i32, i32* %21
 %1561 = zext i32 %1560 to i64
 %1562 = getelementptr i8, i8* %1559, i64 %1561
 %1563 = call i64 @llvm.objectsize.i64.p0 (i8* %1562, i1 0, i1 1, i1 0)
 %1564 = call i8* @__memset_chk (i8* %1540, i32 %1554, i64 %1556, i64 %1563)
 %1565 = load i32, i32* %57
 %1566 = load i32, i32* %21
 %1567 = add i32 %1566, %1565
 store i32 %1567, i32* %21
 br label %1248
1568:
 %1569 = load i8*, i8** %9
 %1570 = getelementptr %struct.tinfl_decompressor_tag, i8* %1569, i32 0, i32 11
 %1571 = getelementptr [3 x i32], i8* %1570, i64 0, i64 0
 %1572 = load i32, i32* %1571
 %1573 = load i8*, i8** %9
 %1574 = getelementptr %struct.tinfl_decompressor_tag, i8* %1573, i32 0, i32 11
 %1575 = getelementptr [3 x i32], i8* %1574, i64 0, i64 1
 %1576 = load i32, i32* %1575
 %1577 = add i32 %1572, %1576
 %1578 = load i32, i32* %21
 %1579 = icmp ne i32 %1577, %1578
 br i1 %1579, label %1580, label %1589
1580:
 br label %1581
1581:
 br label %1582
1582:
 br label %1583
1583:
 store i32 -1, i32* %18
 %1584 = load i8*, i8** %9
 %1585 = getelementptr %struct.tinfl_decompressor_tag, i8* %1584, i32 0, i32 0
 store i32 21, i32* %1585
 br label %2656
1586:
 br label %1587
1587:
 br label %1582
1588:
 br label %1589
1589:
 %1590 = load i8*, i8** %9
 %1591 = getelementptr %struct.tinfl_decompressor_tag, i8* %1590, i32 0, i32 18
 %1592 = getelementptr [288 x i8], i8* %1591, i64 0, i64 0
 %1593 = load i8*, i8** %9
 %1594 = getelementptr %struct.tinfl_decompressor_tag, i8* %1593, i32 0, i32 22
 %1595 = getelementptr [457 x i8], i8* %1594, i64 0, i64 0
 %1596 = load i8*, i8** %9
 %1597 = getelementptr %struct.tinfl_decompressor_tag, i8* %1596, i32 0, i32 11
 %1598 = getelementptr [3 x i32], i8* %1597, i64 0, i64 0
 %1599 = load i32, i32* %1598
 %1600 = zext i32 %1599 to i64
 %1601 = load i8*, i8** %9
 %1602 = getelementptr %struct.tinfl_decompressor_tag, i8* %1601, i32 0, i32 18
 %1603 = getelementptr [288 x i8], i8* %1602, i64 0, i64 0
 %1604 = call i64 @llvm.objectsize.i64.p0 (i8* %1603, i1 0, i1 1, i1 0)
 %1605 = call i8* @__memcpy_chk (i8* %1592, i8* %1595, i64 %1600, i64 %1604)
 %1606 = load i8*, i8** %9
 %1607 = getelementptr %struct.tinfl_decompressor_tag, i8* %1606, i32 0, i32 19
 %1608 = getelementptr [32 x i8], i8* %1607, i64 0, i64 0
 %1609 = load i8*, i8** %9
 %1610 = getelementptr %struct.tinfl_decompressor_tag, i8* %1609, i32 0, i32 22
 %1611 = getelementptr [457 x i8], i8* %1610, i64 0, i64 0
 %1612 = load i8*, i8** %9
 %1613 = getelementptr %struct.tinfl_decompressor_tag, i8* %1612, i32 0, i32 11
 %1614 = getelementptr [3 x i32], i8* %1613, i64 0, i64 0
 %1615 = load i32, i32* %1614
 %1616 = zext i32 %1615 to i64
 %1617 = getelementptr i8, i8* %1611, i64 %1616
 %1618 = load i8*, i8** %9
 %1619 = getelementptr %struct.tinfl_decompressor_tag, i8* %1618, i32 0, i32 11
 %1620 = getelementptr [3 x i32], i8* %1619, i64 0, i64 1
 %1621 = load i32, i32* %1620
 %1622 = zext i32 %1621 to i64
 %1623 = load i8*, i8** %9
 %1624 = getelementptr %struct.tinfl_decompressor_tag, i8* %1623, i32 0, i32 19
 %1625 = getelementptr [32 x i8], i8* %1624, i64 0, i64 0
 %1626 = call i64 @llvm.objectsize.i64.p0 (i8* %1625, i1 0, i1 1, i1 0)
 %1627 = call i8* @__memcpy_chk (i8* %1608, i8* %1617, i64 %1622, i64 %1626)
 br label %1628
1628:
 br label %1629
1629:
 %1630 = load i8*, i8** %9
 %1631 = getelementptr %struct.tinfl_decompressor_tag, i8* %1630, i32 0, i32 6
 %1632 = load i32, i32* %1631
 %1633 = add i32 %1632, -1
 store i32 %1633, i32* %1631
 br label %995
1634:
 br label %1635
1635:
 br label %1636
1636:
 %1637 = load i8*, i8** %25
 %1638 = load i8*, i8** %24
 %1639 = ptrtoint i8** %1637 to i64
 %1640 = ptrtoint i8** %1638 to i64
 %1641 = sub i64 %1639, %1640
 %1642 = icmp slt i64 %1641, 4
 br i1 %1642, label %1650, label %1643
1643:
 %1644 = load i8*, i8** %27
 %1645 = load i8*, i8** %26
 %1646 = ptrtoint i8** %1644 to i64
 %1647 = ptrtoint i8** %1645 to i64
 %1648 = sub i64 %1646, %1647
 %1649 = icmp slt i64 %1648, 2
 br i1 %1649, label %1650, label %1845
1650:
 br label %1651
1651:
 %1652 = load i32, i32* %19
 %1653 = icmp ult i32 %1652, 15
 br i1 %1653, label %1654, label %1780
1654:
 %1655 = load i8*, i8** %25
 %1656 = load i8*, i8** %24
 %1657 = ptrtoint i8** %1655 to i64
 %1658 = ptrtoint i8** %1656 to i64
 %1659 = sub i64 %1657, %1658
 %1660 = icmp slt i64 %1659, 2
 br i1 %1660, label %1661, label %1756
1661:
 br label %1662
1662:
 %1663 = load i8*, i8** %9
 %1664 = getelementptr %struct.tinfl_decompressor_tag, i8* %1663, i32 0, i32 14
 %1665 = getelementptr [3 x [1024 x i16]], i8* %1664, i64 0, i64 0
 %1666 = load i64, i64* %23
 %1667 = and i64 %1666, 1023
 %1668 = getelementptr [1024 x i16], i8* %1665, i64 0, i64 %1667
 %1669 = load i16, i16* %1668
 %1670 = sext i16 %1669 to i32
 store i32 %1670, i32* %63
 %1671 = load i32, i32* %63
 %1672 = icmp sge i32 %1671, 0
 br i1 %1672, label %1673, label %1684
1673:
 %1674 = load i32, i32* %63
 %1675 = ashr i32 %1674, 9
 store i32 %1675, i32* %64
 %1676 = load i32, i32* %64
 %1677 = icmp ne i32 %1676, 0
 br i1 %1677, label %1678, label %1683
1678:
 %1679 = load i32, i32* %19
 %1680 = load i32, i32* %64
 %1681 = icmp uge i32 %1679, %1680
 br i1 %1681, label %1682, label %1683
1682:
 br label %1755
1683:
 br label %1720
1684:
 %1685 = load i32, i32* %19
 %1686 = icmp ugt i32 %1685, 10
 br i1 %1686, label %1687, label %1719
1687:
 store i32 10, i32* %64
 br label %1688
1688:
 %1689 = load i8*, i8** %9
 %1690 = getelementptr %struct.tinfl_decompressor_tag, i8* %1689, i32 0, i32 15
 %1691 = load i32, i32* %63
 %1692 = xor i32 %1691, -1
 %1693 = sext i32 %1692 to i64
 %1694 = load i64, i64* %23
 %1695 = load i32, i32* %64
 %1696 = add i32 %1695, 1
 store i32 %1696, i32* %64
 %1697 = zext i32 %1695 to i64
 %1698 = lshr i64 %1694, %1697
 %1699 = and i64 %1698, 1
 %1700 = add i64 %1693, %1699
 %1701 = getelementptr [576 x i16], i8* %1690, i64 0, i64 %1700
 %1702 = load i16, i16* %1701
 %1703 = sext i16 %1702 to i32
 store i32 %1703, i32* %63
 br label %1704
1704:
 %1705 = load i32, i32* %63
 %1706 = icmp slt i32 %1705, 0
 br i1 %1706, label %1707, label %1712
1707:
 %1708 = load i32, i32* %19
 %1709 = load i32, i32* %64
 %1710 = add i32 %1709, 1
 %1711 = icmp uge i32 %1708, %1710
 br label %1712
1712:
 %1713 = phi i1 [0, %1704], [%1711, %1707]
 br i1 %1713, label %1688, label %1714
1714:
 %1715 = load i32, i32* %63
 %1716 = icmp sge i32 %1715, 0
 br i1 %1716, label %1717, label %1718
1717:
 br label %1755
1718:
 br label %1719
1719:
 br label %1720
1720:
 br label %1721
1721:
 br label %1722
1722:
 %1723 = load i8*, i8** %24
 %1724 = load i8*, i8** %25
 %1725 = icmp uge i8* %1723, %1724
 br i1 %1725, label %1726, label %1737
1726:
 br label %1727
1727:
 %1728 = load i32, i32* %15
 %1729 = and i32 %1728, 2
 %1730 = icmp ne i32 %1729, 0
 %1731 = zext i1 %1730 to i64
 %1732 = select i1 %1730, i32 1, i32 -4
 store i32 %1732, i32* %18
 %1733 = load i8*, i8** %9
 %1734 = getelementptr %struct.tinfl_decompressor_tag, i8* %1733, i32 0, i32 0
 store i32 23, i32* %1734
 br label %2656
1735:
 br label %1736
1736:
 br label %1722
1737:
 %1738 = load i8*, i8** %24
 %1739 = getelementptr i8, i8* %1738, i32 1
 store i8* %1739, i8** %24
 %1740 = load i8, i8* %1738
 %1741 = zext i8 %1740 to i32
 store i32 %1741, i32* %65
 br label %1742
1742:
 %1743 = load i32, i32* %65
 %1744 = zext i32 %1743 to i64
 %1745 = load i32, i32* %19
 %1746 = zext i32 %1745 to i64
 %1747 = shl i64 %1744, %1746
 %1748 = load i64, i64* %23
 %1749 = or i64 %1748, %1747
 store i64 %1749, i64* %23
 %1750 = load i32, i32* %19
 %1751 = add i32 %1750, 8
 store i32 %1751, i32* %19
 br label %1752
1752:
 %1753 = load i32, i32* %19
 %1754 = icmp ult i32 %1753, 15
 br i1 %1754, label %1662, label %1755
1755:
 br label %1779
1756:
 %1757 = load i8*, i8** %24
 %1758 = getelementptr i8, i8* %1757, i64 0
 %1759 = load i8, i8* %1758
 %1760 = zext i8 %1759 to i64
 %1761 = load i32, i32* %19
 %1762 = zext i32 %1761 to i64
 %1763 = shl i64 %1760, %1762
 %1764 = load i8*, i8** %24
 %1765 = getelementptr i8, i8* %1764, i64 1
 %1766 = load i8, i8* %1765
 %1767 = zext i8 %1766 to i64
 %1768 = load i32, i32* %19
 %1769 = add i32 %1768, 8
 %1770 = zext i32 %1769 to i64
 %1771 = shl i64 %1767, %1770
 %1772 = or i64 %1763, %1771
 %1773 = load i64, i64* %23
 %1774 = or i64 %1773, %1772
 store i64 %1774, i64* %23
 %1775 = load i8*, i8** %24
 %1776 = getelementptr i8, i8* %1775, i64 2
 store i8* %1776, i8** %24
 %1777 = load i32, i32* %19
 %1778 = add i32 %1777, 16
 store i32 %1778, i32* %19
 br label %1779
1779:
 br label %1780
1780:
 %1781 = load i8*, i8** %9
 %1782 = getelementptr %struct.tinfl_decompressor_tag, i8* %1781, i32 0, i32 14
 %1783 = getelementptr [3 x [1024 x i16]], i8* %1782, i64 0, i64 0
 %1784 = load i64, i64* %23
 %1785 = and i64 %1784, 1023
 %1786 = getelementptr [1024 x i16], i8* %1783, i64 0, i64 %1785
 %1787 = load i16, i16* %1786
 %1788 = sext i16 %1787 to i32
 store i32 %1788, i32* %63
 %1789 = icmp sge i32 %1788, 0
 br i1 %1789, label %1790, label %1795
1790:
 %1791 = load i32, i32* %63
 %1792 = ashr i32 %1791, 9
 store i32 %1792, i32* %64
 %1793 = load i32, i32* %63
 %1794 = and i32 %1793, 511
 store i32 %1794, i32* %63
 br label %1816
1795:
 store i32 10, i32* %64
 br label %1796
1796:
 %1797 = load i8*, i8** %9
 %1798 = getelementptr %struct.tinfl_decompressor_tag, i8* %1797, i32 0, i32 15
 %1799 = load i32, i32* %63
 %1800 = xor i32 %1799, -1
 %1801 = sext i32 %1800 to i64
 %1802 = load i64, i64* %23
 %1803 = load i32, i32* %64
 %1804 = add i32 %1803, 1
 store i32 %1804, i32* %64
 %1805 = zext i32 %1803 to i64
 %1806 = lshr i64 %1802, %1805
 %1807 = and i64 %1806, 1
 %1808 = add i64 %1801, %1807
 %1809 = getelementptr [576 x i16], i8* %1798, i64 0, i64 %1808
 %1810 = load i16, i16* %1809
 %1811 = sext i16 %1810 to i32
 store i32 %1811, i32* %63
 br label %1812
1812:
 %1813 = load i32, i32* %63
 %1814 = icmp slt i32 %1813, 0
 br i1 %1814, label %1796, label %1815
1815:
 br label %1816
1816:
 %1817 = load i32, i32* %63
 store i32 %1817, i32* %21
 %1818 = load i32, i32* %64
 %1819 = load i64, i64* %23
 %1820 = zext i32 %1818 to i64
 %1821 = lshr i64 %1819, %1820
 store i64 %1821, i64* %23
 %1822 = load i32, i32* %64
 %1823 = load i32, i32* %19
 %1824 = sub i32 %1823, %1822
 store i32 %1824, i32* %19
 br label %1825
1825:
 %1826 = load i32, i32* %21
 %1827 = icmp uge i32 %1826, 256
 br i1 %1827, label %1828, label %1829
1828:
 br label %1989
1829:
 br label %1830
1830:
 %1831 = load i8*, i8** %26
 %1832 = load i8*, i8** %27
 %1833 = icmp uge i8* %1831, %1832
 br i1 %1833, label %1834, label %1840
1834:
 br label %1835
1835:
 store i32 2, i32* %18
 %1836 = load i8*, i8** %9
 %1837 = getelementptr %struct.tinfl_decompressor_tag, i8* %1836, i32 0, i32 0
 store i32 24, i32* %1837
 br label %2656
1838:
 br label %1839
1839:
 br label %1830
1840:
 %1841 = load i32, i32* %21
 %1842 = trunc i32 %1841 to i8
 %1843 = load i8*, i8** %26
 %1844 = getelementptr i8, i8* %1843, i32 1
 store i8* %1844, i8** %26
 store i8 %1842, i8* %1843
 br label %1988
1845:
 %1846 = load i32, i32* %19
 %1847 = icmp ult i32 %1846, 30
 br i1 %1847, label %1848, label %1881
1848:
 %1849 = load i8*, i8** %24
 %1850 = getelementptr i8, i8* %1849, i64 0
 %1851 = load i8, i8* %1850
 %1852 = zext i8 %1851 to i32
 %1853 = load i8*, i8** %24
 %1854 = getelementptr i8, i8* %1853, i64 1
 %1855 = load i8, i8* %1854
 %1856 = zext i8 %1855 to i32
 %1857 = shl i32 %1856, 8
 %1858 = or i32 %1852, %1857
 %1859 = load i8*, i8** %24
 %1860 = getelementptr i8, i8* %1859, i64 2
 %1861 = load i8, i8* %1860
 %1862 = zext i8 %1861 to i32
 %1863 = shl i32 %1862, 16
 %1864 = or i32 %1858, %1863
 %1865 = load i8*, i8** %24
 %1866 = getelementptr i8, i8* %1865, i64 3
 %1867 = load i8, i8* %1866
 %1868 = zext i8 %1867 to i32
 %1869 = shl i32 %1868, 24
 %1870 = or i32 %1864, %1869
 %1871 = zext i32 %1870 to i64
 %1872 = load i32, i32* %19
 %1873 = zext i32 %1872 to i64
 %1874 = shl i64 %1871, %1873
 %1875 = load i64, i64* %23
 %1876 = or i64 %1875, %1874
 store i64 %1876, i64* %23
 %1877 = load i8*, i8** %24
 %1878 = getelementptr i8, i8* %1877, i64 4
 store i8* %1878, i8** %24
 %1879 = load i32, i32* %19
 %1880 = add i32 %1879, 32
 store i32 %1880, i32* %19
 br label %1881
1881:
 %1882 = load i8*, i8** %9
 %1883 = getelementptr %struct.tinfl_decompressor_tag, i8* %1882, i32 0, i32 14
 %1884 = getelementptr [3 x [1024 x i16]], i8* %1883, i64 0, i64 0
 %1885 = load i64, i64* %23
 %1886 = and i64 %1885, 1023
 %1887 = getelementptr [1024 x i16], i8* %1884, i64 0, i64 %1886
 %1888 = load i16, i16* %1887
 %1889 = sext i16 %1888 to i32
 store i32 %1889, i32* %66
 %1890 = icmp sge i32 %1889, 0
 br i1 %1890, label %1891, label %1894
1891:
 %1892 = load i32, i32* %66
 %1893 = ashr i32 %1892, 9
 store i32 %1893, i32* %67
 br label %1915
1894:
 store i32 10, i32* %67
 br label %1895
1895:
 %1896 = load i8*, i8** %9
 %1897 = getelementptr %struct.tinfl_decompressor_tag, i8* %1896, i32 0, i32 15
 %1898 = load i32, i32* %66
 %1899 = xor i32 %1898, -1
 %1900 = sext i32 %1899 to i64
 %1901 = load i64, i64* %23
 %1902 = load i32, i32* %67
 %1903 = add i32 %1902, 1
 store i32 %1903, i32* %67
 %1904 = zext i32 %1902 to i64
 %1905 = lshr i64 %1901, %1904
 %1906 = and i64 %1905, 1
 %1907 = add i64 %1900, %1906
 %1908 = getelementptr [576 x i16], i8* %1897, i64 0, i64 %1907
 %1909 = load i16, i16* %1908
 %1910 = sext i16 %1909 to i32
 store i32 %1910, i32* %66
 br label %1911
1911:
 %1912 = load i32, i32* %66
 %1913 = icmp slt i32 %1912, 0
 br i1 %1913, label %1895, label %1914
1914:
 br label %1915
1915:
 %1916 = load i32, i32* %66
 store i32 %1916, i32* %21
 %1917 = load i32, i32* %67
 %1918 = load i64, i64* %23
 %1919 = zext i32 %1917 to i64
 %1920 = lshr i64 %1918, %1919
 store i64 %1920, i64* %23
 %1921 = load i32, i32* %67
 %1922 = load i32, i32* %19
 %1923 = sub i32 %1922, %1921
 store i32 %1923, i32* %19
 %1924 = load i32, i32* %21
 %1925 = and i32 %1924, 256
 %1926 = icmp ne i32 %1925, 0
 br i1 %1926, label %1927, label %1928
1927:
 br label %1989
1928:
 %1929 = load i8*, i8** %9
 %1930 = getelementptr %struct.tinfl_decompressor_tag, i8* %1929, i32 0, i32 14
 %1931 = getelementptr [3 x [1024 x i16]], i8* %1930, i64 0, i64 0
 %1932 = load i64, i64* %23
 %1933 = and i64 %1932, 1023
 %1934 = getelementptr [1024 x i16], i8* %1931, i64 0, i64 %1933
 %1935 = load i16, i16* %1934
 %1936 = sext i16 %1935 to i32
 store i32 %1936, i32* %66
 %1937 = icmp sge i32 %1936, 0
 br i1 %1937, label %1938, label %1941
1938:
 %1939 = load i32, i32* %66
 %1940 = ashr i32 %1939, 9
 store i32 %1940, i32* %67
 br label %1962
1941:
 store i32 10, i32* %67
 br label %1942
1942:
 %1943 = load i8*, i8** %9
 %1944 = getelementptr %struct.tinfl_decompressor_tag, i8* %1943, i32 0, i32 15
 %1945 = load i32, i32* %66
 %1946 = xor i32 %1945, -1
 %1947 = sext i32 %1946 to i64
 %1948 = load i64, i64* %23
 %1949 = load i32, i32* %67
 %1950 = add i32 %1949, 1
 store i32 %1950, i32* %67
 %1951 = zext i32 %1949 to i64
 %1952 = lshr i64 %1948, %1951
 %1953 = and i64 %1952, 1
 %1954 = add i64 %1947, %1953
 %1955 = getelementptr [576 x i16], i8* %1944, i64 0, i64 %1954
 %1956 = load i16, i16* %1955
 %1957 = sext i16 %1956 to i32
 store i32 %1957, i32* %66
 br label %1958
1958:
 %1959 = load i32, i32* %66
 %1960 = icmp slt i32 %1959, 0
 br i1 %1960, label %1942, label %1961
1961:
 br label %1962
1962:
 %1963 = load i32, i32* %67
 %1964 = load i64, i64* %23
 %1965 = zext i32 %1963 to i64
 %1966 = lshr i64 %1964, %1965
 store i64 %1966, i64* %23
 %1967 = load i32, i32* %67
 %1968 = load i32, i32* %19
 %1969 = sub i32 %1968, %1967
 store i32 %1969, i32* %19
 %1970 = load i32, i32* %21
 %1971 = trunc i32 %1970 to i8
 %1972 = load i8*, i8** %26
 %1973 = getelementptr i8, i8* %1972, i64 0
 store i8 %1971, i8* %1973
 %1974 = load i32, i32* %66
 %1975 = and i32 %1974, 256
 %1976 = icmp ne i32 %1975, 0
 br i1 %1976, label %1977, label %1981
1977:
 %1978 = load i8*, i8** %26
 %1979 = getelementptr i8, i8* %1978, i32 1
 store i8* %1979, i8** %26
 %1980 = load i32, i32* %66
 store i32 %1980, i32* %21
 br label %1989
1981:
 %1982 = load i32, i32* %66
 %1983 = trunc i32 %1982 to i8
 %1984 = load i8*, i8** %26
 %1985 = getelementptr i8, i8* %1984, i64 1
 store i8 %1983, i8* %1985
 %1986 = load i8*, i8** %26
 %1987 = getelementptr i8, i8* %1986, i64 2
 store i8* %1987, i8** %26
 br label %1988
1988:
 br label %1636
1989:
 %1990 = load i32, i32* %21
 %1991 = and i32 %1990, 511
 store i32 %1991, i32* %21
 %1992 = icmp eq i32 %1991, 256
 br i1 %1992, label %1993, label %1994
1993:
 br label %2452
1994:
 %1995 = load i32, i32* %21
 %1996 = sub i32 %1995, 257
 %1997 = zext i32 %1996 to i64
 %1998 = getelementptr [31 x i8], i8* @tinfl_decompress.s_length_extra, i64 0, i64 %1997
 %1999 = load i8, i8* %1998
 %2000 = zext i8 %1999 to i32
 store i32 %2000, i32* %22
 %2001 = load i32, i32* %21
 %2002 = sub i32 %2001, 257
 %2003 = zext i32 %2002 to i64
 %2004 = getelementptr [31 x i16], i8* @tinfl_decompress.s_length_base, i64 0, i64 %2003
 %2005 = load i16, i16* %2004
 %2006 = zext i16 %2005 to i32
 store i32 %2006, i32* %21
 %2007 = load i32, i32* %22
 %2008 = icmp ne i32 %2007, 0
 br i1 %2008, label %2009, label %2071
2009:
 br label %2010
2010:
 %2011 = load i32, i32* %19
 %2012 = load i32, i32* %22
 %2013 = icmp ult i32 %2011, %2012
 br i1 %2013, label %2014, label %2052
2014:
 br label %2015
2015:
 br label %2016
2016:
 br label %2017
2017:
 %2018 = load i8*, i8** %24
 %2019 = load i8*, i8** %25
 %2020 = icmp uge i8* %2018, %2019
 br i1 %2020, label %2021, label %2032
2021:
 br label %2022
2022:
 %2023 = load i32, i32* %15
 %2024 = and i32 %2023, 2
 %2025 = icmp ne i32 %2024, 0
 %2026 = zext i1 %2025 to i64
 %2027 = select i1 %2025, i32 1, i32 -4
 store i32 %2027, i32* %18
 %2028 = load i8*, i8** %9
 %2029 = getelementptr %struct.tinfl_decompressor_tag, i8* %2028, i32 0, i32 0
 store i32 25, i32* %2029
 br label %2656
2030:
 br label %2031
2031:
 br label %2017
2032:
 %2033 = load i8*, i8** %24
 %2034 = getelementptr i8, i8* %2033, i32 1
 store i8* %2034, i8** %24
 %2035 = load i8, i8* %2033
 %2036 = zext i8 %2035 to i32
 store i32 %2036, i32* %69
 br label %2037
2037:
 %2038 = load i32, i32* %69
 %2039 = zext i32 %2038 to i64
 %2040 = load i32, i32* %19
 %2041 = zext i32 %2040 to i64
 %2042 = shl i64 %2039, %2041
 %2043 = load i64, i64* %23
 %2044 = or i64 %2043, %2042
 store i64 %2044, i64* %23
 %2045 = load i32, i32* %19
 %2046 = add i32 %2045, 8
 store i32 %2046, i32* %19
 br label %2047
2047:
 %2048 = load i32, i32* %19
 %2049 = load i32, i32* %22
 %2050 = icmp ult i32 %2048, %2049
 br i1 %2050, label %2015, label %2051
2051:
 br label %2052
2052:
 %2053 = load i64, i64* %23
 %2054 = load i32, i32* %22
 %2055 = shl i32 1, %2054
 %2056 = sub i32 %2055, 1
 %2057 = sext i32 %2056 to i64
 %2058 = and i64 %2053, %2057
 %2059 = trunc i64 %2058 to i32
 store i32 %2059, i32* %68
 %2060 = load i32, i32* %22
 %2061 = load i64, i64* %23
 %2062 = zext i32 %2060 to i64
 %2063 = lshr i64 %2061, %2062
 store i64 %2063, i64* %23
 %2064 = load i32, i32* %22
 %2065 = load i32, i32* %19
 %2066 = sub i32 %2065, %2064
 store i32 %2066, i32* %19
 br label %2067
2067:
 %2068 = load i32, i32* %68
 %2069 = load i32, i32* %21
 %2070 = add i32 %2069, %2068
 store i32 %2070, i32* %21
 br label %2071
2071:
 br label %2072
2072:
 %2073 = load i32, i32* %19
 %2074 = icmp ult i32 %2073, 15
 br i1 %2074, label %2075, label %2201
2075:
 %2076 = load i8*, i8** %25
 %2077 = load i8*, i8** %24
 %2078 = ptrtoint i8** %2076 to i64
 %2079 = ptrtoint i8** %2077 to i64
 %2080 = sub i64 %2078, %2079
 %2081 = icmp slt i64 %2080, 2
 br i1 %2081, label %2082, label %2177
2082:
 br label %2083
2083:
 %2084 = load i8*, i8** %9
 %2085 = getelementptr %struct.tinfl_decompressor_tag, i8* %2084, i32 0, i32 14
 %2086 = getelementptr [3 x [1024 x i16]], i8* %2085, i64 0, i64 1
 %2087 = load i64, i64* %23
 %2088 = and i64 %2087, 1023
 %2089 = getelementptr [1024 x i16], i8* %2086, i64 0, i64 %2088
 %2090 = load i16, i16* %2089
 %2091 = sext i16 %2090 to i32
 store i32 %2091, i32* %70
 %2092 = load i32, i32* %70
 %2093 = icmp sge i32 %2092, 0
 br i1 %2093, label %2094, label %2105
2094:
 %2095 = load i32, i32* %70
 %2096 = ashr i32 %2095, 9
 store i32 %2096, i32* %71
 %2097 = load i32, i32* %71
 %2098 = icmp ne i32 %2097, 0
 br i1 %2098, label %2099, label %2104
2099:
 %2100 = load i32, i32* %19
 %2101 = load i32, i32* %71
 %2102 = icmp uge i32 %2100, %2101
 br i1 %2102, label %2103, label %2104
2103:
 br label %2176
2104:
 br label %2141
2105:
 %2106 = load i32, i32* %19
 %2107 = icmp ugt i32 %2106, 10
 br i1 %2107, label %2108, label %2140
2108:
 store i32 10, i32* %71
 br label %2109
2109:
 %2110 = load i8*, i8** %9
 %2111 = getelementptr %struct.tinfl_decompressor_tag, i8* %2110, i32 0, i32 16
 %2112 = load i32, i32* %70
 %2113 = xor i32 %2112, -1
 %2114 = sext i32 %2113 to i64
 %2115 = load i64, i64* %23
 %2116 = load i32, i32* %71
 %2117 = add i32 %2116, 1
 store i32 %2117, i32* %71
 %2118 = zext i32 %2116 to i64
 %2119 = lshr i64 %2115, %2118
 %2120 = and i64 %2119, 1
 %2121 = add i64 %2114, %2120
 %2122 = getelementptr [64 x i16], i8* %2111, i64 0, i64 %2121
 %2123 = load i16, i16* %2122
 %2124 = sext i16 %2123 to i32
 store i32 %2124, i32* %70
 br label %2125
2125:
 %2126 = load i32, i32* %70
 %2127 = icmp slt i32 %2126, 0
 br i1 %2127, label %2128, label %2133
2128:
 %2129 = load i32, i32* %19
 %2130 = load i32, i32* %71
 %2131 = add i32 %2130, 1
 %2132 = icmp uge i32 %2129, %2131
 br label %2133
2133:
 %2134 = phi i1 [0, %2125], [%2132, %2128]
 br i1 %2134, label %2109, label %2135
2135:
 %2136 = load i32, i32* %70
 %2137 = icmp sge i32 %2136, 0
 br i1 %2137, label %2138, label %2139
2138:
 br label %2176
2139:
 br label %2140
2140:
 br label %2141
2141:
 br label %2142
2142:
 br label %2143
2143:
 %2144 = load i8*, i8** %24
 %2145 = load i8*, i8** %25
 %2146 = icmp uge i8* %2144, %2145
 br i1 %2146, label %2147, label %2158
2147:
 br label %2148
2148:
 %2149 = load i32, i32* %15
 %2150 = and i32 %2149, 2
 %2151 = icmp ne i32 %2150, 0
 %2152 = zext i1 %2151 to i64
 %2153 = select i1 %2151, i32 1, i32 -4
 store i32 %2153, i32* %18
 %2154 = load i8*, i8** %9
 %2155 = getelementptr %struct.tinfl_decompressor_tag, i8* %2154, i32 0, i32 0
 store i32 26, i32* %2155
 br label %2656
2156:
 br label %2157
2157:
 br label %2143
2158:
 %2159 = load i8*, i8** %24
 %2160 = getelementptr i8, i8* %2159, i32 1
 store i8* %2160, i8** %24
 %2161 = load i8, i8* %2159
 %2162 = zext i8 %2161 to i32
 store i32 %2162, i32* %72
 br label %2163
2163:
 %2164 = load i32, i32* %72
 %2165 = zext i32 %2164 to i64
 %2166 = load i32, i32* %19
 %2167 = zext i32 %2166 to i64
 %2168 = shl i64 %2165, %2167
 %2169 = load i64, i64* %23
 %2170 = or i64 %2169, %2168
 store i64 %2170, i64* %23
 %2171 = load i32, i32* %19
 %2172 = add i32 %2171, 8
 store i32 %2172, i32* %19
 br label %2173
2173:
 %2174 = load i32, i32* %19
 %2175 = icmp ult i32 %2174, 15
 br i1 %2175, label %2083, label %2176
2176:
 br label %2200
2177:
 %2178 = load i8*, i8** %24
 %2179 = getelementptr i8, i8* %2178, i64 0
 %2180 = load i8, i8* %2179
 %2181 = zext i8 %2180 to i64
 %2182 = load i32, i32* %19
 %2183 = zext i32 %2182 to i64
 %2184 = shl i64 %2181, %2183
 %2185 = load i8*, i8** %24
 %2186 = getelementptr i8, i8* %2185, i64 1
 %2187 = load i8, i8* %2186
 %2188 = zext i8 %2187 to i64
 %2189 = load i32, i32* %19
 %2190 = add i32 %2189, 8
 %2191 = zext i32 %2190 to i64
 %2192 = shl i64 %2188, %2191
 %2193 = or i64 %2184, %2192
 %2194 = load i64, i64* %23
 %2195 = or i64 %2194, %2193
 store i64 %2195, i64* %23
 %2196 = load i8*, i8** %24
 %2197 = getelementptr i8, i8* %2196, i64 2
 store i8* %2197, i8** %24
 %2198 = load i32, i32* %19
 %2199 = add i32 %2198, 16
 store i32 %2199, i32* %19
 br label %2200
2200:
 br label %2201
2201:
 %2202 = load i8*, i8** %9
 %2203 = getelementptr %struct.tinfl_decompressor_tag, i8* %2202, i32 0, i32 14
 %2204 = getelementptr [3 x [1024 x i16]], i8* %2203, i64 0, i64 1
 %2205 = load i64, i64* %23
 %2206 = and i64 %2205, 1023
 %2207 = getelementptr [1024 x i16], i8* %2204, i64 0, i64 %2206
 %2208 = load i16, i16* %2207
 %2209 = sext i16 %2208 to i32
 store i32 %2209, i32* %70
 %2210 = icmp sge i32 %2209, 0
 br i1 %2210, label %2211, label %2216
2211:
 %2212 = load i32, i32* %70
 %2213 = ashr i32 %2212, 9
 store i32 %2213, i32* %71
 %2214 = load i32, i32* %70
 %2215 = and i32 %2214, 511
 store i32 %2215, i32* %70
 br label %2237
2216:
 store i32 10, i32* %71
 br label %2217
2217:
 %2218 = load i8*, i8** %9
 %2219 = getelementptr %struct.tinfl_decompressor_tag, i8* %2218, i32 0, i32 16
 %2220 = load i32, i32* %70
 %2221 = xor i32 %2220, -1
 %2222 = sext i32 %2221 to i64
 %2223 = load i64, i64* %23
 %2224 = load i32, i32* %71
 %2225 = add i32 %2224, 1
 store i32 %2225, i32* %71
 %2226 = zext i32 %2224 to i64
 %2227 = lshr i64 %2223, %2226
 %2228 = and i64 %2227, 1
 %2229 = add i64 %2222, %2228
 %2230 = getelementptr [64 x i16], i8* %2219, i64 0, i64 %2229
 %2231 = load i16, i16* %2230
 %2232 = sext i16 %2231 to i32
 store i32 %2232, i32* %70
 br label %2233
2233:
 %2234 = load i32, i32* %70
 %2235 = icmp slt i32 %2234, 0
 br i1 %2235, label %2217, label %2236
2236:
 br label %2237
2237:
 %2238 = load i32, i32* %70
 store i32 %2238, i32* %20
 %2239 = load i32, i32* %71
 %2240 = load i64, i64* %23
 %2241 = zext i32 %2239 to i64
 %2242 = lshr i64 %2240, %2241
 store i64 %2242, i64* %23
 %2243 = load i32, i32* %71
 %2244 = load i32, i32* %19
 %2245 = sub i32 %2244, %2243
 store i32 %2245, i32* %19
 br label %2246
2246:
 %2247 = load i32, i32* %20
 %2248 = zext i32 %2247 to i64
 %2249 = getelementptr [32 x i8], i8* @tinfl_decompress.s_dist_extra, i64 0, i64 %2248
 %2250 = load i8, i8* %2249
 %2251 = zext i8 %2250 to i32
 store i32 %2251, i32* %22
 %2252 = load i32, i32* %20
 %2253 = zext i32 %2252 to i64
 %2254 = getelementptr [32 x i16], i8* @tinfl_decompress.s_dist_base, i64 0, i64 %2253
 %2255 = load i16, i16* %2254
 %2256 = zext i16 %2255 to i32
 store i32 %2256, i32* %20
 %2257 = load i32, i32* %22
 %2258 = icmp ne i32 %2257, 0
 br i1 %2258, label %2259, label %2321
2259:
 br label %2260
2260:
 %2261 = load i32, i32* %19
 %2262 = load i32, i32* %22
 %2263 = icmp ult i32 %2261, %2262
 br i1 %2263, label %2264, label %2302
2264:
 br label %2265
2265:
 br label %2266
2266:
 br label %2267
2267:
 %2268 = load i8*, i8** %24
 %2269 = load i8*, i8** %25
 %2270 = icmp uge i8* %2268, %2269
 br i1 %2270, label %2271, label %2282
2271:
 br label %2272
2272:
 %2273 = load i32, i32* %15
 %2274 = and i32 %2273, 2
 %2275 = icmp ne i32 %2274, 0
 %2276 = zext i1 %2275 to i64
 %2277 = select i1 %2275, i32 1, i32 -4
 store i32 %2277, i32* %18
 %2278 = load i8*, i8** %9
 %2279 = getelementptr %struct.tinfl_decompressor_tag, i8* %2278, i32 0, i32 0
 store i32 27, i32* %2279
 br label %2656
2280:
 br label %2281
2281:
 br label %2267
2282:
 %2283 = load i8*, i8** %24
 %2284 = getelementptr i8, i8* %2283, i32 1
 store i8* %2284, i8** %24
 %2285 = load i8, i8* %2283
 %2286 = zext i8 %2285 to i32
 store i32 %2286, i32* %74
 br label %2287
2287:
 %2288 = load i32, i32* %74
 %2289 = zext i32 %2288 to i64
 %2290 = load i32, i32* %19
 %2291 = zext i32 %2290 to i64
 %2292 = shl i64 %2289, %2291
 %2293 = load i64, i64* %23
 %2294 = or i64 %2293, %2292
 store i64 %2294, i64* %23
 %2295 = load i32, i32* %19
 %2296 = add i32 %2295, 8
 store i32 %2296, i32* %19
 br label %2297
2297:
 %2298 = load i32, i32* %19
 %2299 = load i32, i32* %22
 %2300 = icmp ult i32 %2298, %2299
 br i1 %2300, label %2265, label %2301
2301:
 br label %2302
2302:
 %2303 = load i64, i64* %23
 %2304 = load i32, i32* %22
 %2305 = shl i32 1, %2304
 %2306 = sub i32 %2305, 1
 %2307 = sext i32 %2306 to i64
 %2308 = and i64 %2303, %2307
 %2309 = trunc i64 %2308 to i32
 store i32 %2309, i32* %73
 %2310 = load i32, i32* %22
 %2311 = load i64, i64* %23
 %2312 = zext i32 %2310 to i64
 %2313 = lshr i64 %2311, %2312
 store i64 %2313, i64* %23
 %2314 = load i32, i32* %22
 %2315 = load i32, i32* %19
 %2316 = sub i32 %2315, %2314
 store i32 %2316, i32* %19
 br label %2317
2317:
 %2318 = load i32, i32* %73
 %2319 = load i32, i32* %20
 %2320 = add i32 %2319, %2318
 store i32 %2320, i32* %20
 br label %2321
2321:
 %2322 = load i8*, i8** %26
 %2323 = load i8*, i8** %12
 %2324 = ptrtoint i8** %2322 to i64
 %2325 = ptrtoint i8** %2323 to i64
 %2326 = sub i64 %2324, %2325
 store i64 %2326, i64* %29
 %2327 = load i32, i32* %20
 %2328 = icmp eq i32 %2327, 0
 br i1 %2328, label %2337, label %2329
2329:
 %2330 = load i32, i32* %20
 %2331 = zext i32 %2330 to i64
 %2332 = load i64, i64* %29
 %2333 = icmp ugt i64 %2331, %2332
 br i1 %2333, label %2337, label %2334
2334:
 %2335 = load i64, i64* %29
 %2336 = icmp eq i64 %2335, 0
 br i1 %2336, label %2337, label %2350
2337:
 %2338 = load i32, i32* %15
 %2339 = and i32 %2338, 4
 %2340 = icmp ne i32 %2339, 0
 br i1 %2340, label %2341, label %2350
2341:
 br label %2342
2342:
 br label %2343
2343:
 br label %2344
2344:
 store i32 -1, i32* %18
 %2345 = load i8*, i8** %9
 %2346 = getelementptr %struct.tinfl_decompressor_tag, i8* %2345, i32 0, i32 0
 store i32 37, i32* %2346
 br label %2656
2347:
 br label %2348
2348:
 br label %2343
2349:
 br label %2350
2350:
 %2351 = load i8*, i8** %12
 %2352 = load i64, i64* %29
 %2353 = load i32, i32* %20
 %2354 = zext i32 %2353 to i64
 %2355 = sub i64 %2352, %2354
 %2356 = load i64, i64* %28
 %2357 = and i64 %2355, %2356
 %2358 = getelementptr i8, i8* %2351, i64 %2357
 store i8* %2358, i8** %62
 %2359 = load i8*, i8** %26
 %2360 = load i8*, i8** %62
 %2361 = icmp ugt i8* %2359, %2360
 br i1 %2361, label %2362, label %2364
2362:
 %2363 = load i8*, i8** %26
 br label %2366
2364:
 %2365 = load i8*, i8** %62
 br label %2366
2366:
 %2367 = phi i8* [%2363, %2362], [%2365, %2364]
 %2368 = load i32, i32* %21
 %2369 = zext i32 %2368 to i64
 %2370 = getelementptr i8, i8* %2367, i64 %2369
 %2371 = load i8*, i8** %27
 %2372 = icmp ugt i8* %2370, %2371
 br i1 %2372, label %2373, label %2403
2373:
 br label %2374
2374:
 %2375 = load i32, i32* %21
 %2376 = add i32 %2375, -1
 store i32 %2376, i32* %21
 %2377 = icmp ne i32 %2375, 0
 br i1 %2377, label %2378, label %2402
2378:
 br label %2379
2379:
 %2380 = load i8*, i8** %26
 %2381 = load i8*, i8** %27
 %2382 = icmp uge i8* %2380, %2381
 br i1 %2382, label %2383, label %2389
2383:
 br label %2384
2384:
 store i32 2, i32* %18
 %2385 = load i8*, i8** %9
 %2386 = getelementptr %struct.tinfl_decompressor_tag, i8* %2385, i32 0, i32 0
 store i32 53, i32* %2386
 br label %2656
2387:
 br label %2388
2388:
 br label %2379
2389:
 %2390 = load i8*, i8** %12
 %2391 = load i64, i64* %29
 %2392 = add i64 %2391, 1
 store i64 %2392, i64* %29
 %2393 = load i32, i32* %20
 %2394 = zext i32 %2393 to i64
 %2395 = sub i64 %2391, %2394
 %2396 = load i64, i64* %28
 %2397 = and i64 %2395, %2396
 %2398 = getelementptr i8, i8* %2390, i64 %2397
 %2399 = load i8, i8* %2398
 %2400 = load i8*, i8** %26
 %2401 = getelementptr i8, i8* %2400, i32 1
 store i8* %2401, i8** %26
 store i8 %2399, i8* %2400
 br label %2374
2402:
 br label %1635
2403:
 br label %2404
2404:
 %2405 = load i32, i32* %21
 %2406 = icmp ugt i32 %2405, 2
 br i1 %2406, label %2407, label %2429
2407:
 %2408 = load i8*, i8** %62
 %2409 = getelementptr i8, i8* %2408, i64 0
 %2410 = load i8, i8* %2409
 %2411 = load i8*, i8** %26
 %2412 = getelementptr i8, i8* %2411, i64 0
 store i8 %2410, i8* %2412
 %2413 = load i8*, i8** %62
 %2414 = getelementptr i8, i8* %2413, i64 1
 %2415 = load i8, i8* %2414
 %2416 = load i8*, i8** %26
 %2417 = getelementptr i8, i8* %2416, i64 1
 store i8 %2415, i8* %2417
 %2418 = load i8*, i8** %62
 %2419 = getelementptr i8, i8* %2418, i64 2
 %2420 = load i8, i8* %2419
 %2421 = load i8*, i8** %26
 %2422 = getelementptr i8, i8* %2421, i64 2
 store i8 %2420, i8* %2422
 %2423 = load i8*, i8** %26
 %2424 = getelementptr i8, i8* %2423, i64 3
 store i8* %2424, i8** %26
 %2425 = load i8*, i8** %62
 %2426 = getelementptr i8, i8* %2425, i64 3
 store i8* %2426, i8** %62
 %2427 = load i32, i32* %21
 %2428 = sub i32 %2427, 3
 store i32 %2428, i32* %21
 br label %2404
2429:
 %2430 = load i32, i32* %21
 %2431 = icmp ugt i32 %2430, 0
 br i1 %2431, label %2432, label %2451
2432:
 %2433 = load i8*, i8** %62
 %2434 = getelementptr i8, i8* %2433, i64 0
 %2435 = load i8, i8* %2434
 %2436 = load i8*, i8** %26
 %2437 = getelementptr i8, i8* %2436, i64 0
 store i8 %2435, i8* %2437
 %2438 = load i32, i32* %21
 %2439 = icmp ugt i32 %2438, 1
 br i1 %2439, label %2440, label %2446
2440:
 %2441 = load i8*, i8** %62
 %2442 = getelementptr i8, i8* %2441, i64 1
 %2443 = load i8, i8* %2442
 %2444 = load i8*, i8** %26
 %2445 = getelementptr i8, i8* %2444, i64 1
 store i8 %2443, i8* %2445
 br label %2446
2446:
 %2447 = load i32, i32* %21
 %2448 = load i8*, i8** %26
 %2449 = zext i32 %2447 to i64
 %2450 = getelementptr i8, i8* %2448, i64 %2449
 store i8* %2450, i8** %26
 br label %2451
2451:
 br label %1635
2452:
 br label %2453
2453:
 br label %2454
2454:
 br label %2455
2455:
 %2456 = load i8*, i8** %9
 %2457 = getelementptr %struct.tinfl_decompressor_tag, i8* %2456, i32 0, i32 5
 %2458 = load i32, i32* %2457
 %2459 = and i32 %2458, 1
 %2460 = icmp ne i32 %2459, 0
 %2461 = xor i1 %2460, 1
 br i1 %2461, label %301, label %2462
2462:
 br label %2463
2463:
 %2464 = load i32, i32* %19
 %2465 = load i32, i32* %19
 %2466 = and i32 %2465, 7
 %2467 = icmp ult i32 %2464, %2466
 br i1 %2467, label %2468, label %2507
2468:
 br label %2469
2469:
 br label %2470
2470:
 br label %2471
2471:
 %2472 = load i8*, i8** %24
 %2473 = load i8*, i8** %25
 %2474 = icmp uge i8* %2472, %2473
 br i1 %2474, label %2475, label %2486
2475:
 br label %2476
2476:
 %2477 = load i32, i32* %15
 %2478 = and i32 %2477, 2
 %2479 = icmp ne i32 %2478, 0
 %2480 = zext i1 %2479 to i64
 %2481 = select i1 %2479, i32 1, i32 -4
 store i32 %2481, i32* %18
 %2482 = load i8*, i8** %9
 %2483 = getelementptr %struct.tinfl_decompressor_tag, i8* %2482, i32 0, i32 0
 store i32 32, i32* %2483
 br label %2656
2484:
 br label %2485
2485:
 br label %2471
2486:
 %2487 = load i8*, i8** %24
 %2488 = getelementptr i8, i8* %2487, i32 1
 store i8* %2488, i8** %24
 %2489 = load i8, i8* %2487
 %2490 = zext i8 %2489 to i32
 store i32 %2490, i32* %75
 br label %2491
2491:
 %2492 = load i32, i32* %75
 %2493 = zext i32 %2492 to i64
 %2494 = load i32, i32* %19
 %2495 = zext i32 %2494 to i64
 %2496 = shl i64 %2493, %2495
 %2497 = load i64, i64* %23
 %2498 = or i64 %2497, %2496
 store i64 %2498, i64* %23
 %2499 = load i32, i32* %19
 %2500 = add i32 %2499, 8
 store i32 %2500, i32* %19
 br label %2501
2501:
 %2502 = load i32, i32* %19
 %2503 = load i32, i32* %19
 %2504 = and i32 %2503, 7
 %2505 = icmp ult i32 %2502, %2504
 br i1 %2505, label %2469, label %2506
2506:
 br label %2507
2507:
 %2508 = load i32, i32* %19
 %2509 = and i32 %2508, 7
 %2510 = load i64, i64* %23
 %2511 = zext i32 %2509 to i64
 %2512 = lshr i64 %2510, %2511
 store i64 %2512, i64* %23
 %2513 = load i32, i32* %19
 %2514 = and i32 %2513, 7
 %2515 = load i32, i32* %19
 %2516 = sub i32 %2515, %2514
 store i32 %2516, i32* %19
 br label %2517
2517:
 br label %2518
2518:
 %2519 = load i8*, i8** %24
 %2520 = load i8*, i8** %10
 %2521 = icmp ugt i8* %2519, %2520
 br i1 %2521, label %2522, label %2525
2522:
 %2523 = load i32, i32* %19
 %2524 = icmp uge i32 %2523, 8
 br label %2525
2525:
 %2526 = phi i1 [0, %2518], [%2524, %2522]
 br i1 %2526, label %2527, label %2532
2527:
 %2528 = load i8*, i8** %24
 %2529 = getelementptr i8, i8* %2528, i32 -1
 store i8* %2529, i8** %24
 %2530 = load i32, i32* %19
 %2531 = sub i32 %2530, 8
 store i32 %2531, i32* %19
 br label %2518
2532:
 %2533 = load i32, i32* %19
 %2534 = zext i32 %2533 to i64
 %2535 = shl i64 -1, %2534
 %2536 = xor i64 %2535, -1
 %2537 = load i64, i64* %23
 %2538 = and i64 %2537, %2536
 store i64 %2538, i64* %23
 %2539 = load i32, i32* %19
 %2540 = icmp ne i32 %2539, 0
 %2541 = xor i1 %2540, 1
 %2542 = xor i1 %2541, 1
 %2543 = zext i1 %2542 to i32
 %2544 = sext i32 %2543 to i64
 %2545 = icmp ne i64 %2544, 0
 br i1 %2545, label %2546, label %2548
2546:
 call void @__assert_rtn (i8* @__func__.tinfl_decompress, i8* @.str.11, i32 4278, i8* @.str.17)
 unreachable
2547:
 br label %2549
2548:
 br label %2549
2549:
 %2550 = load i32, i32* %15
 %2551 = and i32 %2550, 1
 %2552 = icmp ne i32 %2551, 0
 br i1 %2552, label %2553, label %2646
2553:
 store i32 0, i32* %21
 br label %2554
2554:
 %2555 = load i32, i32* %21
 %2556 = icmp ult i32 %2555, 4
 br i1 %2556, label %2557, label %2645
2557:
 %2558 = load i32, i32* %19
 %2559 = icmp ne i32 %2558, 0
 br i1 %2559, label %2560, label %2610
2560:
 br label %2561
2561:
 %2562 = load i32, i32* %19
 %2563 = icmp ult i32 %2562, 8
 br i1 %2563, label %2564, label %2601
2564:
 br label %2565
2565:
 br label %2566
2566:
 br label %2567
2567:
 %2568 = load i8*, i8** %24
 %2569 = load i8*, i8** %25
 %2570 = icmp uge i8* %2568, %2569
 br i1 %2570, label %2571, label %2582
2571:
 br label %2572
2572:
 %2573 = load i32, i32* %15
 %2574 = and i32 %2573, 2
 %2575 = icmp ne i32 %2574, 0
 %2576 = zext i1 %2575 to i64
 %2577 = select i1 %2575, i32 1, i32 -4
 store i32 %2577, i32* %18
 %2578 = load i8*, i8** %9
 %2579 = getelementptr %struct.tinfl_decompressor_tag, i8* %2578, i32 0, i32 0
 store i32 41, i32* %2579
 br label %2656
2580:
 br label %2581
2581:
 br label %2567
2582:
 %2583 = load i8*, i8** %24
 %2584 = getelementptr i8, i8* %2583, i32 1
 store i8* %2584, i8** %24
 %2585 = load i8, i8* %2583
 %2586 = zext i8 %2585 to i32
 store i32 %2586, i32* %77
 br label %2587
2587:
 %2588 = load i32, i32* %77
 %2589 = zext i32 %2588 to i64
 %2590 = load i32, i32* %19
 %2591 = zext i32 %2590 to i64
 %2592 = shl i64 %2589, %2591
 %2593 = load i64, i64* %23
 %2594 = or i64 %2593, %2592
 store i64 %2594, i64* %23
 %2595 = load i32, i32* %19
 %2596 = add i32 %2595, 8
 store i32 %2596, i32* %19
 br label %2597
2597:
 %2598 = load i32, i32* %19
 %2599 = icmp ult i32 %2598, 8
 br i1 %2599, label %2565, label %2600
2600:
 br label %2601
2601:
 %2602 = load i64, i64* %23
 %2603 = and i64 %2602, 255
 %2604 = trunc i64 %2603 to i32
 store i32 %2604, i32* %76
 %2605 = load i64, i64* %23
 %2606 = lshr i64 %2605, 8
 store i64 %2606, i64* %23
 %2607 = load i32, i32* %19
 %2608 = sub i32 %2607, 8
 store i32 %2608, i32* %19
 br label %2609
2609:
 br label %2633
2610:
 br label %2611
2611:
 br label %2612
2612:
 %2613 = load i8*, i8** %24
 %2614 = load i8*, i8** %25
 %2615 = icmp uge i8* %2613, %2614
 br i1 %2615, label %2616, label %2627
2616:
 br label %2617
2617:
 %2618 = load i32, i32* %15
 %2619 = and i32 %2618, 2
 %2620 = icmp ne i32 %2619, 0
 %2621 = zext i1 %2620 to i64
 %2622 = select i1 %2620, i32 1, i32 -4
 store i32 %2622, i32* %18
 %2623 = load i8*, i8** %9
 %2624 = getelementptr %struct.tinfl_decompressor_tag, i8* %2623, i32 0, i32 0
 store i32 42, i32* %2624
 br label %2656
2625:
 br label %2626
2626:
 br label %2612
2627:
 %2628 = load i8*, i8** %24
 %2629 = getelementptr i8, i8* %2628, i32 1
 store i8* %2629, i8** %24
 %2630 = load i8, i8* %2628
 %2631 = zext i8 %2630 to i32
 store i32 %2631, i32* %76
 br label %2632
2632:
 br label %2633
2633:
 %2634 = load i8*, i8** %9
 %2635 = getelementptr %struct.tinfl_decompressor_tag, i8* %2634, i32 0, i32 4
 %2636 = load i32, i32* %2635
 %2637 = shl i32 %2636, 8
 %2638 = load i32, i32* %76
 %2639 = or i32 %2637, %2638
 %2640 = load i8*, i8** %9
 %2641 = getelementptr %struct.tinfl_decompressor_tag, i8* %2640, i32 0, i32 4
 store i32 %2639, i32* %2641
 br label %2642
2642:
 %2643 = load i32, i32* %21
 %2644 = add i32 %2643, 1
 store i32 %2644, i32* %21
 br label %2554
2645:
 br label %2646
2646:
 br label %2647
2647:
 br label %2648
2648:
 br label %2649
2649:
 store i32 0, i32* %18
 %2650 = load i8*, i8** %9
 %2651 = getelementptr %struct.tinfl_decompressor_tag, i8* %2650, i32 0, i32 0
 store i32 34, i32* %2651
 br label %2656
2652:
 br label %2653
2653:
 br label %2648
2654:
 br label %2655
2655:
 br label %2656
2656:
 %2657 = load i32, i32* %18
 %2658 = icmp ne i32 %2657, 1
 br i1 %2658, label %2659, label %2678
2659:
 %2660 = load i32, i32* %18
 %2661 = icmp ne i32 %2660, -4
 br i1 %2661, label %2662, label %2678
2662:
 br label %2663
2663:
 %2664 = load i8*, i8** %24
 %2665 = load i8*, i8** %10
 %2666 = icmp ugt i8* %2664, %2665
 br i1 %2666, label %2667, label %2670
2667:
 %2668 = load i32, i32* %19
 %2669 = icmp uge i32 %2668, 8
 br label %2670
2670:
 %2671 = phi i1 [0, %2663], [%2669, %2667]
 br i1 %2671, label %2672, label %2677
2672:
 %2673 = load i8*, i8** %24
 %2674 = getelementptr i8, i8* %2673, i32 -1
 store i8* %2674, i8** %24
 %2675 = load i32, i32* %19
 %2676 = sub i32 %2675, 8
 store i32 %2676, i32* %19
 br label %2663
2677:
 br label %2678
2678:
 %2679 = load i32, i32* %19
 %2680 = load i8*, i8** %9
 %2681 = getelementptr %struct.tinfl_decompressor_tag, i8* %2680, i32 0, i32 1
 store i32 %2679, i32* %2681
 %2682 = load i64, i64* %23
 %2683 = load i32, i32* %19
 %2684 = zext i32 %2683 to i64
 %2685 = shl i64 -1, %2684
 %2686 = xor i64 %2685, -1
 %2687 = and i64 %2682, %2686
 %2688 = load i8*, i8** %9
 %2689 = getelementptr %struct.tinfl_decompressor_tag, i8* %2688, i32 0, i32 12
 store i64 %2687, i64* %2689
 %2690 = load i32, i32* %20
 %2691 = load i8*, i8** %9
 %2692 = getelementptr %struct.tinfl_decompressor_tag, i8* %2691, i32 0, i32 8
 store i32 %2690, i32* %2692
 %2693 = load i32, i32* %21
 %2694 = load i8*, i8** %9
 %2695 = getelementptr %struct.tinfl_decompressor_tag, i8* %2694, i32 0, i32 9
 store i32 %2693, i32* %2695
 %2696 = load i32, i32* %22
 %2697 = load i8*, i8** %9
 %2698 = getelementptr %struct.tinfl_decompressor_tag, i8* %2697, i32 0, i32 10
 store i32 %2696, i32* %2698
 %2699 = load i64, i64* %29
 %2700 = load i8*, i8** %9
 %2701 = getelementptr %struct.tinfl_decompressor_tag, i8* %2700, i32 0, i32 13
 store i64 %2699, i64* %2701
 %2702 = load i8*, i8** %24
 %2703 = load i8*, i8** %10
 %2704 = ptrtoint i8** %2702 to i64
 %2705 = ptrtoint i8** %2703 to i64
 %2706 = sub i64 %2704, %2705
 %2707 = load i8*, i8** %11
 store i64 %2706, i64* %2707
 %2708 = load i8*, i8** %26
 %2709 = load i8*, i8** %13
 %2710 = ptrtoint i8** %2708 to i64
 %2711 = ptrtoint i8** %2709 to i64
 %2712 = sub i64 %2710, %2711
 %2713 = load i8*, i8** %14
 store i64 %2712, i64* %2713
 %2714 = load i32, i32* %15
 %2715 = and i32 %2714, 9
 %2716 = icmp ne i32 %2715, 0
 br i1 %2716, label %2717, label %2872
2717:
 %2718 = load i32, i32* %18
 %2719 = icmp sge i32 %2718, 0
 br i1 %2719, label %2720, label %2872
2720:
 %2721 = load i8*, i8** %13
 store i8* %2721, i8** %78
 %2722 = load i8*, i8** %14
 %2723 = load i64, i64* %2722
 store i64 %2723, i64* %79
 %2724 = load i8*, i8** %9
 %2725 = getelementptr %struct.tinfl_decompressor_tag, i8* %2724, i32 0, i32 7
 %2726 = load i32, i32* %2725
 %2727 = and i32 %2726, 65535
 store i32 %2727, i32* %81
 %2728 = load i8*, i8** %9
 %2729 = getelementptr %struct.tinfl_decompressor_tag, i8* %2728, i32 0, i32 7
 %2730 = load i32, i32* %2729
 %2731 = lshr i32 %2730, 16
 store i32 %2731, i32* %82
 %2732 = load i64, i64* %79
 %2733 = urem i64 %2732, 5552
 store i64 %2733, i64* %83
 br label %2734
2734:
 %2735 = load i64, i64* %79
 %2736 = icmp ne i64 %2735, 0
 br i1 %2736, label %2737, label %2849
2737:
 store i32 0, i32* %80
 br label %2738
2738:
 %2739 = load i32, i32* %80
 %2740 = add i32 %2739, 7
 %2741 = zext i32 %2740 to i64
 %2742 = load i64, i64* %83
 %2743 = icmp ult i64 %2741, %2742
 br i1 %2743, label %2744, label %2822
2744:
 %2745 = load i8*, i8** %78
 %2746 = getelementptr i8, i8* %2745, i64 0
 %2747 = load i8, i8* %2746
 %2748 = zext i8 %2747 to i32
 %2749 = load i32, i32* %81
 %2750 = add i32 %2749, %2748
 store i32 %2750, i32* %81
 %2751 = load i32, i32* %81
 %2752 = load i32, i32* %82
 %2753 = add i32 %2752, %2751
 store i32 %2753, i32* %82
 %2754 = load i8*, i8** %78
 %2755 = getelementptr i8, i8* %2754, i64 1
 %2756 = load i8, i8* %2755
 %2757 = zext i8 %2756 to i32
 %2758 = load i32, i32* %81
 %2759 = add i32 %2758, %2757
 store i32 %2759, i32* %81
 %2760 = load i32, i32* %81
 %2761 = load i32, i32* %82
 %2762 = add i32 %2761, %2760
 store i32 %2762, i32* %82
 %2763 = load i8*, i8** %78
 %2764 = getelementptr i8, i8* %2763, i64 2
 %2765 = load i8, i8* %2764
 %2766 = zext i8 %2765 to i32
 %2767 = load i32, i32* %81
 %2768 = add i32 %2767, %2766
 store i32 %2768, i32* %81
 %2769 = load i32, i32* %81
 %2770 = load i32, i32* %82
 %2771 = add i32 %2770, %2769
 store i32 %2771, i32* %82
 %2772 = load i8*, i8** %78
 %2773 = getelementptr i8, i8* %2772, i64 3
 %2774 = load i8, i8* %2773
 %2775 = zext i8 %2774 to i32
 %2776 = load i32, i32* %81
 %2777 = add i32 %2776, %2775
 store i32 %2777, i32* %81
 %2778 = load i32, i32* %81
 %2779 = load i32, i32* %82
 %2780 = add i32 %2779, %2778
 store i32 %2780, i32* %82
 %2781 = load i8*, i8** %78
 %2782 = getelementptr i8, i8* %2781, i64 4
 %2783 = load i8, i8* %2782
 %2784 = zext i8 %2783 to i32
 %2785 = load i32, i32* %81
 %2786 = add i32 %2785, %2784
 store i32 %2786, i32* %81
 %2787 = load i32, i32* %81
 %2788 = load i32, i32* %82
 %2789 = add i32 %2788, %2787
 store i32 %2789, i32* %82
 %2790 = load i8*, i8** %78
 %2791 = getelementptr i8, i8* %2790, i64 5
 %2792 = load i8, i8* %2791
 %2793 = zext i8 %2792 to i32
 %2794 = load i32, i32* %81
 %2795 = add i32 %2794, %2793
 store i32 %2795, i32* %81
 %2796 = load i32, i32* %81
 %2797 = load i32, i32* %82
 %2798 = add i32 %2797, %2796
 store i32 %2798, i32* %82
 %2799 = load i8*, i8** %78
 %2800 = getelementptr i8, i8* %2799, i64 6
 %2801 = load i8, i8* %2800
 %2802 = zext i8 %2801 to i32
 %2803 = load i32, i32* %81
 %2804 = add i32 %2803, %2802
 store i32 %2804, i32* %81
 %2805 = load i32, i32* %81
 %2806 = load i32, i32* %82
 %2807 = add i32 %2806, %2805
 store i32 %2807, i32* %82
 %2808 = load i8*, i8** %78
 %2809 = getelementptr i8, i8* %2808, i64 7
 %2810 = load i8, i8* %2809
 %2811 = zext i8 %2810 to i32
 %2812 = load i32, i32* %81
 %2813 = add i32 %2812, %2811
 store i32 %2813, i32* %81
 %2814 = load i32, i32* %81
 %2815 = load i32, i32* %82
 %2816 = add i32 %2815, %2814
 store i32 %2816, i32* %82
 br label %2817
2817:
 %2818 = load i32, i32* %80
 %2819 = add i32 %2818, 8
 store i32 %2819, i32* %80
 %2820 = load i8*, i8** %78
 %2821 = getelementptr i8, i8* %2820, i64 8
 store i8* %2821, i8** %78
 br label %2738
2822:
 br label %2823
2823:
 %2824 = load i32, i32* %80
 %2825 = zext i32 %2824 to i64
 %2826 = load i64, i64* %83
 %2827 = icmp ult i64 %2825, %2826
 br i1 %2827, label %2828, label %2841
2828:
 %2829 = load i8*, i8** %78
 %2830 = getelementptr i8, i8* %2829, i32 1
 store i8* %2830, i8** %78
 %2831 = load i8, i8* %2829
 %2832 = zext i8 %2831 to i32
 %2833 = load i32, i32* %81
 %2834 = add i32 %2833, %2832
 store i32 %2834, i32* %81
 %2835 = load i32, i32* %81
 %2836 = load i32, i32* %82
 %2837 = add i32 %2836, %2835
 store i32 %2837, i32* %82
 br label %2838
2838:
 %2839 = load i32, i32* %80
 %2840 = add i32 %2839, 1
 store i32 %2840, i32* %80
 br label %2823
2841:
 %2842 = load i32, i32* %81
 %2843 = urem i32 %2842, 65521
 store i32 %2843, i32* %81
 %2844 = load i32, i32* %82
 %2845 = urem i32 %2844, 65521
 store i32 %2845, i32* %82
 %2846 = load i64, i64* %83
 %2847 = load i64, i64* %79
 %2848 = sub i64 %2847, %2846
 store i64 %2848, i64* %79
 store i64 5552, i64* %83
 br label %2734
2849:
 %2850 = load i32, i32* %82
 %2851 = shl i32 %2850, 16
 %2852 = load i32, i32* %81
 %2853 = add i32 %2851, %2852
 %2854 = load i8*, i8** %9
 %2855 = getelementptr %struct.tinfl_decompressor_tag, i8* %2854, i32 0, i32 7
 store i32 %2853, i32* %2855
 %2856 = load i32, i32* %18
 %2857 = icmp eq i32 %2856, 0
 br i1 %2857, label %2858, label %2871
2858:
 %2859 = load i32, i32* %15
 %2860 = and i32 %2859, 1
 %2861 = icmp ne i32 %2860, 0
 br i1 %2861, label %2862, label %2871
2862:
 %2863 = load i8*, i8** %9
 %2864 = getelementptr %struct.tinfl_decompressor_tag, i8* %2863, i32 0, i32 7
 %2865 = load i32, i32* %2864
 %2866 = load i8*, i8** %9
 %2867 = getelementptr %struct.tinfl_decompressor_tag, i8* %2866, i32 0, i32 4
 %2868 = load i32, i32* %2867
 %2869 = icmp ne i32 %2865, %2868
 br i1 %2869, label %2870, label %2871
2870:
 store i32 -2, i32* %18
 br label %2871
2871:
 br label %2872
2872:
 %2873 = load i32, i32* %18
 store i32 %2873, i32* %8
 br label %2874
2874:
 %2875 = load i32, i32* %8
 ret i32 %2875
}

define i32 @mz_inflateEnd (i8* %0) {
 %2 = alloca i32
 %3 = alloca i8*
 store i8* %0, i8** %3
 %4 = load i8*, i8** %3
 %5 = icmp ne i8* %4, null
 br i1 %5, label %7, label %6
6:
 store i32 -2, i32* %2
 br label %25
7:
 %8 = load i8*, i8** %3
 %9 = getelementptr %struct.mz_stream_s, i8* %8, i32 0, i32 7
 %10 = load i8*, i8** %9
 %11 = icmp ne i8* %10, null
 br i1 %11, label %12, label %24
12:
 %13 = load i8*, i8** %3
 %14 = getelementptr %struct.mz_stream_s, i8* %13, i32 0, i32 9
 %15 = load i8*, i8** %14
 %16 = load i8*, i8** %3
 %17 = getelementptr %struct.mz_stream_s, i8* %16, i32 0, i32 10
 %18 = load i8*, i8** %17
 %19 = load i8*, i8** %3
 %20 = getelementptr %struct.mz_stream_s, i8* %19, i32 0, i32 7
 %21 = load i8*, i8** %20
 call void %15 (i8* %18, i8* %21)
 %22 = load i8*, i8** %3
 %23 = getelementptr %struct.mz_stream_s, i8* %22, i32 0, i32 7
 store i8* null, i8** %23
 br label %24
24:
 store i32 0, i32* %2
 br label %25
25:
 %26 = load i32, i32* %2
 ret i32 %26
}

define i32 @mz_uncompress2 (i8* %0, i8* %1, i8* %2, i8* %3) {
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i8*
 %10 = alloca %struct.mz_stream_s
 %11 = alloca i32
 store i8* %0, i8** %6
 store i8* %1, i8** %7
 store i8* %2, i8** %8
 store i8* %3, i8** %9
 call void @memset (i8* %10, i8 0, i64 112, i1 0)
 %12 = load i8*, i8** %9
 %13 = load i64, i64* %12
 %14 = load i8*, i8** %7
 %15 = load i64, i64* %14
 %16 = or i64 %13, %15
 %17 = icmp ugt i64 %16, 4294967295
 br i1 %17, label %18, label %19
18:
 store i32 -10000, i32* %5
 br label %66
19:
 %20 = load i8*, i8** %8
 %21 = getelementptr %struct.mz_stream_s, i8* %10, i32 0, i32 0
 store i8* %20, i8** %21
 %22 = load i8*, i8** %9
 %23 = load i64, i64* %22
 %24 = trunc i64 %23 to i32
 %25 = getelementptr %struct.mz_stream_s, i8* %10, i32 0, i32 1
 store i32 %24, i32* %25
 %26 = load i8*, i8** %6
 %27 = getelementptr %struct.mz_stream_s, i8* %10, i32 0, i32 3
 store i8* %26, i8** %27
 %28 = load i8*, i8** %7
 %29 = load i64, i64* %28
 %30 = trunc i64 %29 to i32
 %31 = getelementptr %struct.mz_stream_s, i8* %10, i32 0, i32 4
 store i32 %30, i32* %31
 %32 = call i32 @mz_inflateInit (i8* %10)
 store i32 %32, i32* %11
 %33 = load i32, i32* %11
 %34 = icmp ne i32 %33, 0
 br i1 %34, label %35, label %37
35:
 %36 = load i32, i32* %11
 store i32 %36, i32* %5
 br label %66
37:
 %38 = call i32 @mz_inflate (i8* %10, i32 4)
 store i32 %38, i32* %11
 %39 = load i8*, i8** %9
 %40 = load i64, i64* %39
 %41 = getelementptr %struct.mz_stream_s, i8* %10, i32 0, i32 1
 %42 = load i32, i32* %41
 %43 = zext i32 %42 to i64
 %44 = sub i64 %40, %43
 %45 = load i8*, i8** %9
 store i64 %44, i64* %45
 %46 = load i32, i32* %11
 %47 = icmp ne i32 %46, 1
 br i1 %47, label %48, label %61
48:
 %49 = call i32 @mz_inflateEnd (i8* %10)
 %50 = load i32, i32* %11
 %51 = icmp eq i32 %50, -5
 br i1 %51, label %52, label %57
52:
 %53 = getelementptr %struct.mz_stream_s, i8* %10, i32 0, i32 1
 %54 = load i32, i32* %53
 %55 = icmp ne i32 %54, 0
 br i1 %55, label %57, label %56
56:
 br label %59
57:
 %58 = load i32, i32* %11
 br label %59
59:
 %60 = phi i32 [-3, %56], [%58, %57]
 store i32 %60, i32* %5
 br label %66
61:
 %62 = getelementptr %struct.mz_stream_s, i8* %10, i32 0, i32 5
 %63 = load i64, i64* %62
 %64 = load i8*, i8** %7
 store i64 %63, i64* %64
 %65 = call i32 @mz_inflateEnd (i8* %10)
 store i32 %65, i32* %5
 br label %66
66:
 %67 = load i32, i32* %5
 ret i32 %67
}

define i32 @mz_uncompress (i8* %0, i8* %1, i8* %2, i64 %3) {
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i64
 store i8* %0, i8** %5
 store i8* %1, i8** %6
 store i8* %2, i8** %7
 store i64 %3, i64* %8
 %9 = load i8*, i8** %5
 %10 = load i8*, i8** %6
 %11 = load i8*, i8** %7
 %12 = call i32 @mz_uncompress2 (i8* %9, i8* %10, i8* %11, i8* %8)
 ret i32 %12
}

define i8* @mz_error (i32 %0) {
 %2 = alloca i8*
 %3 = alloca i32
 %4 = alloca i32
 store i32 %0, i32* %3
 store i32 0, i32* %4
 br label %5
5:
 %6 = load i32, i32* %4
 %7 = zext i32 %6 to i64
 %8 = icmp ult i64 %7, 10
 br i1 %8, label %9, label %27
9:
 %10 = load i32, i32* %4
 %11 = zext i32 %10 to i64
 %12 = getelementptr [10 x %struct.anon], i8* @mz_error.s_error_descs, i64 0, i64 %11
 %13 = getelementptr %struct.anon, i8* %12, i32 0, i32 0
 %14 = load i32, i32* %13
 %15 = load i32, i32* %3
 %16 = icmp eq i32 %14, %15
 br i1 %16, label %17, label %23
17:
 %18 = load i32, i32* %4
 %19 = zext i32 %18 to i64
 %20 = getelementptr [10 x %struct.anon], i8* @mz_error.s_error_descs, i64 0, i64 %19
 %21 = getelementptr %struct.anon, i8* %20, i32 0, i32 1
 %22 = load i8*, i8** %21
 store i8* %22, i8** %2
 br label %28
23:
 br label %24
24:
 %25 = load i32, i32* %4
 %26 = add i32 %25, 1
 store i32 %26, i32* %4
 br label %5
27:
 store i8* null, i8** %2
 br label %28
28:
 %29 = load i8*, i8** %2
 ret i8* %29
}

define i32 @tdefl_flush_output_buffer (i8* %0) {
 %2 = alloca i8*
 %3 = alloca i64
 store i8* %0, i8** %2
 %4 = load i8*, i8** %2
 %5 = getelementptr %struct.tdefl_compressor, i8* %4, i32 0, i32 29
 %6 = load i8*, i8** %5
 %7 = icmp ne i8* %6, null
 br i1 %7, label %8, label %21
8:
 %9 = load i8*, i8** %2
 %10 = getelementptr %struct.tdefl_compressor, i8* %9, i32 0, i32 32
 %11 = load i8*, i8** %10
 %12 = load i8*, i8** %2
 %13 = getelementptr %struct.tdefl_compressor, i8* %12, i32 0, i32 27
 %14 = load i8*, i8** %13
 %15 = ptrtoint i8** %11 to i64
 %16 = ptrtoint i8** %14 to i64
 %17 = sub i64 %15, %16
 %18 = load i8*, i8** %2
 %19 = getelementptr %struct.tdefl_compressor, i8* %18, i32 0, i32 29
 %20 = load i8*, i8** %19
 store i64 %17, i64* %20
 br label %21
21:
 %22 = load i8*, i8** %2
 %23 = getelementptr %struct.tdefl_compressor, i8* %22, i32 0, i32 30
 %24 = load i8*, i8** %23
 %25 = icmp ne i8* %24, null
 br i1 %25, label %26, label %104
26:
 %27 = load i8*, i8** %2
 %28 = getelementptr %struct.tdefl_compressor, i8* %27, i32 0, i32 30
 %29 = load i8*, i8** %28
 %30 = load i64, i64* %29
 %31 = load i8*, i8** %2
 %32 = getelementptr %struct.tdefl_compressor, i8* %31, i32 0, i32 34
 %33 = load i64, i64* %32
 %34 = sub i64 %30, %33
 %35 = load i8*, i8** %2
 %36 = getelementptr %struct.tdefl_compressor, i8* %35, i32 0, i32 22
 %37 = load i32, i32* %36
 %38 = zext i32 %37 to i64
 %39 = icmp ult i64 %34, %38
 br i1 %39, label %40, label %49
40:
 %41 = load i8*, i8** %2
 %42 = getelementptr %struct.tdefl_compressor, i8* %41, i32 0, i32 30
 %43 = load i8*, i8** %42
 %44 = load i64, i64* %43
 %45 = load i8*, i8** %2
 %46 = getelementptr %struct.tdefl_compressor, i8* %45, i32 0, i32 34
 %47 = load i64, i64* %46
 %48 = sub i64 %44, %47
 br label %54
49:
 %50 = load i8*, i8** %2
 %51 = getelementptr %struct.tdefl_compressor, i8* %50, i32 0, i32 22
 %52 = load i32, i32* %51
 %53 = zext i32 %52 to i64
 br label %54
54:
 %55 = phi i64 [%48, %40], [%53, %49]
 store i64 %55, i64* %3
 %56 = load i8*, i8** %2
 %57 = getelementptr %struct.tdefl_compressor, i8* %56, i32 0, i32 28
 %58 = load i8*, i8** %57
 %59 = load i8*, i8** %2
 %60 = getelementptr %struct.tdefl_compressor, i8* %59, i32 0, i32 34
 %61 = load i64, i64* %60
 %62 = getelementptr i8, i8* %58, i64 %61
 %63 = load i8*, i8** %2
 %64 = getelementptr %struct.tdefl_compressor, i8* %63, i32 0, i32 42
 %65 = getelementptr [85196 x i8], i8* %64, i64 0, i64 0
 %66 = load i8*, i8** %2
 %67 = getelementptr %struct.tdefl_compressor, i8* %66, i32 0, i32 21
 %68 = load i32, i32* %67
 %69 = zext i32 %68 to i64
 %70 = getelementptr i8, i8* %65, i64 %69
 %71 = load i64, i64* %3
 %72 = load i8*, i8** %2
 %73 = getelementptr %struct.tdefl_compressor, i8* %72, i32 0, i32 28
 %74 = load i8*, i8** %73
 %75 = load i8*, i8** %2
 %76 = getelementptr %struct.tdefl_compressor, i8* %75, i32 0, i32 34
 %77 = load i64, i64* %76
 %78 = getelementptr i8, i8* %74, i64 %77
 %79 = call i64 @llvm.objectsize.i64.p0 (i8* %78, i1 0, i1 1, i1 0)
 %80 = call i8* @__memcpy_chk (i8* %62, i8* %70, i64 %71, i64 %79)
 %81 = load i64, i64* %3
 %82 = trunc i64 %81 to i32
 %83 = load i8*, i8** %2
 %84 = getelementptr %struct.tdefl_compressor, i8* %83, i32 0, i32 21
 %85 = load i32, i32* %84
 %86 = add i32 %85, %82
 store i32 %86, i32* %84
 %87 = load i64, i64* %3
 %88 = trunc i64 %87 to i32
 %89 = load i8*, i8** %2
 %90 = getelementptr %struct.tdefl_compressor, i8* %89, i32 0, i32 22
 %91 = load i32, i32* %90
 %92 = sub i32 %91, %88
 store i32 %92, i32* %90
 %93 = load i64, i64* %3
 %94 = load i8*, i8** %2
 %95 = getelementptr %struct.tdefl_compressor, i8* %94, i32 0, i32 34
 %96 = load i64, i64* %95
 %97 = add i64 %96, %93
 store i64 %97, i64* %95
 %98 = load i8*, i8** %2
 %99 = getelementptr %struct.tdefl_compressor, i8* %98, i32 0, i32 34
 %100 = load i64, i64* %99
 %101 = load i8*, i8** %2
 %102 = getelementptr %struct.tdefl_compressor, i8* %101, i32 0, i32 30
 %103 = load i8*, i8** %102
 store i64 %100, i64* %103
 br label %104
104:
 %105 = load i8*, i8** %2
 %106 = getelementptr %struct.tdefl_compressor, i8* %105, i32 0, i32 23
 %107 = load i32, i32* %106
 %108 = icmp ne i32 %107, 0
 br i1 %108, label %109, label %115
109:
 %110 = load i8*, i8** %2
 %111 = getelementptr %struct.tdefl_compressor, i8* %110, i32 0, i32 22
 %112 = load i32, i32* %111
 %113 = icmp ne i32 %112, 0
 %114 = xor i1 %113, 1
 br label %115
115:
 %116 = phi i1 [0, %104], [%114, %109]
 %117 = zext i1 %116 to i64
 %118 = select i1 %116, i32 1, i32 0
 ret i32 %118
}

define i32 @tdefl_compress_normal (i8* %0) {
 %2 = alloca i8*
 %3 = alloca i32
 %4 = alloca i32
 %5 = alloca i32
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i32
 %9 = alloca i32
 %10 = alloca i32
 %11 = alloca i32
 %12 = alloca i8*
 %13 = alloca i32
 %14 = alloca i32
 %15 = alloca i32
 %16 = alloca i32
 %17 = alloca i8*
 %18 = alloca i8
 %19 = alloca i8*
 %20 = alloca i8
 %21 = alloca i8*
 %22 = alloca i32
 %23 = alloca i32
 %24 = alloca i32
 %25 = alloca i8*
 %26 = alloca i8*
 %27 = alloca i32
 %28 = alloca i32
 %29 = alloca i32
 %30 = alloca i32
 %31 = alloca i32
 %32 = alloca i32
 %33 = alloca i32
 %34 = alloca i8*
 %35 = alloca i8*
 %36 = alloca i8*
 %37 = alloca i8
 %38 = alloca i8
 %39 = alloca i32
 %40 = alloca i8*
 %41 = alloca i8*
 %42 = alloca i64
 %43 = alloca i32
 %44 = alloca i32
 %45 = alloca i32
 %46 = alloca i32
 %47 = alloca i32
 %48 = alloca i32
 %49 = alloca i32
 %50 = alloca i32
 %51 = alloca i32
 %52 = alloca i8*
 %53 = alloca i8
 %54 = alloca i8
 %55 = alloca i32
 %56 = alloca i32
 %57 = alloca i32
 %58 = alloca i8
 %59 = alloca i32
 store i8* %0, i8** %40
 %60 = load i8*, i8** %40
 %61 = getelementptr %struct.tdefl_compressor, i8* %60, i32 0, i32 32
 %62 = load i8*, i8** %61
 store i8* %62, i8** %41
 %63 = load i8*, i8** %40
 %64 = getelementptr %struct.tdefl_compressor, i8* %63, i32 0, i32 33
 %65 = load i64, i64* %64
 store i64 %65, i64* %42
 %66 = load i8*, i8** %40
 %67 = getelementptr %struct.tdefl_compressor, i8* %66, i32 0, i32 31
 %68 = load i32, i32* %67
 store i32 %68, i32* %43
 br label %69
69:
 %70 = load i64, i64* %42
 %71 = icmp ne i64 %70, 0
 br i1 %71, label %82, label %72
72:
 %73 = load i32, i32* %43
 %74 = icmp ne i32 %73, 0
 br i1 %74, label %75, label %80
75:
 %76 = load i8*, i8** %40
 %77 = getelementptr %struct.tdefl_compressor, i8* %76, i32 0, i32 7
 %78 = load i32, i32* %77
 %79 = icmp ne i32 %78, 0
 br label %80
80:
 %81 = phi i1 [0, %72], [%79, %75]
 br label %82
82:
 %83 = phi i1 [1, %69], [%81, %80]
 br i1 %83, label %84, label %1350
84:
 %85 = load i8*, i8** %40
 %86 = getelementptr %struct.tdefl_compressor, i8* %85, i32 0, i32 7
 %87 = load i32, i32* %86
 %88 = load i8*, i8** %40
 %89 = getelementptr %struct.tdefl_compressor, i8* %88, i32 0, i32 8
 %90 = load i32, i32* %89
 %91 = add i32 %87, %90
 %92 = icmp uge i32 %91, 2
 br i1 %92, label %93, label %222
93:
 %94 = load i8*, i8** %40
 %95 = getelementptr %struct.tdefl_compressor, i8* %94, i32 0, i32 6
 %96 = load i32, i32* %95
 %97 = load i8*, i8** %40
 %98 = getelementptr %struct.tdefl_compressor, i8* %97, i32 0, i32 7
 %99 = load i32, i32* %98
 %100 = add i32 %96, %99
 %101 = and i32 %100, 32767
 store i32 %101, i32* %48
 %102 = load i8*, i8** %40
 %103 = getelementptr %struct.tdefl_compressor, i8* %102, i32 0, i32 6
 %104 = load i32, i32* %103
 %105 = load i8*, i8** %40
 %106 = getelementptr %struct.tdefl_compressor, i8* %105, i32 0, i32 7
 %107 = load i32, i32* %106
 %108 = add i32 %104, %107
 %109 = sub i32 %108, 2
 store i32 %109, i32* %49
 %110 = load i8*, i8** %40
 %111 = getelementptr %struct.tdefl_compressor, i8* %110, i32 0, i32 35
 %112 = load i32, i32* %49
 %113 = and i32 %112, 32767
 %114 = zext i32 %113 to i64
 %115 = getelementptr [33025 x i8], i8* %111, i64 0, i64 %114
 %116 = load i8, i8* %115
 %117 = zext i8 %116 to i32
 %118 = shl i32 %117, 5
 %119 = load i8*, i8** %40
 %120 = getelementptr %struct.tdefl_compressor, i8* %119, i32 0, i32 35
 %121 = load i32, i32* %49
 %122 = add i32 %121, 1
 %123 = and i32 %122, 32767
 %124 = zext i32 %123 to i64
 %125 = getelementptr [33025 x i8], i8* %120, i64 0, i64 %124
 %126 = load i8, i8* %125
 %127 = zext i8 %126 to i32
 %128 = xor i32 %118, %127
 store i32 %128, i32* %50
 %129 = load i64, i64* %42
 %130 = load i8*, i8** %40
 %131 = getelementptr %struct.tdefl_compressor, i8* %130, i32 0, i32 7
 %132 = load i32, i32* %131
 %133 = sub i32 258, %132
 %134 = zext i32 %133 to i64
 %135 = icmp ult i64 %129, %134
 br i1 %135, label %136, label %138
136:
 %137 = load i64, i64* %42
 br label %144
138:
 %139 = load i8*, i8** %40
 %140 = getelementptr %struct.tdefl_compressor, i8* %139, i32 0, i32 7
 %141 = load i32, i32* %140
 %142 = sub i32 258, %141
 %143 = zext i32 %142 to i64
 br label %144
144:
 %145 = phi i64 [%137, %136], [%143, %138]
 %146 = trunc i64 %145 to i32
 store i32 %146, i32* %51
 %147 = load i8*, i8** %41
 %148 = icmp ne i8* %147, null
 br i1 %148, label %149, label %154
149:
 %150 = load i8*, i8** %41
 %151 = load i32, i32* %51
 %152 = zext i32 %151 to i64
 %153 = getelementptr i8, i8* %150, i64 %152
 br label %155
154:
 br label %155
155:
 %156 = phi i8* [%153, %149], [null, %154]
 store i8* %156, i8** %52
 %157 = load i32, i32* %51
 %158 = zext i32 %157 to i64
 %159 = load i64, i64* %42
 %160 = sub i64 %159, %158
 store i64 %160, i64* %42
 %161 = load i32, i32* %51
 %162 = load i8*, i8** %40
 %163 = getelementptr %struct.tdefl_compressor, i8* %162, i32 0, i32 7
 %164 = load i32, i32* %163
 %165 = add i32 %164, %161
 store i32 %165, i32* %163
 br label %166
166:
 %167 = load i8*, i8** %41
 %168 = load i8*, i8** %52
 %169 = icmp ne i8* %167, %168
 br i1 %169, label %170, label %221
170:
 %171 = load i8*, i8** %41
 %172 = getelementptr i8, i8* %171, i32 1
 store i8* %172, i8** %41
 %173 = load i8, i8* %171
 store i8 %173, i8* %53
 %174 = load i8, i8* %53
 %175 = load i8*, i8** %40
 %176 = getelementptr %struct.tdefl_compressor, i8* %175, i32 0, i32 35
 %177 = load i32, i32* %48
 %178 = zext i32 %177 to i64
 %179 = getelementptr [33025 x i8], i8* %176, i64 0, i64 %178
 store i8 %174, i8* %179
 %180 = load i32, i32* %48
 %181 = icmp ult i32 %180, 257
 br i1 %181, label %182, label %190
182:
 %183 = load i8, i8* %53
 %184 = load i8*, i8** %40
 %185 = getelementptr %struct.tdefl_compressor, i8* %184, i32 0, i32 35
 %186 = load i32, i32* %48
 %187 = add i32 32768, %186
 %188 = zext i32 %187 to i64
 %189 = getelementptr [33025 x i8], i8* %185, i64 0, i64 %188
 store i8 %183, i8* %189
 br label %190
190:
 %191 = load i32, i32* %50
 %192 = shl i32 %191, 5
 %193 = load i8, i8* %53
 %194 = zext i8 %193 to i32
 %195 = xor i32 %192, %194
 %196 = and i32 %195, 32767
 store i32 %196, i32* %50
 %197 = load i8*, i8** %40
 %198 = getelementptr %struct.tdefl_compressor, i8* %197, i32 0, i32 41
 %199 = load i32, i32* %50
 %200 = zext i32 %199 to i64
 %201 = getelementptr [32768 x i16], i8* %198, i64 0, i64 %200
 %202 = load i16, i16* %201
 %203 = load i8*, i8** %40
 %204 = getelementptr %struct.tdefl_compressor, i8* %203, i32 0, i32 40
 %205 = load i32, i32* %49
 %206 = and i32 %205, 32767
 %207 = zext i32 %206 to i64
 %208 = getelementptr [32768 x i16], i8* %204, i64 0, i64 %207
 store i16 %202, i16* %208
 %209 = load i32, i32* %49
 %210 = trunc i32 %209 to i16
 %211 = load i8*, i8** %40
 %212 = getelementptr %struct.tdefl_compressor, i8* %211, i32 0, i32 41
 %213 = load i32, i32* %50
 %214 = zext i32 %213 to i64
 %215 = getelementptr [32768 x i16], i8* %212, i64 0, i64 %214
 store i16 %210, i16* %215
 %216 = load i32, i32* %48
 %217 = add i32 %216, 1
 %218 = and i32 %217, 32767
 store i32 %218, i32* %48
 %219 = load i32, i32* %49
 %220 = add i32 %219, 1
 store i32 %220, i32* %49
 br label %166
221:
 br label %328
222:
 br label %223
223:
 %224 = load i64, i64* %42
 %225 = icmp ne i64 %224, 0
 br i1 %225, label %226, label %231
226:
 %227 = load i8*, i8** %40
 %228 = getelementptr %struct.tdefl_compressor, i8* %227, i32 0, i32 7
 %229 = load i32, i32* %228
 %230 = icmp ult i32 %229, 258
 br label %231
231:
 %232 = phi i1 [0, %223], [%230, %226]
 br i1 %232, label %233, label %327
233:
 %234 = load i8*, i8** %41
 %235 = getelementptr i8, i8* %234, i32 1
 store i8* %235, i8** %41
 %236 = load i8, i8* %234
 store i8 %236, i8* %54
 %237 = load i8*, i8** %40
 %238 = getelementptr %struct.tdefl_compressor, i8* %237, i32 0, i32 6
 %239 = load i32, i32* %238
 %240 = load i8*, i8** %40
 %241 = getelementptr %struct.tdefl_compressor, i8* %240, i32 0, i32 7
 %242 = load i32, i32* %241
 %243 = add i32 %239, %242
 %244 = and i32 %243, 32767
 store i32 %244, i32* %55
 %245 = load i64, i64* %42
 %246 = add i64 %245, -1
 store i64 %246, i64* %42
 %247 = load i8, i8* %54
 %248 = load i8*, i8** %40
 %249 = getelementptr %struct.tdefl_compressor, i8* %248, i32 0, i32 35
 %250 = load i32, i32* %55
 %251 = zext i32 %250 to i64
 %252 = getelementptr [33025 x i8], i8* %249, i64 0, i64 %251
 store i8 %247, i8* %252
 %253 = load i32, i32* %55
 %254 = icmp ult i32 %253, 257
 br i1 %254, label %255, label %263
255:
 %256 = load i8, i8* %54
 %257 = load i8*, i8** %40
 %258 = getelementptr %struct.tdefl_compressor, i8* %257, i32 0, i32 35
 %259 = load i32, i32* %55
 %260 = add i32 32768, %259
 %261 = zext i32 %260 to i64
 %262 = getelementptr [33025 x i8], i8* %258, i64 0, i64 %261
 store i8 %256, i8* %262
 br label %263
263:
 %264 = load i8*, i8** %40
 %265 = getelementptr %struct.tdefl_compressor, i8* %264, i32 0, i32 7
 %266 = load i32, i32* %265
 %267 = add i32 %266, 1
 store i32 %267, i32* %265
 %268 = load i8*, i8** %40
 %269 = getelementptr %struct.tdefl_compressor, i8* %268, i32 0, i32 8
 %270 = load i32, i32* %269
 %271 = add i32 %267, %270
 %272 = icmp uge i32 %271, 3
 br i1 %272, label %273, label %326
273:
 %274 = load i8*, i8** %40
 %275 = getelementptr %struct.tdefl_compressor, i8* %274, i32 0, i32 6
 %276 = load i32, i32* %275
 %277 = load i8*, i8** %40
 %278 = getelementptr %struct.tdefl_compressor, i8* %277, i32 0, i32 7
 %279 = load i32, i32* %278
 %280 = sub i32 %279, 1
 %281 = add i32 %276, %280
 %282 = sub i32 %281, 2
 store i32 %282, i32* %56
 %283 = load i8*, i8** %40
 %284 = getelementptr %struct.tdefl_compressor, i8* %283, i32 0, i32 35
 %285 = load i32, i32* %56
 %286 = and i32 %285, 32767
 %287 = zext i32 %286 to i64
 %288 = getelementptr [33025 x i8], i8* %284, i64 0, i64 %287
 %289 = load i8, i8* %288
 %290 = zext i8 %289 to i32
 %291 = shl i32 %290, 10
 %292 = load i8*, i8** %40
 %293 = getelementptr %struct.tdefl_compressor, i8* %292, i32 0, i32 35
 %294 = load i32, i32* %56
 %295 = add i32 %294, 1
 %296 = and i32 %295, 32767
 %297 = zext i32 %296 to i64
 %298 = getelementptr [33025 x i8], i8* %293, i64 0, i64 %297
 %299 = load i8, i8* %298
 %300 = zext i8 %299 to i32
 %301 = shl i32 %300, 5
 %302 = xor i32 %291, %301
 %303 = load i8, i8* %54
 %304 = zext i8 %303 to i32
 %305 = xor i32 %302, %304
 %306 = and i32 %305, 32767
 store i32 %306, i32* %57
 %307 = load i8*, i8** %40
 %308 = getelementptr %struct.tdefl_compressor, i8* %307, i32 0, i32 41
 %309 = load i32, i32* %57
 %310 = zext i32 %309 to i64
 %311 = getelementptr [32768 x i16], i8* %308, i64 0, i64 %310
 %312 = load i16, i16* %311
 %313 = load i8*, i8** %40
 %314 = getelementptr %struct.tdefl_compressor, i8* %313, i32 0, i32 40
 %315 = load i32, i32* %56
 %316 = and i32 %315, 32767
 %317 = zext i32 %316 to i64
 %318 = getelementptr [32768 x i16], i8* %314, i64 0, i64 %317
 store i16 %312, i16* %318
 %319 = load i32, i32* %56
 %320 = trunc i32 %319 to i16
 %321 = load i8*, i8** %40
 %322 = getelementptr %struct.tdefl_compressor, i8* %321, i32 0, i32 41
 %323 = load i32, i32* %57
 %324 = zext i32 %323 to i64
 %325 = getelementptr [32768 x i16], i8* %322, i64 0, i64 %324
 store i16 %320, i16* %325
 br label %326
326:
 br label %223
327:
 br label %328
328:
 %329 = load i8*, i8** %40
 %330 = getelementptr %struct.tdefl_compressor, i8* %329, i32 0, i32 7
 %331 = load i32, i32* %330
 %332 = sub i32 32768, %331
 %333 = load i8*, i8** %40
 %334 = getelementptr %struct.tdefl_compressor, i8* %333, i32 0, i32 8
 %335 = load i32, i32* %334
 %336 = icmp ult i32 %332, %335
 br i1 %336, label %337, label %342
337:
 %338 = load i8*, i8** %40
 %339 = getelementptr %struct.tdefl_compressor, i8* %338, i32 0, i32 7
 %340 = load i32, i32* %339
 %341 = sub i32 32768, %340
 br label %346
342:
 %343 = load i8*, i8** %40
 %344 = getelementptr %struct.tdefl_compressor, i8* %343, i32 0, i32 8
 %345 = load i32, i32* %344
 br label %346
346:
 %347 = phi i32 [%341, %337], [%345, %342]
 %348 = load i8*, i8** %40
 %349 = getelementptr %struct.tdefl_compressor, i8* %348, i32 0, i32 8
 store i32 %347, i32* %349
 %350 = load i32, i32* %43
 %351 = icmp ne i32 %350, 0
 br i1 %351, label %358, label %352
352:
 %353 = load i8*, i8** %40
 %354 = getelementptr %struct.tdefl_compressor, i8* %353, i32 0, i32 7
 %355 = load i32, i32* %354
 %356 = icmp ult i32 %355, 258
 br i1 %356, label %357, label %358
357:
 br label %1350
358:
 store i32 1, i32* %44
 store i32 0, i32* %45
 %359 = load i8*, i8** %40
 %360 = getelementptr %struct.tdefl_compressor, i8* %359, i32 0, i32 19
 %361 = load i32, i32* %360
 %362 = icmp ne i32 %361, 0
 br i1 %362, label %363, label %367
363:
 %364 = load i8*, i8** %40
 %365 = getelementptr %struct.tdefl_compressor, i8* %364, i32 0, i32 19
 %366 = load i32, i32* %365
 br label %368
367:
 br label %368
368:
 %369 = phi i32 [%366, %363], [2, %367]
 store i32 %369, i32* %46
 %370 = load i8*, i8** %40
 %371 = getelementptr %struct.tdefl_compressor, i8* %370, i32 0, i32 6
 %372 = load i32, i32* %371
 %373 = and i32 %372, 32767
 store i32 %373, i32* %47
 %374 = load i8*, i8** %40
 %375 = getelementptr %struct.tdefl_compressor, i8* %374, i32 0, i32 2
 %376 = load i32, i32* %375
 %377 = and i32 %376, 589824
 %378 = icmp ne i32 %377, 0
 br i1 %378, label %379, label %429
379:
 %380 = load i8*, i8** %40
 %381 = getelementptr %struct.tdefl_compressor, i8* %380, i32 0, i32 8
 %382 = load i32, i32* %381
 %383 = icmp ne i32 %382, 0
 br i1 %383, label %384, label %428
384:
 %385 = load i8*, i8** %40
 %386 = getelementptr %struct.tdefl_compressor, i8* %385, i32 0, i32 2
 %387 = load i32, i32* %386
 %388 = and i32 %387, 524288
 %389 = icmp ne i32 %388, 0
 br i1 %389, label %428, label %390
390:
 %391 = load i8*, i8** %40
 %392 = getelementptr %struct.tdefl_compressor, i8* %391, i32 0, i32 35
 %393 = load i32, i32* %47
 %394 = sub i32 %393, 1
 %395 = and i32 %394, 32767
 %396 = zext i32 %395 to i64
 %397 = getelementptr [33025 x i8], i8* %392, i64 0, i64 %396
 %398 = load i8, i8* %397
 store i8 %398, i8* %58
 store i32 0, i32* %46
 br label %399
399:
 %400 = load i32, i32* %46
 %401 = load i8*, i8** %40
 %402 = getelementptr %struct.tdefl_compressor, i8* %401, i32 0, i32 7
 %403 = load i32, i32* %402
 %404 = icmp ult i32 %400, %403
 br i1 %404, label %405, label %422
405:
 %406 = load i8*, i8** %40
 %407 = getelementptr %struct.tdefl_compressor, i8* %406, i32 0, i32 35
 %408 = load i32, i32* %47
 %409 = load i32, i32* %46
 %410 = add i32 %408, %409
 %411 = zext i32 %410 to i64
 %412 = getelementptr [33025 x i8], i8* %407, i64 0, i64 %411
 %413 = load i8, i8* %412
 %414 = zext i8 %413 to i32
 %415 = load i8, i8* %58
 %416 = zext i8 %415 to i32
 %417 = icmp ne i32 %414, %416
 br i1 %417, label %418, label %419
418:
 br label %422
419:
 %420 = load i32, i32* %46
 %421 = add i32 %420, 1
 store i32 %421, i32* %46
 br label %399
422:
 %423 = load i32, i32* %46
 %424 = icmp ult i32 %423, 3
 br i1 %424, label %425, label %426
425:
 store i32 0, i32* %46
 br label %427
426:
 store i32 1, i32* %45
 br label %427
427:
 br label %428
428:
 br label %702
429:
 %430 = load i8*, i8** %40
 %431 = load i8*, i8** %40
 %432 = getelementptr %struct.tdefl_compressor, i8* %431, i32 0, i32 6
 %433 = load i32, i32* %432
 %434 = load i8*, i8** %40
 %435 = getelementptr %struct.tdefl_compressor, i8* %434, i32 0, i32 8
 %436 = load i32, i32* %435
 %437 = load i8*, i8** %40
 %438 = getelementptr %struct.tdefl_compressor, i8* %437, i32 0, i32 7
 %439 = load i32, i32* %438
 store i8* %430, i8** %21
 store i32 %433, i32* %22
 store i32 %436, i32* %23
 store i32 %439, i32* %24
 store i8* %45, i8** %25
 store i8* %46, i8** %26
 %440 = load i32, i32* %22
 %441 = and i32 %440, 32767
 store i32 %441, i32* %28
 %442 = load i8*, i8** %26
 %443 = load i32, i32* %442
 store i32 %443, i32* %29
 %444 = load i32, i32* %28
 store i32 %444, i32* %30
 %445 = load i8*, i8** %21
 %446 = getelementptr %struct.tdefl_compressor, i8* %445, i32 0, i32 3
 %447 = load i32, i32* %29
 %448 = icmp uge i32 %447, 32
 %449 = zext i1 %448 to i32
 %450 = sext i32 %449 to i64
 %451 = getelementptr [2 x i32], i8* %446, i64 0, i64 %450
 %452 = load i32, i32* %451
 store i32 %452, i32* %33
 %453 = load i8*, i8** %21
 %454 = getelementptr %struct.tdefl_compressor, i8* %453, i32 0, i32 35
 %455 = load i32, i32* %28
 %456 = zext i32 %455 to i64
 %457 = getelementptr i8, i8* %454, i64 %456
 store i8* %457, i8** %34
 %458 = load i8*, i8** %21
 %459 = getelementptr %struct.tdefl_compressor, i8* %458, i32 0, i32 35
 %460 = load i32, i32* %28
 %461 = load i32, i32* %29
 %462 = add i32 %460, %461
 %463 = zext i32 %462 to i64
 %464 = getelementptr [33025 x i8], i8* %459, i64 0, i64 %463
 %465 = load i8, i8* %464
 store i8 %465, i8* %37
 %466 = load i8*, i8** %21
 %467 = getelementptr %struct.tdefl_compressor, i8* %466, i32 0, i32 35
 %468 = load i32, i32* %28
 %469 = load i32, i32* %29
 %470 = add i32 %468, %469
 %471 = sub i32 %470, 1
 %472 = zext i32 %471 to i64
 %473 = getelementptr [33025 x i8], i8* %467, i64 0, i64 %472
 %474 = load i8, i8* %473
 store i8 %474, i8* %38
 %475 = load i32, i32* %24
 %476 = icmp ule i32 %475, 258
 %477 = xor i1 %476, 1
 %478 = zext i1 %477 to i32
 %479 = sext i32 %478 to i64
 br i1 %477, label %480, label %481
480:
 call void @__assert_rtn (i8* @__func__.tdefl_find_match, i8* @.str.11, i32 2912, i8* @.str.69)
 unreachable
481:
 %482 = load i32, i32* %24
 %483 = load i32, i32* %29
 %484 = icmp ule i32 %482, %483
 br i1 %484, label %485, label %486
485:
 br label %701
486:
 br label %487
487:
 br label %488
488:
 %489 = load i32, i32* %33
 %490 = add i32 %489, -1
 store i32 %490, i32* %33
 %491 = icmp eq i32 %490, 0
 br i1 %491, label %492, label %493
492:
 br label %701
493:
 %494 = load i8*, i8** %21
 %495 = getelementptr %struct.tdefl_compressor, i8* %494, i32 0, i32 40
 %496 = load i32, i32* %30
 %497 = zext i32 %496 to i64
 %498 = getelementptr [32768 x i16], i8* %495, i64 0, i64 %497
 %499 = load i16, i16* %498
 %500 = zext i16 %499 to i32
 store i32 %500, i32* %31
 %501 = load i32, i32* %31
 %502 = icmp ne i32 %501, 0
 br i1 %502, label %503, label %511
503:
 %504 = load i32, i32* %22
 %505 = load i32, i32* %31
 %506 = sub i32 %504, %505
 %507 = trunc i32 %506 to i16
 %508 = zext i16 %507 to i32
 store i32 %508, i32* %27
 %509 = load i32, i32* %23
 %510 = icmp ugt i32 %508, %509
 br i1 %510, label %511, label %512
511:
 br label %701
512:
 %513 = load i32, i32* %31
 %514 = and i32 %513, 32767
 store i32 %514, i32* %30
 %515 = load i8*, i8** %21
 %516 = getelementptr %struct.tdefl_compressor, i8* %515, i32 0, i32 35
 %517 = load i32, i32* %30
 %518 = load i32, i32* %29
 %519 = add i32 %517, %518
 %520 = zext i32 %519 to i64
 %521 = getelementptr [33025 x i8], i8* %516, i64 0, i64 %520
 %522 = load i8, i8* %521
 %523 = zext i8 %522 to i32
 %524 = load i8, i8* %37
 %525 = zext i8 %524 to i32
 %526 = icmp eq i32 %523, %525
 br i1 %526, label %527, label %542
527:
 %528 = load i8*, i8** %21
 %529 = getelementptr %struct.tdefl_compressor, i8* %528, i32 0, i32 35
 %530 = load i32, i32* %30
 %531 = load i32, i32* %29
 %532 = add i32 %530, %531
 %533 = sub i32 %532, 1
 %534 = zext i32 %533 to i64
 %535 = getelementptr [33025 x i8], i8* %529, i64 0, i64 %534
 %536 = load i8, i8* %535
 %537 = zext i8 %536 to i32
 %538 = load i8, i8* %38
 %539 = zext i8 %538 to i32
 %540 = icmp eq i32 %537, %539
 br i1 %540, label %541, label %542
541:
 br label %641
542:
 %543 = load i8*, i8** %21
 %544 = getelementptr %struct.tdefl_compressor, i8* %543, i32 0, i32 40
 %545 = load i32, i32* %30
 %546 = zext i32 %545 to i64
 %547 = getelementptr [32768 x i16], i8* %544, i64 0, i64 %546
 %548 = load i16, i16* %547
 %549 = zext i16 %548 to i32
 store i32 %549, i32* %31
 %550 = load i32, i32* %31
 %551 = icmp ne i32 %550, 0
 br i1 %551, label %552, label %560
552:
 %553 = load i32, i32* %22
 %554 = load i32, i32* %31
 %555 = sub i32 %553, %554
 %556 = trunc i32 %555 to i16
 %557 = zext i16 %556 to i32
 store i32 %557, i32* %27
 %558 = load i32, i32* %23
 %559 = icmp ugt i32 %557, %558
 br i1 %559, label %560, label %561
560:
 br label %701
561:
 %562 = load i32, i32* %31
 %563 = and i32 %562, 32767
 store i32 %563, i32* %30
 %564 = load i8*, i8** %21
 %565 = getelementptr %struct.tdefl_compressor, i8* %564, i32 0, i32 35
 %566 = load i32, i32* %30
 %567 = load i32, i32* %29
 %568 = add i32 %566, %567
 %569 = zext i32 %568 to i64
 %570 = getelementptr [33025 x i8], i8* %565, i64 0, i64 %569
 %571 = load i8, i8* %570
 %572 = zext i8 %571 to i32
 %573 = load i8, i8* %37
 %574 = zext i8 %573 to i32
 %575 = icmp eq i32 %572, %574
 br i1 %575, label %576, label %591
576:
 %577 = load i8*, i8** %21
 %578 = getelementptr %struct.tdefl_compressor, i8* %577, i32 0, i32 35
 %579 = load i32, i32* %30
 %580 = load i32, i32* %29
 %581 = add i32 %579, %580
 %582 = sub i32 %581, 1
 %583 = zext i32 %582 to i64
 %584 = getelementptr [33025 x i8], i8* %578, i64 0, i64 %583
 %585 = load i8, i8* %584
 %586 = zext i8 %585 to i32
 %587 = load i8, i8* %38
 %588 = zext i8 %587 to i32
 %589 = icmp eq i32 %586, %588
 br i1 %589, label %590, label %591
590:
 br label %641
591:
 %592 = load i8*, i8** %21
 %593 = getelementptr %struct.tdefl_compressor, i8* %592, i32 0, i32 40
 %594 = load i32, i32* %30
 %595 = zext i32 %594 to i64
 %596 = getelementptr [32768 x i16], i8* %593, i64 0, i64 %595
 %597 = load i16, i16* %596
 %598 = zext i16 %597 to i32
 store i32 %598, i32* %31
 %599 = load i32, i32* %31
 %600 = icmp ne i32 %599, 0
 br i1 %600, label %601, label %609
601:
 %602 = load i32, i32* %22
 %603 = load i32, i32* %31
 %604 = sub i32 %602, %603
 %605 = trunc i32 %604 to i16
 %606 = zext i16 %605 to i32
 store i32 %606, i32* %27
 %607 = load i32, i32* %23
 %608 = icmp ugt i32 %606, %607
 br i1 %608, label %609, label %610
609:
 br label %701
610:
 %611 = load i32, i32* %31
 %612 = and i32 %611, 32767
 store i32 %612, i32* %30
 %613 = load i8*, i8** %21
 %614 = getelementptr %struct.tdefl_compressor, i8* %613, i32 0, i32 35
 %615 = load i32, i32* %30
 %616 = load i32, i32* %29
 %617 = add i32 %615, %616
 %618 = zext i32 %617 to i64
 %619 = getelementptr [33025 x i8], i8* %614, i64 0, i64 %618
 %620 = load i8, i8* %619
 %621 = zext i8 %620 to i32
 %622 = load i8, i8* %37
 %623 = zext i8 %622 to i32
 %624 = icmp eq i32 %621, %623
 br i1 %624, label %625, label %640
625:
 %626 = load i8*, i8** %21
 %627 = getelementptr %struct.tdefl_compressor, i8* %626, i32 0, i32 35
 %628 = load i32, i32* %30
 %629 = load i32, i32* %29
 %630 = add i32 %628, %629
 %631 = sub i32 %630, 1
 %632 = zext i32 %631 to i64
 %633 = getelementptr [33025 x i8], i8* %627, i64 0, i64 %632
 %634 = load i8, i8* %633
 %635 = zext i8 %634 to i32
 %636 = load i8, i8* %38
 %637 = zext i8 %636 to i32
 %638 = icmp eq i32 %635, %637
 br i1 %638, label %639, label %640
639:
 br label %641
640:
 br label %488
641:
 %642 = load i32, i32* %27
 %643 = icmp ne i32 %642, 0
 br i1 %643, label %645, label %644
644:
 br label %701
645:
 %646 = load i8*, i8** %34
 store i8* %646, i8** %35
 %647 = load i8*, i8** %21
 %648 = getelementptr %struct.tdefl_compressor, i8* %647, i32 0, i32 35
 %649 = load i32, i32* %30
 %650 = zext i32 %649 to i64
 %651 = getelementptr i8, i8* %648, i64 %650
 store i8* %651, i8** %36
 store i32 0, i32* %32
 br label %652
652:
 %653 = load i32, i32* %32
 %654 = load i32, i32* %24
 %655 = icmp ult i32 %653, %654
 br i1 %655, label %656, label %670
656:
 %657 = load i8*, i8** %35
 %658 = getelementptr i8, i8* %657, i32 1
 store i8* %658, i8** %35
 %659 = load i8, i8* %657
 %660 = zext i8 %659 to i32
 %661 = load i8*, i8** %36
 %662 = getelementptr i8, i8* %661, i32 1
 store i8* %662, i8** %36
 %663 = load i8, i8* %661
 %664 = zext i8 %663 to i32
 %665 = icmp ne i32 %660, %664
 br i1 %665, label %666, label %667
666:
 br label %670
667:
 %668 = load i32, i32* %32
 %669 = add i32 %668, 1
 store i32 %669, i32* %32
 br label %652
670:
 %671 = load i32, i32* %32
 %672 = load i32, i32* %29
 %673 = icmp ugt i32 %671, %672
 br i1 %673, label %674, label %700
674:
 %675 = load i32, i32* %27
 %676 = load i8*, i8** %25
 store i32 %675, i32* %676
 %677 = load i32, i32* %32
 store i32 %677, i32* %29
 %678 = load i8*, i8** %26
 store i32 %677, i32* %678
 %679 = load i32, i32* %24
 %680 = icmp eq i32 %677, %679
 br i1 %680, label %681, label %682
681:
 br label %701
682:
 %683 = load i8*, i8** %21
 %684 = getelementptr %struct.tdefl_compressor, i8* %683, i32 0, i32 35
 %685 = load i32, i32* %28
 %686 = load i32, i32* %29
 %687 = add i32 %685, %686
 %688 = zext i32 %687 to i64
 %689 = getelementptr [33025 x i8], i8* %684, i64 0, i64 %688
 %690 = load i8, i8* %689
 store i8 %690, i8* %37
 %691 = load i8*, i8** %21
 %692 = getelementptr %struct.tdefl_compressor, i8* %691, i32 0, i32 35
 %693 = load i32, i32* %28
 %694 = load i32, i32* %29
 %695 = add i32 %693, %694
 %696 = sub i32 %695, 1
 %697 = zext i32 %696 to i64
 %698 = getelementptr [33025 x i8], i8* %692, i64 0, i64 %697
 %699 = load i8, i8* %698
 store i8 %699, i8* %38
 br label %700
700:
 br label %487
701:
 br label %702
702:
 %703 = load i32, i32* %46
 %704 = icmp eq i32 %703, 3
 br i1 %704, label %705, label %708
705:
 %706 = load i32, i32* %45
 %707 = icmp uge i32 %706, 8192
 br i1 %707, label %721, label %708
708:
 %709 = load i32, i32* %47
 %710 = load i32, i32* %45
 %711 = icmp eq i32 %709, %710
 br i1 %711, label %721, label %712
712:
 %713 = load i8*, i8** %40
 %714 = getelementptr %struct.tdefl_compressor, i8* %713, i32 0, i32 2
 %715 = load i32, i32* %714
 %716 = and i32 %715, 131072
 %717 = icmp ne i32 %716, 0
 br i1 %717, label %718, label %722
718:
 %719 = load i32, i32* %46
 %720 = icmp ule i32 %719, 5
 br i1 %720, label %721, label %722
721:
 store i32 0, i32* %46
 store i32 0, i32* %45
 br label %722
722:
 %723 = load i8*, i8** %40
 %724 = getelementptr %struct.tdefl_compressor, i8* %723, i32 0, i32 19
 %725 = load i32, i32* %724
 %726 = icmp ne i32 %725, 0
 br i1 %726, label %727, label %1043
727:
 %728 = load i32, i32* %46
 %729 = load i8*, i8** %40
 %730 = getelementptr %struct.tdefl_compressor, i8* %729, i32 0, i32 19
 %731 = load i32, i32* %730
 %732 = icmp ugt i32 %728, %731
 br i1 %732, label %733, label %917
733:
 %734 = load i8*, i8** %40
 %735 = load i8*, i8** %40
 %736 = getelementptr %struct.tdefl_compressor, i8* %735, i32 0, i32 20
 %737 = load i32, i32* %736
 %738 = trunc i32 %737 to i8
 store i8* %734, i8** %17
 store i8 %738, i8* %18
 %739 = load i8*, i8** %17
 %740 = getelementptr %struct.tdefl_compressor, i8* %739, i32 0, i32 14
 %741 = load i32, i32* %740
 %742 = add i32 %741, 1
 store i32 %742, i32* %740
 %743 = load i8, i8* %18
 %744 = load i8*, i8** %17
 %745 = getelementptr %struct.tdefl_compressor, i8* %744, i32 0, i32 9
 %746 = load i8*, i8** %745
 %747 = getelementptr i8, i8* %746, i32 1
 store i8* %747, i8** %745
 store i8 %743, i8* %746
 %748 = load i8*, i8** %17
 %749 = getelementptr %struct.tdefl_compressor, i8* %748, i32 0, i32 10
 %750 = load i8*, i8** %749
 %751 = load i8, i8* %750
 %752 = zext i8 %751 to i32
 %753 = ashr i32 %752, 1
 %754 = trunc i32 %753 to i8
 %755 = load i8*, i8** %17
 %756 = getelementptr %struct.tdefl_compressor, i8* %755, i32 0, i32 10
 %757 = load i8*, i8** %756
 store i8 %754, i8* %757
 %758 = load i8*, i8** %17
 %759 = getelementptr %struct.tdefl_compressor, i8* %758, i32 0, i32 13
 %760 = load i32, i32* %759
 %761 = add i32 %760, -1
 store i32 %761, i32* %759
 %762 = icmp eq i32 %761, 0
 br i1 %762, label %763, label %772
763:
 %764 = load i8*, i8** %17
 %765 = getelementptr %struct.tdefl_compressor, i8* %764, i32 0, i32 13
 store i32 8, i32* %765
 %766 = load i8*, i8** %17
 %767 = getelementptr %struct.tdefl_compressor, i8* %766, i32 0, i32 9
 %768 = load i8*, i8** %767
 %769 = getelementptr i8, i8* %768, i32 1
 store i8* %769, i8** %767
 %770 = load i8*, i8** %17
 %771 = getelementptr %struct.tdefl_compressor, i8* %770, i32 0, i32 10
 store i8* %768, i8** %771
 br label %772
772:
 %773 = load i8*, i8** %17
 %774 = getelementptr %struct.tdefl_compressor, i8* %773, i32 0, i32 36
 %775 = load i8, i8* %18
 %776 = zext i8 %775 to i64
 %777 = getelementptr [288 x i16], i8* %774, i64 0, i64 %776
 %778 = load i16, i16* %777
 %779 = add i16 %778, 1
 store i16 %779, i16* %777
 %780 = load i32, i32* %46
 %781 = icmp uge i32 %780, 128
 br i1 %781, label %782, label %900
782:
 %783 = load i8*, i8** %40
 %784 = load i32, i32* %46
 %785 = load i32, i32* %45
 store i8* %783, i8** %2
 store i32 %784, i32* %3
 store i32 %785, i32* %4
 %786 = load i32, i32* %3
 %787 = icmp uge i32 %786, 3
 br i1 %787, label %788, label %794
788:
 %789 = load i32, i32* %4
 %790 = icmp uge i32 %789, 1
 br i1 %790, label %791, label %794
791:
 %792 = load i32, i32* %4
 %793 = icmp ule i32 %792, 32768
 br label %794
794:
 %795 = phi i1 [0, %788], [0, %782], [%793, %791]
 %796 = xor i1 %795, 1
 %797 = zext i1 %796 to i32
 %798 = sext i32 %797 to i64
 br i1 %796, label %799, label %800
799:
 call void @__assert_rtn (i8* @__func__.tdefl_record_match, i8* @.str.11, i32 3153, i8* @.str.70)
 unreachable
800:
 %801 = load i32, i32* %3
 %802 = load i8*, i8** %2
 %803 = getelementptr %struct.tdefl_compressor, i8* %802, i32 0, i32 14
 %804 = load i32, i32* %803
 %805 = add i32 %804, %801
 store i32 %805, i32* %803
 %806 = load i32, i32* %3
 %807 = sub i32 %806, 3
 %808 = trunc i32 %807 to i8
 %809 = load i8*, i8** %2
 %810 = getelementptr %struct.tdefl_compressor, i8* %809, i32 0, i32 9
 %811 = load i8*, i8** %810
 store i8 %808, i8* %811
 %812 = load i32, i32* %4
 %813 = sub i32 %812, 1
 store i32 %813, i32* %4
 %814 = load i32, i32* %4
 %815 = and i32 %814, 255
 %816 = trunc i32 %815 to i8
 %817 = load i8*, i8** %2
 %818 = getelementptr %struct.tdefl_compressor, i8* %817, i32 0, i32 9
 %819 = load i8*, i8** %818
 %820 = getelementptr i8, i8* %819, i64 1
 store i8 %816, i8* %820
 %821 = load i32, i32* %4
 %822 = lshr i32 %821, 8
 %823 = trunc i32 %822 to i8
 %824 = load i8*, i8** %2
 %825 = getelementptr %struct.tdefl_compressor, i8* %824, i32 0, i32 9
 %826 = load i8*, i8** %825
 %827 = getelementptr i8, i8* %826, i64 2
 store i8 %823, i8* %827
 %828 = load i8*, i8** %2
 %829 = getelementptr %struct.tdefl_compressor, i8* %828, i32 0, i32 9
 %830 = load i8*, i8** %829
 %831 = getelementptr i8, i8* %830, i64 3
 store i8* %831, i8** %829
 %832 = load i8*, i8** %2
 %833 = getelementptr %struct.tdefl_compressor, i8* %832, i32 0, i32 10
 %834 = load i8*, i8** %833
 %835 = load i8, i8* %834
 %836 = zext i8 %835 to i32
 %837 = ashr i32 %836, 1
 %838 = or i32 %837, 128
 %839 = trunc i32 %838 to i8
 %840 = load i8*, i8** %2
 %841 = getelementptr %struct.tdefl_compressor, i8* %840, i32 0, i32 10
 %842 = load i8*, i8** %841
 store i8 %839, i8* %842
 %843 = load i8*, i8** %2
 %844 = getelementptr %struct.tdefl_compressor, i8* %843, i32 0, i32 13
 %845 = load i32, i32* %844
 %846 = add i32 %845, -1
 store i32 %846, i32* %844
 %847 = icmp eq i32 %846, 0
 br i1 %847, label %848, label %857
848:
 %849 = load i8*, i8** %2
 %850 = getelementptr %struct.tdefl_compressor, i8* %849, i32 0, i32 13
 store i32 8, i32* %850
 %851 = load i8*, i8** %2
 %852 = getelementptr %struct.tdefl_compressor, i8* %851, i32 0, i32 9
 %853 = load i8*, i8** %852
 %854 = getelementptr i8, i8* %853, i32 1
 store i8* %854, i8** %852
 %855 = load i8*, i8** %2
 %856 = getelementptr %struct.tdefl_compressor, i8* %855, i32 0, i32 10
 store i8* %853, i8** %856
 br label %857
857:
 %858 = load i32, i32* %4
 %859 = and i32 %858, 511
 %860 = zext i32 %859 to i64
 %861 = getelementptr [512 x i8], i8* @s_tdefl_small_dist_sym, i64 0, i64 %860
 %862 = load i8, i8* %861
 %863 = zext i8 %862 to i32
 store i32 %863, i32* %5
 %864 = load i32, i32* %4
 %865 = lshr i32 %864, 8
 %866 = and i32 %865, 127
 %867 = zext i32 %866 to i64
 %868 = getelementptr [128 x i8], i8* @s_tdefl_large_dist_sym, i64 0, i64 %867
 %869 = load i8, i8* %868
 %870 = zext i8 %869 to i32
 store i32 %870, i32* %6
 %871 = load i8*, i8** %2
 %872 = getelementptr %struct.tdefl_compressor, i8* %871, i32 0, i32 36
 %873 = getelementptr [3 x [288 x i16]], i8* %872, i64 0, i64 1
 %874 = load i32, i32* %4
 %875 = icmp ult i32 %874, 512
 br i1 %875, label %876, label %878
876:
 %877 = load i32, i32* %5
 br label %880
878:
 %879 = load i32, i32* %6
 br label %880
880:
 %881 = phi i32 [%877, %876], [%879, %878]
 %882 = zext i32 %881 to i64
 %883 = getelementptr [288 x i16], i8* %873, i64 0, i64 %882
 %884 = load i16, i16* %883
 %885 = add i16 %884, 1
 store i16 %885, i16* %883
 %886 = load i8*, i8** %2
 %887 = getelementptr %struct.tdefl_compressor, i8* %886, i32 0, i32 36
 %888 = load i32, i32* %3
 %889 = sub i32 %888, 3
 %890 = zext i32 %889 to i64
 %891 = getelementptr [256 x i16], i8* @s_tdefl_len_sym, i64 0, i64 %890
 %892 = load i16, i16* %891
 %893 = zext i16 %892 to i64
 %894 = getelementptr [288 x i16], i8* %887, i64 0, i64 %893
 %895 = load i16, i16* %894
 %896 = add i16 %895, 1
 store i16 %896, i16* %894
 %897 = load i8*, i8** %40
 %898 = getelementptr %struct.tdefl_compressor, i8* %897, i32 0, i32 19
 store i32 0, i32* %898
 %899 = load i32, i32* %46
 store i32 %899, i32* %44
 br label %916
900:
 %901 = load i8*, i8** %40
 %902 = getelementptr %struct.tdefl_compressor, i8* %901, i32 0, i32 35
 %903 = load i32, i32* %47
 %904 = zext i32 %903 to i64
 %905 = getelementptr [33025 x i8], i8* %902, i64 0, i64 %904
 %906 = load i8, i8* %905
 %907 = zext i8 %906 to i32
 %908 = load i8*, i8** %40
 %909 = getelementptr %struct.tdefl_compressor, i8* %908, i32 0, i32 20
 store i32 %907, i32* %909
 %910 = load i32, i32* %45
 %911 = load i8*, i8** %40
 %912 = getelementptr %struct.tdefl_compressor, i8* %911, i32 0, i32 18
 store i32 %910, i32* %912
 %913 = load i32, i32* %46
 %914 = load i8*, i8** %40
 %915 = getelementptr %struct.tdefl_compressor, i8* %914, i32 0, i32 19
 store i32 %913, i32* %915
 br label %916
916:
 br label %1042
917:
 %918 = load i8*, i8** %40
 %919 = load i8*, i8** %40
 %920 = getelementptr %struct.tdefl_compressor, i8* %919, i32 0, i32 19
 %921 = load i32, i32* %920
 %922 = load i8*, i8** %40
 %923 = getelementptr %struct.tdefl_compressor, i8* %922, i32 0, i32 18
 %924 = load i32, i32* %923
 store i8* %918, i8** %7
 store i32 %921, i32* %8
 store i32 %924, i32* %9
 %925 = load i32, i32* %8
 %926 = icmp uge i32 %925, 3
 br i1 %926, label %927, label %933
927:
 %928 = load i32, i32* %9
 %929 = icmp uge i32 %928, 1
 br i1 %929, label %930, label %933
930:
 %931 = load i32, i32* %9
 %932 = icmp ule i32 %931, 32768
 br label %933
933:
 %934 = phi i1 [0, %927], [0, %917], [%932, %930]
 %935 = xor i1 %934, 1
 %936 = zext i1 %935 to i32
 %937 = sext i32 %936 to i64
 br i1 %935, label %938, label %939
938:
 call void @__assert_rtn (i8* @__func__.tdefl_record_match, i8* @.str.11, i32 3153, i8* @.str.70)
 unreachable
939:
 %940 = load i32, i32* %8
 %941 = load i8*, i8** %7
 %942 = getelementptr %struct.tdefl_compressor, i8* %941, i32 0, i32 14
 %943 = load i32, i32* %942
 %944 = add i32 %943, %940
 store i32 %944, i32* %942
 %945 = load i32, i32* %8
 %946 = sub i32 %945, 3
 %947 = trunc i32 %946 to i8
 %948 = load i8*, i8** %7
 %949 = getelementptr %struct.tdefl_compressor, i8* %948, i32 0, i32 9
 %950 = load i8*, i8** %949
 store i8 %947, i8* %950
 %951 = load i32, i32* %9
 %952 = sub i32 %951, 1
 store i32 %952, i32* %9
 %953 = load i32, i32* %9
 %954 = and i32 %953, 255
 %955 = trunc i32 %954 to i8
 %956 = load i8*, i8** %7
 %957 = getelementptr %struct.tdefl_compressor, i8* %956, i32 0, i32 9
 %958 = load i8*, i8** %957
 %959 = getelementptr i8, i8* %958, i64 1
 store i8 %955, i8* %959
 %960 = load i32, i32* %9
 %961 = lshr i32 %960, 8
 %962 = trunc i32 %961 to i8
 %963 = load i8*, i8** %7
 %964 = getelementptr %struct.tdefl_compressor, i8* %963, i32 0, i32 9
 %965 = load i8*, i8** %964
 %966 = getelementptr i8, i8* %965, i64 2
 store i8 %962, i8* %966
 %967 = load i8*, i8** %7
 %968 = getelementptr %struct.tdefl_compressor, i8* %967, i32 0, i32 9
 %969 = load i8*, i8** %968
 %970 = getelementptr i8, i8* %969, i64 3
 store i8* %970, i8** %968
 %971 = load i8*, i8** %7
 %972 = getelementptr %struct.tdefl_compressor, i8* %971, i32 0, i32 10
 %973 = load i8*, i8** %972
 %974 = load i8, i8* %973
 %975 = zext i8 %974 to i32
 %976 = ashr i32 %975, 1
 %977 = or i32 %976, 128
 %978 = trunc i32 %977 to i8
 %979 = load i8*, i8** %7
 %980 = getelementptr %struct.tdefl_compressor, i8* %979, i32 0, i32 10
 %981 = load i8*, i8** %980
 store i8 %978, i8* %981
 %982 = load i8*, i8** %7
 %983 = getelementptr %struct.tdefl_compressor, i8* %982, i32 0, i32 13
 %984 = load i32, i32* %983
 %985 = add i32 %984, -1
 store i32 %985, i32* %983
 %986 = icmp eq i32 %985, 0
 br i1 %986, label %987, label %996
987:
 %988 = load i8*, i8** %7
 %989 = getelementptr %struct.tdefl_compressor, i8* %988, i32 0, i32 13
 store i32 8, i32* %989
 %990 = load i8*, i8** %7
 %991 = getelementptr %struct.tdefl_compressor, i8* %990, i32 0, i32 9
 %992 = load i8*, i8** %991
 %993 = getelementptr i8, i8* %992, i32 1
 store i8* %993, i8** %991
 %994 = load i8*, i8** %7
 %995 = getelementptr %struct.tdefl_compressor, i8* %994, i32 0, i32 10
 store i8* %992, i8** %995
 br label %996
996:
 %997 = load i32, i32* %9
 %998 = and i32 %997, 511
 %999 = zext i32 %998 to i64
 %1000 = getelementptr [512 x i8], i8* @s_tdefl_small_dist_sym, i64 0, i64 %999
 %1001 = load i8, i8* %1000
 %1002 = zext i8 %1001 to i32
 store i32 %1002, i32* %10
 %1003 = load i32, i32* %9
 %1004 = lshr i32 %1003, 8
 %1005 = and i32 %1004, 127
 %1006 = zext i32 %1005 to i64
 %1007 = getelementptr [128 x i8], i8* @s_tdefl_large_dist_sym, i64 0, i64 %1006
 %1008 = load i8, i8* %1007
 %1009 = zext i8 %1008 to i32
 store i32 %1009, i32* %11
 %1010 = load i8*, i8** %7
 %1011 = getelementptr %struct.tdefl_compressor, i8* %1010, i32 0, i32 36
 %1012 = getelementptr [3 x [288 x i16]], i8* %1011, i64 0, i64 1
 %1013 = load i32, i32* %9
 %1014 = icmp ult i32 %1013, 512
 br i1 %1014, label %1015, label %1017
1015:
 %1016 = load i32, i32* %10
 br label %1019
1017:
 %1018 = load i32, i32* %11
 br label %1019
1019:
 %1020 = phi i32 [%1016, %1015], [%1018, %1017]
 %1021 = zext i32 %1020 to i64
 %1022 = getelementptr [288 x i16], i8* %1012, i64 0, i64 %1021
 %1023 = load i16, i16* %1022
 %1024 = add i16 %1023, 1
 store i16 %1024, i16* %1022
 %1025 = load i8*, i8** %7
 %1026 = getelementptr %struct.tdefl_compressor, i8* %1025, i32 0, i32 36
 %1027 = load i32, i32* %8
 %1028 = sub i32 %1027, 3
 %1029 = zext i32 %1028 to i64
 %1030 = getelementptr [256 x i16], i8* @s_tdefl_len_sym, i64 0, i64 %1029
 %1031 = load i16, i16* %1030
 %1032 = zext i16 %1031 to i64
 %1033 = getelementptr [288 x i16], i8* %1026, i64 0, i64 %1032
 %1034 = load i16, i16* %1033
 %1035 = add i16 %1034, 1
 store i16 %1035, i16* %1033
 %1036 = load i8*, i8** %40
 %1037 = getelementptr %struct.tdefl_compressor, i8* %1036, i32 0, i32 19
 %1038 = load i32, i32* %1037
 %1039 = sub i32 %1038, 1
 store i32 %1039, i32* %44
 %1040 = load i8*, i8** %40
 %1041 = getelementptr %struct.tdefl_compressor, i8* %1040, i32 0, i32 19
 store i32 0, i32* %1041
 br label %1042
1042:
 br label %1257
1043:
 %1044 = load i32, i32* %45
 %1045 = icmp ne i32 %1044, 0
 br i1 %1045, label %1102, label %1046
1046:
 %1047 = load i8*, i8** %40
 %1048 = load i8*, i8** %40
 %1049 = getelementptr %struct.tdefl_compressor, i8* %1048, i32 0, i32 35
 %1050 = load i32, i32* %47
 %1051 = zext i32 %1050 to i64
 %1052 = icmp ult i64 %1051, 33024
 br i1 %1052, label %1053, label %1056
1053:
 %1054 = load i32, i32* %47
 %1055 = zext i32 %1054 to i64
 br label %1057
1056:
 br label %1057
1057:
 %1058 = phi i64 [%1055, %1053], [33024, %1056]
 %1059 = getelementptr [33025 x i8], i8* %1049, i64 0, i64 %1058
 %1060 = load i8, i8* %1059
 store i8* %1047, i8** %19
 store i8 %1060, i8* %20
 %1061 = load i8*, i8** %19
 %1062 = getelementptr %struct.tdefl_compressor, i8* %1061, i32 0, i32 14
 %1063 = load i32, i32* %1062
 %1064 = add i32 %1063, 1
 store i32 %1064, i32* %1062
 %1065 = load i8, i8* %20
 %1066 = load i8*, i8** %19
 %1067 = getelementptr %struct.tdefl_compressor, i8* %1066, i32 0, i32 9
 %1068 = load i8*, i8** %1067
 %1069 = getelementptr i8, i8* %1068, i32 1
 store i8* %1069, i8** %1067
 store i8 %1065, i8* %1068
 %1070 = load i8*, i8** %19
 %1071 = getelementptr %struct.tdefl_compressor, i8* %1070, i32 0, i32 10
 %1072 = load i8*, i8** %1071
 %1073 = load i8, i8* %1072
 %1074 = zext i8 %1073 to i32
 %1075 = ashr i32 %1074, 1
 %1076 = trunc i32 %1075 to i8
 %1077 = load i8*, i8** %19
 %1078 = getelementptr %struct.tdefl_compressor, i8* %1077, i32 0, i32 10
 %1079 = load i8*, i8** %1078
 store i8 %1076, i8* %1079
 %1080 = load i8*, i8** %19
 %1081 = getelementptr %struct.tdefl_compressor, i8* %1080, i32 0, i32 13
 %1082 = load i32, i32* %1081
 %1083 = add i32 %1082, -1
 store i32 %1083, i32* %1081
 %1084 = icmp eq i32 %1083, 0
 br i1 %1084, label %1085, label %1094
1085:
 %1086 = load i8*, i8** %19
 %1087 = getelementptr %struct.tdefl_compressor, i8* %1086, i32 0, i32 13
 store i32 8, i32* %1087
 %1088 = load i8*, i8** %19
 %1089 = getelementptr %struct.tdefl_compressor, i8* %1088, i32 0, i32 9
 %1090 = load i8*, i8** %1089
 %1091 = getelementptr i8, i8* %1090, i32 1
 store i8* %1091, i8** %1089
 %1092 = load i8*, i8** %19
 %1093 = getelementptr %struct.tdefl_compressor, i8* %1092, i32 0, i32 10
 store i8* %1090, i8** %1093
 br label %1094
1094:
 %1095 = load i8*, i8** %19
 %1096 = getelementptr %struct.tdefl_compressor, i8* %1095, i32 0, i32 36
 %1097 = load i8, i8* %20
 %1098 = zext i8 %1097 to i64
 %1099 = getelementptr [288 x i16], i8* %1096, i64 0, i64 %1098
 %1100 = load i16, i16* %1099
 %1101 = add i16 %1100, 1
 store i16 %1101, i16* %1099
 br label %1256
1102:
 %1103 = load i8*, i8** %40
 %1104 = getelementptr %struct.tdefl_compressor, i8* %1103, i32 0, i32 4
 %1105 = load i32, i32* %1104
 %1106 = icmp ne i32 %1105, 0
 br i1 %1106, label %1116, label %1107
1107:
 %1108 = load i8*, i8** %40
 %1109 = getelementptr %struct.tdefl_compressor, i8* %1108, i32 0, i32 2
 %1110 = load i32, i32* %1109
 %1111 = and i32 %1110, 65536
 %1112 = icmp ne i32 %1111, 0
 br i1 %1112, label %1116, label %1113
1113:
 %1114 = load i32, i32* %46
 %1115 = icmp uge i32 %1114, 128
 br i1 %1115, label %1116, label %1232
1116:
 %1117 = load i8*, i8** %40
 %1118 = load i32, i32* %46
 %1119 = load i32, i32* %45
 store i8* %1117, i8** %12
 store i32 %1118, i32* %13
 store i32 %1119, i32* %14
 %1120 = load i32, i32* %13
 %1121 = icmp uge i32 %1120, 3
 br i1 %1121, label %1122, label %1128
1122:
 %1123 = load i32, i32* %14
 %1124 = icmp uge i32 %1123, 1
 br i1 %1124, label %1125, label %1128
1125:
 %1126 = load i32, i32* %14
 %1127 = icmp ule i32 %1126, 32768
 br label %1128
1128:
 %1129 = phi i1 [0, %1122], [0, %1116], [%1127, %1125]
 %1130 = xor i1 %1129, 1
 %1131 = zext i1 %1130 to i32
 %1132 = sext i32 %1131 to i64
 br i1 %1130, label %1133, label %1134
1133:
 call void @__assert_rtn (i8* @__func__.tdefl_record_match, i8* @.str.11, i32 3153, i8* @.str.70)
 unreachable
1134:
 %1135 = load i32, i32* %13
 %1136 = load i8*, i8** %12
 %1137 = getelementptr %struct.tdefl_compressor, i8* %1136, i32 0, i32 14
 %1138 = load i32, i32* %1137
 %1139 = add i32 %1138, %1135
 store i32 %1139, i32* %1137
 %1140 = load i32, i32* %13
 %1141 = sub i32 %1140, 3
 %1142 = trunc i32 %1141 to i8
 %1143 = load i8*, i8** %12
 %1144 = getelementptr %struct.tdefl_compressor, i8* %1143, i32 0, i32 9
 %1145 = load i8*, i8** %1144
 store i8 %1142, i8* %1145
 %1146 = load i32, i32* %14
 %1147 = sub i32 %1146, 1
 store i32 %1147, i32* %14
 %1148 = load i32, i32* %14
 %1149 = and i32 %1148, 255
 %1150 = trunc i32 %1149 to i8
 %1151 = load i8*, i8** %12
 %1152 = getelementptr %struct.tdefl_compressor, i8* %1151, i32 0, i32 9
 %1153 = load i8*, i8** %1152
 %1154 = getelementptr i8, i8* %1153, i64 1
 store i8 %1150, i8* %1154
 %1155 = load i32, i32* %14
 %1156 = lshr i32 %1155, 8
 %1157 = trunc i32 %1156 to i8
 %1158 = load i8*, i8** %12
 %1159 = getelementptr %struct.tdefl_compressor, i8* %1158, i32 0, i32 9
 %1160 = load i8*, i8** %1159
 %1161 = getelementptr i8, i8* %1160, i64 2
 store i8 %1157, i8* %1161
 %1162 = load i8*, i8** %12
 %1163 = getelementptr %struct.tdefl_compressor, i8* %1162, i32 0, i32 9
 %1164 = load i8*, i8** %1163
 %1165 = getelementptr i8, i8* %1164, i64 3
 store i8* %1165, i8** %1163
 %1166 = load i8*, i8** %12
 %1167 = getelementptr %struct.tdefl_compressor, i8* %1166, i32 0, i32 10
 %1168 = load i8*, i8** %1167
 %1169 = load i8, i8* %1168
 %1170 = zext i8 %1169 to i32
 %1171 = ashr i32 %1170, 1
 %1172 = or i32 %1171, 128
 %1173 = trunc i32 %1172 to i8
 %1174 = load i8*, i8** %12
 %1175 = getelementptr %struct.tdefl_compressor, i8* %1174, i32 0, i32 10
 %1176 = load i8*, i8** %1175
 store i8 %1173, i8* %1176
 %1177 = load i8*, i8** %12
 %1178 = getelementptr %struct.tdefl_compressor, i8* %1177, i32 0, i32 13
 %1179 = load i32, i32* %1178
 %1180 = add i32 %1179, -1
 store i32 %1180, i32* %1178
 %1181 = icmp eq i32 %1180, 0
 br i1 %1181, label %1182, label %1191
1182:
 %1183 = load i8*, i8** %12
 %1184 = getelementptr %struct.tdefl_compressor, i8* %1183, i32 0, i32 13
 store i32 8, i32* %1184
 %1185 = load i8*, i8** %12
 %1186 = getelementptr %struct.tdefl_compressor, i8* %1185, i32 0, i32 9
 %1187 = load i8*, i8** %1186
 %1188 = getelementptr i8, i8* %1187, i32 1
 store i8* %1188, i8** %1186
 %1189 = load i8*, i8** %12
 %1190 = getelementptr %struct.tdefl_compressor, i8* %1189, i32 0, i32 10
 store i8* %1187, i8** %1190
 br label %1191
1191:
 %1192 = load i32, i32* %14
 %1193 = and i32 %1192, 511
 %1194 = zext i32 %1193 to i64
 %1195 = getelementptr [512 x i8], i8* @s_tdefl_small_dist_sym, i64 0, i64 %1194
 %1196 = load i8, i8* %1195
 %1197 = zext i8 %1196 to i32
 store i32 %1197, i32* %15
 %1198 = load i32, i32* %14
 %1199 = lshr i32 %1198, 8
 %1200 = and i32 %1199, 127
 %1201 = zext i32 %1200 to i64
 %1202 = getelementptr [128 x i8], i8* @s_tdefl_large_dist_sym, i64 0, i64 %1201
 %1203 = load i8, i8* %1202
 %1204 = zext i8 %1203 to i32
 store i32 %1204, i32* %16
 %1205 = load i8*, i8** %12
 %1206 = getelementptr %struct.tdefl_compressor, i8* %1205, i32 0, i32 36
 %1207 = getelementptr [3 x [288 x i16]], i8* %1206, i64 0, i64 1
 %1208 = load i32, i32* %14
 %1209 = icmp ult i32 %1208, 512
 br i1 %1209, label %1210, label %1212
1210:
 %1211 = load i32, i32* %15
 br label %1214
1212:
 %1213 = load i32, i32* %16
 br label %1214
1214:
 %1215 = phi i32 [%1211, %1210], [%1213, %1212]
 %1216 = zext i32 %1215 to i64
 %1217 = getelementptr [288 x i16], i8* %1207, i64 0, i64 %1216
 %1218 = load i16, i16* %1217
 %1219 = add i16 %1218, 1
 store i16 %1219, i16* %1217
 %1220 = load i8*, i8** %12
 %1221 = getelementptr %struct.tdefl_compressor, i8* %1220, i32 0, i32 36
 %1222 = load i32, i32* %13
 %1223 = sub i32 %1222, 3
 %1224 = zext i32 %1223 to i64
 %1225 = getelementptr [256 x i16], i8* @s_tdefl_len_sym, i64 0, i64 %1224
 %1226 = load i16, i16* %1225
 %1227 = zext i16 %1226 to i64
 %1228 = getelementptr [288 x i16], i8* %1221, i64 0, i64 %1227
 %1229 = load i16, i16* %1228
 %1230 = add i16 %1229, 1
 store i16 %1230, i16* %1228
 %1231 = load i32, i32* %46
 store i32 %1231, i32* %44
 br label %1255
1232:
 %1233 = load i8*, i8** %40
 %1234 = getelementptr %struct.tdefl_compressor, i8* %1233, i32 0, i32 35
 %1235 = load i32, i32* %47
 %1236 = zext i32 %1235 to i64
 %1237 = icmp ult i64 %1236, 33024
 br i1 %1237, label %1238, label %1241
1238:
 %1239 = load i32, i32* %47
 %1240 = zext i32 %1239 to i64
 br label %1242
1241:
 br label %1242
1242:
 %1243 = phi i64 [%1240, %1238], [33024, %1241]
 %1244 = getelementptr [33025 x i8], i8* %1234, i64 0, i64 %1243
 %1245 = load i8, i8* %1244
 %1246 = zext i8 %1245 to i32
 %1247 = load i8*, i8** %40
 %1248 = getelementptr %struct.tdefl_compressor, i8* %1247, i32 0, i32 20
 store i32 %1246, i32* %1248
 %1249 = load i32, i32* %45
 %1250 = load i8*, i8** %40
 %1251 = getelementptr %struct.tdefl_compressor, i8* %1250, i32 0, i32 18
 store i32 %1249, i32* %1251
 %1252 = load i32, i32* %46
 %1253 = load i8*, i8** %40
 %1254 = getelementptr %struct.tdefl_compressor, i8* %1253, i32 0, i32 19
 store i32 %1252, i32* %1254
 br label %1255
1255:
 br label %1256
1256:
 br label %1257
1257:
 %1258 = load i32, i32* %44
 %1259 = load i8*, i8** %40
 %1260 = getelementptr %struct.tdefl_compressor, i8* %1259, i32 0, i32 6
 %1261 = load i32, i32* %1260
 %1262 = add i32 %1261, %1258
 store i32 %1262, i32* %1260
 %1263 = load i8*, i8** %40
 %1264 = getelementptr %struct.tdefl_compressor, i8* %1263, i32 0, i32 7
 %1265 = load i32, i32* %1264
 %1266 = load i32, i32* %44
 %1267 = icmp uge i32 %1265, %1266
 %1268 = xor i1 %1267, 1
 %1269 = zext i1 %1268 to i32
 %1270 = sext i32 %1269 to i64
 %1271 = icmp ne i64 %1270, 0
 br i1 %1271, label %1272, label %1274
1272:
 call void @__assert_rtn (i8* @__func__.tdefl_compress_normal, i8* @.str.11, i32 3302, i8* @.str.68)
 unreachable
1273:
 br label %1275
1274:
 br label %1275
1275:
 %1276 = load i32, i32* %44
 %1277 = load i8*, i8** %40
 %1278 = getelementptr %struct.tdefl_compressor, i8* %1277, i32 0, i32 7
 %1279 = load i32, i32* %1278
 %1280 = sub i32 %1279, %1276
 store i32 %1280, i32* %1278
 %1281 = load i8*, i8** %40
 %1282 = getelementptr %struct.tdefl_compressor, i8* %1281, i32 0, i32 8
 %1283 = load i32, i32* %1282
 %1284 = load i32, i32* %44
 %1285 = add i32 %1283, %1284
 %1286 = icmp ult i32 %1285, 32768
 br i1 %1286, label %1287, label %1293
1287:
 %1288 = load i8*, i8** %40
 %1289 = getelementptr %struct.tdefl_compressor, i8* %1288, i32 0, i32 8
 %1290 = load i32, i32* %1289
 %1291 = load i32, i32* %44
 %1292 = add i32 %1290, %1291
 br label %1294
1293:
 br label %1294
1294:
 %1295 = phi i32 [%1292, %1287], [32768, %1293]
 %1296 = load i8*, i8** %40
 %1297 = getelementptr %struct.tdefl_compressor, i8* %1296, i32 0, i32 8
 store i32 %1295, i32* %1297
 %1298 = load i8*, i8** %40
 %1299 = getelementptr %struct.tdefl_compressor, i8* %1298, i32 0, i32 9
 %1300 = load i8*, i8** %1299
 %1301 = load i8*, i8** %40
 %1302 = getelementptr %struct.tdefl_compressor, i8* %1301, i32 0, i32 39
 %1303 = getelementptr [65536 x i8], i8* %1302, i64 0, i64 65528
 %1304 = icmp ugt i8* %1300, %1303
 br i1 %1304, label %1333, label %1305
1305:
 %1306 = load i8*, i8** %40
 %1307 = getelementptr %struct.tdefl_compressor, i8* %1306, i32 0, i32 14
 %1308 = load i32, i32* %1307
 %1309 = icmp ugt i32 %1308, 31744
 br i1 %1309, label %1310, label %1349
1310:
 %1311 = load i8*, i8** %40
 %1312 = getelementptr %struct.tdefl_compressor, i8* %1311, i32 0, i32 9
 %1313 = load i8*, i8** %1312
 %1314 = load i8*, i8** %40
 %1315 = getelementptr %struct.tdefl_compressor, i8* %1314, i32 0, i32 39
 %1316 = getelementptr [65536 x i8], i8* %1315, i64 0, i64 0
 %1317 = ptrtoint i8** %1313 to i64
 %1318 = ptrtoint i8** %1316 to i64
 %1319 = sub i64 %1317, %1318
 %1320 = trunc i64 %1319 to i32
 %1321 = mul i32 %1320, 115
 %1322 = lshr i32 %1321, 7
 %1323 = load i8*, i8** %40
 %1324 = getelementptr %struct.tdefl_compressor, i8* %1323, i32 0, i32 14
 %1325 = load i32, i32* %1324
 %1326 = icmp uge i32 %1322, %1325
 br i1 %1326, label %1333, label %1327
1327:
 %1328 = load i8*, i8** %40
 %1329 = getelementptr %struct.tdefl_compressor, i8* %1328, i32 0, i32 2
 %1330 = load i32, i32* %1329
 %1331 = and i32 %1330, 524288
 %1332 = icmp ne i32 %1331, 0
 br i1 %1332, label %1333, label %1349
1333:
 %1334 = load i8*, i8** %41
 %1335 = load i8*, i8** %40
 %1336 = getelementptr %struct.tdefl_compressor, i8* %1335, i32 0, i32 32
 store i8* %1334, i8** %1336
 %1337 = load i64, i64* %42
 %1338 = load i8*, i8** %40
 %1339 = getelementptr %struct.tdefl_compressor, i8* %1338, i32 0, i32 33
 store i64 %1337, i64* %1339
 %1340 = load i8*, i8** %40
 %1341 = call i32 @tdefl_flush_block (i8* %1340, i32 0)
 store i32 %1341, i32* %59
 %1342 = icmp ne i32 %1341, 0
 br i1 %1342, label %1343, label %1348
1343:
 %1344 = load i32, i32* %59
 %1345 = icmp slt i32 %1344, 0
 %1346 = zext i1 %1345 to i64
 %1347 = select i1 %1345, i32 0, i32 1
 store i32 %1347, i32* %39
 br label %1357
1348:
 br label %1349
1349:
 br label %69
1350:
 %1351 = load i8*, i8** %41
 %1352 = load i8*, i8** %40
 %1353 = getelementptr %struct.tdefl_compressor, i8* %1352, i32 0, i32 32
 store i8* %1351, i8** %1353
 %1354 = load i64, i64* %42
 %1355 = load i8*, i8** %40
 %1356 = getelementptr %struct.tdefl_compressor, i8* %1355, i32 0, i32 33
 store i64 %1354, i64* %1356
 store i32 1, i32* %39
 br label %1357
1357:
 %1358 = load i32, i32* %39
 ret i32 %1358
}

define i32 @tdefl_flush_block (i8* %0, i32 %1) {
 %3 = alloca i32
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i32
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i32
 %11 = alloca i32
 %12 = alloca i8*
 %13 = alloca i8
 %14 = alloca i8
 %15 = alloca i8
 %16 = alloca i32
 %17 = alloca i32
 %18 = alloca i32
 %19 = alloca i32
 %20 = alloca i32
 %21 = alloca i32
 %22 = alloca i32
 %23 = alloca i32
 %24 = alloca i32
 %25 = alloca i32
 %26 = alloca i32
 %27 = alloca i32
 %28 = alloca i32
 %29 = alloca i32
 %30 = alloca i32
 %31 = alloca i32
 %32 = alloca i32
 %33 = alloca i32
 %34 = alloca i32
 %35 = alloca i32
 %36 = alloca i32
 %37 = alloca i32
 %38 = alloca i32
 %39 = alloca i32
 %40 = alloca i32
 %41 = alloca i32
 %42 = alloca i32
 %43 = alloca i32
 %44 = alloca i32
 %45 = alloca i32
 %46 = alloca i32
 %47 = alloca i32
 %48 = alloca i32
 store i8* %0, i8** %4
 store i32 %1, i32* %5
 store i32 0, i32* %9
 %49 = load i8*, i8** %4
 %50 = getelementptr %struct.tdefl_compressor, i8* %49, i32 0, i32 2
 %51 = load i32, i32* %50
 %52 = and i32 %51, 524288
 %53 = icmp ne i32 %52, 0
 br i1 %53, label %54, label %66
54:
 %55 = load i8*, i8** %4
 %56 = getelementptr %struct.tdefl_compressor, i8* %55, i32 0, i32 6
 %57 = load i32, i32* %56
 %58 = load i8*, i8** %4
 %59 = getelementptr %struct.tdefl_compressor, i8* %58, i32 0, i32 15
 %60 = load i32, i32* %59
 %61 = sub i32 %57, %60
 %62 = load i8*, i8** %4
 %63 = getelementptr %struct.tdefl_compressor, i8* %62, i32 0, i32 8
 %64 = load i32, i32* %63
 %65 = icmp ule i32 %61, %64
 br label %66
66:
 %67 = phi i1 [0, %2], [%65, %54]
 %68 = zext i1 %67 to i32
 store i32 %68, i32* %11
 %69 = load i8*, i8** %4
 %70 = getelementptr %struct.tdefl_compressor, i8* %69, i32 0, i32 0
 %71 = load i8*, i8** %70
 %72 = icmp eq i8* %71, null
 br i1 %72, label %73, label %91
73:
 %74 = load i8*, i8** %4
 %75 = getelementptr %struct.tdefl_compressor, i8* %74, i32 0, i32 30
 %76 = load i8*, i8** %75
 %77 = load i64, i64* %76
 %78 = load i8*, i8** %4
 %79 = getelementptr %struct.tdefl_compressor, i8* %78, i32 0, i32 34
 %80 = load i64, i64* %79
 %81 = sub i64 %77, %80
 %82 = icmp uge i64 %81, 85196
 br i1 %82, label %83, label %91
83:
 %84 = load i8*, i8** %4
 %85 = getelementptr %struct.tdefl_compressor, i8* %84, i32 0, i32 28
 %86 = load i8*, i8** %85
 %87 = load i8*, i8** %4
 %88 = getelementptr %struct.tdefl_compressor, i8* %87, i32 0, i32 34
 %89 = load i64, i64* %88
 %90 = getelementptr i8, i8* %86, i64 %89
 br label %95
91:
 %92 = load i8*, i8** %4
 %93 = getelementptr %struct.tdefl_compressor, i8* %92, i32 0, i32 42
 %94 = getelementptr [85196 x i8], i8* %93, i64 0, i64 0
 br label %95
95:
 %96 = phi i8* [%90, %83], [%94, %91]
 store i8* %96, i8** %12
 %97 = load i8*, i8** %12
 %98 = load i8*, i8** %4
 %99 = getelementptr %struct.tdefl_compressor, i8* %98, i32 0, i32 11
 store i8* %97, i8** %99
 %100 = load i8*, i8** %4
 %101 = getelementptr %struct.tdefl_compressor, i8* %100, i32 0, i32 11
 %102 = load i8*, i8** %101
 %103 = getelementptr i8, i8* %102, i64 85196
 %104 = getelementptr i8, i8* %103, i64 -16
 %105 = load i8*, i8** %4
 %106 = getelementptr %struct.tdefl_compressor, i8* %105, i32 0, i32 12
 store i8* %104, i8** %106
 %107 = load i8*, i8** %4
 %108 = getelementptr %struct.tdefl_compressor, i8* %107, i32 0, i32 22
 %109 = load i32, i32* %108
 %110 = icmp ne i32 %109, 0
 %111 = xor i1 %110, 1
 %112 = xor i1 %111, 1
 %113 = zext i1 %112 to i32
 %114 = sext i32 %113 to i64
 %115 = icmp ne i64 %114, 0
 br i1 %115, label %116, label %118
116:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2692, i8* @.str.71)
 unreachable
117:
 br label %119
118:
 br label %119
119:
 %120 = load i8*, i8** %4
 %121 = getelementptr %struct.tdefl_compressor, i8* %120, i32 0, i32 21
 store i32 0, i32* %121
 %122 = load i8*, i8** %4
 %123 = getelementptr %struct.tdefl_compressor, i8* %122, i32 0, i32 22
 store i32 0, i32* %123
 %124 = load i8*, i8** %4
 %125 = getelementptr %struct.tdefl_compressor, i8* %124, i32 0, i32 10
 %126 = load i8*, i8** %125
 %127 = load i8, i8* %126
 %128 = zext i8 %127 to i32
 %129 = load i8*, i8** %4
 %130 = getelementptr %struct.tdefl_compressor, i8* %129, i32 0, i32 13
 %131 = load i32, i32* %130
 %132 = ashr i32 %128, %131
 %133 = trunc i32 %132 to i8
 %134 = load i8*, i8** %4
 %135 = getelementptr %struct.tdefl_compressor, i8* %134, i32 0, i32 10
 %136 = load i8*, i8** %135
 store i8 %133, i8* %136
 %137 = load i8*, i8** %4
 %138 = getelementptr %struct.tdefl_compressor, i8* %137, i32 0, i32 13
 %139 = load i32, i32* %138
 %140 = icmp eq i32 %139, 8
 %141 = zext i1 %140 to i32
 %142 = load i8*, i8** %4
 %143 = getelementptr %struct.tdefl_compressor, i8* %142, i32 0, i32 9
 %144 = load i8*, i8** %143
 %145 = sext i32 %141 to i64
 %146 = sub i64 0, %145
 %147 = getelementptr i8, i8* %144, i64 %146
 store i8* %147, i8** %143
 %148 = load i8*, i8** %4
 %149 = getelementptr %struct.tdefl_compressor, i8* %148, i32 0, i32 2
 %150 = load i32, i32* %149
 %151 = and i32 %150, 4096
 %152 = icmp ne i32 %151, 0
 br i1 %152, label %153, label %329
153:
 %154 = load i8*, i8** %4
 %155 = getelementptr %struct.tdefl_compressor, i8* %154, i32 0, i32 24
 %156 = load i32, i32* %155
 %157 = icmp ne i32 %156, 0
 br i1 %157, label %329, label %158
158:
 store i8 120, i8* %13
 store i8 3, i8* %15
 store i32 11, i32* %18
 store i32 0, i32* %17
 br label %159
159:
 %160 = load i32, i32* %17
 %161 = load i32, i32* %18
 %162 = icmp ult i32 %160, %161
 br i1 %162, label %163, label %178
163:
 %164 = load i32, i32* %17
 %165 = zext i32 %164 to i64
 %166 = getelementptr [11 x i32], i8* @s_tdefl_num_probes, i64 0, i64 %165
 %167 = load i32, i32* %166
 %168 = load i8*, i8** %4
 %169 = getelementptr %struct.tdefl_compressor, i8* %168, i32 0, i32 2
 %170 = load i32, i32* %169
 %171 = and i32 %170, 4095
 %172 = icmp eq i32 %167, %171
 br i1 %172, label %173, label %174
173:
 br label %178
174:
 br label %175
175:
 %176 = load i32, i32* %17
 %177 = add i32 %176, 1
 store i32 %177, i32* %17
 br label %159
178:
 %179 = load i32, i32* %17
 %180 = icmp ult i32 %179, 2
 br i1 %180, label %181, label %182
181:
 store i8 0, i8* %15
 br label %192
182:
 %183 = load i32, i32* %17
 %184 = icmp ult i32 %183, 6
 br i1 %184, label %185, label %186
185:
 store i8 1, i8* %15
 br label %191
186:
 %187 = load i32, i32* %17
 %188 = icmp eq i32 %187, 6
 br i1 %188, label %189, label %190
189:
 store i8 2, i8* %15
 br label %190
190:
 br label %191
191:
 br label %192
192:
 %193 = load i8, i8* %15
 %194 = zext i8 %193 to i32
 %195 = shl i32 %194, 6
 %196 = or i32 30720, %195
 store i32 %196, i32* %16
 %197 = load i32, i32* %16
 %198 = urem i32 %197, 31
 %199 = sub i32 31, %198
 %200 = load i32, i32* %16
 %201 = add i32 %200, %199
 store i32 %201, i32* %16
 %202 = load i32, i32* %16
 %203 = and i32 %202, 255
 %204 = trunc i32 %203 to i8
 store i8 %204, i8* %14
 br label %205
205:
 store i32 120, i32* %19
 store i32 8, i32* %20
 %206 = load i32, i32* %19
 %207 = load i32, i32* %20
 %208 = shl i32 1, %207
 %209 = sub i32 %208, 1
 %210 = icmp ule i32 %206, %209
 %211 = xor i1 %210, 1
 %212 = zext i1 %211 to i32
 %213 = sext i32 %212 to i64
 %214 = icmp ne i64 %213, 0
 br i1 %214, label %215, label %217
215:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2720, i8* @.str.72)
 unreachable
216:
 br label %218
217:
 br label %218
218:
 %219 = load i32, i32* %19
 %220 = load i8*, i8** %4
 %221 = getelementptr %struct.tdefl_compressor, i8* %220, i32 0, i32 16
 %222 = load i32, i32* %221
 %223 = shl i32 %219, %222
 %224 = load i8*, i8** %4
 %225 = getelementptr %struct.tdefl_compressor, i8* %224, i32 0, i32 17
 %226 = load i32, i32* %225
 %227 = or i32 %226, %223
 store i32 %227, i32* %225
 %228 = load i32, i32* %20
 %229 = load i8*, i8** %4
 %230 = getelementptr %struct.tdefl_compressor, i8* %229, i32 0, i32 16
 %231 = load i32, i32* %230
 %232 = add i32 %231, %228
 store i32 %232, i32* %230
 br label %233
233:
 %234 = load i8*, i8** %4
 %235 = getelementptr %struct.tdefl_compressor, i8* %234, i32 0, i32 16
 %236 = load i32, i32* %235
 %237 = icmp uge i32 %236, 8
 br i1 %237, label %238, label %264
238:
 %239 = load i8*, i8** %4
 %240 = getelementptr %struct.tdefl_compressor, i8* %239, i32 0, i32 11
 %241 = load i8*, i8** %240
 %242 = load i8*, i8** %4
 %243 = getelementptr %struct.tdefl_compressor, i8* %242, i32 0, i32 12
 %244 = load i8*, i8** %243
 %245 = icmp ult i8* %241, %244
 br i1 %245, label %246, label %255
246:
 %247 = load i8*, i8** %4
 %248 = getelementptr %struct.tdefl_compressor, i8* %247, i32 0, i32 17
 %249 = load i32, i32* %248
 %250 = trunc i32 %249 to i8
 %251 = load i8*, i8** %4
 %252 = getelementptr %struct.tdefl_compressor, i8* %251, i32 0, i32 11
 %253 = load i8*, i8** %252
 %254 = getelementptr i8, i8* %253, i32 1
 store i8* %254, i8** %252
 store i8 %250, i8* %253
 br label %255
255:
 %256 = load i8*, i8** %4
 %257 = getelementptr %struct.tdefl_compressor, i8* %256, i32 0, i32 17
 %258 = load i32, i32* %257
 %259 = lshr i32 %258, 8
 store i32 %259, i32* %257
 %260 = load i8*, i8** %4
 %261 = getelementptr %struct.tdefl_compressor, i8* %260, i32 0, i32 16
 %262 = load i32, i32* %261
 %263 = sub i32 %262, 8
 store i32 %263, i32* %261
 br label %233
264:
 br label %265
265:
 br label %266
266:
 %267 = load i8, i8* %14
 %268 = zext i8 %267 to i32
 store i32 %268, i32* %21
 store i32 8, i32* %22
 %269 = load i32, i32* %21
 %270 = load i32, i32* %22
 %271 = shl i32 1, %270
 %272 = sub i32 %271, 1
 %273 = icmp ule i32 %269, %272
 %274 = xor i1 %273, 1
 %275 = zext i1 %274 to i32
 %276 = sext i32 %275 to i64
 %277 = icmp ne i64 %276, 0
 br i1 %277, label %278, label %280
278:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2721, i8* @.str.72)
 unreachable
279:
 br label %281
280:
 br label %281
281:
 %282 = load i32, i32* %21
 %283 = load i8*, i8** %4
 %284 = getelementptr %struct.tdefl_compressor, i8* %283, i32 0, i32 16
 %285 = load i32, i32* %284
 %286 = shl i32 %282, %285
 %287 = load i8*, i8** %4
 %288 = getelementptr %struct.tdefl_compressor, i8* %287, i32 0, i32 17
 %289 = load i32, i32* %288
 %290 = or i32 %289, %286
 store i32 %290, i32* %288
 %291 = load i32, i32* %22
 %292 = load i8*, i8** %4
 %293 = getelementptr %struct.tdefl_compressor, i8* %292, i32 0, i32 16
 %294 = load i32, i32* %293
 %295 = add i32 %294, %291
 store i32 %295, i32* %293
 br label %296
296:
 %297 = load i8*, i8** %4
 %298 = getelementptr %struct.tdefl_compressor, i8* %297, i32 0, i32 16
 %299 = load i32, i32* %298
 %300 = icmp uge i32 %299, 8
 br i1 %300, label %301, label %327
301:
 %302 = load i8*, i8** %4
 %303 = getelementptr %struct.tdefl_compressor, i8* %302, i32 0, i32 11
 %304 = load i8*, i8** %303
 %305 = load i8*, i8** %4
 %306 = getelementptr %struct.tdefl_compressor, i8* %305, i32 0, i32 12
 %307 = load i8*, i8** %306
 %308 = icmp ult i8* %304, %307
 br i1 %308, label %309, label %318
309:
 %310 = load i8*, i8** %4
 %311 = getelementptr %struct.tdefl_compressor, i8* %310, i32 0, i32 17
 %312 = load i32, i32* %311
 %313 = trunc i32 %312 to i8
 %314 = load i8*, i8** %4
 %315 = getelementptr %struct.tdefl_compressor, i8* %314, i32 0, i32 11
 %316 = load i8*, i8** %315
 %317 = getelementptr i8, i8* %316, i32 1
 store i8* %317, i8** %315
 store i8 %313, i8* %316
 br label %318
318:
 %319 = load i8*, i8** %4
 %320 = getelementptr %struct.tdefl_compressor, i8* %319, i32 0, i32 17
 %321 = load i32, i32* %320
 %322 = lshr i32 %321, 8
 store i32 %322, i32* %320
 %323 = load i8*, i8** %4
 %324 = getelementptr %struct.tdefl_compressor, i8* %323, i32 0, i32 16
 %325 = load i32, i32* %324
 %326 = sub i32 %325, 8
 store i32 %326, i32* %324
 br label %296
327:
 br label %328
328:
 br label %329
329:
 br label %330
330:
 %331 = load i32, i32* %5
 %332 = icmp eq i32 %331, 4
 %333 = zext i1 %332 to i32
 store i32 %333, i32* %23
 store i32 1, i32* %24
 %334 = load i32, i32* %23
 %335 = load i32, i32* %24
 %336 = shl i32 1, %335
 %337 = sub i32 %336, 1
 %338 = icmp ule i32 %334, %337
 %339 = xor i1 %338, 1
 %340 = zext i1 %339 to i32
 %341 = sext i32 %340 to i64
 %342 = icmp ne i64 %341, 0
 br i1 %342, label %343, label %345
343:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2724, i8* @.str.72)
 unreachable
344:
 br label %346
345:
 br label %346
346:
 %347 = load i32, i32* %23
 %348 = load i8*, i8** %4
 %349 = getelementptr %struct.tdefl_compressor, i8* %348, i32 0, i32 16
 %350 = load i32, i32* %349
 %351 = shl i32 %347, %350
 %352 = load i8*, i8** %4
 %353 = getelementptr %struct.tdefl_compressor, i8* %352, i32 0, i32 17
 %354 = load i32, i32* %353
 %355 = or i32 %354, %351
 store i32 %355, i32* %353
 %356 = load i32, i32* %24
 %357 = load i8*, i8** %4
 %358 = getelementptr %struct.tdefl_compressor, i8* %357, i32 0, i32 16
 %359 = load i32, i32* %358
 %360 = add i32 %359, %356
 store i32 %360, i32* %358
 br label %361
361:
 %362 = load i8*, i8** %4
 %363 = getelementptr %struct.tdefl_compressor, i8* %362, i32 0, i32 16
 %364 = load i32, i32* %363
 %365 = icmp uge i32 %364, 8
 br i1 %365, label %366, label %392
366:
 %367 = load i8*, i8** %4
 %368 = getelementptr %struct.tdefl_compressor, i8* %367, i32 0, i32 11
 %369 = load i8*, i8** %368
 %370 = load i8*, i8** %4
 %371 = getelementptr %struct.tdefl_compressor, i8* %370, i32 0, i32 12
 %372 = load i8*, i8** %371
 %373 = icmp ult i8* %369, %372
 br i1 %373, label %374, label %383
374:
 %375 = load i8*, i8** %4
 %376 = getelementptr %struct.tdefl_compressor, i8* %375, i32 0, i32 17
 %377 = load i32, i32* %376
 %378 = trunc i32 %377 to i8
 %379 = load i8*, i8** %4
 %380 = getelementptr %struct.tdefl_compressor, i8* %379, i32 0, i32 11
 %381 = load i8*, i8** %380
 %382 = getelementptr i8, i8* %381, i32 1
 store i8* %382, i8** %380
 store i8 %378, i8* %381
 br label %383
383:
 %384 = load i8*, i8** %4
 %385 = getelementptr %struct.tdefl_compressor, i8* %384, i32 0, i32 17
 %386 = load i32, i32* %385
 %387 = lshr i32 %386, 8
 store i32 %387, i32* %385
 %388 = load i8*, i8** %4
 %389 = getelementptr %struct.tdefl_compressor, i8* %388, i32 0, i32 16
 %390 = load i32, i32* %389
 %391 = sub i32 %390, 8
 store i32 %391, i32* %389
 br label %361
392:
 br label %393
393:
 %394 = load i8*, i8** %4
 %395 = getelementptr %struct.tdefl_compressor, i8* %394, i32 0, i32 11
 %396 = load i8*, i8** %395
 store i8* %396, i8** %8
 %397 = load i8*, i8** %4
 %398 = getelementptr %struct.tdefl_compressor, i8* %397, i32 0, i32 17
 %399 = load i32, i32* %398
 store i32 %399, i32* %6
 %400 = load i8*, i8** %4
 %401 = getelementptr %struct.tdefl_compressor, i8* %400, i32 0, i32 16
 %402 = load i32, i32* %401
 store i32 %402, i32* %7
 %403 = load i32, i32* %11
 %404 = icmp ne i32 %403, 0
 br i1 %404, label %421, label %405
405:
 %406 = load i8*, i8** %4
 %407 = load i8*, i8** %4
 %408 = getelementptr %struct.tdefl_compressor, i8* %407, i32 0, i32 2
 %409 = load i32, i32* %408
 %410 = and i32 %409, 262144
 %411 = icmp ne i32 %410, 0
 br i1 %411, label %417, label %412
412:
 %413 = load i8*, i8** %4
 %414 = getelementptr %struct.tdefl_compressor, i8* %413, i32 0, i32 14
 %415 = load i32, i32* %414
 %416 = icmp ult i32 %415, 48
 br label %417
417:
 %418 = phi i1 [1, %405], [%416, %412]
 %419 = zext i1 %418 to i32
 %420 = call i32 @tdefl_compress_block (i8* %406, i32 %419)
 store i32 %420, i32* %9
 br label %421
421:
 %422 = load i32, i32* %11
 %423 = icmp ne i32 %422, 0
 br i1 %423, label %443, label %424
424:
 %425 = load i8*, i8** %4
 %426 = getelementptr %struct.tdefl_compressor, i8* %425, i32 0, i32 14
 %427 = load i32, i32* %426
 %428 = icmp ne i32 %427, 0
 br i1 %428, label %429, label %758
429:
 %430 = load i8*, i8** %4
 %431 = getelementptr %struct.tdefl_compressor, i8* %430, i32 0, i32 11
 %432 = load i8*, i8** %431
 %433 = load i8*, i8** %8
 %434 = ptrtoint i8** %432 to i64
 %435 = ptrtoint i8** %433 to i64
 %436 = sub i64 %434, %435
 %437 = add i64 %436, 1
 %438 = load i8*, i8** %4
 %439 = getelementptr %struct.tdefl_compressor, i8* %438, i32 0, i32 14
 %440 = load i32, i32* %439
 %441 = zext i32 %440 to i64
 %442 = icmp sge i64 %437, %441
 br i1 %442, label %443, label %758
443:
 %444 = load i8*, i8** %4
 %445 = getelementptr %struct.tdefl_compressor, i8* %444, i32 0, i32 6
 %446 = load i32, i32* %445
 %447 = load i8*, i8** %4
 %448 = getelementptr %struct.tdefl_compressor, i8* %447, i32 0, i32 15
 %449 = load i32, i32* %448
 %450 = sub i32 %446, %449
 %451 = load i8*, i8** %4
 %452 = getelementptr %struct.tdefl_compressor, i8* %451, i32 0, i32 8
 %453 = load i32, i32* %452
 %454 = icmp ule i32 %450, %453
 br i1 %454, label %455, label %758
455:
 %456 = load i8*, i8** %8
 %457 = load i8*, i8** %4
 %458 = getelementptr %struct.tdefl_compressor, i8* %457, i32 0, i32 11
 store i8* %456, i8** %458
 %459 = load i32, i32* %6
 %460 = load i8*, i8** %4
 %461 = getelementptr %struct.tdefl_compressor, i8* %460, i32 0, i32 17
 store i32 %459, i32* %461
 %462 = load i32, i32* %7
 %463 = load i8*, i8** %4
 %464 = getelementptr %struct.tdefl_compressor, i8* %463, i32 0, i32 16
 store i32 %462, i32* %464
 br label %465
465:
 store i32 0, i32* %26
 store i32 2, i32* %27
 %466 = load i32, i32* %26
 %467 = load i32, i32* %27
 %468 = shl i32 1, %467
 %469 = sub i32 %468, 1
 %470 = icmp ule i32 %466, %469
 %471 = xor i1 %470, 1
 %472 = zext i1 %471 to i32
 %473 = sext i32 %472 to i64
 %474 = icmp ne i64 %473, 0
 br i1 %474, label %475, label %477
475:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2740, i8* @.str.72)
 unreachable
476:
 br label %478
477:
 br label %478
478:
 %479 = load i32, i32* %26
 %480 = load i8*, i8** %4
 %481 = getelementptr %struct.tdefl_compressor, i8* %480, i32 0, i32 16
 %482 = load i32, i32* %481
 %483 = shl i32 %479, %482
 %484 = load i8*, i8** %4
 %485 = getelementptr %struct.tdefl_compressor, i8* %484, i32 0, i32 17
 %486 = load i32, i32* %485
 %487 = or i32 %486, %483
 store i32 %487, i32* %485
 %488 = load i32, i32* %27
 %489 = load i8*, i8** %4
 %490 = getelementptr %struct.tdefl_compressor, i8* %489, i32 0, i32 16
 %491 = load i32, i32* %490
 %492 = add i32 %491, %488
 store i32 %492, i32* %490
 br label %493
493:
 %494 = load i8*, i8** %4
 %495 = getelementptr %struct.tdefl_compressor, i8* %494, i32 0, i32 16
 %496 = load i32, i32* %495
 %497 = icmp uge i32 %496, 8
 br i1 %497, label %498, label %524
498:
 %499 = load i8*, i8** %4
 %500 = getelementptr %struct.tdefl_compressor, i8* %499, i32 0, i32 11
 %501 = load i8*, i8** %500
 %502 = load i8*, i8** %4
 %503 = getelementptr %struct.tdefl_compressor, i8* %502, i32 0, i32 12
 %504 = load i8*, i8** %503
 %505 = icmp ult i8* %501, %504
 br i1 %505, label %506, label %515
506:
 %507 = load i8*, i8** %4
 %508 = getelementptr %struct.tdefl_compressor, i8* %507, i32 0, i32 17
 %509 = load i32, i32* %508
 %510 = trunc i32 %509 to i8
 %511 = load i8*, i8** %4
 %512 = getelementptr %struct.tdefl_compressor, i8* %511, i32 0, i32 11
 %513 = load i8*, i8** %512
 %514 = getelementptr i8, i8* %513, i32 1
 store i8* %514, i8** %512
 store i8 %510, i8* %513
 br label %515
515:
 %516 = load i8*, i8** %4
 %517 = getelementptr %struct.tdefl_compressor, i8* %516, i32 0, i32 17
 %518 = load i32, i32* %517
 %519 = lshr i32 %518, 8
 store i32 %519, i32* %517
 %520 = load i8*, i8** %4
 %521 = getelementptr %struct.tdefl_compressor, i8* %520, i32 0, i32 16
 %522 = load i32, i32* %521
 %523 = sub i32 %522, 8
 store i32 %523, i32* %521
 br label %493
524:
 br label %525
525:
 %526 = load i8*, i8** %4
 %527 = getelementptr %struct.tdefl_compressor, i8* %526, i32 0, i32 16
 %528 = load i32, i32* %527
 %529 = icmp ne i32 %528, 0
 br i1 %529, label %530, label %596
530:
 br label %531
531:
 store i32 0, i32* %28
 %532 = load i8*, i8** %4
 %533 = getelementptr %struct.tdefl_compressor, i8* %532, i32 0, i32 16
 %534 = load i32, i32* %533
 %535 = sub i32 8, %534
 store i32 %535, i32* %29
 %536 = load i32, i32* %28
 %537 = load i32, i32* %29
 %538 = shl i32 1, %537
 %539 = sub i32 %538, 1
 %540 = icmp ule i32 %536, %539
 %541 = xor i1 %540, 1
 %542 = zext i1 %541 to i32
 %543 = sext i32 %542 to i64
 %544 = icmp ne i64 %543, 0
 br i1 %544, label %545, label %547
545:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2743, i8* @.str.72)
 unreachable
546:
 br label %548
547:
 br label %548
548:
 %549 = load i32, i32* %28
 %550 = load i8*, i8** %4
 %551 = getelementptr %struct.tdefl_compressor, i8* %550, i32 0, i32 16
 %552 = load i32, i32* %551
 %553 = shl i32 %549, %552
 %554 = load i8*, i8** %4
 %555 = getelementptr %struct.tdefl_compressor, i8* %554, i32 0, i32 17
 %556 = load i32, i32* %555
 %557 = or i32 %556, %553
 store i32 %557, i32* %555
 %558 = load i32, i32* %29
 %559 = load i8*, i8** %4
 %560 = getelementptr %struct.tdefl_compressor, i8* %559, i32 0, i32 16
 %561 = load i32, i32* %560
 %562 = add i32 %561, %558
 store i32 %562, i32* %560
 br label %563
563:
 %564 = load i8*, i8** %4
 %565 = getelementptr %struct.tdefl_compressor, i8* %564, i32 0, i32 16
 %566 = load i32, i32* %565
 %567 = icmp uge i32 %566, 8
 br i1 %567, label %568, label %594
568:
 %569 = load i8*, i8** %4
 %570 = getelementptr %struct.tdefl_compressor, i8* %569, i32 0, i32 11
 %571 = load i8*, i8** %570
 %572 = load i8*, i8** %4
 %573 = getelementptr %struct.tdefl_compressor, i8* %572, i32 0, i32 12
 %574 = load i8*, i8** %573
 %575 = icmp ult i8* %571, %574
 br i1 %575, label %576, label %585
576:
 %577 = load i8*, i8** %4
 %578 = getelementptr %struct.tdefl_compressor, i8* %577, i32 0, i32 17
 %579 = load i32, i32* %578
 %580 = trunc i32 %579 to i8
 %581 = load i8*, i8** %4
 %582 = getelementptr %struct.tdefl_compressor, i8* %581, i32 0, i32 11
 %583 = load i8*, i8** %582
 %584 = getelementptr i8, i8* %583, i32 1
 store i8* %584, i8** %582
 store i8 %580, i8* %583
 br label %585
585:
 %586 = load i8*, i8** %4
 %587 = getelementptr %struct.tdefl_compressor, i8* %586, i32 0, i32 17
 %588 = load i32, i32* %587
 %589 = lshr i32 %588, 8
 store i32 %589, i32* %587
 %590 = load i8*, i8** %4
 %591 = getelementptr %struct.tdefl_compressor, i8* %590, i32 0, i32 16
 %592 = load i32, i32* %591
 %593 = sub i32 %592, 8
 store i32 %593, i32* %591
 br label %563
594:
 br label %595
595:
 br label %596
596:
 store i32 2, i32* %25
 br label %597
597:
 %598 = load i32, i32* %25
 %599 = icmp ne i32 %598, 0
 br i1 %599, label %600, label %673
600:
 br label %601
601:
 %602 = load i8*, i8** %4
 %603 = getelementptr %struct.tdefl_compressor, i8* %602, i32 0, i32 14
 %604 = load i32, i32* %603
 %605 = and i32 %604, 65535
 store i32 %605, i32* %30
 store i32 16, i32* %31
 %606 = load i32, i32* %30
 %607 = load i32, i32* %31
 %608 = shl i32 1, %607
 %609 = sub i32 %608, 1
 %610 = icmp ule i32 %606, %609
 %611 = xor i1 %610, 1
 %612 = zext i1 %611 to i32
 %613 = sext i32 %612 to i64
 %614 = icmp ne i64 %613, 0
 br i1 %614, label %615, label %617
615:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2747, i8* @.str.72)
 unreachable
616:
 br label %618
617:
 br label %618
618:
 %619 = load i32, i32* %30
 %620 = load i8*, i8** %4
 %621 = getelementptr %struct.tdefl_compressor, i8* %620, i32 0, i32 16
 %622 = load i32, i32* %621
 %623 = shl i32 %619, %622
 %624 = load i8*, i8** %4
 %625 = getelementptr %struct.tdefl_compressor, i8* %624, i32 0, i32 17
 %626 = load i32, i32* %625
 %627 = or i32 %626, %623
 store i32 %627, i32* %625
 %628 = load i32, i32* %31
 %629 = load i8*, i8** %4
 %630 = getelementptr %struct.tdefl_compressor, i8* %629, i32 0, i32 16
 %631 = load i32, i32* %630
 %632 = add i32 %631, %628
 store i32 %632, i32* %630
 br label %633
633:
 %634 = load i8*, i8** %4
 %635 = getelementptr %struct.tdefl_compressor, i8* %634, i32 0, i32 16
 %636 = load i32, i32* %635
 %637 = icmp uge i32 %636, 8
 br i1 %637, label %638, label %664
638:
 %639 = load i8*, i8** %4
 %640 = getelementptr %struct.tdefl_compressor, i8* %639, i32 0, i32 11
 %641 = load i8*, i8** %640
 %642 = load i8*, i8** %4
 %643 = getelementptr %struct.tdefl_compressor, i8* %642, i32 0, i32 12
 %644 = load i8*, i8** %643
 %645 = icmp ult i8* %641, %644
 br i1 %645, label %646, label %655
646:
 %647 = load i8*, i8** %4
 %648 = getelementptr %struct.tdefl_compressor, i8* %647, i32 0, i32 17
 %649 = load i32, i32* %648
 %650 = trunc i32 %649 to i8
 %651 = load i8*, i8** %4
 %652 = getelementptr %struct.tdefl_compressor, i8* %651, i32 0, i32 11
 %653 = load i8*, i8** %652
 %654 = getelementptr i8, i8* %653, i32 1
 store i8* %654, i8** %652
 store i8 %650, i8* %653
 br label %655
655:
 %656 = load i8*, i8** %4
 %657 = getelementptr %struct.tdefl_compressor, i8* %656, i32 0, i32 17
 %658 = load i32, i32* %657
 %659 = lshr i32 %658, 8
 store i32 %659, i32* %657
 %660 = load i8*, i8** %4
 %661 = getelementptr %struct.tdefl_compressor, i8* %660, i32 0, i32 16
 %662 = load i32, i32* %661
 %663 = sub i32 %662, 8
 store i32 %663, i32* %661
 br label %633
664:
 br label %665
665:
 br label %666
666:
 %667 = load i32, i32* %25
 %668 = add i32 %667, -1
 store i32 %668, i32* %25
 %669 = load i8*, i8** %4
 %670 = getelementptr %struct.tdefl_compressor, i8* %669, i32 0, i32 14
 %671 = load i32, i32* %670
 %672 = xor i32 %671, 65535
 store i32 %672, i32* %670
 br label %597
673:
 store i32 0, i32* %25
 br label %674
674:
 %675 = load i32, i32* %25
 %676 = load i8*, i8** %4
 %677 = getelementptr %struct.tdefl_compressor, i8* %676, i32 0, i32 14
 %678 = load i32, i32* %677
 %679 = icmp ult i32 %675, %678
 br i1 %679, label %680, label %757
680:
 br label %681
681:
 %682 = load i8*, i8** %4
 %683 = getelementptr %struct.tdefl_compressor, i8* %682, i32 0, i32 35
 %684 = load i8*, i8** %4
 %685 = getelementptr %struct.tdefl_compressor, i8* %684, i32 0, i32 15
 %686 = load i32, i32* %685
 %687 = load i32, i32* %25
 %688 = add i32 %686, %687
 %689 = and i32 %688, 32767
 %690 = zext i32 %689 to i64
 %691 = getelementptr [33025 x i8], i8* %683, i64 0, i64 %690
 %692 = load i8, i8* %691
 %693 = zext i8 %692 to i32
 store i32 %693, i32* %32
 store i32 8, i32* %33
 %694 = load i32, i32* %32
 %695 = load i32, i32* %33
 %696 = shl i32 1, %695
 %697 = sub i32 %696, 1
 %698 = icmp ule i32 %694, %697
 %699 = xor i1 %698, 1
 %700 = zext i1 %699 to i32
 %701 = sext i32 %700 to i64
 %702 = icmp ne i64 %701, 0
 br i1 %702, label %703, label %705
703:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2751, i8* @.str.72)
 unreachable
704:
 br label %706
705:
 br label %706
706:
 %707 = load i32, i32* %32
 %708 = load i8*, i8** %4
 %709 = getelementptr %struct.tdefl_compressor, i8* %708, i32 0, i32 16
 %710 = load i32, i32* %709
 %711 = shl i32 %707, %710
 %712 = load i8*, i8** %4
 %713 = getelementptr %struct.tdefl_compressor, i8* %712, i32 0, i32 17
 %714 = load i32, i32* %713
 %715 = or i32 %714, %711
 store i32 %715, i32* %713
 %716 = load i32, i32* %33
 %717 = load i8*, i8** %4
 %718 = getelementptr %struct.tdefl_compressor, i8* %717, i32 0, i32 16
 %719 = load i32, i32* %718
 %720 = add i32 %719, %716
 store i32 %720, i32* %718
 br label %721
721:
 %722 = load i8*, i8** %4
 %723 = getelementptr %struct.tdefl_compressor, i8* %722, i32 0, i32 16
 %724 = load i32, i32* %723
 %725 = icmp uge i32 %724, 8
 br i1 %725, label %726, label %752
726:
 %727 = load i8*, i8** %4
 %728 = getelementptr %struct.tdefl_compressor, i8* %727, i32 0, i32 11
 %729 = load i8*, i8** %728
 %730 = load i8*, i8** %4
 %731 = getelementptr %struct.tdefl_compressor, i8* %730, i32 0, i32 12
 %732 = load i8*, i8** %731
 %733 = icmp ult i8* %729, %732
 br i1 %733, label %734, label %743
734:
 %735 = load i8*, i8** %4
 %736 = getelementptr %struct.tdefl_compressor, i8* %735, i32 0, i32 17
 %737 = load i32, i32* %736
 %738 = trunc i32 %737 to i8
 %739 = load i8*, i8** %4
 %740 = getelementptr %struct.tdefl_compressor, i8* %739, i32 0, i32 11
 %741 = load i8*, i8** %740
 %742 = getelementptr i8, i8* %741, i32 1
 store i8* %742, i8** %740
 store i8 %738, i8* %741
 br label %743
743:
 %744 = load i8*, i8** %4
 %745 = getelementptr %struct.tdefl_compressor, i8* %744, i32 0, i32 17
 %746 = load i32, i32* %745
 %747 = lshr i32 %746, 8
 store i32 %747, i32* %745
 %748 = load i8*, i8** %4
 %749 = getelementptr %struct.tdefl_compressor, i8* %748, i32 0, i32 16
 %750 = load i32, i32* %749
 %751 = sub i32 %750, 8
 store i32 %751, i32* %749
 br label %721
752:
 br label %753
753:
 br label %754
754:
 %755 = load i32, i32* %25
 %756 = add i32 %755, 1
 store i32 %756, i32* %25
 br label %674
757:
 br label %774
758:
 %759 = load i32, i32* %9
 %760 = icmp ne i32 %759, 0
 br i1 %760, label %773, label %761
761:
 %762 = load i8*, i8** %8
 %763 = load i8*, i8** %4
 %764 = getelementptr %struct.tdefl_compressor, i8* %763, i32 0, i32 11
 store i8* %762, i8** %764
 %765 = load i32, i32* %6
 %766 = load i8*, i8** %4
 %767 = getelementptr %struct.tdefl_compressor, i8* %766, i32 0, i32 17
 store i32 %765, i32* %767
 %768 = load i32, i32* %7
 %769 = load i8*, i8** %4
 %770 = getelementptr %struct.tdefl_compressor, i8* %769, i32 0, i32 16
 store i32 %768, i32* %770
 %771 = load i8*, i8** %4
 %772 = call i32 @tdefl_compress_block (i8* %771, i32 1)
 br label %773
773:
 br label %774
774:
 %775 = load i32, i32* %5
 %776 = icmp ne i32 %775, 0
 br i1 %776, label %777, label %1143
777:
 %778 = load i32, i32* %5
 %779 = icmp eq i32 %778, 4
 br i1 %779, label %780, label %936
780:
 %781 = load i8*, i8** %4
 %782 = getelementptr %struct.tdefl_compressor, i8* %781, i32 0, i32 16
 %783 = load i32, i32* %782
 %784 = icmp ne i32 %783, 0
 br i1 %784, label %785, label %851
785:
 br label %786
786:
 store i32 0, i32* %34
 %787 = load i8*, i8** %4
 %788 = getelementptr %struct.tdefl_compressor, i8* %787, i32 0, i32 16
 %789 = load i32, i32* %788
 %790 = sub i32 8, %789
 store i32 %790, i32* %35
 %791 = load i32, i32* %34
 %792 = load i32, i32* %35
 %793 = shl i32 1, %792
 %794 = sub i32 %793, 1
 %795 = icmp ule i32 %791, %794
 %796 = xor i1 %795, 1
 %797 = zext i1 %796 to i32
 %798 = sext i32 %797 to i64
 %799 = icmp ne i64 %798, 0
 br i1 %799, label %800, label %802
800:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2768, i8* @.str.72)
 unreachable
801:
 br label %803
802:
 br label %803
803:
 %804 = load i32, i32* %34
 %805 = load i8*, i8** %4
 %806 = getelementptr %struct.tdefl_compressor, i8* %805, i32 0, i32 16
 %807 = load i32, i32* %806
 %808 = shl i32 %804, %807
 %809 = load i8*, i8** %4
 %810 = getelementptr %struct.tdefl_compressor, i8* %809, i32 0, i32 17
 %811 = load i32, i32* %810
 %812 = or i32 %811, %808
 store i32 %812, i32* %810
 %813 = load i32, i32* %35
 %814 = load i8*, i8** %4
 %815 = getelementptr %struct.tdefl_compressor, i8* %814, i32 0, i32 16
 %816 = load i32, i32* %815
 %817 = add i32 %816, %813
 store i32 %817, i32* %815
 br label %818
818:
 %819 = load i8*, i8** %4
 %820 = getelementptr %struct.tdefl_compressor, i8* %819, i32 0, i32 16
 %821 = load i32, i32* %820
 %822 = icmp uge i32 %821, 8
 br i1 %822, label %823, label %849
823:
 %824 = load i8*, i8** %4
 %825 = getelementptr %struct.tdefl_compressor, i8* %824, i32 0, i32 11
 %826 = load i8*, i8** %825
 %827 = load i8*, i8** %4
 %828 = getelementptr %struct.tdefl_compressor, i8* %827, i32 0, i32 12
 %829 = load i8*, i8** %828
 %830 = icmp ult i8* %826, %829
 br i1 %830, label %831, label %840
831:
 %832 = load i8*, i8** %4
 %833 = getelementptr %struct.tdefl_compressor, i8* %832, i32 0, i32 17
 %834 = load i32, i32* %833
 %835 = trunc i32 %834 to i8
 %836 = load i8*, i8** %4
 %837 = getelementptr %struct.tdefl_compressor, i8* %836, i32 0, i32 11
 %838 = load i8*, i8** %837
 %839 = getelementptr i8, i8* %838, i32 1
 store i8* %839, i8** %837
 store i8 %835, i8* %838
 br label %840
840:
 %841 = load i8*, i8** %4
 %842 = getelementptr %struct.tdefl_compressor, i8* %841, i32 0, i32 17
 %843 = load i32, i32* %842
 %844 = lshr i32 %843, 8
 store i32 %844, i32* %842
 %845 = load i8*, i8** %4
 %846 = getelementptr %struct.tdefl_compressor, i8* %845, i32 0, i32 16
 %847 = load i32, i32* %846
 %848 = sub i32 %847, 8
 store i32 %848, i32* %846
 br label %818
849:
 br label %850
850:
 br label %851
851:
 %852 = load i8*, i8** %4
 %853 = getelementptr %struct.tdefl_compressor, i8* %852, i32 0, i32 2
 %854 = load i32, i32* %853
 %855 = and i32 %854, 4096
 %856 = icmp ne i32 %855, 0
 br i1 %856, label %857, label %935
857:
 %858 = load i8*, i8** %4
 %859 = getelementptr %struct.tdefl_compressor, i8* %858, i32 0, i32 5
 %860 = load i32, i32* %859
 store i32 %860, i32* %37
 store i32 0, i32* %36
 br label %861
861:
 %862 = load i32, i32* %36
 %863 = icmp ult i32 %862, 4
 br i1 %863, label %864, label %934
864:
 br label %865
865:
 %866 = load i32, i32* %37
 %867 = lshr i32 %866, 24
 %868 = and i32 %867, 255
 store i32 %868, i32* %38
 store i32 8, i32* %39
 %869 = load i32, i32* %38
 %870 = load i32, i32* %39
 %871 = shl i32 1, %870
 %872 = sub i32 %871, 1
 %873 = icmp ule i32 %869, %872
 %874 = xor i1 %873, 1
 %875 = zext i1 %874 to i32
 %876 = sext i32 %875 to i64
 %877 = icmp ne i64 %876, 0
 br i1 %877, label %878, label %880
878:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2775, i8* @.str.72)
 unreachable
879:
 br label %881
880:
 br label %881
881:
 %882 = load i32, i32* %38
 %883 = load i8*, i8** %4
 %884 = getelementptr %struct.tdefl_compressor, i8* %883, i32 0, i32 16
 %885 = load i32, i32* %884
 %886 = shl i32 %882, %885
 %887 = load i8*, i8** %4
 %888 = getelementptr %struct.tdefl_compressor, i8* %887, i32 0, i32 17
 %889 = load i32, i32* %888
 %890 = or i32 %889, %886
 store i32 %890, i32* %888
 %891 = load i32, i32* %39
 %892 = load i8*, i8** %4
 %893 = getelementptr %struct.tdefl_compressor, i8* %892, i32 0, i32 16
 %894 = load i32, i32* %893
 %895 = add i32 %894, %891
 store i32 %895, i32* %893
 br label %896
896:
 %897 = load i8*, i8** %4
 %898 = getelementptr %struct.tdefl_compressor, i8* %897, i32 0, i32 16
 %899 = load i32, i32* %898
 %900 = icmp uge i32 %899, 8
 br i1 %900, label %901, label %927
901:
 %902 = load i8*, i8** %4
 %903 = getelementptr %struct.tdefl_compressor, i8* %902, i32 0, i32 11
 %904 = load i8*, i8** %903
 %905 = load i8*, i8** %4
 %906 = getelementptr %struct.tdefl_compressor, i8* %905, i32 0, i32 12
 %907 = load i8*, i8** %906
 %908 = icmp ult i8* %904, %907
 br i1 %908, label %909, label %918
909:
 %910 = load i8*, i8** %4
 %911 = getelementptr %struct.tdefl_compressor, i8* %910, i32 0, i32 17
 %912 = load i32, i32* %911
 %913 = trunc i32 %912 to i8
 %914 = load i8*, i8** %4
 %915 = getelementptr %struct.tdefl_compressor, i8* %914, i32 0, i32 11
 %916 = load i8*, i8** %915
 %917 = getelementptr i8, i8* %916, i32 1
 store i8* %917, i8** %915
 store i8 %913, i8* %916
 br label %918
918:
 %919 = load i8*, i8** %4
 %920 = getelementptr %struct.tdefl_compressor, i8* %919, i32 0, i32 17
 %921 = load i32, i32* %920
 %922 = lshr i32 %921, 8
 store i32 %922, i32* %920
 %923 = load i8*, i8** %4
 %924 = getelementptr %struct.tdefl_compressor, i8* %923, i32 0, i32 16
 %925 = load i32, i32* %924
 %926 = sub i32 %925, 8
 store i32 %926, i32* %924
 br label %896
927:
 br label %928
928:
 %929 = load i32, i32* %37
 %930 = shl i32 %929, 8
 store i32 %930, i32* %37
 br label %931
931:
 %932 = load i32, i32* %36
 %933 = add i32 %932, 1
 store i32 %933, i32* %36
 br label %861
934:
 br label %935
935:
 br label %1142
936:
 store i32 0, i32* %41
 br label %937
937:
 store i32 0, i32* %42
 store i32 3, i32* %43
 %938 = load i32, i32* %42
 %939 = load i32, i32* %43
 %940 = shl i32 1, %939
 %941 = sub i32 %940, 1
 %942 = icmp ule i32 %938, %941
 %943 = xor i1 %942, 1
 %944 = zext i1 %943 to i32
 %945 = sext i32 %944 to i64
 %946 = icmp ne i64 %945, 0
 br i1 %946, label %947, label %949
947:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2783, i8* @.str.72)
 unreachable
948:
 br label %950
949:
 br label %950
950:
 %951 = load i32, i32* %42
 %952 = load i8*, i8** %4
 %953 = getelementptr %struct.tdefl_compressor, i8* %952, i32 0, i32 16
 %954 = load i32, i32* %953
 %955 = shl i32 %951, %954
 %956 = load i8*, i8** %4
 %957 = getelementptr %struct.tdefl_compressor, i8* %956, i32 0, i32 17
 %958 = load i32, i32* %957
 %959 = or i32 %958, %955
 store i32 %959, i32* %957
 %960 = load i32, i32* %43
 %961 = load i8*, i8** %4
 %962 = getelementptr %struct.tdefl_compressor, i8* %961, i32 0, i32 16
 %963 = load i32, i32* %962
 %964 = add i32 %963, %960
 store i32 %964, i32* %962
 br label %965
965:
 %966 = load i8*, i8** %4
 %967 = getelementptr %struct.tdefl_compressor, i8* %966, i32 0, i32 16
 %968 = load i32, i32* %967
 %969 = icmp uge i32 %968, 8
 br i1 %969, label %970, label %996
970:
 %971 = load i8*, i8** %4
 %972 = getelementptr %struct.tdefl_compressor, i8* %971, i32 0, i32 11
 %973 = load i8*, i8** %972
 %974 = load i8*, i8** %4
 %975 = getelementptr %struct.tdefl_compressor, i8* %974, i32 0, i32 12
 %976 = load i8*, i8** %975
 %977 = icmp ult i8* %973, %976
 br i1 %977, label %978, label %987
978:
 %979 = load i8*, i8** %4
 %980 = getelementptr %struct.tdefl_compressor, i8* %979, i32 0, i32 17
 %981 = load i32, i32* %980
 %982 = trunc i32 %981 to i8
 %983 = load i8*, i8** %4
 %984 = getelementptr %struct.tdefl_compressor, i8* %983, i32 0, i32 11
 %985 = load i8*, i8** %984
 %986 = getelementptr i8, i8* %985, i32 1
 store i8* %986, i8** %984
 store i8 %982, i8* %985
 br label %987
987:
 %988 = load i8*, i8** %4
 %989 = getelementptr %struct.tdefl_compressor, i8* %988, i32 0, i32 17
 %990 = load i32, i32* %989
 %991 = lshr i32 %990, 8
 store i32 %991, i32* %989
 %992 = load i8*, i8** %4
 %993 = getelementptr %struct.tdefl_compressor, i8* %992, i32 0, i32 16
 %994 = load i32, i32* %993
 %995 = sub i32 %994, 8
 store i32 %995, i32* %993
 br label %965
996:
 br label %997
997:
 %998 = load i8*, i8** %4
 %999 = getelementptr %struct.tdefl_compressor, i8* %998, i32 0, i32 16
 %1000 = load i32, i32* %999
 %1001 = icmp ne i32 %1000, 0
 br i1 %1001, label %1002, label %1068
1002:
 br label %1003
1003:
 store i32 0, i32* %44
 %1004 = load i8*, i8** %4
 %1005 = getelementptr %struct.tdefl_compressor, i8* %1004, i32 0, i32 16
 %1006 = load i32, i32* %1005
 %1007 = sub i32 8, %1006
 store i32 %1007, i32* %45
 %1008 = load i32, i32* %44
 %1009 = load i32, i32* %45
 %1010 = shl i32 1, %1009
 %1011 = sub i32 %1010, 1
 %1012 = icmp ule i32 %1008, %1011
 %1013 = xor i1 %1012, 1
 %1014 = zext i1 %1013 to i32
 %1015 = sext i32 %1014 to i64
 %1016 = icmp ne i64 %1015, 0
 br i1 %1016, label %1017, label %1019
1017:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2786, i8* @.str.72)
 unreachable
1018:
 br label %1020
1019:
 br label %1020
1020:
 %1021 = load i32, i32* %44
 %1022 = load i8*, i8** %4
 %1023 = getelementptr %struct.tdefl_compressor, i8* %1022, i32 0, i32 16
 %1024 = load i32, i32* %1023
 %1025 = shl i32 %1021, %1024
 %1026 = load i8*, i8** %4
 %1027 = getelementptr %struct.tdefl_compressor, i8* %1026, i32 0, i32 17
 %1028 = load i32, i32* %1027
 %1029 = or i32 %1028, %1025
 store i32 %1029, i32* %1027
 %1030 = load i32, i32* %45
 %1031 = load i8*, i8** %4
 %1032 = getelementptr %struct.tdefl_compressor, i8* %1031, i32 0, i32 16
 %1033 = load i32, i32* %1032
 %1034 = add i32 %1033, %1030
 store i32 %1034, i32* %1032
 br label %1035
1035:
 %1036 = load i8*, i8** %4
 %1037 = getelementptr %struct.tdefl_compressor, i8* %1036, i32 0, i32 16
 %1038 = load i32, i32* %1037
 %1039 = icmp uge i32 %1038, 8
 br i1 %1039, label %1040, label %1066
1040:
 %1041 = load i8*, i8** %4
 %1042 = getelementptr %struct.tdefl_compressor, i8* %1041, i32 0, i32 11
 %1043 = load i8*, i8** %1042
 %1044 = load i8*, i8** %4
 %1045 = getelementptr %struct.tdefl_compressor, i8* %1044, i32 0, i32 12
 %1046 = load i8*, i8** %1045
 %1047 = icmp ult i8* %1043, %1046
 br i1 %1047, label %1048, label %1057
1048:
 %1049 = load i8*, i8** %4
 %1050 = getelementptr %struct.tdefl_compressor, i8* %1049, i32 0, i32 17
 %1051 = load i32, i32* %1050
 %1052 = trunc i32 %1051 to i8
 %1053 = load i8*, i8** %4
 %1054 = getelementptr %struct.tdefl_compressor, i8* %1053, i32 0, i32 11
 %1055 = load i8*, i8** %1054
 %1056 = getelementptr i8, i8* %1055, i32 1
 store i8* %1056, i8** %1054
 store i8 %1052, i8* %1055
 br label %1057
1057:
 %1058 = load i8*, i8** %4
 %1059 = getelementptr %struct.tdefl_compressor, i8* %1058, i32 0, i32 17
 %1060 = load i32, i32* %1059
 %1061 = lshr i32 %1060, 8
 store i32 %1061, i32* %1059
 %1062 = load i8*, i8** %4
 %1063 = getelementptr %struct.tdefl_compressor, i8* %1062, i32 0, i32 16
 %1064 = load i32, i32* %1063
 %1065 = sub i32 %1064, 8
 store i32 %1065, i32* %1063
 br label %1035
1066:
 br label %1067
1067:
 br label %1068
1068:
 store i32 2, i32* %40
 br label %1069
1069:
 %1070 = load i32, i32* %40
 %1071 = icmp ne i32 %1070, 0
 br i1 %1071, label %1072, label %1141
1072:
 br label %1073
1073:
 %1074 = load i32, i32* %41
 %1075 = and i32 %1074, 65535
 store i32 %1075, i32* %46
 store i32 16, i32* %47
 %1076 = load i32, i32* %46
 %1077 = load i32, i32* %47
 %1078 = shl i32 1, %1077
 %1079 = sub i32 %1078, 1
 %1080 = icmp ule i32 %1076, %1079
 %1081 = xor i1 %1080, 1
 %1082 = zext i1 %1081 to i32
 %1083 = sext i32 %1082 to i64
 %1084 = icmp ne i64 %1083, 0
 br i1 %1084, label %1085, label %1087
1085:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2790, i8* @.str.72)
 unreachable
1086:
 br label %1088
1087:
 br label %1088
1088:
 %1089 = load i32, i32* %46
 %1090 = load i8*, i8** %4
 %1091 = getelementptr %struct.tdefl_compressor, i8* %1090, i32 0, i32 16
 %1092 = load i32, i32* %1091
 %1093 = shl i32 %1089, %1092
 %1094 = load i8*, i8** %4
 %1095 = getelementptr %struct.tdefl_compressor, i8* %1094, i32 0, i32 17
 %1096 = load i32, i32* %1095
 %1097 = or i32 %1096, %1093
 store i32 %1097, i32* %1095
 %1098 = load i32, i32* %47
 %1099 = load i8*, i8** %4
 %1100 = getelementptr %struct.tdefl_compressor, i8* %1099, i32 0, i32 16
 %1101 = load i32, i32* %1100
 %1102 = add i32 %1101, %1098
 store i32 %1102, i32* %1100
 br label %1103
1103:
 %1104 = load i8*, i8** %4
 %1105 = getelementptr %struct.tdefl_compressor, i8* %1104, i32 0, i32 16
 %1106 = load i32, i32* %1105
 %1107 = icmp uge i32 %1106, 8
 br i1 %1107, label %1108, label %1134
1108:
 %1109 = load i8*, i8** %4
 %1110 = getelementptr %struct.tdefl_compressor, i8* %1109, i32 0, i32 11
 %1111 = load i8*, i8** %1110
 %1112 = load i8*, i8** %4
 %1113 = getelementptr %struct.tdefl_compressor, i8* %1112, i32 0, i32 12
 %1114 = load i8*, i8** %1113
 %1115 = icmp ult i8* %1111, %1114
 br i1 %1115, label %1116, label %1125
1116:
 %1117 = load i8*, i8** %4
 %1118 = getelementptr %struct.tdefl_compressor, i8* %1117, i32 0, i32 17
 %1119 = load i32, i32* %1118
 %1120 = trunc i32 %1119 to i8
 %1121 = load i8*, i8** %4
 %1122 = getelementptr %struct.tdefl_compressor, i8* %1121, i32 0, i32 11
 %1123 = load i8*, i8** %1122
 %1124 = getelementptr i8, i8* %1123, i32 1
 store i8* %1124, i8** %1122
 store i8 %1120, i8* %1123
 br label %1125
1125:
 %1126 = load i8*, i8** %4
 %1127 = getelementptr %struct.tdefl_compressor, i8* %1126, i32 0, i32 17
 %1128 = load i32, i32* %1127
 %1129 = lshr i32 %1128, 8
 store i32 %1129, i32* %1127
 %1130 = load i8*, i8** %4
 %1131 = getelementptr %struct.tdefl_compressor, i8* %1130, i32 0, i32 16
 %1132 = load i32, i32* %1131
 %1133 = sub i32 %1132, 8
 store i32 %1133, i32* %1131
 br label %1103
1134:
 br label %1135
1135:
 br label %1136
1136:
 %1137 = load i32, i32* %40
 %1138 = add i32 %1137, -1
 store i32 %1138, i32* %40
 %1139 = load i32, i32* %41
 %1140 = xor i32 %1139, 65535
 store i32 %1140, i32* %41
 br label %1069
1141:
 br label %1142
1142:
 br label %1143
1143:
 %1144 = load i8*, i8** %4
 %1145 = getelementptr %struct.tdefl_compressor, i8* %1144, i32 0, i32 11
 %1146 = load i8*, i8** %1145
 %1147 = load i8*, i8** %4
 %1148 = getelementptr %struct.tdefl_compressor, i8* %1147, i32 0, i32 12
 %1149 = load i8*, i8** %1148
 %1150 = icmp ult i8* %1146, %1149
 %1151 = xor i1 %1150, 1
 %1152 = zext i1 %1151 to i32
 %1153 = sext i32 %1152 to i64
 %1154 = icmp ne i64 %1153, 0
 br i1 %1154, label %1155, label %1157
1155:
 call void @__assert_rtn (i8* @__func__.tdefl_flush_block, i8* @.str.11, i32 2795, i8* @.str.73)
 unreachable
1156:
 br label %1158
1157:
 br label %1158
1158:
 %1159 = load i8*, i8** %4
 %1160 = getelementptr %struct.tdefl_compressor, i8* %1159, i32 0, i32 36
 %1161 = getelementptr [3 x [288 x i16]], i8* %1160, i64 0, i64 0
 %1162 = getelementptr [288 x i16], i8* %1161, i64 0, i64 0
 %1163 = load i8*, i8** %4
 %1164 = getelementptr %struct.tdefl_compressor, i8* %1163, i32 0, i32 36
 %1165 = getelementptr [3 x [288 x i16]], i8* %1164, i64 0, i64 0
 %1166 = getelementptr [288 x i16], i8* %1165, i64 0, i64 0
 %1167 = call i64 @llvm.objectsize.i64.p0 (i8* %1166, i1 0, i1 1, i1 0)
 %1168 = call i8* @__memset_chk (i8* %1162, i32 0, i64 576, i64 %1167)
 %1169 = load i8*, i8** %4
 %1170 = getelementptr %struct.tdefl_compressor, i8* %1169, i32 0, i32 36
 %1171 = getelementptr [3 x [288 x i16]], i8* %1170, i64 0, i64 1
 %1172 = getelementptr [288 x i16], i8* %1171, i64 0, i64 0
 %1173 = load i8*, i8** %4
 %1174 = getelementptr %struct.tdefl_compressor, i8* %1173, i32 0, i32 36
 %1175 = getelementptr [3 x [288 x i16]], i8* %1174, i64 0, i64 1
 %1176 = getelementptr [288 x i16], i8* %1175, i64 0, i64 0
 %1177 = call i64 @llvm.objectsize.i64.p0 (i8* %1176, i1 0, i1 1, i1 0)
 %1178 = call i8* @__memset_chk (i8* %1172, i32 0, i64 64, i64 %1177)
 %1179 = load i8*, i8** %4
 %1180 = getelementptr %struct.tdefl_compressor, i8* %1179, i32 0, i32 39
 %1181 = getelementptr [65536 x i8], i8* %1180, i64 0, i64 0
 %1182 = getelementptr i8, i8* %1181, i64 1
 %1183 = load i8*, i8** %4
 %1184 = getelementptr %struct.tdefl_compressor, i8* %1183, i32 0, i32 9
 store i8* %1182, i8** %1184
 %1185 = load i8*, i8** %4
 %1186 = getelementptr %struct.tdefl_compressor, i8* %1185, i32 0, i32 39
 %1187 = getelementptr [65536 x i8], i8* %1186, i64 0, i64 0
 %1188 = load i8*, i8** %4
 %1189 = getelementptr %struct.tdefl_compressor, i8* %1188, i32 0, i32 10
 store i8* %1187, i8** %1189
 %1190 = load i8*, i8** %4
 %1191 = getelementptr %struct.tdefl_compressor, i8* %1190, i32 0, i32 13
 store i32 8, i32* %1191
 %1192 = load i8*, i8** %4
 %1193 = getelementptr %struct.tdefl_compressor, i8* %1192, i32 0, i32 14
 %1194 = load i32, i32* %1193
 %1195 = load i8*, i8** %4
 %1196 = getelementptr %struct.tdefl_compressor, i8* %1195, i32 0, i32 15
 %1197 = load i32, i32* %1196
 %1198 = add i32 %1197, %1194
 store i32 %1198, i32* %1196
 %1199 = load i8*, i8** %4
 %1200 = getelementptr %struct.tdefl_compressor, i8* %1199, i32 0, i32 14
 store i32 0, i32* %1200
 %1201 = load i8*, i8** %4
 %1202 = getelementptr %struct.tdefl_compressor, i8* %1201, i32 0, i32 24
 %1203 = load i32, i32* %1202
 %1204 = add i32 %1203, 1
 store i32 %1204, i32* %1202
 %1205 = load i8*, i8** %4
 %1206 = getelementptr %struct.tdefl_compressor, i8* %1205, i32 0, i32 11
 %1207 = load i8*, i8** %1206
 %1208 = load i8*, i8** %12
 %1209 = ptrtoint i8** %1207 to i64
 %1210 = ptrtoint i8** %1208 to i64
 %1211 = sub i64 %1209, %1210
 %1212 = trunc i64 %1211 to i32
 store i32 %1212, i32* %10
 %1213 = icmp ne i32 %1212, 0
 br i1 %1213, label %1214, label %1329
1214:
 %1215 = load i8*, i8** %4
 %1216 = getelementptr %struct.tdefl_compressor, i8* %1215, i32 0, i32 0
 %1217 = load i8*, i8** %1216
 %1218 = icmp ne i8* %1217, null
 br i1 %1218, label %1219, label %1248
1219:
 %1220 = load i8*, i8** %4
 %1221 = getelementptr %struct.tdefl_compressor, i8* %1220, i32 0, i32 32
 %1222 = load i8*, i8** %1221
 %1223 = load i8*, i8** %4
 %1224 = getelementptr %struct.tdefl_compressor, i8* %1223, i32 0, i32 27
 %1225 = load i8*, i8** %1224
 %1226 = ptrtoint i8** %1222 to i64
 %1227 = ptrtoint i8** %1225 to i64
 %1228 = sub i64 %1226, %1227
 %1229 = load i8*, i8** %4
 %1230 = getelementptr %struct.tdefl_compressor, i8* %1229, i32 0, i32 29
 %1231 = load i8*, i8** %1230
 store i64 %1228, i64* %1231
 %1232 = load i8*, i8** %4
 %1233 = getelementptr %struct.tdefl_compressor, i8* %1232, i32 0, i32 0
 %1234 = load i8*, i8** %1233
 %1235 = load i8*, i8** %4
 %1236 = getelementptr %struct.tdefl_compressor, i8* %1235, i32 0, i32 42
 %1237 = getelementptr [85196 x i8], i8* %1236, i64 0, i64 0
 %1238 = load i32, i32* %10
 %1239 = load i8*, i8** %4
 %1240 = getelementptr %struct.tdefl_compressor, i8* %1239, i32 0, i32 1
 %1241 = load i8*, i8** %1240
 %1242 = call i32 %1234 (i8* %1237, i32 %1238, i8* %1241)
 %1243 = icmp ne i32 %1242, 0
 br i1 %1243, label %1247, label %1244
1244:
 %1245 = load i8*, i8** %4
 %1246 = getelementptr %struct.tdefl_compressor, i8* %1245, i32 0, i32 26
 store i32 -1, i32* %1246
 store i32 -1, i32* %3
 br label %1333
1247:
 br label %1328
1248:
 %1249 = load i8*, i8** %12
 %1250 = load i8*, i8** %4
 %1251 = getelementptr %struct.tdefl_compressor, i8* %1250, i32 0, i32 42
 %1252 = getelementptr [85196 x i8], i8* %1251, i64 0, i64 0
 %1253 = icmp eq i8* %1249, %1252
 br i1 %1253, label %1254, label %1320
1254:
 %1255 = load i32, i32* %10
 %1256 = sext i32 %1255 to i64
 %1257 = load i8*, i8** %4
 %1258 = getelementptr %struct.tdefl_compressor, i8* %1257, i32 0, i32 30
 %1259 = load i8*, i8** %1258
 %1260 = load i64, i64* %1259
 %1261 = load i8*, i8** %4
 %1262 = getelementptr %struct.tdefl_compressor, i8* %1261, i32 0, i32 34
 %1263 = load i64, i64* %1262
 %1264 = sub i64 %1260, %1263
 %1265 = icmp ult i64 %1256, %1264
 br i1 %1265, label %1266, label %1269
1266:
 %1267 = load i32, i32* %10
 %1268 = sext i32 %1267 to i64
 br label %1278
1269:
 %1270 = load i8*, i8** %4
 %1271 = getelementptr %struct.tdefl_compressor, i8* %1270, i32 0, i32 30
 %1272 = load i8*, i8** %1271
 %1273 = load i64, i64* %1272
 %1274 = load i8*, i8** %4
 %1275 = getelementptr %struct.tdefl_compressor, i8* %1274, i32 0, i32 34
 %1276 = load i64, i64* %1275
 %1277 = sub i64 %1273, %1276
 br label %1278
1278:
 %1279 = phi i64 [%1268, %1266], [%1277, %1269]
 %1280 = trunc i64 %1279 to i32
 store i32 %1280, i32* %48
 %1281 = load i8*, i8** %4
 %1282 = getelementptr %struct.tdefl_compressor, i8* %1281, i32 0, i32 28
 %1283 = load i8*, i8** %1282
 %1284 = load i8*, i8** %4
 %1285 = getelementptr %struct.tdefl_compressor, i8* %1284, i32 0, i32 34
 %1286 = load i64, i64* %1285
 %1287 = getelementptr i8, i8* %1283, i64 %1286
 %1288 = load i8*, i8** %4
 %1289 = getelementptr %struct.tdefl_compressor, i8* %1288, i32 0, i32 42
 %1290 = getelementptr [85196 x i8], i8* %1289, i64 0, i64 0
 %1291 = load i32, i32* %48
 %1292 = sext i32 %1291 to i64
 %1293 = load i8*, i8** %4
 %1294 = getelementptr %struct.tdefl_compressor, i8* %1293, i32 0, i32 28
 %1295 = load i8*, i8** %1294
 %1296 = load i8*, i8** %4
 %1297 = getelementptr %struct.tdefl_compressor, i8* %1296, i32 0, i32 34
 %1298 = load i64, i64* %1297
 %1299 = getelementptr i8, i8* %1295, i64 %1298
 %1300 = call i64 @llvm.objectsize.i64.p0 (i8* %1299, i1 0, i1 1, i1 0)
 %1301 = call i8* @__memcpy_chk (i8* %1287, i8* %1290, i64 %1292, i64 %1300)
 %1302 = load i32, i32* %48
 %1303 = sext i32 %1302 to i64
 %1304 = load i8*, i8** %4
 %1305 = getelementptr %struct.tdefl_compressor, i8* %1304, i32 0, i32 34
 %1306 = load i64, i64* %1305
 %1307 = add i64 %1306, %1303
 store i64 %1307, i64* %1305
 %1308 = load i32, i32* %48
 %1309 = load i32, i32* %10
 %1310 = sub i32 %1309, %1308
 store i32 %1310, i32* %10
 %1311 = icmp ne i32 %1310, 0
 br i1 %1311, label %1312, label %1319
1312:
 %1313 = load i32, i32* %48
 %1314 = load i8*, i8** %4
 %1315 = getelementptr %struct.tdefl_compressor, i8* %1314, i32 0, i32 21
 store i32 %1313, i32* %1315
 %1316 = load i32, i32* %10
 %1317 = load i8*, i8** %4
 %1318 = getelementptr %struct.tdefl_compressor, i8* %1317, i32 0, i32 22
 store i32 %1316, i32* %1318
 br label %1319
1319:
 br label %1327
1320:
 %1321 = load i32, i32* %10
 %1322 = sext i32 %1321 to i64
 %1323 = load i8*, i8** %4
 %1324 = getelementptr %struct.tdefl_compressor, i8* %1323, i32 0, i32 34
 %1325 = load i64, i64* %1324
 %1326 = add i64 %1325, %1322
 store i64 %1326, i64* %1324
 br label %1327
1327:
 br label %1328
1328:
 br label %1329
1329:
 %1330 = load i8*, i8** %4
 %1331 = getelementptr %struct.tdefl_compressor, i8* %1330, i32 0, i32 22
 %1332 = load i32, i32* %1331
 store i32 %1332, i32* %3
 br label %1333
1333:
 %1334 = load i32, i32* %3
 ret i32 %1334
}

define i32 @tdefl_compress_buffer (i8* %0, i8* %1, i64 %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i64
 %8 = alloca i32
 store i8* %0, i8** %5
 store i8* %1, i8** %6
 store i64 %2, i64* %7
 store i32 %3, i32* %8
 %9 = load i8*, i8** %5
 %10 = getelementptr %struct.tdefl_compressor, i8* %9, i32 0, i32 0
 %11 = load i8*, i8** %10
 %12 = icmp ne i8* %11, null
 %13 = xor i1 %12, 1
 %14 = zext i1 %13 to i32
 %15 = sext i32 %14 to i64
 %16 = icmp ne i64 %15, 0
 br i1 %16, label %17, label %19
17:
 call void @__assert_rtn (i8* @__func__.tdefl_compress_buffer, i8* @.str.11, i32 3413, i8* @.str.12)
 unreachable
18:
 br label %20
19:
 br label %20
20:
 %21 = load i8*, i8** %5
 %22 = load i8*, i8** %6
 %23 = load i32, i32* %8
 %24 = call i32 @tdefl_compress (i8* %21, i8* %22, i8* %7, i8* null, i8* null, i32 %23)
 ret i32 %24
}

define i32 @tdefl_get_prev_return_status (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 %4 = getelementptr %struct.tdefl_compressor, i8* %3, i32 0, i32 26
 %5 = load i32, i32* %4
 ret i32 %5
}

define i32 @tdefl_compress_mem_to_output (i8* %0, i64 %1, i8* %2, i8* %3, i32 %4) {
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i64
 %9 = alloca i8*
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca i8*
 %13 = alloca i32
 store i8* %0, i8** %7
 store i64 %1, i64* %8
 store i8* %2, i8** %9
 store i8* %3, i8** %10
 store i32 %4, i32* %11
 %14 = load i64, i64* %8
 %15 = icmp ne i64 %14, 0
 br i1 %15, label %16, label %19
16:
 %17 = load i8*, i8** %7
 %18 = icmp ne i8* %17, null
 br i1 %18, label %19, label %22
19:
 %20 = load i8*, i8** %9
 %21 = icmp ne i8* %20, null
 br i1 %21, label %23, label %22
22:
 store i32 0, i32* %6
 br label %49
23:
 %24 = call i8* @malloc (i64 319352)
 store i8* %24, i8** %12
 %25 = load i8*, i8** %12
 %26 = icmp ne i8* %25, null
 br i1 %26, label %28, label %27
27:
 store i32 0, i32* %6
 br label %49
28:
 %29 = load i8*, i8** %12
 %30 = load i8*, i8** %9
 %31 = load i8*, i8** %10
 %32 = load i32, i32* %11
 %33 = call i32 @tdefl_init (i8* %29, i8* %30, i8* %31, i32 %32)
 %34 = icmp eq i32 %33, 0
 %35 = zext i1 %34 to i32
 store i32 %35, i32* %13
 %36 = load i32, i32* %13
 %37 = icmp ne i32 %36, 0
 br i1 %37, label %38, label %44
38:
 %39 = load i8*, i8** %12
 %40 = load i8*, i8** %7
 %41 = load i64, i64* %8
 %42 = call i32 @tdefl_compress_buffer (i8* %39, i8* %40, i64 %41, i32 4)
 %43 = icmp eq i32 %42, 1
 br label %44
44:
 %45 = phi i1 [0, %28], [%43, %38]
 %46 = zext i1 %45 to i32
 store i32 %46, i32* %13
 %47 = load i8*, i8** %12
 call void @free (i8* %47)
 %48 = load i32, i32* %13
 store i32 %48, i32* %6
 br label %49
49:
 %50 = load i32, i32* %6
 ret i32 %50
}

define i8* @tdefl_compress_mem_to_heap (i8* %0, i64 %1, i8* %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i64
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca %struct.tdefl_output_buffer
 store i8* %0, i8** %6
 store i64 %1, i64* %7
 store i8* %2, i8** %8
 store i32 %3, i32* %9
 call void @memset (i8* %10, i8 0, i64 32, i1 0)
 %11 = load i8*, i8** %8
 %12 = icmp ne i8* %11, null
 br i1 %12, label %14, label %13
13:
 store i8* null, i8** %5
 br label %30
14:
 %15 = load i8*, i8** %8
 store i64 0, i64* %15
 br label %16
16:
 %17 = getelementptr %struct.tdefl_output_buffer, i8* %10, i32 0, i32 3
 store i32 1, i32* %17
 %18 = load i8*, i8** %6
 %19 = load i64, i64* %7
 %20 = load i32, i32* %9
 %21 = call i32 @tdefl_compress_mem_to_output (i8* %18, i64 %19, i8* @tdefl_output_buffer_putter, i8* %10, i32 %20)
 %22 = icmp ne i32 %21, 0
 br i1 %22, label %24, label %23
23:
 store i8* null, i8** %5
 br label %30
24:
 %25 = getelementptr %struct.tdefl_output_buffer, i8* %10, i32 0, i32 0
 %26 = load i64, i64* %25
 %27 = load i8*, i8** %8
 store i64 %26, i64* %27
 %28 = getelementptr %struct.tdefl_output_buffer, i8* %10, i32 0, i32 2
 %29 = load i8*, i8** %28
 store i8* %29, i8** %5
 br label %30
30:
 %31 = load i8*, i8** %5
 ret i8* %31
}

define i32 @tdefl_output_buffer_putter (i8* %0, i32 %1, i8* %2) {
 %4 = alloca i32
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i64
 %10 = alloca i64
 %11 = alloca i8*
 store i8* %0, i8** %5
 store i32 %1, i32* %6
 store i8* %2, i8** %7
 %12 = load i8*, i8** %7
 store i8* %12, i8** %8
 %13 = load i8*, i8** %8
 %14 = getelementptr %struct.tdefl_output_buffer, i8* %13, i32 0, i32 0
 %15 = load i64, i64* %14
 %16 = load i32, i32* %6
 %17 = sext i32 %16 to i64
 %18 = add i64 %15, %17
 store i64 %18, i64* %9
 %19 = load i64, i64* %9
 %20 = load i8*, i8** %8
 %21 = getelementptr %struct.tdefl_output_buffer, i8* %20, i32 0, i32 1
 %22 = load i64, i64* %21
 %23 = icmp ugt i64 %19, %22
 br i1 %23, label %24, label %64
24:
 %25 = load i8*, i8** %8
 %26 = getelementptr %struct.tdefl_output_buffer, i8* %25, i32 0, i32 1
 %27 = load i64, i64* %26
 store i64 %27, i64* %10
 %28 = load i8*, i8** %8
 %29 = getelementptr %struct.tdefl_output_buffer, i8* %28, i32 0, i32 3
 %30 = load i32, i32* %29
 %31 = icmp ne i32 %30, 0
 br i1 %31, label %33, label %32
32:
 store i32 0, i32* %4
 br label %87
33:
 br label %34
34:
 %35 = load i64, i64* %10
 %36 = shl i64 %35, 1
 %37 = icmp ugt i64 128, %36
 br i1 %37, label %38, label %39
38:
 br label %42
39:
 %40 = load i64, i64* %10
 %41 = shl i64 %40, 1
 br label %42
42:
 %43 = phi i64 [128, %38], [%41, %39]
 store i64 %43, i64* %10
 br label %44
44:
 %45 = load i64, i64* %9
 %46 = load i64, i64* %10
 %47 = icmp ugt i64 %45, %46
 br i1 %47, label %34, label %48
48:
 %49 = load i8*, i8** %8
 %50 = getelementptr %struct.tdefl_output_buffer, i8* %49, i32 0, i32 2
 %51 = load i8*, i8** %50
 %52 = load i64, i64* %10
 %53 = call i8* @realloc (i8* %51, i64 %52)
 store i8* %53, i8** %11
 %54 = load i8*, i8** %11
 %55 = icmp ne i8* %54, null
 br i1 %55, label %57, label %56
56:
 store i32 0, i32* %4
 br label %87
57:
 %58 = load i8*, i8** %11
 %59 = load i8*, i8** %8
 %60 = getelementptr %struct.tdefl_output_buffer, i8* %59, i32 0, i32 2
 store i8* %58, i8** %60
 %61 = load i64, i64* %10
 %62 = load i8*, i8** %8
 %63 = getelementptr %struct.tdefl_output_buffer, i8* %62, i32 0, i32 1
 store i64 %61, i64* %63
 br label %64
64:
 %65 = load i8*, i8** %8
 %66 = getelementptr %struct.tdefl_output_buffer, i8* %65, i32 0, i32 2
 %67 = load i8*, i8** %66
 %68 = load i8*, i8** %8
 %69 = getelementptr %struct.tdefl_output_buffer, i8* %68, i32 0, i32 0
 %70 = load i64, i64* %69
 %71 = getelementptr i8, i8* %67, i64 %70
 %72 = load i8*, i8** %5
 %73 = load i32, i32* %6
 %74 = sext i32 %73 to i64
 %75 = load i8*, i8** %8
 %76 = getelementptr %struct.tdefl_output_buffer, i8* %75, i32 0, i32 2
 %77 = load i8*, i8** %76
 %78 = load i8*, i8** %8
 %79 = getelementptr %struct.tdefl_output_buffer, i8* %78, i32 0, i32 0
 %80 = load i64, i64* %79
 %81 = getelementptr i8, i8* %77, i64 %80
 %82 = call i64 @llvm.objectsize.i64.p0 (i8* %81, i1 0, i1 1, i1 0)
 %83 = call i8* @__memcpy_chk (i8* %71, i8* %72, i64 %74, i64 %82)
 %84 = load i64, i64* %9
 %85 = load i8*, i8** %8
 %86 = getelementptr %struct.tdefl_output_buffer, i8* %85, i32 0, i32 0
 store i64 %84, i64* %86
 store i32 1, i32* %4
 br label %87
87:
 %88 = load i32, i32* %4
 ret i32 %88
}

define i64 @tdefl_compress_mem_to_mem (i8* %0, i64 %1, i8* %2, i64 %3, i32 %4) {
 %6 = alloca i64
 %7 = alloca i8*
 %8 = alloca i64
 %9 = alloca i8*
 %10 = alloca i64
 %11 = alloca i32
 %12 = alloca %struct.tdefl_output_buffer
 store i8* %0, i8** %7
 store i64 %1, i64* %8
 store i8* %2, i8** %9
 store i64 %3, i64* %10
 store i32 %4, i32* %11
 call void @memset (i8* %12, i8 0, i64 32, i1 0)
 %13 = load i8*, i8** %7
 %14 = icmp ne i8* %13, null
 br i1 %14, label %16, label %15
15:
 store i64 0, i64* %6
 br label %30
16:
 %17 = load i8*, i8** %7
 %18 = getelementptr %struct.tdefl_output_buffer, i8* %12, i32 0, i32 2
 store i8* %17, i8** %18
 %19 = load i64, i64* %8
 %20 = getelementptr %struct.tdefl_output_buffer, i8* %12, i32 0, i32 1
 store i64 %19, i64* %20
 %21 = load i8*, i8** %9
 %22 = load i64, i64* %10
 %23 = load i32, i32* %11
 %24 = call i32 @tdefl_compress_mem_to_output (i8* %21, i64 %22, i8* @tdefl_output_buffer_putter, i8* %12, i32 %23)
 %25 = icmp ne i32 %24, 0
 br i1 %25, label %27, label %26
26:
 store i64 0, i64* %6
 br label %30
27:
 %28 = getelementptr %struct.tdefl_output_buffer, i8* %12, i32 0, i32 0
 %29 = load i64, i64* %28
 store i64 %29, i64* %6
 br label %30
30:
 %31 = load i64, i64* %6
 ret i64 %31
}

define i8* @tdefl_write_image_to_png_file_in_memory_ex (i8* %0, i32 %1, i32 %2, i32 %3, i8* %4, i32 %5, i32 %6) {
 %8 = alloca i8*
 %9 = alloca i8*
 %10 = alloca i32
 %11 = alloca i32
 %12 = alloca i32
 %13 = alloca i8*
 %14 = alloca i32
 %15 = alloca i32
 %16 = alloca i8*
 %17 = alloca %struct.tdefl_output_buffer
 %18 = alloca i32
 %19 = alloca i32
 %20 = alloca i32
 %21 = alloca i32
 %22 = alloca i32
 %23 = alloca [41 x i8]
 store i8* %0, i8** %9
 store i32 %1, i32* %10
 store i32 %2, i32* %11
 store i32 %3, i32* %12
 store i8* %4, i8** %13
 store i32 %5, i32* %14
 store i32 %6, i32* %15
 %24 = call i8* @malloc (i64 319352)
 store i8* %24, i8** %16
 %25 = load i32, i32* %10
 %26 = load i32, i32* %12
 %27 = mul i32 %25, %26
 store i32 %27, i32* %19
 %28 = load i8*, i8** %13
 store i64 0, i64* %28
 %29 = load i8*, i8** %16
 %30 = icmp ne i8* %29, null
 br i1 %30, label %32, label %31
31:
 store i8* null, i8** %8
 br label %235
32:
 call void @memset (i8* %17, i8 0, i64 32, i1 0)
 %33 = getelementptr %struct.tdefl_output_buffer, i8* %17, i32 0, i32 3
 store i32 1, i32* %33
 %34 = load i32, i32* %19
 %35 = add i32 1, %34
 %36 = load i32, i32* %11
 %37 = mul i32 %35, %36
 %38 = icmp sgt i32 64, %37
 br i1 %38, label %39, label %40
39:
 br label %45
40:
 %41 = load i32, i32* %19
 %42 = add i32 1, %41
 %43 = load i32, i32* %11
 %44 = mul i32 %42, %43
 br label %45
45:
 %46 = phi i32 [64, %39], [%44, %40]
 %47 = add i32 57, %46
 %48 = sext i32 %47 to i64
 %49 = getelementptr %struct.tdefl_output_buffer, i8* %17, i32 0, i32 1
 store i64 %48, i64* %49
 %50 = getelementptr %struct.tdefl_output_buffer, i8* %17, i32 0, i32 1
 %51 = load i64, i64* %50
 %52 = call i8* @malloc (i64 %51)
 %53 = getelementptr %struct.tdefl_output_buffer, i8* %17, i32 0, i32 2
 store i8* %52, i8** %53
 %54 = icmp eq i8* null, %52
 br i1 %54, label %55, label %57
55:
 %56 = load i8*, i8** %16
 call void @free (i8* %56)
 store i8* null, i8** %8
 br label %235
57:
 store i32 41, i32* %21
 br label %58
58:
 %59 = load i32, i32* %21
 %60 = icmp ne i32 %59, 0
 br i1 %60, label %61, label %66
61:
 %62 = call i32 @tdefl_output_buffer_putter (i8* %21, i32 1, i8* %17)
 br label %63
63:
 %64 = load i32, i32* %21
 %65 = add i32 %64, -1
 store i32 %65, i32* %21
 br label %58
66:
 %67 = load i8*, i8** %16
 %68 = load i32, i32* %14
 %69 = icmp ult i32 10, %68
 br i1 %69, label %70, label %71
70:
 br label %73
71:
 %72 = load i32, i32* %14
 br label %73
73:
 %74 = phi i32 [10, %70], [%72, %71]
 %75 = zext i32 %74 to i64
 %76 = getelementptr [11 x i32], i8* @tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes, i64 0, i64 %75
 %77 = load i32, i32* %76
 %78 = or i32 %77, 4096
 %79 = call i32 @tdefl_init (i8* %67, i8* @tdefl_output_buffer_putter, i8* %17, i32 %78)
 store i32 0, i32* %20
 br label %80
80:
 %81 = load i32, i32* %20
 %82 = load i32, i32* %11
 %83 = icmp slt i32 %81, %82
 br i1 %83, label %84, label %110
84:
 %85 = load i8*, i8** %16
 %86 = call i32 @tdefl_compress_buffer (i8* %85, i8* %21, i64 1, i32 0)
 %87 = load i8*, i8** %16
 %88 = load i8*, i8** %9
 %89 = load i32, i32* %15
 %90 = icmp ne i32 %89, 0
 br i1 %90, label %91, label %96
91:
 %92 = load i32, i32* %11
 %93 = sub i32 %92, 1
 %94 = load i32, i32* %20
 %95 = sub i32 %93, %94
 br label %98
96:
 %97 = load i32, i32* %20
 br label %98
98:
 %99 = phi i32 [%95, %91], [%97, %96]
 %100 = load i32, i32* %19
 %101 = mul i32 %99, %100
 %102 = sext i32 %101 to i64
 %103 = getelementptr i8, i8* %88, i64 %102
 %104 = load i32, i32* %19
 %105 = sext i32 %104 to i64
 %106 = call i32 @tdefl_compress_buffer (i8* %87, i8* %103, i64 %105, i32 0)
 br label %107
107:
 %108 = load i32, i32* %20
 %109 = add i32 %108, 1
 store i32 %109, i32* %20
 br label %80
110:
 %111 = load i8*, i8** %16
 %112 = call i32 @tdefl_compress_buffer (i8* %111, i8* null, i64 0, i32 4)
 %113 = icmp ne i32 %112, 1
 br i1 %113, label %114, label %118
114:
 %115 = load i8*, i8** %16
 call void @free (i8* %115)
 %116 = getelementptr %struct.tdefl_output_buffer, i8* %17, i32 0, i32 2
 %117 = load i8*, i8** %116
 call void @free (i8* %117)
 store i8* null, i8** %8
 br label %235
118:
 %119 = getelementptr %struct.tdefl_output_buffer, i8* %17, i32 0, i32 0
 %120 = load i64, i64* %119
 %121 = sub i64 %120, 41
 %122 = load i8*, i8** %13
 store i64 %121, i64* %122
 call void @memcpy (i8* %23, i8* @__const.tdefl_write_image_to_png_file_in_memory_ex.pnghdr, i64 41, i1 0)
 %123 = load i32, i32* %10
 %124 = ashr i32 %123, 8
 %125 = trunc i32 %124 to i8
 %126 = getelementptr [41 x i8], i8* %23, i64 0, i64 18
 store i8 %125, i8* %126
 %127 = load i32, i32* %10
 %128 = trunc i32 %127 to i8
 %129 = getelementptr [41 x i8], i8* %23, i64 0, i64 19
 store i8 %128, i8* %129
 %130 = load i32, i32* %11
 %131 = ashr i32 %130, 8
 %132 = trunc i32 %131 to i8
 %133 = getelementptr [41 x i8], i8* %23, i64 0, i64 22
 store i8 %132, i8* %133
 %134 = load i32, i32* %11
 %135 = trunc i32 %134 to i8
 %136 = getelementptr [41 x i8], i8* %23, i64 0, i64 23
 store i8 %135, i8* %136
 %137 = load i32, i32* %12
 %138 = sext i32 %137 to i64
 %139 = getelementptr [5 x i8], i8* @tdefl_write_image_to_png_file_in_memory_ex.chans, i64 0, i64 %138
 %140 = load i8, i8* %139
 %141 = getelementptr [41 x i8], i8* %23, i64 0, i64 25
 store i8 %140, i8* %141
 %142 = load i8*, i8** %13
 %143 = load i64, i64* %142
 %144 = lshr i64 %143, 24
 %145 = trunc i64 %144 to i8
 %146 = getelementptr [41 x i8], i8* %23, i64 0, i64 33
 store i8 %145, i8* %146
 %147 = load i8*, i8** %13
 %148 = load i64, i64* %147
 %149 = lshr i64 %148, 16
 %150 = trunc i64 %149 to i8
 %151 = getelementptr [41 x i8], i8* %23, i64 0, i64 34
 store i8 %150, i8* %151
 %152 = load i8*, i8** %13
 %153 = load i64, i64* %152
 %154 = lshr i64 %153, 8
 %155 = trunc i64 %154 to i8
 %156 = getelementptr [41 x i8], i8* %23, i64 0, i64 35
 store i8 %155, i8* %156
 %157 = load i8*, i8** %13
 %158 = load i64, i64* %157
 %159 = trunc i64 %158 to i8
 %160 = getelementptr [41 x i8], i8* %23, i64 0, i64 36
 store i8 %159, i8* %160
 %161 = getelementptr [41 x i8], i8* %23, i64 0, i64 0
 %162 = getelementptr i8, i8* %161, i64 12
 %163 = call i64 @mz_crc32 (i64 0, i8* %162, i64 17)
 %164 = trunc i64 %163 to i32
 store i32 %164, i32* %22
 store i32 0, i32* %18
 br label %165
165:
 %166 = load i32, i32* %18
 %167 = icmp slt i32 %166, 4
 br i1 %167, label %168, label %182
168:
 %169 = load i32, i32* %22
 %170 = lshr i32 %169, 24
 %171 = trunc i32 %170 to i8
 %172 = getelementptr [41 x i8], i8* %23, i64 0, i64 0
 %173 = getelementptr i8, i8* %172, i64 29
 %174 = load i32, i32* %18
 %175 = sext i32 %174 to i64
 %176 = getelementptr i8, i8* %173, i64 %175
 store i8 %171, i8* %176
 br label %177
177:
 %178 = load i32, i32* %18
 %179 = add i32 %178, 1
 store i32 %179, i32* %18
 %180 = load i32, i32* %22
 %181 = shl i32 %180, 8
 store i32 %181, i32* %22
 br label %165
182:
 %183 = getelementptr %struct.tdefl_output_buffer, i8* %17, i32 0, i32 2
 %184 = load i8*, i8** %183
 %185 = getelementptr [41 x i8], i8* %23, i64 0, i64 0
 %186 = getelementptr %struct.tdefl_output_buffer, i8* %17, i32 0, i32 2
 %187 = load i8*, i8** %186
 %188 = call i64 @llvm.objectsize.i64.p0 (i8* %187, i1 0, i1 1, i1 0)
 %189 = call i8* @__memcpy_chk (i8* %184, i8* %185, i64 41, i64 %188)
 %190 = call i32 @tdefl_output_buffer_putter (i8* @.str.13, i32 16, i8* %17)
 %191 = icmp ne i32 %190, 0
 br i1 %191, label %197, label %192
192:
 %193 = load i8*, i8** %13
 store i64 0, i64* %193
 %194 = load i8*, i8** %16
 call void @free (i8* %194)
 %195 = getelementptr %struct.tdefl_output_buffer, i8* %17, i32 0, i32 2
 %196 = load i8*, i8** %195
 call void @free (i8* %196)
 store i8* null, i8** %8
 br label %235
197:
 %198 = getelementptr %struct.tdefl_output_buffer, i8* %17, i32 0, i32 2
 %199 = load i8*, i8** %198
 %200 = getelementptr i8, i8* %199, i64 41
 %201 = getelementptr i8, i8* %200, i64 -4
 %202 = load i8*, i8** %13
 %203 = load i64, i64* %202
 %204 = add i64 %203, 4
 %205 = call i64 @mz_crc32 (i64 0, i8* %201, i64 %204)
 %206 = trunc i64 %205 to i32
 store i32 %206, i32* %22
 store i32 0, i32* %18
 br label %207
207:
 %208 = load i32, i32* %18
 %209 = icmp slt i32 %208, 4
 br i1 %209, label %210, label %228
210:
 %211 = load i32, i32* %22
 %212 = lshr i32 %211, 24
 %213 = trunc i32 %212 to i8
 %214 = getelementptr %struct.tdefl_output_buffer, i8* %17, i32 0, i32 2
 %215 = load i8*, i8** %214
 %216 = getelementptr %struct.tdefl_output_buffer, i8* %17, i32 0, i32 0
 %217 = load i64, i64* %216
 %218 = getelementptr i8, i8* %215, i64 %217
 %219 = getelementptr i8, i8* %218, i64 -16
 %220 = load i32, i32* %18
 %221 = sext i32 %220 to i64
 %222 = getelementptr i8, i8* %219, i64 %221
 store i8 %213, i8* %222
 br label %223
223:
 %224 = load i32, i32* %18
 %225 = add i32 %224, 1
 store i32 %225, i32* %18
 %226 = load i32, i32* %22
 %227 = shl i32 %226, 8
 store i32 %227, i32* %22
 br label %207
228:
 %229 = load i8*, i8** %13
 %230 = load i64, i64* %229
 %231 = add i64 %230, 57
 store i64 %231, i64* %229
 %232 = load i8*, i8** %16
 call void @free (i8* %232)
 %233 = getelementptr %struct.tdefl_output_buffer, i8* %17, i32 0, i32 2
 %234 = load i8*, i8** %233
 store i8* %234, i8** %8
 br label %235
235:
 %236 = load i8*, i8** %8
 ret i8* %236
}

define i8* @tdefl_write_image_to_png_file_in_memory (i8* %0, i32 %1, i32 %2, i32 %3, i8* %4) {
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i32
 %9 = alloca i32
 %10 = alloca i8*
 store i8* %0, i8** %6
 store i32 %1, i32* %7
 store i32 %2, i32* %8
 store i32 %3, i32* %9
 store i8* %4, i8** %10
 %11 = load i8*, i8** %6
 %12 = load i32, i32* %7
 %13 = load i32, i32* %8
 %14 = load i32, i32* %9
 %15 = load i8*, i8** %10
 %16 = call i8* @tdefl_write_image_to_png_file_in_memory_ex (i8* %11, i32 %12, i32 %13, i32 %14, i8* %15, i32 6, i32 0)
 ret i8* %16
}

define i8* @tdefl_compressor_alloc () {
 %1 = call i8* @malloc (i64 319352)
 ret i8* %1
}

define void @tdefl_compressor_free (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 call void @free (i8* %3)
 ret void
}

define void @tinfl_clear_tree (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 %4 = getelementptr %struct.tinfl_decompressor_tag, i8* %3, i32 0, i32 6
 %5 = load i32, i32* %4
 %6 = icmp eq i32 %5, 0
 br i1 %6, label %7, label %16
7:
 %8 = load i8*, i8** %2
 %9 = getelementptr %struct.tinfl_decompressor_tag, i8* %8, i32 0, i32 15
 %10 = getelementptr [576 x i16], i8* %9, i64 0, i64 0
 %11 = load i8*, i8** %2
 %12 = getelementptr %struct.tinfl_decompressor_tag, i8* %11, i32 0, i32 15
 %13 = getelementptr [576 x i16], i8* %12, i64 0, i64 0
 %14 = call i64 @llvm.objectsize.i64.p0 (i8* %13, i1 0, i1 1, i1 0)
 %15 = call i8* @__memset_chk (i8* %10, i32 0, i64 1152, i64 %14)
 br label %40
16:
 %17 = load i8*, i8** %2
 %18 = getelementptr %struct.tinfl_decompressor_tag, i8* %17, i32 0, i32 6
 %19 = load i32, i32* %18
 %20 = icmp eq i32 %19, 1
 br i1 %20, label %21, label %30
21:
 %22 = load i8*, i8** %2
 %23 = getelementptr %struct.tinfl_decompressor_tag, i8* %22, i32 0, i32 16
 %24 = getelementptr [64 x i16], i8* %23, i64 0, i64 0
 %25 = load i8*, i8** %2
 %26 = getelementptr %struct.tinfl_decompressor_tag, i8* %25, i32 0, i32 16
 %27 = getelementptr [64 x i16], i8* %26, i64 0, i64 0
 %28 = call i64 @llvm.objectsize.i64.p0 (i8* %27, i1 0, i1 1, i1 0)
 %29 = call i8* @__memset_chk (i8* %24, i32 0, i64 128, i64 %28)
 br label %39
30:
 %31 = load i8*, i8** %2
 %32 = getelementptr %struct.tinfl_decompressor_tag, i8* %31, i32 0, i32 17
 %33 = getelementptr [38 x i16], i8* %32, i64 0, i64 0
 %34 = load i8*, i8** %2
 %35 = getelementptr %struct.tinfl_decompressor_tag, i8* %34, i32 0, i32 17
 %36 = getelementptr [38 x i16], i8* %35, i64 0, i64 0
 %37 = call i64 @llvm.objectsize.i64.p0 (i8* %36, i1 0, i1 1, i1 0)
 %38 = call i8* @__memset_chk (i8* %33, i32 0, i64 76, i64 %37)
 br label %39
39:
 br label %40
40:
 ret void
}

define i8* @tinfl_decompress_mem_to_heap (i8* %0, i64 %1, i8* %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i64
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca %struct.tinfl_decompressor_tag
 %11 = alloca i8*
 %12 = alloca i8*
 %13 = alloca i64
 %14 = alloca i64
 %15 = alloca i64
 %16 = alloca i64
 %17 = alloca i64
 %18 = alloca i32
 store i8* %0, i8** %6
 store i64 %1, i64* %7
 store i8* %2, i8** %8
 store i32 %3, i32* %9
 store i8* null, i8** %11
 store i64 0, i64* %13
 store i64 0, i64* %14
 %19 = load i8*, i8** %8
 store i64 0, i64* %19
 br label %20
20:
 %21 = getelementptr %struct.tinfl_decompressor_tag, i8* %10, i32 0, i32 0
 store i32 0, i32* %21
 br label %22
22:
 br label %23
23:
 %24 = load i64, i64* %7
 %25 = load i64, i64* %13
 %26 = sub i64 %24, %25
 store i64 %26, i64* %15
 %27 = load i64, i64* %14
 %28 = load i8*, i8** %8
 %29 = load i64, i64* %28
 %30 = sub i64 %27, %29
 store i64 %30, i64* %16
 %31 = load i8*, i8** %6
 %32 = load i64, i64* %13
 %33 = getelementptr i8, i8* %31, i64 %32
 %34 = load i8*, i8** %11
 %35 = load i8*, i8** %11
 %36 = icmp ne i8* %35, null
 br i1 %36, label %37, label %42
37:
 %38 = load i8*, i8** %11
 %39 = load i8*, i8** %8
 %40 = load i64, i64* %39
 %41 = getelementptr i8, i8* %38, i64 %40
 br label %43
42:
 br label %43
43:
 %44 = phi i8* [%41, %37], [null, %42]
 %45 = load i32, i32* %9
 %46 = and i32 %45, -3
 %47 = or i32 %46, 4
 %48 = call i32 @tinfl_decompress (i8* %10, i8* %33, i8* %15, i8* %34, i8* %44, i8* %16, i32 %47)
 store i32 %48, i32* %18
 %49 = load i32, i32* %18
 %50 = icmp slt i32 %49, 0
 br i1 %50, label %54, label %51
51:
 %52 = load i32, i32* %18
 %53 = icmp eq i32 %52, 1
 br i1 %53, label %54, label %57
54:
 %55 = load i8*, i8** %11
 call void @free (i8* %55)
 %56 = load i8*, i8** %8
 store i64 0, i64* %56
 store i8* null, i8** %5
 br label %88
57:
 %58 = load i64, i64* %15
 %59 = load i64, i64* %13
 %60 = add i64 %59, %58
 store i64 %60, i64* %13
 %61 = load i64, i64* %16
 %62 = load i8*, i8** %8
 %63 = load i64, i64* %62
 %64 = add i64 %63, %61
 store i64 %64, i64* %62
 %65 = load i32, i32* %18
 %66 = icmp eq i32 %65, 0
 br i1 %66, label %67, label %68
67:
 br label %86
68:
 %69 = load i64, i64* %14
 %70 = mul i64 %69, 2
 store i64 %70, i64* %17
 %71 = load i64, i64* %17
 %72 = icmp ult i64 %71, 128
 br i1 %72, label %73, label %74
73:
 store i64 128, i64* %17
 br label %74
74:
 %75 = load i8*, i8** %11
 %76 = load i64, i64* %17
 %77 = call i8* @realloc (i8* %75, i64 %76)
 store i8* %77, i8** %12
 %78 = load i8*, i8** %12
 %79 = icmp ne i8* %78, null
 br i1 %79, label %83, label %80
80:
 %81 = load i8*, i8** %11
 call void @free (i8* %81)
 %82 = load i8*, i8** %8
 store i64 0, i64* %82
 store i8* null, i8** %5
 br label %88
83:
 %84 = load i8*, i8** %12
 store i8* %84, i8** %11
 %85 = load i64, i64* %17
 store i64 %85, i64* %14
 br label %23
86:
 %87 = load i8*, i8** %11
 store i8* %87, i8** %5
 br label %88
88:
 %89 = load i8*, i8** %5
 ret i8* %89
}

define i64 @tinfl_decompress_mem_to_mem (i8* %0, i64 %1, i8* %2, i64 %3, i32 %4) {
 %6 = alloca i8*
 %7 = alloca i64
 %8 = alloca i8*
 %9 = alloca i64
 %10 = alloca i32
 %11 = alloca %struct.tinfl_decompressor_tag
 %12 = alloca i32
 store i8* %0, i8** %6
 store i64 %1, i64* %7
 store i8* %2, i8** %8
 store i64 %3, i64* %9
 store i32 %4, i32* %10
 br label %13
13:
 %14 = getelementptr %struct.tinfl_decompressor_tag, i8* %11, i32 0, i32 0
 store i32 0, i32* %14
 br label %15
15:
 %16 = load i8*, i8** %8
 %17 = load i8*, i8** %6
 %18 = load i8*, i8** %6
 %19 = load i32, i32* %10
 %20 = and i32 %19, -3
 %21 = or i32 %20, 4
 %22 = call i32 @tinfl_decompress (i8* %11, i8* %16, i8* %9, i8* %17, i8* %18, i8* %7, i32 %21)
 store i32 %22, i32* %12
 %23 = load i32, i32* %12
 %24 = icmp ne i32 %23, 0
 br i1 %24, label %25, label %26
25:
 br label %28
26:
 %27 = load i64, i64* %7
 br label %28
28:
 %29 = phi i64 [-1, %25], [%27, %26]
 ret i64 %29
}

define i32 @tinfl_decompress_mem_to_callback (i8* %0, i8* %1, i8* %2, i8* %3, i32 %4) {
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i8*
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca i32
 %13 = alloca %struct.tinfl_decompressor_tag
 %14 = alloca i8*
 %15 = alloca i64
 %16 = alloca i64
 %17 = alloca i64
 %18 = alloca i64
 %19 = alloca i32
 store i8* %0, i8** %7
 store i8* %1, i8** %8
 store i8* %2, i8** %9
 store i8* %3, i8** %10
 store i32 %4, i32* %11
 store i32 0, i32* %12
 %20 = call i8* @malloc (i64 32768)
 store i8* %20, i8** %14
 store i64 0, i64* %15
 store i64 0, i64* %16
 %21 = load i8*, i8** %14
 %22 = icmp ne i8* %21, null
 br i1 %22, label %24, label %23
23:
 store i32 -1, i32* %6
 br label %82
24:
 %25 = load i8*, i8** %14
 %26 = load i8*, i8** %14
 %27 = call i64 @llvm.objectsize.i64.p0 (i8* %26, i1 0, i1 1, i1 0)
 %28 = call i8* @__memset_chk (i8* %25, i32 0, i64 32768, i64 %27)
 br label %29
29:
 %30 = getelementptr %struct.tinfl_decompressor_tag, i8* %13, i32 0, i32 0
 store i32 0, i32* %30
 br label %31
31:
 br label %32
32:
 %33 = load i8*, i8** %8
 %34 = load i64, i64* %33
 %35 = load i64, i64* %15
 %36 = sub i64 %34, %35
 store i64 %36, i64* %17
 %37 = load i64, i64* %16
 %38 = sub i64 32768, %37
 store i64 %38, i64* %18
 %39 = load i8*, i8** %7
 %40 = load i64, i64* %15
 %41 = getelementptr i8, i8* %39, i64 %40
 %42 = load i8*, i8** %14
 %43 = load i8*, i8** %14
 %44 = load i64, i64* %16
 %45 = getelementptr i8, i8* %43, i64 %44
 %46 = load i32, i32* %11
 %47 = and i32 %46, -7
 %48 = call i32 @tinfl_decompress (i8* %13, i8* %41, i8* %17, i8* %42, i8* %45, i8* %18, i32 %47)
 store i32 %48, i32* %19
 %49 = load i64, i64* %17
 %50 = load i64, i64* %15
 %51 = add i64 %50, %49
 store i64 %51, i64* %15
 %52 = load i64, i64* %18
 %53 = icmp ne i64 %52, 0
 br i1 %53, label %54, label %65
54:
 %55 = load i8*, i8** %9
 %56 = load i8*, i8** %14
 %57 = load i64, i64* %16
 %58 = getelementptr i8, i8* %56, i64 %57
 %59 = load i64, i64* %18
 %60 = trunc i64 %59 to i32
 %61 = load i8*, i8** %10
 %62 = call i32 %55 (i8* %58, i32 %60, i8* %61)
 %63 = icmp ne i32 %62, 0
 br i1 %63, label %65, label %64
64:
 br label %77
65:
 %66 = load i32, i32* %19
 %67 = icmp ne i32 %66, 2
 br i1 %67, label %68, label %72
68:
 %69 = load i32, i32* %19
 %70 = icmp eq i32 %69, 0
 %71 = zext i1 %70 to i32
 store i32 %71, i32* %12
 br label %77
72:
 %73 = load i64, i64* %16
 %74 = load i64, i64* %18
 %75 = add i64 %73, %74
 %76 = and i64 %75, 32767
 store i64 %76, i64* %16
 br label %32
77:
 %78 = load i8*, i8** %14
 call void @free (i8* %78)
 %79 = load i64, i64* %15
 %80 = load i8*, i8** %8
 store i64 %79, i64* %80
 %81 = load i32, i32* %12
 store i32 %81, i32* %6
 br label %82
82:
 %83 = load i32, i32* %6
 ret i32 %83
}

define i8* @tinfl_decompressor_alloc () {
 %1 = alloca i8*
 %2 = call i8* @malloc (i64 8376)
 store i8* %2, i8** %1
 %3 = load i8*, i8** %1
 %4 = icmp ne i8* %3, null
 br i1 %4, label %5, label %10
5:
 br label %6
6:
 %7 = load i8*, i8** %1
 %8 = getelementptr %struct.tinfl_decompressor_tag, i8* %7, i32 0, i32 0
 store i32 0, i32* %8
 br label %9
9:
 br label %10
10:
 %11 = load i8*, i8** %1
 ret i8* %11
}

define void @tinfl_decompressor_free (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 call void @free (i8* %3)
 ret void
}

define void @mz_zip_zero_struct (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 %4 = icmp ne i8* %3, null
 br i1 %4, label %5, label %10
5:
 %6 = load i8*, i8** %2
 %7 = load i8*, i8** %2
 %8 = call i64 @llvm.objectsize.i64.p0 (i8* %7, i1 0, i1 1, i1 0)
 %9 = call i8* @__memset_chk (i8* %6, i32 0, i64 112, i64 %8)
 br label %10
10:
 ret void
}

define i32 @mz_zip_reader_end (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 %4 = call i32 @mz_zip_reader_end_internal (i8* %3, i32 1)
 ret i32 %4
}

define i32 @mz_zip_reader_end_internal (i8* %0, i32 %1) {
 %3 = alloca i8*
 %4 = alloca i8*
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca i32
 %13 = alloca i8*
 store i8* %0, i8** %10
 store i32 %1, i32* %11
 store i32 1, i32* %12
 %14 = load i8*, i8** %10
 %15 = icmp ne i8* %14, null
 br i1 %15, label %17, label %16
16:
 store i32 0, i32* %9
 br label %138
17:
 %18 = load i8*, i8** %10
 %19 = getelementptr %struct.mz_zip_archive, i8* %18, i32 0, i32 15
 %20 = load i8*, i8** %19
 %21 = icmp ne i8* %20, null
 br i1 %21, label %22, label %37
22:
 %23 = load i8*, i8** %10
 %24 = getelementptr %struct.mz_zip_archive, i8* %23, i32 0, i32 7
 %25 = load i8*, i8** %24
 %26 = icmp ne i8* %25, null
 br i1 %26, label %27, label %37
27:
 %28 = load i8*, i8** %10
 %29 = getelementptr %struct.mz_zip_archive, i8* %28, i32 0, i32 8
 %30 = load i8*, i8** %29
 %31 = icmp ne i8* %30, null
 br i1 %31, label %32, label %37
32:
 %33 = load i8*, i8** %10
 %34 = getelementptr %struct.mz_zip_archive, i8* %33, i32 0, i32 3
 %35 = load i32, i32* %34
 %36 = icmp ne i32 %35, 1
 br i1 %36, label %37, label %44
37:
 %38 = load i32, i32* %11
 %39 = icmp ne i32 %38, 0
 br i1 %39, label %40, label %43
40:
 %41 = load i8*, i8** %10
 %42 = getelementptr %struct.mz_zip_archive, i8* %41, i32 0, i32 5
 store i32 24, i32* %42
 br label %43
43:
 store i32 0, i32* %9
 br label %138
44:
 %45 = load i8*, i8** %10
 %46 = getelementptr %struct.mz_zip_archive, i8* %45, i32 0, i32 15
 %47 = load i8*, i8** %46
 %48 = icmp ne i8* %47, null
 br i1 %48, label %49, label %134
49:
 %50 = load i8*, i8** %10
 %51 = getelementptr %struct.mz_zip_archive, i8* %50, i32 0, i32 15
 %52 = load i8*, i8** %51
 store i8* %52, i8** %13
 %53 = load i8*, i8** %10
 %54 = getelementptr %struct.mz_zip_archive, i8* %53, i32 0, i32 15
 store i8* null, i8** %54
 %55 = load i8*, i8** %10
 %56 = load i8*, i8** %13
 %57 = getelementptr %struct.mz_zip_internal_state_tag, i8* %56, i32 0, i32 0
 store i8* %55, i8** %3
 store i8* %57, i8** %4
 %58 = load i8*, i8** %3
 %59 = getelementptr %struct.mz_zip_archive, i8* %58, i32 0, i32 8
 %60 = load i8*, i8** %59
 %61 = load i8*, i8** %3
 %62 = getelementptr %struct.mz_zip_archive, i8* %61, i32 0, i32 10
 %63 = load i8*, i8** %62
 %64 = load i8*, i8** %4
 %65 = load i8*, i8** %64
 call void %60 (i8* %63, i8* %65)
 %66 = load i8*, i8** %4
 %67 = load i8*, i8** %4
 %68 = call i64 @llvm.objectsize.i64.p0 (i8* %67, i1 0, i1 1, i1 0)
 %69 = call i8* @__memset_chk (i8* %66, i32 0, i64 32, i64 %68)
 %70 = load i8*, i8** %10
 %71 = load i8*, i8** %13
 %72 = getelementptr %struct.mz_zip_internal_state_tag, i8* %71, i32 0, i32 1
 store i8* %70, i8** %5
 store i8* %72, i8** %6
 %73 = load i8*, i8** %5
 %74 = getelementptr %struct.mz_zip_archive, i8* %73, i32 0, i32 8
 %75 = load i8*, i8** %74
 %76 = load i8*, i8** %5
 %77 = getelementptr %struct.mz_zip_archive, i8* %76, i32 0, i32 10
 %78 = load i8*, i8** %77
 %79 = load i8*, i8** %6
 %80 = load i8*, i8** %79
 call void %75 (i8* %78, i8* %80)
 %81 = load i8*, i8** %6
 %82 = load i8*, i8** %6
 %83 = call i64 @llvm.objectsize.i64.p0 (i8* %82, i1 0, i1 1, i1 0)
 %84 = call i8* @__memset_chk (i8* %81, i32 0, i64 32, i64 %83)
 %85 = load i8*, i8** %10
 %86 = load i8*, i8** %13
 %87 = getelementptr %struct.mz_zip_internal_state_tag, i8* %86, i32 0, i32 2
 store i8* %85, i8** %7
 store i8* %87, i8** %8
 %88 = load i8*, i8** %7
 %89 = getelementptr %struct.mz_zip_archive, i8* %88, i32 0, i32 8
 %90 = load i8*, i8** %89
 %91 = load i8*, i8** %7
 %92 = getelementptr %struct.mz_zip_archive, i8* %91, i32 0, i32 10
 %93 = load i8*, i8** %92
 %94 = load i8*, i8** %8
 %95 = load i8*, i8** %94
 call void %90 (i8* %93, i8* %95)
 %96 = load i8*, i8** %8
 %97 = load i8*, i8** %8
 %98 = call i64 @llvm.objectsize.i64.p0 (i8* %97, i1 0, i1 1, i1 0)
 %99 = call i8* @__memset_chk (i8* %96, i32 0, i64 32, i64 %98)
 %100 = load i8*, i8** %13
 %101 = getelementptr %struct.mz_zip_internal_state_tag, i8* %100, i32 0, i32 6
 %102 = load i8*, i8** %101
 %103 = icmp ne i8* %102, null
 br i1 %103, label %104, label %126
104:
 %105 = load i8*, i8** %10
 %106 = getelementptr %struct.mz_zip_archive, i8* %105, i32 0, i32 4
 %107 = load i32, i32* %106
 %108 = icmp eq i32 %107, 4
 br i1 %108, label %109, label %123
109:
 %110 = load i8*, i8** %13
 %111 = getelementptr %struct.mz_zip_internal_state_tag, i8* %110, i32 0, i32 6
 %112 = load i8*, i8** %111
 %113 = call i32 @fclose (i8* %112)
 %114 = icmp eq i32 %113, -1
 br i1 %114, label %115, label %122
115:
 %116 = load i32, i32* %11
 %117 = icmp ne i32 %116, 0
 br i1 %117, label %118, label %121
118:
 %119 = load i8*, i8** %10
 %120 = getelementptr %struct.mz_zip_archive, i8* %119, i32 0, i32 5
 store i32 21, i32* %120
 br label %121
121:
 store i32 0, i32* %12
 br label %122
122:
 br label %123
123:
 %124 = load i8*, i8** %13
 %125 = getelementptr %struct.mz_zip_internal_state_tag, i8* %124, i32 0, i32 6
 store i8* null, i8** %125
 br label %126
126:
 %127 = load i8*, i8** %10
 %128 = getelementptr %struct.mz_zip_archive, i8* %127, i32 0, i32 8
 %129 = load i8*, i8** %128
 %130 = load i8*, i8** %10
 %131 = getelementptr %struct.mz_zip_archive, i8* %130, i32 0, i32 10
 %132 = load i8*, i8** %131
 %133 = load i8*, i8** %13
 call void %129 (i8* %132, i8* %133)
 br label %134
134:
 %135 = load i8*, i8** %10
 %136 = getelementptr %struct.mz_zip_archive, i8* %135, i32 0, i32 3
 store i32 0, i32* %136
 %137 = load i32, i32* %12
 store i32 %137, i32* %9
 br label %138
138:
 %139 = load i32, i32* %9
 ret i32 %139
}

define i32 @mz_zip_reader_init (i8* %0, i64 %1, i32 %2) {
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i64
 %9 = alloca i32
 store i8* %0, i8** %7
 store i64 %1, i64* %8
 store i32 %2, i32* %9
 %10 = load i8*, i8** %7
 %11 = icmp ne i8* %10, null
 br i1 %11, label %12, label %17
12:
 %13 = load i8*, i8** %7
 %14 = getelementptr %struct.mz_zip_archive, i8* %13, i32 0, i32 11
 %15 = load i8*, i8** %14
 %16 = icmp ne i8* %15, null
 br i1 %16, label %26, label %17
17:
 %18 = load i8*, i8** %7
 store i8* %18, i8** %4
 store i32 24, i32* %5
 %19 = load i8*, i8** %4
 %20 = icmp ne i8* %19, null
 br i1 %20, label %21, label %25
21:
 %22 = load i32, i32* %5
 %23 = load i8*, i8** %4
 %24 = getelementptr %struct.mz_zip_archive, i8* %23, i32 0, i32 5
 store i32 %22, i32* %24
 br label %25
25:
 store i32 0, i32* %6
 br label %46
26:
 %27 = load i8*, i8** %7
 %28 = load i32, i32* %9
 %29 = call i32 @mz_zip_reader_init_internal (i8* %27, i32 %28)
 %30 = icmp ne i32 %29, 0
 br i1 %30, label %32, label %31
31:
 store i32 0, i32* %6
 br label %46
32:
 %33 = load i8*, i8** %7
 %34 = getelementptr %struct.mz_zip_archive, i8* %33, i32 0, i32 4
 store i32 1, i32* %34
 %35 = load i64, i64* %8
 %36 = load i8*, i8** %7
 %37 = getelementptr %struct.mz_zip_archive, i8* %36, i32 0, i32 0
 store i64 %35, i64* %37
 %38 = load i8*, i8** %7
 %39 = load i32, i32* %9
 %40 = call i32 @mz_zip_reader_read_central_dir (i8* %38, i32 %39)
 %41 = icmp ne i32 %40, 0
 br i1 %41, label %45, label %42
42:
 %43 = load i8*, i8** %7
 %44 = call i32 @mz_zip_reader_end_internal (i8* %43, i32 0)
 store i32 0, i32* %6
 br label %46
45:
 store i32 1, i32* %6
 br label %46
46:
 %47 = load i32, i32* %6
 ret i32 %47
}

define i32 @mz_zip_reader_init_internal (i8* %0, i32 %1) {
 %3 = alloca i8*
 %4 = alloca i32
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 store i8* %0, i8** %8
 store i32 %1, i32* %9
 %10 = load i32, i32* %9
 %11 = load i8*, i8** %8
 %12 = icmp ne i8* %11, null
 br i1 %12, label %13, label %23
13:
 %14 = load i8*, i8** %8
 %15 = getelementptr %struct.mz_zip_archive, i8* %14, i32 0, i32 15
 %16 = load i8*, i8** %15
 %17 = icmp ne i8* %16, null
 br i1 %17, label %23, label %18
18:
 %19 = load i8*, i8** %8
 %20 = getelementptr %struct.mz_zip_archive, i8* %19, i32 0, i32 3
 %21 = load i32, i32* %20
 %22 = icmp ne i32 %21, 0
 br i1 %22, label %23, label %32
23:
 %24 = load i8*, i8** %8
 store i8* %24, i8** %3
 store i32 24, i32* %4
 %25 = load i8*, i8** %3
 %26 = icmp ne i8* %25, null
 br i1 %26, label %27, label %31
27:
 %28 = load i32, i32* %4
 %29 = load i8*, i8** %3
 %30 = getelementptr %struct.mz_zip_archive, i8* %29, i32 0, i32 5
 store i32 %28, i32* %30
 br label %31
31:
 store i32 0, i32* %7
 br label %123
32:
 %33 = load i8*, i8** %8
 %34 = getelementptr %struct.mz_zip_archive, i8* %33, i32 0, i32 7
 %35 = load i8*, i8** %34
 %36 = icmp ne i8* %35, null
 br i1 %36, label %40, label %37
37:
 %38 = load i8*, i8** %8
 %39 = getelementptr %struct.mz_zip_archive, i8* %38, i32 0, i32 7
 store i8* @miniz_def_alloc_func, i8** %39
 br label %40
40:
 %41 = load i8*, i8** %8
 %42 = getelementptr %struct.mz_zip_archive, i8* %41, i32 0, i32 8
 %43 = load i8*, i8** %42
 %44 = icmp ne i8* %43, null
 br i1 %44, label %48, label %45
45:
 %46 = load i8*, i8** %8
 %47 = getelementptr %struct.mz_zip_archive, i8* %46, i32 0, i32 8
 store i8* @miniz_def_free_func, i8** %47
 br label %48
48:
 %49 = load i8*, i8** %8
 %50 = getelementptr %struct.mz_zip_archive, i8* %49, i32 0, i32 9
 %51 = load i8*, i8** %50
 %52 = icmp ne i8* %51, null
 br i1 %52, label %56, label %53
53:
 %54 = load i8*, i8** %8
 %55 = getelementptr %struct.mz_zip_archive, i8* %54, i32 0, i32 9
 store i8* @miniz_def_realloc_func, i8** %55
 br label %56
56:
 %57 = load i8*, i8** %8
 %58 = getelementptr %struct.mz_zip_archive, i8* %57, i32 0, i32 0
 store i64 0, i64* %58
 %59 = load i8*, i8** %8
 %60 = getelementptr %struct.mz_zip_archive, i8* %59, i32 0, i32 1
 store i64 0, i64* %60
 %61 = load i8*, i8** %8
 %62 = getelementptr %struct.mz_zip_archive, i8* %61, i32 0, i32 2
 store i32 0, i32* %62
 %63 = load i8*, i8** %8
 %64 = getelementptr %struct.mz_zip_archive, i8* %63, i32 0, i32 5
 store i32 0, i32* %64
 %65 = load i8*, i8** %8
 %66 = getelementptr %struct.mz_zip_archive, i8* %65, i32 0, i32 7
 %67 = load i8*, i8** %66
 %68 = load i8*, i8** %8
 %69 = getelementptr %struct.mz_zip_archive, i8* %68, i32 0, i32 10
 %70 = load i8*, i8** %69
 %71 = call i8* %67 (i8* %70, i64 1, i64 152)
 %72 = load i8*, i8** %8
 %73 = getelementptr %struct.mz_zip_archive, i8* %72, i32 0, i32 15
 store i8* %71, i8** %73
 %74 = icmp eq i8* null, %71
 br i1 %74, label %75, label %84
75:
 %76 = load i8*, i8** %8
 store i8* %76, i8** %5
 store i32 16, i32* %6
 %77 = load i8*, i8** %5
 %78 = icmp ne i8* %77, null
 br i1 %78, label %79, label %83
79:
 %80 = load i32, i32* %6
 %81 = load i8*, i8** %5
 %82 = getelementptr %struct.mz_zip_archive, i8* %81, i32 0, i32 5
 store i32 %80, i32* %82
 br label %83
83:
 store i32 0, i32* %7
 br label %123
84:
 %85 = load i8*, i8** %8
 %86 = getelementptr %struct.mz_zip_archive, i8* %85, i32 0, i32 15
 %87 = load i8*, i8** %86
 %88 = load i8*, i8** %8
 %89 = getelementptr %struct.mz_zip_archive, i8* %88, i32 0, i32 15
 %90 = load i8*, i8** %89
 %91 = call i64 @llvm.objectsize.i64.p0 (i8* %90, i1 0, i1 1, i1 0)
 %92 = call i8* @__memset_chk (i8* %87, i32 0, i64 152, i64 %91)
 %93 = load i8*, i8** %8
 %94 = getelementptr %struct.mz_zip_archive, i8* %93, i32 0, i32 15
 %95 = load i8*, i8** %94
 %96 = getelementptr %struct.mz_zip_internal_state_tag, i8* %95, i32 0, i32 0
 %97 = getelementptr %struct.mz_zip_array, i8* %96, i32 0, i32 3
 store i32 1, i32* %97
 %98 = load i8*, i8** %8
 %99 = getelementptr %struct.mz_zip_archive, i8* %98, i32 0, i32 15
 %100 = load i8*, i8** %99
 %101 = getelementptr %struct.mz_zip_internal_state_tag, i8* %100, i32 0, i32 1
 %102 = getelementptr %struct.mz_zip_array, i8* %101, i32 0, i32 3
 store i32 4, i32* %102
 %103 = load i8*, i8** %8
 %104 = getelementptr %struct.mz_zip_archive, i8* %103, i32 0, i32 15
 %105 = load i8*, i8** %104
 %106 = getelementptr %struct.mz_zip_internal_state_tag, i8* %105, i32 0, i32 2
 %107 = getelementptr %struct.mz_zip_array, i8* %106, i32 0, i32 3
 store i32 4, i32* %107
 %108 = load i32, i32* %9
 %109 = load i8*, i8** %8
 %110 = getelementptr %struct.mz_zip_archive, i8* %109, i32 0, i32 15
 %111 = load i8*, i8** %110
 %112 = getelementptr %struct.mz_zip_internal_state_tag, i8* %111, i32 0, i32 3
 store i32 %108, i32* %112
 %113 = load i8*, i8** %8
 %114 = getelementptr %struct.mz_zip_archive, i8* %113, i32 0, i32 15
 %115 = load i8*, i8** %114
 %116 = getelementptr %struct.mz_zip_internal_state_tag, i8* %115, i32 0, i32 4
 store i32 0, i32* %116
 %117 = load i8*, i8** %8
 %118 = getelementptr %struct.mz_zip_archive, i8* %117, i32 0, i32 15
 %119 = load i8*, i8** %118
 %120 = getelementptr %struct.mz_zip_internal_state_tag, i8* %119, i32 0, i32 5
 store i32 0, i32* %120
 %121 = load i8*, i8** %8
 %122 = getelementptr %struct.mz_zip_archive, i8* %121, i32 0, i32 3
 store i32 1, i32* %122
 store i32 1, i32* %7
 br label %123
123:
 %124 = load i32, i32* %7
 ret i32 %124
}

define i32 @mz_zip_reader_read_central_dir (i8* %0, i32 %1) {
 %3 = alloca i32
 %4 = alloca i8*
 %5 = alloca i8*
 %6 = alloca i64
 %7 = alloca i32
 %8 = alloca i32
 %9 = alloca i8*
 %10 = alloca i8*
 %11 = alloca i64
 %12 = alloca i32
 %13 = alloca i32
 %14 = alloca i8*
 %15 = alloca i8*
 %16 = alloca i64
 %17 = alloca i32
 %18 = alloca i8*
 %19 = alloca i32
 %20 = alloca i8*
 %21 = alloca i32
 %22 = alloca i8*
 %23 = alloca i32
 %24 = alloca i8*
 %25 = alloca i32
 %26 = alloca i8*
 %27 = alloca i32
 %28 = alloca i8*
 %29 = alloca i32
 %30 = alloca i8*
 %31 = alloca i32
 %32 = alloca i8*
 %33 = alloca i32
 %34 = alloca i8*
 %35 = alloca i32
 %36 = alloca i8*
 %37 = alloca i32
 %38 = alloca i8*
 %39 = alloca i32
 %40 = alloca i8*
 %41 = alloca i32
 %42 = alloca i8*
 %43 = alloca i32
 %44 = alloca i8*
 %45 = alloca i32
 %46 = alloca i8*
 %47 = alloca i32
 %48 = alloca i8*
 %49 = alloca i32
 %50 = alloca i8*
 %51 = alloca i32
 %52 = alloca i8*
 %53 = alloca i32
 %54 = alloca i8*
 %55 = alloca i32
 %56 = alloca i8*
 %57 = alloca i32
 %58 = alloca i8*
 %59 = alloca i32
 %60 = alloca i8*
 %61 = alloca i32
 %62 = alloca i8*
 %63 = alloca i32
 %64 = alloca i8*
 %65 = alloca i32
 %66 = alloca i8*
 %67 = alloca i32
 %68 = alloca i8*
 %69 = alloca i32
 %70 = alloca i8*
 %71 = alloca i32
 %72 = alloca i32
 %73 = alloca i8*
 %74 = alloca i32
 %75 = alloca i32
 %76 = alloca i32
 %77 = alloca i32
 %78 = alloca i32
 %79 = alloca i64
 %80 = alloca i64
 %81 = alloca i8*
 %82 = alloca [1024 x i32]
 %83 = alloca i8*
 %84 = alloca i32
 %85 = alloca [5 x i32]
 %86 = alloca i8*
 %87 = alloca [14 x i32]
 %88 = alloca i8*
 %89 = alloca i64
 %90 = alloca i32
 %91 = alloca i64
 %92 = alloca i64
 %93 = alloca i64
 %94 = alloca i64
 %95 = alloca i32
 %96 = alloca i32
 %97 = alloca i32
 %98 = alloca i32
 %99 = alloca i32
 %100 = alloca i32
 %101 = alloca i32
 %102 = alloca i64
 %103 = alloca i64
 %104 = alloca i64
 %105 = alloca i32
 %106 = alloca i8*
 %107 = alloca i8*
 %108 = alloca i32
 %109 = alloca i32
 store i8* %0, i8** %73
 store i32 %1, i32* %74
 store i32 0, i32* %75
 store i32 0, i32* %76
 store i32 0, i32* %77
 store i32 0, i32* %78
 store i64 0, i64* %79
 store i64 0, i64* %80
 %110 = getelementptr [1024 x i32], i8* %82, i64 0, i64 0
 store i8* %110, i8** %83
 %111 = load i32, i32* %74
 %112 = and i32 %111, 2048
 %113 = icmp eq i32 %112, 0
 %114 = zext i1 %113 to i32
 store i32 %114, i32* %84
 %115 = getelementptr [5 x i32], i8* %85, i64 0, i64 0
 store i8* %115, i8** %86
 %116 = getelementptr [14 x i32], i8* %87, i64 0, i64 0
 store i8* %116, i8** %88
 store i64 0, i64* %89
 %117 = load i8*, i8** %73
 %118 = getelementptr %struct.mz_zip_archive, i8* %117, i32 0, i32 0
 %119 = load i64, i64* %118
 %120 = icmp ult i64 %119, 22
 br i1 %120, label %121, label %130
121:
 %122 = load i8*, i8** %73
 store i8* %122, i8** %18
 store i32 8, i32* %19
 %123 = load i8*, i8** %18
 %124 = icmp ne i8* %123, null
 br i1 %124, label %125, label %129
125:
 %126 = load i32, i32* %19
 %127 = load i8*, i8** %18
 %128 = getelementptr %struct.mz_zip_archive, i8* %127, i32 0, i32 5
 store i32 %126, i32* %128
 br label %129
129:
 store i32 0, i32* %72
 br label %1746
130:
 %131 = load i8*, i8** %73
 %132 = call i32 @mz_zip_reader_locate_header_sig (i8* %131, i32 101010256, i32 22, i8* %80)
 %133 = icmp ne i32 %132, 0
 br i1 %133, label %143, label %134
134:
 %135 = load i8*, i8** %73
 store i8* %135, i8** %20
 store i32 7, i32* %21
 %136 = load i8*, i8** %20
 %137 = icmp ne i8* %136, null
 br i1 %137, label %138, label %142
138:
 %139 = load i32, i32* %21
 %140 = load i8*, i8** %20
 %141 = getelementptr %struct.mz_zip_archive, i8* %140, i32 0, i32 5
 store i32 %139, i32* %141
 br label %142
142:
 store i32 0, i32* %72
 br label %1746
143:
 %144 = load i8*, i8** %73
 %145 = getelementptr %struct.mz_zip_archive, i8* %144, i32 0, i32 11
 %146 = load i8*, i8** %145
 %147 = load i8*, i8** %73
 %148 = getelementptr %struct.mz_zip_archive, i8* %147, i32 0, i32 14
 %149 = load i8*, i8** %148
 %150 = load i64, i64* %80
 %151 = load i8*, i8** %83
 %152 = call i64 %146 (i8* %149, i64 %150, i8* %151, i64 22)
 %153 = icmp ne i64 %152, 22
 br i1 %153, label %154, label %163
154:
 %155 = load i8*, i8** %73
 store i8* %155, i8** %22
 store i32 20, i32* %23
 %156 = load i8*, i8** %22
 %157 = icmp ne i8* %156, null
 br i1 %157, label %158, label %162
158:
 %159 = load i32, i32* %23
 %160 = load i8*, i8** %22
 %161 = getelementptr %struct.mz_zip_archive, i8* %160, i32 0, i32 5
 store i32 %159, i32* %161
 br label %162
162:
 store i32 0, i32* %72
 br label %1746
163:
 %164 = load i8*, i8** %83
 %165 = getelementptr i8, i8* %164, i64 0
 %166 = getelementptr i8, i8* %165, i64 0
 %167 = load i8, i8* %166
 %168 = zext i8 %167 to i32
 %169 = load i8*, i8** %83
 %170 = getelementptr i8, i8* %169, i64 0
 %171 = getelementptr i8, i8* %170, i64 1
 %172 = load i8, i8* %171
 %173 = zext i8 %172 to i32
 %174 = shl i32 %173, 8
 %175 = or i32 %168, %174
 %176 = load i8*, i8** %83
 %177 = getelementptr i8, i8* %176, i64 0
 %178 = getelementptr i8, i8* %177, i64 2
 %179 = load i8, i8* %178
 %180 = zext i8 %179 to i32
 %181 = shl i32 %180, 16
 %182 = or i32 %175, %181
 %183 = load i8*, i8** %83
 %184 = getelementptr i8, i8* %183, i64 0
 %185 = getelementptr i8, i8* %184, i64 3
 %186 = load i8, i8* %185
 %187 = zext i8 %186 to i32
 %188 = shl i32 %187, 24
 %189 = or i32 %182, %188
 %190 = icmp ne i32 %189, 101010256
 br i1 %190, label %191, label %200
191:
 %192 = load i8*, i8** %73
 store i8* %192, i8** %24
 store i32 8, i32* %25
 %193 = load i8*, i8** %24
 %194 = icmp ne i8* %193, null
 br i1 %194, label %195, label %199
195:
 %196 = load i32, i32* %25
 %197 = load i8*, i8** %24
 %198 = getelementptr %struct.mz_zip_archive, i8* %197, i32 0, i32 5
 store i32 %196, i32* %198
 br label %199
199:
 store i32 0, i32* %72
 br label %1746
200:
 %201 = load i64, i64* %80
 %202 = icmp sge i64 %201, 76
 br i1 %202, label %203, label %367
203:
 %204 = load i8*, i8** %73
 %205 = getelementptr %struct.mz_zip_archive, i8* %204, i32 0, i32 11
 %206 = load i8*, i8** %205
 %207 = load i8*, i8** %73
 %208 = getelementptr %struct.mz_zip_archive, i8* %207, i32 0, i32 14
 %209 = load i8*, i8** %208
 %210 = load i64, i64* %80
 %211 = sub i64 %210, 20
 %212 = load i8*, i8** %86
 %213 = call i64 %206 (i8* %209, i64 %211, i8* %212, i64 20)
 %214 = icmp eq i64 %213, 20
 br i1 %214, label %215, label %366
215:
 %216 = load i8*, i8** %86
 %217 = getelementptr i8, i8* %216, i64 0
 %218 = getelementptr i8, i8* %217, i64 0
 %219 = load i8, i8* %218
 %220 = zext i8 %219 to i32
 %221 = load i8*, i8** %86
 %222 = getelementptr i8, i8* %221, i64 0
 %223 = getelementptr i8, i8* %222, i64 1
 %224 = load i8, i8* %223
 %225 = zext i8 %224 to i32
 %226 = shl i32 %225, 8
 %227 = or i32 %220, %226
 %228 = load i8*, i8** %86
 %229 = getelementptr i8, i8* %228, i64 0
 %230 = getelementptr i8, i8* %229, i64 2
 %231 = load i8, i8* %230
 %232 = zext i8 %231 to i32
 %233 = shl i32 %232, 16
 %234 = or i32 %227, %233
 %235 = load i8*, i8** %86
 %236 = getelementptr i8, i8* %235, i64 0
 %237 = getelementptr i8, i8* %236, i64 3
 %238 = load i8, i8* %237
 %239 = zext i8 %238 to i32
 %240 = shl i32 %239, 24
 %241 = or i32 %234, %240
 %242 = icmp eq i32 %241, 117853008
 br i1 %242, label %243, label %365
243:
 %244 = load i8*, i8** %86
 %245 = getelementptr i8, i8* %244, i64 8
 %246 = getelementptr i8, i8* %245, i64 0
 %247 = load i8, i8* %246
 %248 = zext i8 %247 to i32
 %249 = load i8*, i8** %86
 %250 = getelementptr i8, i8* %249, i64 8
 %251 = getelementptr i8, i8* %250, i64 1
 %252 = load i8, i8* %251
 %253 = zext i8 %252 to i32
 %254 = shl i32 %253, 8
 %255 = or i32 %248, %254
 %256 = load i8*, i8** %86
 %257 = getelementptr i8, i8* %256, i64 8
 %258 = getelementptr i8, i8* %257, i64 2
 %259 = load i8, i8* %258
 %260 = zext i8 %259 to i32
 %261 = shl i32 %260, 16
 %262 = or i32 %255, %261
 %263 = load i8*, i8** %86
 %264 = getelementptr i8, i8* %263, i64 8
 %265 = getelementptr i8, i8* %264, i64 3
 %266 = load i8, i8* %265
 %267 = zext i8 %266 to i32
 %268 = shl i32 %267, 24
 %269 = or i32 %262, %268
 %270 = zext i32 %269 to i64
 %271 = load i8*, i8** %86
 %272 = getelementptr i8, i8* %271, i64 8
 %273 = getelementptr i8, i8* %272, i64 4
 %274 = getelementptr i8, i8* %273, i64 0
 %275 = load i8, i8* %274
 %276 = zext i8 %275 to i32
 %277 = load i8*, i8** %86
 %278 = getelementptr i8, i8* %277, i64 8
 %279 = getelementptr i8, i8* %278, i64 4
 %280 = getelementptr i8, i8* %279, i64 1
 %281 = load i8, i8* %280
 %282 = zext i8 %281 to i32
 %283 = shl i32 %282, 8
 %284 = or i32 %276, %283
 %285 = load i8*, i8** %86
 %286 = getelementptr i8, i8* %285, i64 8
 %287 = getelementptr i8, i8* %286, i64 4
 %288 = getelementptr i8, i8* %287, i64 2
 %289 = load i8, i8* %288
 %290 = zext i8 %289 to i32
 %291 = shl i32 %290, 16
 %292 = or i32 %284, %291
 %293 = load i8*, i8** %86
 %294 = getelementptr i8, i8* %293, i64 8
 %295 = getelementptr i8, i8* %294, i64 4
 %296 = getelementptr i8, i8* %295, i64 3
 %297 = load i8, i8* %296
 %298 = zext i8 %297 to i32
 %299 = shl i32 %298, 24
 %300 = or i32 %292, %299
 %301 = zext i32 %300 to i64
 %302 = shl i64 %301, 32
 %303 = or i64 %270, %302
 store i64 %303, i64* %89
 %304 = load i64, i64* %89
 %305 = load i8*, i8** %73
 %306 = getelementptr %struct.mz_zip_archive, i8* %305, i32 0, i32 0
 %307 = load i64, i64* %306
 %308 = sub i64 %307, 56
 %309 = icmp ugt i64 %304, %308
 br i1 %309, label %310, label %319
310:
 %311 = load i8*, i8** %73
 store i8* %311, i8** %26
 store i32 8, i32* %27
 %312 = load i8*, i8** %26
 %313 = icmp ne i8* %312, null
 br i1 %313, label %314, label %318
314:
 %315 = load i32, i32* %27
 %316 = load i8*, i8** %26
 %317 = getelementptr %struct.mz_zip_archive, i8* %316, i32 0, i32 5
 store i32 %315, i32* %317
 br label %318
318:
 store i32 0, i32* %72
 br label %1746
319:
 %320 = load i8*, i8** %73
 %321 = getelementptr %struct.mz_zip_archive, i8* %320, i32 0, i32 11
 %322 = load i8*, i8** %321
 %323 = load i8*, i8** %73
 %324 = getelementptr %struct.mz_zip_archive, i8* %323, i32 0, i32 14
 %325 = load i8*, i8** %324
 %326 = load i64, i64* %89
 %327 = load i8*, i8** %88
 %328 = call i64 %322 (i8* %325, i64 %326, i8* %327, i64 56)
 %329 = icmp eq i64 %328, 56
 br i1 %329, label %330, label %364
330:
 %331 = load i8*, i8** %88
 %332 = getelementptr i8, i8* %331, i64 0
 %333 = getelementptr i8, i8* %332, i64 0
 %334 = load i8, i8* %333
 %335 = zext i8 %334 to i32
 %336 = load i8*, i8** %88
 %337 = getelementptr i8, i8* %336, i64 0
 %338 = getelementptr i8, i8* %337, i64 1
 %339 = load i8, i8* %338
 %340 = zext i8 %339 to i32
 %341 = shl i32 %340, 8
 %342 = or i32 %335, %341
 %343 = load i8*, i8** %88
 %344 = getelementptr i8, i8* %343, i64 0
 %345 = getelementptr i8, i8* %344, i64 2
 %346 = load i8, i8* %345
 %347 = zext i8 %346 to i32
 %348 = shl i32 %347, 16
 %349 = or i32 %342, %348
 %350 = load i8*, i8** %88
 %351 = getelementptr i8, i8* %350, i64 0
 %352 = getelementptr i8, i8* %351, i64 3
 %353 = load i8, i8* %352
 %354 = zext i8 %353 to i32
 %355 = shl i32 %354, 24
 %356 = or i32 %349, %355
 %357 = icmp eq i32 %356, 101075792
 br i1 %357, label %358, label %363
358:
 %359 = load i8*, i8** %73
 %360 = getelementptr %struct.mz_zip_archive, i8* %359, i32 0, i32 15
 %361 = load i8*, i8** %360
 %362 = getelementptr %struct.mz_zip_internal_state_tag, i8* %361, i32 0, i32 4
 store i32 1, i32* %362
 br label %363
363:
 br label %364
364:
 br label %365
365:
 br label %366
366:
 br label %367
367:
 %368 = load i8*, i8** %83
 %369 = getelementptr i8, i8* %368, i64 10
 %370 = getelementptr i8, i8* %369, i64 0
 %371 = load i8, i8* %370
 %372 = zext i8 %371 to i32
 %373 = load i8*, i8** %83
 %374 = getelementptr i8, i8* %373, i64 10
 %375 = getelementptr i8, i8* %374, i64 1
 %376 = load i8, i8* %375
 %377 = zext i8 %376 to i32
 %378 = shl i32 %377, 8
 %379 = or i32 %372, %378
 %380 = load i8*, i8** %73
 %381 = getelementptr %struct.mz_zip_archive, i8* %380, i32 0, i32 2
 store i32 %379, i32* %381
 %382 = load i8*, i8** %83
 %383 = getelementptr i8, i8* %382, i64 8
 %384 = getelementptr i8, i8* %383, i64 0
 %385 = load i8, i8* %384
 %386 = zext i8 %385 to i32
 %387 = load i8*, i8** %83
 %388 = getelementptr i8, i8* %387, i64 8
 %389 = getelementptr i8, i8* %388, i64 1
 %390 = load i8, i8* %389
 %391 = zext i8 %390 to i32
 %392 = shl i32 %391, 8
 %393 = or i32 %386, %392
 store i32 %393, i32* %76
 %394 = load i8*, i8** %83
 %395 = getelementptr i8, i8* %394, i64 4
 %396 = getelementptr i8, i8* %395, i64 0
 %397 = load i8, i8* %396
 %398 = zext i8 %397 to i32
 %399 = load i8*, i8** %83
 %400 = getelementptr i8, i8* %399, i64 4
 %401 = getelementptr i8, i8* %400, i64 1
 %402 = load i8, i8* %401
 %403 = zext i8 %402 to i32
 %404 = shl i32 %403, 8
 %405 = or i32 %398, %404
 store i32 %405, i32* %77
 %406 = load i8*, i8** %83
 %407 = getelementptr i8, i8* %406, i64 6
 %408 = getelementptr i8, i8* %407, i64 0
 %409 = load i8, i8* %408
 %410 = zext i8 %409 to i32
 %411 = load i8*, i8** %83
 %412 = getelementptr i8, i8* %411, i64 6
 %413 = getelementptr i8, i8* %412, i64 1
 %414 = load i8, i8* %413
 %415 = zext i8 %414 to i32
 %416 = shl i32 %415, 8
 %417 = or i32 %410, %416
 store i32 %417, i32* %78
 %418 = load i8*, i8** %83
 %419 = getelementptr i8, i8* %418, i64 12
 %420 = getelementptr i8, i8* %419, i64 0
 %421 = load i8, i8* %420
 %422 = zext i8 %421 to i32
 %423 = load i8*, i8** %83
 %424 = getelementptr i8, i8* %423, i64 12
 %425 = getelementptr i8, i8* %424, i64 1
 %426 = load i8, i8* %425
 %427 = zext i8 %426 to i32
 %428 = shl i32 %427, 8
 %429 = or i32 %422, %428
 %430 = load i8*, i8** %83
 %431 = getelementptr i8, i8* %430, i64 12
 %432 = getelementptr i8, i8* %431, i64 2
 %433 = load i8, i8* %432
 %434 = zext i8 %433 to i32
 %435 = shl i32 %434, 16
 %436 = or i32 %429, %435
 %437 = load i8*, i8** %83
 %438 = getelementptr i8, i8* %437, i64 12
 %439 = getelementptr i8, i8* %438, i64 3
 %440 = load i8, i8* %439
 %441 = zext i8 %440 to i32
 %442 = shl i32 %441, 24
 %443 = or i32 %436, %442
 store i32 %443, i32* %75
 %444 = load i8*, i8** %83
 %445 = getelementptr i8, i8* %444, i64 16
 %446 = getelementptr i8, i8* %445, i64 0
 %447 = load i8, i8* %446
 %448 = zext i8 %447 to i32
 %449 = load i8*, i8** %83
 %450 = getelementptr i8, i8* %449, i64 16
 %451 = getelementptr i8, i8* %450, i64 1
 %452 = load i8, i8* %451
 %453 = zext i8 %452 to i32
 %454 = shl i32 %453, 8
 %455 = or i32 %448, %454
 %456 = load i8*, i8** %83
 %457 = getelementptr i8, i8* %456, i64 16
 %458 = getelementptr i8, i8* %457, i64 2
 %459 = load i8, i8* %458
 %460 = zext i8 %459 to i32
 %461 = shl i32 %460, 16
 %462 = or i32 %455, %461
 %463 = load i8*, i8** %83
 %464 = getelementptr i8, i8* %463, i64 16
 %465 = getelementptr i8, i8* %464, i64 3
 %466 = load i8, i8* %465
 %467 = zext i8 %466 to i32
 %468 = shl i32 %467, 24
 %469 = or i32 %462, %468
 %470 = zext i32 %469 to i64
 store i64 %470, i64* %79
 %471 = load i8*, i8** %73
 %472 = getelementptr %struct.mz_zip_archive, i8* %471, i32 0, i32 15
 %473 = load i8*, i8** %472
 %474 = getelementptr %struct.mz_zip_internal_state_tag, i8* %473, i32 0, i32 4
 %475 = load i32, i32* %474
 %476 = icmp ne i32 %475, 0
 br i1 %476, label %477, label %924
477:
 %478 = load i8*, i8** %86
 %479 = getelementptr i8, i8* %478, i64 16
 %480 = getelementptr i8, i8* %479, i64 0
 %481 = load i8, i8* %480
 %482 = zext i8 %481 to i32
 %483 = load i8*, i8** %86
 %484 = getelementptr i8, i8* %483, i64 16
 %485 = getelementptr i8, i8* %484, i64 1
 %486 = load i8, i8* %485
 %487 = zext i8 %486 to i32
 %488 = shl i32 %487, 8
 %489 = or i32 %482, %488
 %490 = load i8*, i8** %86
 %491 = getelementptr i8, i8* %490, i64 16
 %492 = getelementptr i8, i8* %491, i64 2
 %493 = load i8, i8* %492
 %494 = zext i8 %493 to i32
 %495 = shl i32 %494, 16
 %496 = or i32 %489, %495
 %497 = load i8*, i8** %86
 %498 = getelementptr i8, i8* %497, i64 16
 %499 = getelementptr i8, i8* %498, i64 3
 %500 = load i8, i8* %499
 %501 = zext i8 %500 to i32
 %502 = shl i32 %501, 24
 %503 = or i32 %496, %502
 store i32 %503, i32* %90
 %504 = load i8*, i8** %88
 %505 = getelementptr i8, i8* %504, i64 32
 %506 = getelementptr i8, i8* %505, i64 0
 %507 = load i8, i8* %506
 %508 = zext i8 %507 to i32
 %509 = load i8*, i8** %88
 %510 = getelementptr i8, i8* %509, i64 32
 %511 = getelementptr i8, i8* %510, i64 1
 %512 = load i8, i8* %511
 %513 = zext i8 %512 to i32
 %514 = shl i32 %513, 8
 %515 = or i32 %508, %514
 %516 = load i8*, i8** %88
 %517 = getelementptr i8, i8* %516, i64 32
 %518 = getelementptr i8, i8* %517, i64 2
 %519 = load i8, i8* %518
 %520 = zext i8 %519 to i32
 %521 = shl i32 %520, 16
 %522 = or i32 %515, %521
 %523 = load i8*, i8** %88
 %524 = getelementptr i8, i8* %523, i64 32
 %525 = getelementptr i8, i8* %524, i64 3
 %526 = load i8, i8* %525
 %527 = zext i8 %526 to i32
 %528 = shl i32 %527, 24
 %529 = or i32 %522, %528
 %530 = zext i32 %529 to i64
 %531 = load i8*, i8** %88
 %532 = getelementptr i8, i8* %531, i64 32
 %533 = getelementptr i8, i8* %532, i64 4
 %534 = getelementptr i8, i8* %533, i64 0
 %535 = load i8, i8* %534
 %536 = zext i8 %535 to i32
 %537 = load i8*, i8** %88
 %538 = getelementptr i8, i8* %537, i64 32
 %539 = getelementptr i8, i8* %538, i64 4
 %540 = getelementptr i8, i8* %539, i64 1
 %541 = load i8, i8* %540
 %542 = zext i8 %541 to i32
 %543 = shl i32 %542, 8
 %544 = or i32 %536, %543
 %545 = load i8*, i8** %88
 %546 = getelementptr i8, i8* %545, i64 32
 %547 = getelementptr i8, i8* %546, i64 4
 %548 = getelementptr i8, i8* %547, i64 2
 %549 = load i8, i8* %548
 %550 = zext i8 %549 to i32
 %551 = shl i32 %550, 16
 %552 = or i32 %544, %551
 %553 = load i8*, i8** %88
 %554 = getelementptr i8, i8* %553, i64 32
 %555 = getelementptr i8, i8* %554, i64 4
 %556 = getelementptr i8, i8* %555, i64 3
 %557 = load i8, i8* %556
 %558 = zext i8 %557 to i32
 %559 = shl i32 %558, 24
 %560 = or i32 %552, %559
 %561 = zext i32 %560 to i64
 %562 = shl i64 %561, 32
 %563 = or i64 %530, %562
 store i64 %563, i64* %91
 %564 = load i8*, i8** %88
 %565 = getelementptr i8, i8* %564, i64 24
 %566 = getelementptr i8, i8* %565, i64 0
 %567 = load i8, i8* %566
 %568 = zext i8 %567 to i32
 %569 = load i8*, i8** %88
 %570 = getelementptr i8, i8* %569, i64 24
 %571 = getelementptr i8, i8* %570, i64 1
 %572 = load i8, i8* %571
 %573 = zext i8 %572 to i32
 %574 = shl i32 %573, 8
 %575 = or i32 %568, %574
 %576 = load i8*, i8** %88
 %577 = getelementptr i8, i8* %576, i64 24
 %578 = getelementptr i8, i8* %577, i64 2
 %579 = load i8, i8* %578
 %580 = zext i8 %579 to i32
 %581 = shl i32 %580, 16
 %582 = or i32 %575, %581
 %583 = load i8*, i8** %88
 %584 = getelementptr i8, i8* %583, i64 24
 %585 = getelementptr i8, i8* %584, i64 3
 %586 = load i8, i8* %585
 %587 = zext i8 %586 to i32
 %588 = shl i32 %587, 24
 %589 = or i32 %582, %588
 %590 = zext i32 %589 to i64
 %591 = load i8*, i8** %88
 %592 = getelementptr i8, i8* %591, i64 24
 %593 = getelementptr i8, i8* %592, i64 4
 %594 = getelementptr i8, i8* %593, i64 0
 %595 = load i8, i8* %594
 %596 = zext i8 %595 to i32
 %597 = load i8*, i8** %88
 %598 = getelementptr i8, i8* %597, i64 24
 %599 = getelementptr i8, i8* %598, i64 4
 %600 = getelementptr i8, i8* %599, i64 1
 %601 = load i8, i8* %600
 %602 = zext i8 %601 to i32
 %603 = shl i32 %602, 8
 %604 = or i32 %596, %603
 %605 = load i8*, i8** %88
 %606 = getelementptr i8, i8* %605, i64 24
 %607 = getelementptr i8, i8* %606, i64 4
 %608 = getelementptr i8, i8* %607, i64 2
 %609 = load i8, i8* %608
 %610 = zext i8 %609 to i32
 %611 = shl i32 %610, 16
 %612 = or i32 %604, %611
 %613 = load i8*, i8** %88
 %614 = getelementptr i8, i8* %613, i64 24
 %615 = getelementptr i8, i8* %614, i64 4
 %616 = getelementptr i8, i8* %615, i64 3
 %617 = load i8, i8* %616
 %618 = zext i8 %617 to i32
 %619 = shl i32 %618, 24
 %620 = or i32 %612, %619
 %621 = zext i32 %620 to i64
 %622 = shl i64 %621, 32
 %623 = or i64 %590, %622
 store i64 %623, i64* %92
 %624 = load i8*, i8** %88
 %625 = getelementptr i8, i8* %624, i64 4
 %626 = getelementptr i8, i8* %625, i64 0
 %627 = load i8, i8* %626
 %628 = zext i8 %627 to i32
 %629 = load i8*, i8** %88
 %630 = getelementptr i8, i8* %629, i64 4
 %631 = getelementptr i8, i8* %630, i64 1
 %632 = load i8, i8* %631
 %633 = zext i8 %632 to i32
 %634 = shl i32 %633, 8
 %635 = or i32 %628, %634
 %636 = load i8*, i8** %88
 %637 = getelementptr i8, i8* %636, i64 4
 %638 = getelementptr i8, i8* %637, i64 2
 %639 = load i8, i8* %638
 %640 = zext i8 %639 to i32
 %641 = shl i32 %640, 16
 %642 = or i32 %635, %641
 %643 = load i8*, i8** %88
 %644 = getelementptr i8, i8* %643, i64 4
 %645 = getelementptr i8, i8* %644, i64 3
 %646 = load i8, i8* %645
 %647 = zext i8 %646 to i32
 %648 = shl i32 %647, 24
 %649 = or i32 %642, %648
 %650 = zext i32 %649 to i64
 %651 = load i8*, i8** %88
 %652 = getelementptr i8, i8* %651, i64 4
 %653 = getelementptr i8, i8* %652, i64 4
 %654 = getelementptr i8, i8* %653, i64 0
 %655 = load i8, i8* %654
 %656 = zext i8 %655 to i32
 %657 = load i8*, i8** %88
 %658 = getelementptr i8, i8* %657, i64 4
 %659 = getelementptr i8, i8* %658, i64 4
 %660 = getelementptr i8, i8* %659, i64 1
 %661 = load i8, i8* %660
 %662 = zext i8 %661 to i32
 %663 = shl i32 %662, 8
 %664 = or i32 %656, %663
 %665 = load i8*, i8** %88
 %666 = getelementptr i8, i8* %665, i64 4
 %667 = getelementptr i8, i8* %666, i64 4
 %668 = getelementptr i8, i8* %667, i64 2
 %669 = load i8, i8* %668
 %670 = zext i8 %669 to i32
 %671 = shl i32 %670, 16
 %672 = or i32 %664, %671
 %673 = load i8*, i8** %88
 %674 = getelementptr i8, i8* %673, i64 4
 %675 = getelementptr i8, i8* %674, i64 4
 %676 = getelementptr i8, i8* %675, i64 3
 %677 = load i8, i8* %676
 %678 = zext i8 %677 to i32
 %679 = shl i32 %678, 24
 %680 = or i32 %672, %679
 %681 = zext i32 %680 to i64
 %682 = shl i64 %681, 32
 %683 = or i64 %650, %682
 store i64 %683, i64* %93
 %684 = load i8*, i8** %88
 %685 = getelementptr i8, i8* %684, i64 40
 %686 = getelementptr i8, i8* %685, i64 0
 %687 = load i8, i8* %686
 %688 = zext i8 %687 to i32
 %689 = load i8*, i8** %88
 %690 = getelementptr i8, i8* %689, i64 40
 %691 = getelementptr i8, i8* %690, i64 1
 %692 = load i8, i8* %691
 %693 = zext i8 %692 to i32
 %694 = shl i32 %693, 8
 %695 = or i32 %688, %694
 %696 = load i8*, i8** %88
 %697 = getelementptr i8, i8* %696, i64 40
 %698 = getelementptr i8, i8* %697, i64 2
 %699 = load i8, i8* %698
 %700 = zext i8 %699 to i32
 %701 = shl i32 %700, 16
 %702 = or i32 %695, %701
 %703 = load i8*, i8** %88
 %704 = getelementptr i8, i8* %703, i64 40
 %705 = getelementptr i8, i8* %704, i64 3
 %706 = load i8, i8* %705
 %707 = zext i8 %706 to i32
 %708 = shl i32 %707, 24
 %709 = or i32 %702, %708
 %710 = zext i32 %709 to i64
 %711 = load i8*, i8** %88
 %712 = getelementptr i8, i8* %711, i64 40
 %713 = getelementptr i8, i8* %712, i64 4
 %714 = getelementptr i8, i8* %713, i64 0
 %715 = load i8, i8* %714
 %716 = zext i8 %715 to i32
 %717 = load i8*, i8** %88
 %718 = getelementptr i8, i8* %717, i64 40
 %719 = getelementptr i8, i8* %718, i64 4
 %720 = getelementptr i8, i8* %719, i64 1
 %721 = load i8, i8* %720
 %722 = zext i8 %721 to i32
 %723 = shl i32 %722, 8
 %724 = or i32 %716, %723
 %725 = load i8*, i8** %88
 %726 = getelementptr i8, i8* %725, i64 40
 %727 = getelementptr i8, i8* %726, i64 4
 %728 = getelementptr i8, i8* %727, i64 2
 %729 = load i8, i8* %728
 %730 = zext i8 %729 to i32
 %731 = shl i32 %730, 16
 %732 = or i32 %724, %731
 %733 = load i8*, i8** %88
 %734 = getelementptr i8, i8* %733, i64 40
 %735 = getelementptr i8, i8* %734, i64 4
 %736 = getelementptr i8, i8* %735, i64 3
 %737 = load i8, i8* %736
 %738 = zext i8 %737 to i32
 %739 = shl i32 %738, 24
 %740 = or i32 %732, %739
 %741 = zext i32 %740 to i64
 %742 = shl i64 %741, 32
 %743 = or i64 %710, %742
 store i64 %743, i64* %94
 %744 = load i64, i64* %93
 %745 = icmp ult i64 %744, 44
 br i1 %745, label %746, label %755
746:
 %747 = load i8*, i8** %73
 store i8* %747, i8** %28
 store i32 9, i32* %29
 %748 = load i8*, i8** %28
 %749 = icmp ne i8* %748, null
 br i1 %749, label %750, label %754
750:
 %751 = load i32, i32* %29
 %752 = load i8*, i8** %28
 %753 = getelementptr %struct.mz_zip_archive, i8* %752, i32 0, i32 5
 store i32 %751, i32* %753
 br label %754
754:
 store i32 0, i32* %72
 br label %1746
755:
 %756 = load i32, i32* %90
 %757 = icmp ne i32 %756, 1
 br i1 %757, label %758, label %767
758:
 %759 = load i8*, i8** %73
 store i8* %759, i8** %30
 store i32 10, i32* %31
 %760 = load i8*, i8** %30
 %761 = icmp ne i8* %760, null
 br i1 %761, label %762, label %766
762:
 %763 = load i32, i32* %31
 %764 = load i8*, i8** %30
 %765 = getelementptr %struct.mz_zip_archive, i8* %764, i32 0, i32 5
 store i32 %763, i32* %765
 br label %766
766:
 store i32 0, i32* %72
 br label %1746
767:
 %768 = load i64, i64* %91
 %769 = icmp ugt i64 %768, 4294967295
 br i1 %769, label %770, label %779
770:
 %771 = load i8*, i8** %73
 store i8* %771, i8** %32
 store i32 2, i32* %33
 %772 = load i8*, i8** %32
 %773 = icmp ne i8* %772, null
 br i1 %773, label %774, label %778
774:
 %775 = load i32, i32* %33
 %776 = load i8*, i8** %32
 %777 = getelementptr %struct.mz_zip_archive, i8* %776, i32 0, i32 5
 store i32 %775, i32* %777
 br label %778
778:
 store i32 0, i32* %72
 br label %1746
779:
 %780 = load i64, i64* %91
 %781 = trunc i64 %780 to i32
 %782 = load i8*, i8** %73
 %783 = getelementptr %struct.mz_zip_archive, i8* %782, i32 0, i32 2
 store i32 %781, i32* %783
 %784 = load i64, i64* %92
 %785 = icmp ugt i64 %784, 4294967295
 br i1 %785, label %786, label %795
786:
 %787 = load i8*, i8** %73
 store i8* %787, i8** %34
 store i32 2, i32* %35
 %788 = load i8*, i8** %34
 %789 = icmp ne i8* %788, null
 br i1 %789, label %790, label %794
790:
 %791 = load i32, i32* %35
 %792 = load i8*, i8** %34
 %793 = getelementptr %struct.mz_zip_archive, i8* %792, i32 0, i32 5
 store i32 %791, i32* %793
 br label %794
794:
 store i32 0, i32* %72
 br label %1746
795:
 %796 = load i64, i64* %92
 %797 = trunc i64 %796 to i32
 store i32 %797, i32* %76
 %798 = load i64, i64* %94
 %799 = icmp ugt i64 %798, 4294967295
 br i1 %799, label %800, label %809
800:
 %801 = load i8*, i8** %73
 store i8* %801, i8** %36
 store i32 15, i32* %37
 %802 = load i8*, i8** %36
 %803 = icmp ne i8* %802, null
 br i1 %803, label %804, label %808
804:
 %805 = load i32, i32* %37
 %806 = load i8*, i8** %36
 %807 = getelementptr %struct.mz_zip_archive, i8* %806, i32 0, i32 5
 store i32 %805, i32* %807
 br label %808
808:
 store i32 0, i32* %72
 br label %1746
809:
 %810 = load i64, i64* %94
 %811 = trunc i64 %810 to i32
 store i32 %811, i32* %75
 %812 = load i8*, i8** %88
 %813 = getelementptr i8, i8* %812, i64 16
 %814 = getelementptr i8, i8* %813, i64 0
 %815 = load i8, i8* %814
 %816 = zext i8 %815 to i32
 %817 = load i8*, i8** %88
 %818 = getelementptr i8, i8* %817, i64 16
 %819 = getelementptr i8, i8* %818, i64 1
 %820 = load i8, i8* %819
 %821 = zext i8 %820 to i32
 %822 = shl i32 %821, 8
 %823 = or i32 %816, %822
 %824 = load i8*, i8** %88
 %825 = getelementptr i8, i8* %824, i64 16
 %826 = getelementptr i8, i8* %825, i64 2
 %827 = load i8, i8* %826
 %828 = zext i8 %827 to i32
 %829 = shl i32 %828, 16
 %830 = or i32 %823, %829
 %831 = load i8*, i8** %88
 %832 = getelementptr i8, i8* %831, i64 16
 %833 = getelementptr i8, i8* %832, i64 3
 %834 = load i8, i8* %833
 %835 = zext i8 %834 to i32
 %836 = shl i32 %835, 24
 %837 = or i32 %830, %836
 store i32 %837, i32* %77
 %838 = load i8*, i8** %88
 %839 = getelementptr i8, i8* %838, i64 20
 %840 = getelementptr i8, i8* %839, i64 0
 %841 = load i8, i8* %840
 %842 = zext i8 %841 to i32
 %843 = load i8*, i8** %88
 %844 = getelementptr i8, i8* %843, i64 20
 %845 = getelementptr i8, i8* %844, i64 1
 %846 = load i8, i8* %845
 %847 = zext i8 %846 to i32
 %848 = shl i32 %847, 8
 %849 = or i32 %842, %848
 %850 = load i8*, i8** %88
 %851 = getelementptr i8, i8* %850, i64 20
 %852 = getelementptr i8, i8* %851, i64 2
 %853 = load i8, i8* %852
 %854 = zext i8 %853 to i32
 %855 = shl i32 %854, 16
 %856 = or i32 %849, %855
 %857 = load i8*, i8** %88
 %858 = getelementptr i8, i8* %857, i64 20
 %859 = getelementptr i8, i8* %858, i64 3
 %860 = load i8, i8* %859
 %861 = zext i8 %860 to i32
 %862 = shl i32 %861, 24
 %863 = or i32 %856, %862
 store i32 %863, i32* %78
 %864 = load i8*, i8** %88
 %865 = getelementptr i8, i8* %864, i64 48
 %866 = getelementptr i8, i8* %865, i64 0
 %867 = load i8, i8* %866
 %868 = zext i8 %867 to i32
 %869 = load i8*, i8** %88
 %870 = getelementptr i8, i8* %869, i64 48
 %871 = getelementptr i8, i8* %870, i64 1
 %872 = load i8, i8* %871
 %873 = zext i8 %872 to i32
 %874 = shl i32 %873, 8
 %875 = or i32 %868, %874
 %876 = load i8*, i8** %88
 %877 = getelementptr i8, i8* %876, i64 48
 %878 = getelementptr i8, i8* %877, i64 2
 %879 = load i8, i8* %878
 %880 = zext i8 %879 to i32
 %881 = shl i32 %880, 16
 %882 = or i32 %875, %881
 %883 = load i8*, i8** %88
 %884 = getelementptr i8, i8* %883, i64 48
 %885 = getelementptr i8, i8* %884, i64 3
 %886 = load i8, i8* %885
 %887 = zext i8 %886 to i32
 %888 = shl i32 %887, 24
 %889 = or i32 %882, %888
 %890 = zext i32 %889 to i64
 %891 = load i8*, i8** %88
 %892 = getelementptr i8, i8* %891, i64 48
 %893 = getelementptr i8, i8* %892, i64 4
 %894 = getelementptr i8, i8* %893, i64 0
 %895 = load i8, i8* %894
 %896 = zext i8 %895 to i32
 %897 = load i8*, i8** %88
 %898 = getelementptr i8, i8* %897, i64 48
 %899 = getelementptr i8, i8* %898, i64 4
 %900 = getelementptr i8, i8* %899, i64 1
 %901 = load i8, i8* %900
 %902 = zext i8 %901 to i32
 %903 = shl i32 %902, 8
 %904 = or i32 %896, %903
 %905 = load i8*, i8** %88
 %906 = getelementptr i8, i8* %905, i64 48
 %907 = getelementptr i8, i8* %906, i64 4
 %908 = getelementptr i8, i8* %907, i64 2
 %909 = load i8, i8* %908
 %910 = zext i8 %909 to i32
 %911 = shl i32 %910, 16
 %912 = or i32 %904, %911
 %913 = load i8*, i8** %88
 %914 = getelementptr i8, i8* %913, i64 48
 %915 = getelementptr i8, i8* %914, i64 4
 %916 = getelementptr i8, i8* %915, i64 3
 %917 = load i8, i8* %916
 %918 = zext i8 %917 to i32
 %919 = shl i32 %918, 24
 %920 = or i32 %912, %919
 %921 = zext i32 %920 to i64
 %922 = shl i64 %921, 32
 %923 = or i64 %890, %922
 store i64 %923, i64* %79
 br label %924
924:
 %925 = load i8*, i8** %73
 %926 = getelementptr %struct.mz_zip_archive, i8* %925, i32 0, i32 2
 %927 = load i32, i32* %926
 %928 = load i32, i32* %76
 %929 = icmp ne i32 %927, %928
 br i1 %929, label %930, label %939
930:
 %931 = load i8*, i8** %73
 store i8* %931, i8** %38
 store i32 10, i32* %39
 %932 = load i8*, i8** %38
 %933 = icmp ne i8* %932, null
 br i1 %933, label %934, label %938
934:
 %935 = load i32, i32* %39
 %936 = load i8*, i8** %38
 %937 = getelementptr %struct.mz_zip_archive, i8* %936, i32 0, i32 5
 store i32 %935, i32* %937
 br label %938
938:
 store i32 0, i32* %72
 br label %1746
939:
 %940 = load i32, i32* %77
 %941 = load i32, i32* %78
 %942 = or i32 %940, %941
 %943 = icmp ne i32 %942, 0
 br i1 %943, label %944, label %959
944:
 %945 = load i32, i32* %77
 %946 = icmp ne i32 %945, 1
 br i1 %946, label %950, label %947
947:
 %948 = load i32, i32* %78
 %949 = icmp ne i32 %948, 1
 br i1 %949, label %950, label %959
950:
 %951 = load i8*, i8** %73
 store i8* %951, i8** %40
 store i32 10, i32* %41
 %952 = load i8*, i8** %40
 %953 = icmp ne i8* %952, null
 br i1 %953, label %954, label %958
954:
 %955 = load i32, i32* %41
 %956 = load i8*, i8** %40
 %957 = getelementptr %struct.mz_zip_archive, i8* %956, i32 0, i32 5
 store i32 %955, i32* %957
 br label %958
958:
 store i32 0, i32* %72
 br label %1746
959:
 %960 = load i32, i32* %75
 %961 = zext i32 %960 to i64
 %962 = load i8*, i8** %73
 %963 = getelementptr %struct.mz_zip_archive, i8* %962, i32 0, i32 2
 %964 = load i32, i32* %963
 %965 = zext i32 %964 to i64
 %966 = mul i64 %965, 46
 %967 = icmp ult i64 %961, %966
 br i1 %967, label %968, label %977
968:
 %969 = load i8*, i8** %73
 store i8* %969, i8** %42
 store i32 9, i32* %43
 %970 = load i8*, i8** %42
 %971 = icmp ne i8* %970, null
 br i1 %971, label %972, label %976
972:
 %973 = load i32, i32* %43
 %974 = load i8*, i8** %42
 %975 = getelementptr %struct.mz_zip_archive, i8* %974, i32 0, i32 5
 store i32 %973, i32* %975
 br label %976
976:
 store i32 0, i32* %72
 br label %1746
977:
 %978 = load i64, i64* %79
 %979 = load i32, i32* %75
 %980 = zext i32 %979 to i64
 %981 = add i64 %978, %980
 %982 = load i8*, i8** %73
 %983 = getelementptr %struct.mz_zip_archive, i8* %982, i32 0, i32 0
 %984 = load i64, i64* %983
 %985 = icmp ugt i64 %981, %984
 br i1 %985, label %986, label %995
986:
 %987 = load i8*, i8** %73
 store i8* %987, i8** %44
 store i32 9, i32* %45
 %988 = load i8*, i8** %44
 %989 = icmp ne i8* %988, null
 br i1 %989, label %990, label %994
990:
 %991 = load i32, i32* %45
 %992 = load i8*, i8** %44
 %993 = getelementptr %struct.mz_zip_archive, i8* %992, i32 0, i32 5
 store i32 %991, i32* %993
 br label %994
994:
 store i32 0, i32* %72
 br label %1746
995:
 %996 = load i64, i64* %79
 %997 = load i8*, i8** %73
 %998 = getelementptr %struct.mz_zip_archive, i8* %997, i32 0, i32 1
 store i64 %996, i64* %998
 %999 = load i8*, i8** %73
 %1000 = getelementptr %struct.mz_zip_archive, i8* %999, i32 0, i32 2
 %1001 = load i32, i32* %1000
 %1002 = icmp ne i32 %1001, 0
 br i1 %1002, label %1003, label %1740
1003:
 %1004 = load i8*, i8** %73
 %1005 = load i8*, i8** %73
 %1006 = getelementptr %struct.mz_zip_archive, i8* %1005, i32 0, i32 15
 %1007 = load i8*, i8** %1006
 %1008 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1007, i32 0, i32 0
 %1009 = load i32, i32* %75
 %1010 = zext i32 %1009 to i64
 store i8* %1004, i8** %4
 store i8* %1008, i8** %5
 store i64 %1010, i64* %6
 store i32 0, i32* %7
 %1011 = load i64, i64* %6
 %1012 = load i8*, i8** %5
 %1013 = getelementptr %struct.mz_zip_array, i8* %1012, i32 0, i32 2
 %1014 = load i64, i64* %1013
 %1015 = icmp ugt i64 %1011, %1014
 br i1 %1015, label %1016, label %1025
1016:
 %1017 = load i8*, i8** %4
 %1018 = load i8*, i8** %5
 %1019 = load i64, i64* %6
 %1020 = load i32, i32* %7
 %1021 = call i32 @mz_zip_array_ensure_capacity (i8* %1017, i8* %1018, i64 %1019, i32 %1020)
 %1022 = icmp ne i32 %1021, 0
 br i1 %1022, label %1024, label %1023
1023:
 store i32 0, i32* %3
 br label %1029
1024:
 br label %1025
1025:
 %1026 = load i64, i64* %6
 %1027 = load i8*, i8** %5
 %1028 = getelementptr %struct.mz_zip_array, i8* %1027, i32 0, i32 1
 store i64 %1026, i64* %1028
 store i32 1, i32* %3
 br label %1029
1029:
 %1030 = load i32, i32* %3
 %1031 = icmp ne i32 %1030, 0
 br i1 %1031, label %1032, label %1063
1032:
 %1033 = load i8*, i8** %73
 %1034 = load i8*, i8** %73
 %1035 = getelementptr %struct.mz_zip_archive, i8* %1034, i32 0, i32 15
 %1036 = load i8*, i8** %1035
 %1037 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1036, i32 0, i32 1
 %1038 = load i8*, i8** %73
 %1039 = getelementptr %struct.mz_zip_archive, i8* %1038, i32 0, i32 2
 %1040 = load i32, i32* %1039
 %1041 = zext i32 %1040 to i64
 store i8* %1033, i8** %9
 store i8* %1037, i8** %10
 store i64 %1041, i64* %11
 store i32 0, i32* %12
 %1042 = load i64, i64* %11
 %1043 = load i8*, i8** %10
 %1044 = getelementptr %struct.mz_zip_array, i8* %1043, i32 0, i32 2
 %1045 = load i64, i64* %1044
 %1046 = icmp ugt i64 %1042, %1045
 br i1 %1046, label %1047, label %1056
1047:
 %1048 = load i8*, i8** %9
 %1049 = load i8*, i8** %10
 %1050 = load i64, i64* %11
 %1051 = load i32, i32* %12
 %1052 = call i32 @mz_zip_array_ensure_capacity (i8* %1048, i8* %1049, i64 %1050, i32 %1051)
 %1053 = icmp ne i32 %1052, 0
 br i1 %1053, label %1055, label %1054
1054:
 store i32 0, i32* %8
 br label %1060
1055:
 br label %1056
1056:
 %1057 = load i64, i64* %11
 %1058 = load i8*, i8** %10
 %1059 = getelementptr %struct.mz_zip_array, i8* %1058, i32 0, i32 1
 store i64 %1057, i64* %1059
 store i32 1, i32* %8
 br label %1060
1060:
 %1061 = load i32, i32* %8
 %1062 = icmp ne i32 %1061, 0
 br i1 %1062, label %1072, label %1063
1063:
 %1064 = load i8*, i8** %73
 store i8* %1064, i8** %46
 store i32 16, i32* %47
 %1065 = load i8*, i8** %46
 %1066 = icmp ne i8* %1065, null
 br i1 %1066, label %1067, label %1071
1067:
 %1068 = load i32, i32* %47
 %1069 = load i8*, i8** %46
 %1070 = getelementptr %struct.mz_zip_archive, i8* %1069, i32 0, i32 5
 store i32 %1068, i32* %1070
 br label %1071
1071:
 store i32 0, i32* %72
 br label %1746
1072:
 %1073 = load i32, i32* %84
 %1074 = icmp ne i32 %1073, 0
 br i1 %1074, label %1075, label %1116
1075:
 %1076 = load i8*, i8** %73
 %1077 = load i8*, i8** %73
 %1078 = getelementptr %struct.mz_zip_archive, i8* %1077, i32 0, i32 15
 %1079 = load i8*, i8** %1078
 %1080 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1079, i32 0, i32 2
 %1081 = load i8*, i8** %73
 %1082 = getelementptr %struct.mz_zip_archive, i8* %1081, i32 0, i32 2
 %1083 = load i32, i32* %1082
 %1084 = zext i32 %1083 to i64
 store i8* %1076, i8** %14
 store i8* %1080, i8** %15
 store i64 %1084, i64* %16
 store i32 0, i32* %17
 %1085 = load i64, i64* %16
 %1086 = load i8*, i8** %15
 %1087 = getelementptr %struct.mz_zip_array, i8* %1086, i32 0, i32 2
 %1088 = load i64, i64* %1087
 %1089 = icmp ugt i64 %1085, %1088
 br i1 %1089, label %1090, label %1099
1090:
 %1091 = load i8*, i8** %14
 %1092 = load i8*, i8** %15
 %1093 = load i64, i64* %16
 %1094 = load i32, i32* %17
 %1095 = call i32 @mz_zip_array_ensure_capacity (i8* %1091, i8* %1092, i64 %1093, i32 %1094)
 %1096 = icmp ne i32 %1095, 0
 br i1 %1096, label %1098, label %1097
1097:
 store i32 0, i32* %13
 br label %1103
1098:
 br label %1099
1099:
 %1100 = load i64, i64* %16
 %1101 = load i8*, i8** %15
 %1102 = getelementptr %struct.mz_zip_array, i8* %1101, i32 0, i32 1
 store i64 %1100, i64* %1102
 store i32 1, i32* %13
 br label %1103
1103:
 %1104 = load i32, i32* %13
 %1105 = icmp ne i32 %1104, 0
 br i1 %1105, label %1115, label %1106
1106:
 %1107 = load i8*, i8** %73
 store i8* %1107, i8** %48
 store i32 16, i32* %49
 %1108 = load i8*, i8** %48
 %1109 = icmp ne i8* %1108, null
 br i1 %1109, label %1110, label %1114
1110:
 %1111 = load i32, i32* %49
 %1112 = load i8*, i8** %48
 %1113 = getelementptr %struct.mz_zip_archive, i8* %1112, i32 0, i32 5
 store i32 %1111, i32* %1113
 br label %1114
1114:
 store i32 0, i32* %72
 br label %1746
1115:
 br label %1116
1116:
 %1117 = load i8*, i8** %73
 %1118 = getelementptr %struct.mz_zip_archive, i8* %1117, i32 0, i32 11
 %1119 = load i8*, i8** %1118
 %1120 = load i8*, i8** %73
 %1121 = getelementptr %struct.mz_zip_archive, i8* %1120, i32 0, i32 14
 %1122 = load i8*, i8** %1121
 %1123 = load i64, i64* %79
 %1124 = load i8*, i8** %73
 %1125 = getelementptr %struct.mz_zip_archive, i8* %1124, i32 0, i32 15
 %1126 = load i8*, i8** %1125
 %1127 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1126, i32 0, i32 0
 %1128 = getelementptr %struct.mz_zip_array, i8* %1127, i32 0, i32 0
 %1129 = load i8*, i8** %1128
 %1130 = load i32, i32* %75
 %1131 = zext i32 %1130 to i64
 %1132 = call i64 %1119 (i8* %1122, i64 %1123, i8* %1129, i64 %1131)
 %1133 = load i32, i32* %75
 %1134 = zext i32 %1133 to i64
 %1135 = icmp ne i64 %1132, %1134
 br i1 %1135, label %1136, label %1145
1136:
 %1137 = load i8*, i8** %73
 store i8* %1137, i8** %50
 store i32 20, i32* %51
 %1138 = load i8*, i8** %50
 %1139 = icmp ne i8* %1138, null
 br i1 %1139, label %1140, label %1144
1140:
 %1141 = load i32, i32* %51
 %1142 = load i8*, i8** %50
 %1143 = getelementptr %struct.mz_zip_archive, i8* %1142, i32 0, i32 5
 store i32 %1141, i32* %1143
 br label %1144
1144:
 store i32 0, i32* %72
 br label %1746
1145:
 %1146 = load i8*, i8** %73
 %1147 = getelementptr %struct.mz_zip_archive, i8* %1146, i32 0, i32 15
 %1148 = load i8*, i8** %1147
 %1149 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1148, i32 0, i32 0
 %1150 = getelementptr %struct.mz_zip_array, i8* %1149, i32 0, i32 0
 %1151 = load i8*, i8** %1150
 store i8* %1151, i8** %81
 %1152 = load i32, i32* %75
 store i32 %1152, i32* %96
 store i32 0, i32* %95
 br label %1153
1153:
 %1154 = load i32, i32* %95
 %1155 = load i8*, i8** %73
 %1156 = getelementptr %struct.mz_zip_archive, i8* %1155, i32 0, i32 2
 %1157 = load i32, i32* %1156
 %1158 = icmp ult i32 %1154, %1157
 br i1 %1158, label %1159, label %1739
1159:
 %1160 = load i32, i32* %96
 %1161 = icmp ult i32 %1160, 46
 br i1 %1161, label %1186, label %1162
1162:
 %1163 = load i8*, i8** %81
 %1164 = getelementptr i8, i8* %1163, i64 0
 %1165 = load i8, i8* %1164
 %1166 = zext i8 %1165 to i32
 %1167 = load i8*, i8** %81
 %1168 = getelementptr i8, i8* %1167, i64 1
 %1169 = load i8, i8* %1168
 %1170 = zext i8 %1169 to i32
 %1171 = shl i32 %1170, 8
 %1172 = or i32 %1166, %1171
 %1173 = load i8*, i8** %81
 %1174 = getelementptr i8, i8* %1173, i64 2
 %1175 = load i8, i8* %1174
 %1176 = zext i8 %1175 to i32
 %1177 = shl i32 %1176, 16
 %1178 = or i32 %1172, %1177
 %1179 = load i8*, i8** %81
 %1180 = getelementptr i8, i8* %1179, i64 3
 %1181 = load i8, i8* %1180
 %1182 = zext i8 %1181 to i32
 %1183 = shl i32 %1182, 24
 %1184 = or i32 %1178, %1183
 %1185 = icmp ne i32 %1184, 33639248
 br i1 %1185, label %1186, label %1195
1186:
 %1187 = load i8*, i8** %73
 store i8* %1187, i8** %52
 store i32 9, i32* %53
 %1188 = load i8*, i8** %52
 %1189 = icmp ne i8* %1188, null
 br i1 %1189, label %1190, label %1194
1190:
 %1191 = load i32, i32* %53
 %1192 = load i8*, i8** %52
 %1193 = getelementptr %struct.mz_zip_archive, i8* %1192, i32 0, i32 5
 store i32 %1191, i32* %1193
 br label %1194
1194:
 store i32 0, i32* %72
 br label %1746
1195:
 %1196 = load i8*, i8** %81
 %1197 = load i8*, i8** %73
 %1198 = getelementptr %struct.mz_zip_archive, i8* %1197, i32 0, i32 15
 %1199 = load i8*, i8** %1198
 %1200 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1199, i32 0, i32 0
 %1201 = getelementptr %struct.mz_zip_array, i8* %1200, i32 0, i32 0
 %1202 = load i8*, i8** %1201
 %1203 = ptrtoint i8** %1196 to i64
 %1204 = ptrtoint i8** %1202 to i64
 %1205 = sub i64 %1203, %1204
 %1206 = trunc i64 %1205 to i32
 %1207 = load i8*, i8** %73
 %1208 = getelementptr %struct.mz_zip_archive, i8* %1207, i32 0, i32 15
 %1209 = load i8*, i8** %1208
 %1210 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1209, i32 0, i32 1
 %1211 = getelementptr %struct.mz_zip_array, i8* %1210, i32 0, i32 0
 %1212 = load i8*, i8** %1211
 %1213 = load i32, i32* %95
 %1214 = zext i32 %1213 to i64
 %1215 = getelementptr i32, i8* %1212, i64 %1214
 store i32 %1206, i32* %1215
 %1216 = load i32, i32* %84
 %1217 = icmp ne i32 %1216, 0
 br i1 %1217, label %1218, label %1229
1218:
 %1219 = load i32, i32* %95
 %1220 = load i8*, i8** %73
 %1221 = getelementptr %struct.mz_zip_archive, i8* %1220, i32 0, i32 15
 %1222 = load i8*, i8** %1221
 %1223 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1222, i32 0, i32 2
 %1224 = getelementptr %struct.mz_zip_array, i8* %1223, i32 0, i32 0
 %1225 = load i8*, i8** %1224
 %1226 = load i32, i32* %95
 %1227 = zext i32 %1226 to i64
 %1228 = getelementptr i32, i8* %1225, i64 %1227
 store i32 %1219, i32* %1228
 br label %1229
1229:
 %1230 = load i8*, i8** %81
 %1231 = getelementptr i8, i8* %1230, i64 20
 %1232 = getelementptr i8, i8* %1231, i64 0
 %1233 = load i8, i8* %1232
 %1234 = zext i8 %1233 to i32
 %1235 = load i8*, i8** %81
 %1236 = getelementptr i8, i8* %1235, i64 20
 %1237 = getelementptr i8, i8* %1236, i64 1
 %1238 = load i8, i8* %1237
 %1239 = zext i8 %1238 to i32
 %1240 = shl i32 %1239, 8
 %1241 = or i32 %1234, %1240
 %1242 = load i8*, i8** %81
 %1243 = getelementptr i8, i8* %1242, i64 20
 %1244 = getelementptr i8, i8* %1243, i64 2
 %1245 = load i8, i8* %1244
 %1246 = zext i8 %1245 to i32
 %1247 = shl i32 %1246, 16
 %1248 = or i32 %1241, %1247
 %1249 = load i8*, i8** %81
 %1250 = getelementptr i8, i8* %1249, i64 20
 %1251 = getelementptr i8, i8* %1250, i64 3
 %1252 = load i8, i8* %1251
 %1253 = zext i8 %1252 to i32
 %1254 = shl i32 %1253, 24
 %1255 = or i32 %1248, %1254
 %1256 = zext i32 %1255 to i64
 store i64 %1256, i64* %102
 %1257 = load i8*, i8** %81
 %1258 = getelementptr i8, i8* %1257, i64 24
 %1259 = getelementptr i8, i8* %1258, i64 0
 %1260 = load i8, i8* %1259
 %1261 = zext i8 %1260 to i32
 %1262 = load i8*, i8** %81
 %1263 = getelementptr i8, i8* %1262, i64 24
 %1264 = getelementptr i8, i8* %1263, i64 1
 %1265 = load i8, i8* %1264
 %1266 = zext i8 %1265 to i32
 %1267 = shl i32 %1266, 8
 %1268 = or i32 %1261, %1267
 %1269 = load i8*, i8** %81
 %1270 = getelementptr i8, i8* %1269, i64 24
 %1271 = getelementptr i8, i8* %1270, i64 2
 %1272 = load i8, i8* %1271
 %1273 = zext i8 %1272 to i32
 %1274 = shl i32 %1273, 16
 %1275 = or i32 %1268, %1274
 %1276 = load i8*, i8** %81
 %1277 = getelementptr i8, i8* %1276, i64 24
 %1278 = getelementptr i8, i8* %1277, i64 3
 %1279 = load i8, i8* %1278
 %1280 = zext i8 %1279 to i32
 %1281 = shl i32 %1280, 24
 %1282 = or i32 %1275, %1281
 %1283 = zext i32 %1282 to i64
 store i64 %1283, i64* %103
 %1284 = load i8*, i8** %81
 %1285 = getelementptr i8, i8* %1284, i64 42
 %1286 = getelementptr i8, i8* %1285, i64 0
 %1287 = load i8, i8* %1286
 %1288 = zext i8 %1287 to i32
 %1289 = load i8*, i8** %81
 %1290 = getelementptr i8, i8* %1289, i64 42
 %1291 = getelementptr i8, i8* %1290, i64 1
 %1292 = load i8, i8* %1291
 %1293 = zext i8 %1292 to i32
 %1294 = shl i32 %1293, 8
 %1295 = or i32 %1288, %1294
 %1296 = load i8*, i8** %81
 %1297 = getelementptr i8, i8* %1296, i64 42
 %1298 = getelementptr i8, i8* %1297, i64 2
 %1299 = load i8, i8* %1298
 %1300 = zext i8 %1299 to i32
 %1301 = shl i32 %1300, 16
 %1302 = or i32 %1295, %1301
 %1303 = load i8*, i8** %81
 %1304 = getelementptr i8, i8* %1303, i64 42
 %1305 = getelementptr i8, i8* %1304, i64 3
 %1306 = load i8, i8* %1305
 %1307 = zext i8 %1306 to i32
 %1308 = shl i32 %1307, 24
 %1309 = or i32 %1302, %1308
 %1310 = zext i32 %1309 to i64
 store i64 %1310, i64* %104
 %1311 = load i8*, i8** %81
 %1312 = getelementptr i8, i8* %1311, i64 28
 %1313 = getelementptr i8, i8* %1312, i64 0
 %1314 = load i8, i8* %1313
 %1315 = zext i8 %1314 to i32
 %1316 = load i8*, i8** %81
 %1317 = getelementptr i8, i8* %1316, i64 28
 %1318 = getelementptr i8, i8* %1317, i64 1
 %1319 = load i8, i8* %1318
 %1320 = zext i8 %1319 to i32
 %1321 = shl i32 %1320, 8
 %1322 = or i32 %1315, %1321
 store i32 %1322, i32* %100
 %1323 = load i8*, i8** %81
 %1324 = getelementptr i8, i8* %1323, i64 30
 %1325 = getelementptr i8, i8* %1324, i64 0
 %1326 = load i8, i8* %1325
 %1327 = zext i8 %1326 to i32
 %1328 = load i8*, i8** %81
 %1329 = getelementptr i8, i8* %1328, i64 30
 %1330 = getelementptr i8, i8* %1329, i64 1
 %1331 = load i8, i8* %1330
 %1332 = zext i8 %1331 to i32
 %1333 = shl i32 %1332, 8
 %1334 = or i32 %1327, %1333
 store i32 %1334, i32* %101
 %1335 = load i8*, i8** %73
 %1336 = getelementptr %struct.mz_zip_archive, i8* %1335, i32 0, i32 15
 %1337 = load i8*, i8** %1336
 %1338 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1337, i32 0, i32 5
 %1339 = load i32, i32* %1338
 %1340 = icmp ne i32 %1339, 0
 br i1 %1340, label %1519, label %1341
1341:
 %1342 = load i32, i32* %101
 %1343 = icmp ne i32 %1342, 0
 br i1 %1343, label %1344, label %1519
1344:
 %1345 = load i64, i64* %102
 %1346 = load i64, i64* %103
 %1347 = icmp ugt i64 %1345, %1346
 br i1 %1347, label %1348, label %1350
1348:
 %1349 = load i64, i64* %102
 br label %1352
1350:
 %1351 = load i64, i64* %103
 br label %1352
1352:
 %1353 = phi i64 [%1349, %1348], [%1351, %1350]
 %1354 = load i64, i64* %104
 %1355 = icmp ugt i64 %1353, %1354
 br i1 %1355, label %1356, label %1366
1356:
 %1357 = load i64, i64* %102
 %1358 = load i64, i64* %103
 %1359 = icmp ugt i64 %1357, %1358
 br i1 %1359, label %1360, label %1362
1360:
 %1361 = load i64, i64* %102
 br label %1364
1362:
 %1363 = load i64, i64* %103
 br label %1364
1364:
 %1365 = phi i64 [%1361, %1360], [%1363, %1362]
 br label %1368
1366:
 %1367 = load i64, i64* %104
 br label %1368
1368:
 %1369 = phi i64 [%1365, %1364], [%1367, %1366]
 %1370 = icmp eq i64 %1369, 4294967295
 br i1 %1370, label %1371, label %1519
1371:
 %1372 = load i32, i32* %101
 store i32 %1372, i32* %105
 %1373 = load i32, i32* %105
 %1374 = icmp ne i32 %1373, 0
 br i1 %1374, label %1375, label %1518
1375:
 store i8* null, i8** %107
 %1376 = load i32, i32* %100
 %1377 = add i32 46, %1376
 %1378 = load i32, i32* %101
 %1379 = add i32 %1377, %1378
 %1380 = load i32, i32* %96
 %1381 = icmp ugt i32 %1379, %1380
 br i1 %1381, label %1382, label %1428
1382:
 %1383 = load i32, i32* %101
 %1384 = zext i32 %1383 to i64
 %1385 = call i8* @malloc (i64 %1384)
 store i8* %1385, i8** %107
 %1386 = load i8*, i8** %107
 %1387 = icmp eq i8* %1386, null
 br i1 %1387, label %1388, label %1397
1388:
 %1389 = load i8*, i8** %73
 store i8* %1389, i8** %54
 store i32 16, i32* %55
 %1390 = load i8*, i8** %54
 %1391 = icmp ne i8* %1390, null
 br i1 %1391, label %1392, label %1396
1392:
 %1393 = load i32, i32* %55
 %1394 = load i8*, i8** %54
 %1395 = getelementptr %struct.mz_zip_archive, i8* %1394, i32 0, i32 5
 store i32 %1393, i32* %1395
 br label %1396
1396:
 store i32 0, i32* %72
 br label %1746
1397:
 %1398 = load i8*, i8** %73
 %1399 = getelementptr %struct.mz_zip_archive, i8* %1398, i32 0, i32 11
 %1400 = load i8*, i8** %1399
 %1401 = load i8*, i8** %73
 %1402 = getelementptr %struct.mz_zip_archive, i8* %1401, i32 0, i32 14
 %1403 = load i8*, i8** %1402
 %1404 = load i64, i64* %79
 %1405 = add i64 %1404, 46
 %1406 = load i32, i32* %100
 %1407 = zext i32 %1406 to i64
 %1408 = add i64 %1405, %1407
 %1409 = load i8*, i8** %107
 %1410 = load i32, i32* %101
 %1411 = zext i32 %1410 to i64
 %1412 = call i64 %1400 (i8* %1403, i64 %1408, i8* %1409, i64 %1411)
 %1413 = load i32, i32* %101
 %1414 = zext i32 %1413 to i64
 %1415 = icmp ne i64 %1412, %1414
 br i1 %1415, label %1416, label %1426
1416:
 %1417 = load i8*, i8** %107
 call void @free (i8* %1417)
 %1418 = load i8*, i8** %73
 store i8* %1418, i8** %56
 store i32 20, i32* %57
 %1419 = load i8*, i8** %56
 %1420 = icmp ne i8* %1419, null
 br i1 %1420, label %1421, label %1425
1421:
 %1422 = load i32, i32* %57
 %1423 = load i8*, i8** %56
 %1424 = getelementptr %struct.mz_zip_archive, i8* %1423, i32 0, i32 5
 store i32 %1422, i32* %1424
 br label %1425
1425:
 store i32 0, i32* %72
 br label %1746
1426:
 %1427 = load i8*, i8** %107
 store i8* %1427, i8** %106
 br label %1434
1428:
 %1429 = load i8*, i8** %81
 %1430 = getelementptr i8, i8* %1429, i64 46
 %1431 = load i32, i32* %100
 %1432 = zext i32 %1431 to i64
 %1433 = getelementptr i8, i8* %1430, i64 %1432
 store i8* %1433, i8** %106
 br label %1434
1434:
 br label %1435
1435:
 %1436 = load i32, i32* %105
 %1437 = zext i32 %1436 to i64
 %1438 = icmp ult i64 %1437, 4
 br i1 %1438, label %1439, label %1449
1439:
 %1440 = load i8*, i8** %107
 call void @free (i8* %1440)
 %1441 = load i8*, i8** %73
 store i8* %1441, i8** %58
 store i32 9, i32* %59
 %1442 = load i8*, i8** %58
 %1443 = icmp ne i8* %1442, null
 br i1 %1443, label %1444, label %1448
1444:
 %1445 = load i32, i32* %59
 %1446 = load i8*, i8** %58
 %1447 = getelementptr %struct.mz_zip_archive, i8* %1446, i32 0, i32 5
 store i32 %1445, i32* %1447
 br label %1448
1448:
 store i32 0, i32* %72
 br label %1746
1449:
 %1450 = load i8*, i8** %106
 %1451 = getelementptr i8, i8* %1450, i64 0
 %1452 = load i8, i8* %1451
 %1453 = zext i8 %1452 to i32
 %1454 = load i8*, i8** %106
 %1455 = getelementptr i8, i8* %1454, i64 1
 %1456 = load i8, i8* %1455
 %1457 = zext i8 %1456 to i32
 %1458 = shl i32 %1457, 8
 %1459 = or i32 %1453, %1458
 store i32 %1459, i32* %108
 %1460 = load i8*, i8** %106
 %1461 = getelementptr i8, i8* %1460, i64 2
 %1462 = getelementptr i8, i8* %1461, i64 0
 %1463 = load i8, i8* %1462
 %1464 = zext i8 %1463 to i32
 %1465 = load i8*, i8** %106
 %1466 = getelementptr i8, i8* %1465, i64 2
 %1467 = getelementptr i8, i8* %1466, i64 1
 %1468 = load i8, i8* %1467
 %1469 = zext i8 %1468 to i32
 %1470 = shl i32 %1469, 8
 %1471 = or i32 %1464, %1470
 store i32 %1471, i32* %109
 %1472 = load i32, i32* %109
 %1473 = zext i32 %1472 to i64
 %1474 = add i64 %1473, 4
 %1475 = load i32, i32* %105
 %1476 = zext i32 %1475 to i64
 %1477 = icmp ugt i64 %1474, %1476
 br i1 %1477, label %1478, label %1488
1478:
 %1479 = load i8*, i8** %107
 call void @free (i8* %1479)
 %1480 = load i8*, i8** %73
 store i8* %1480, i8** %60
 store i32 9, i32* %61
 %1481 = load i8*, i8** %60
 %1482 = icmp ne i8* %1481, null
 br i1 %1482, label %1483, label %1487
1483:
 %1484 = load i32, i32* %61
 %1485 = load i8*, i8** %60
 %1486 = getelementptr %struct.mz_zip_archive, i8* %1485, i32 0, i32 5
 store i32 %1484, i32* %1486
 br label %1487
1487:
 store i32 0, i32* %72
 br label %1746
1488:
 %1489 = load i32, i32* %108
 %1490 = icmp eq i32 %1489, 1
 br i1 %1490, label %1491, label %1500
1491:
 %1492 = load i8*, i8** %73
 %1493 = getelementptr %struct.mz_zip_archive, i8* %1492, i32 0, i32 15
 %1494 = load i8*, i8** %1493
 %1495 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1494, i32 0, i32 4
 store i32 1, i32* %1495
 %1496 = load i8*, i8** %73
 %1497 = getelementptr %struct.mz_zip_archive, i8* %1496, i32 0, i32 15
 %1498 = load i8*, i8** %1497
 %1499 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1498, i32 0, i32 5
 store i32 1, i32* %1499
 br label %1516
1500:
 %1501 = load i32, i32* %109
 %1502 = zext i32 %1501 to i64
 %1503 = add i64 4, %1502
 %1504 = load i8*, i8** %106
 %1505 = getelementptr i8, i8* %1504, i64 %1503
 store i8* %1505, i8** %106
 %1506 = load i32, i32* %105
 %1507 = zext i32 %1506 to i64
 %1508 = sub i64 %1507, 4
 %1509 = load i32, i32* %109
 %1510 = zext i32 %1509 to i64
 %1511 = sub i64 %1508, %1510
 %1512 = trunc i64 %1511 to i32
 store i32 %1512, i32* %105
 br label %1513
1513:
 %1514 = load i32, i32* %105
 %1515 = icmp ne i32 %1514, 0
 br i1 %1515, label %1435, label %1516
1516:
 %1517 = load i8*, i8** %107
 call void @free (i8* %1517)
 br label %1518
1518:
 br label %1519
1519:
 %1520 = load i64, i64* %102
 %1521 = icmp ne i64 %1520, 4294967295
 br i1 %1521, label %1522, label %1573
1522:
 %1523 = load i64, i64* %103
 %1524 = icmp ne i64 %1523, 4294967295
 br i1 %1524, label %1525, label %1573
1525:
 %1526 = load i8*, i8** %81
 %1527 = getelementptr i8, i8* %1526, i64 10
 %1528 = getelementptr i8, i8* %1527, i64 0
 %1529 = load i8, i8* %1528
 %1530 = zext i8 %1529 to i32
 %1531 = load i8*, i8** %81
 %1532 = getelementptr i8, i8* %1531, i64 10
 %1533 = getelementptr i8, i8* %1532, i64 1
 %1534 = load i8, i8* %1533
 %1535 = zext i8 %1534 to i32
 %1536 = shl i32 %1535, 8
 %1537 = or i32 %1530, %1536
 %1538 = load i8*, i8** %81
 %1539 = getelementptr i8, i8* %1538, i64 10
 %1540 = getelementptr i8, i8* %1539, i64 2
 %1541 = load i8, i8* %1540
 %1542 = zext i8 %1541 to i32
 %1543 = shl i32 %1542, 16
 %1544 = or i32 %1537, %1543
 %1545 = load i8*, i8** %81
 %1546 = getelementptr i8, i8* %1545, i64 10
 %1547 = getelementptr i8, i8* %1546, i64 3
 %1548 = load i8, i8* %1547
 %1549 = zext i8 %1548 to i32
 %1550 = shl i32 %1549, 24
 %1551 = or i32 %1544, %1550
 %1552 = icmp ne i32 %1551, 0
 br i1 %1552, label %1557, label %1553
1553:
 %1554 = load i64, i64* %103
 %1555 = load i64, i64* %102
 %1556 = icmp ne i64 %1554, %1555
 br i1 %1556, label %1563, label %1557
1557:
 %1558 = load i64, i64* %103
 %1559 = icmp ne i64 %1558, 0
 br i1 %1559, label %1560, label %1572
1560:
 %1561 = load i64, i64* %102
 %1562 = icmp ne i64 %1561, 0
 br i1 %1562, label %1572, label %1563
1563:
 %1564 = load i8*, i8** %73
 store i8* %1564, i8** %62
 store i32 9, i32* %63
 %1565 = load i8*, i8** %62
 %1566 = icmp ne i8* %1565, null
 br i1 %1566, label %1567, label %1571
1567:
 %1568 = load i32, i32* %63
 %1569 = load i8*, i8** %62
 %1570 = getelementptr %struct.mz_zip_archive, i8* %1569, i32 0, i32 5
 store i32 %1568, i32* %1570
 br label %1571
1571:
 store i32 0, i32* %72
 br label %1746
1572:
 br label %1573
1573:
 %1574 = load i8*, i8** %81
 %1575 = getelementptr i8, i8* %1574, i64 34
 %1576 = getelementptr i8, i8* %1575, i64 0
 %1577 = load i8, i8* %1576
 %1578 = zext i8 %1577 to i32
 %1579 = load i8*, i8** %81
 %1580 = getelementptr i8, i8* %1579, i64 34
 %1581 = getelementptr i8, i8* %1580, i64 1
 %1582 = load i8, i8* %1581
 %1583 = zext i8 %1582 to i32
 %1584 = shl i32 %1583, 8
 %1585 = or i32 %1578, %1584
 store i32 %1585, i32* %98
 %1586 = load i32, i32* %98
 %1587 = icmp eq i32 %1586, 65535
 br i1 %1587, label %1595, label %1588
1588:
 %1589 = load i32, i32* %98
 %1590 = load i32, i32* %77
 %1591 = icmp ne i32 %1589, %1590
 br i1 %1591, label %1592, label %1604
1592:
 %1593 = load i32, i32* %98
 %1594 = icmp ne i32 %1593, 1
 br i1 %1594, label %1595, label %1604
1595:
 %1596 = load i8*, i8** %73
 store i8* %1596, i8** %64
 store i32 10, i32* %65
 %1597 = load i8*, i8** %64
 %1598 = icmp ne i8* %1597, null
 br i1 %1598, label %1599, label %1603
1599:
 %1600 = load i32, i32* %65
 %1601 = load i8*, i8** %64
 %1602 = getelementptr %struct.mz_zip_archive, i8* %1601, i32 0, i32 5
 store i32 %1600, i32* %1602
 br label %1603
1603:
 store i32 0, i32* %72
 br label %1746
1604:
 %1605 = load i64, i64* %102
 %1606 = icmp ne i64 %1605, 4294967295
 br i1 %1606, label %1607, label %1652
1607:
 %1608 = load i8*, i8** %81
 %1609 = getelementptr i8, i8* %1608, i64 42
 %1610 = getelementptr i8, i8* %1609, i64 0
 %1611 = load i8, i8* %1610
 %1612 = zext i8 %1611 to i32
 %1613 = load i8*, i8** %81
 %1614 = getelementptr i8, i8* %1613, i64 42
 %1615 = getelementptr i8, i8* %1614, i64 1
 %1616 = load i8, i8* %1615
 %1617 = zext i8 %1616 to i32
 %1618 = shl i32 %1617, 8
 %1619 = or i32 %1612, %1618
 %1620 = load i8*, i8** %81
 %1621 = getelementptr i8, i8* %1620, i64 42
 %1622 = getelementptr i8, i8* %1621, i64 2
 %1623 = load i8, i8* %1622
 %1624 = zext i8 %1623 to i32
 %1625 = shl i32 %1624, 16
 %1626 = or i32 %1619, %1625
 %1627 = load i8*, i8** %81
 %1628 = getelementptr i8, i8* %1627, i64 42
 %1629 = getelementptr i8, i8* %1628, i64 3
 %1630 = load i8, i8* %1629
 %1631 = zext i8 %1630 to i32
 %1632 = shl i32 %1631, 24
 %1633 = or i32 %1626, %1632
 %1634 = zext i32 %1633 to i64
 %1635 = add i64 %1634, 30
 %1636 = load i64, i64* %102
 %1637 = add i64 %1635, %1636
 %1638 = load i8*, i8** %73
 %1639 = getelementptr %struct.mz_zip_archive, i8* %1638, i32 0, i32 0
 %1640 = load i64, i64* %1639
 %1641 = icmp ugt i64 %1637, %1640
 br i1 %1641, label %1642, label %1651
1642:
 %1643 = load i8*, i8** %73
 store i8* %1643, i8** %66
 store i32 9, i32* %67
 %1644 = load i8*, i8** %66
 %1645 = icmp ne i8* %1644, null
 br i1 %1645, label %1646, label %1650
1646:
 %1647 = load i32, i32* %67
 %1648 = load i8*, i8** %66
 %1649 = getelementptr %struct.mz_zip_archive, i8* %1648, i32 0, i32 5
 store i32 %1647, i32* %1649
 br label %1650
1650:
 store i32 0, i32* %72
 br label %1746
1651:
 br label %1652
1652:
 %1653 = load i8*, i8** %81
 %1654 = getelementptr i8, i8* %1653, i64 8
 %1655 = getelementptr i8, i8* %1654, i64 0
 %1656 = load i8, i8* %1655
 %1657 = zext i8 %1656 to i32
 %1658 = load i8*, i8** %81
 %1659 = getelementptr i8, i8* %1658, i64 8
 %1660 = getelementptr i8, i8* %1659, i64 1
 %1661 = load i8, i8* %1660
 %1662 = zext i8 %1661 to i32
 %1663 = shl i32 %1662, 8
 %1664 = or i32 %1657, %1663
 store i32 %1664, i32* %99
 %1665 = load i32, i32* %99
 %1666 = and i32 %1665, 8192
 %1667 = icmp ne i32 %1666, 0
 br i1 %1667, label %1668, label %1677
1668:
 %1669 = load i8*, i8** %73
 store i8* %1669, i8** %68
 store i32 5, i32* %69
 %1670 = load i8*, i8** %68
 %1671 = icmp ne i8* %1670, null
 br i1 %1671, label %1672, label %1676
1672:
 %1673 = load i32, i32* %69
 %1674 = load i8*, i8** %68
 %1675 = getelementptr %struct.mz_zip_archive, i8* %1674, i32 0, i32 5
 store i32 %1673, i32* %1675
 br label %1676
1676:
 store i32 0, i32* %72
 br label %1746
1677:
 %1678 = load i8*, i8** %81
 %1679 = getelementptr i8, i8* %1678, i64 28
 %1680 = getelementptr i8, i8* %1679, i64 0
 %1681 = load i8, i8* %1680
 %1682 = zext i8 %1681 to i32
 %1683 = load i8*, i8** %81
 %1684 = getelementptr i8, i8* %1683, i64 28
 %1685 = getelementptr i8, i8* %1684, i64 1
 %1686 = load i8, i8* %1685
 %1687 = zext i8 %1686 to i32
 %1688 = shl i32 %1687, 8
 %1689 = or i32 %1682, %1688
 %1690 = add i32 46, %1689
 %1691 = load i8*, i8** %81
 %1692 = getelementptr i8, i8* %1691, i64 30
 %1693 = getelementptr i8, i8* %1692, i64 0
 %1694 = load i8, i8* %1693
 %1695 = zext i8 %1694 to i32
 %1696 = load i8*, i8** %81
 %1697 = getelementptr i8, i8* %1696, i64 30
 %1698 = getelementptr i8, i8* %1697, i64 1
 %1699 = load i8, i8* %1698
 %1700 = zext i8 %1699 to i32
 %1701 = shl i32 %1700, 8
 %1702 = or i32 %1695, %1701
 %1703 = add i32 %1690, %1702
 %1704 = load i8*, i8** %81
 %1705 = getelementptr i8, i8* %1704, i64 32
 %1706 = getelementptr i8, i8* %1705, i64 0
 %1707 = load i8, i8* %1706
 %1708 = zext i8 %1707 to i32
 %1709 = load i8*, i8** %81
 %1710 = getelementptr i8, i8* %1709, i64 32
 %1711 = getelementptr i8, i8* %1710, i64 1
 %1712 = load i8, i8* %1711
 %1713 = zext i8 %1712 to i32
 %1714 = shl i32 %1713, 8
 %1715 = or i32 %1708, %1714
 %1716 = add i32 %1703, %1715
 store i32 %1716, i32* %97
 %1717 = load i32, i32* %96
 %1718 = icmp ugt i32 %1716, %1717
 br i1 %1718, label %1719, label %1728
1719:
 %1720 = load i8*, i8** %73
 store i8* %1720, i8** %70
 store i32 9, i32* %71
 %1721 = load i8*, i8** %70
 %1722 = icmp ne i8* %1721, null
 br i1 %1722, label %1723, label %1727
1723:
 %1724 = load i32, i32* %71
 %1725 = load i8*, i8** %70
 %1726 = getelementptr %struct.mz_zip_archive, i8* %1725, i32 0, i32 5
 store i32 %1724, i32* %1726
 br label %1727
1727:
 store i32 0, i32* %72
 br label %1746
1728:
 %1729 = load i32, i32* %97
 %1730 = load i32, i32* %96
 %1731 = sub i32 %1730, %1729
 store i32 %1731, i32* %96
 %1732 = load i32, i32* %97
 %1733 = load i8*, i8** %81
 %1734 = zext i32 %1732 to i64
 %1735 = getelementptr i8, i8* %1733, i64 %1734
 store i8* %1735, i8** %81
 br label %1736
1736:
 %1737 = load i32, i32* %95
 %1738 = add i32 %1737, 1
 store i32 %1738, i32* %95
 br label %1153
1739:
 br label %1740
1740:
 %1741 = load i32, i32* %84
 %1742 = icmp ne i32 %1741, 0
 br i1 %1742, label %1743, label %1745
1743:
 %1744 = load i8*, i8** %73
 call void @mz_zip_reader_sort_central_dir_offsets_by_filename (i8* %1744)
 br label %1745
1745:
 store i32 1, i32* %72
 br label %1746
1746:
 %1747 = load i32, i32* %72
 ret i32 %1747
}

define i32 @mz_zip_reader_init_mem (i8* %0, i8* %1, i64 %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i32
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i8*
 %12 = alloca i64
 %13 = alloca i32
 store i8* %0, i8** %10
 store i8* %1, i8** %11
 store i64 %2, i64* %12
 store i32 %3, i32* %13
 %14 = load i8*, i8** %11
 %15 = icmp ne i8* %14, null
 br i1 %15, label %25, label %16
16:
 %17 = load i8*, i8** %10
 store i8* %17, i8** %5
 store i32 24, i32* %6
 %18 = load i8*, i8** %5
 %19 = icmp ne i8* %18, null
 br i1 %19, label %20, label %24
20:
 %21 = load i32, i32* %6
 %22 = load i8*, i8** %5
 %23 = getelementptr %struct.mz_zip_archive, i8* %22, i32 0, i32 5
 store i32 %21, i32* %23
 br label %24
24:
 store i32 0, i32* %9
 br label %74
25:
 %26 = load i64, i64* %12
 %27 = icmp ult i64 %26, 22
 br i1 %27, label %28, label %37
28:
 %29 = load i8*, i8** %10
 store i8* %29, i8** %7
 store i32 8, i32* %8
 %30 = load i8*, i8** %7
 %31 = icmp ne i8* %30, null
 br i1 %31, label %32, label %36
32:
 %33 = load i32, i32* %8
 %34 = load i8*, i8** %7
 %35 = getelementptr %struct.mz_zip_archive, i8* %34, i32 0, i32 5
 store i32 %33, i32* %35
 br label %36
36:
 store i32 0, i32* %9
 br label %74
37:
 %38 = load i8*, i8** %10
 %39 = load i32, i32* %13
 %40 = call i32 @mz_zip_reader_init_internal (i8* %38, i32 %39)
 %41 = icmp ne i32 %40, 0
 br i1 %41, label %43, label %42
42:
 store i32 0, i32* %9
 br label %74
43:
 %44 = load i8*, i8** %10
 %45 = getelementptr %struct.mz_zip_archive, i8* %44, i32 0, i32 4
 store i32 2, i32* %45
 %46 = load i64, i64* %12
 %47 = load i8*, i8** %10
 %48 = getelementptr %struct.mz_zip_archive, i8* %47, i32 0, i32 0
 store i64 %46, i64* %48
 %49 = load i8*, i8** %10
 %50 = getelementptr %struct.mz_zip_archive, i8* %49, i32 0, i32 11
 store i8* @mz_zip_mem_read_func, i8** %50
 %51 = load i8*, i8** %10
 %52 = load i8*, i8** %10
 %53 = getelementptr %struct.mz_zip_archive, i8* %52, i32 0, i32 14
 store i8* %51, i8** %53
 %54 = load i8*, i8** %10
 %55 = getelementptr %struct.mz_zip_archive, i8* %54, i32 0, i32 13
 store i8* null, i8** %55
 %56 = load i8*, i8** %11
 %57 = load i8*, i8** %10
 %58 = getelementptr %struct.mz_zip_archive, i8* %57, i32 0, i32 15
 %59 = load i8*, i8** %58
 %60 = getelementptr %struct.mz_zip_internal_state_tag, i8* %59, i32 0, i32 8
 store i8* %56, i8** %60
 %61 = load i64, i64* %12
 %62 = load i8*, i8** %10
 %63 = getelementptr %struct.mz_zip_archive, i8* %62, i32 0, i32 15
 %64 = load i8*, i8** %63
 %65 = getelementptr %struct.mz_zip_internal_state_tag, i8* %64, i32 0, i32 9
 store i64 %61, i64* %65
 %66 = load i8*, i8** %10
 %67 = load i32, i32* %13
 %68 = call i32 @mz_zip_reader_read_central_dir (i8* %66, i32 %67)
 %69 = icmp ne i32 %68, 0
 br i1 %69, label %73, label %70
70:
 %71 = load i8*, i8** %10
 %72 = call i32 @mz_zip_reader_end_internal (i8* %71, i32 0)
 store i32 0, i32* %9
 br label %74
73:
 store i32 1, i32* %9
 br label %74
74:
 %75 = load i32, i32* %9
 ret i32 %75
}

define i64 @mz_zip_mem_read_func (i8* %0, i64 %1, i8* %2, i64 %3) {
 %5 = alloca i8*
 %6 = alloca i64
 %7 = alloca i8*
 %8 = alloca i64
 %9 = alloca i8*
 %10 = alloca i64
 store i8* %0, i8** %5
 store i64 %1, i64* %6
 store i8* %2, i8** %7
 store i64 %3, i64* %8
 %11 = load i8*, i8** %5
 store i8* %11, i8** %9
 %12 = load i64, i64* %6
 %13 = load i8*, i8** %9
 %14 = getelementptr %struct.mz_zip_archive, i8* %13, i32 0, i32 0
 %15 = load i64, i64* %14
 %16 = icmp uge i64 %12, %15
 br i1 %16, label %17, label %18
17:
 br label %36
18:
 %19 = load i8*, i8** %9
 %20 = getelementptr %struct.mz_zip_archive, i8* %19, i32 0, i32 0
 %21 = load i64, i64* %20
 %22 = load i64, i64* %6
 %23 = sub i64 %21, %22
 %24 = load i64, i64* %8
 %25 = icmp ult i64 %23, %24
 br i1 %25, label %26, label %32
26:
 %27 = load i8*, i8** %9
 %28 = getelementptr %struct.mz_zip_archive, i8* %27, i32 0, i32 0
 %29 = load i64, i64* %28
 %30 = load i64, i64* %6
 %31 = sub i64 %29, %30
 br label %34
32:
 %33 = load i64, i64* %8
 br label %34
34:
 %35 = phi i64 [%31, %26], [%33, %32]
 br label %36
36:
 %37 = phi i64 [0, %17], [%35, %34]
 store i64 %37, i64* %10
 %38 = load i8*, i8** %7
 %39 = load i8*, i8** %9
 %40 = getelementptr %struct.mz_zip_archive, i8* %39, i32 0, i32 15
 %41 = load i8*, i8** %40
 %42 = getelementptr %struct.mz_zip_internal_state_tag, i8* %41, i32 0, i32 8
 %43 = load i8*, i8** %42
 %44 = load i64, i64* %6
 %45 = getelementptr i8, i8* %43, i64 %44
 %46 = load i64, i64* %10
 %47 = load i8*, i8** %7
 %48 = call i64 @llvm.objectsize.i64.p0 (i8* %47, i1 0, i1 1, i1 0)
 %49 = call i8* @__memcpy_chk (i8* %38, i8* %45, i64 %46, i64 %48)
 %50 = load i64, i64* %10
 ret i64 %50
}

define i32 @mz_zip_reader_init_file (i8* %0, i8* %1, i32 %2) {
 %4 = alloca i8*
 %5 = alloca i8*
 %6 = alloca i32
 store i8* %0, i8** %4
 store i8* %1, i8** %5
 store i32 %2, i32* %6
 %7 = load i8*, i8** %4
 %8 = load i8*, i8** %5
 %9 = load i32, i32* %6
 %10 = call i32 @mz_zip_reader_init_file_v2 (i8* %7, i8* %8, i32 %9, i64 0, i64 0)
 ret i32 %10
}

define i32 @mz_zip_reader_init_file_v2 (i8* %0, i8* %1, i32 %2, i64 %3, i64 %4) {
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca i8*
 %13 = alloca i32
 %14 = alloca i32
 %15 = alloca i8*
 %16 = alloca i8*
 %17 = alloca i32
 %18 = alloca i64
 %19 = alloca i64
 %20 = alloca i64
 %21 = alloca i8*
 store i8* %0, i8** %15
 store i8* %1, i8** %16
 store i32 %2, i32* %17
 store i64 %3, i64* %18
 store i64 %4, i64* %19
 %22 = load i8*, i8** %15
 %23 = icmp ne i8* %22, null
 br i1 %23, label %24, label %33
24:
 %25 = load i8*, i8** %16
 %26 = icmp ne i8* %25, null
 br i1 %26, label %27, label %33
27:
 %28 = load i64, i64* %19
 %29 = icmp ne i64 %28, 0
 br i1 %29, label %30, label %42
30:
 %31 = load i64, i64* %19
 %32 = icmp ult i64 %31, 22
 br i1 %32, label %33, label %42
33:
 %34 = load i8*, i8** %15
 store i8* %34, i8** %6
 store i32 24, i32* %7
 %35 = load i8*, i8** %6
 %36 = icmp ne i8* %35, null
 br i1 %36, label %37, label %41
37:
 %38 = load i32, i32* %7
 %39 = load i8*, i8** %6
 %40 = getelementptr %struct.mz_zip_archive, i8* %39, i32 0, i32 5
 store i32 %38, i32* %40
 br label %41
41:
 store i32 0, i32* %14
 br label %129
42:
 %43 = load i8*, i8** %16
 %44 = call i8* @fopen (i8* %43, i8* @.str.18)
 store i8* %44, i8** %21
 %45 = load i8*, i8** %21
 %46 = icmp ne i8* %45, null
 br i1 %46, label %56, label %47
47:
 %48 = load i8*, i8** %15
 store i8* %48, i8** %8
 store i32 17, i32* %9
 %49 = load i8*, i8** %8
 %50 = icmp ne i8* %49, null
 br i1 %50, label %51, label %55
51:
 %52 = load i32, i32* %9
 %53 = load i8*, i8** %8
 %54 = getelementptr %struct.mz_zip_archive, i8* %53, i32 0, i32 5
 store i32 %52, i32* %54
 br label %55
55:
 store i32 0, i32* %14
 br label %129
56:
 %57 = load i64, i64* %19
 store i64 %57, i64* %20
 %58 = load i64, i64* %20
 %59 = icmp ne i64 %58, 0
 br i1 %59, label %78, label %60
60:
 %61 = load i8*, i8** %21
 %62 = call i32 @fseeko (i8* %61, i64 0, i32 2)
 %63 = icmp ne i32 %62, 0
 br i1 %63, label %64, label %75
64:
 %65 = load i8*, i8** %21
 %66 = call i32 @fclose (i8* %65)
 %67 = load i8*, i8** %15
 store i8* %67, i8** %10
 store i32 22, i32* %11
 %68 = load i8*, i8** %10
 %69 = icmp ne i8* %68, null
 br i1 %69, label %70, label %74
70:
 %71 = load i32, i32* %11
 %72 = load i8*, i8** %10
 %73 = getelementptr %struct.mz_zip_archive, i8* %72, i32 0, i32 5
 store i32 %71, i32* %73
 br label %74
74:
 store i32 0, i32* %14
 br label %129
75:
 %76 = load i8*, i8** %21
 %77 = call i64 @ftello (i8* %76)
 store i64 %77, i64* %20
 br label %78
78:
 %79 = load i64, i64* %20
 %80 = icmp ult i64 %79, 22
 br i1 %80, label %81, label %92
81:
 %82 = load i8*, i8** %21
 %83 = call i32 @fclose (i8* %82)
 %84 = load i8*, i8** %15
 store i8* %84, i8** %12
 store i32 8, i32* %13
 %85 = load i8*, i8** %12
 %86 = icmp ne i8* %85, null
 br i1 %86, label %87, label %91
87:
 %88 = load i32, i32* %13
 %89 = load i8*, i8** %12
 %90 = getelementptr %struct.mz_zip_archive, i8* %89, i32 0, i32 5
 store i32 %88, i32* %90
 br label %91
91:
 store i32 0, i32* %14
 br label %129
92:
 %93 = load i8*, i8** %15
 %94 = load i32, i32* %17
 %95 = call i32 @mz_zip_reader_init_internal (i8* %93, i32 %94)
 %96 = icmp ne i32 %95, 0
 br i1 %96, label %100, label %97
97:
 %98 = load i8*, i8** %21
 %99 = call i32 @fclose (i8* %98)
 store i32 0, i32* %14
 br label %129
100:
 %101 = load i8*, i8** %15
 %102 = getelementptr %struct.mz_zip_archive, i8* %101, i32 0, i32 4
 store i32 4, i32* %102
 %103 = load i8*, i8** %15
 %104 = getelementptr %struct.mz_zip_archive, i8* %103, i32 0, i32 11
 store i8* @mz_zip_file_read_func, i8** %104
 %105 = load i8*, i8** %15
 %106 = load i8*, i8** %15
 %107 = getelementptr %struct.mz_zip_archive, i8* %106, i32 0, i32 14
 store i8* %105, i8** %107
 %108 = load i8*, i8** %21
 %109 = load i8*, i8** %15
 %110 = getelementptr %struct.mz_zip_archive, i8* %109, i32 0, i32 15
 %111 = load i8*, i8** %110
 %112 = getelementptr %struct.mz_zip_internal_state_tag, i8* %111, i32 0, i32 6
 store i8* %108, i8** %112
 %113 = load i64, i64* %20
 %114 = load i8*, i8** %15
 %115 = getelementptr %struct.mz_zip_archive, i8* %114, i32 0, i32 0
 store i64 %113, i64* %115
 %116 = load i64, i64* %18
 %117 = load i8*, i8** %15
 %118 = getelementptr %struct.mz_zip_archive, i8* %117, i32 0, i32 15
 %119 = load i8*, i8** %118
 %120 = getelementptr %struct.mz_zip_internal_state_tag, i8* %119, i32 0, i32 7
 store i64 %116, i64* %120
 %121 = load i8*, i8** %15
 %122 = load i32, i32* %17
 %123 = call i32 @mz_zip_reader_read_central_dir (i8* %121, i32 %122)
 %124 = icmp ne i32 %123, 0
 br i1 %124, label %128, label %125
125:
 %126 = load i8*, i8** %15
 %127 = call i32 @mz_zip_reader_end_internal (i8* %126, i32 0)
 store i32 0, i32* %14
 br label %129
128:
 store i32 1, i32* %14
 br label %129
129:
 %130 = load i32, i32* %14
 ret i32 %130
}

define i64 @mz_zip_file_read_func (i8* %0, i64 %1, i8* %2, i64 %3) {
 %5 = alloca i64
 %6 = alloca i8*
 %7 = alloca i64
 %8 = alloca i8*
 %9 = alloca i64
 %10 = alloca i8*
 %11 = alloca i64
 store i8* %0, i8** %6
 store i64 %1, i64* %7
 store i8* %2, i8** %8
 store i64 %3, i64* %9
 %12 = load i8*, i8** %6
 store i8* %12, i8** %10
 %13 = load i8*, i8** %10
 %14 = getelementptr %struct.mz_zip_archive, i8* %13, i32 0, i32 15
 %15 = load i8*, i8** %14
 %16 = getelementptr %struct.mz_zip_internal_state_tag, i8* %15, i32 0, i32 6
 %17 = load i8*, i8** %16
 %18 = call i64 @ftello (i8* %17)
 store i64 %18, i64* %11
 %19 = load i8*, i8** %10
 %20 = getelementptr %struct.mz_zip_archive, i8* %19, i32 0, i32 15
 %21 = load i8*, i8** %20
 %22 = getelementptr %struct.mz_zip_internal_state_tag, i8* %21, i32 0, i32 7
 %23 = load i64, i64* %22
 %24 = load i64, i64* %7
 %25 = add i64 %24, %23
 store i64 %25, i64* %7
 %26 = load i64, i64* %7
 %27 = icmp slt i64 %26, 0
 br i1 %27, label %41, label %28
28:
 %29 = load i64, i64* %11
 %30 = load i64, i64* %7
 %31 = icmp ne i64 %29, %30
 br i1 %31, label %32, label %42
32:
 %33 = load i8*, i8** %10
 %34 = getelementptr %struct.mz_zip_archive, i8* %33, i32 0, i32 15
 %35 = load i8*, i8** %34
 %36 = getelementptr %struct.mz_zip_internal_state_tag, i8* %35, i32 0, i32 6
 %37 = load i8*, i8** %36
 %38 = load i64, i64* %7
 %39 = call i32 @fseeko (i8* %37, i64 %38, i32 0)
 %40 = icmp ne i32 %39, 0
 br i1 %40, label %41, label %42
41:
 store i64 0, i64* %5
 br label %51
42:
 %43 = load i8*, i8** %8
 %44 = load i64, i64* %9
 %45 = load i8*, i8** %10
 %46 = getelementptr %struct.mz_zip_archive, i8* %45, i32 0, i32 15
 %47 = load i8*, i8** %46
 %48 = getelementptr %struct.mz_zip_internal_state_tag, i8* %47, i32 0, i32 6
 %49 = load i8*, i8** %48
 %50 = call i64 @fread (i8* %43, i64 1, i64 %44, i8* %49)
 store i64 %50, i64* %5
 br label %51
51:
 %52 = load i64, i64* %5
 ret i64 %52
}

define i32 @mz_zip_reader_init_cfile (i8* %0, i8* %1, i64 %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i32
 %9 = alloca i8*
 %10 = alloca i32
 %11 = alloca i32
 %12 = alloca i8*
 %13 = alloca i8*
 %14 = alloca i64
 %15 = alloca i32
 %16 = alloca i64
 store i8* %0, i8** %12
 store i8* %1, i8** %13
 store i64 %2, i64* %14
 store i32 %3, i32* %15
 %17 = load i8*, i8** %12
 %18 = icmp ne i8* %17, null
 br i1 %18, label %19, label %22
19:
 %20 = load i8*, i8** %13
 %21 = icmp ne i8* %20, null
 br i1 %21, label %31, label %22
22:
 %23 = load i8*, i8** %12
 store i8* %23, i8** %5
 store i32 17, i32* %6
 %24 = load i8*, i8** %5
 %25 = icmp ne i8* %24, null
 br i1 %25, label %26, label %30
26:
 %27 = load i32, i32* %6
 %28 = load i8*, i8** %5
 %29 = getelementptr %struct.mz_zip_archive, i8* %28, i32 0, i32 5
 store i32 %27, i32* %29
 br label %30
30:
 store i32 0, i32* %11
 br label %101
31:
 %32 = load i8*, i8** %13
 %33 = call i64 @ftello (i8* %32)
 store i64 %33, i64* %16
 %34 = load i64, i64* %14
 %35 = icmp ne i64 %34, 0
 br i1 %35, label %66, label %36
36:
 %37 = load i8*, i8** %13
 %38 = call i32 @fseeko (i8* %37, i64 0, i32 2)
 %39 = icmp ne i32 %38, 0
 br i1 %39, label %40, label %49
40:
 %41 = load i8*, i8** %12
 store i8* %41, i8** %7
 store i32 22, i32* %8
 %42 = load i8*, i8** %7
 %43 = icmp ne i8* %42, null
 br i1 %43, label %44, label %48
44:
 %45 = load i32, i32* %8
 %46 = load i8*, i8** %7
 %47 = getelementptr %struct.mz_zip_archive, i8* %46, i32 0, i32 5
 store i32 %45, i32* %47
 br label %48
48:
 store i32 0, i32* %11
 br label %101
49:
 %50 = load i8*, i8** %13
 %51 = call i64 @ftello (i8* %50)
 %52 = load i64, i64* %16
 %53 = sub i64 %51, %52
 store i64 %53, i64* %14
 %54 = load i64, i64* %14
 %55 = icmp ult i64 %54, 22
 br i1 %55, label %56, label %65
56:
 %57 = load i8*, i8** %12
 store i8* %57, i8** %9
 store i32 8, i32* %10
 %58 = load i8*, i8** %9
 %59 = icmp ne i8* %58, null
 br i1 %59, label %60, label %64
60:
 %61 = load i32, i32* %10
 %62 = load i8*, i8** %9
 %63 = getelementptr %struct.mz_zip_archive, i8* %62, i32 0, i32 5
 store i32 %61, i32* %63
 br label %64
64:
 store i32 0, i32* %11
 br label %101
65:
 br label %66
66:
 %67 = load i8*, i8** %12
 %68 = load i32, i32* %15
 %69 = call i32 @mz_zip_reader_init_internal (i8* %67, i32 %68)
 %70 = icmp ne i32 %69, 0
 br i1 %70, label %72, label %71
71:
 store i32 0, i32* %11
 br label %101
72:
 %73 = load i8*, i8** %12
 %74 = getelementptr %struct.mz_zip_archive, i8* %73, i32 0, i32 4
 store i32 5, i32* %74
 %75 = load i8*, i8** %12
 %76 = getelementptr %struct.mz_zip_archive, i8* %75, i32 0, i32 11
 store i8* @mz_zip_file_read_func, i8** %76
 %77 = load i8*, i8** %12
 %78 = load i8*, i8** %12
 %79 = getelementptr %struct.mz_zip_archive, i8* %78, i32 0, i32 14
 store i8* %77, i8** %79
 %80 = load i8*, i8** %13
 %81 = load i8*, i8** %12
 %82 = getelementptr %struct.mz_zip_archive, i8* %81, i32 0, i32 15
 %83 = load i8*, i8** %82
 %84 = getelementptr %struct.mz_zip_internal_state_tag, i8* %83, i32 0, i32 6
 store i8* %80, i8** %84
 %85 = load i64, i64* %14
 %86 = load i8*, i8** %12
 %87 = getelementptr %struct.mz_zip_archive, i8* %86, i32 0, i32 0
 store i64 %85, i64* %87
 %88 = load i64, i64* %16
 %89 = load i8*, i8** %12
 %90 = getelementptr %struct.mz_zip_archive, i8* %89, i32 0, i32 15
 %91 = load i8*, i8** %90
 %92 = getelementptr %struct.mz_zip_internal_state_tag, i8* %91, i32 0, i32 7
 store i64 %88, i64* %92
 %93 = load i8*, i8** %12
 %94 = load i32, i32* %15
 %95 = call i32 @mz_zip_reader_read_central_dir (i8* %93, i32 %94)
 %96 = icmp ne i32 %95, 0
 br i1 %96, label %100, label %97
97:
 %98 = load i8*, i8** %12
 %99 = call i32 @mz_zip_reader_end_internal (i8* %98, i32 0)
 store i32 0, i32* %11
 br label %101
100:
 store i32 1, i32* %11
 br label %101
101:
 %102 = load i32, i32* %11
 ret i32 %102
}

define i32 @mz_zip_reader_is_file_encrypted (i8* %0, i32 %1) {
 %3 = alloca i8*
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i32
 %9 = alloca i8*
 %10 = alloca i32
 %11 = alloca i32
 %12 = alloca i8*
 store i8* %0, i8** %9
 store i32 %1, i32* %10
 %13 = load i8*, i8** %9
 %14 = load i32, i32* %10
 store i8* %13, i8** %4
 store i32 %14, i32* %5
 %15 = load i8*, i8** %4
 %16 = icmp ne i8* %15, null
 br i1 %16, label %17, label %28
17:
 %18 = load i8*, i8** %4
 %19 = getelementptr %struct.mz_zip_archive, i8* %18, i32 0, i32 15
 %20 = load i8*, i8** %19
 %21 = icmp ne i8* %20, null
 br i1 %21, label %22, label %28
22:
 %23 = load i32, i32* %5
 %24 = load i8*, i8** %4
 %25 = getelementptr %struct.mz_zip_archive, i8* %24, i32 0, i32 2
 %26 = load i32, i32* %25
 %27 = icmp uge i32 %23, %26
 br i1 %27, label %28, label %29
28:
 store i8* null, i8** %3
 br label %45
29:
 %30 = load i8*, i8** %4
 %31 = getelementptr %struct.mz_zip_archive, i8* %30, i32 0, i32 15
 %32 = load i8*, i8** %31
 %33 = load i8*, i8** %32
 %34 = load i8*, i8** %4
 %35 = getelementptr %struct.mz_zip_archive, i8* %34, i32 0, i32 15
 %36 = load i8*, i8** %35
 %37 = getelementptr %struct.mz_zip_internal_state_tag, i8* %36, i32 0, i32 1
 %38 = load i8*, i8** %37
 %39 = load i32, i32* %5
 %40 = zext i32 %39 to i64
 %41 = getelementptr i32, i8* %38, i64 %40
 %42 = load i32, i32* %41
 %43 = zext i32 %42 to i64
 %44 = getelementptr i8, i8* %33, i64 %43
 store i8* %44, i8** %3
 br label %45
45:
 %46 = load i8*, i8** %3
 store i8* %46, i8** %12
 %47 = load i8*, i8** %12
 %48 = icmp ne i8* %47, null
 br i1 %48, label %58, label %49
49:
 %50 = load i8*, i8** %9
 store i8* %50, i8** %6
 store i32 24, i32* %7
 %51 = load i8*, i8** %6
 %52 = icmp ne i8* %51, null
 br i1 %52, label %53, label %57
53:
 %54 = load i32, i32* %7
 %55 = load i8*, i8** %6
 %56 = getelementptr %struct.mz_zip_archive, i8* %55, i32 0, i32 5
 store i32 %54, i32* %56
 br label %57
57:
 store i32 0, i32* %8
 br label %75
58:
 %59 = load i8*, i8** %12
 %60 = getelementptr i8, i8* %59, i64 8
 %61 = getelementptr i8, i8* %60, i64 0
 %62 = load i8, i8* %61
 %63 = zext i8 %62 to i32
 %64 = load i8*, i8** %12
 %65 = getelementptr i8, i8* %64, i64 8
 %66 = getelementptr i8, i8* %65, i64 1
 %67 = load i8, i8* %66
 %68 = zext i8 %67 to i32
 %69 = shl i32 %68, 8
 %70 = or i32 %63, %69
 store i32 %70, i32* %11
 %71 = load i32, i32* %11
 %72 = and i32 %71, 65
 %73 = icmp ne i32 %72, 0
 %74 = zext i1 %73 to i32
 store i32 %74, i32* %8
 br label %75
75:
 %76 = load i32, i32* %8
 ret i32 %76
}

define i32 @mz_zip_reader_is_file_supported (i8* %0, i32 %1) {
 %3 = alloca i8*
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca i8*
 %13 = alloca i32
 %14 = alloca i32
 %15 = alloca i8*
 %16 = alloca i32
 %17 = alloca i32
 %18 = alloca i32
 %19 = alloca i8*
 store i8* %0, i8** %15
 store i32 %1, i32* %16
 %20 = load i8*, i8** %15
 %21 = load i32, i32* %16
 store i8* %20, i8** %4
 store i32 %21, i32* %5
 %22 = load i8*, i8** %4
 %23 = icmp ne i8* %22, null
 br i1 %23, label %24, label %35
24:
 %25 = load i8*, i8** %4
 %26 = getelementptr %struct.mz_zip_archive, i8* %25, i32 0, i32 15
 %27 = load i8*, i8** %26
 %28 = icmp ne i8* %27, null
 br i1 %28, label %29, label %35
29:
 %30 = load i32, i32* %5
 %31 = load i8*, i8** %4
 %32 = getelementptr %struct.mz_zip_archive, i8* %31, i32 0, i32 2
 %33 = load i32, i32* %32
 %34 = icmp uge i32 %30, %33
 br i1 %34, label %35, label %36
35:
 store i8* null, i8** %3
 br label %52
36:
 %37 = load i8*, i8** %4
 %38 = getelementptr %struct.mz_zip_archive, i8* %37, i32 0, i32 15
 %39 = load i8*, i8** %38
 %40 = load i8*, i8** %39
 %41 = load i8*, i8** %4
 %42 = getelementptr %struct.mz_zip_archive, i8* %41, i32 0, i32 15
 %43 = load i8*, i8** %42
 %44 = getelementptr %struct.mz_zip_internal_state_tag, i8* %43, i32 0, i32 1
 %45 = load i8*, i8** %44
 %46 = load i32, i32* %5
 %47 = zext i32 %46 to i64
 %48 = getelementptr i32, i8* %45, i64 %47
 %49 = load i32, i32* %48
 %50 = zext i32 %49 to i64
 %51 = getelementptr i8, i8* %40, i64 %50
 store i8* %51, i8** %3
 br label %52
52:
 %53 = load i8*, i8** %3
 store i8* %53, i8** %19
 %54 = load i8*, i8** %19
 %55 = icmp ne i8* %54, null
 br i1 %55, label %65, label %56
56:
 %57 = load i8*, i8** %15
 store i8* %57, i8** %6
 store i32 24, i32* %7
 %58 = load i8*, i8** %6
 %59 = icmp ne i8* %58, null
 br i1 %59, label %60, label %64
60:
 %61 = load i32, i32* %7
 %62 = load i8*, i8** %6
 %63 = getelementptr %struct.mz_zip_archive, i8* %62, i32 0, i32 5
 store i32 %61, i32* %63
 br label %64
64:
 store i32 0, i32* %14
 br label %131
65:
 %66 = load i8*, i8** %19
 %67 = getelementptr i8, i8* %66, i64 10
 %68 = getelementptr i8, i8* %67, i64 0
 %69 = load i8, i8* %68
 %70 = zext i8 %69 to i32
 %71 = load i8*, i8** %19
 %72 = getelementptr i8, i8* %71, i64 10
 %73 = getelementptr i8, i8* %72, i64 1
 %74 = load i8, i8* %73
 %75 = zext i8 %74 to i32
 %76 = shl i32 %75, 8
 %77 = or i32 %70, %76
 store i32 %77, i32* %18
 %78 = load i8*, i8** %19
 %79 = getelementptr i8, i8* %78, i64 8
 %80 = getelementptr i8, i8* %79, i64 0
 %81 = load i8, i8* %80
 %82 = zext i8 %81 to i32
 %83 = load i8*, i8** %19
 %84 = getelementptr i8, i8* %83, i64 8
 %85 = getelementptr i8, i8* %84, i64 1
 %86 = load i8, i8* %85
 %87 = zext i8 %86 to i32
 %88 = shl i32 %87, 8
 %89 = or i32 %82, %88
 store i32 %89, i32* %17
 %90 = load i32, i32* %18
 %91 = icmp ne i32 %90, 0
 br i1 %91, label %92, label %104
92:
 %93 = load i32, i32* %18
 %94 = icmp ne i32 %93, 8
 br i1 %94, label %95, label %104
95:
 %96 = load i8*, i8** %15
 store i8* %96, i8** %8
 store i32 4, i32* %9
 %97 = load i8*, i8** %8
 %98 = icmp ne i8* %97, null
 br i1 %98, label %99, label %103
99:
 %100 = load i32, i32* %9
 %101 = load i8*, i8** %8
 %102 = getelementptr %struct.mz_zip_archive, i8* %101, i32 0, i32 5
 store i32 %100, i32* %102
 br label %103
103:
 store i32 0, i32* %14
 br label %131
104:
 %105 = load i32, i32* %17
 %106 = and i32 %105, 65
 %107 = icmp ne i32 %106, 0
 br i1 %107, label %108, label %117
108:
 %109 = load i8*, i8** %15
 store i8* %109, i8** %10
 store i32 5, i32* %11
 %110 = load i8*, i8** %10
 %111 = icmp ne i8* %110, null
 br i1 %111, label %112, label %116
112:
 %113 = load i32, i32* %11
 %114 = load i8*, i8** %10
 %115 = getelementptr %struct.mz_zip_archive, i8* %114, i32 0, i32 5
 store i32 %113, i32* %115
 br label %116
116:
 store i32 0, i32* %14
 br label %131
117:
 %118 = load i32, i32* %17
 %119 = and i32 %118, 32
 %120 = icmp ne i32 %119, 0
 br i1 %120, label %121, label %130
121:
 %122 = load i8*, i8** %15
 store i8* %122, i8** %12
 store i32 6, i32* %13
 %123 = load i8*, i8** %12
 %124 = icmp ne i8* %123, null
 br i1 %124, label %125, label %129
125:
 %126 = load i32, i32* %13
 %127 = load i8*, i8** %12
 %128 = getelementptr %struct.mz_zip_archive, i8* %127, i32 0, i32 5
 store i32 %126, i32* %128
 br label %129
129:
 store i32 0, i32* %14
 br label %131
130:
 store i32 1, i32* %14
 br label %131
131:
 %132 = load i32, i32* %14
 ret i32 %132
}

define i32 @mz_zip_reader_is_file_a_directory (i8* %0, i32 %1) {
 %3 = alloca i8*
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i32
 %9 = alloca i8*
 %10 = alloca i32
 %11 = alloca i32
 %12 = alloca i32
 %13 = alloca i32
 %14 = alloca i8*
 store i8* %0, i8** %9
 store i32 %1, i32* %10
 %15 = load i8*, i8** %9
 %16 = load i32, i32* %10
 store i8* %15, i8** %4
 store i32 %16, i32* %5
 %17 = load i8*, i8** %4
 %18 = icmp ne i8* %17, null
 br i1 %18, label %19, label %30
19:
 %20 = load i8*, i8** %4
 %21 = getelementptr %struct.mz_zip_archive, i8* %20, i32 0, i32 15
 %22 = load i8*, i8** %21
 %23 = icmp ne i8* %22, null
 br i1 %23, label %24, label %30
24:
 %25 = load i32, i32* %5
 %26 = load i8*, i8** %4
 %27 = getelementptr %struct.mz_zip_archive, i8* %26, i32 0, i32 2
 %28 = load i32, i32* %27
 %29 = icmp uge i32 %25, %28
 br i1 %29, label %30, label %31
30:
 store i8* null, i8** %3
 br label %47
31:
 %32 = load i8*, i8** %4
 %33 = getelementptr %struct.mz_zip_archive, i8* %32, i32 0, i32 15
 %34 = load i8*, i8** %33
 %35 = load i8*, i8** %34
 %36 = load i8*, i8** %4
 %37 = getelementptr %struct.mz_zip_archive, i8* %36, i32 0, i32 15
 %38 = load i8*, i8** %37
 %39 = getelementptr %struct.mz_zip_internal_state_tag, i8* %38, i32 0, i32 1
 %40 = load i8*, i8** %39
 %41 = load i32, i32* %5
 %42 = zext i32 %41 to i64
 %43 = getelementptr i32, i8* %40, i64 %42
 %44 = load i32, i32* %43
 %45 = zext i32 %44 to i64
 %46 = getelementptr i8, i8* %35, i64 %45
 store i8* %46, i8** %3
 br label %47
47:
 %48 = load i8*, i8** %3
 store i8* %48, i8** %14
 %49 = load i8*, i8** %14
 %50 = icmp ne i8* %49, null
 br i1 %50, label %60, label %51
51:
 %52 = load i8*, i8** %9
 store i8* %52, i8** %6
 store i32 24, i32* %7
 %53 = load i8*, i8** %6
 %54 = icmp ne i8* %53, null
 br i1 %54, label %55, label %59
55:
 %56 = load i32, i32* %7
 %57 = load i8*, i8** %6
 %58 = getelementptr %struct.mz_zip_archive, i8* %57, i32 0, i32 5
 store i32 %56, i32* %58
 br label %59
59:
 store i32 0, i32* %8
 br label %133
60:
 %61 = load i8*, i8** %14
 %62 = getelementptr i8, i8* %61, i64 28
 %63 = getelementptr i8, i8* %62, i64 0
 %64 = load i8, i8* %63
 %65 = zext i8 %64 to i32
 %66 = load i8*, i8** %14
 %67 = getelementptr i8, i8* %66, i64 28
 %68 = getelementptr i8, i8* %67, i64 1
 %69 = load i8, i8* %68
 %70 = zext i8 %69 to i32
 %71 = shl i32 %70, 8
 %72 = or i32 %65, %71
 store i32 %72, i32* %11
 %73 = load i32, i32* %11
 %74 = icmp ne i32 %73, 0
 br i1 %74, label %75, label %87
75:
 %76 = load i8*, i8** %14
 %77 = getelementptr i8, i8* %76, i64 46
 %78 = load i32, i32* %11
 %79 = zext i32 %78 to i64
 %80 = getelementptr i8, i8* %77, i64 %79
 %81 = getelementptr i8, i8* %80, i64 -1
 %82 = load i8, i8* %81
 %83 = zext i8 %82 to i32
 %84 = icmp eq i32 %83, 47
 br i1 %84, label %85, label %86
85:
 store i32 1, i32* %8
 br label %133
86:
 br label %87
87:
 %88 = load i8*, i8** %14
 %89 = getelementptr i8, i8* %88, i64 4
 %90 = getelementptr i8, i8* %89, i64 0
 %91 = load i8, i8* %90
 %92 = zext i8 %91 to i32
 %93 = load i8*, i8** %14
 %94 = getelementptr i8, i8* %93, i64 4
 %95 = getelementptr i8, i8* %94, i64 1
 %96 = load i8, i8* %95
 %97 = zext i8 %96 to i32
 %98 = shl i32 %97, 8
 %99 = or i32 %92, %98
 %100 = lshr i32 %99, 8
 store i32 %100, i32* %12
 %101 = load i32, i32* %12
 %102 = load i8*, i8** %14
 %103 = getelementptr i8, i8* %102, i64 38
 %104 = getelementptr i8, i8* %103, i64 0
 %105 = load i8, i8* %104
 %106 = zext i8 %105 to i32
 %107 = load i8*, i8** %14
 %108 = getelementptr i8, i8* %107, i64 38
 %109 = getelementptr i8, i8* %108, i64 1
 %110 = load i8, i8* %109
 %111 = zext i8 %110 to i32
 %112 = shl i32 %111, 8
 %113 = or i32 %106, %112
 %114 = load i8*, i8** %14
 %115 = getelementptr i8, i8* %114, i64 38
 %116 = getelementptr i8, i8* %115, i64 2
 %117 = load i8, i8* %116
 %118 = zext i8 %117 to i32
 %119 = shl i32 %118, 16
 %120 = or i32 %113, %119
 %121 = load i8*, i8** %14
 %122 = getelementptr i8, i8* %121, i64 38
 %123 = getelementptr i8, i8* %122, i64 3
 %124 = load i8, i8* %123
 %125 = zext i8 %124 to i32
 %126 = shl i32 %125, 24
 %127 = or i32 %120, %126
 store i32 %127, i32* %13
 %128 = load i32, i32* %13
 %129 = and i32 %128, 16
 %130 = icmp ne i32 %129, 0
 br i1 %130, label %131, label %132
131:
 store i32 1, i32* %8
 br label %133
132:
 store i32 0, i32* %8
 br label %133
133:
 %134 = load i32, i32* %8
 ret i32 %134
}

define i32 @mz_zip_reader_locate_file (i8* %0, i8* %1, i8* %2, i32 %3) {
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i32
 store i8* %0, i8** %6
 store i8* %1, i8** %7
 store i8* %2, i8** %8
 store i32 %3, i32* %9
 %11 = load i8*, i8** %6
 %12 = load i8*, i8** %7
 %13 = load i8*, i8** %8
 %14 = load i32, i32* %9
 %15 = call i32 @mz_zip_reader_locate_file_v2 (i8* %11, i8* %12, i8* %13, i32 %14, i8* %10)
 %16 = icmp ne i32 %15, 0
 br i1 %16, label %18, label %17
17:
 store i32 -1, i32* %5
 br label %20
18:
 %19 = load i32, i32* %10
 store i32 %19, i32* %5
 br label %20
20:
 %21 = load i32, i32* %5
 ret i32 %21
}

define i32 @mz_zip_reader_locate_file_v2 (i8* %0, i8* %1, i8* %2, i32 %3, i8* %4) {
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i32
 %11 = alloca i32
 %12 = alloca i32
 %13 = alloca i8*
 %14 = alloca i8*
 %15 = alloca i32
 %16 = alloca i32
 %17 = alloca i32
 %18 = alloca i8*
 %19 = alloca i32
 %20 = alloca i8*
 %21 = alloca i32
 %22 = alloca i8*
 %23 = alloca i32
 %24 = alloca i8*
 %25 = alloca i32
 %26 = alloca i32
 %27 = alloca i8*
 %28 = alloca i8*
 %29 = alloca i8*
 %30 = alloca i32
 %31 = alloca i8*
 %32 = alloca i32
 %33 = alloca i64
 %34 = alloca i64
 %35 = alloca i8*
 %36 = alloca i32
 %37 = alloca i8*
 %38 = alloca i32
 %39 = alloca i32
 %40 = alloca i8*
 %41 = alloca i32
 store i8* %0, i8** %27
 store i8* %1, i8** %28
 store i8* %2, i8** %29
 store i32 %3, i32* %30
 store i8* %4, i8** %31
 %42 = load i8*, i8** %31
 %43 = icmp ne i8* %42, null
 br i1 %43, label %44, label %46
44:
 %45 = load i8*, i8** %31
 store i32 0, i32* %45
 br label %46
46:
 %47 = load i8*, i8** %27
 %48 = icmp ne i8* %47, null
 br i1 %48, label %49, label %57
49:
 %50 = load i8*, i8** %27
 %51 = getelementptr %struct.mz_zip_archive, i8* %50, i32 0, i32 15
 %52 = load i8*, i8** %51
 %53 = icmp ne i8* %52, null
 br i1 %53, label %54, label %57
54:
 %55 = load i8*, i8** %28
 %56 = icmp ne i8* %55, null
 br i1 %56, label %66, label %57
57:
 %58 = load i8*, i8** %27
 store i8* %58, i8** %18
 store i32 24, i32* %19
 %59 = load i8*, i8** %18
 %60 = icmp ne i8* %59, null
 br i1 %60, label %61, label %65
61:
 %62 = load i32, i32* %19
 %63 = load i8*, i8** %18
 %64 = getelementptr %struct.mz_zip_archive, i8* %63, i32 0, i32 5
 store i32 %62, i32* %64
 br label %65
65:
 store i32 0, i32* %26
 br label %488
66:
 %67 = load i8*, i8** %27
 %68 = getelementptr %struct.mz_zip_archive, i8* %67, i32 0, i32 15
 %69 = load i8*, i8** %68
 %70 = getelementptr %struct.mz_zip_internal_state_tag, i8* %69, i32 0, i32 3
 %71 = load i32, i32* %70
 %72 = and i32 %71, 2048
 %73 = icmp eq i32 %72, 0
 br i1 %73, label %74, label %99
74:
 %75 = load i8*, i8** %27
 %76 = getelementptr %struct.mz_zip_archive, i8* %75, i32 0, i32 3
 %77 = load i32, i32* %76
 %78 = icmp eq i32 %77, 1
 br i1 %78, label %79, label %99
79:
 %80 = load i32, i32* %30
 %81 = and i32 %80, 768
 %82 = icmp eq i32 %81, 0
 br i1 %82, label %83, label %99
83:
 %84 = load i8*, i8** %29
 %85 = icmp ne i8* %84, null
 br i1 %85, label %99, label %86
86:
 %87 = load i8*, i8** %27
 %88 = getelementptr %struct.mz_zip_archive, i8* %87, i32 0, i32 15
 %89 = load i8*, i8** %88
 %90 = getelementptr %struct.mz_zip_internal_state_tag, i8* %89, i32 0, i32 2
 %91 = getelementptr %struct.mz_zip_array, i8* %90, i32 0, i32 1
 %92 = load i64, i64* %91
 %93 = icmp ne i64 %92, 0
 br i1 %93, label %94, label %99
94:
 %95 = load i8*, i8** %27
 %96 = load i8*, i8** %28
 %97 = load i8*, i8** %31
 %98 = call i32 @mz_zip_locate_file_binary_search (i8* %95, i8* %96, i8* %97)
 store i32 %98, i32* %26
 br label %488
99:
 %100 = load i8*, i8** %28
 %101 = call i64 @strlen (i8* %100)
 store i64 %101, i64* %33
 %102 = load i64, i64* %33
 %103 = icmp ugt i64 %102, 65535
 br i1 %103, label %104, label %113
104:
 %105 = load i8*, i8** %27
 store i8* %105, i8** %20
 store i32 24, i32* %21
 %106 = load i8*, i8** %20
 %107 = icmp ne i8* %106, null
 br i1 %107, label %108, label %112
108:
 %109 = load i32, i32* %21
 %110 = load i8*, i8** %20
 %111 = getelementptr %struct.mz_zip_archive, i8* %110, i32 0, i32 5
 store i32 %109, i32* %111
 br label %112
112:
 store i32 0, i32* %26
 br label %488
113:
 %114 = load i8*, i8** %29
 %115 = icmp ne i8* %114, null
 br i1 %115, label %116, label %119
116:
 %117 = load i8*, i8** %29
 %118 = call i64 @strlen (i8* %117)
 br label %120
119:
 br label %120
120:
 %121 = phi i64 [%118, %116], [0, %119]
 store i64 %121, i64* %34
 %122 = load i64, i64* %34
 %123 = icmp ugt i64 %122, 65535
 br i1 %123, label %124, label %133
124:
 %125 = load i8*, i8** %27
 store i8* %125, i8** %22
 store i32 24, i32* %23
 %126 = load i8*, i8** %22
 %127 = icmp ne i8* %126, null
 br i1 %127, label %128, label %132
128:
 %129 = load i32, i32* %23
 %130 = load i8*, i8** %22
 %131 = getelementptr %struct.mz_zip_archive, i8* %130, i32 0, i32 5
 store i32 %129, i32* %131
 br label %132
132:
 store i32 0, i32* %26
 br label %488
133:
 store i32 0, i32* %32
 br label %134
134:
 %135 = load i32, i32* %32
 %136 = load i8*, i8** %27
 %137 = getelementptr %struct.mz_zip_archive, i8* %136, i32 0, i32 2
 %138 = load i32, i32* %137
 %139 = icmp ult i32 %135, %138
 br i1 %139, label %140, label %479
140:
 %141 = load i8*, i8** %27
 %142 = getelementptr %struct.mz_zip_archive, i8* %141, i32 0, i32 15
 %143 = load i8*, i8** %142
 %144 = getelementptr %struct.mz_zip_internal_state_tag, i8* %143, i32 0, i32 0
 %145 = getelementptr %struct.mz_zip_array, i8* %144, i32 0, i32 0
 %146 = load i8*, i8** %145
 %147 = load i8*, i8** %27
 %148 = getelementptr %struct.mz_zip_archive, i8* %147, i32 0, i32 15
 %149 = load i8*, i8** %148
 %150 = getelementptr %struct.mz_zip_internal_state_tag, i8* %149, i32 0, i32 1
 %151 = getelementptr %struct.mz_zip_array, i8* %150, i32 0, i32 0
 %152 = load i8*, i8** %151
 %153 = load i32, i32* %32
 %154 = zext i32 %153 to i64
 %155 = getelementptr i32, i8* %152, i64 %154
 %156 = load i32, i32* %155
 %157 = zext i32 %156 to i64
 %158 = getelementptr i8, i8* %146, i64 %157
 store i8* %158, i8** %35
 %159 = load i8*, i8** %35
 %160 = getelementptr i8, i8* %159, i64 28
 %161 = getelementptr i8, i8* %160, i64 0
 %162 = load i8, i8* %161
 %163 = zext i8 %162 to i32
 %164 = load i8*, i8** %35
 %165 = getelementptr i8, i8* %164, i64 28
 %166 = getelementptr i8, i8* %165, i64 1
 %167 = load i8, i8* %166
 %168 = zext i8 %167 to i32
 %169 = shl i32 %168, 8
 %170 = or i32 %163, %169
 store i32 %170, i32* %36
 %171 = load i8*, i8** %35
 %172 = getelementptr i8, i8* %171, i64 46
 store i8* %172, i8** %37
 %173 = load i32, i32* %36
 %174 = zext i32 %173 to i64
 %175 = load i64, i64* %33
 %176 = icmp ult i64 %174, %175
 br i1 %176, label %177, label %178
177:
 br label %476
178:
 %179 = load i64, i64* %34
 %180 = icmp ne i64 %179, 0
 br i1 %180, label %181, label %316
181:
 %182 = load i8*, i8** %35
 %183 = getelementptr i8, i8* %182, i64 30
 %184 = getelementptr i8, i8* %183, i64 0
 %185 = load i8, i8* %184
 %186 = zext i8 %185 to i32
 %187 = load i8*, i8** %35
 %188 = getelementptr i8, i8* %187, i64 30
 %189 = getelementptr i8, i8* %188, i64 1
 %190 = load i8, i8* %189
 %191 = zext i8 %190 to i32
 %192 = shl i32 %191, 8
 %193 = or i32 %186, %192
 store i32 %193, i32* %38
 %194 = load i8*, i8** %35
 %195 = getelementptr i8, i8* %194, i64 32
 %196 = getelementptr i8, i8* %195, i64 0
 %197 = load i8, i8* %196
 %198 = zext i8 %197 to i32
 %199 = load i8*, i8** %35
 %200 = getelementptr i8, i8* %199, i64 32
 %201 = getelementptr i8, i8* %200, i64 1
 %202 = load i8, i8* %201
 %203 = zext i8 %202 to i32
 %204 = shl i32 %203, 8
 %205 = or i32 %198, %204
 store i32 %205, i32* %39
 %206 = load i8*, i8** %37
 %207 = load i32, i32* %36
 %208 = zext i32 %207 to i64
 %209 = getelementptr i8, i8* %206, i64 %208
 %210 = load i32, i32* %38
 %211 = zext i32 %210 to i64
 %212 = getelementptr i8, i8* %209, i64 %211
 store i8* %212, i8** %40
 %213 = load i32, i32* %39
 %214 = zext i32 %213 to i64
 %215 = load i64, i64* %34
 %216 = icmp ne i64 %214, %215
 br i1 %216, label %314, label %217
217:
 %218 = load i8*, i8** %29
 %219 = load i8*, i8** %40
 %220 = load i32, i32* %39
 %221 = load i32, i32* %30
 store i8* %218, i8** %7
 store i8* %219, i8** %8
 store i32 %220, i32* %9
 store i32 %221, i32* %10
 %222 = load i32, i32* %10
 %223 = and i32 %222, 256
 %224 = icmp ne i32 %223, 0
 br i1 %224, label %225, label %233
225:
 %226 = load i8*, i8** %7
 %227 = load i8*, i8** %8
 %228 = load i32, i32* %9
 %229 = zext i32 %228 to i64
 %230 = call i32 @memcmp (i8* %226, i8* %227, i64 %229)
 %231 = icmp eq i32 0, %230
 %232 = zext i1 %231 to i32
 store i32 %232, i32* %6
 br label %311
233:
 store i32 0, i32* %11
 br label %234
234:
 %235 = load i32, i32* %11
 %236 = load i32, i32* %9
 %237 = icmp ult i32 %235, %236
 br i1 %237, label %238, label %310
238:
 %239 = load i8*, i8** %7
 %240 = load i32, i32* %11
 %241 = zext i32 %240 to i64
 %242 = getelementptr i8, i8* %239, i64 %241
 %243 = load i8, i8* %242
 %244 = sext i8 %243 to i32
 %245 = icmp sge i32 %244, 65
 br i1 %245, label %246, label %263
246:
 %247 = load i8*, i8** %7
 %248 = load i32, i32* %11
 %249 = zext i32 %248 to i64
 %250 = getelementptr i8, i8* %247, i64 %249
 %251 = load i8, i8* %250
 %252 = sext i8 %251 to i32
 %253 = icmp sle i32 %252, 90
 br i1 %253, label %254, label %263
254:
 %255 = load i8*, i8** %7
 %256 = load i32, i32* %11
 %257 = zext i32 %256 to i64
 %258 = getelementptr i8, i8* %255, i64 %257
 %259 = load i8, i8* %258
 %260 = sext i8 %259 to i32
 %261 = sub i32 %260, 65
 %262 = add i32 %261, 97
 br label %270
263:
 %264 = load i8*, i8** %7
 %265 = load i32, i32* %11
 %266 = zext i32 %265 to i64
 %267 = getelementptr i8, i8* %264, i64 %266
 %268 = load i8, i8* %267
 %269 = sext i8 %268 to i32
 br label %270
270:
 %271 = phi i32 [%262, %254], [%269, %263]
 %272 = load i8*, i8** %8
 %273 = load i32, i32* %11
 %274 = zext i32 %273 to i64
 %275 = getelementptr i8, i8* %272, i64 %274
 %276 = load i8, i8* %275
 %277 = sext i8 %276 to i32
 %278 = icmp sge i32 %277, 65
 br i1 %278, label %279, label %296
279:
 %280 = load i8*, i8** %8
 %281 = load i32, i32* %11
 %282 = zext i32 %281 to i64
 %283 = getelementptr i8, i8* %280, i64 %282
 %284 = load i8, i8* %283
 %285 = sext i8 %284 to i32
 %286 = icmp sle i32 %285, 90
 br i1 %286, label %287, label %296
287:
 %288 = load i8*, i8** %8
 %289 = load i32, i32* %11
 %290 = zext i32 %289 to i64
 %291 = getelementptr i8, i8* %288, i64 %290
 %292 = load i8, i8* %291
 %293 = sext i8 %292 to i32
 %294 = sub i32 %293, 65
 %295 = add i32 %294, 97
 br label %303
296:
 %297 = load i8*, i8** %8
 %298 = load i32, i32* %11
 %299 = zext i32 %298 to i64
 %300 = getelementptr i8, i8* %297, i64 %299
 %301 = load i8, i8* %300
 %302 = sext i8 %301 to i32
 br label %303
303:
 %304 = phi i32 [%295, %287], [%302, %296]
 %305 = icmp ne i32 %271, %304
 br i1 %305, label %306, label %307
306:
 store i32 0, i32* %6
 br label %311
307:
 %308 = load i32, i32* %11
 %309 = add i32 %308, 1
 store i32 %309, i32* %11
 br label %234
310:
 store i32 1, i32* %6
 br label %311
311:
 %312 = load i32, i32* %6
 %313 = icmp ne i32 %312, 0
 br i1 %313, label %315, label %314
314:
 br label %476
315:
 br label %316
316:
 %317 = load i32, i32* %30
 %318 = and i32 %317, 512
 %319 = icmp ne i32 %318, 0
 br i1 %319, label %320, label %366
320:
 %321 = load i32, i32* %36
 %322 = icmp ne i32 %321, 0
 br i1 %322, label %323, label %366
323:
 %324 = load i32, i32* %36
 %325 = sub i32 %324, 1
 store i32 %325, i32* %41
 br label %326
326:
 %327 = load i8*, i8** %37
 %328 = load i32, i32* %41
 %329 = sext i32 %328 to i64
 %330 = getelementptr i8, i8* %327, i64 %329
 %331 = load i8, i8* %330
 %332 = sext i8 %331 to i32
 %333 = icmp eq i32 %332, 47
 br i1 %333, label %350, label %334
334:
 %335 = load i8*, i8** %37
 %336 = load i32, i32* %41
 %337 = sext i32 %336 to i64
 %338 = getelementptr i8, i8* %335, i64 %337
 %339 = load i8, i8* %338
 %340 = sext i8 %339 to i32
 %341 = icmp eq i32 %340, 92
 br i1 %341, label %350, label %342
342:
 %343 = load i8*, i8** %37
 %344 = load i32, i32* %41
 %345 = sext i32 %344 to i64
 %346 = getelementptr i8, i8* %343, i64 %345
 %347 = load i8, i8* %346
 %348 = sext i8 %347 to i32
 %349 = icmp eq i32 %348, 58
 br i1 %349, label %350, label %351
350:
 br label %356
351:
 br label %352
352:
 %353 = load i32, i32* %41
 %354 = add i32 %353, -1
 store i32 %354, i32* %41
 %355 = icmp sge i32 %354, 0
 br i1 %355, label %326, label %356
356:
 %357 = load i32, i32* %41
 %358 = add i32 %357, 1
 store i32 %358, i32* %41
 %359 = load i32, i32* %41
 %360 = load i8*, i8** %37
 %361 = sext i32 %359 to i64
 %362 = getelementptr i8, i8* %360, i64 %361
 store i8* %362, i8** %37
 %363 = load i32, i32* %41
 %364 = load i32, i32* %36
 %365 = sub i32 %364, %363
 store i32 %365, i32* %36
 br label %366
366:
 %367 = load i32, i32* %36
 %368 = zext i32 %367 to i64
 %369 = load i64, i64* %33
 %370 = icmp eq i64 %368, %369
 br i1 %370, label %371, label %475
371:
 %372 = load i8*, i8** %28
 %373 = load i8*, i8** %37
 %374 = load i32, i32* %36
 %375 = load i32, i32* %30
 store i8* %372, i8** %13
 store i8* %373, i8** %14
 store i32 %374, i32* %15
 store i32 %375, i32* %16
 %376 = load i32, i32* %16
 %377 = and i32 %376, 256
 %378 = icmp ne i32 %377, 0
 br i1 %378, label %379, label %387
379:
 %380 = load i8*, i8** %13
 %381 = load i8*, i8** %14
 %382 = load i32, i32* %15
 %383 = zext i32 %382 to i64
 %384 = call i32 @memcmp (i8* %380, i8* %381, i64 %383)
 %385 = icmp eq i32 0, %384
 %386 = zext i1 %385 to i32
 store i32 %386, i32* %12
 br label %465
387:
 store i32 0, i32* %17
 br label %388
388:
 %389 = load i32, i32* %17
 %390 = load i32, i32* %15
 %391 = icmp ult i32 %389, %390
 br i1 %391, label %392, label %464
392:
 %393 = load i8*, i8** %13
 %394 = load i32, i32* %17
 %395 = zext i32 %394 to i64
 %396 = getelementptr i8, i8* %393, i64 %395
 %397 = load i8, i8* %396
 %398 = sext i8 %397 to i32
 %399 = icmp sge i32 %398, 65
 br i1 %399, label %400, label %417
400:
 %401 = load i8*, i8** %13
 %402 = load i32, i32* %17
 %403 = zext i32 %402 to i64
 %404 = getelementptr i8, i8* %401, i64 %403
 %405 = load i8, i8* %404
 %406 = sext i8 %405 to i32
 %407 = icmp sle i32 %406, 90
 br i1 %407, label %408, label %417
408:
 %409 = load i8*, i8** %13
 %410 = load i32, i32* %17
 %411 = zext i32 %410 to i64
 %412 = getelementptr i8, i8* %409, i64 %411
 %413 = load i8, i8* %412
 %414 = sext i8 %413 to i32
 %415 = sub i32 %414, 65
 %416 = add i32 %415, 97
 br label %424
417:
 %418 = load i8*, i8** %13
 %419 = load i32, i32* %17
 %420 = zext i32 %419 to i64
 %421 = getelementptr i8, i8* %418, i64 %420
 %422 = load i8, i8* %421
 %423 = sext i8 %422 to i32
 br label %424
424:
 %425 = phi i32 [%416, %408], [%423, %417]
 %426 = load i8*, i8** %14
 %427 = load i32, i32* %17
 %428 = zext i32 %427 to i64
 %429 = getelementptr i8, i8* %426, i64 %428
 %430 = load i8, i8* %429
 %431 = sext i8 %430 to i32
 %432 = icmp sge i32 %431, 65
 br i1 %432, label %433, label %450
433:
 %434 = load i8*, i8** %14
 %435 = load i32, i32* %17
 %436 = zext i32 %435 to i64
 %437 = getelementptr i8, i8* %434, i64 %436
 %438 = load i8, i8* %437
 %439 = sext i8 %438 to i32
 %440 = icmp sle i32 %439, 90
 br i1 %440, label %441, label %450
441:
 %442 = load i8*, i8** %14
 %443 = load i32, i32* %17
 %444 = zext i32 %443 to i64
 %445 = getelementptr i8, i8* %442, i64 %444
 %446 = load i8, i8* %445
 %447 = sext i8 %446 to i32
 %448 = sub i32 %447, 65
 %449 = add i32 %448, 97
 br label %457
450:
 %451 = load i8*, i8** %14
 %452 = load i32, i32* %17
 %453 = zext i32 %452 to i64
 %454 = getelementptr i8, i8* %451, i64 %453
 %455 = load i8, i8* %454
 %456 = sext i8 %455 to i32
 br label %457
457:
 %458 = phi i32 [%449, %441], [%456, %450]
 %459 = icmp ne i32 %425, %458
 br i1 %459, label %460, label %461
460:
 store i32 0, i32* %12
 br label %465
461:
 %462 = load i32, i32* %17
 %463 = add i32 %462, 1
 store i32 %463, i32* %17
 br label %388
464:
 store i32 1, i32* %12
 br label %465
465:
 %466 = load i32, i32* %12
 %467 = icmp ne i32 %466, 0
 br i1 %467, label %468, label %475
468:
 %469 = load i8*, i8** %31
 %470 = icmp ne i8* %469, null
 br i1 %470, label %471, label %474
471:
 %472 = load i32, i32* %32
 %473 = load i8*, i8** %31
 store i32 %472, i32* %473
 br label %474
474:
 store i32 1, i32* %26
 br label %488
475:
 br label %476
476:
 %477 = load i32, i32* %32
 %478 = add i32 %477, 1
 store i32 %478, i32* %32
 br label %134
479:
 %480 = load i8*, i8** %27
 store i8* %480, i8** %24
 store i32 28, i32* %25
 %481 = load i8*, i8** %24
 %482 = icmp ne i8* %481, null
 br i1 %482, label %483, label %487
483:
 %484 = load i32, i32* %25
 %485 = load i8*, i8** %24
 %486 = getelementptr %struct.mz_zip_archive, i8* %485, i32 0, i32 5
 store i32 %484, i32* %486
 br label %487
487:
 store i32 0, i32* %26
 br label %488
488:
 %489 = load i32, i32* %26
 ret i32 %489
}

define i32 @mz_zip_locate_file_binary_search (i8* %0, i8* %1, i8* %2) {
 %4 = alloca i8*
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i32
 %9 = alloca i8*
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca i8
 %13 = alloca i8
 %14 = alloca i8*
 %15 = alloca i32
 %16 = alloca i32
 %17 = alloca i8*
 %18 = alloca i8*
 %19 = alloca i8*
 %20 = alloca i8*
 %21 = alloca i8*
 %22 = alloca i8*
 %23 = alloca i8*
 %24 = alloca i32
 %25 = alloca i32
 %26 = alloca i64
 %27 = alloca i64
 %28 = alloca i64
 %29 = alloca i32
 %30 = alloca i32
 store i8* %0, i8** %17
 store i8* %1, i8** %18
 store i8* %2, i8** %19
 %31 = load i8*, i8** %17
 %32 = getelementptr %struct.mz_zip_archive, i8* %31, i32 0, i32 15
 %33 = load i8*, i8** %32
 store i8* %33, i8** %20
 %34 = load i8*, i8** %20
 %35 = getelementptr %struct.mz_zip_internal_state_tag, i8* %34, i32 0, i32 1
 store i8* %35, i8** %21
 %36 = load i8*, i8** %20
 %37 = getelementptr %struct.mz_zip_internal_state_tag, i8* %36, i32 0, i32 0
 store i8* %37, i8** %22
 %38 = load i8*, i8** %20
 %39 = getelementptr %struct.mz_zip_internal_state_tag, i8* %38, i32 0, i32 2
 %40 = getelementptr %struct.mz_zip_array, i8* %39, i32 0, i32 0
 %41 = load i8*, i8** %40
 %42 = getelementptr i32, i8* %41, i64 0
 store i8* %42, i8** %23
 %43 = load i8*, i8** %17
 %44 = getelementptr %struct.mz_zip_archive, i8* %43, i32 0, i32 2
 %45 = load i32, i32* %44
 store i32 %45, i32* %24
 %46 = load i8*, i8** %18
 %47 = call i64 @strlen (i8* %46)
 %48 = trunc i64 %47 to i32
 store i32 %48, i32* %25
 %49 = load i8*, i8** %19
 %50 = icmp ne i8* %49, null
 br i1 %50, label %51, label %53
51:
 %52 = load i8*, i8** %19
 store i32 0, i32* %52
 br label %53
53:
 %54 = load i32, i32* %24
 %55 = icmp ne i32 %54, 0
 br i1 %55, label %56, label %212
56:
 store i64 0, i64* %26
 %57 = load i32, i32* %24
 %58 = zext i32 %57 to i64
 %59 = sub i64 %58, 1
 store i64 %59, i64* %27
 br label %60
60:
 %61 = load i64, i64* %26
 %62 = load i64, i64* %27
 %63 = icmp sle i64 %61, %62
 br i1 %63, label %64, label %211
64:
 %65 = load i64, i64* %26
 %66 = load i64, i64* %27
 %67 = load i64, i64* %26
 %68 = sub i64 %66, %67
 %69 = ashr i64 %68, 1
 %70 = add i64 %65, %69
 store i64 %70, i64* %28
 %71 = load i8*, i8** %23
 %72 = load i64, i64* %28
 %73 = trunc i64 %72 to i32
 %74 = zext i32 %73 to i64
 %75 = getelementptr i32, i8* %71, i64 %74
 %76 = load i32, i32* %75
 store i32 %76, i32* %29
 %77 = load i8*, i8** %22
 %78 = load i8*, i8** %21
 %79 = load i32, i32* %29
 %80 = load i8*, i8** %18
 %81 = load i32, i32* %25
 store i8* %77, i8** %4
 store i8* %78, i8** %5
 store i32 %79, i32* %6
 store i8* %80, i8** %7
 store i32 %81, i32* %8
 %82 = load i8*, i8** %4
 %83 = load i8*, i8** %82
 %84 = load i8*, i8** %5
 %85 = load i8*, i8** %84
 %86 = load i32, i32* %6
 %87 = zext i32 %86 to i64
 %88 = getelementptr i32, i8* %85, i64 %87
 %89 = load i32, i32* %88
 %90 = zext i32 %89 to i64
 %91 = getelementptr i8, i8* %83, i64 %90
 store i8* %91, i8** %9
 %92 = load i8*, i8** %9
 %93 = getelementptr i8, i8* %92, i64 28
 %94 = load i8, i8* %93
 %95 = zext i8 %94 to i32
 %96 = load i8*, i8** %9
 %97 = getelementptr i8, i8* %96, i64 28
 %98 = getelementptr i8, i8* %97, i64 1
 %99 = load i8, i8* %98
 %100 = zext i8 %99 to i32
 %101 = shl i32 %100, 8
 %102 = or i32 %95, %101
 store i32 %102, i32* %11
 store i8 0, i8* %12
 store i8 0, i8* %13
 %103 = load i8*, i8** %9
 %104 = getelementptr i8, i8* %103, i64 46
 store i8* %104, i8** %9
 %105 = load i8*, i8** %9
 %106 = load i32, i32* %11
 %107 = load i32, i32* %8
 %108 = icmp ult i32 %106, %107
 br i1 %108, label %109, label %111
109:
 %110 = load i32, i32* %11
 br label %113
111:
 %112 = load i32, i32* %8
 br label %113
113:
 %114 = phi i32 [%110, %109], [%112, %111]
 %115 = zext i32 %114 to i64
 %116 = getelementptr i8, i8* %105, i64 %115
 store i8* %116, i8** %10
 br label %117
117:
 %118 = load i8*, i8** %9
 %119 = load i8*, i8** %10
 %120 = icmp ult i8* %118, %119
 br i1 %120, label %121, label %175
121:
 %122 = load i8*, i8** %9
 %123 = load i8, i8* %122
 %124 = zext i8 %123 to i32
 %125 = icmp sge i32 %124, 65
 br i1 %125, label %126, label %137
126:
 %127 = load i8*, i8** %9
 %128 = load i8, i8* %127
 %129 = zext i8 %128 to i32
 %130 = icmp sle i32 %129, 90
 br i1 %130, label %131, label %137
131:
 %132 = load i8*, i8** %9
 %133 = load i8, i8* %132
 %134 = zext i8 %133 to i32
 %135 = sub i32 %134, 65
 %136 = add i32 %135, 97
 br label %141
137:
 %138 = load i8*, i8** %9
 %139 = load i8, i8* %138
 %140 = zext i8 %139 to i32
 br label %141
141:
 %142 = phi i32 [%136, %131], [%140, %137]
 %143 = trunc i32 %142 to i8
 store i8 %143, i8* %12
 %144 = zext i8 %143 to i32
 %145 = load i8*, i8** %7
 %146 = load i8, i8* %145
 %147 = sext i8 %146 to i32
 %148 = icmp sge i32 %147, 65
 br i1 %148, label %149, label %160
149:
 %150 = load i8*, i8** %7
 %151 = load i8, i8* %150
 %152 = sext i8 %151 to i32
 %153 = icmp sle i32 %152, 90
 br i1 %153, label %154, label %160
154:
 %155 = load i8*, i8** %7
 %156 = load i8, i8* %155
 %157 = sext i8 %156 to i32
 %158 = sub i32 %157, 65
 %159 = add i32 %158, 97
 br label %164
160:
 %161 = load i8*, i8** %7
 %162 = load i8, i8* %161
 %163 = sext i8 %162 to i32
 br label %164
164:
 %165 = phi i32 [%159, %154], [%163, %160]
 %166 = trunc i32 %165 to i8
 store i8 %166, i8* %13
 %167 = zext i8 %166 to i32
 %168 = icmp ne i32 %144, %167
 br i1 %168, label %169, label %170
169:
 br label %175
170:
 %171 = load i8*, i8** %9
 %172 = getelementptr i8, i8* %171, i32 1
 store i8* %172, i8** %9
 %173 = load i8*, i8** %7
 %174 = getelementptr i8, i8* %173, i32 1
 store i8* %174, i8** %7
 br label %117
175:
 %176 = load i8*, i8** %9
 %177 = load i8*, i8** %10
 %178 = icmp eq i8* %176, %177
 br i1 %178, label %179, label %183
179:
 %180 = load i32, i32* %11
 %181 = load i32, i32* %8
 %182 = sub i32 %180, %181
 br label %189
183:
 %184 = load i8, i8* %12
 %185 = zext i8 %184 to i32
 %186 = load i8, i8* %13
 %187 = zext i8 %186 to i32
 %188 = sub i32 %185, %187
 br label %189
189:
 %190 = phi i32 [%182, %179], [%188, %183]
 store i32 %190, i32* %30
 %191 = load i32, i32* %30
 %192 = icmp ne i32 %191, 0
 br i1 %192, label %200, label %193
193:
 %194 = load i8*, i8** %19
 %195 = icmp ne i8* %194, null
 br i1 %195, label %196, label %199
196:
 %197 = load i32, i32* %29
 %198 = load i8*, i8** %19
 store i32 %197, i32* %198
 br label %199
199:
 store i32 1, i32* %16
 br label %221
200:
 %201 = load i32, i32* %30
 %202 = icmp slt i32 %201, 0
 br i1 %202, label %203, label %206
203:
 %204 = load i64, i64* %28
 %205 = add i64 %204, 1
 store i64 %205, i64* %26
 br label %209
206:
 %207 = load i64, i64* %28
 %208 = sub i64 %207, 1
 store i64 %208, i64* %27
 br label %209
209:
 br label %210
210:
 br label %60
211:
 br label %212
212:
 %213 = load i8*, i8** %17
 store i8* %213, i8** %14
 store i32 28, i32* %15
 %214 = load i8*, i8** %14
 %215 = icmp ne i8* %214, null
 br i1 %215, label %216, label %220
216:
 %217 = load i32, i32* %15
 %218 = load i8*, i8** %14
 %219 = getelementptr %struct.mz_zip_archive, i8* %218, i32 0, i32 5
 store i32 %217, i32* %219
 br label %220
220:
 store i32 0, i32* %16
 br label %221
221:
 %222 = load i32, i32* %16
 ret i32 %222
}

define i32 @mz_zip_reader_extract_to_mem_no_alloc (i8* %0, i32 %1, i8* %2, i64 %3, i32 %4, i8* %5, i64 %6) {
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i64
 %12 = alloca i32
 %13 = alloca i8*
 %14 = alloca i64
 store i8* %0, i8** %8
 store i32 %1, i32* %9
 store i8* %2, i8** %10
 store i64 %3, i64* %11
 store i32 %4, i32* %12
 store i8* %5, i8** %13
 store i64 %6, i64* %14
 %15 = load i8*, i8** %8
 %16 = load i32, i32* %9
 %17 = load i8*, i8** %10
 %18 = load i64, i64* %11
 %19 = load i32, i32* %12
 %20 = load i8*, i8** %13
 %21 = load i64, i64* %14
 %22 = call i32 @mz_zip_reader_extract_to_mem_no_alloc1 (i8* %15, i32 %16, i8* %17, i64 %18, i32 %19, i8* %20, i64 %21, i8* null)
 ret i32 %22
}

define i32 @mz_zip_reader_extract_to_mem_no_alloc1 (i8* %0, i32 %1, i8* %2, i64 %3, i32 %4, i8* %5, i64 %6, i8* %7) {
 %9 = alloca i8*
 %10 = alloca i32
 %11 = alloca i8*
 %12 = alloca i32
 %13 = alloca i8*
 %14 = alloca i32
 %15 = alloca i8*
 %16 = alloca i32
 %17 = alloca i8*
 %18 = alloca i32
 %19 = alloca i8*
 %20 = alloca i32
 %21 = alloca i8*
 %22 = alloca i32
 %23 = alloca i8*
 %24 = alloca i32
 %25 = alloca i8*
 %26 = alloca i32
 %27 = alloca i8*
 %28 = alloca i32
 %29 = alloca i8*
 %30 = alloca i32
 %31 = alloca i8*
 %32 = alloca i32
 %33 = alloca i8*
 %34 = alloca i32
 %35 = alloca i32
 %36 = alloca i8*
 %37 = alloca i32
 %38 = alloca i8*
 %39 = alloca i64
 %40 = alloca i32
 %41 = alloca i8*
 %42 = alloca i64
 %43 = alloca i8*
 %44 = alloca i32
 %45 = alloca i64
 %46 = alloca i64
 %47 = alloca i64
 %48 = alloca i64
 %49 = alloca i64
 %50 = alloca i64
 %51 = alloca i64
 %52 = alloca %struct.mz_zip_archive_file_stat
 %53 = alloca i8*
 %54 = alloca [8 x i32]
 %55 = alloca i8*
 %56 = alloca %struct.tinfl_decompressor_tag
 %57 = alloca i64
 %58 = alloca i64
 store i8* %0, i8** %36
 store i32 %1, i32* %37
 store i8* %2, i8** %38
 store i64 %3, i64* %39
 store i32 %4, i32* %40
 store i8* %5, i8** %41
 store i64 %6, i64* %42
 store i8* %7, i8** %43
 store i32 0, i32* %44
 store i64 0, i64* %48
 store i64 0, i64* %50
 %59 = getelementptr [8 x i32], i8* %54, i64 0, i64 0
 store i8* %59, i8** %55
 %60 = load i8*, i8** %36
 %61 = icmp ne i8* %60, null
 br i1 %61, label %62, label %84
62:
 %63 = load i8*, i8** %36
 %64 = getelementptr %struct.mz_zip_archive, i8* %63, i32 0, i32 15
 %65 = load i8*, i8** %64
 %66 = icmp ne i8* %65, null
 br i1 %66, label %67, label %84
67:
 %68 = load i64, i64* %39
 %69 = icmp ne i64 %68, 0
 br i1 %69, label %70, label %73
70:
 %71 = load i8*, i8** %38
 %72 = icmp ne i8* %71, null
 br i1 %72, label %73, label %84
73:
 %74 = load i64, i64* %42
 %75 = icmp ne i64 %74, 0
 br i1 %75, label %76, label %79
76:
 %77 = load i8*, i8** %41
 %78 = icmp ne i8* %77, null
 br i1 %78, label %79, label %84
79:
 %80 = load i8*, i8** %36
 %81 = getelementptr %struct.mz_zip_archive, i8* %80, i32 0, i32 11
 %82 = load i8*, i8** %81
 %83 = icmp ne i8* %82, null
 br i1 %83, label %93, label %84
84:
 %85 = load i8*, i8** %36
 store i8* %85, i8** %9
 store i32 24, i32* %10
 %86 = load i8*, i8** %9
 %87 = icmp ne i8* %86, null
 br i1 %87, label %88, label %92
88:
 %89 = load i32, i32* %10
 %90 = load i8*, i8** %9
 %91 = getelementptr %struct.mz_zip_archive, i8* %90, i32 0, i32 5
 store i32 %89, i32* %91
 br label %92
92:
 store i32 0, i32* %35
 br label %535
93:
 %94 = load i8*, i8** %43
 %95 = icmp ne i8* %94, null
 br i1 %95, label %96, label %98
96:
 %97 = load i8*, i8** %43
 call void @memcpy (i8* %52, i8* %97, i64 1112, i1 0)
 br label %105
98:
 %99 = load i8*, i8** %36
 %100 = load i32, i32* %37
 %101 = call i32 @mz_zip_reader_file_stat (i8* %99, i32 %100, i8* %52)
 %102 = icmp ne i32 %101, 0
 br i1 %102, label %104, label %103
103:
 store i32 0, i32* %35
 br label %535
104:
 br label %105
105:
 %106 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 13
 %107 = load i32, i32* %106
 %108 = icmp ne i32 %107, 0
 br i1 %108, label %113, label %109
109:
 %110 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %111 = load i64, i64* %110
 %112 = icmp ne i64 %111, 0
 br i1 %112, label %114, label %113
113:
 store i32 1, i32* %35
 br label %535
114:
 %115 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 4
 %116 = load i16, i16* %115
 %117 = zext i16 %116 to i32
 %118 = and i32 %117, 97
 %119 = icmp ne i32 %118, 0
 br i1 %119, label %120, label %129
120:
 %121 = load i8*, i8** %36
 store i8* %121, i8** %11
 store i32 5, i32* %12
 %122 = load i8*, i8** %11
 %123 = icmp ne i8* %122, null
 br i1 %123, label %124, label %128
124:
 %125 = load i32, i32* %12
 %126 = load i8*, i8** %11
 %127 = getelementptr %struct.mz_zip_archive, i8* %126, i32 0, i32 5
 store i32 %125, i32* %127
 br label %128
128:
 store i32 0, i32* %35
 br label %535
129:
 %130 = load i32, i32* %40
 %131 = and i32 %130, 1024
 %132 = icmp ne i32 %131, 0
 br i1 %132, label %152, label %133
133:
 %134 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 5
 %135 = load i16, i16* %134
 %136 = zext i16 %135 to i32
 %137 = icmp ne i32 %136, 0
 br i1 %137, label %138, label %152
138:
 %139 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 5
 %140 = load i16, i16* %139
 %141 = zext i16 %140 to i32
 %142 = icmp ne i32 %141, 8
 br i1 %142, label %143, label %152
143:
 %144 = load i8*, i8** %36
 store i8* %144, i8** %13
 store i32 4, i32* %14
 %145 = load i8*, i8** %13
 %146 = icmp ne i8* %145, null
 br i1 %146, label %147, label %151
147:
 %148 = load i32, i32* %14
 %149 = load i8*, i8** %13
 %150 = getelementptr %struct.mz_zip_archive, i8* %149, i32 0, i32 5
 store i32 %148, i32* %150
 br label %151
151:
 store i32 0, i32* %35
 br label %535
152:
 %153 = load i32, i32* %40
 %154 = and i32 %153, 1024
 %155 = icmp ne i32 %154, 0
 br i1 %155, label %156, label %159
156:
 %157 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %158 = load i64, i64* %157
 br label %162
159:
 %160 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 8
 %161 = load i64, i64* %160
 br label %162
162:
 %163 = phi i64 [%158, %156], [%161, %159]
 store i64 %163, i64* %45
 %164 = load i64, i64* %39
 %165 = load i64, i64* %45
 %166 = icmp ult i64 %164, %165
 br i1 %166, label %167, label %176
167:
 %168 = load i8*, i8** %36
 store i8* %168, i8** %15
 store i32 26, i32* %16
 %169 = load i8*, i8** %15
 %170 = icmp ne i8* %169, null
 br i1 %170, label %171, label %175
171:
 %172 = load i32, i32* %16
 %173 = load i8*, i8** %15
 %174 = getelementptr %struct.mz_zip_archive, i8* %173, i32 0, i32 5
 store i32 %172, i32* %174
 br label %175
175:
 store i32 0, i32* %35
 br label %535
176:
 %177 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 11
 %178 = load i64, i64* %177
 store i64 %178, i64* %46
 %179 = load i8*, i8** %36
 %180 = getelementptr %struct.mz_zip_archive, i8* %179, i32 0, i32 11
 %181 = load i8*, i8** %180
 %182 = load i8*, i8** %36
 %183 = getelementptr %struct.mz_zip_archive, i8* %182, i32 0, i32 14
 %184 = load i8*, i8** %183
 %185 = load i64, i64* %46
 %186 = load i8*, i8** %55
 %187 = call i64 %181 (i8* %184, i64 %185, i8* %186, i64 30)
 %188 = icmp ne i64 %187, 30
 br i1 %188, label %189, label %198
189:
 %190 = load i8*, i8** %36
 store i8* %190, i8** %17
 store i32 20, i32* %18
 %191 = load i8*, i8** %17
 %192 = icmp ne i8* %191, null
 br i1 %192, label %193, label %197
193:
 %194 = load i32, i32* %18
 %195 = load i8*, i8** %17
 %196 = getelementptr %struct.mz_zip_archive, i8* %195, i32 0, i32 5
 store i32 %194, i32* %196
 br label %197
197:
 store i32 0, i32* %35
 br label %535
198:
 %199 = load i8*, i8** %55
 %200 = getelementptr i8, i8* %199, i64 0
 %201 = load i8, i8* %200
 %202 = zext i8 %201 to i32
 %203 = load i8*, i8** %55
 %204 = getelementptr i8, i8* %203, i64 1
 %205 = load i8, i8* %204
 %206 = zext i8 %205 to i32
 %207 = shl i32 %206, 8
 %208 = or i32 %202, %207
 %209 = load i8*, i8** %55
 %210 = getelementptr i8, i8* %209, i64 2
 %211 = load i8, i8* %210
 %212 = zext i8 %211 to i32
 %213 = shl i32 %212, 16
 %214 = or i32 %208, %213
 %215 = load i8*, i8** %55
 %216 = getelementptr i8, i8* %215, i64 3
 %217 = load i8, i8* %216
 %218 = zext i8 %217 to i32
 %219 = shl i32 %218, 24
 %220 = or i32 %214, %219
 %221 = icmp ne i32 %220, 67324752
 br i1 %221, label %222, label %231
222:
 %223 = load i8*, i8** %36
 store i8* %223, i8** %19
 store i32 9, i32* %20
 %224 = load i8*, i8** %19
 %225 = icmp ne i8* %224, null
 br i1 %225, label %226, label %230
226:
 %227 = load i32, i32* %20
 %228 = load i8*, i8** %19
 %229 = getelementptr %struct.mz_zip_archive, i8* %228, i32 0, i32 5
 store i32 %227, i32* %229
 br label %230
230:
 store i32 0, i32* %35
 br label %535
231:
 %232 = load i8*, i8** %55
 %233 = getelementptr i8, i8* %232, i64 26
 %234 = getelementptr i8, i8* %233, i64 0
 %235 = load i8, i8* %234
 %236 = zext i8 %235 to i32
 %237 = load i8*, i8** %55
 %238 = getelementptr i8, i8* %237, i64 26
 %239 = getelementptr i8, i8* %238, i64 1
 %240 = load i8, i8* %239
 %241 = zext i8 %240 to i32
 %242 = shl i32 %241, 8
 %243 = or i32 %236, %242
 %244 = add i32 30, %243
 %245 = load i8*, i8** %55
 %246 = getelementptr i8, i8* %245, i64 28
 %247 = getelementptr i8, i8* %246, i64 0
 %248 = load i8, i8* %247
 %249 = zext i8 %248 to i32
 %250 = load i8*, i8** %55
 %251 = getelementptr i8, i8* %250, i64 28
 %252 = getelementptr i8, i8* %251, i64 1
 %253 = load i8, i8* %252
 %254 = zext i8 %253 to i32
 %255 = shl i32 %254, 8
 %256 = or i32 %249, %255
 %257 = add i32 %244, %256
 %258 = zext i32 %257 to i64
 %259 = load i64, i64* %46
 %260 = add i64 %259, %258
 store i64 %260, i64* %46
 %261 = load i64, i64* %46
 %262 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %263 = load i64, i64* %262
 %264 = add i64 %261, %263
 %265 = load i8*, i8** %36
 %266 = getelementptr %struct.mz_zip_archive, i8* %265, i32 0, i32 0
 %267 = load i64, i64* %266
 %268 = icmp ugt i64 %264, %267
 br i1 %268, label %269, label %278
269:
 %270 = load i8*, i8** %36
 store i8* %270, i8** %21
 store i32 9, i32* %22
 %271 = load i8*, i8** %21
 %272 = icmp ne i8* %271, null
 br i1 %272, label %273, label %277
273:
 %274 = load i32, i32* %22
 %275 = load i8*, i8** %21
 %276 = getelementptr %struct.mz_zip_archive, i8* %275, i32 0, i32 5
 store i32 %274, i32* %276
 br label %277
277:
 store i32 0, i32* %35
 br label %535
278:
 %279 = load i32, i32* %40
 %280 = and i32 %279, 1024
 %281 = icmp ne i32 %280, 0
 br i1 %281, label %286, label %282
282:
 %283 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 5
 %284 = load i16, i16* %283
 %285 = icmp ne i16 %284, 0
 br i1 %285, label %332, label %286
286:
 %287 = load i8*, i8** %36
 %288 = getelementptr %struct.mz_zip_archive, i8* %287, i32 0, i32 11
 %289 = load i8*, i8** %288
 %290 = load i8*, i8** %36
 %291 = getelementptr %struct.mz_zip_archive, i8* %290, i32 0, i32 14
 %292 = load i8*, i8** %291
 %293 = load i64, i64* %46
 %294 = load i8*, i8** %38
 %295 = load i64, i64* %45
 %296 = call i64 %289 (i8* %292, i64 %293, i8* %294, i64 %295)
 %297 = load i64, i64* %45
 %298 = icmp ne i64 %296, %297
 br i1 %298, label %299, label %308
299:
 %300 = load i8*, i8** %36
 store i8* %300, i8** %23
 store i32 20, i32* %24
 %301 = load i8*, i8** %23
 %302 = icmp ne i8* %301, null
 br i1 %302, label %303, label %307
303:
 %304 = load i32, i32* %24
 %305 = load i8*, i8** %23
 %306 = getelementptr %struct.mz_zip_archive, i8* %305, i32 0, i32 5
 store i32 %304, i32* %306
 br label %307
307:
 store i32 0, i32* %35
 br label %535
308:
 %309 = load i32, i32* %40
 %310 = and i32 %309, 1024
 %311 = icmp eq i32 %310, 0
 br i1 %311, label %312, label %331
312:
 %313 = load i8*, i8** %38
 %314 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 8
 %315 = load i64, i64* %314
 %316 = call i64 @mz_crc32 (i64 0, i8* %313, i64 %315)
 %317 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 6
 %318 = load i32, i32* %317
 %319 = zext i32 %318 to i64
 %320 = icmp ne i64 %316, %319
 br i1 %320, label %321, label %330
321:
 %322 = load i8*, i8** %36
 store i8* %322, i8** %25
 store i32 14, i32* %26
 %323 = load i8*, i8** %25
 %324 = icmp ne i8* %323, null
 br i1 %324, label %325, label %329
325:
 %326 = load i32, i32* %26
 %327 = load i8*, i8** %25
 %328 = getelementptr %struct.mz_zip_archive, i8* %327, i32 0, i32 5
 store i32 %326, i32* %328
 br label %329
329:
 store i32 0, i32* %35
 br label %535
330:
 br label %331
331:
 store i32 1, i32* %35
 br label %535
332:
 br label %333
333:
 %334 = getelementptr %struct.tinfl_decompressor_tag, i8* %56, i32 0, i32 0
 store i32 0, i32* %334
 br label %335
335:
 %336 = load i8*, i8** %36
 %337 = getelementptr %struct.mz_zip_archive, i8* %336, i32 0, i32 15
 %338 = load i8*, i8** %337
 %339 = getelementptr %struct.mz_zip_internal_state_tag, i8* %338, i32 0, i32 8
 %340 = load i8*, i8** %339
 %341 = icmp ne i8* %340, null
 br i1 %341, label %342, label %352
342:
 %343 = load i8*, i8** %36
 %344 = getelementptr %struct.mz_zip_archive, i8* %343, i32 0, i32 15
 %345 = load i8*, i8** %344
 %346 = getelementptr %struct.mz_zip_internal_state_tag, i8* %345, i32 0, i32 8
 %347 = load i8*, i8** %346
 %348 = load i64, i64* %46
 %349 = getelementptr i8, i8* %347, i64 %348
 store i8* %349, i8** %53
 %350 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %351 = load i64, i64* %350
 store i64 %351, i64* %51
 store i64 %351, i64* %49
 store i64 0, i64* %47
 br label %396
352:
 %353 = load i8*, i8** %41
 %354 = icmp ne i8* %353, null
 br i1 %354, label %355, label %364
355:
 %356 = load i64, i64* %42
 %357 = icmp ne i64 %356, 0
 br i1 %357, label %359, label %358
358:
 store i32 0, i32* %35
 br label %535
359:
 %360 = load i8*, i8** %41
 store i8* %360, i8** %53
 %361 = load i64, i64* %42
 store i64 %361, i64* %49
 store i64 0, i64* %51
 %362 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %363 = load i64, i64* %362
 store i64 %363, i64* %47
 br label %395
364:
 %365 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %366 = load i64, i64* %365
 %367 = icmp ult i64 %366, 65536
 br i1 %367, label %368, label %371
368:
 %369 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %370 = load i64, i64* %369
 br label %372
371:
 br label %372
372:
 %373 = phi i64 [%370, %368], [65536, %371]
 store i64 %373, i64* %49
 %374 = load i8*, i8** %36
 %375 = getelementptr %struct.mz_zip_archive, i8* %374, i32 0, i32 7
 %376 = load i8*, i8** %375
 %377 = load i8*, i8** %36
 %378 = getelementptr %struct.mz_zip_archive, i8* %377, i32 0, i32 10
 %379 = load i8*, i8** %378
 %380 = load i64, i64* %49
 %381 = call i8* %376 (i8* %379, i64 1, i64 %380)
 store i8* %381, i8** %53
 %382 = icmp eq i8* null, %381
 br i1 %382, label %383, label %392
383:
 %384 = load i8*, i8** %36
 store i8* %384, i8** %27
 store i32 16, i32* %28
 %385 = load i8*, i8** %27
 %386 = icmp ne i8* %385, null
 br i1 %386, label %387, label %391
387:
 %388 = load i32, i32* %28
 %389 = load i8*, i8** %27
 %390 = getelementptr %struct.mz_zip_archive, i8* %389, i32 0, i32 5
 store i32 %388, i32* %390
 br label %391
391:
 store i32 0, i32* %35
 br label %535
392:
 store i64 0, i64* %51
 %393 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %394 = load i64, i64* %393
 store i64 %394, i64* %47
 br label %395
395:
 br label %396
396:
 br label %397
397:
 %398 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 8
 %399 = load i64, i64* %398
 %400 = load i64, i64* %48
 %401 = sub i64 %399, %400
 store i64 %401, i64* %58
 %402 = load i64, i64* %51
 %403 = icmp ne i64 %402, 0
 br i1 %403, label %449, label %404
404:
 %405 = load i8*, i8** %36
 %406 = getelementptr %struct.mz_zip_archive, i8* %405, i32 0, i32 15
 %407 = load i8*, i8** %406
 %408 = getelementptr %struct.mz_zip_internal_state_tag, i8* %407, i32 0, i32 8
 %409 = load i8*, i8** %408
 %410 = icmp ne i8* %409, null
 br i1 %410, label %449, label %411
411:
 %412 = load i64, i64* %49
 %413 = load i64, i64* %47
 %414 = icmp ult i64 %412, %413
 br i1 %414, label %415, label %417
415:
 %416 = load i64, i64* %49
 br label %419
417:
 %418 = load i64, i64* %47
 br label %419
419:
 %420 = phi i64 [%416, %415], [%418, %417]
 store i64 %420, i64* %51
 %421 = load i8*, i8** %36
 %422 = getelementptr %struct.mz_zip_archive, i8* %421, i32 0, i32 11
 %423 = load i8*, i8** %422
 %424 = load i8*, i8** %36
 %425 = getelementptr %struct.mz_zip_archive, i8* %424, i32 0, i32 14
 %426 = load i8*, i8** %425
 %427 = load i64, i64* %46
 %428 = load i8*, i8** %53
 %429 = load i64, i64* %51
 %430 = call i64 %423 (i8* %426, i64 %427, i8* %428, i64 %429)
 %431 = load i64, i64* %51
 %432 = icmp ne i64 %430, %431
 br i1 %432, label %433, label %442
433:
 store i32 -1, i32* %44
 %434 = load i8*, i8** %36
 store i8* %434, i8** %29
 store i32 11, i32* %30
 %435 = load i8*, i8** %29
 %436 = icmp ne i8* %435, null
 br i1 %436, label %437, label %441
437:
 %438 = load i32, i32* %30
 %439 = load i8*, i8** %29
 %440 = getelementptr %struct.mz_zip_archive, i8* %439, i32 0, i32 5
 store i32 %438, i32* %440
 br label %441
441:
 br label %476
442:
 %443 = load i64, i64* %51
 %444 = load i64, i64* %46
 %445 = add i64 %444, %443
 store i64 %445, i64* %46
 %446 = load i64, i64* %51
 %447 = load i64, i64* %47
 %448 = sub i64 %447, %446
 store i64 %448, i64* %47
 store i64 0, i64* %50
 br label %449
449:
 %450 = load i64, i64* %51
 store i64 %450, i64* %57
 %451 = load i8*, i8** %53
 %452 = load i64, i64* %50
 %453 = getelementptr i8, i8* %451, i64 %452
 %454 = load i8*, i8** %38
 %455 = load i8*, i8** %38
 %456 = load i64, i64* %48
 %457 = getelementptr i8, i8* %455, i64 %456
 %458 = load i64, i64* %47
 %459 = icmp ne i64 %458, 0
 %460 = zext i1 %459 to i64
 %461 = select i1 %459, i32 2, i32 0
 %462 = or i32 4, %461
 %463 = call i32 @tinfl_decompress (i8* %56, i8* %453, i8* %57, i8* %454, i8* %457, i8* %58, i32 %462)
 store i32 %463, i32* %44
 %464 = load i64, i64* %57
 %465 = load i64, i64* %51
 %466 = sub i64 %465, %464
 store i64 %466, i64* %51
 %467 = load i64, i64* %57
 %468 = load i64, i64* %50
 %469 = add i64 %468, %467
 store i64 %469, i64* %50
 %470 = load i64, i64* %58
 %471 = load i64, i64* %48
 %472 = add i64 %471, %470
 store i64 %472, i64* %48
 br label %473
473:
 %474 = load i32, i32* %44
 %475 = icmp eq i32 %474, 1
 br i1 %475, label %397, label %476
476:
 %477 = load i32, i32* %44
 %478 = icmp eq i32 %477, 0
 br i1 %478, label %479, label %513
479:
 %480 = load i64, i64* %48
 %481 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 8
 %482 = load i64, i64* %481
 %483 = icmp ne i64 %480, %482
 br i1 %483, label %484, label %493
484:
 %485 = load i8*, i8** %36
 store i8* %485, i8** %31
 store i32 13, i32* %32
 %486 = load i8*, i8** %31
 %487 = icmp ne i8* %486, null
 br i1 %487, label %488, label %492
488:
 %489 = load i32, i32* %32
 %490 = load i8*, i8** %31
 %491 = getelementptr %struct.mz_zip_archive, i8* %490, i32 0, i32 5
 store i32 %489, i32* %491
 br label %492
492:
 store i32 -1, i32* %44
 br label %512
493:
 %494 = load i8*, i8** %38
 %495 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 8
 %496 = load i64, i64* %495
 %497 = call i64 @mz_crc32 (i64 0, i8* %494, i64 %496)
 %498 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 6
 %499 = load i32, i32* %498
 %500 = zext i32 %499 to i64
 %501 = icmp ne i64 %497, %500
 br i1 %501, label %502, label %511
502:
 %503 = load i8*, i8** %36
 store i8* %503, i8** %33
 store i32 14, i32* %34
 %504 = load i8*, i8** %33
 %505 = icmp ne i8* %504, null
 br i1 %505, label %506, label %510
506:
 %507 = load i32, i32* %34
 %508 = load i8*, i8** %33
 %509 = getelementptr %struct.mz_zip_archive, i8* %508, i32 0, i32 5
 store i32 %507, i32* %509
 br label %510
510:
 store i32 -1, i32* %44
 br label %511
511:
 br label %512
512:
 br label %513
513:
 %514 = load i8*, i8** %36
 %515 = getelementptr %struct.mz_zip_archive, i8* %514, i32 0, i32 15
 %516 = load i8*, i8** %515
 %517 = getelementptr %struct.mz_zip_internal_state_tag, i8* %516, i32 0, i32 8
 %518 = load i8*, i8** %517
 %519 = icmp ne i8* %518, null
 br i1 %519, label %531, label %520
520:
 %521 = load i8*, i8** %41
 %522 = icmp ne i8* %521, null
 br i1 %522, label %531, label %523
523:
 %524 = load i8*, i8** %36
 %525 = getelementptr %struct.mz_zip_archive, i8* %524, i32 0, i32 8
 %526 = load i8*, i8** %525
 %527 = load i8*, i8** %36
 %528 = getelementptr %struct.mz_zip_archive, i8* %527, i32 0, i32 10
 %529 = load i8*, i8** %528
 %530 = load i8*, i8** %53
 call void %526 (i8* %529, i8* %530)
 br label %531
531:
 %532 = load i32, i32* %44
 %533 = icmp eq i32 %532, 0
 %534 = zext i1 %533 to i32
 store i32 %534, i32* %35
 br label %535
535:
 %536 = load i32, i32* %35
 ret i32 %536
}

define i32 @mz_zip_reader_extract_file_to_mem_no_alloc (i8* %0, i8* %1, i8* %2, i64 %3, i32 %4, i8* %5, i64 %6) {
 %8 = alloca i32
 %9 = alloca i8*
 %10 = alloca i8*
 %11 = alloca i8*
 %12 = alloca i64
 %13 = alloca i32
 %14 = alloca i8*
 %15 = alloca i64
 %16 = alloca i32
 store i8* %0, i8** %9
 store i8* %1, i8** %10
 store i8* %2, i8** %11
 store i64 %3, i64* %12
 store i32 %4, i32* %13
 store i8* %5, i8** %14
 store i64 %6, i64* %15
 %17 = load i8*, i8** %9
 %18 = load i8*, i8** %10
 %19 = load i32, i32* %13
 %20 = call i32 @mz_zip_reader_locate_file_v2 (i8* %17, i8* %18, i8* null, i32 %19, i8* %16)
 %21 = icmp ne i32 %20, 0
 br i1 %21, label %23, label %22
22:
 store i32 0, i32* %8
 br label %32
23:
 %24 = load i8*, i8** %9
 %25 = load i32, i32* %16
 %26 = load i8*, i8** %11
 %27 = load i64, i64* %12
 %28 = load i32, i32* %13
 %29 = load i8*, i8** %14
 %30 = load i64, i64* %15
 %31 = call i32 @mz_zip_reader_extract_to_mem_no_alloc1 (i8* %24, i32 %25, i8* %26, i64 %27, i32 %28, i8* %29, i64 %30, i8* null)
 store i32 %31, i32* %8
 br label %32
32:
 %33 = load i32, i32* %8
 ret i32 %33
}

define i32 @mz_zip_reader_extract_to_mem (i8* %0, i32 %1, i8* %2, i64 %3, i32 %4) {
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i64
 %10 = alloca i32
 store i8* %0, i8** %6
 store i32 %1, i32* %7
 store i8* %2, i8** %8
 store i64 %3, i64* %9
 store i32 %4, i32* %10
 %11 = load i8*, i8** %6
 %12 = load i32, i32* %7
 %13 = load i8*, i8** %8
 %14 = load i64, i64* %9
 %15 = load i32, i32* %10
 %16 = call i32 @mz_zip_reader_extract_to_mem_no_alloc1 (i8* %11, i32 %12, i8* %13, i64 %14, i32 %15, i8* null, i64 0, i8* null)
 ret i32 %16
}

define i32 @mz_zip_reader_extract_file_to_mem (i8* %0, i8* %1, i8* %2, i64 %3, i32 %4) {
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i64
 %10 = alloca i32
 store i8* %0, i8** %6
 store i8* %1, i8** %7
 store i8* %2, i8** %8
 store i64 %3, i64* %9
 store i32 %4, i32* %10
 %11 = load i8*, i8** %6
 %12 = load i8*, i8** %7
 %13 = load i8*, i8** %8
 %14 = load i64, i64* %9
 %15 = load i32, i32* %10
 %16 = call i32 @mz_zip_reader_extract_file_to_mem_no_alloc (i8* %11, i8* %12, i8* %13, i64 %14, i32 %15, i8* null, i64 0)
 ret i32 %16
}

define i8* @mz_zip_reader_extract_to_heap (i8* %0, i32 %1, i8* %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca %struct.mz_zip_archive_file_stat
 %13 = alloca i64
 %14 = alloca i8*
 store i8* %0, i8** %8
 store i32 %1, i32* %9
 store i8* %2, i8** %10
 store i32 %3, i32* %11
 %15 = load i8*, i8** %10
 %16 = icmp ne i8* %15, null
 br i1 %16, label %17, label %19
17:
 %18 = load i8*, i8** %10
 store i64 0, i64* %18
 br label %19
19:
 %20 = load i8*, i8** %8
 %21 = load i32, i32* %9
 %22 = call i32 @mz_zip_reader_file_stat (i8* %20, i32 %21, i8* %12)
 %23 = icmp ne i32 %22, 0
 br i1 %23, label %25, label %24
24:
 store i8* null, i8** %7
 br label %79
25:
 %26 = load i32, i32* %11
 %27 = and i32 %26, 1024
 %28 = icmp ne i32 %27, 0
 br i1 %28, label %29, label %32
29:
 %30 = getelementptr %struct.mz_zip_archive_file_stat, i8* %12, i32 0, i32 7
 %31 = load i64, i64* %30
 br label %35
32:
 %33 = getelementptr %struct.mz_zip_archive_file_stat, i8* %12, i32 0, i32 8
 %34 = load i64, i64* %33
 br label %35
35:
 %36 = phi i64 [%31, %29], [%34, %32]
 store i64 %36, i64* %13
 %37 = load i8*, i8** %8
 %38 = getelementptr %struct.mz_zip_archive, i8* %37, i32 0, i32 7
 %39 = load i8*, i8** %38
 %40 = load i8*, i8** %8
 %41 = getelementptr %struct.mz_zip_archive, i8* %40, i32 0, i32 10
 %42 = load i8*, i8** %41
 %43 = load i64, i64* %13
 %44 = call i8* %39 (i8* %42, i64 1, i64 %43)
 store i8* %44, i8** %14
 %45 = icmp eq i8* null, %44
 br i1 %45, label %46, label %55
46:
 %47 = load i8*, i8** %8
 store i8* %47, i8** %5
 store i32 16, i32* %6
 %48 = load i8*, i8** %5
 %49 = icmp ne i8* %48, null
 br i1 %49, label %50, label %54
50:
 %51 = load i32, i32* %6
 %52 = load i8*, i8** %5
 %53 = getelementptr %struct.mz_zip_archive, i8* %52, i32 0, i32 5
 store i32 %51, i32* %53
 br label %54
54:
 store i8* null, i8** %7
 br label %79
55:
 %56 = load i8*, i8** %8
 %57 = load i32, i32* %9
 %58 = load i8*, i8** %14
 %59 = load i64, i64* %13
 %60 = load i32, i32* %11
 %61 = call i32 @mz_zip_reader_extract_to_mem_no_alloc1 (i8* %56, i32 %57, i8* %58, i64 %59, i32 %60, i8* null, i64 0, i8* %12)
 %62 = icmp ne i32 %61, 0
 br i1 %62, label %71, label %63
63:
 %64 = load i8*, i8** %8
 %65 = getelementptr %struct.mz_zip_archive, i8* %64, i32 0, i32 8
 %66 = load i8*, i8** %65
 %67 = load i8*, i8** %8
 %68 = getelementptr %struct.mz_zip_archive, i8* %67, i32 0, i32 10
 %69 = load i8*, i8** %68
 %70 = load i8*, i8** %14
 call void %66 (i8* %69, i8* %70)
 store i8* null, i8** %7
 br label %79
71:
 %72 = load i8*, i8** %10
 %73 = icmp ne i8* %72, null
 br i1 %73, label %74, label %77
74:
 %75 = load i64, i64* %13
 %76 = load i8*, i8** %10
 store i64 %75, i64* %76
 br label %77
77:
 %78 = load i8*, i8** %14
 store i8* %78, i8** %7
 br label %79
79:
 %80 = load i8*, i8** %7
 ret i8* %80
}

define i32 @mz_zip_reader_file_stat (i8* %0, i32 %1, i8* %2) {
 %4 = alloca i8*
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i32
 %9 = alloca i8*
 store i8* %0, i8** %7
 store i32 %1, i32* %8
 store i8* %2, i8** %9
 %10 = load i8*, i8** %7
 %11 = load i32, i32* %8
 %12 = load i8*, i8** %7
 %13 = load i32, i32* %8
 store i8* %12, i8** %5
 store i32 %13, i32* %6
 %14 = load i8*, i8** %5
 %15 = icmp ne i8* %14, null
 br i1 %15, label %16, label %27
16:
 %17 = load i8*, i8** %5
 %18 = getelementptr %struct.mz_zip_archive, i8* %17, i32 0, i32 15
 %19 = load i8*, i8** %18
 %20 = icmp ne i8* %19, null
 br i1 %20, label %21, label %27
21:
 %22 = load i32, i32* %6
 %23 = load i8*, i8** %5
 %24 = getelementptr %struct.mz_zip_archive, i8* %23, i32 0, i32 2
 %25 = load i32, i32* %24
 %26 = icmp uge i32 %22, %25
 br i1 %26, label %27, label %28
27:
 store i8* null, i8** %4
 br label %44
28:
 %29 = load i8*, i8** %5
 %30 = getelementptr %struct.mz_zip_archive, i8* %29, i32 0, i32 15
 %31 = load i8*, i8** %30
 %32 = load i8*, i8** %31
 %33 = load i8*, i8** %5
 %34 = getelementptr %struct.mz_zip_archive, i8* %33, i32 0, i32 15
 %35 = load i8*, i8** %34
 %36 = getelementptr %struct.mz_zip_internal_state_tag, i8* %35, i32 0, i32 1
 %37 = load i8*, i8** %36
 %38 = load i32, i32* %6
 %39 = zext i32 %38 to i64
 %40 = getelementptr i32, i8* %37, i64 %39
 %41 = load i32, i32* %40
 %42 = zext i32 %41 to i64
 %43 = getelementptr i8, i8* %32, i64 %42
 store i8* %43, i8** %4
 br label %44
44:
 %45 = load i8*, i8** %4
 %46 = load i8*, i8** %9
 %47 = call i32 @mz_zip_file_stat_internal (i8* %10, i32 %11, i8* %45, i8* %46, i8* null)
 ret i32 %47
}

define i8* @mz_zip_reader_extract_file_to_heap (i8* %0, i8* %1, i8* %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i32
 store i8* %0, i8** %6
 store i8* %1, i8** %7
 store i8* %2, i8** %8
 store i32 %3, i32* %9
 %11 = load i8*, i8** %6
 %12 = load i8*, i8** %7
 %13 = load i32, i32* %9
 %14 = call i32 @mz_zip_reader_locate_file_v2 (i8* %11, i8* %12, i8* null, i32 %13, i8* %10)
 %15 = icmp ne i32 %14, 0
 br i1 %15, label %22, label %16
16:
 %17 = load i8*, i8** %8
 %18 = icmp ne i8* %17, null
 br i1 %18, label %19, label %21
19:
 %20 = load i8*, i8** %8
 store i64 0, i64* %20
 br label %21
21:
 store i8* null, i8** %5
 br label %28
22:
 %23 = load i8*, i8** %6
 %24 = load i32, i32* %10
 %25 = load i8*, i8** %8
 %26 = load i32, i32* %9
 %27 = call i8* @mz_zip_reader_extract_to_heap (i8* %23, i32 %24, i8* %25, i32 %26)
 store i8* %27, i8** %5
 br label %28
28:
 %29 = load i8*, i8** %5
 ret i8* %29
}

define i32 @mz_zip_reader_extract_to_callback (i8* %0, i32 %1, i8* %2, i8* %3, i32 %4) {
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca i8*
 %13 = alloca i32
 %14 = alloca i8*
 %15 = alloca i32
 %16 = alloca i8*
 %17 = alloca i32
 %18 = alloca i8*
 %19 = alloca i32
 %20 = alloca i8*
 %21 = alloca i32
 %22 = alloca i8*
 %23 = alloca i32
 %24 = alloca i8*
 %25 = alloca i32
 %26 = alloca i8*
 %27 = alloca i32
 %28 = alloca i8*
 %29 = alloca i32
 %30 = alloca i8*
 %31 = alloca i32
 %32 = alloca i8*
 %33 = alloca i32
 %34 = alloca i8*
 %35 = alloca i32
 %36 = alloca i8*
 %37 = alloca i32
 %38 = alloca i32
 %39 = alloca i8*
 %40 = alloca i32
 %41 = alloca i8*
 %42 = alloca i8*
 %43 = alloca i32
 %44 = alloca i32
 %45 = alloca i32
 %46 = alloca i64
 %47 = alloca i64
 %48 = alloca i64
 %49 = alloca i64
 %50 = alloca i64
 %51 = alloca i64
 %52 = alloca %struct.mz_zip_archive_file_stat
 %53 = alloca i8*
 %54 = alloca i8*
 %55 = alloca [8 x i32]
 %56 = alloca i8*
 %57 = alloca %struct.tinfl_decompressor_tag
 %58 = alloca i8*
 %59 = alloca i64
 %60 = alloca i64
 store i8* %0, i8** %39
 store i32 %1, i32* %40
 store i8* %2, i8** %41
 store i8* %3, i8** %42
 store i32 %4, i32* %43
 store i32 0, i32* %44
 store i32 0, i32* %45
 store i64 0, i64* %47
 store i64 0, i64* %50
 store i8* null, i8** %53
 store i8* null, i8** %54
 %61 = getelementptr [8 x i32], i8* %55, i64 0, i64 0
 store i8* %61, i8** %56
 %62 = load i8*, i8** %39
 %63 = icmp ne i8* %62, null
 br i1 %63, label %64, label %77
64:
 %65 = load i8*, i8** %39
 %66 = getelementptr %struct.mz_zip_archive, i8* %65, i32 0, i32 15
 %67 = load i8*, i8** %66
 %68 = icmp ne i8* %67, null
 br i1 %68, label %69, label %77
69:
 %70 = load i8*, i8** %41
 %71 = icmp ne i8* %70, null
 br i1 %71, label %72, label %77
72:
 %73 = load i8*, i8** %39
 %74 = getelementptr %struct.mz_zip_archive, i8* %73, i32 0, i32 11
 %75 = load i8*, i8** %74
 %76 = icmp ne i8* %75, null
 br i1 %76, label %86, label %77
77:
 %78 = load i8*, i8** %39
 store i8* %78, i8** %6
 store i32 24, i32* %7
 %79 = load i8*, i8** %6
 %80 = icmp ne i8* %79, null
 br i1 %80, label %81, label %85
81:
 %82 = load i32, i32* %7
 %83 = load i8*, i8** %6
 %84 = getelementptr %struct.mz_zip_archive, i8* %83, i32 0, i32 5
 store i32 %82, i32* %84
 br label %85
85:
 store i32 0, i32* %38
 br label %638
86:
 %87 = load i8*, i8** %39
 %88 = load i32, i32* %40
 %89 = call i32 @mz_zip_reader_file_stat (i8* %87, i32 %88, i8* %52)
 %90 = icmp ne i32 %89, 0
 br i1 %90, label %92, label %91
91:
 store i32 0, i32* %38
 br label %638
92:
 %93 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 13
 %94 = load i32, i32* %93
 %95 = icmp ne i32 %94, 0
 br i1 %95, label %100, label %96
96:
 %97 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %98 = load i64, i64* %97
 %99 = icmp ne i64 %98, 0
 br i1 %99, label %101, label %100
100:
 store i32 1, i32* %38
 br label %638
101:
 %102 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 4
 %103 = load i16, i16* %102
 %104 = zext i16 %103 to i32
 %105 = and i32 %104, 97
 %106 = icmp ne i32 %105, 0
 br i1 %106, label %107, label %116
107:
 %108 = load i8*, i8** %39
 store i8* %108, i8** %8
 store i32 5, i32* %9
 %109 = load i8*, i8** %8
 %110 = icmp ne i8* %109, null
 br i1 %110, label %111, label %115
111:
 %112 = load i32, i32* %9
 %113 = load i8*, i8** %8
 %114 = getelementptr %struct.mz_zip_archive, i8* %113, i32 0, i32 5
 store i32 %112, i32* %114
 br label %115
115:
 store i32 0, i32* %38
 br label %638
116:
 %117 = load i32, i32* %43
 %118 = and i32 %117, 1024
 %119 = icmp ne i32 %118, 0
 br i1 %119, label %139, label %120
120:
 %121 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 5
 %122 = load i16, i16* %121
 %123 = zext i16 %122 to i32
 %124 = icmp ne i32 %123, 0
 br i1 %124, label %125, label %139
125:
 %126 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 5
 %127 = load i16, i16* %126
 %128 = zext i16 %127 to i32
 %129 = icmp ne i32 %128, 8
 br i1 %129, label %130, label %139
130:
 %131 = load i8*, i8** %39
 store i8* %131, i8** %10
 store i32 4, i32* %11
 %132 = load i8*, i8** %10
 %133 = icmp ne i8* %132, null
 br i1 %133, label %134, label %138
134:
 %135 = load i32, i32* %11
 %136 = load i8*, i8** %10
 %137 = getelementptr %struct.mz_zip_archive, i8* %136, i32 0, i32 5
 store i32 %135, i32* %137
 br label %138
138:
 store i32 0, i32* %38
 br label %638
139:
 %140 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 11
 %141 = load i64, i64* %140
 store i64 %141, i64* %51
 %142 = load i8*, i8** %39
 %143 = getelementptr %struct.mz_zip_archive, i8* %142, i32 0, i32 11
 %144 = load i8*, i8** %143
 %145 = load i8*, i8** %39
 %146 = getelementptr %struct.mz_zip_archive, i8* %145, i32 0, i32 14
 %147 = load i8*, i8** %146
 %148 = load i64, i64* %51
 %149 = load i8*, i8** %56
 %150 = call i64 %144 (i8* %147, i64 %148, i8* %149, i64 30)
 %151 = icmp ne i64 %150, 30
 br i1 %151, label %152, label %161
152:
 %153 = load i8*, i8** %39
 store i8* %153, i8** %12
 store i32 20, i32* %13
 %154 = load i8*, i8** %12
 %155 = icmp ne i8* %154, null
 br i1 %155, label %156, label %160
156:
 %157 = load i32, i32* %13
 %158 = load i8*, i8** %12
 %159 = getelementptr %struct.mz_zip_archive, i8* %158, i32 0, i32 5
 store i32 %157, i32* %159
 br label %160
160:
 store i32 0, i32* %38
 br label %638
161:
 %162 = load i8*, i8** %56
 %163 = getelementptr i8, i8* %162, i64 0
 %164 = load i8, i8* %163
 %165 = zext i8 %164 to i32
 %166 = load i8*, i8** %56
 %167 = getelementptr i8, i8* %166, i64 1
 %168 = load i8, i8* %167
 %169 = zext i8 %168 to i32
 %170 = shl i32 %169, 8
 %171 = or i32 %165, %170
 %172 = load i8*, i8** %56
 %173 = getelementptr i8, i8* %172, i64 2
 %174 = load i8, i8* %173
 %175 = zext i8 %174 to i32
 %176 = shl i32 %175, 16
 %177 = or i32 %171, %176
 %178 = load i8*, i8** %56
 %179 = getelementptr i8, i8* %178, i64 3
 %180 = load i8, i8* %179
 %181 = zext i8 %180 to i32
 %182 = shl i32 %181, 24
 %183 = or i32 %177, %182
 %184 = icmp ne i32 %183, 67324752
 br i1 %184, label %185, label %194
185:
 %186 = load i8*, i8** %39
 store i8* %186, i8** %14
 store i32 9, i32* %15
 %187 = load i8*, i8** %14
 %188 = icmp ne i8* %187, null
 br i1 %188, label %189, label %193
189:
 %190 = load i32, i32* %15
 %191 = load i8*, i8** %14
 %192 = getelementptr %struct.mz_zip_archive, i8* %191, i32 0, i32 5
 store i32 %190, i32* %192
 br label %193
193:
 store i32 0, i32* %38
 br label %638
194:
 %195 = load i8*, i8** %56
 %196 = getelementptr i8, i8* %195, i64 26
 %197 = getelementptr i8, i8* %196, i64 0
 %198 = load i8, i8* %197
 %199 = zext i8 %198 to i32
 %200 = load i8*, i8** %56
 %201 = getelementptr i8, i8* %200, i64 26
 %202 = getelementptr i8, i8* %201, i64 1
 %203 = load i8, i8* %202
 %204 = zext i8 %203 to i32
 %205 = shl i32 %204, 8
 %206 = or i32 %199, %205
 %207 = add i32 30, %206
 %208 = load i8*, i8** %56
 %209 = getelementptr i8, i8* %208, i64 28
 %210 = getelementptr i8, i8* %209, i64 0
 %211 = load i8, i8* %210
 %212 = zext i8 %211 to i32
 %213 = load i8*, i8** %56
 %214 = getelementptr i8, i8* %213, i64 28
 %215 = getelementptr i8, i8* %214, i64 1
 %216 = load i8, i8* %215
 %217 = zext i8 %216 to i32
 %218 = shl i32 %217, 8
 %219 = or i32 %212, %218
 %220 = add i32 %207, %219
 %221 = zext i32 %220 to i64
 %222 = load i64, i64* %51
 %223 = add i64 %222, %221
 store i64 %223, i64* %51
 %224 = load i64, i64* %51
 %225 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %226 = load i64, i64* %225
 %227 = add i64 %224, %226
 %228 = load i8*, i8** %39
 %229 = getelementptr %struct.mz_zip_archive, i8* %228, i32 0, i32 0
 %230 = load i64, i64* %229
 %231 = icmp ugt i64 %227, %230
 br i1 %231, label %232, label %241
232:
 %233 = load i8*, i8** %39
 store i8* %233, i8** %16
 store i32 9, i32* %17
 %234 = load i8*, i8** %16
 %235 = icmp ne i8* %234, null
 br i1 %235, label %236, label %240
236:
 %237 = load i32, i32* %17
 %238 = load i8*, i8** %16
 %239 = getelementptr %struct.mz_zip_archive, i8* %238, i32 0, i32 5
 store i32 %237, i32* %239
 br label %240
240:
 store i32 0, i32* %38
 br label %638
241:
 %242 = load i8*, i8** %39
 %243 = getelementptr %struct.mz_zip_archive, i8* %242, i32 0, i32 15
 %244 = load i8*, i8** %243
 %245 = getelementptr %struct.mz_zip_internal_state_tag, i8* %244, i32 0, i32 8
 %246 = load i8*, i8** %245
 %247 = icmp ne i8* %246, null
 br i1 %247, label %248, label %258
248:
 %249 = load i8*, i8** %39
 %250 = getelementptr %struct.mz_zip_archive, i8* %249, i32 0, i32 15
 %251 = load i8*, i8** %250
 %252 = getelementptr %struct.mz_zip_internal_state_tag, i8* %251, i32 0, i32 8
 %253 = load i8*, i8** %252
 %254 = load i64, i64* %51
 %255 = getelementptr i8, i8* %253, i64 %254
 store i8* %255, i8** %53
 %256 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %257 = load i64, i64* %256
 store i64 %257, i64* %48
 store i64 %257, i64* %46
 store i64 0, i64* %49
 br label %289
258:
 %259 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %260 = load i64, i64* %259
 %261 = icmp ult i64 %260, 65536
 br i1 %261, label %262, label %265
262:
 %263 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %264 = load i64, i64* %263
 br label %266
265:
 br label %266
266:
 %267 = phi i64 [%264, %262], [65536, %265]
 store i64 %267, i64* %46
 %268 = load i8*, i8** %39
 %269 = getelementptr %struct.mz_zip_archive, i8* %268, i32 0, i32 7
 %270 = load i8*, i8** %269
 %271 = load i8*, i8** %39
 %272 = getelementptr %struct.mz_zip_archive, i8* %271, i32 0, i32 10
 %273 = load i8*, i8** %272
 %274 = load i64, i64* %46
 %275 = call i8* %270 (i8* %273, i64 1, i64 %274)
 store i8* %275, i8** %53
 %276 = icmp eq i8* null, %275
 br i1 %276, label %277, label %286
277:
 %278 = load i8*, i8** %39
 store i8* %278, i8** %18
 store i32 16, i32* %19
 %279 = load i8*, i8** %18
 %280 = icmp ne i8* %279, null
 br i1 %280, label %281, label %285
281:
 %282 = load i32, i32* %19
 %283 = load i8*, i8** %18
 %284 = getelementptr %struct.mz_zip_archive, i8* %283, i32 0, i32 5
 store i32 %282, i32* %284
 br label %285
285:
 store i32 0, i32* %38
 br label %638
286:
 store i64 0, i64* %48
 %287 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %288 = load i64, i64* %287
 store i64 %288, i64* %49
 br label %289
289:
 %290 = load i32, i32* %43
 %291 = and i32 %290, 1024
 %292 = icmp ne i32 %291, 0
 br i1 %292, label %297, label %293
293:
 %294 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 5
 %295 = load i16, i16* %294
 %296 = icmp ne i16 %295, 0
 br i1 %296, label %422, label %297
297:
 %298 = load i8*, i8** %39
 %299 = getelementptr %struct.mz_zip_archive, i8* %298, i32 0, i32 15
 %300 = load i8*, i8** %299
 %301 = getelementptr %struct.mz_zip_internal_state_tag, i8* %300, i32 0, i32 8
 %302 = load i8*, i8** %301
 %303 = icmp ne i8* %302, null
 br i1 %303, label %304, label %346
304:
 %305 = load i8*, i8** %41
 %306 = load i8*, i8** %42
 %307 = load i64, i64* %50
 %308 = load i8*, i8** %53
 %309 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %310 = load i64, i64* %309
 %311 = call i64 %305 (i8* %306, i64 %307, i8* %308, i64 %310)
 %312 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %313 = load i64, i64* %312
 %314 = icmp ne i64 %311, %313
 br i1 %314, label %315, label %324
315:
 %316 = load i8*, i8** %39
 store i8* %316, i8** %20
 store i32 31, i32* %21
 %317 = load i8*, i8** %20
 %318 = icmp ne i8* %317, null
 br i1 %318, label %319, label %323
319:
 %320 = load i32, i32* %21
 %321 = load i8*, i8** %20
 %322 = getelementptr %struct.mz_zip_archive, i8* %321, i32 0, i32 5
 store i32 %320, i32* %322
 br label %323
323:
 store i32 -1, i32* %44
 br label %337
324:
 %325 = load i32, i32* %43
 %326 = and i32 %325, 1024
 %327 = icmp ne i32 %326, 0
 br i1 %327, label %336, label %328
328:
 %329 = load i32, i32* %45
 %330 = zext i32 %329 to i64
 %331 = load i8*, i8** %53
 %332 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %333 = load i64, i64* %332
 %334 = call i64 @mz_crc32 (i64 %330, i8* %331, i64 %333)
 %335 = trunc i64 %334 to i32
 store i32 %335, i32* %45
 br label %336
336:
 br label %337
337:
 %338 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %339 = load i64, i64* %338
 %340 = load i64, i64* %51
 %341 = add i64 %340, %339
 store i64 %341, i64* %51
 %342 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 7
 %343 = load i64, i64* %342
 %344 = load i64, i64* %50
 %345 = add i64 %344, %343
 store i64 %345, i64* %50
 store i64 0, i64* %49
 br label %421
346:
 br label %347
347:
 %348 = load i64, i64* %49
 %349 = icmp ne i64 %348, 0
 br i1 %349, label %350, label %420
350:
 %351 = load i64, i64* %46
 %352 = load i64, i64* %49
 %353 = icmp ult i64 %351, %352
 br i1 %353, label %354, label %356
354:
 %355 = load i64, i64* %46
 br label %358
356:
 %357 = load i64, i64* %49
 br label %358
358:
 %359 = phi i64 [%355, %354], [%357, %356]
 store i64 %359, i64* %48
 %360 = load i8*, i8** %39
 %361 = getelementptr %struct.mz_zip_archive, i8* %360, i32 0, i32 11
 %362 = load i8*, i8** %361
 %363 = load i8*, i8** %39
 %364 = getelementptr %struct.mz_zip_archive, i8* %363, i32 0, i32 14
 %365 = load i8*, i8** %364
 %366 = load i64, i64* %51
 %367 = load i8*, i8** %53
 %368 = load i64, i64* %48
 %369 = call i64 %362 (i8* %365, i64 %366, i8* %367, i64 %368)
 %370 = load i64, i64* %48
 %371 = icmp ne i64 %369, %370
 br i1 %371, label %372, label %381
372:
 %373 = load i8*, i8** %39
 store i8* %373, i8** %22
 store i32 20, i32* %23
 %374 = load i8*, i8** %22
 %375 = icmp ne i8* %374, null
 br i1 %375, label %376, label %380
376:
 %377 = load i32, i32* %23
 %378 = load i8*, i8** %22
 %379 = getelementptr %struct.mz_zip_archive, i8* %378, i32 0, i32 5
 store i32 %377, i32* %379
 br label %380
380:
 store i32 -1, i32* %44
 br label %420
381:
 %382 = load i32, i32* %43
 %383 = and i32 %382, 1024
 %384 = icmp ne i32 %383, 0
 br i1 %384, label %392, label %385
385:
 %386 = load i32, i32* %45
 %387 = zext i32 %386 to i64
 %388 = load i8*, i8** %53
 %389 = load i64, i64* %48
 %390 = call i64 @mz_crc32 (i64 %387, i8* %388, i64 %389)
 %391 = trunc i64 %390 to i32
 store i32 %391, i32* %45
 br label %392
392:
 %393 = load i8*, i8** %41
 %394 = load i8*, i8** %42
 %395 = load i64, i64* %50
 %396 = load i8*, i8** %53
 %397 = load i64, i64* %48
 %398 = call i64 %393 (i8* %394, i64 %395, i8* %396, i64 %397)
 %399 = load i64, i64* %48
 %400 = icmp ne i64 %398, %399
 br i1 %400, label %401, label %410
401:
 %402 = load i8*, i8** %39
 store i8* %402, i8** %24
 store i32 31, i32* %25
 %403 = load i8*, i8** %24
 %404 = icmp ne i8* %403, null
 br i1 %404, label %405, label %409
405:
 %406 = load i32, i32* %25
 %407 = load i8*, i8** %24
 %408 = getelementptr %struct.mz_zip_archive, i8* %407, i32 0, i32 5
 store i32 %406, i32* %408
 br label %409
409:
 store i32 -1, i32* %44
 br label %420
410:
 %411 = load i64, i64* %48
 %412 = load i64, i64* %51
 %413 = add i64 %412, %411
 store i64 %413, i64* %51
 %414 = load i64, i64* %48
 %415 = load i64, i64* %50
 %416 = add i64 %415, %414
 store i64 %416, i64* %50
 %417 = load i64, i64* %48
 %418 = load i64, i64* %49
 %419 = sub i64 %418, %417
 store i64 %419, i64* %49
 br label %347
420:
 br label %421
421:
 br label %571
422:
 br label %423
423:
 %424 = getelementptr %struct.tinfl_decompressor_tag, i8* %57, i32 0, i32 0
 store i32 0, i32* %424
 br label %425
425:
 %426 = load i8*, i8** %39
 %427 = getelementptr %struct.mz_zip_archive, i8* %426, i32 0, i32 7
 %428 = load i8*, i8** %427
 %429 = load i8*, i8** %39
 %430 = getelementptr %struct.mz_zip_archive, i8* %429, i32 0, i32 10
 %431 = load i8*, i8** %430
 %432 = call i8* %428 (i8* %431, i64 1, i64 32768)
 store i8* %432, i8** %54
 %433 = icmp eq i8* null, %432
 br i1 %433, label %434, label %443
434:
 %435 = load i8*, i8** %39
 store i8* %435, i8** %26
 store i32 16, i32* %27
 %436 = load i8*, i8** %26
 %437 = icmp ne i8* %436, null
 br i1 %437, label %438, label %442
438:
 %439 = load i32, i32* %27
 %440 = load i8*, i8** %26
 %441 = getelementptr %struct.mz_zip_archive, i8* %440, i32 0, i32 5
 store i32 %439, i32* %441
 br label %442
442:
 store i32 -1, i32* %44
 br label %570
443:
 br label %444
444:
 %445 = load i8*, i8** %54
 %446 = load i64, i64* %50
 %447 = and i64 %446, 32767
 %448 = getelementptr i8, i8* %445, i64 %447
 store i8* %448, i8** %58
 %449 = load i64, i64* %50
 %450 = and i64 %449, 32767
 %451 = sub i64 32768, %450
 store i64 %451, i64* %60
 %452 = load i64, i64* %48
 %453 = icmp ne i64 %452, 0
 br i1 %453, label %499, label %454
454:
 %455 = load i8*, i8** %39
 %456 = getelementptr %struct.mz_zip_archive, i8* %455, i32 0, i32 15
 %457 = load i8*, i8** %456
 %458 = getelementptr %struct.mz_zip_internal_state_tag, i8* %457, i32 0, i32 8
 %459 = load i8*, i8** %458
 %460 = icmp ne i8* %459, null
 br i1 %460, label %499, label %461
461:
 %462 = load i64, i64* %46
 %463 = load i64, i64* %49
 %464 = icmp ult i64 %462, %463
 br i1 %464, label %465, label %467
465:
 %466 = load i64, i64* %46
 br label %469
467:
 %468 = load i64, i64* %49
 br label %469
469:
 %470 = phi i64 [%466, %465], [%468, %467]
 store i64 %470, i64* %48
 %471 = load i8*, i8** %39
 %472 = getelementptr %struct.mz_zip_archive, i8* %471, i32 0, i32 11
 %473 = load i8*, i8** %472
 %474 = load i8*, i8** %39
 %475 = getelementptr %struct.mz_zip_archive, i8* %474, i32 0, i32 14
 %476 = load i8*, i8** %475
 %477 = load i64, i64* %51
 %478 = load i8*, i8** %53
 %479 = load i64, i64* %48
 %480 = call i64 %473 (i8* %476, i64 %477, i8* %478, i64 %479)
 %481 = load i64, i64* %48
 %482 = icmp ne i64 %480, %481
 br i1 %482, label %483, label %492
483:
 %484 = load i8*, i8** %39
 store i8* %484, i8** %28
 store i32 20, i32* %29
 %485 = load i8*, i8** %28
 %486 = icmp ne i8* %485, null
 br i1 %486, label %487, label %491
487:
 %488 = load i32, i32* %29
 %489 = load i8*, i8** %28
 %490 = getelementptr %struct.mz_zip_archive, i8* %489, i32 0, i32 5
 store i32 %488, i32* %490
 br label %491
491:
 store i32 -1, i32* %44
 br label %569
492:
 %493 = load i64, i64* %48
 %494 = load i64, i64* %51
 %495 = add i64 %494, %493
 store i64 %495, i64* %51
 %496 = load i64, i64* %48
 %497 = load i64, i64* %49
 %498 = sub i64 %497, %496
 store i64 %498, i64* %49
 store i64 0, i64* %47
 br label %499
499:
 %500 = load i64, i64* %48
 store i64 %500, i64* %59
 %501 = load i8*, i8** %53
 %502 = load i64, i64* %47
 %503 = getelementptr i8, i8* %501, i64 %502
 %504 = load i8*, i8** %54
 %505 = load i8*, i8** %58
 %506 = load i64, i64* %49
 %507 = icmp ne i64 %506, 0
 %508 = zext i1 %507 to i64
 %509 = select i1 %507, i32 2, i32 0
 %510 = call i32 @tinfl_decompress (i8* %57, i8* %503, i8* %59, i8* %504, i8* %505, i8* %60, i32 %509)
 store i32 %510, i32* %44
 %511 = load i64, i64* %59
 %512 = load i64, i64* %48
 %513 = sub i64 %512, %511
 store i64 %513, i64* %48
 %514 = load i64, i64* %59
 %515 = load i64, i64* %47
 %516 = add i64 %515, %514
 store i64 %516, i64* %47
 %517 = load i64, i64* %60
 %518 = icmp ne i64 %517, 0
 br i1 %518, label %519, label %560
519:
 %520 = load i8*, i8** %41
 %521 = load i8*, i8** %42
 %522 = load i64, i64* %50
 %523 = load i8*, i8** %58
 %524 = load i64, i64* %60
 %525 = call i64 %520 (i8* %521, i64 %522, i8* %523, i64 %524)
 %526 = load i64, i64* %60
 %527 = icmp ne i64 %525, %526
 br i1 %527, label %528, label %537
528:
 %529 = load i8*, i8** %39
 store i8* %529, i8** %30
 store i32 31, i32* %31
 %530 = load i8*, i8** %30
 %531 = icmp ne i8* %530, null
 br i1 %531, label %532, label %536
532:
 %533 = load i32, i32* %31
 %534 = load i8*, i8** %30
 %535 = getelementptr %struct.mz_zip_archive, i8* %534, i32 0, i32 5
 store i32 %533, i32* %535
 br label %536
536:
 store i32 -1, i32* %44
 br label %569
537:
 %538 = load i32, i32* %45
 %539 = zext i32 %538 to i64
 %540 = load i8*, i8** %58
 %541 = load i64, i64* %60
 %542 = call i64 @mz_crc32 (i64 %539, i8* %540, i64 %541)
 %543 = trunc i64 %542 to i32
 store i32 %543, i32* %45
 %544 = load i64, i64* %60
 %545 = load i64, i64* %50
 %546 = add i64 %545, %544
 store i64 %546, i64* %50
 %547 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 8
 %548 = load i64, i64* %547
 %549 = icmp ugt i64 %546, %548
 br i1 %549, label %550, label %559
550:
 %551 = load i8*, i8** %39
 store i8* %551, i8** %32
 store i32 11, i32* %33
 %552 = load i8*, i8** %32
 %553 = icmp ne i8* %552, null
 br i1 %553, label %554, label %558
554:
 %555 = load i32, i32* %33
 %556 = load i8*, i8** %32
 %557 = getelementptr %struct.mz_zip_archive, i8* %556, i32 0, i32 5
 store i32 %555, i32* %557
 br label %558
558:
 store i32 -1, i32* %44
 br label %569
559:
 br label %560
560:
 br label %561
561:
 %562 = load i32, i32* %44
 %563 = icmp eq i32 %562, 1
 br i1 %563, label %567, label %564
564:
 %565 = load i32, i32* %44
 %566 = icmp eq i32 %565, 2
 br label %567
567:
 %568 = phi i1 [1, %561], [%566, %564]
 br i1 %568, label %444, label %569
569:
 br label %570
570:
 br label %571
571:
 %572 = load i32, i32* %44
 %573 = icmp eq i32 %572, 0
 br i1 %573, label %574, label %608
574:
 %575 = load i32, i32* %43
 %576 = and i32 %575, 1024
 %577 = icmp ne i32 %576, 0
 br i1 %577, label %608, label %578
578:
 %579 = load i64, i64* %50
 %580 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 8
 %581 = load i64, i64* %580
 %582 = icmp ne i64 %579, %581
 br i1 %582, label %583, label %592
583:
 %584 = load i8*, i8** %39
 store i8* %584, i8** %34
 store i32 13, i32* %35
 %585 = load i8*, i8** %34
 %586 = icmp ne i8* %585, null
 br i1 %586, label %587, label %591
587:
 %588 = load i32, i32* %35
 %589 = load i8*, i8** %34
 %590 = getelementptr %struct.mz_zip_archive, i8* %589, i32 0, i32 5
 store i32 %588, i32* %590
 br label %591
591:
 store i32 -1, i32* %44
 br label %607
592:
 %593 = load i32, i32* %45
 %594 = getelementptr %struct.mz_zip_archive_file_stat, i8* %52, i32 0, i32 6
 %595 = load i32, i32* %594
 %596 = icmp ne i32 %593, %595
 br i1 %596, label %597, label %606
597:
 %598 = load i8*, i8** %39
 store i8* %598, i8** %36
 store i32 11, i32* %37
 %599 = load i8*, i8** %36
 %600 = icmp ne i8* %599, null
 br i1 %600, label %601, label %605
601:
 %602 = load i32, i32* %37
 %603 = load i8*, i8** %36
 %604 = getelementptr %struct.mz_zip_archive, i8* %603, i32 0, i32 5
 store i32 %602, i32* %604
 br label %605
605:
 store i32 -1, i32* %44
 br label %606
606:
 br label %607
607:
 br label %608
608:
 %609 = load i8*, i8** %39
 %610 = getelementptr %struct.mz_zip_archive, i8* %609, i32 0, i32 15
 %611 = load i8*, i8** %610
 %612 = getelementptr %struct.mz_zip_internal_state_tag, i8* %611, i32 0, i32 8
 %613 = load i8*, i8** %612
 %614 = icmp ne i8* %613, null
 br i1 %614, label %623, label %615
615:
 %616 = load i8*, i8** %39
 %617 = getelementptr %struct.mz_zip_archive, i8* %616, i32 0, i32 8
 %618 = load i8*, i8** %617
 %619 = load i8*, i8** %39
 %620 = getelementptr %struct.mz_zip_archive, i8* %619, i32 0, i32 10
 %621 = load i8*, i8** %620
 %622 = load i8*, i8** %53
 call void %618 (i8* %621, i8* %622)
 br label %623
623:
 %624 = load i8*, i8** %54
 %625 = icmp ne i8* %624, null
 br i1 %625, label %626, label %634
626:
 %627 = load i8*, i8** %39
 %628 = getelementptr %struct.mz_zip_archive, i8* %627, i32 0, i32 8
 %629 = load i8*, i8** %628
 %630 = load i8*, i8** %39
 %631 = getelementptr %struct.mz_zip_archive, i8* %630, i32 0, i32 10
 %632 = load i8*, i8** %631
 %633 = load i8*, i8** %54
 call void %629 (i8* %632, i8* %633)
 br label %634
634:
 %635 = load i32, i32* %44
 %636 = icmp eq i32 %635, 0
 %637 = zext i1 %636 to i32
 store i32 %637, i32* %38
 br label %638
638:
 %639 = load i32, i32* %38
 ret i32 %639
}

define i32 @mz_zip_reader_extract_file_to_callback (i8* %0, i8* %1, i8* %2, i8* %3, i32 %4) {
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i8*
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca i32
 store i8* %0, i8** %7
 store i8* %1, i8** %8
 store i8* %2, i8** %9
 store i8* %3, i8** %10
 store i32 %4, i32* %11
 %13 = load i8*, i8** %7
 %14 = load i8*, i8** %8
 %15 = load i32, i32* %11
 %16 = call i32 @mz_zip_reader_locate_file_v2 (i8* %13, i8* %14, i8* null, i32 %15, i8* %12)
 %17 = icmp ne i32 %16, 0
 br i1 %17, label %19, label %18
18:
 store i32 0, i32* %6
 br label %26
19:
 %20 = load i8*, i8** %7
 %21 = load i32, i32* %12
 %22 = load i8*, i8** %9
 %23 = load i8*, i8** %10
 %24 = load i32, i32* %11
 %25 = call i32 @mz_zip_reader_extract_to_callback (i8* %20, i32 %21, i8* %22, i8* %23, i32 %24)
 store i32 %25, i32* %6
 br label %26
26:
 %27 = load i32, i32* %6
 ret i32 %27
}

define i8* @mz_zip_reader_extract_iter_new (i8* %0, i32 %1, i32 %2) {
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca i8*
 %13 = alloca i32
 %14 = alloca i8*
 %15 = alloca i32
 %16 = alloca i8*
 %17 = alloca i32
 %18 = alloca i8*
 %19 = alloca i32
 %20 = alloca i8*
 %21 = alloca i8*
 %22 = alloca i32
 %23 = alloca i32
 %24 = alloca i8*
 %25 = alloca [8 x i32]
 %26 = alloca i8*
 store i8* %0, i8** %21
 store i32 %1, i32* %22
 store i32 %2, i32* %23
 %27 = getelementptr [8 x i32], i8* %25, i64 0, i64 0
 store i8* %27, i8** %26
 %28 = load i8*, i8** %21
 %29 = icmp ne i8* %28, null
 br i1 %29, label %30, label %35
30:
 %31 = load i8*, i8** %21
 %32 = getelementptr %struct.mz_zip_archive, i8* %31, i32 0, i32 15
 %33 = load i8*, i8** %32
 %34 = icmp ne i8* %33, null
 br i1 %34, label %36, label %35
35:
 store i8* null, i8** %20
 br label %444
36:
 %37 = load i8*, i8** %21
 %38 = getelementptr %struct.mz_zip_archive, i8* %37, i32 0, i32 7
 %39 = load i8*, i8** %38
 %40 = load i8*, i8** %21
 %41 = getelementptr %struct.mz_zip_archive, i8* %40, i32 0, i32 10
 %42 = load i8*, i8** %41
 %43 = call i8* %39 (i8* %42, i64 1, i64 9584)
 store i8* %43, i8** %24
 %44 = load i8*, i8** %24
 %45 = icmp ne i8* %44, null
 br i1 %45, label %55, label %46
46:
 %47 = load i8*, i8** %21
 store i8* %47, i8** %4
 store i32 16, i32* %5
 %48 = load i8*, i8** %4
 %49 = icmp ne i8* %48, null
 br i1 %49, label %50, label %54
50:
 %51 = load i32, i32* %5
 %52 = load i8*, i8** %4
 %53 = getelementptr %struct.mz_zip_archive, i8* %52, i32 0, i32 5
 store i32 %51, i32* %53
 br label %54
54:
 store i8* null, i8** %20
 br label %444
55:
 %56 = load i8*, i8** %21
 %57 = load i32, i32* %22
 %58 = load i8*, i8** %24
 %59 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %58, i32 0, i32 9
 %60 = call i32 @mz_zip_reader_file_stat (i8* %56, i32 %57, i8* %59)
 %61 = icmp ne i32 %60, 0
 br i1 %61, label %70, label %62
62:
 %63 = load i8*, i8** %21
 %64 = getelementptr %struct.mz_zip_archive, i8* %63, i32 0, i32 8
 %65 = load i8*, i8** %64
 %66 = load i8*, i8** %21
 %67 = getelementptr %struct.mz_zip_archive, i8* %66, i32 0, i32 10
 %68 = load i8*, i8** %67
 %69 = load i8*, i8** %24
 call void %65 (i8* %68, i8* %69)
 store i8* null, i8** %20
 br label %444
70:
 %71 = load i8*, i8** %24
 %72 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %71, i32 0, i32 9
 %73 = getelementptr %struct.mz_zip_archive_file_stat, i8* %72, i32 0, i32 4
 %74 = load i16, i16* %73
 %75 = zext i16 %74 to i32
 %76 = and i32 %75, 97
 %77 = icmp ne i32 %76, 0
 br i1 %77, label %78, label %94
78:
 %79 = load i8*, i8** %21
 store i8* %79, i8** %6
 store i32 5, i32* %7
 %80 = load i8*, i8** %6
 %81 = icmp ne i8* %80, null
 br i1 %81, label %82, label %86
82:
 %83 = load i32, i32* %7
 %84 = load i8*, i8** %6
 %85 = getelementptr %struct.mz_zip_archive, i8* %84, i32 0, i32 5
 store i32 %83, i32* %85
 br label %86
86:
 %87 = load i8*, i8** %21
 %88 = getelementptr %struct.mz_zip_archive, i8* %87, i32 0, i32 8
 %89 = load i8*, i8** %88
 %90 = load i8*, i8** %21
 %91 = getelementptr %struct.mz_zip_archive, i8* %90, i32 0, i32 10
 %92 = load i8*, i8** %91
 %93 = load i8*, i8** %24
 call void %89 (i8* %92, i8* %93)
 store i8* null, i8** %20
 br label %444
94:
 %95 = load i32, i32* %23
 %96 = and i32 %95, 1024
 %97 = icmp ne i32 %96, 0
 br i1 %97, label %128, label %98
98:
 %99 = load i8*, i8** %24
 %100 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %99, i32 0, i32 9
 %101 = getelementptr %struct.mz_zip_archive_file_stat, i8* %100, i32 0, i32 5
 %102 = load i16, i16* %101
 %103 = zext i16 %102 to i32
 %104 = icmp ne i32 %103, 0
 br i1 %104, label %105, label %128
105:
 %106 = load i8*, i8** %24
 %107 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %106, i32 0, i32 9
 %108 = getelementptr %struct.mz_zip_archive_file_stat, i8* %107, i32 0, i32 5
 %109 = load i16, i16* %108
 %110 = zext i16 %109 to i32
 %111 = icmp ne i32 %110, 8
 br i1 %111, label %112, label %128
112:
 %113 = load i8*, i8** %21
 store i8* %113, i8** %8
 store i32 4, i32* %9
 %114 = load i8*, i8** %8
 %115 = icmp ne i8* %114, null
 br i1 %115, label %116, label %120
116:
 %117 = load i32, i32* %9
 %118 = load i8*, i8** %8
 %119 = getelementptr %struct.mz_zip_archive, i8* %118, i32 0, i32 5
 store i32 %117, i32* %119
 br label %120
120:
 %121 = load i8*, i8** %21
 %122 = getelementptr %struct.mz_zip_archive, i8* %121, i32 0, i32 8
 %123 = load i8*, i8** %122
 %124 = load i8*, i8** %21
 %125 = getelementptr %struct.mz_zip_archive, i8* %124, i32 0, i32 10
 %126 = load i8*, i8** %125
 %127 = load i8*, i8** %24
 call void %123 (i8* %126, i8* %127)
 store i8* null, i8** %20
 br label %444
128:
 %129 = load i8*, i8** %21
 %130 = load i8*, i8** %24
 %131 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %130, i32 0, i32 0
 store i8* %129, i8** %131
 %132 = load i32, i32* %23
 %133 = load i8*, i8** %24
 %134 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %133, i32 0, i32 1
 store i32 %132, i32* %134
 %135 = load i8*, i8** %24
 %136 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %135, i32 0, i32 2
 store i32 0, i32* %136
 %137 = load i8*, i8** %24
 %138 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %137, i32 0, i32 14
 store i32 0, i32* %138
 %139 = load i8*, i8** %24
 %140 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %139, i32 0, i32 4
 store i64 0, i64* %140
 %141 = load i8*, i8** %24
 %142 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %141, i32 0, i32 7
 store i64 0, i64* %142
 %143 = load i8*, i8** %24
 %144 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %143, i32 0, i32 10
 store i8* null, i8** %144
 %145 = load i8*, i8** %24
 %146 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %145, i32 0, i32 11
 store i8* null, i8** %146
 %147 = load i8*, i8** %24
 %148 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %147, i32 0, i32 12
 store i64 0, i64* %148
 %149 = load i8*, i8** %24
 %150 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %149, i32 0, i32 9
 %151 = getelementptr %struct.mz_zip_archive_file_stat, i8* %150, i32 0, i32 11
 %152 = load i64, i64* %151
 %153 = load i8*, i8** %24
 %154 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %153, i32 0, i32 8
 store i64 %152, i64* %154
 %155 = load i8*, i8** %21
 %156 = getelementptr %struct.mz_zip_archive, i8* %155, i32 0, i32 11
 %157 = load i8*, i8** %156
 %158 = load i8*, i8** %21
 %159 = getelementptr %struct.mz_zip_archive, i8* %158, i32 0, i32 14
 %160 = load i8*, i8** %159
 %161 = load i8*, i8** %24
 %162 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %161, i32 0, i32 8
 %163 = load i64, i64* %162
 %164 = load i8*, i8** %26
 %165 = call i64 %157 (i8* %160, i64 %163, i8* %164, i64 30)
 %166 = icmp ne i64 %165, 30
 br i1 %166, label %167, label %183
167:
 %168 = load i8*, i8** %21
 store i8* %168, i8** %10
 store i32 20, i32* %11
 %169 = load i8*, i8** %10
 %170 = icmp ne i8* %169, null
 br i1 %170, label %171, label %175
171:
 %172 = load i32, i32* %11
 %173 = load i8*, i8** %10
 %174 = getelementptr %struct.mz_zip_archive, i8* %173, i32 0, i32 5
 store i32 %172, i32* %174
 br label %175
175:
 %176 = load i8*, i8** %21
 %177 = getelementptr %struct.mz_zip_archive, i8* %176, i32 0, i32 8
 %178 = load i8*, i8** %177
 %179 = load i8*, i8** %21
 %180 = getelementptr %struct.mz_zip_archive, i8* %179, i32 0, i32 10
 %181 = load i8*, i8** %180
 %182 = load i8*, i8** %24
 call void %178 (i8* %181, i8* %182)
 store i8* null, i8** %20
 br label %444
183:
 %184 = load i8*, i8** %26
 %185 = getelementptr i8, i8* %184, i64 0
 %186 = load i8, i8* %185
 %187 = zext i8 %186 to i32
 %188 = load i8*, i8** %26
 %189 = getelementptr i8, i8* %188, i64 1
 %190 = load i8, i8* %189
 %191 = zext i8 %190 to i32
 %192 = shl i32 %191, 8
 %193 = or i32 %187, %192
 %194 = load i8*, i8** %26
 %195 = getelementptr i8, i8* %194, i64 2
 %196 = load i8, i8* %195
 %197 = zext i8 %196 to i32
 %198 = shl i32 %197, 16
 %199 = or i32 %193, %198
 %200 = load i8*, i8** %26
 %201 = getelementptr i8, i8* %200, i64 3
 %202 = load i8, i8* %201
 %203 = zext i8 %202 to i32
 %204 = shl i32 %203, 24
 %205 = or i32 %199, %204
 %206 = icmp ne i32 %205, 67324752
 br i1 %206, label %207, label %223
207:
 %208 = load i8*, i8** %21
 store i8* %208, i8** %12
 store i32 9, i32* %13
 %209 = load i8*, i8** %12
 %210 = icmp ne i8* %209, null
 br i1 %210, label %211, label %215
211:
 %212 = load i32, i32* %13
 %213 = load i8*, i8** %12
 %214 = getelementptr %struct.mz_zip_archive, i8* %213, i32 0, i32 5
 store i32 %212, i32* %214
 br label %215
215:
 %216 = load i8*, i8** %21
 %217 = getelementptr %struct.mz_zip_archive, i8* %216, i32 0, i32 8
 %218 = load i8*, i8** %217
 %219 = load i8*, i8** %21
 %220 = getelementptr %struct.mz_zip_archive, i8* %219, i32 0, i32 10
 %221 = load i8*, i8** %220
 %222 = load i8*, i8** %24
 call void %218 (i8* %221, i8* %222)
 store i8* null, i8** %20
 br label %444
223:
 %224 = load i8*, i8** %26
 %225 = getelementptr i8, i8* %224, i64 26
 %226 = getelementptr i8, i8* %225, i64 0
 %227 = load i8, i8* %226
 %228 = zext i8 %227 to i32
 %229 = load i8*, i8** %26
 %230 = getelementptr i8, i8* %229, i64 26
 %231 = getelementptr i8, i8* %230, i64 1
 %232 = load i8, i8* %231
 %233 = zext i8 %232 to i32
 %234 = shl i32 %233, 8
 %235 = or i32 %228, %234
 %236 = add i32 30, %235
 %237 = load i8*, i8** %26
 %238 = getelementptr i8, i8* %237, i64 28
 %239 = getelementptr i8, i8* %238, i64 0
 %240 = load i8, i8* %239
 %241 = zext i8 %240 to i32
 %242 = load i8*, i8** %26
 %243 = getelementptr i8, i8* %242, i64 28
 %244 = getelementptr i8, i8* %243, i64 1
 %245 = load i8, i8* %244
 %246 = zext i8 %245 to i32
 %247 = shl i32 %246, 8
 %248 = or i32 %241, %247
 %249 = add i32 %236, %248
 %250 = zext i32 %249 to i64
 %251 = load i8*, i8** %24
 %252 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %251, i32 0, i32 8
 %253 = load i64, i64* %252
 %254 = add i64 %253, %250
 store i64 %254, i64* %252
 %255 = load i8*, i8** %24
 %256 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %255, i32 0, i32 8
 %257 = load i64, i64* %256
 %258 = load i8*, i8** %24
 %259 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %258, i32 0, i32 9
 %260 = getelementptr %struct.mz_zip_archive_file_stat, i8* %259, i32 0, i32 7
 %261 = load i64, i64* %260
 %262 = add i64 %257, %261
 %263 = load i8*, i8** %21
 %264 = getelementptr %struct.mz_zip_archive, i8* %263, i32 0, i32 0
 %265 = load i64, i64* %264
 %266 = icmp ugt i64 %262, %265
 br i1 %266, label %267, label %283
267:
 %268 = load i8*, i8** %21
 store i8* %268, i8** %14
 store i32 9, i32* %15
 %269 = load i8*, i8** %14
 %270 = icmp ne i8* %269, null
 br i1 %270, label %271, label %275
271:
 %272 = load i32, i32* %15
 %273 = load i8*, i8** %14
 %274 = getelementptr %struct.mz_zip_archive, i8* %273, i32 0, i32 5
 store i32 %272, i32* %274
 br label %275
275:
 %276 = load i8*, i8** %21
 %277 = getelementptr %struct.mz_zip_archive, i8* %276, i32 0, i32 8
 %278 = load i8*, i8** %277
 %279 = load i8*, i8** %21
 %280 = getelementptr %struct.mz_zip_archive, i8* %279, i32 0, i32 10
 %281 = load i8*, i8** %280
 %282 = load i8*, i8** %24
 call void %278 (i8* %281, i8* %282)
 store i8* null, i8** %20
 br label %444
283:
 %284 = load i8*, i8** %21
 %285 = getelementptr %struct.mz_zip_archive, i8* %284, i32 0, i32 15
 %286 = load i8*, i8** %285
 %287 = getelementptr %struct.mz_zip_internal_state_tag, i8* %286, i32 0, i32 8
 %288 = load i8*, i8** %287
 %289 = icmp ne i8* %288, null
 br i1 %289, label %290, label %316
290:
 %291 = load i8*, i8** %21
 %292 = getelementptr %struct.mz_zip_archive, i8* %291, i32 0, i32 15
 %293 = load i8*, i8** %292
 %294 = getelementptr %struct.mz_zip_internal_state_tag, i8* %293, i32 0, i32 8
 %295 = load i8*, i8** %294
 %296 = load i8*, i8** %24
 %297 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %296, i32 0, i32 8
 %298 = load i64, i64* %297
 %299 = getelementptr i8, i8* %295, i64 %298
 %300 = load i8*, i8** %24
 %301 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %300, i32 0, i32 10
 store i8* %299, i8** %301
 %302 = load i8*, i8** %24
 %303 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %302, i32 0, i32 9
 %304 = getelementptr %struct.mz_zip_archive_file_stat, i8* %303, i32 0, i32 7
 %305 = load i64, i64* %304
 %306 = load i8*, i8** %24
 %307 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %306, i32 0, i32 5
 store i64 %305, i64* %307
 %308 = load i8*, i8** %24
 %309 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %308, i32 0, i32 3
 store i64 %305, i64* %309
 %310 = load i8*, i8** %24
 %311 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %310, i32 0, i32 9
 %312 = getelementptr %struct.mz_zip_archive_file_stat, i8* %311, i32 0, i32 7
 %313 = load i64, i64* %312
 %314 = load i8*, i8** %24
 %315 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %314, i32 0, i32 6
 store i64 %313, i64* %315
 br label %384
316:
 %317 = load i32, i32* %23
 %318 = and i32 %317, 1024
 %319 = icmp ne i32 %318, 0
 br i1 %319, label %372, label %320
320:
 %321 = load i8*, i8** %24
 %322 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %321, i32 0, i32 9
 %323 = getelementptr %struct.mz_zip_archive_file_stat, i8* %322, i32 0, i32 5
 %324 = load i16, i16* %323
 %325 = icmp ne i16 %324, 0
 br i1 %325, label %326, label %372
326:
 %327 = load i8*, i8** %24
 %328 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %327, i32 0, i32 9
 %329 = getelementptr %struct.mz_zip_archive_file_stat, i8* %328, i32 0, i32 7
 %330 = load i64, i64* %329
 %331 = icmp ult i64 %330, 65536
 br i1 %331, label %332, label %337
332:
 %333 = load i8*, i8** %24
 %334 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %333, i32 0, i32 9
 %335 = getelementptr %struct.mz_zip_archive_file_stat, i8* %334, i32 0, i32 7
 %336 = load i64, i64* %335
 br label %338
337:
 br label %338
338:
 %339 = phi i64 [%336, %332], [65536, %337]
 %340 = load i8*, i8** %24
 %341 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %340, i32 0, i32 3
 store i64 %339, i64* %341
 %342 = load i8*, i8** %21
 %343 = getelementptr %struct.mz_zip_archive, i8* %342, i32 0, i32 7
 %344 = load i8*, i8** %343
 %345 = load i8*, i8** %21
 %346 = getelementptr %struct.mz_zip_archive, i8* %345, i32 0, i32 10
 %347 = load i8*, i8** %346
 %348 = load i8*, i8** %24
 %349 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %348, i32 0, i32 3
 %350 = load i64, i64* %349
 %351 = call i8* %344 (i8* %347, i64 1, i64 %350)
 %352 = load i8*, i8** %24
 %353 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %352, i32 0, i32 10
 store i8* %351, i8** %353
 %354 = icmp eq i8* null, %351
 br i1 %354, label %355, label %371
355:
 %356 = load i8*, i8** %21
 store i8* %356, i8** %16
 store i32 16, i32* %17
 %357 = load i8*, i8** %16
 %358 = icmp ne i8* %357, null
 br i1 %358, label %359, label %363
359:
 %360 = load i32, i32* %17
 %361 = load i8*, i8** %16
 %362 = getelementptr %struct.mz_zip_archive, i8* %361, i32 0, i32 5
 store i32 %360, i32* %362
 br label %363
363:
 %364 = load i8*, i8** %21
 %365 = getelementptr %struct.mz_zip_archive, i8* %364, i32 0, i32 8
 %366 = load i8*, i8** %365
 %367 = load i8*, i8** %21
 %368 = getelementptr %struct.mz_zip_archive, i8* %367, i32 0, i32 10
 %369 = load i8*, i8** %368
 %370 = load i8*, i8** %24
 call void %366 (i8* %369, i8* %370)
 store i8* null, i8** %20
 br label %444
371:
 br label %375
372:
 %373 = load i8*, i8** %24
 %374 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %373, i32 0, i32 3
 store i64 0, i64* %374
 br label %375
375:
 %376 = load i8*, i8** %24
 %377 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %376, i32 0, i32 5
 store i64 0, i64* %377
 %378 = load i8*, i8** %24
 %379 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %378, i32 0, i32 9
 %380 = getelementptr %struct.mz_zip_archive_file_stat, i8* %379, i32 0, i32 7
 %381 = load i64, i64* %380
 %382 = load i8*, i8** %24
 %383 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %382, i32 0, i32 6
 store i64 %381, i64* %383
 br label %384
384:
 %385 = load i32, i32* %23
 %386 = and i32 %385, 1024
 %387 = icmp ne i32 %386, 0
 br i1 %387, label %442, label %388
388:
 %389 = load i8*, i8** %24
 %390 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %389, i32 0, i32 9
 %391 = getelementptr %struct.mz_zip_archive_file_stat, i8* %390, i32 0, i32 5
 %392 = load i16, i16* %391
 %393 = icmp ne i16 %392, 0
 br i1 %393, label %394, label %442
394:
 br label %395
395:
 %396 = load i8*, i8** %24
 %397 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %396, i32 0, i32 13
 %398 = getelementptr %struct.tinfl_decompressor_tag, i8* %397, i32 0, i32 0
 store i32 0, i32* %398
 br label %399
399:
 %400 = load i8*, i8** %21
 %401 = getelementptr %struct.mz_zip_archive, i8* %400, i32 0, i32 7
 %402 = load i8*, i8** %401
 %403 = load i8*, i8** %21
 %404 = getelementptr %struct.mz_zip_archive, i8* %403, i32 0, i32 10
 %405 = load i8*, i8** %404
 %406 = call i8* %402 (i8* %405, i64 1, i64 32768)
 %407 = load i8*, i8** %24
 %408 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %407, i32 0, i32 11
 store i8* %406, i8** %408
 %409 = icmp eq i8* null, %406
 br i1 %409, label %410, label %441
410:
 %411 = load i8*, i8** %21
 store i8* %411, i8** %18
 store i32 16, i32* %19
 %412 = load i8*, i8** %18
 %413 = icmp ne i8* %412, null
 br i1 %413, label %414, label %418
414:
 %415 = load i32, i32* %19
 %416 = load i8*, i8** %18
 %417 = getelementptr %struct.mz_zip_archive, i8* %416, i32 0, i32 5
 store i32 %415, i32* %417
 br label %418
418:
 %419 = load i8*, i8** %24
 %420 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %419, i32 0, i32 10
 %421 = load i8*, i8** %420
 %422 = icmp ne i8* %421, null
 br i1 %422, label %423, label %433
423:
 %424 = load i8*, i8** %21
 %425 = getelementptr %struct.mz_zip_archive, i8* %424, i32 0, i32 8
 %426 = load i8*, i8** %425
 %427 = load i8*, i8** %21
 %428 = getelementptr %struct.mz_zip_archive, i8* %427, i32 0, i32 10
 %429 = load i8*, i8** %428
 %430 = load i8*, i8** %24
 %431 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %430, i32 0, i32 10
 %432 = load i8*, i8** %431
 call void %426 (i8* %429, i8* %432)
 br label %433
433:
 %434 = load i8*, i8** %21
 %435 = getelementptr %struct.mz_zip_archive, i8* %434, i32 0, i32 8
 %436 = load i8*, i8** %435
 %437 = load i8*, i8** %21
 %438 = getelementptr %struct.mz_zip_archive, i8* %437, i32 0, i32 10
 %439 = load i8*, i8** %438
 %440 = load i8*, i8** %24
 call void %436 (i8* %439, i8* %440)
 store i8* null, i8** %20
 br label %444
441:
 br label %442
442:
 %443 = load i8*, i8** %24
 store i8* %443, i8** %20
 br label %444
444:
 %445 = load i8*, i8** %20
 ret i8* %445
}

define i8* @mz_zip_reader_extract_file_iter_new (i8* %0, i8* %1, i32 %2) {
 %4 = alloca i8*
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i32
 store i8* %0, i8** %5
 store i8* %1, i8** %6
 store i32 %2, i32* %7
 %9 = load i8*, i8** %5
 %10 = load i8*, i8** %6
 %11 = load i32, i32* %7
 %12 = call i32 @mz_zip_reader_locate_file_v2 (i8* %9, i8* %10, i8* null, i32 %11, i8* %8)
 %13 = icmp ne i32 %12, 0
 br i1 %13, label %15, label %14
14:
 store i8* null, i8** %4
 br label %20
15:
 %16 = load i8*, i8** %5
 %17 = load i32, i32* %8
 %18 = load i32, i32* %7
 %19 = call i8* @mz_zip_reader_extract_iter_new (i8* %16, i32 %17, i32 %18)
 store i8* %19, i8** %4
 br label %20
20:
 %21 = load i8*, i8** %4
 ret i8* %21
}

define i64 @mz_zip_reader_extract_iter_read (i8* %0, i8* %1, i64 %2) {
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i64
 %11 = alloca i8*
 %12 = alloca i8*
 %13 = alloca i64
 %14 = alloca i64
 %15 = alloca i8*
 %16 = alloca i64
 %17 = alloca i64
 %18 = alloca i64
 store i8* %0, i8** %11
 store i8* %1, i8** %12
 store i64 %2, i64* %13
 store i64 0, i64* %14
 %19 = load i8*, i8** %11
 %20 = icmp ne i8* %19, null
 br i1 %20, label %21, label %36
21:
 %22 = load i8*, i8** %11
 %23 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %22, i32 0, i32 0
 %24 = load i8*, i8** %23
 %25 = icmp ne i8* %24, null
 br i1 %25, label %26, label %36
26:
 %27 = load i8*, i8** %11
 %28 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %27, i32 0, i32 0
 %29 = load i8*, i8** %28
 %30 = getelementptr %struct.mz_zip_archive, i8* %29, i32 0, i32 15
 %31 = load i8*, i8** %30
 %32 = icmp ne i8* %31, null
 br i1 %32, label %33, label %36
33:
 %34 = load i8*, i8** %12
 %35 = icmp ne i8* %34, null
 br i1 %35, label %37, label %36
36:
 store i64 0, i64* %10
 br label %396
37:
 %38 = load i8*, i8** %11
 %39 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %38, i32 0, i32 1
 %40 = load i32, i32* %39
 %41 = and i32 %40, 1024
 %42 = icmp ne i32 %41, 0
 br i1 %42, label %49, label %43
43:
 %44 = load i8*, i8** %11
 %45 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %44, i32 0, i32 9
 %46 = getelementptr %struct.mz_zip_archive_file_stat, i8* %45, i32 0, i32 5
 %47 = load i16, i16* %46
 %48 = icmp ne i16 %47, 0
 br i1 %48, label %153, label %49
49:
 %50 = load i64, i64* %13
 %51 = load i8*, i8** %11
 %52 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %51, i32 0, i32 6
 %53 = load i64, i64* %52
 %54 = icmp ult i64 %50, %53
 br i1 %54, label %55, label %57
55:
 %56 = load i64, i64* %13
 br label %61
57:
 %58 = load i8*, i8** %11
 %59 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %58, i32 0, i32 6
 %60 = load i64, i64* %59
 br label %61
61:
 %62 = phi i64 [%56, %55], [%60, %57]
 store i64 %62, i64* %14
 %63 = load i8*, i8** %11
 %64 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %63, i32 0, i32 0
 %65 = load i8*, i8** %64
 %66 = getelementptr %struct.mz_zip_archive, i8* %65, i32 0, i32 15
 %67 = load i8*, i8** %66
 %68 = getelementptr %struct.mz_zip_internal_state_tag, i8* %67, i32 0, i32 8
 %69 = load i8*, i8** %68
 %70 = icmp ne i8* %69, null
 br i1 %70, label %71, label %87
71:
 %72 = load i8*, i8** %12
 %73 = load i8*, i8** %11
 %74 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %73, i32 0, i32 10
 %75 = load i8*, i8** %74
 %76 = load i64, i64* %14
 %77 = load i8*, i8** %12
 %78 = call i64 @llvm.objectsize.i64.p0 (i8* %77, i1 0, i1 1, i1 0)
 %79 = call i8* @__memcpy_chk (i8* %72, i8* %75, i64 %76, i64 %78)
 %80 = load i8*, i8** %11
 %81 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %80, i32 0, i32 10
 %82 = load i8*, i8** %81
 %83 = load i64, i64* %14
 %84 = getelementptr i8, i8* %82, i64 %83
 %85 = load i8*, i8** %11
 %86 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %85, i32 0, i32 10
 store i8* %84, i8** %86
 br label %120
87:
 %88 = load i8*, i8** %11
 %89 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %88, i32 0, i32 0
 %90 = load i8*, i8** %89
 %91 = getelementptr %struct.mz_zip_archive, i8* %90, i32 0, i32 11
 %92 = load i8*, i8** %91
 %93 = load i8*, i8** %11
 %94 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %93, i32 0, i32 0
 %95 = load i8*, i8** %94
 %96 = getelementptr %struct.mz_zip_archive, i8* %95, i32 0, i32 14
 %97 = load i8*, i8** %96
 %98 = load i8*, i8** %11
 %99 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %98, i32 0, i32 8
 %100 = load i64, i64* %99
 %101 = load i8*, i8** %12
 %102 = load i64, i64* %14
 %103 = call i64 %92 (i8* %97, i64 %100, i8* %101, i64 %102)
 %104 = load i64, i64* %14
 %105 = icmp ne i64 %103, %104
 br i1 %105, label %106, label %119
106:
 %107 = load i8*, i8** %11
 %108 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %107, i32 0, i32 0
 %109 = load i8*, i8** %108
 store i8* %109, i8** %4
 store i32 20, i32* %5
 %110 = load i8*, i8** %4
 %111 = icmp ne i8* %110, null
 br i1 %111, label %112, label %116
112:
 %113 = load i32, i32* %5
 %114 = load i8*, i8** %4
 %115 = getelementptr %struct.mz_zip_archive, i8* %114, i32 0, i32 5
 store i32 %113, i32* %115
 br label %116
116:
 %117 = load i8*, i8** %11
 %118 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %117, i32 0, i32 2
 store i32 -1, i32* %118
 store i64 0, i64* %14
 br label %119
119:
 br label %120
120:
 %121 = load i8*, i8** %11
 %122 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %121, i32 0, i32 1
 %123 = load i32, i32* %122
 %124 = and i32 %123, 1024
 %125 = icmp ne i32 %124, 0
 br i1 %125, label %137, label %126
126:
 %127 = load i8*, i8** %11
 %128 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %127, i32 0, i32 14
 %129 = load i32, i32* %128
 %130 = zext i32 %129 to i64
 %131 = load i8*, i8** %12
 %132 = load i64, i64* %14
 %133 = call i64 @mz_crc32 (i64 %130, i8* %131, i64 %132)
 %134 = trunc i64 %133 to i32
 %135 = load i8*, i8** %11
 %136 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %135, i32 0, i32 14
 store i32 %134, i32* %136
 br label %137
137:
 %138 = load i64, i64* %14
 %139 = load i8*, i8** %11
 %140 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %139, i32 0, i32 8
 %141 = load i64, i64* %140
 %142 = add i64 %141, %138
 store i64 %142, i64* %140
 %143 = load i64, i64* %14
 %144 = load i8*, i8** %11
 %145 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %144, i32 0, i32 7
 %146 = load i64, i64* %145
 %147 = add i64 %146, %143
 store i64 %147, i64* %145
 %148 = load i64, i64* %14
 %149 = load i8*, i8** %11
 %150 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %149, i32 0, i32 6
 %151 = load i64, i64* %150
 %152 = sub i64 %151, %148
 store i64 %152, i64* %150
 br label %394
153:
 br label %154
154:
 %155 = load i8*, i8** %11
 %156 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %155, i32 0, i32 11
 %157 = load i8*, i8** %156
 %158 = load i8*, i8** %11
 %159 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %158, i32 0, i32 7
 %160 = load i64, i64* %159
 %161 = and i64 %160, 32767
 %162 = getelementptr i8, i8* %157, i64 %161
 store i8* %162, i8** %15
 %163 = load i8*, i8** %11
 %164 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %163, i32 0, i32 7
 %165 = load i64, i64* %164
 %166 = and i64 %165, 32767
 %167 = sub i64 32768, %166
 store i64 %167, i64* %17
 %168 = load i8*, i8** %11
 %169 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %168, i32 0, i32 12
 %170 = load i64, i64* %169
 %171 = icmp ne i64 %170, 0
 br i1 %171, label %299, label %172
172:
 %173 = load i8*, i8** %11
 %174 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %173, i32 0, i32 5
 %175 = load i64, i64* %174
 %176 = icmp ne i64 %175, 0
 br i1 %176, label %260, label %177
177:
 %178 = load i8*, i8** %11
 %179 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %178, i32 0, i32 0
 %180 = load i8*, i8** %179
 %181 = getelementptr %struct.mz_zip_archive, i8* %180, i32 0, i32 15
 %182 = load i8*, i8** %181
 %183 = getelementptr %struct.mz_zip_internal_state_tag, i8* %182, i32 0, i32 8
 %184 = load i8*, i8** %183
 %185 = icmp ne i8* %184, null
 br i1 %185, label %260, label %186
186:
 %187 = load i8*, i8** %11
 %188 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %187, i32 0, i32 3
 %189 = load i64, i64* %188
 %190 = load i8*, i8** %11
 %191 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %190, i32 0, i32 6
 %192 = load i64, i64* %191
 %193 = icmp ult i64 %189, %192
 br i1 %193, label %194, label %198
194:
 %195 = load i8*, i8** %11
 %196 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %195, i32 0, i32 3
 %197 = load i64, i64* %196
 br label %202
198:
 %199 = load i8*, i8** %11
 %200 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %199, i32 0, i32 6
 %201 = load i64, i64* %200
 br label %202
202:
 %203 = phi i64 [%197, %194], [%201, %198]
 %204 = load i8*, i8** %11
 %205 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %204, i32 0, i32 5
 store i64 %203, i64* %205
 %206 = load i8*, i8** %11
 %207 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %206, i32 0, i32 0
 %208 = load i8*, i8** %207
 %209 = getelementptr %struct.mz_zip_archive, i8* %208, i32 0, i32 11
 %210 = load i8*, i8** %209
 %211 = load i8*, i8** %11
 %212 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %211, i32 0, i32 0
 %213 = load i8*, i8** %212
 %214 = getelementptr %struct.mz_zip_archive, i8* %213, i32 0, i32 14
 %215 = load i8*, i8** %214
 %216 = load i8*, i8** %11
 %217 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %216, i32 0, i32 8
 %218 = load i64, i64* %217
 %219 = load i8*, i8** %11
 %220 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %219, i32 0, i32 10
 %221 = load i8*, i8** %220
 %222 = load i8*, i8** %11
 %223 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %222, i32 0, i32 5
 %224 = load i64, i64* %223
 %225 = call i64 %210 (i8* %215, i64 %218, i8* %221, i64 %224)
 %226 = load i8*, i8** %11
 %227 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %226, i32 0, i32 5
 %228 = load i64, i64* %227
 %229 = icmp ne i64 %225, %228
 br i1 %229, label %230, label %243
230:
 %231 = load i8*, i8** %11
 %232 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %231, i32 0, i32 0
 %233 = load i8*, i8** %232
 store i8* %233, i8** %6
 store i32 20, i32* %7
 %234 = load i8*, i8** %6
 %235 = icmp ne i8* %234, null
 br i1 %235, label %236, label %240
236:
 %237 = load i32, i32* %7
 %238 = load i8*, i8** %6
 %239 = getelementptr %struct.mz_zip_archive, i8* %238, i32 0, i32 5
 store i32 %237, i32* %239
 br label %240
240:
 %241 = load i8*, i8** %11
 %242 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %241, i32 0, i32 2
 store i32 -1, i32* %242
 br label %393
243:
 %244 = load i8*, i8** %11
 %245 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %244, i32 0, i32 5
 %246 = load i64, i64* %245
 %247 = load i8*, i8** %11
 %248 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %247, i32 0, i32 8
 %249 = load i64, i64* %248
 %250 = add i64 %249, %246
 store i64 %250, i64* %248
 %251 = load i8*, i8** %11
 %252 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %251, i32 0, i32 5
 %253 = load i64, i64* %252
 %254 = load i8*, i8** %11
 %255 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %254, i32 0, i32 6
 %256 = load i64, i64* %255
 %257 = sub i64 %256, %253
 store i64 %257, i64* %255
 %258 = load i8*, i8** %11
 %259 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %258, i32 0, i32 4
 store i64 0, i64* %259
 br label %260
260:
 %261 = load i8*, i8** %11
 %262 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %261, i32 0, i32 5
 %263 = load i64, i64* %262
 store i64 %263, i64* %16
 %264 = load i8*, i8** %11
 %265 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %264, i32 0, i32 13
 %266 = load i8*, i8** %11
 %267 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %266, i32 0, i32 10
 %268 = load i8*, i8** %267
 %269 = load i8*, i8** %11
 %270 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %269, i32 0, i32 4
 %271 = load i64, i64* %270
 %272 = getelementptr i8, i8* %268, i64 %271
 %273 = load i8*, i8** %11
 %274 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %273, i32 0, i32 11
 %275 = load i8*, i8** %274
 %276 = load i8*, i8** %15
 %277 = load i8*, i8** %11
 %278 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %277, i32 0, i32 6
 %279 = load i64, i64* %278
 %280 = icmp ne i64 %279, 0
 %281 = zext i1 %280 to i64
 %282 = select i1 %280, i32 2, i32 0
 %283 = call i32 @tinfl_decompress (i8* %265, i8* %272, i8* %16, i8* %275, i8* %276, i8* %17, i32 %282)
 %284 = load i8*, i8** %11
 %285 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %284, i32 0, i32 2
 store i32 %283, i32* %285
 %286 = load i64, i64* %16
 %287 = load i8*, i8** %11
 %288 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %287, i32 0, i32 5
 %289 = load i64, i64* %288
 %290 = sub i64 %289, %286
 store i64 %290, i64* %288
 %291 = load i64, i64* %16
 %292 = load i8*, i8** %11
 %293 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %292, i32 0, i32 4
 %294 = load i64, i64* %293
 %295 = add i64 %294, %291
 store i64 %295, i64* %293
 %296 = load i64, i64* %17
 %297 = load i8*, i8** %11
 %298 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %297, i32 0, i32 12
 store i64 %296, i64* %298
 br label %299
299:
 %300 = load i8*, i8** %11
 %301 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %300, i32 0, i32 12
 %302 = load i64, i64* %301
 %303 = icmp ne i64 %302, 0
 br i1 %303, label %304, label %374
304:
 %305 = load i64, i64* %13
 %306 = load i64, i64* %14
 %307 = sub i64 %305, %306
 %308 = load i8*, i8** %11
 %309 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %308, i32 0, i32 12
 %310 = load i64, i64* %309
 %311 = icmp ult i64 %307, %310
 br i1 %311, label %312, label %316
312:
 %313 = load i64, i64* %13
 %314 = load i64, i64* %14
 %315 = sub i64 %313, %314
 br label %320
316:
 %317 = load i8*, i8** %11
 %318 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %317, i32 0, i32 12
 %319 = load i64, i64* %318
 br label %320
320:
 %321 = phi i64 [%315, %312], [%319, %316]
 store i64 %321, i64* %18
 %322 = load i8*, i8** %12
 %323 = load i64, i64* %14
 %324 = getelementptr i8, i8* %322, i64 %323
 %325 = load i8*, i8** %15
 %326 = load i64, i64* %18
 %327 = load i8*, i8** %12
 %328 = load i64, i64* %14
 %329 = getelementptr i8, i8* %327, i64 %328
 %330 = call i64 @llvm.objectsize.i64.p0 (i8* %329, i1 0, i1 1, i1 0)
 %331 = call i8* @__memcpy_chk (i8* %324, i8* %325, i64 %326, i64 %330)
 %332 = load i8*, i8** %11
 %333 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %332, i32 0, i32 14
 %334 = load i32, i32* %333
 %335 = zext i32 %334 to i64
 %336 = load i8*, i8** %15
 %337 = load i64, i64* %18
 %338 = call i64 @mz_crc32 (i64 %335, i8* %336, i64 %337)
 %339 = trunc i64 %338 to i32
 %340 = load i8*, i8** %11
 %341 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %340, i32 0, i32 14
 store i32 %339, i32* %341
 %342 = load i64, i64* %18
 %343 = load i8*, i8** %11
 %344 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %343, i32 0, i32 12
 %345 = load i64, i64* %344
 %346 = sub i64 %345, %342
 store i64 %346, i64* %344
 %347 = load i64, i64* %18
 %348 = load i8*, i8** %11
 %349 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %348, i32 0, i32 7
 %350 = load i64, i64* %349
 %351 = add i64 %350, %347
 store i64 %351, i64* %349
 %352 = load i8*, i8** %11
 %353 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %352, i32 0, i32 9
 %354 = getelementptr %struct.mz_zip_archive_file_stat, i8* %353, i32 0, i32 8
 %355 = load i64, i64* %354
 %356 = icmp ugt i64 %351, %355
 br i1 %356, label %357, label %370
357:
 %358 = load i8*, i8** %11
 %359 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %358, i32 0, i32 0
 %360 = load i8*, i8** %359
 store i8* %360, i8** %8
 store i32 11, i32* %9
 %361 = load i8*, i8** %8
 %362 = icmp ne i8* %361, null
 br i1 %362, label %363, label %367
363:
 %364 = load i32, i32* %9
 %365 = load i8*, i8** %8
 %366 = getelementptr %struct.mz_zip_archive, i8* %365, i32 0, i32 5
 store i32 %364, i32* %366
 br label %367
367:
 %368 = load i8*, i8** %11
 %369 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %368, i32 0, i32 2
 store i32 -1, i32* %369
 br label %393
370:
 %371 = load i64, i64* %18
 %372 = load i64, i64* %14
 %373 = add i64 %372, %371
 store i64 %373, i64* %14
 br label %374
374:
 br label %375
375:
 %376 = load i64, i64* %14
 %377 = load i64, i64* %13
 %378 = icmp ult i64 %376, %377
 br i1 %378, label %379, label %391
379:
 %380 = load i8*, i8** %11
 %381 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %380, i32 0, i32 2
 %382 = load i32, i32* %381
 %383 = icmp eq i32 %382, 1
 br i1 %383, label %389, label %384
384:
 %385 = load i8*, i8** %11
 %386 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %385, i32 0, i32 2
 %387 = load i32, i32* %386
 %388 = icmp eq i32 %387, 2
 br label %389
389:
 %390 = phi i1 [1, %379], [%388, %384]
 br label %391
391:
 %392 = phi i1 [0, %375], [%390, %389]
 br i1 %392, label %154, label %393
393:
 br label %394
394:
 %395 = load i64, i64* %14
 store i64 %395, i64* %10
 br label %396
396:
 %397 = load i64, i64* %10
 ret i64 %397
}

define i32 @mz_zip_reader_extract_iter_free (i8* %0) {
 %2 = alloca i8*
 %3 = alloca i32
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i32
 store i8* %0, i8** %7
 %9 = load i8*, i8** %7
 %10 = icmp ne i8* %9, null
 br i1 %10, label %11, label %23
11:
 %12 = load i8*, i8** %7
 %13 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %12, i32 0, i32 0
 %14 = load i8*, i8** %13
 %15 = icmp ne i8* %14, null
 br i1 %15, label %16, label %23
16:
 %17 = load i8*, i8** %7
 %18 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %17, i32 0, i32 0
 %19 = load i8*, i8** %18
 %20 = getelementptr %struct.mz_zip_archive, i8* %19, i32 0, i32 15
 %21 = load i8*, i8** %20
 %22 = icmp ne i8* %21, null
 br i1 %22, label %24, label %23
23:
 store i32 0, i32* %6
 br label %141
24:
 %25 = load i8*, i8** %7
 %26 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %25, i32 0, i32 2
 %27 = load i32, i32* %26
 %28 = icmp eq i32 %27, 0
 br i1 %28, label %29, label %81
29:
 %30 = load i8*, i8** %7
 %31 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %30, i32 0, i32 1
 %32 = load i32, i32* %31
 %33 = and i32 %32, 1024
 %34 = icmp ne i32 %33, 0
 br i1 %34, label %81, label %35
35:
 %36 = load i8*, i8** %7
 %37 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %36, i32 0, i32 7
 %38 = load i64, i64* %37
 %39 = load i8*, i8** %7
 %40 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %39, i32 0, i32 9
 %41 = getelementptr %struct.mz_zip_archive_file_stat, i8* %40, i32 0, i32 8
 %42 = load i64, i64* %41
 %43 = icmp ne i64 %38, %42
 br i1 %43, label %44, label %57
44:
 %45 = load i8*, i8** %7
 %46 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %45, i32 0, i32 0
 %47 = load i8*, i8** %46
 store i8* %47, i8** %2
 store i32 13, i32* %3
 %48 = load i8*, i8** %2
 %49 = icmp ne i8* %48, null
 br i1 %49, label %50, label %54
50:
 %51 = load i32, i32* %3
 %52 = load i8*, i8** %2
 %53 = getelementptr %struct.mz_zip_archive, i8* %52, i32 0, i32 5
 store i32 %51, i32* %53
 br label %54
54:
 %55 = load i8*, i8** %7
 %56 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %55, i32 0, i32 2
 store i32 -1, i32* %56
 br label %80
57:
 %58 = load i8*, i8** %7
 %59 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %58, i32 0, i32 14
 %60 = load i32, i32* %59
 %61 = load i8*, i8** %7
 %62 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %61, i32 0, i32 9
 %63 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 6
 %64 = load i32, i32* %63
 %65 = icmp ne i32 %60, %64
 br i1 %65, label %66, label %79
66:
 %67 = load i8*, i8** %7
 %68 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %67, i32 0, i32 0
 %69 = load i8*, i8** %68
 store i8* %69, i8** %4
 store i32 11, i32* %5
 %70 = load i8*, i8** %4
 %71 = icmp ne i8* %70, null
 br i1 %71, label %72, label %76
72:
 %73 = load i32, i32* %5
 %74 = load i8*, i8** %4
 %75 = getelementptr %struct.mz_zip_archive, i8* %74, i32 0, i32 5
 store i32 %73, i32* %75
 br label %76
76:
 %77 = load i8*, i8** %7
 %78 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %77, i32 0, i32 2
 store i32 -1, i32* %78
 br label %79
79:
 br label %80
80:
 br label %81
81:
 %82 = load i8*, i8** %7
 %83 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %82, i32 0, i32 0
 %84 = load i8*, i8** %83
 %85 = getelementptr %struct.mz_zip_archive, i8* %84, i32 0, i32 15
 %86 = load i8*, i8** %85
 %87 = getelementptr %struct.mz_zip_internal_state_tag, i8* %86, i32 0, i32 8
 %88 = load i8*, i8** %87
 %89 = icmp ne i8* %88, null
 br i1 %89, label %104, label %90
90:
 %91 = load i8*, i8** %7
 %92 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %91, i32 0, i32 0
 %93 = load i8*, i8** %92
 %94 = getelementptr %struct.mz_zip_archive, i8* %93, i32 0, i32 8
 %95 = load i8*, i8** %94
 %96 = load i8*, i8** %7
 %97 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %96, i32 0, i32 0
 %98 = load i8*, i8** %97
 %99 = getelementptr %struct.mz_zip_archive, i8* %98, i32 0, i32 10
 %100 = load i8*, i8** %99
 %101 = load i8*, i8** %7
 %102 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %101, i32 0, i32 10
 %103 = load i8*, i8** %102
 call void %95 (i8* %100, i8* %103)
 br label %104
104:
 %105 = load i8*, i8** %7
 %106 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %105, i32 0, i32 11
 %107 = load i8*, i8** %106
 %108 = icmp ne i8* %107, null
 br i1 %108, label %109, label %123
109:
 %110 = load i8*, i8** %7
 %111 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %110, i32 0, i32 0
 %112 = load i8*, i8** %111
 %113 = getelementptr %struct.mz_zip_archive, i8* %112, i32 0, i32 8
 %114 = load i8*, i8** %113
 %115 = load i8*, i8** %7
 %116 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %115, i32 0, i32 0
 %117 = load i8*, i8** %116
 %118 = getelementptr %struct.mz_zip_archive, i8* %117, i32 0, i32 10
 %119 = load i8*, i8** %118
 %120 = load i8*, i8** %7
 %121 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %120, i32 0, i32 11
 %122 = load i8*, i8** %121
 call void %114 (i8* %119, i8* %122)
 br label %123
123:
 %124 = load i8*, i8** %7
 %125 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %124, i32 0, i32 2
 %126 = load i32, i32* %125
 store i32 %126, i32* %8
 %127 = load i8*, i8** %7
 %128 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %127, i32 0, i32 0
 %129 = load i8*, i8** %128
 %130 = getelementptr %struct.mz_zip_archive, i8* %129, i32 0, i32 8
 %131 = load i8*, i8** %130
 %132 = load i8*, i8** %7
 %133 = getelementptr %struct.mz_zip_reader_extract_iter_state, i8* %132, i32 0, i32 0
 %134 = load i8*, i8** %133
 %135 = getelementptr %struct.mz_zip_archive, i8* %134, i32 0, i32 10
 %136 = load i8*, i8** %135
 %137 = load i8*, i8** %7
 call void %131 (i8* %136, i8* %137)
 %138 = load i32, i32* %8
 %139 = icmp eq i32 %138, 0
 %140 = zext i1 %139 to i32
 store i32 %140, i32* %6
 br label %141
141:
 %142 = load i32, i32* %6
 ret i32 %142
}

define i32 @mz_zip_reader_extract_to_file (i8* %0, i32 %1, i8* %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i32
 %9 = alloca i8*
 %10 = alloca i32
 %11 = alloca i32
 %12 = alloca i8*
 %13 = alloca i32
 %14 = alloca i8*
 %15 = alloca i32
 %16 = alloca i32
 %17 = alloca %struct.mz_zip_archive_file_stat
 %18 = alloca i8*
 store i8* %0, i8** %12
 store i32 %1, i32* %13
 store i8* %2, i8** %14
 store i32 %3, i32* %15
 %19 = load i8*, i8** %12
 %20 = load i32, i32* %13
 %21 = call i32 @mz_zip_reader_file_stat (i8* %19, i32 %20, i8* %17)
 %22 = icmp ne i32 %21, 0
 br i1 %22, label %24, label %23
23:
 store i32 0, i32* %11
 br label %89
24:
 %25 = getelementptr %struct.mz_zip_archive_file_stat, i8* %17, i32 0, i32 13
 %26 = load i32, i32* %25
 %27 = icmp ne i32 %26, 0
 br i1 %27, label %32, label %28
28:
 %29 = getelementptr %struct.mz_zip_archive_file_stat, i8* %17, i32 0, i32 15
 %30 = load i32, i32* %29
 %31 = icmp ne i32 %30, 0
 br i1 %31, label %41, label %32
32:
 %33 = load i8*, i8** %12
 store i8* %33, i8** %5
 store i32 6, i32* %6
 %34 = load i8*, i8** %5
 %35 = icmp ne i8* %34, null
 br i1 %35, label %36, label %40
36:
 %37 = load i32, i32* %6
 %38 = load i8*, i8** %5
 %39 = getelementptr %struct.mz_zip_archive, i8* %38, i32 0, i32 5
 store i32 %37, i32* %39
 br label %40
40:
 store i32 0, i32* %11
 br label %89
41:
 %42 = load i8*, i8** %14
 %43 = call i8* @fopen (i8* %42, i8* @.str.19)
 store i8* %43, i8** %18
 %44 = load i8*, i8** %18
 %45 = icmp ne i8* %44, null
 br i1 %45, label %55, label %46
46:
 %47 = load i8*, i8** %12
 store i8* %47, i8** %7
 store i32 17, i32* %8
 %48 = load i8*, i8** %7
 %49 = icmp ne i8* %48, null
 br i1 %49, label %50, label %54
50:
 %51 = load i32, i32* %8
 %52 = load i8*, i8** %7
 %53 = getelementptr %struct.mz_zip_archive, i8* %52, i32 0, i32 5
 store i32 %51, i32* %53
 br label %54
54:
 store i32 0, i32* %11
 br label %89
55:
 %56 = load i8*, i8** %12
 %57 = load i32, i32* %13
 %58 = load i8*, i8** %18
 %59 = load i32, i32* %15
 %60 = call i32 @mz_zip_reader_extract_to_callback (i8* %56, i32 %57, i8* @mz_zip_file_write_callback, i8* %58, i32 %59)
 store i32 %60, i32* %16
 %61 = load i8*, i8** %18
 %62 = call i32 @fclose (i8* %61)
 %63 = icmp eq i32 %62, -1
 br i1 %63, label %64, label %77
64:
 %65 = load i32, i32* %16
 %66 = icmp ne i32 %65, 0
 br i1 %66, label %67, label %76
67:
 %68 = load i8*, i8** %12
 store i8* %68, i8** %9
 store i32 21, i32* %10
 %69 = load i8*, i8** %9
 %70 = icmp ne i8* %69, null
 br i1 %70, label %71, label %75
71:
 %72 = load i32, i32* %10
 %73 = load i8*, i8** %9
 %74 = getelementptr %struct.mz_zip_archive, i8* %73, i32 0, i32 5
 store i32 %72, i32* %74
 br label %75
75:
 br label %76
76:
 store i32 0, i32* %16
 br label %77
77:
 %78 = load i32, i32* %16
 %79 = icmp ne i32 %78, 0
 br i1 %79, label %80, label %87
80:
 %81 = load i8*, i8** %14
 %82 = getelementptr %struct.mz_zip_archive_file_stat, i8* %17, i32 0, i32 18
 %83 = load i64, i64* %82
 %84 = getelementptr %struct.mz_zip_archive_file_stat, i8* %17, i32 0, i32 18
 %85 = load i64, i64* %84
 %86 = call i32 @mz_zip_set_file_times (i8* %81, i64 %83, i64 %85)
 br label %87
87:
 %88 = load i32, i32* %16
 store i32 %88, i32* %11
 br label %89
89:
 %90 = load i32, i32* %11
 ret i32 %90
}

define i64 @mz_zip_file_write_callback (i8* %0, i64 %1, i8* %2, i64 %3) {
 %5 = alloca i8*
 %6 = alloca i64
 %7 = alloca i8*
 %8 = alloca i64
 store i8* %0, i8** %5
 store i64 %1, i64* %6
 store i8* %2, i8** %7
 store i64 %3, i64* %8
 %9 = load i64, i64* %6
 %10 = load i8*, i8** %7
 %11 = load i64, i64* %8
 %12 = load i8*, i8** %5
 %13 = call i64 @fwrite (i8* %10, i64 1, i64 %11, i8* %12)
 ret i64 %13
}

define i32 @mz_zip_set_file_times (i8* %0, i64 %1, i64 %2) {
 %4 = alloca i8*
 %5 = alloca i64
 %6 = alloca i64
 %7 = alloca %struct.utimbuf
 store i8* %0, i8** %4
 store i64 %1, i64* %5
 store i64 %2, i64* %6
 call void @memset (i8* %7, i8 0, i64 16, i1 0)
 %8 = load i64, i64* %5
 %9 = getelementptr %struct.utimbuf, i8* %7, i32 0, i32 0
 store i64 %8, i64* %9
 %10 = load i64, i64* %6
 %11 = getelementptr %struct.utimbuf, i8* %7, i32 0, i32 1
 store i64 %10, i64* %11
 %12 = load i8*, i8** %4
 %13 = call i32 @utime (i8* %12, i8* %7)
 %14 = icmp ne i32 %13, 0
 %15 = xor i1 %14, 1
 %16 = zext i1 %15 to i32
 ret i32 %16
}

define i32 @mz_zip_reader_extract_file_to_file (i8* %0, i8* %1, i8* %2, i32 %3) {
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i32
 store i8* %0, i8** %6
 store i8* %1, i8** %7
 store i8* %2, i8** %8
 store i32 %3, i32* %9
 %11 = load i8*, i8** %6
 %12 = load i8*, i8** %7
 %13 = load i32, i32* %9
 %14 = call i32 @mz_zip_reader_locate_file_v2 (i8* %11, i8* %12, i8* null, i32 %13, i8* %10)
 %15 = icmp ne i32 %14, 0
 br i1 %15, label %17, label %16
16:
 store i32 0, i32* %5
 br label %23
17:
 %18 = load i8*, i8** %6
 %19 = load i32, i32* %10
 %20 = load i8*, i8** %8
 %21 = load i32, i32* %9
 %22 = call i32 @mz_zip_reader_extract_to_file (i8* %18, i32 %19, i8* %20, i32 %21)
 store i32 %22, i32* %5
 br label %23
23:
 %24 = load i32, i32* %5
 ret i32 %24
}

define i32 @mz_zip_reader_extract_to_cfile (i8* %0, i32 %1, i8* %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca %struct.mz_zip_archive_file_stat
 store i8* %0, i8** %8
 store i32 %1, i32* %9
 store i8* %2, i8** %10
 store i32 %3, i32* %11
 %13 = load i8*, i8** %8
 %14 = load i32, i32* %9
 %15 = call i32 @mz_zip_reader_file_stat (i8* %13, i32 %14, i8* %12)
 %16 = icmp ne i32 %15, 0
 br i1 %16, label %18, label %17
17:
 store i32 0, i32* %7
 br label %41
18:
 %19 = getelementptr %struct.mz_zip_archive_file_stat, i8* %12, i32 0, i32 13
 %20 = load i32, i32* %19
 %21 = icmp ne i32 %20, 0
 br i1 %21, label %26, label %22
22:
 %23 = getelementptr %struct.mz_zip_archive_file_stat, i8* %12, i32 0, i32 15
 %24 = load i32, i32* %23
 %25 = icmp ne i32 %24, 0
 br i1 %25, label %35, label %26
26:
 %27 = load i8*, i8** %8
 store i8* %27, i8** %5
 store i32 6, i32* %6
 %28 = load i8*, i8** %5
 %29 = icmp ne i8* %28, null
 br i1 %29, label %30, label %34
30:
 %31 = load i32, i32* %6
 %32 = load i8*, i8** %5
 %33 = getelementptr %struct.mz_zip_archive, i8* %32, i32 0, i32 5
 store i32 %31, i32* %33
 br label %34
34:
 store i32 0, i32* %7
 br label %41
35:
 %36 = load i8*, i8** %8
 %37 = load i32, i32* %9
 %38 = load i8*, i8** %10
 %39 = load i32, i32* %11
 %40 = call i32 @mz_zip_reader_extract_to_callback (i8* %36, i32 %37, i8* @mz_zip_file_write_callback, i8* %38, i32 %39)
 store i32 %40, i32* %7
 br label %41
41:
 %42 = load i32, i32* %7
 ret i32 %42
}

define i32 @mz_zip_reader_extract_file_to_cfile (i8* %0, i8* %1, i8* %2, i32 %3) {
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i32
 store i8* %0, i8** %6
 store i8* %1, i8** %7
 store i8* %2, i8** %8
 store i32 %3, i32* %9
 %11 = load i8*, i8** %6
 %12 = load i8*, i8** %7
 %13 = load i32, i32* %9
 %14 = call i32 @mz_zip_reader_locate_file_v2 (i8* %11, i8* %12, i8* null, i32 %13, i8* %10)
 %15 = icmp ne i32 %14, 0
 br i1 %15, label %17, label %16
16:
 store i32 0, i32* %5
 br label %23
17:
 %18 = load i8*, i8** %6
 %19 = load i32, i32* %10
 %20 = load i8*, i8** %8
 %21 = load i32, i32* %9
 %22 = call i32 @mz_zip_reader_extract_to_cfile (i8* %18, i32 %19, i8* %20, i32 %21)
 store i32 %22, i32* %5
 br label %23
23:
 %24 = load i32, i32* %5
 ret i32 %24
}

define i32 @mz_zip_validate_file (i8* %0, i32 %1, i32 %2) {
 %4 = alloca i8*
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i32
 %9 = alloca i8*
 %10 = alloca i8*
 %11 = alloca i64
 %12 = alloca i32
 %13 = alloca i8*
 %14 = alloca i32
 %15 = alloca i8*
 %16 = alloca i8*
 %17 = alloca i32
 %18 = alloca i8*
 %19 = alloca i32
 %20 = alloca i8*
 %21 = alloca i32
 %22 = alloca i8*
 %23 = alloca i32
 %24 = alloca i8*
 %25 = alloca i32
 %26 = alloca i8*
 %27 = alloca i32
 %28 = alloca i8*
 %29 = alloca i32
 %30 = alloca i8*
 %31 = alloca i32
 %32 = alloca i8*
 %33 = alloca i32
 %34 = alloca i8*
 %35 = alloca i32
 %36 = alloca i8*
 %37 = alloca i32
 %38 = alloca i8*
 %39 = alloca i32
 %40 = alloca i8*
 %41 = alloca i32
 %42 = alloca i8*
 %43 = alloca i32
 %44 = alloca i8*
 %45 = alloca i32
 %46 = alloca i8*
 %47 = alloca i32
 %48 = alloca i8*
 %49 = alloca i32
 %50 = alloca i8*
 %51 = alloca i32
 %52 = alloca i8*
 %53 = alloca i32
 %54 = alloca i8*
 %55 = alloca i32
 %56 = alloca i8*
 %57 = alloca i32
 %58 = alloca i32
 %59 = alloca i8*
 %60 = alloca i32
 %61 = alloca i32
 %62 = alloca %struct.mz_zip_archive_file_stat
 %63 = alloca i8*
 %64 = alloca i8*
 %65 = alloca i32
 %66 = alloca i32
 %67 = alloca [8 x i32]
 %68 = alloca i8*
 %69 = alloca i64
 %70 = alloca i32
 %71 = alloca i32
 %72 = alloca i32
 %73 = alloca i64
 %74 = alloca i64
 %75 = alloca i32
 %76 = alloca i32
 %77 = alloca i32
 %78 = alloca %struct.mz_zip_array
 %79 = alloca i32
 %80 = alloca i8*
 %81 = alloca i32
 %82 = alloca i32
 %83 = alloca i32
 %84 = alloca i8*
 %85 = alloca [32 x i8]
 %86 = alloca i32
 %87 = alloca i8*
 %88 = alloca i32
 %89 = alloca i64
 %90 = alloca i64
 %91 = alloca i32
 store i8* %0, i8** %59
 store i32 %1, i32* %60
 store i32 %2, i32* %61
 store i32 0, i32* %65
 store i32 0, i32* %66
 %92 = getelementptr [8 x i32], i8* %67, i64 0, i64 0
 store i8* %92, i8** %68
 store i64 0, i64* %69
 store i32 0, i32* %75
 store i8* %78, i8** %13
 store i32 1, i32* %14
 %93 = load i8*, i8** %13
 %94 = load i8*, i8** %13
 %95 = call i64 @llvm.objectsize.i64.p0 (i8* %94, i1 0, i1 1, i1 0)
 %96 = call i8* @__memset_chk (i8* %93, i32 0, i64 32, i64 %95)
 %97 = load i32, i32* %14
 %98 = load i8*, i8** %13
 %99 = getelementptr %struct.mz_zip_array, i8* %98, i32 0, i32 3
 store i32 %97, i32* %99
 %100 = load i8*, i8** %59
 %101 = icmp ne i8* %100, null
 br i1 %101, label %102, label %122
102:
 %103 = load i8*, i8** %59
 %104 = getelementptr %struct.mz_zip_archive, i8* %103, i32 0, i32 15
 %105 = load i8*, i8** %104
 %106 = icmp ne i8* %105, null
 br i1 %106, label %107, label %122
107:
 %108 = load i8*, i8** %59
 %109 = getelementptr %struct.mz_zip_archive, i8* %108, i32 0, i32 7
 %110 = load i8*, i8** %109
 %111 = icmp ne i8* %110, null
 br i1 %111, label %112, label %122
112:
 %113 = load i8*, i8** %59
 %114 = getelementptr %struct.mz_zip_archive, i8* %113, i32 0, i32 8
 %115 = load i8*, i8** %114
 %116 = icmp ne i8* %115, null
 br i1 %116, label %117, label %122
117:
 %118 = load i8*, i8** %59
 %119 = getelementptr %struct.mz_zip_archive, i8* %118, i32 0, i32 11
 %120 = load i8*, i8** %119
 %121 = icmp ne i8* %120, null
 br i1 %121, label %131, label %122
122:
 %123 = load i8*, i8** %59
 store i8* %123, i8** %18
 store i32 24, i32* %19
 %124 = load i8*, i8** %18
 %125 = icmp ne i8* %124, null
 br i1 %125, label %126, label %130
126:
 %127 = load i32, i32* %19
 %128 = load i8*, i8** %18
 %129 = getelementptr %struct.mz_zip_archive, i8* %128, i32 0, i32 5
 store i32 %127, i32* %129
 br label %130
130:
 store i32 0, i32* %58
 br label %1197
131:
 %132 = load i32, i32* %60
 %133 = load i8*, i8** %59
 %134 = getelementptr %struct.mz_zip_archive, i8* %133, i32 0, i32 2
 %135 = load i32, i32* %134
 %136 = icmp ugt i32 %132, %135
 br i1 %136, label %137, label %146
137:
 %138 = load i8*, i8** %59
 store i8* %138, i8** %20
 store i32 24, i32* %21
 %139 = load i8*, i8** %20
 %140 = icmp ne i8* %139, null
 br i1 %140, label %141, label %145
141:
 %142 = load i32, i32* %21
 %143 = load i8*, i8** %20
 %144 = getelementptr %struct.mz_zip_archive, i8* %143, i32 0, i32 5
 store i32 %142, i32* %144
 br label %145
145:
 store i32 0, i32* %58
 br label %1197
146:
 %147 = load i8*, i8** %59
 %148 = getelementptr %struct.mz_zip_archive, i8* %147, i32 0, i32 15
 %149 = load i8*, i8** %148
 store i8* %149, i8** %63
 %150 = load i8*, i8** %59
 %151 = load i32, i32* %60
 store i8* %150, i8** %16
 store i32 %151, i32* %17
 %152 = load i8*, i8** %16
 %153 = icmp ne i8* %152, null
 br i1 %153, label %154, label %165
154:
 %155 = load i8*, i8** %16
 %156 = getelementptr %struct.mz_zip_archive, i8* %155, i32 0, i32 15
 %157 = load i8*, i8** %156
 %158 = icmp ne i8* %157, null
 br i1 %158, label %159, label %165
159:
 %160 = load i32, i32* %17
 %161 = load i8*, i8** %16
 %162 = getelementptr %struct.mz_zip_archive, i8* %161, i32 0, i32 2
 %163 = load i32, i32* %162
 %164 = icmp uge i32 %160, %163
 br i1 %164, label %165, label %166
165:
 store i8* null, i8** %15
 br label %182
166:
 %167 = load i8*, i8** %16
 %168 = getelementptr %struct.mz_zip_archive, i8* %167, i32 0, i32 15
 %169 = load i8*, i8** %168
 %170 = load i8*, i8** %169
 %171 = load i8*, i8** %16
 %172 = getelementptr %struct.mz_zip_archive, i8* %171, i32 0, i32 15
 %173 = load i8*, i8** %172
 %174 = getelementptr %struct.mz_zip_internal_state_tag, i8* %173, i32 0, i32 1
 %175 = load i8*, i8** %174
 %176 = load i32, i32* %17
 %177 = zext i32 %176 to i64
 %178 = getelementptr i32, i8* %175, i64 %177
 %179 = load i32, i32* %178
 %180 = zext i32 %179 to i64
 %181 = getelementptr i8, i8* %170, i64 %180
 store i8* %181, i8** %15
 br label %182
182:
 %183 = load i8*, i8** %15
 store i8* %183, i8** %64
 %184 = load i8*, i8** %59
 %185 = load i32, i32* %60
 %186 = load i8*, i8** %64
 %187 = call i32 @mz_zip_file_stat_internal (i8* %184, i32 %185, i8* %186, i8* %62, i8* %65)
 %188 = icmp ne i32 %187, 0
 br i1 %188, label %190, label %189
189:
 store i32 0, i32* %58
 br label %1197
190:
 %191 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 13
 %192 = load i32, i32* %191
 %193 = icmp ne i32 %192, 0
 br i1 %193, label %198, label %194
194:
 %195 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 8
 %196 = load i64, i64* %195
 %197 = icmp ne i64 %196, 0
 br i1 %197, label %199, label %198
198:
 store i32 1, i32* %58
 br label %1197
199:
 %200 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 14
 %201 = load i32, i32* %200
 %202 = icmp ne i32 %201, 0
 br i1 %202, label %203, label %212
203:
 %204 = load i8*, i8** %59
 store i8* %204, i8** %22
 store i32 5, i32* %23
 %205 = load i8*, i8** %22
 %206 = icmp ne i8* %205, null
 br i1 %206, label %207, label %211
207:
 %208 = load i32, i32* %23
 %209 = load i8*, i8** %22
 %210 = getelementptr %struct.mz_zip_archive, i8* %209, i32 0, i32 5
 store i32 %208, i32* %210
 br label %211
211:
 store i32 0, i32* %58
 br label %1197
212:
 %213 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 5
 %214 = load i16, i16* %213
 %215 = zext i16 %214 to i32
 %216 = icmp ne i32 %215, 0
 br i1 %216, label %217, label %231
217:
 %218 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 5
 %219 = load i16, i16* %218
 %220 = zext i16 %219 to i32
 %221 = icmp ne i32 %220, 8
 br i1 %221, label %222, label %231
222:
 %223 = load i8*, i8** %59
 store i8* %223, i8** %24
 store i32 4, i32* %25
 %224 = load i8*, i8** %24
 %225 = icmp ne i8* %224, null
 br i1 %225, label %226, label %230
226:
 %227 = load i32, i32* %25
 %228 = load i8*, i8** %24
 %229 = getelementptr %struct.mz_zip_archive, i8* %228, i32 0, i32 5
 store i32 %227, i32* %229
 br label %230
230:
 store i32 0, i32* %58
 br label %1197
231:
 %232 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 15
 %233 = load i32, i32* %232
 %234 = icmp ne i32 %233, 0
 br i1 %234, label %244, label %235
235:
 %236 = load i8*, i8** %59
 store i8* %236, i8** %26
 store i32 6, i32* %27
 %237 = load i8*, i8** %26
 %238 = icmp ne i8* %237, null
 br i1 %238, label %239, label %243
239:
 %240 = load i32, i32* %27
 %241 = load i8*, i8** %26
 %242 = getelementptr %struct.mz_zip_archive, i8* %241, i32 0, i32 5
 store i32 %240, i32* %242
 br label %243
243:
 store i32 0, i32* %58
 br label %1197
244:
 %245 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 11
 %246 = load i64, i64* %245
 store i64 %246, i64* %69
 %247 = load i8*, i8** %59
 %248 = getelementptr %struct.mz_zip_archive, i8* %247, i32 0, i32 11
 %249 = load i8*, i8** %248
 %250 = load i8*, i8** %59
 %251 = getelementptr %struct.mz_zip_archive, i8* %250, i32 0, i32 14
 %252 = load i8*, i8** %251
 %253 = load i64, i64* %69
 %254 = load i8*, i8** %68
 %255 = call i64 %249 (i8* %252, i64 %253, i8* %254, i64 30)
 %256 = icmp ne i64 %255, 30
 br i1 %256, label %257, label %266
257:
 %258 = load i8*, i8** %59
 store i8* %258, i8** %28
 store i32 20, i32* %29
 %259 = load i8*, i8** %28
 %260 = icmp ne i8* %259, null
 br i1 %260, label %261, label %265
261:
 %262 = load i32, i32* %29
 %263 = load i8*, i8** %28
 %264 = getelementptr %struct.mz_zip_archive, i8* %263, i32 0, i32 5
 store i32 %262, i32* %264
 br label %265
265:
 store i32 0, i32* %58
 br label %1197
266:
 %267 = load i8*, i8** %68
 %268 = getelementptr i8, i8* %267, i64 0
 %269 = load i8, i8* %268
 %270 = zext i8 %269 to i32
 %271 = load i8*, i8** %68
 %272 = getelementptr i8, i8* %271, i64 1
 %273 = load i8, i8* %272
 %274 = zext i8 %273 to i32
 %275 = shl i32 %274, 8
 %276 = or i32 %270, %275
 %277 = load i8*, i8** %68
 %278 = getelementptr i8, i8* %277, i64 2
 %279 = load i8, i8* %278
 %280 = zext i8 %279 to i32
 %281 = shl i32 %280, 16
 %282 = or i32 %276, %281
 %283 = load i8*, i8** %68
 %284 = getelementptr i8, i8* %283, i64 3
 %285 = load i8, i8* %284
 %286 = zext i8 %285 to i32
 %287 = shl i32 %286, 24
 %288 = or i32 %282, %287
 %289 = icmp ne i32 %288, 67324752
 br i1 %289, label %290, label %299
290:
 %291 = load i8*, i8** %59
 store i8* %291, i8** %30
 store i32 9, i32* %31
 %292 = load i8*, i8** %30
 %293 = icmp ne i8* %292, null
 br i1 %293, label %294, label %298
294:
 %295 = load i32, i32* %31
 %296 = load i8*, i8** %30
 %297 = getelementptr %struct.mz_zip_archive, i8* %296, i32 0, i32 5
 store i32 %295, i32* %297
 br label %298
298:
 store i32 0, i32* %58
 br label %1197
299:
 %300 = load i8*, i8** %68
 %301 = getelementptr i8, i8* %300, i64 26
 %302 = getelementptr i8, i8* %301, i64 0
 %303 = load i8, i8* %302
 %304 = zext i8 %303 to i32
 %305 = load i8*, i8** %68
 %306 = getelementptr i8, i8* %305, i64 26
 %307 = getelementptr i8, i8* %306, i64 1
 %308 = load i8, i8* %307
 %309 = zext i8 %308 to i32
 %310 = shl i32 %309, 8
 %311 = or i32 %304, %310
 store i32 %311, i32* %70
 %312 = load i8*, i8** %68
 %313 = getelementptr i8, i8* %312, i64 28
 %314 = getelementptr i8, i8* %313, i64 0
 %315 = load i8, i8* %314
 %316 = zext i8 %315 to i32
 %317 = load i8*, i8** %68
 %318 = getelementptr i8, i8* %317, i64 28
 %319 = getelementptr i8, i8* %318, i64 1
 %320 = load i8, i8* %319
 %321 = zext i8 %320 to i32
 %322 = shl i32 %321, 8
 %323 = or i32 %316, %322
 store i32 %323, i32* %71
 %324 = load i8*, i8** %68
 %325 = getelementptr i8, i8* %324, i64 18
 %326 = getelementptr i8, i8* %325, i64 0
 %327 = load i8, i8* %326
 %328 = zext i8 %327 to i32
 %329 = load i8*, i8** %68
 %330 = getelementptr i8, i8* %329, i64 18
 %331 = getelementptr i8, i8* %330, i64 1
 %332 = load i8, i8* %331
 %333 = zext i8 %332 to i32
 %334 = shl i32 %333, 8
 %335 = or i32 %328, %334
 %336 = load i8*, i8** %68
 %337 = getelementptr i8, i8* %336, i64 18
 %338 = getelementptr i8, i8* %337, i64 2
 %339 = load i8, i8* %338
 %340 = zext i8 %339 to i32
 %341 = shl i32 %340, 16
 %342 = or i32 %335, %341
 %343 = load i8*, i8** %68
 %344 = getelementptr i8, i8* %343, i64 18
 %345 = getelementptr i8, i8* %344, i64 3
 %346 = load i8, i8* %345
 %347 = zext i8 %346 to i32
 %348 = shl i32 %347, 24
 %349 = or i32 %342, %348
 %350 = zext i32 %349 to i64
 store i64 %350, i64* %73
 %351 = load i8*, i8** %68
 %352 = getelementptr i8, i8* %351, i64 22
 %353 = getelementptr i8, i8* %352, i64 0
 %354 = load i8, i8* %353
 %355 = zext i8 %354 to i32
 %356 = load i8*, i8** %68
 %357 = getelementptr i8, i8* %356, i64 22
 %358 = getelementptr i8, i8* %357, i64 1
 %359 = load i8, i8* %358
 %360 = zext i8 %359 to i32
 %361 = shl i32 %360, 8
 %362 = or i32 %355, %361
 %363 = load i8*, i8** %68
 %364 = getelementptr i8, i8* %363, i64 22
 %365 = getelementptr i8, i8* %364, i64 2
 %366 = load i8, i8* %365
 %367 = zext i8 %366 to i32
 %368 = shl i32 %367, 16
 %369 = or i32 %362, %368
 %370 = load i8*, i8** %68
 %371 = getelementptr i8, i8* %370, i64 22
 %372 = getelementptr i8, i8* %371, i64 3
 %373 = load i8, i8* %372
 %374 = zext i8 %373 to i32
 %375 = shl i32 %374, 24
 %376 = or i32 %369, %375
 %377 = zext i32 %376 to i64
 store i64 %377, i64* %74
 %378 = load i8*, i8** %68
 %379 = getelementptr i8, i8* %378, i64 14
 %380 = getelementptr i8, i8* %379, i64 0
 %381 = load i8, i8* %380
 %382 = zext i8 %381 to i32
 %383 = load i8*, i8** %68
 %384 = getelementptr i8, i8* %383, i64 14
 %385 = getelementptr i8, i8* %384, i64 1
 %386 = load i8, i8* %385
 %387 = zext i8 %386 to i32
 %388 = shl i32 %387, 8
 %389 = or i32 %382, %388
 %390 = load i8*, i8** %68
 %391 = getelementptr i8, i8* %390, i64 14
 %392 = getelementptr i8, i8* %391, i64 2
 %393 = load i8, i8* %392
 %394 = zext i8 %393 to i32
 %395 = shl i32 %394, 16
 %396 = or i32 %389, %395
 %397 = load i8*, i8** %68
 %398 = getelementptr i8, i8* %397, i64 14
 %399 = getelementptr i8, i8* %398, i64 3
 %400 = load i8, i8* %399
 %401 = zext i8 %400 to i32
 %402 = shl i32 %401, 24
 %403 = or i32 %396, %402
 store i32 %403, i32* %72
 %404 = load i8*, i8** %68
 %405 = getelementptr i8, i8* %404, i64 6
 %406 = getelementptr i8, i8* %405, i64 0
 %407 = load i8, i8* %406
 %408 = zext i8 %407 to i32
 %409 = load i8*, i8** %68
 %410 = getelementptr i8, i8* %409, i64 6
 %411 = getelementptr i8, i8* %410, i64 1
 %412 = load i8, i8* %411
 %413 = zext i8 %412 to i32
 %414 = shl i32 %413, 8
 %415 = or i32 %408, %414
 store i32 %415, i32* %77
 %416 = load i32, i32* %77
 %417 = and i32 %416, 8
 %418 = icmp ne i32 %417, 0
 %419 = zext i1 %418 to i32
 store i32 %419, i32* %76
 %420 = load i32, i32* %70
 %421 = zext i32 %420 to i64
 %422 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 16
 %423 = getelementptr [512 x i8], i8* %422, i64 0, i64 0
 %424 = call i64 @strlen (i8* %423)
 %425 = icmp ne i64 %421, %424
 br i1 %425, label %426, label %435
426:
 %427 = load i8*, i8** %59
 store i8* %427, i8** %32
 store i32 9, i32* %33
 %428 = load i8*, i8** %32
 %429 = icmp ne i8* %428, null
 br i1 %429, label %430, label %434
430:
 %431 = load i32, i32* %33
 %432 = load i8*, i8** %32
 %433 = getelementptr %struct.mz_zip_archive, i8* %432, i32 0, i32 5
 store i32 %431, i32* %433
 br label %434
434:
 store i32 0, i32* %58
 br label %1197
435:
 %436 = load i64, i64* %69
 %437 = add i64 %436, 30
 %438 = load i32, i32* %70
 %439 = zext i32 %438 to i64
 %440 = add i64 %437, %439
 %441 = load i32, i32* %71
 %442 = zext i32 %441 to i64
 %443 = add i64 %440, %442
 %444 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 7
 %445 = load i64, i64* %444
 %446 = add i64 %443, %445
 %447 = load i8*, i8** %59
 %448 = getelementptr %struct.mz_zip_archive, i8* %447, i32 0, i32 0
 %449 = load i64, i64* %448
 %450 = icmp ugt i64 %446, %449
 br i1 %450, label %451, label %460
451:
 %452 = load i8*, i8** %59
 store i8* %452, i8** %34
 store i32 9, i32* %35
 %453 = load i8*, i8** %34
 %454 = icmp ne i8* %453, null
 br i1 %454, label %455, label %459
455:
 %456 = load i32, i32* %35
 %457 = load i8*, i8** %34
 %458 = getelementptr %struct.mz_zip_archive, i8* %457, i32 0, i32 5
 store i32 %456, i32* %458
 br label %459
459:
 store i32 0, i32* %58
 br label %1197
460:
 %461 = load i8*, i8** %59
 %462 = load i32, i32* %70
 %463 = load i32, i32* %71
 %464 = icmp ugt i32 %462, %463
 br i1 %464, label %465, label %467
465:
 %466 = load i32, i32* %70
 br label %469
467:
 %468 = load i32, i32* %71
 br label %469
469:
 %470 = phi i32 [%466, %465], [%468, %467]
 %471 = zext i32 %470 to i64
 store i8* %461, i8** %9
 store i8* %78, i8** %10
 store i64 %471, i64* %11
 store i32 0, i32* %12
 %472 = load i64, i64* %11
 %473 = load i8*, i8** %10
 %474 = getelementptr %struct.mz_zip_array, i8* %473, i32 0, i32 2
 %475 = load i64, i64* %474
 %476 = icmp ugt i64 %472, %475
 br i1 %476, label %477, label %486
477:
 %478 = load i8*, i8** %9
 %479 = load i8*, i8** %10
 %480 = load i64, i64* %11
 %481 = load i32, i32* %12
 %482 = call i32 @mz_zip_array_ensure_capacity (i8* %478, i8* %479, i64 %480, i32 %481)
 %483 = icmp ne i32 %482, 0
 br i1 %483, label %485, label %484
484:
 store i32 0, i32* %8
 br label %490
485:
 br label %486
486:
 %487 = load i64, i64* %11
 %488 = load i8*, i8** %10
 %489 = getelementptr %struct.mz_zip_array, i8* %488, i32 0, i32 1
 store i64 %487, i64* %489
 store i32 1, i32* %8
 br label %490
490:
 %491 = load i32, i32* %8
 %492 = icmp ne i32 %491, 0
 br i1 %492, label %502, label %493
493:
 %494 = load i8*, i8** %59
 store i8* %494, i8** %36
 store i32 16, i32* %37
 %495 = load i8*, i8** %36
 %496 = icmp ne i8* %495, null
 br i1 %496, label %497, label %501
497:
 %498 = load i32, i32* %37
 %499 = load i8*, i8** %36
 %500 = getelementptr %struct.mz_zip_archive, i8* %499, i32 0, i32 5
 store i32 %498, i32* %500
 br label %501
501:
 br label %1183
502:
 %503 = load i32, i32* %70
 %504 = icmp ne i32 %503, 0
 br i1 %504, label %505, label %550
505:
 %506 = load i8*, i8** %59
 %507 = getelementptr %struct.mz_zip_archive, i8* %506, i32 0, i32 11
 %508 = load i8*, i8** %507
 %509 = load i8*, i8** %59
 %510 = getelementptr %struct.mz_zip_archive, i8* %509, i32 0, i32 14
 %511 = load i8*, i8** %510
 %512 = load i64, i64* %69
 %513 = add i64 %512, 30
 %514 = getelementptr %struct.mz_zip_array, i8* %78, i32 0, i32 0
 %515 = load i8*, i8** %514
 %516 = load i32, i32* %70
 %517 = zext i32 %516 to i64
 %518 = call i64 %508 (i8* %511, i64 %513, i8* %515, i64 %517)
 %519 = load i32, i32* %70
 %520 = zext i32 %519 to i64
 %521 = icmp ne i64 %518, %520
 br i1 %521, label %522, label %531
522:
 %523 = load i8*, i8** %59
 store i8* %523, i8** %38
 store i32 20, i32* %39
 %524 = load i8*, i8** %38
 %525 = icmp ne i8* %524, null
 br i1 %525, label %526, label %530
526:
 %527 = load i32, i32* %39
 %528 = load i8*, i8** %38
 %529 = getelementptr %struct.mz_zip_archive, i8* %528, i32 0, i32 5
 store i32 %527, i32* %529
 br label %530
530:
 br label %1183
531:
 %532 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 16
 %533 = getelementptr [512 x i8], i8* %532, i64 0, i64 0
 %534 = getelementptr %struct.mz_zip_array, i8* %78, i32 0, i32 0
 %535 = load i8*, i8** %534
 %536 = load i32, i32* %70
 %537 = zext i32 %536 to i64
 %538 = call i32 @memcmp (i8* %533, i8* %535, i64 %537)
 %539 = icmp ne i32 %538, 0
 br i1 %539, label %540, label %549
540:
 %541 = load i8*, i8** %59
 store i8* %541, i8** %40
 store i32 30, i32* %41
 %542 = load i8*, i8** %40
 %543 = icmp ne i8* %542, null
 br i1 %543, label %544, label %548
544:
 %545 = load i32, i32* %41
 %546 = load i8*, i8** %40
 %547 = getelementptr %struct.mz_zip_archive, i8* %546, i32 0, i32 5
 store i32 %545, i32* %547
 br label %548
548:
 br label %1183
549:
 br label %550
550:
 %551 = load i32, i32* %71
 %552 = icmp ne i32 %551, 0
 br i1 %552, label %553, label %787
553:
 %554 = load i64, i64* %73
 %555 = icmp eq i64 %554, 4294967295
 br i1 %555, label %559, label %556
556:
 %557 = load i64, i64* %74
 %558 = icmp eq i64 %557, 4294967295
 br i1 %558, label %559, label %787
559:
 %560 = load i32, i32* %71
 store i32 %560, i32* %79
 %561 = getelementptr %struct.mz_zip_array, i8* %78, i32 0, i32 0
 %562 = load i8*, i8** %561
 store i8* %562, i8** %80
 %563 = load i8*, i8** %59
 %564 = getelementptr %struct.mz_zip_archive, i8* %563, i32 0, i32 11
 %565 = load i8*, i8** %564
 %566 = load i8*, i8** %59
 %567 = getelementptr %struct.mz_zip_archive, i8* %566, i32 0, i32 14
 %568 = load i8*, i8** %567
 %569 = load i64, i64* %69
 %570 = add i64 %569, 30
 %571 = load i32, i32* %70
 %572 = zext i32 %571 to i64
 %573 = add i64 %570, %572
 %574 = getelementptr %struct.mz_zip_array, i8* %78, i32 0, i32 0
 %575 = load i8*, i8** %574
 %576 = load i32, i32* %71
 %577 = zext i32 %576 to i64
 %578 = call i64 %565 (i8* %568, i64 %573, i8* %575, i64 %577)
 %579 = load i32, i32* %71
 %580 = zext i32 %579 to i64
 %581 = icmp ne i64 %578, %580
 br i1 %581, label %582, label %591
582:
 %583 = load i8*, i8** %59
 store i8* %583, i8** %42
 store i32 20, i32* %43
 %584 = load i8*, i8** %42
 %585 = icmp ne i8* %584, null
 br i1 %585, label %586, label %590
586:
 %587 = load i32, i32* %43
 %588 = load i8*, i8** %42
 %589 = getelementptr %struct.mz_zip_archive, i8* %588, i32 0, i32 5
 store i32 %587, i32* %589
 br label %590
590:
 br label %1183
591:
 br label %592
592:
 %593 = load i32, i32* %79
 %594 = zext i32 %593 to i64
 %595 = icmp ult i64 %594, 4
 br i1 %595, label %596, label %605
596:
 %597 = load i8*, i8** %59
 store i8* %597, i8** %44
 store i32 9, i32* %45
 %598 = load i8*, i8** %44
 %599 = icmp ne i8* %598, null
 br i1 %599, label %600, label %604
600:
 %601 = load i32, i32* %45
 %602 = load i8*, i8** %44
 %603 = getelementptr %struct.mz_zip_archive, i8* %602, i32 0, i32 5
 store i32 %601, i32* %603
 br label %604
604:
 br label %1183
605:
 %606 = load i8*, i8** %80
 %607 = getelementptr i8, i8* %606, i64 0
 %608 = load i8, i8* %607
 %609 = zext i8 %608 to i32
 %610 = load i8*, i8** %80
 %611 = getelementptr i8, i8* %610, i64 1
 %612 = load i8, i8* %611
 %613 = zext i8 %612 to i32
 %614 = shl i32 %613, 8
 %615 = or i32 %609, %614
 store i32 %615, i32* %81
 %616 = load i8*, i8** %80
 %617 = getelementptr i8, i8* %616, i64 2
 %618 = getelementptr i8, i8* %617, i64 0
 %619 = load i8, i8* %618
 %620 = zext i8 %619 to i32
 %621 = load i8*, i8** %80
 %622 = getelementptr i8, i8* %621, i64 2
 %623 = getelementptr i8, i8* %622, i64 1
 %624 = load i8, i8* %623
 %625 = zext i8 %624 to i32
 %626 = shl i32 %625, 8
 %627 = or i32 %620, %626
 store i32 %627, i32* %82
 %628 = load i32, i32* %82
 %629 = zext i32 %628 to i64
 %630 = add i64 %629, 4
 %631 = trunc i64 %630 to i32
 store i32 %631, i32* %83
 %632 = load i32, i32* %83
 %633 = load i32, i32* %79
 %634 = icmp ugt i32 %632, %633
 br i1 %634, label %635, label %644
635:
 %636 = load i8*, i8** %59
 store i8* %636, i8** %46
 store i32 9, i32* %47
 %637 = load i8*, i8** %46
 %638 = icmp ne i8* %637, null
 br i1 %638, label %639, label %643
639:
 %640 = load i32, i32* %47
 %641 = load i8*, i8** %46
 %642 = getelementptr %struct.mz_zip_archive, i8* %641, i32 0, i32 5
 store i32 %640, i32* %642
 br label %643
643:
 br label %1183
644:
 %645 = load i32, i32* %81
 %646 = icmp eq i32 %645, 1
 br i1 %646, label %647, label %775
647:
 %648 = load i8*, i8** %80
 %649 = getelementptr i8, i8* %648, i64 4
 store i8* %649, i8** %84
 %650 = load i32, i32* %82
 %651 = zext i32 %650 to i64
 %652 = icmp ult i64 %651, 16
 br i1 %652, label %653, label %662
653:
 %654 = load i8*, i8** %59
 store i8* %654, i8** %48
 store i32 9, i32* %49
 %655 = load i8*, i8** %48
 %656 = icmp ne i8* %655, null
 br i1 %656, label %657, label %661
657:
 %658 = load i32, i32* %49
 %659 = load i8*, i8** %48
 %660 = getelementptr %struct.mz_zip_archive, i8* %659, i32 0, i32 5
 store i32 %658, i32* %660
 br label %661
661:
 br label %1183
662:
 %663 = load i8*, i8** %84
 %664 = getelementptr i8, i8* %663, i64 0
 %665 = load i8, i8* %664
 %666 = zext i8 %665 to i32
 %667 = load i8*, i8** %84
 %668 = getelementptr i8, i8* %667, i64 1
 %669 = load i8, i8* %668
 %670 = zext i8 %669 to i32
 %671 = shl i32 %670, 8
 %672 = or i32 %666, %671
 %673 = load i8*, i8** %84
 %674 = getelementptr i8, i8* %673, i64 2
 %675 = load i8, i8* %674
 %676 = zext i8 %675 to i32
 %677 = shl i32 %676, 16
 %678 = or i32 %672, %677
 %679 = load i8*, i8** %84
 %680 = getelementptr i8, i8* %679, i64 3
 %681 = load i8, i8* %680
 %682 = zext i8 %681 to i32
 %683 = shl i32 %682, 24
 %684 = or i32 %678, %683
 %685 = zext i32 %684 to i64
 %686 = load i8*, i8** %84
 %687 = getelementptr i8, i8* %686, i64 4
 %688 = getelementptr i8, i8* %687, i64 0
 %689 = load i8, i8* %688
 %690 = zext i8 %689 to i32
 %691 = load i8*, i8** %84
 %692 = getelementptr i8, i8* %691, i64 4
 %693 = getelementptr i8, i8* %692, i64 1
 %694 = load i8, i8* %693
 %695 = zext i8 %694 to i32
 %696 = shl i32 %695, 8
 %697 = or i32 %690, %696
 %698 = load i8*, i8** %84
 %699 = getelementptr i8, i8* %698, i64 4
 %700 = getelementptr i8, i8* %699, i64 2
 %701 = load i8, i8* %700
 %702 = zext i8 %701 to i32
 %703 = shl i32 %702, 16
 %704 = or i32 %697, %703
 %705 = load i8*, i8** %84
 %706 = getelementptr i8, i8* %705, i64 4
 %707 = getelementptr i8, i8* %706, i64 3
 %708 = load i8, i8* %707
 %709 = zext i8 %708 to i32
 %710 = shl i32 %709, 24
 %711 = or i32 %704, %710
 %712 = zext i32 %711 to i64
 %713 = shl i64 %712, 32
 %714 = or i64 %685, %713
 store i64 %714, i64* %74
 %715 = load i8*, i8** %84
 %716 = getelementptr i8, i8* %715, i64 8
 %717 = getelementptr i8, i8* %716, i64 0
 %718 = load i8, i8* %717
 %719 = zext i8 %718 to i32
 %720 = load i8*, i8** %84
 %721 = getelementptr i8, i8* %720, i64 8
 %722 = getelementptr i8, i8* %721, i64 1
 %723 = load i8, i8* %722
 %724 = zext i8 %723 to i32
 %725 = shl i32 %724, 8
 %726 = or i32 %719, %725
 %727 = load i8*, i8** %84
 %728 = getelementptr i8, i8* %727, i64 8
 %729 = getelementptr i8, i8* %728, i64 2
 %730 = load i8, i8* %729
 %731 = zext i8 %730 to i32
 %732 = shl i32 %731, 16
 %733 = or i32 %726, %732
 %734 = load i8*, i8** %84
 %735 = getelementptr i8, i8* %734, i64 8
 %736 = getelementptr i8, i8* %735, i64 3
 %737 = load i8, i8* %736
 %738 = zext i8 %737 to i32
 %739 = shl i32 %738, 24
 %740 = or i32 %733, %739
 %741 = zext i32 %740 to i64
 %742 = load i8*, i8** %84
 %743 = getelementptr i8, i8* %742, i64 8
 %744 = getelementptr i8, i8* %743, i64 4
 %745 = getelementptr i8, i8* %744, i64 0
 %746 = load i8, i8* %745
 %747 = zext i8 %746 to i32
 %748 = load i8*, i8** %84
 %749 = getelementptr i8, i8* %748, i64 8
 %750 = getelementptr i8, i8* %749, i64 4
 %751 = getelementptr i8, i8* %750, i64 1
 %752 = load i8, i8* %751
 %753 = zext i8 %752 to i32
 %754 = shl i32 %753, 8
 %755 = or i32 %747, %754
 %756 = load i8*, i8** %84
 %757 = getelementptr i8, i8* %756, i64 8
 %758 = getelementptr i8, i8* %757, i64 4
 %759 = getelementptr i8, i8* %758, i64 2
 %760 = load i8, i8* %759
 %761 = zext i8 %760 to i32
 %762 = shl i32 %761, 16
 %763 = or i32 %755, %762
 %764 = load i8*, i8** %84
 %765 = getelementptr i8, i8* %764, i64 8
 %766 = getelementptr i8, i8* %765, i64 4
 %767 = getelementptr i8, i8* %766, i64 3
 %768 = load i8, i8* %767
 %769 = zext i8 %768 to i32
 %770 = shl i32 %769, 24
 %771 = or i32 %763, %770
 %772 = zext i32 %771 to i64
 %773 = shl i64 %772, 32
 %774 = or i64 %741, %773
 store i64 %774, i64* %73
 store i32 1, i32* %66
 br label %786
775:
 %776 = load i32, i32* %83
 %777 = load i8*, i8** %80
 %778 = zext i32 %776 to i64
 %779 = getelementptr i8, i8* %777, i64 %778
 store i8* %779, i8** %80
 %780 = load i32, i32* %83
 %781 = load i32, i32* %79
 %782 = sub i32 %781, %780
 store i32 %782, i32* %79
 br label %783
783:
 %784 = load i32, i32* %79
 %785 = icmp ne i32 %784, 0
 br i1 %785, label %592, label %786
786:
 br label %787
787:
 %788 = load i32, i32* %76
 %789 = icmp ne i32 %788, 0
 br i1 %789, label %790, label %1119
790:
 %791 = load i64, i64* %73
 %792 = icmp ne i64 %791, 0
 br i1 %792, label %1119, label %793
793:
 %794 = load i32, i32* %72
 %795 = icmp ne i32 %794, 0
 br i1 %795, label %1119, label %796
796:
 store i64 0, i64* %89
 store i64 0, i64* %90
 %797 = load i8*, i8** %63
 %798 = getelementptr %struct.mz_zip_internal_state_tag, i8* %797, i32 0, i32 4
 %799 = load i32, i32* %798
 %800 = icmp ne i32 %799, 0
 br i1 %800, label %804, label %801
801:
 %802 = load i32, i32* %66
 %803 = icmp ne i32 %802, 0
 br label %804
804:
 %805 = phi i1 [1, %796], [%803, %801]
 %806 = zext i1 %805 to i64
 %807 = select i1 %805, i32 6, i32 4
 store i32 %807, i32* %91
 %808 = load i8*, i8** %59
 %809 = getelementptr %struct.mz_zip_archive, i8* %808, i32 0, i32 11
 %810 = load i8*, i8** %809
 %811 = load i8*, i8** %59
 %812 = getelementptr %struct.mz_zip_archive, i8* %811, i32 0, i32 14
 %813 = load i8*, i8** %812
 %814 = load i64, i64* %69
 %815 = add i64 %814, 30
 %816 = load i32, i32* %70
 %817 = zext i32 %816 to i64
 %818 = add i64 %815, %817
 %819 = load i32, i32* %71
 %820 = zext i32 %819 to i64
 %821 = add i64 %818, %820
 %822 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 7
 %823 = load i64, i64* %822
 %824 = add i64 %821, %823
 %825 = getelementptr [32 x i8], i8* %85, i64 0, i64 0
 %826 = load i32, i32* %91
 %827 = zext i32 %826 to i64
 %828 = mul i64 4, %827
 %829 = call i64 %810 (i8* %813, i64 %824, i8* %825, i64 %828)
 %830 = load i32, i32* %91
 %831 = zext i32 %830 to i64
 %832 = mul i64 4, %831
 %833 = icmp ne i64 %829, %832
 br i1 %833, label %834, label %843
834:
 %835 = load i8*, i8** %59
 store i8* %835, i8** %50
 store i32 20, i32* %51
 %836 = load i8*, i8** %50
 %837 = icmp ne i8* %836, null
 br i1 %837, label %838, label %842
838:
 %839 = load i32, i32* %51
 %840 = load i8*, i8** %50
 %841 = getelementptr %struct.mz_zip_archive, i8* %840, i32 0, i32 5
 store i32 %839, i32* %841
 br label %842
842:
 br label %1183
843:
 %844 = getelementptr [32 x i8], i8* %85, i64 0, i64 0
 %845 = getelementptr i8, i8* %844, i64 0
 %846 = load i8, i8* %845
 %847 = zext i8 %846 to i32
 %848 = getelementptr [32 x i8], i8* %85, i64 0, i64 0
 %849 = getelementptr i8, i8* %848, i64 1
 %850 = load i8, i8* %849
 %851 = zext i8 %850 to i32
 %852 = shl i32 %851, 8
 %853 = or i32 %847, %852
 %854 = getelementptr [32 x i8], i8* %85, i64 0, i64 0
 %855 = getelementptr i8, i8* %854, i64 2
 %856 = load i8, i8* %855
 %857 = zext i8 %856 to i32
 %858 = shl i32 %857, 16
 %859 = or i32 %853, %858
 %860 = getelementptr [32 x i8], i8* %85, i64 0, i64 0
 %861 = getelementptr i8, i8* %860, i64 3
 %862 = load i8, i8* %861
 %863 = zext i8 %862 to i32
 %864 = shl i32 %863, 24
 %865 = or i32 %859, %864
 %866 = icmp eq i32 %865, 134695760
 %867 = zext i1 %866 to i32
 store i32 %867, i32* %86
 %868 = load i32, i32* %86
 %869 = icmp ne i32 %868, 0
 br i1 %869, label %870, label %873
870:
 %871 = getelementptr [32 x i8], i8* %85, i64 0, i64 0
 %872 = getelementptr i8, i8* %871, i64 4
 br label %875
873:
 %874 = getelementptr [32 x i8], i8* %85, i64 0, i64 0
 br label %875
875:
 %876 = phi i8* [%872, %870], [%874, %873]
 store i8* %876, i8** %87
 %877 = load i8*, i8** %87
 %878 = getelementptr i8, i8* %877, i64 0
 %879 = load i8, i8* %878
 %880 = zext i8 %879 to i32
 %881 = load i8*, i8** %87
 %882 = getelementptr i8, i8* %881, i64 1
 %883 = load i8, i8* %882
 %884 = zext i8 %883 to i32
 %885 = shl i32 %884, 8
 %886 = or i32 %880, %885
 %887 = load i8*, i8** %87
 %888 = getelementptr i8, i8* %887, i64 2
 %889 = load i8, i8* %888
 %890 = zext i8 %889 to i32
 %891 = shl i32 %890, 16
 %892 = or i32 %886, %891
 %893 = load i8*, i8** %87
 %894 = getelementptr i8, i8* %893, i64 3
 %895 = load i8, i8* %894
 %896 = zext i8 %895 to i32
 %897 = shl i32 %896, 24
 %898 = or i32 %892, %897
 store i32 %898, i32* %88
 %899 = load i8*, i8** %63
 %900 = getelementptr %struct.mz_zip_internal_state_tag, i8* %899, i32 0, i32 4
 %901 = load i32, i32* %900
 %902 = icmp ne i32 %901, 0
 br i1 %902, label %906, label %903
903:
 %904 = load i32, i32* %66
 %905 = icmp ne i32 %904, 0
 br i1 %905, label %906, label %1035
906:
 %907 = load i8*, i8** %87
 %908 = getelementptr i8, i8* %907, i64 4
 %909 = getelementptr i8, i8* %908, i64 0
 %910 = load i8, i8* %909
 %911 = zext i8 %910 to i32
 %912 = load i8*, i8** %87
 %913 = getelementptr i8, i8* %912, i64 4
 %914 = getelementptr i8, i8* %913, i64 1
 %915 = load i8, i8* %914
 %916 = zext i8 %915 to i32
 %917 = shl i32 %916, 8
 %918 = or i32 %911, %917
 %919 = load i8*, i8** %87
 %920 = getelementptr i8, i8* %919, i64 4
 %921 = getelementptr i8, i8* %920, i64 2
 %922 = load i8, i8* %921
 %923 = zext i8 %922 to i32
 %924 = shl i32 %923, 16
 %925 = or i32 %918, %924
 %926 = load i8*, i8** %87
 %927 = getelementptr i8, i8* %926, i64 4
 %928 = getelementptr i8, i8* %927, i64 3
 %929 = load i8, i8* %928
 %930 = zext i8 %929 to i32
 %931 = shl i32 %930, 24
 %932 = or i32 %925, %931
 %933 = zext i32 %932 to i64
 %934 = load i8*, i8** %87
 %935 = getelementptr i8, i8* %934, i64 4
 %936 = getelementptr i8, i8* %935, i64 4
 %937 = getelementptr i8, i8* %936, i64 0
 %938 = load i8, i8* %937
 %939 = zext i8 %938 to i32
 %940 = load i8*, i8** %87
 %941 = getelementptr i8, i8* %940, i64 4
 %942 = getelementptr i8, i8* %941, i64 4
 %943 = getelementptr i8, i8* %942, i64 1
 %944 = load i8, i8* %943
 %945 = zext i8 %944 to i32
 %946 = shl i32 %945, 8
 %947 = or i32 %939, %946
 %948 = load i8*, i8** %87
 %949 = getelementptr i8, i8* %948, i64 4
 %950 = getelementptr i8, i8* %949, i64 4
 %951 = getelementptr i8, i8* %950, i64 2
 %952 = load i8, i8* %951
 %953 = zext i8 %952 to i32
 %954 = shl i32 %953, 16
 %955 = or i32 %947, %954
 %956 = load i8*, i8** %87
 %957 = getelementptr i8, i8* %956, i64 4
 %958 = getelementptr i8, i8* %957, i64 4
 %959 = getelementptr i8, i8* %958, i64 3
 %960 = load i8, i8* %959
 %961 = zext i8 %960 to i32
 %962 = shl i32 %961, 24
 %963 = or i32 %955, %962
 %964 = zext i32 %963 to i64
 %965 = shl i64 %964, 32
 %966 = or i64 %933, %965
 store i64 %966, i64* %89
 %967 = load i8*, i8** %87
 %968 = getelementptr i8, i8* %967, i64 4
 %969 = getelementptr i8, i8* %968, i64 8
 %970 = getelementptr i8, i8* %969, i64 0
 %971 = load i8, i8* %970
 %972 = zext i8 %971 to i32
 %973 = load i8*, i8** %87
 %974 = getelementptr i8, i8* %973, i64 4
 %975 = getelementptr i8, i8* %974, i64 8
 %976 = getelementptr i8, i8* %975, i64 1
 %977 = load i8, i8* %976
 %978 = zext i8 %977 to i32
 %979 = shl i32 %978, 8
 %980 = or i32 %972, %979
 %981 = load i8*, i8** %87
 %982 = getelementptr i8, i8* %981, i64 4
 %983 = getelementptr i8, i8* %982, i64 8
 %984 = getelementptr i8, i8* %983, i64 2
 %985 = load i8, i8* %984
 %986 = zext i8 %985 to i32
 %987 = shl i32 %986, 16
 %988 = or i32 %980, %987
 %989 = load i8*, i8** %87
 %990 = getelementptr i8, i8* %989, i64 4
 %991 = getelementptr i8, i8* %990, i64 8
 %992 = getelementptr i8, i8* %991, i64 3
 %993 = load i8, i8* %992
 %994 = zext i8 %993 to i32
 %995 = shl i32 %994, 24
 %996 = or i32 %988, %995
 %997 = zext i32 %996 to i64
 %998 = load i8*, i8** %87
 %999 = getelementptr i8, i8* %998, i64 4
 %1000 = getelementptr i8, i8* %999, i64 8
 %1001 = getelementptr i8, i8* %1000, i64 4
 %1002 = getelementptr i8, i8* %1001, i64 0
 %1003 = load i8, i8* %1002
 %1004 = zext i8 %1003 to i32
 %1005 = load i8*, i8** %87
 %1006 = getelementptr i8, i8* %1005, i64 4
 %1007 = getelementptr i8, i8* %1006, i64 8
 %1008 = getelementptr i8, i8* %1007, i64 4
 %1009 = getelementptr i8, i8* %1008, i64 1
 %1010 = load i8, i8* %1009
 %1011 = zext i8 %1010 to i32
 %1012 = shl i32 %1011, 8
 %1013 = or i32 %1004, %1012
 %1014 = load i8*, i8** %87
 %1015 = getelementptr i8, i8* %1014, i64 4
 %1016 = getelementptr i8, i8* %1015, i64 8
 %1017 = getelementptr i8, i8* %1016, i64 4
 %1018 = getelementptr i8, i8* %1017, i64 2
 %1019 = load i8, i8* %1018
 %1020 = zext i8 %1019 to i32
 %1021 = shl i32 %1020, 16
 %1022 = or i32 %1013, %1021
 %1023 = load i8*, i8** %87
 %1024 = getelementptr i8, i8* %1023, i64 4
 %1025 = getelementptr i8, i8* %1024, i64 8
 %1026 = getelementptr i8, i8* %1025, i64 4
 %1027 = getelementptr i8, i8* %1026, i64 3
 %1028 = load i8, i8* %1027
 %1029 = zext i8 %1028 to i32
 %1030 = shl i32 %1029, 24
 %1031 = or i32 %1022, %1030
 %1032 = zext i32 %1031 to i64
 %1033 = shl i64 %1032, 32
 %1034 = or i64 %997, %1033
 store i64 %1034, i64* %90
 br label %1094
1035:
 %1036 = load i8*, i8** %87
 %1037 = getelementptr i8, i8* %1036, i64 4
 %1038 = getelementptr i8, i8* %1037, i64 0
 %1039 = load i8, i8* %1038
 %1040 = zext i8 %1039 to i32
 %1041 = load i8*, i8** %87
 %1042 = getelementptr i8, i8* %1041, i64 4
 %1043 = getelementptr i8, i8* %1042, i64 1
 %1044 = load i8, i8* %1043
 %1045 = zext i8 %1044 to i32
 %1046 = shl i32 %1045, 8
 %1047 = or i32 %1040, %1046
 %1048 = load i8*, i8** %87
 %1049 = getelementptr i8, i8* %1048, i64 4
 %1050 = getelementptr i8, i8* %1049, i64 2
 %1051 = load i8, i8* %1050
 %1052 = zext i8 %1051 to i32
 %1053 = shl i32 %1052, 16
 %1054 = or i32 %1047, %1053
 %1055 = load i8*, i8** %87
 %1056 = getelementptr i8, i8* %1055, i64 4
 %1057 = getelementptr i8, i8* %1056, i64 3
 %1058 = load i8, i8* %1057
 %1059 = zext i8 %1058 to i32
 %1060 = shl i32 %1059, 24
 %1061 = or i32 %1054, %1060
 %1062 = zext i32 %1061 to i64
 store i64 %1062, i64* %89
 %1063 = load i8*, i8** %87
 %1064 = getelementptr i8, i8* %1063, i64 4
 %1065 = getelementptr i8, i8* %1064, i64 4
 %1066 = getelementptr i8, i8* %1065, i64 0
 %1067 = load i8, i8* %1066
 %1068 = zext i8 %1067 to i32
 %1069 = load i8*, i8** %87
 %1070 = getelementptr i8, i8* %1069, i64 4
 %1071 = getelementptr i8, i8* %1070, i64 4
 %1072 = getelementptr i8, i8* %1071, i64 1
 %1073 = load i8, i8* %1072
 %1074 = zext i8 %1073 to i32
 %1075 = shl i32 %1074, 8
 %1076 = or i32 %1068, %1075
 %1077 = load i8*, i8** %87
 %1078 = getelementptr i8, i8* %1077, i64 4
 %1079 = getelementptr i8, i8* %1078, i64 4
 %1080 = getelementptr i8, i8* %1079, i64 2
 %1081 = load i8, i8* %1080
 %1082 = zext i8 %1081 to i32
 %1083 = shl i32 %1082, 16
 %1084 = or i32 %1076, %1083
 %1085 = load i8*, i8** %87
 %1086 = getelementptr i8, i8* %1085, i64 4
 %1087 = getelementptr i8, i8* %1086, i64 4
 %1088 = getelementptr i8, i8* %1087, i64 3
 %1089 = load i8, i8* %1088
 %1090 = zext i8 %1089 to i32
 %1091 = shl i32 %1090, 24
 %1092 = or i32 %1084, %1091
 %1093 = zext i32 %1092 to i64
 store i64 %1093, i64* %90
 br label %1094
1094:
 %1095 = load i32, i32* %88
 %1096 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 6
 %1097 = load i32, i32* %1096
 %1098 = icmp ne i32 %1095, %1097
 br i1 %1098, label %1109, label %1099
1099:
 %1100 = load i64, i64* %89
 %1101 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 7
 %1102 = load i64, i64* %1101
 %1103 = icmp ne i64 %1100, %1102
 br i1 %1103, label %1109, label %1104
1104:
 %1105 = load i64, i64* %90
 %1106 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 8
 %1107 = load i64, i64* %1106
 %1108 = icmp ne i64 %1105, %1107
 br i1 %1108, label %1109, label %1118
1109:
 %1110 = load i8*, i8** %59
 store i8* %1110, i8** %52
 store i32 30, i32* %53
 %1111 = load i8*, i8** %52
 %1112 = icmp ne i8* %1111, null
 br i1 %1112, label %1113, label %1117
1113:
 %1114 = load i32, i32* %53
 %1115 = load i8*, i8** %52
 %1116 = getelementptr %struct.mz_zip_archive, i8* %1115, i32 0, i32 5
 store i32 %1114, i32* %1116
 br label %1117
1117:
 br label %1183
1118:
 br label %1144
1119:
 %1120 = load i32, i32* %72
 %1121 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 6
 %1122 = load i32, i32* %1121
 %1123 = icmp ne i32 %1120, %1122
 br i1 %1123, label %1134, label %1124
1124:
 %1125 = load i64, i64* %73
 %1126 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 7
 %1127 = load i64, i64* %1126
 %1128 = icmp ne i64 %1125, %1127
 br i1 %1128, label %1134, label %1129
1129:
 %1130 = load i64, i64* %74
 %1131 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 8
 %1132 = load i64, i64* %1131
 %1133 = icmp ne i64 %1130, %1132
 br i1 %1133, label %1134, label %1143
1134:
 %1135 = load i8*, i8** %59
 store i8* %1135, i8** %54
 store i32 30, i32* %55
 %1136 = load i8*, i8** %54
 %1137 = icmp ne i8* %1136, null
 br i1 %1137, label %1138, label %1142
1138:
 %1139 = load i32, i32* %55
 %1140 = load i8*, i8** %54
 %1141 = getelementptr %struct.mz_zip_archive, i8* %1140, i32 0, i32 5
 store i32 %1139, i32* %1141
 br label %1142
1142:
 br label %1183
1143:
 br label %1144
1144:
 %1145 = load i8*, i8** %59
 store i8* %1145, i8** %4
 store i8* %78, i8** %5
 %1146 = load i8*, i8** %4
 %1147 = getelementptr %struct.mz_zip_archive, i8* %1146, i32 0, i32 8
 %1148 = load i8*, i8** %1147
 %1149 = load i8*, i8** %4
 %1150 = getelementptr %struct.mz_zip_archive, i8* %1149, i32 0, i32 10
 %1151 = load i8*, i8** %1150
 %1152 = load i8*, i8** %5
 %1153 = load i8*, i8** %1152
 call void %1148 (i8* %1151, i8* %1153)
 %1154 = load i8*, i8** %5
 %1155 = load i8*, i8** %5
 %1156 = call i64 @llvm.objectsize.i64.p0 (i8* %1155, i1 0, i1 1, i1 0)
 %1157 = call i8* @__memset_chk (i8* %1154, i32 0, i64 32, i64 %1156)
 %1158 = load i32, i32* %61
 %1159 = and i32 %1158, 8192
 %1160 = icmp eq i32 %1159, 0
 br i1 %1160, label %1161, label %1182
1161:
 %1162 = load i8*, i8** %59
 %1163 = load i32, i32* %60
 %1164 = call i32 @mz_zip_reader_extract_to_callback (i8* %1162, i32 %1163, i8* @mz_zip_compute_crc32_callback, i8* %75, i32 0)
 %1165 = icmp ne i32 %1164, 0
 br i1 %1165, label %1167, label %1166
1166:
 store i32 0, i32* %58
 br label %1197
1167:
 %1168 = load i32, i32* %75
 %1169 = getelementptr %struct.mz_zip_archive_file_stat, i8* %62, i32 0, i32 6
 %1170 = load i32, i32* %1169
 %1171 = icmp ne i32 %1168, %1170
 br i1 %1171, label %1172, label %1181
1172:
 %1173 = load i8*, i8** %59
 store i8* %1173, i8** %56
 store i32 30, i32* %57
 %1174 = load i8*, i8** %56
 %1175 = icmp ne i8* %1174, null
 br i1 %1175, label %1176, label %1180
1176:
 %1177 = load i32, i32* %57
 %1178 = load i8*, i8** %56
 %1179 = getelementptr %struct.mz_zip_archive, i8* %1178, i32 0, i32 5
 store i32 %1177, i32* %1179
 br label %1180
1180:
 store i32 0, i32* %58
 br label %1197
1181:
 br label %1182
1182:
 store i32 1, i32* %58
 br label %1197
1183:
 %1184 = load i8*, i8** %59
 store i8* %1184, i8** %6
 store i8* %78, i8** %7
 %1185 = load i8*, i8** %6
 %1186 = getelementptr %struct.mz_zip_archive, i8* %1185, i32 0, i32 8
 %1187 = load i8*, i8** %1186
 %1188 = load i8*, i8** %6
 %1189 = getelementptr %struct.mz_zip_archive, i8* %1188, i32 0, i32 10
 %1190 = load i8*, i8** %1189
 %1191 = load i8*, i8** %7
 %1192 = load i8*, i8** %1191
 call void %1187 (i8* %1190, i8* %1192)
 %1193 = load i8*, i8** %7
 %1194 = load i8*, i8** %7
 %1195 = call i64 @llvm.objectsize.i64.p0 (i8* %1194, i1 0, i1 1, i1 0)
 %1196 = call i8* @__memset_chk (i8* %1193, i32 0, i64 32, i64 %1195)
 store i32 0, i32* %58
 br label %1197
1197:
 %1198 = load i32, i32* %58
 ret i32 %1198
}

define i32 @mz_zip_file_stat_internal (i8* %0, i32 %1, i8* %2, i8* %3, i8* %4) {
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca i8*
 %13 = alloca i32
 %14 = alloca i8*
 %15 = alloca i32
 %16 = alloca i8*
 %17 = alloca i32
 %18 = alloca i32
 %19 = alloca i8*
 %20 = alloca i32
 %21 = alloca i8*
 %22 = alloca i8*
 %23 = alloca i8*
 %24 = alloca i32
 %25 = alloca i8*
 %26 = alloca i32
 %27 = alloca i8*
 %28 = alloca i32
 %29 = alloca i32
 %30 = alloca i8*
 %31 = alloca i32
 store i8* %0, i8** %19
 store i32 %1, i32* %20
 store i8* %2, i8** %21
 store i8* %3, i8** %22
 store i8* %4, i8** %23
 %32 = load i8*, i8** %21
 store i8* %32, i8** %25
 %33 = load i8*, i8** %23
 %34 = icmp ne i8* %33, null
 br i1 %34, label %35, label %37
35:
 %36 = load i8*, i8** %23
 store i32 0, i32* %36
 br label %37
37:
 %38 = load i8*, i8** %25
 %39 = icmp ne i8* %38, null
 br i1 %39, label %40, label %43
40:
 %41 = load i8*, i8** %22
 %42 = icmp ne i8* %41, null
 br i1 %42, label %52, label %43
43:
 %44 = load i8*, i8** %19
 store i8* %44, i8** %6
 store i32 24, i32* %7
 %45 = load i8*, i8** %6
 %46 = icmp ne i8* %45, null
 br i1 %46, label %47, label %51
47:
 %48 = load i32, i32* %7
 %49 = load i8*, i8** %6
 %50 = getelementptr %struct.mz_zip_archive, i8* %49, i32 0, i32 5
 store i32 %48, i32* %50
 br label %51
51:
 store i32 0, i32* %18
 br label %829
52:
 %53 = load i32, i32* %20
 %54 = load i8*, i8** %22
 %55 = getelementptr %struct.mz_zip_archive_file_stat, i8* %54, i32 0, i32 0
 store i32 %53, i32* %55
 %56 = load i8*, i8** %19
 %57 = getelementptr %struct.mz_zip_archive, i8* %56, i32 0, i32 15
 %58 = load i8*, i8** %57
 %59 = getelementptr %struct.mz_zip_internal_state_tag, i8* %58, i32 0, i32 1
 %60 = getelementptr %struct.mz_zip_array, i8* %59, i32 0, i32 0
 %61 = load i8*, i8** %60
 %62 = load i32, i32* %20
 %63 = zext i32 %62 to i64
 %64 = getelementptr i32, i8* %61, i64 %63
 %65 = load i32, i32* %64
 %66 = zext i32 %65 to i64
 %67 = load i8*, i8** %22
 %68 = getelementptr %struct.mz_zip_archive_file_stat, i8* %67, i32 0, i32 1
 store i64 %66, i64* %68
 %69 = load i8*, i8** %25
 %70 = getelementptr i8, i8* %69, i64 4
 %71 = getelementptr i8, i8* %70, i64 0
 %72 = load i8, i8* %71
 %73 = zext i8 %72 to i32
 %74 = load i8*, i8** %25
 %75 = getelementptr i8, i8* %74, i64 4
 %76 = getelementptr i8, i8* %75, i64 1
 %77 = load i8, i8* %76
 %78 = zext i8 %77 to i32
 %79 = shl i32 %78, 8
 %80 = or i32 %73, %79
 %81 = trunc i32 %80 to i16
 %82 = load i8*, i8** %22
 %83 = getelementptr %struct.mz_zip_archive_file_stat, i8* %82, i32 0, i32 2
 store i16 %81, i16* %83
 %84 = load i8*, i8** %25
 %85 = getelementptr i8, i8* %84, i64 6
 %86 = getelementptr i8, i8* %85, i64 0
 %87 = load i8, i8* %86
 %88 = zext i8 %87 to i32
 %89 = load i8*, i8** %25
 %90 = getelementptr i8, i8* %89, i64 6
 %91 = getelementptr i8, i8* %90, i64 1
 %92 = load i8, i8* %91
 %93 = zext i8 %92 to i32
 %94 = shl i32 %93, 8
 %95 = or i32 %88, %94
 %96 = trunc i32 %95 to i16
 %97 = load i8*, i8** %22
 %98 = getelementptr %struct.mz_zip_archive_file_stat, i8* %97, i32 0, i32 3
 store i16 %96, i16* %98
 %99 = load i8*, i8** %25
 %100 = getelementptr i8, i8* %99, i64 8
 %101 = getelementptr i8, i8* %100, i64 0
 %102 = load i8, i8* %101
 %103 = zext i8 %102 to i32
 %104 = load i8*, i8** %25
 %105 = getelementptr i8, i8* %104, i64 8
 %106 = getelementptr i8, i8* %105, i64 1
 %107 = load i8, i8* %106
 %108 = zext i8 %107 to i32
 %109 = shl i32 %108, 8
 %110 = or i32 %103, %109
 %111 = trunc i32 %110 to i16
 %112 = load i8*, i8** %22
 %113 = getelementptr %struct.mz_zip_archive_file_stat, i8* %112, i32 0, i32 4
 store i16 %111, i16* %113
 %114 = load i8*, i8** %25
 %115 = getelementptr i8, i8* %114, i64 10
 %116 = getelementptr i8, i8* %115, i64 0
 %117 = load i8, i8* %116
 %118 = zext i8 %117 to i32
 %119 = load i8*, i8** %25
 %120 = getelementptr i8, i8* %119, i64 10
 %121 = getelementptr i8, i8* %120, i64 1
 %122 = load i8, i8* %121
 %123 = zext i8 %122 to i32
 %124 = shl i32 %123, 8
 %125 = or i32 %118, %124
 %126 = trunc i32 %125 to i16
 %127 = load i8*, i8** %22
 %128 = getelementptr %struct.mz_zip_archive_file_stat, i8* %127, i32 0, i32 5
 store i16 %126, i16* %128
 %129 = load i8*, i8** %25
 %130 = getelementptr i8, i8* %129, i64 12
 %131 = getelementptr i8, i8* %130, i64 0
 %132 = load i8, i8* %131
 %133 = zext i8 %132 to i32
 %134 = load i8*, i8** %25
 %135 = getelementptr i8, i8* %134, i64 12
 %136 = getelementptr i8, i8* %135, i64 1
 %137 = load i8, i8* %136
 %138 = zext i8 %137 to i32
 %139 = shl i32 %138, 8
 %140 = or i32 %133, %139
 %141 = load i8*, i8** %25
 %142 = getelementptr i8, i8* %141, i64 14
 %143 = getelementptr i8, i8* %142, i64 0
 %144 = load i8, i8* %143
 %145 = zext i8 %144 to i32
 %146 = load i8*, i8** %25
 %147 = getelementptr i8, i8* %146, i64 14
 %148 = getelementptr i8, i8* %147, i64 1
 %149 = load i8, i8* %148
 %150 = zext i8 %149 to i32
 %151 = shl i32 %150, 8
 %152 = or i32 %145, %151
 %153 = call i64 @mz_zip_dos_to_time_t (i32 %140, i32 %152)
 %154 = load i8*, i8** %22
 %155 = getelementptr %struct.mz_zip_archive_file_stat, i8* %154, i32 0, i32 18
 store i64 %153, i64* %155
 %156 = load i8*, i8** %25
 %157 = getelementptr i8, i8* %156, i64 16
 %158 = getelementptr i8, i8* %157, i64 0
 %159 = load i8, i8* %158
 %160 = zext i8 %159 to i32
 %161 = load i8*, i8** %25
 %162 = getelementptr i8, i8* %161, i64 16
 %163 = getelementptr i8, i8* %162, i64 1
 %164 = load i8, i8* %163
 %165 = zext i8 %164 to i32
 %166 = shl i32 %165, 8
 %167 = or i32 %160, %166
 %168 = load i8*, i8** %25
 %169 = getelementptr i8, i8* %168, i64 16
 %170 = getelementptr i8, i8* %169, i64 2
 %171 = load i8, i8* %170
 %172 = zext i8 %171 to i32
 %173 = shl i32 %172, 16
 %174 = or i32 %167, %173
 %175 = load i8*, i8** %25
 %176 = getelementptr i8, i8* %175, i64 16
 %177 = getelementptr i8, i8* %176, i64 3
 %178 = load i8, i8* %177
 %179 = zext i8 %178 to i32
 %180 = shl i32 %179, 24
 %181 = or i32 %174, %180
 %182 = load i8*, i8** %22
 %183 = getelementptr %struct.mz_zip_archive_file_stat, i8* %182, i32 0, i32 6
 store i32 %181, i32* %183
 %184 = load i8*, i8** %25
 %185 = getelementptr i8, i8* %184, i64 20
 %186 = getelementptr i8, i8* %185, i64 0
 %187 = load i8, i8* %186
 %188 = zext i8 %187 to i32
 %189 = load i8*, i8** %25
 %190 = getelementptr i8, i8* %189, i64 20
 %191 = getelementptr i8, i8* %190, i64 1
 %192 = load i8, i8* %191
 %193 = zext i8 %192 to i32
 %194 = shl i32 %193, 8
 %195 = or i32 %188, %194
 %196 = load i8*, i8** %25
 %197 = getelementptr i8, i8* %196, i64 20
 %198 = getelementptr i8, i8* %197, i64 2
 %199 = load i8, i8* %198
 %200 = zext i8 %199 to i32
 %201 = shl i32 %200, 16
 %202 = or i32 %195, %201
 %203 = load i8*, i8** %25
 %204 = getelementptr i8, i8* %203, i64 20
 %205 = getelementptr i8, i8* %204, i64 3
 %206 = load i8, i8* %205
 %207 = zext i8 %206 to i32
 %208 = shl i32 %207, 24
 %209 = or i32 %202, %208
 %210 = zext i32 %209 to i64
 %211 = load i8*, i8** %22
 %212 = getelementptr %struct.mz_zip_archive_file_stat, i8* %211, i32 0, i32 7
 store i64 %210, i64* %212
 %213 = load i8*, i8** %25
 %214 = getelementptr i8, i8* %213, i64 24
 %215 = getelementptr i8, i8* %214, i64 0
 %216 = load i8, i8* %215
 %217 = zext i8 %216 to i32
 %218 = load i8*, i8** %25
 %219 = getelementptr i8, i8* %218, i64 24
 %220 = getelementptr i8, i8* %219, i64 1
 %221 = load i8, i8* %220
 %222 = zext i8 %221 to i32
 %223 = shl i32 %222, 8
 %224 = or i32 %217, %223
 %225 = load i8*, i8** %25
 %226 = getelementptr i8, i8* %225, i64 24
 %227 = getelementptr i8, i8* %226, i64 2
 %228 = load i8, i8* %227
 %229 = zext i8 %228 to i32
 %230 = shl i32 %229, 16
 %231 = or i32 %224, %230
 %232 = load i8*, i8** %25
 %233 = getelementptr i8, i8* %232, i64 24
 %234 = getelementptr i8, i8* %233, i64 3
 %235 = load i8, i8* %234
 %236 = zext i8 %235 to i32
 %237 = shl i32 %236, 24
 %238 = or i32 %231, %237
 %239 = zext i32 %238 to i64
 %240 = load i8*, i8** %22
 %241 = getelementptr %struct.mz_zip_archive_file_stat, i8* %240, i32 0, i32 8
 store i64 %239, i64* %241
 %242 = load i8*, i8** %25
 %243 = getelementptr i8, i8* %242, i64 36
 %244 = getelementptr i8, i8* %243, i64 0
 %245 = load i8, i8* %244
 %246 = zext i8 %245 to i32
 %247 = load i8*, i8** %25
 %248 = getelementptr i8, i8* %247, i64 36
 %249 = getelementptr i8, i8* %248, i64 1
 %250 = load i8, i8* %249
 %251 = zext i8 %250 to i32
 %252 = shl i32 %251, 8
 %253 = or i32 %246, %252
 %254 = trunc i32 %253 to i16
 %255 = load i8*, i8** %22
 %256 = getelementptr %struct.mz_zip_archive_file_stat, i8* %255, i32 0, i32 9
 store i16 %254, i16* %256
 %257 = load i8*, i8** %25
 %258 = getelementptr i8, i8* %257, i64 38
 %259 = getelementptr i8, i8* %258, i64 0
 %260 = load i8, i8* %259
 %261 = zext i8 %260 to i32
 %262 = load i8*, i8** %25
 %263 = getelementptr i8, i8* %262, i64 38
 %264 = getelementptr i8, i8* %263, i64 1
 %265 = load i8, i8* %264
 %266 = zext i8 %265 to i32
 %267 = shl i32 %266, 8
 %268 = or i32 %261, %267
 %269 = load i8*, i8** %25
 %270 = getelementptr i8, i8* %269, i64 38
 %271 = getelementptr i8, i8* %270, i64 2
 %272 = load i8, i8* %271
 %273 = zext i8 %272 to i32
 %274 = shl i32 %273, 16
 %275 = or i32 %268, %274
 %276 = load i8*, i8** %25
 %277 = getelementptr i8, i8* %276, i64 38
 %278 = getelementptr i8, i8* %277, i64 3
 %279 = load i8, i8* %278
 %280 = zext i8 %279 to i32
 %281 = shl i32 %280, 24
 %282 = or i32 %275, %281
 %283 = load i8*, i8** %22
 %284 = getelementptr %struct.mz_zip_archive_file_stat, i8* %283, i32 0, i32 10
 store i32 %282, i32* %284
 %285 = load i8*, i8** %25
 %286 = getelementptr i8, i8* %285, i64 42
 %287 = getelementptr i8, i8* %286, i64 0
 %288 = load i8, i8* %287
 %289 = zext i8 %288 to i32
 %290 = load i8*, i8** %25
 %291 = getelementptr i8, i8* %290, i64 42
 %292 = getelementptr i8, i8* %291, i64 1
 %293 = load i8, i8* %292
 %294 = zext i8 %293 to i32
 %295 = shl i32 %294, 8
 %296 = or i32 %289, %295
 %297 = load i8*, i8** %25
 %298 = getelementptr i8, i8* %297, i64 42
 %299 = getelementptr i8, i8* %298, i64 2
 %300 = load i8, i8* %299
 %301 = zext i8 %300 to i32
 %302 = shl i32 %301, 16
 %303 = or i32 %296, %302
 %304 = load i8*, i8** %25
 %305 = getelementptr i8, i8* %304, i64 42
 %306 = getelementptr i8, i8* %305, i64 3
 %307 = load i8, i8* %306
 %308 = zext i8 %307 to i32
 %309 = shl i32 %308, 24
 %310 = or i32 %303, %309
 %311 = zext i32 %310 to i64
 %312 = load i8*, i8** %22
 %313 = getelementptr %struct.mz_zip_archive_file_stat, i8* %312, i32 0, i32 11
 store i64 %311, i64* %313
 %314 = load i8*, i8** %25
 %315 = getelementptr i8, i8* %314, i64 28
 %316 = getelementptr i8, i8* %315, i64 0
 %317 = load i8, i8* %316
 %318 = zext i8 %317 to i32
 %319 = load i8*, i8** %25
 %320 = getelementptr i8, i8* %319, i64 28
 %321 = getelementptr i8, i8* %320, i64 1
 %322 = load i8, i8* %321
 %323 = zext i8 %322 to i32
 %324 = shl i32 %323, 8
 %325 = or i32 %318, %324
 store i32 %325, i32* %24
 %326 = load i32, i32* %24
 %327 = icmp ult i32 %326, 511
 br i1 %327, label %328, label %330
328:
 %329 = load i32, i32* %24
 br label %331
330:
 br label %331
331:
 %332 = phi i32 [%329, %328], [511, %330]
 store i32 %332, i32* %24
 %333 = load i8*, i8** %22
 %334 = getelementptr %struct.mz_zip_archive_file_stat, i8* %333, i32 0, i32 16
 %335 = getelementptr [512 x i8], i8* %334, i64 0, i64 0
 %336 = load i8*, i8** %25
 %337 = getelementptr i8, i8* %336, i64 46
 %338 = load i32, i32* %24
 %339 = zext i32 %338 to i64
 %340 = load i8*, i8** %22
 %341 = getelementptr %struct.mz_zip_archive_file_stat, i8* %340, i32 0, i32 16
 %342 = getelementptr [512 x i8], i8* %341, i64 0, i64 0
 %343 = call i64 @llvm.objectsize.i64.p0 (i8* %342, i1 0, i1 1, i1 0)
 %344 = call i8* @__memcpy_chk (i8* %335, i8* %337, i64 %339, i64 %343)
 %345 = load i8*, i8** %22
 %346 = getelementptr %struct.mz_zip_archive_file_stat, i8* %345, i32 0, i32 16
 %347 = load i32, i32* %24
 %348 = zext i32 %347 to i64
 %349 = getelementptr [512 x i8], i8* %346, i64 0, i64 %348
 store i8 0, i8* %349
 %350 = load i8*, i8** %25
 %351 = getelementptr i8, i8* %350, i64 32
 %352 = getelementptr i8, i8* %351, i64 0
 %353 = load i8, i8* %352
 %354 = zext i8 %353 to i32
 %355 = load i8*, i8** %25
 %356 = getelementptr i8, i8* %355, i64 32
 %357 = getelementptr i8, i8* %356, i64 1
 %358 = load i8, i8* %357
 %359 = zext i8 %358 to i32
 %360 = shl i32 %359, 8
 %361 = or i32 %354, %360
 store i32 %361, i32* %24
 %362 = load i32, i32* %24
 %363 = icmp ult i32 %362, 511
 br i1 %363, label %364, label %366
364:
 %365 = load i32, i32* %24
 br label %367
366:
 br label %367
367:
 %368 = phi i32 [%365, %364], [511, %366]
 store i32 %368, i32* %24
 %369 = load i32, i32* %24
 %370 = load i8*, i8** %22
 %371 = getelementptr %struct.mz_zip_archive_file_stat, i8* %370, i32 0, i32 12
 store i32 %369, i32* %371
 %372 = load i8*, i8** %22
 %373 = getelementptr %struct.mz_zip_archive_file_stat, i8* %372, i32 0, i32 17
 %374 = getelementptr [512 x i8], i8* %373, i64 0, i64 0
 %375 = load i8*, i8** %25
 %376 = getelementptr i8, i8* %375, i64 46
 %377 = load i8*, i8** %25
 %378 = getelementptr i8, i8* %377, i64 28
 %379 = getelementptr i8, i8* %378, i64 0
 %380 = load i8, i8* %379
 %381 = zext i8 %380 to i32
 %382 = load i8*, i8** %25
 %383 = getelementptr i8, i8* %382, i64 28
 %384 = getelementptr i8, i8* %383, i64 1
 %385 = load i8, i8* %384
 %386 = zext i8 %385 to i32
 %387 = shl i32 %386, 8
 %388 = or i32 %381, %387
 %389 = zext i32 %388 to i64
 %390 = getelementptr i8, i8* %376, i64 %389
 %391 = load i8*, i8** %25
 %392 = getelementptr i8, i8* %391, i64 30
 %393 = getelementptr i8, i8* %392, i64 0
 %394 = load i8, i8* %393
 %395 = zext i8 %394 to i32
 %396 = load i8*, i8** %25
 %397 = getelementptr i8, i8* %396, i64 30
 %398 = getelementptr i8, i8* %397, i64 1
 %399 = load i8, i8* %398
 %400 = zext i8 %399 to i32
 %401 = shl i32 %400, 8
 %402 = or i32 %395, %401
 %403 = zext i32 %402 to i64
 %404 = getelementptr i8, i8* %390, i64 %403
 %405 = load i32, i32* %24
 %406 = zext i32 %405 to i64
 %407 = load i8*, i8** %22
 %408 = getelementptr %struct.mz_zip_archive_file_stat, i8* %407, i32 0, i32 17
 %409 = getelementptr [512 x i8], i8* %408, i64 0, i64 0
 %410 = call i64 @llvm.objectsize.i64.p0 (i8* %409, i1 0, i1 1, i1 0)
 %411 = call i8* @__memcpy_chk (i8* %374, i8* %404, i64 %406, i64 %410)
 %412 = load i8*, i8** %22
 %413 = getelementptr %struct.mz_zip_archive_file_stat, i8* %412, i32 0, i32 17
 %414 = load i32, i32* %24
 %415 = zext i32 %414 to i64
 %416 = getelementptr [512 x i8], i8* %413, i64 0, i64 %415
 store i8 0, i8* %416
 %417 = load i8*, i8** %19
 %418 = load i32, i32* %20
 %419 = call i32 @mz_zip_reader_is_file_a_directory (i8* %417, i32 %418)
 %420 = load i8*, i8** %22
 %421 = getelementptr %struct.mz_zip_archive_file_stat, i8* %420, i32 0, i32 13
 store i32 %419, i32* %421
 %422 = load i8*, i8** %19
 %423 = load i32, i32* %20
 %424 = call i32 @mz_zip_reader_is_file_encrypted (i8* %422, i32 %423)
 %425 = load i8*, i8** %22
 %426 = getelementptr %struct.mz_zip_archive_file_stat, i8* %425, i32 0, i32 14
 store i32 %424, i32* %426
 %427 = load i8*, i8** %19
 %428 = load i32, i32* %20
 %429 = call i32 @mz_zip_reader_is_file_supported (i8* %427, i32 %428)
 %430 = load i8*, i8** %22
 %431 = getelementptr %struct.mz_zip_archive_file_stat, i8* %430, i32 0, i32 15
 store i32 %429, i32* %431
 %432 = load i8*, i8** %22
 %433 = getelementptr %struct.mz_zip_archive_file_stat, i8* %432, i32 0, i32 7
 %434 = load i64, i64* %433
 %435 = load i8*, i8** %22
 %436 = getelementptr %struct.mz_zip_archive_file_stat, i8* %435, i32 0, i32 8
 %437 = load i64, i64* %436
 %438 = icmp ugt i64 %434, %437
 br i1 %438, label %439, label %443
439:
 %440 = load i8*, i8** %22
 %441 = getelementptr %struct.mz_zip_archive_file_stat, i8* %440, i32 0, i32 7
 %442 = load i64, i64* %441
 br label %447
443:
 %444 = load i8*, i8** %22
 %445 = getelementptr %struct.mz_zip_archive_file_stat, i8* %444, i32 0, i32 8
 %446 = load i64, i64* %445
 br label %447
447:
 %448 = phi i64 [%442, %439], [%446, %443]
 %449 = load i8*, i8** %22
 %450 = getelementptr %struct.mz_zip_archive_file_stat, i8* %449, i32 0, i32 11
 %451 = load i64, i64* %450
 %452 = icmp ugt i64 %448, %451
 br i1 %452, label %453, label %471
453:
 %454 = load i8*, i8** %22
 %455 = getelementptr %struct.mz_zip_archive_file_stat, i8* %454, i32 0, i32 7
 %456 = load i64, i64* %455
 %457 = load i8*, i8** %22
 %458 = getelementptr %struct.mz_zip_archive_file_stat, i8* %457, i32 0, i32 8
 %459 = load i64, i64* %458
 %460 = icmp ugt i64 %456, %459
 br i1 %460, label %461, label %465
461:
 %462 = load i8*, i8** %22
 %463 = getelementptr %struct.mz_zip_archive_file_stat, i8* %462, i32 0, i32 7
 %464 = load i64, i64* %463
 br label %469
465:
 %466 = load i8*, i8** %22
 %467 = getelementptr %struct.mz_zip_archive_file_stat, i8* %466, i32 0, i32 8
 %468 = load i64, i64* %467
 br label %469
469:
 %470 = phi i64 [%464, %461], [%468, %465]
 br label %475
471:
 %472 = load i8*, i8** %22
 %473 = getelementptr %struct.mz_zip_archive_file_stat, i8* %472, i32 0, i32 11
 %474 = load i64, i64* %473
 br label %475
475:
 %476 = phi i64 [%470, %469], [%474, %471]
 %477 = icmp eq i64 %476, 4294967295
 br i1 %477, label %478, label %828
478:
 %479 = load i8*, i8** %25
 %480 = getelementptr i8, i8* %479, i64 30
 %481 = getelementptr i8, i8* %480, i64 0
 %482 = load i8, i8* %481
 %483 = zext i8 %482 to i32
 %484 = load i8*, i8** %25
 %485 = getelementptr i8, i8* %484, i64 30
 %486 = getelementptr i8, i8* %485, i64 1
 %487 = load i8, i8* %486
 %488 = zext i8 %487 to i32
 %489 = shl i32 %488, 8
 %490 = or i32 %483, %489
 store i32 %490, i32* %26
 %491 = load i32, i32* %26
 %492 = icmp ne i32 %491, 0
 br i1 %492, label %493, label %827
493:
 %494 = load i8*, i8** %25
 %495 = getelementptr i8, i8* %494, i64 46
 %496 = load i8*, i8** %25
 %497 = getelementptr i8, i8* %496, i64 28
 %498 = getelementptr i8, i8* %497, i64 0
 %499 = load i8, i8* %498
 %500 = zext i8 %499 to i32
 %501 = load i8*, i8** %25
 %502 = getelementptr i8, i8* %501, i64 28
 %503 = getelementptr i8, i8* %502, i64 1
 %504 = load i8, i8* %503
 %505 = zext i8 %504 to i32
 %506 = shl i32 %505, 8
 %507 = or i32 %500, %506
 %508 = zext i32 %507 to i64
 %509 = getelementptr i8, i8* %495, i64 %508
 store i8* %509, i8** %27
 br label %510
510:
 %511 = load i32, i32* %26
 %512 = zext i32 %511 to i64
 %513 = icmp ult i64 %512, 4
 br i1 %513, label %514, label %523
514:
 %515 = load i8*, i8** %19
 store i8* %515, i8** %8
 store i32 9, i32* %9
 %516 = load i8*, i8** %8
 %517 = icmp ne i8* %516, null
 br i1 %517, label %518, label %522
518:
 %519 = load i32, i32* %9
 %520 = load i8*, i8** %8
 %521 = getelementptr %struct.mz_zip_archive, i8* %520, i32 0, i32 5
 store i32 %519, i32* %521
 br label %522
522:
 store i32 0, i32* %18
 br label %829
523:
 %524 = load i8*, i8** %27
 %525 = getelementptr i8, i8* %524, i64 0
 %526 = load i8, i8* %525
 %527 = zext i8 %526 to i32
 %528 = load i8*, i8** %27
 %529 = getelementptr i8, i8* %528, i64 1
 %530 = load i8, i8* %529
 %531 = zext i8 %530 to i32
 %532 = shl i32 %531, 8
 %533 = or i32 %527, %532
 store i32 %533, i32* %28
 %534 = load i8*, i8** %27
 %535 = getelementptr i8, i8* %534, i64 2
 %536 = getelementptr i8, i8* %535, i64 0
 %537 = load i8, i8* %536
 %538 = zext i8 %537 to i32
 %539 = load i8*, i8** %27
 %540 = getelementptr i8, i8* %539, i64 2
 %541 = getelementptr i8, i8* %540, i64 1
 %542 = load i8, i8* %541
 %543 = zext i8 %542 to i32
 %544 = shl i32 %543, 8
 %545 = or i32 %538, %544
 store i32 %545, i32* %29
 %546 = load i32, i32* %29
 %547 = zext i32 %546 to i64
 %548 = add i64 %547, 4
 %549 = load i32, i32* %26
 %550 = zext i32 %549 to i64
 %551 = icmp ugt i64 %548, %550
 br i1 %551, label %552, label %561
552:
 %553 = load i8*, i8** %19
 store i8* %553, i8** %10
 store i32 9, i32* %11
 %554 = load i8*, i8** %10
 %555 = icmp ne i8* %554, null
 br i1 %555, label %556, label %560
556:
 %557 = load i32, i32* %11
 %558 = load i8*, i8** %10
 %559 = getelementptr %struct.mz_zip_archive, i8* %558, i32 0, i32 5
 store i32 %557, i32* %559
 br label %560
560:
 store i32 0, i32* %18
 br label %829
561:
 %562 = load i32, i32* %28
 %563 = icmp eq i32 %562, 1
 br i1 %563, label %564, label %810
564:
 %565 = load i8*, i8** %27
 %566 = getelementptr i8, i8* %565, i64 4
 store i8* %566, i8** %30
 %567 = load i32, i32* %29
 store i32 %567, i32* %31
 %568 = load i8*, i8** %23
 %569 = icmp ne i8* %568, null
 br i1 %569, label %570, label %572
570:
 %571 = load i8*, i8** %23
 store i32 1, i32* %571
 br label %572
572:
 %573 = load i8*, i8** %22
 %574 = getelementptr %struct.mz_zip_archive_file_stat, i8* %573, i32 0, i32 8
 %575 = load i64, i64* %574
 %576 = icmp eq i64 %575, 4294967295
 br i1 %576, label %577, label %651
577:
 %578 = load i32, i32* %31
 %579 = zext i32 %578 to i64
 %580 = icmp ult i64 %579, 8
 br i1 %580, label %581, label %590
581:
 %582 = load i8*, i8** %19
 store i8* %582, i8** %12
 store i32 9, i32* %13
 %583 = load i8*, i8** %12
 %584 = icmp ne i8* %583, null
 br i1 %584, label %585, label %589
585:
 %586 = load i32, i32* %13
 %587 = load i8*, i8** %12
 %588 = getelementptr %struct.mz_zip_archive, i8* %587, i32 0, i32 5
 store i32 %586, i32* %588
 br label %589
589:
 store i32 0, i32* %18
 br label %829
590:
 %591 = load i8*, i8** %30
 %592 = getelementptr i8, i8* %591, i64 0
 %593 = load i8, i8* %592
 %594 = zext i8 %593 to i32
 %595 = load i8*, i8** %30
 %596 = getelementptr i8, i8* %595, i64 1
 %597 = load i8, i8* %596
 %598 = zext i8 %597 to i32
 %599 = shl i32 %598, 8
 %600 = or i32 %594, %599
 %601 = load i8*, i8** %30
 %602 = getelementptr i8, i8* %601, i64 2
 %603 = load i8, i8* %602
 %604 = zext i8 %603 to i32
 %605 = shl i32 %604, 16
 %606 = or i32 %600, %605
 %607 = load i8*, i8** %30
 %608 = getelementptr i8, i8* %607, i64 3
 %609 = load i8, i8* %608
 %610 = zext i8 %609 to i32
 %611 = shl i32 %610, 24
 %612 = or i32 %606, %611
 %613 = zext i32 %612 to i64
 %614 = load i8*, i8** %30
 %615 = getelementptr i8, i8* %614, i64 4
 %616 = getelementptr i8, i8* %615, i64 0
 %617 = load i8, i8* %616
 %618 = zext i8 %617 to i32
 %619 = load i8*, i8** %30
 %620 = getelementptr i8, i8* %619, i64 4
 %621 = getelementptr i8, i8* %620, i64 1
 %622 = load i8, i8* %621
 %623 = zext i8 %622 to i32
 %624 = shl i32 %623, 8
 %625 = or i32 %618, %624
 %626 = load i8*, i8** %30
 %627 = getelementptr i8, i8* %626, i64 4
 %628 = getelementptr i8, i8* %627, i64 2
 %629 = load i8, i8* %628
 %630 = zext i8 %629 to i32
 %631 = shl i32 %630, 16
 %632 = or i32 %625, %631
 %633 = load i8*, i8** %30
 %634 = getelementptr i8, i8* %633, i64 4
 %635 = getelementptr i8, i8* %634, i64 3
 %636 = load i8, i8* %635
 %637 = zext i8 %636 to i32
 %638 = shl i32 %637, 24
 %639 = or i32 %632, %638
 %640 = zext i32 %639 to i64
 %641 = shl i64 %640, 32
 %642 = or i64 %613, %641
 %643 = load i8*, i8** %22
 %644 = getelementptr %struct.mz_zip_archive_file_stat, i8* %643, i32 0, i32 8
 store i64 %642, i64* %644
 %645 = load i8*, i8** %30
 %646 = getelementptr i8, i8* %645, i64 8
 store i8* %646, i8** %30
 %647 = load i32, i32* %31
 %648 = zext i32 %647 to i64
 %649 = sub i64 %648, 8
 %650 = trunc i64 %649 to i32
 store i32 %650, i32* %31
 br label %651
651:
 %652 = load i8*, i8** %22
 %653 = getelementptr %struct.mz_zip_archive_file_stat, i8* %652, i32 0, i32 7
 %654 = load i64, i64* %653
 %655 = icmp eq i64 %654, 4294967295
 br i1 %655, label %656, label %730
656:
 %657 = load i32, i32* %31
 %658 = zext i32 %657 to i64
 %659 = icmp ult i64 %658, 8
 br i1 %659, label %660, label %669
660:
 %661 = load i8*, i8** %19
 store i8* %661, i8** %14
 store i32 9, i32* %15
 %662 = load i8*, i8** %14
 %663 = icmp ne i8* %662, null
 br i1 %663, label %664, label %668
664:
 %665 = load i32, i32* %15
 %666 = load i8*, i8** %14
 %667 = getelementptr %struct.mz_zip_archive, i8* %666, i32 0, i32 5
 store i32 %665, i32* %667
 br label %668
668:
 store i32 0, i32* %18
 br label %829
669:
 %670 = load i8*, i8** %30
 %671 = getelementptr i8, i8* %670, i64 0
 %672 = load i8, i8* %671
 %673 = zext i8 %672 to i32
 %674 = load i8*, i8** %30
 %675 = getelementptr i8, i8* %674, i64 1
 %676 = load i8, i8* %675
 %677 = zext i8 %676 to i32
 %678 = shl i32 %677, 8
 %679 = or i32 %673, %678
 %680 = load i8*, i8** %30
 %681 = getelementptr i8, i8* %680, i64 2
 %682 = load i8, i8* %681
 %683 = zext i8 %682 to i32
 %684 = shl i32 %683, 16
 %685 = or i32 %679, %684
 %686 = load i8*, i8** %30
 %687 = getelementptr i8, i8* %686, i64 3
 %688 = load i8, i8* %687
 %689 = zext i8 %688 to i32
 %690 = shl i32 %689, 24
 %691 = or i32 %685, %690
 %692 = zext i32 %691 to i64
 %693 = load i8*, i8** %30
 %694 = getelementptr i8, i8* %693, i64 4
 %695 = getelementptr i8, i8* %694, i64 0
 %696 = load i8, i8* %695
 %697 = zext i8 %696 to i32
 %698 = load i8*, i8** %30
 %699 = getelementptr i8, i8* %698, i64 4
 %700 = getelementptr i8, i8* %699, i64 1
 %701 = load i8, i8* %700
 %702 = zext i8 %701 to i32
 %703 = shl i32 %702, 8
 %704 = or i32 %697, %703
 %705 = load i8*, i8** %30
 %706 = getelementptr i8, i8* %705, i64 4
 %707 = getelementptr i8, i8* %706, i64 2
 %708 = load i8, i8* %707
 %709 = zext i8 %708 to i32
 %710 = shl i32 %709, 16
 %711 = or i32 %704, %710
 %712 = load i8*, i8** %30
 %713 = getelementptr i8, i8* %712, i64 4
 %714 = getelementptr i8, i8* %713, i64 3
 %715 = load i8, i8* %714
 %716 = zext i8 %715 to i32
 %717 = shl i32 %716, 24
 %718 = or i32 %711, %717
 %719 = zext i32 %718 to i64
 %720 = shl i64 %719, 32
 %721 = or i64 %692, %720
 %722 = load i8*, i8** %22
 %723 = getelementptr %struct.mz_zip_archive_file_stat, i8* %722, i32 0, i32 7
 store i64 %721, i64* %723
 %724 = load i8*, i8** %30
 %725 = getelementptr i8, i8* %724, i64 8
 store i8* %725, i8** %30
 %726 = load i32, i32* %31
 %727 = zext i32 %726 to i64
 %728 = sub i64 %727, 8
 %729 = trunc i64 %728 to i32
 store i32 %729, i32* %31
 br label %730
730:
 %731 = load i8*, i8** %22
 %732 = getelementptr %struct.mz_zip_archive_file_stat, i8* %731, i32 0, i32 11
 %733 = load i64, i64* %732
 %734 = icmp eq i64 %733, 4294967295
 br i1 %734, label %735, label %809
735:
 %736 = load i32, i32* %31
 %737 = zext i32 %736 to i64
 %738 = icmp ult i64 %737, 8
 br i1 %738, label %739, label %748
739:
 %740 = load i8*, i8** %19
 store i8* %740, i8** %16
 store i32 9, i32* %17
 %741 = load i8*, i8** %16
 %742 = icmp ne i8* %741, null
 br i1 %742, label %743, label %747
743:
 %744 = load i32, i32* %17
 %745 = load i8*, i8** %16
 %746 = getelementptr %struct.mz_zip_archive, i8* %745, i32 0, i32 5
 store i32 %744, i32* %746
 br label %747
747:
 store i32 0, i32* %18
 br label %829
748:
 %749 = load i8*, i8** %30
 %750 = getelementptr i8, i8* %749, i64 0
 %751 = load i8, i8* %750
 %752 = zext i8 %751 to i32
 %753 = load i8*, i8** %30
 %754 = getelementptr i8, i8* %753, i64 1
 %755 = load i8, i8* %754
 %756 = zext i8 %755 to i32
 %757 = shl i32 %756, 8
 %758 = or i32 %752, %757
 %759 = load i8*, i8** %30
 %760 = getelementptr i8, i8* %759, i64 2
 %761 = load i8, i8* %760
 %762 = zext i8 %761 to i32
 %763 = shl i32 %762, 16
 %764 = or i32 %758, %763
 %765 = load i8*, i8** %30
 %766 = getelementptr i8, i8* %765, i64 3
 %767 = load i8, i8* %766
 %768 = zext i8 %767 to i32
 %769 = shl i32 %768, 24
 %770 = or i32 %764, %769
 %771 = zext i32 %770 to i64
 %772 = load i8*, i8** %30
 %773 = getelementptr i8, i8* %772, i64 4
 %774 = getelementptr i8, i8* %773, i64 0
 %775 = load i8, i8* %774
 %776 = zext i8 %775 to i32
 %777 = load i8*, i8** %30
 %778 = getelementptr i8, i8* %777, i64 4
 %779 = getelementptr i8, i8* %778, i64 1
 %780 = load i8, i8* %779
 %781 = zext i8 %780 to i32
 %782 = shl i32 %781, 8
 %783 = or i32 %776, %782
 %784 = load i8*, i8** %30
 %785 = getelementptr i8, i8* %784, i64 4
 %786 = getelementptr i8, i8* %785, i64 2
 %787 = load i8, i8* %786
 %788 = zext i8 %787 to i32
 %789 = shl i32 %788, 16
 %790 = or i32 %783, %789
 %791 = load i8*, i8** %30
 %792 = getelementptr i8, i8* %791, i64 4
 %793 = getelementptr i8, i8* %792, i64 3
 %794 = load i8, i8* %793
 %795 = zext i8 %794 to i32
 %796 = shl i32 %795, 24
 %797 = or i32 %790, %796
 %798 = zext i32 %797 to i64
 %799 = shl i64 %798, 32
 %800 = or i64 %771, %799
 %801 = load i8*, i8** %22
 %802 = getelementptr %struct.mz_zip_archive_file_stat, i8* %801, i32 0, i32 11
 store i64 %800, i64* %802
 %803 = load i8*, i8** %30
 %804 = getelementptr i8, i8* %803, i64 8
 store i8* %804, i8** %30
 %805 = load i32, i32* %31
 %806 = zext i32 %805 to i64
 %807 = sub i64 %806, 8
 %808 = trunc i64 %807 to i32
 store i32 %808, i32* %31
 br label %809
809:
 br label %826
810:
 %811 = load i32, i32* %29
 %812 = zext i32 %811 to i64
 %813 = add i64 4, %812
 %814 = load i8*, i8** %27
 %815 = getelementptr i8, i8* %814, i64 %813
 store i8* %815, i8** %27
 %816 = load i32, i32* %26
 %817 = zext i32 %816 to i64
 %818 = sub i64 %817, 4
 %819 = load i32, i32* %29
 %820 = zext i32 %819 to i64
 %821 = sub i64 %818, %820
 %822 = trunc i64 %821 to i32
 store i32 %822, i32* %26
 br label %823
823:
 %824 = load i32, i32* %26
 %825 = icmp ne i32 %824, 0
 br i1 %825, label %510, label %826
826:
 br label %827
827:
 br label %828
828:
 store i32 1, i32* %18
 br label %829
829:
 %830 = load i32, i32* %18
 ret i32 %830
}

define i64 @mz_zip_compute_crc32_callback (i8* %0, i64 %1, i8* %2, i64 %3) {
 %5 = alloca i8*
 %6 = alloca i64
 %7 = alloca i8*
 %8 = alloca i64
 %9 = alloca i8*
 store i8* %0, i8** %5
 store i64 %1, i64* %6
 store i8* %2, i8** %7
 store i64 %3, i64* %8
 %10 = load i8*, i8** %5
 store i8* %10, i8** %9
 %11 = load i64, i64* %6
 %12 = load i8*, i8** %9
 %13 = load i32, i32* %12
 %14 = zext i32 %13 to i64
 %15 = load i8*, i8** %7
 %16 = load i64, i64* %8
 %17 = call i64 @mz_crc32 (i64 %14, i8* %15, i64 %16)
 %18 = trunc i64 %17 to i32
 %19 = load i8*, i8** %9
 store i32 %18, i32* %19
 %20 = load i64, i64* %8
 ret i64 %20
}

define i32 @mz_zip_validate_archive (i8* %0, i32 %1) {
 %3 = alloca i8*
 %4 = alloca i32
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i32
 %9 = alloca i8*
 %10 = alloca i32
 %11 = alloca i8*
 %12 = alloca i32
 %13 = alloca i32
 %14 = alloca i8*
 %15 = alloca i32
 %16 = alloca i8*
 %17 = alloca i32
 %18 = alloca i32
 %19 = alloca %struct.mz_zip_archive_file_stat
 store i8* %0, i8** %14
 store i32 %1, i32* %15
 %20 = load i8*, i8** %14
 %21 = icmp ne i8* %20, null
 br i1 %21, label %22, label %42
22:
 %23 = load i8*, i8** %14
 %24 = getelementptr %struct.mz_zip_archive, i8* %23, i32 0, i32 15
 %25 = load i8*, i8** %24
 %26 = icmp ne i8* %25, null
 br i1 %26, label %27, label %42
27:
 %28 = load i8*, i8** %14
 %29 = getelementptr %struct.mz_zip_archive, i8* %28, i32 0, i32 7
 %30 = load i8*, i8** %29
 %31 = icmp ne i8* %30, null
 br i1 %31, label %32, label %42
32:
 %33 = load i8*, i8** %14
 %34 = getelementptr %struct.mz_zip_archive, i8* %33, i32 0, i32 8
 %35 = load i8*, i8** %34
 %36 = icmp ne i8* %35, null
 br i1 %36, label %37, label %42
37:
 %38 = load i8*, i8** %14
 %39 = getelementptr %struct.mz_zip_archive, i8* %38, i32 0, i32 11
 %40 = load i8*, i8** %39
 %41 = icmp ne i8* %40, null
 br i1 %41, label %51, label %42
42:
 %43 = load i8*, i8** %14
 store i8* %43, i8** %3
 store i32 24, i32* %4
 %44 = load i8*, i8** %3
 %45 = icmp ne i8* %44, null
 br i1 %45, label %46, label %50
46:
 %47 = load i32, i32* %4
 %48 = load i8*, i8** %3
 %49 = getelementptr %struct.mz_zip_archive, i8* %48, i32 0, i32 5
 store i32 %47, i32* %49
 br label %50
50:
 store i32 0, i32* %13
 br label %154
51:
 %52 = load i8*, i8** %14
 %53 = getelementptr %struct.mz_zip_archive, i8* %52, i32 0, i32 15
 %54 = load i8*, i8** %53
 store i8* %54, i8** %16
 %55 = load i8*, i8** %16
 %56 = getelementptr %struct.mz_zip_internal_state_tag, i8* %55, i32 0, i32 4
 %57 = load i32, i32* %56
 %58 = icmp ne i32 %57, 0
 br i1 %58, label %88, label %59
59:
 %60 = load i8*, i8** %14
 %61 = getelementptr %struct.mz_zip_archive, i8* %60, i32 0, i32 2
 %62 = load i32, i32* %61
 %63 = icmp ugt i32 %62, 65535
 br i1 %63, label %64, label %73
64:
 %65 = load i8*, i8** %14
 store i8* %65, i8** %5
 store i32 29, i32* %6
 %66 = load i8*, i8** %5
 %67 = icmp ne i8* %66, null
 br i1 %67, label %68, label %72
68:
 %69 = load i32, i32* %6
 %70 = load i8*, i8** %5
 %71 = getelementptr %struct.mz_zip_archive, i8* %70, i32 0, i32 5
 store i32 %69, i32* %71
 br label %72
72:
 store i32 0, i32* %13
 br label %154
73:
 %74 = load i8*, i8** %14
 %75 = getelementptr %struct.mz_zip_archive, i8* %74, i32 0, i32 0
 %76 = load i64, i64* %75
 %77 = icmp ugt i64 %76, 4294967295
 br i1 %77, label %78, label %87
78:
 %79 = load i8*, i8** %14
 store i8* %79, i8** %7
 store i32 29, i32* %8
 %80 = load i8*, i8** %7
 %81 = icmp ne i8* %80, null
 br i1 %81, label %82, label %86
82:
 %83 = load i32, i32* %8
 %84 = load i8*, i8** %7
 %85 = getelementptr %struct.mz_zip_archive, i8* %84, i32 0, i32 5
 store i32 %83, i32* %85
 br label %86
86:
 store i32 0, i32* %13
 br label %154
87:
 br label %104
88:
 %89 = load i8*, i8** %16
 %90 = getelementptr %struct.mz_zip_internal_state_tag, i8* %89, i32 0, i32 0
 %91 = getelementptr %struct.mz_zip_array, i8* %90, i32 0, i32 1
 %92 = load i64, i64* %91
 %93 = icmp uge i64 %92, 4294967295
 br i1 %93, label %94, label %103
94:
 %95 = load i8*, i8** %14
 store i8* %95, i8** %9
 store i32 29, i32* %10
 %96 = load i8*, i8** %9
 %97 = icmp ne i8* %96, null
 br i1 %97, label %98, label %102
98:
 %99 = load i32, i32* %10
 %100 = load i8*, i8** %9
 %101 = getelementptr %struct.mz_zip_archive, i8* %100, i32 0, i32 5
 store i32 %99, i32* %101
 br label %102
102:
 store i32 0, i32* %13
 br label %154
103:
 br label %104
104:
 store i32 0, i32* %17
 br label %105
105:
 %106 = load i32, i32* %17
 %107 = load i8*, i8** %14
 %108 = getelementptr %struct.mz_zip_archive, i8* %107, i32 0, i32 2
 %109 = load i32, i32* %108
 %110 = icmp ult i32 %106, %109
 br i1 %110, label %111, label %153
111:
 %112 = load i32, i32* %15
 %113 = and i32 4096, %112
 %114 = icmp ne i32 %113, 0
 br i1 %114, label %115, label %142
115:
 %116 = load i8*, i8** %14
 %117 = load i32, i32* %17
 %118 = call i32 @mz_zip_reader_file_stat (i8* %116, i32 %117, i8* %19)
 %119 = icmp ne i32 %118, 0
 br i1 %119, label %121, label %120
120:
 store i32 0, i32* %13
 br label %154
121:
 %122 = load i8*, i8** %14
 %123 = getelementptr %struct.mz_zip_archive_file_stat, i8* %19, i32 0, i32 16
 %124 = getelementptr [512 x i8], i8* %123, i64 0, i64 0
 %125 = call i32 @mz_zip_reader_locate_file_v2 (i8* %122, i8* %124, i8* null, i32 0, i8* %18)
 %126 = icmp ne i32 %125, 0
 br i1 %126, label %128, label %127
127:
 store i32 0, i32* %13
 br label %154
128:
 %129 = load i32, i32* %18
 %130 = load i32, i32* %17
 %131 = icmp ne i32 %129, %130
 br i1 %131, label %132, label %141
132:
 %133 = load i8*, i8** %14
 store i8* %133, i8** %11
 store i32 30, i32* %12
 %134 = load i8*, i8** %11
 %135 = icmp ne i8* %134, null
 br i1 %135, label %136, label %140
136:
 %137 = load i32, i32* %12
 %138 = load i8*, i8** %11
 %139 = getelementptr %struct.mz_zip_archive, i8* %138, i32 0, i32 5
 store i32 %137, i32* %139
 br label %140
140:
 store i32 0, i32* %13
 br label %154
141:
 br label %142
142:
 %143 = load i8*, i8** %14
 %144 = load i32, i32* %17
 %145 = load i32, i32* %15
 %146 = call i32 @mz_zip_validate_file (i8* %143, i32 %144, i32 %145)
 %147 = icmp ne i32 %146, 0
 br i1 %147, label %149, label %148
148:
 store i32 0, i32* %13
 br label %154
149:
 br label %150
150:
 %151 = load i32, i32* %17
 %152 = add i32 %151, 1
 store i32 %152, i32* %17
 br label %105
153:
 store i32 1, i32* %13
 br label %154
154:
 %155 = load i32, i32* %13
 ret i32 %155
}

define i32 @mz_zip_validate_mem_archive (i8* %0, i64 %1, i32 %2, i8* %3) {
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i64
 %8 = alloca i32
 %9 = alloca i8*
 %10 = alloca i32
 %11 = alloca %struct.mz_zip_archive
 %12 = alloca i32
 store i8* %0, i8** %6
 store i64 %1, i64* %7
 store i32 %2, i32* %8
 store i8* %3, i8** %9
 store i32 1, i32* %10
 store i32 0, i32* %12
 %13 = load i8*, i8** %6
 %14 = icmp ne i8* %13, null
 br i1 %14, label %15, label %18
15:
 %16 = load i64, i64* %7
 %17 = icmp ne i64 %16, 0
 br i1 %17, label %24, label %18
18:
 %19 = load i8*, i8** %9
 %20 = icmp ne i8* %19, null
 br i1 %20, label %21, label %23
21:
 %22 = load i8*, i8** %9
 store i32 24, i32* %22
 br label %23
23:
 store i32 0, i32* %5
 br label %64
24:
 call void @mz_zip_zero_struct (i8* %11)
 %25 = load i8*, i8** %6
 %26 = load i64, i64* %7
 %27 = load i32, i32* %8
 %28 = call i32 @mz_zip_reader_init_mem (i8* %11, i8* %25, i64 %26, i32 %27)
 %29 = icmp ne i32 %28, 0
 br i1 %29, label %38, label %30
30:
 %31 = load i8*, i8** %9
 %32 = icmp ne i8* %31, null
 br i1 %32, label %33, label %37
33:
 %34 = getelementptr %struct.mz_zip_archive, i8* %11, i32 0, i32 5
 %35 = load i32, i32* %34
 %36 = load i8*, i8** %9
 store i32 %35, i32* %36
 br label %37
37:
 store i32 0, i32* %5
 br label %64
38:
 %39 = load i32, i32* %8
 %40 = call i32 @mz_zip_validate_archive (i8* %11, i32 %39)
 %41 = icmp ne i32 %40, 0
 br i1 %41, label %45, label %42
42:
 %43 = getelementptr %struct.mz_zip_archive, i8* %11, i32 0, i32 5
 %44 = load i32, i32* %43
 store i32 %44, i32* %12
 store i32 0, i32* %10
 br label %45
45:
 %46 = load i32, i32* %10
 %47 = call i32 @mz_zip_reader_end_internal (i8* %11, i32 %46)
 %48 = icmp ne i32 %47, 0
 br i1 %48, label %56, label %49
49:
 %50 = load i32, i32* %12
 %51 = icmp ne i32 %50, 0
 br i1 %51, label %55, label %52
52:
 %53 = getelementptr %struct.mz_zip_archive, i8* %11, i32 0, i32 5
 %54 = load i32, i32* %53
 store i32 %54, i32* %12
 br label %55
55:
 store i32 0, i32* %10
 br label %56
56:
 %57 = load i8*, i8** %9
 %58 = icmp ne i8* %57, null
 br i1 %58, label %59, label %62
59:
 %60 = load i32, i32* %12
 %61 = load i8*, i8** %9
 store i32 %60, i32* %61
 br label %62
62:
 %63 = load i32, i32* %10
 store i32 %63, i32* %5
 br label %64
64:
 %65 = load i32, i32* %5
 ret i32 %65
}

define i32 @mz_zip_validate_file_archive (i8* %0, i32 %1, i8* %2) {
 %4 = alloca i32
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i32
 %9 = alloca %struct.mz_zip_archive
 %10 = alloca i32
 store i8* %0, i8** %5
 store i32 %1, i32* %6
 store i8* %2, i8** %7
 store i32 1, i32* %8
 store i32 0, i32* %10
 %11 = load i8*, i8** %5
 %12 = icmp ne i8* %11, null
 br i1 %12, label %19, label %13
13:
 %14 = load i8*, i8** %7
 %15 = icmp ne i8* %14, null
 br i1 %15, label %16, label %18
16:
 %17 = load i8*, i8** %7
 store i32 24, i32* %17
 br label %18
18:
 store i32 0, i32* %4
 br label %58
19:
 call void @mz_zip_zero_struct (i8* %9)
 %20 = load i8*, i8** %5
 %21 = load i32, i32* %6
 %22 = call i32 @mz_zip_reader_init_file_v2 (i8* %9, i8* %20, i32 %21, i64 0, i64 0)
 %23 = icmp ne i32 %22, 0
 br i1 %23, label %32, label %24
24:
 %25 = load i8*, i8** %7
 %26 = icmp ne i8* %25, null
 br i1 %26, label %27, label %31
27:
 %28 = getelementptr %struct.mz_zip_archive, i8* %9, i32 0, i32 5
 %29 = load i32, i32* %28
 %30 = load i8*, i8** %7
 store i32 %29, i32* %30
 br label %31
31:
 store i32 0, i32* %4
 br label %58
32:
 %33 = load i32, i32* %6
 %34 = call i32 @mz_zip_validate_archive (i8* %9, i32 %33)
 %35 = icmp ne i32 %34, 0
 br i1 %35, label %39, label %36
36:
 %37 = getelementptr %struct.mz_zip_archive, i8* %9, i32 0, i32 5
 %38 = load i32, i32* %37
 store i32 %38, i32* %10
 store i32 0, i32* %8
 br label %39
39:
 %40 = load i32, i32* %8
 %41 = call i32 @mz_zip_reader_end_internal (i8* %9, i32 %40)
 %42 = icmp ne i32 %41, 0
 br i1 %42, label %50, label %43
43:
 %44 = load i32, i32* %10
 %45 = icmp ne i32 %44, 0
 br i1 %45, label %49, label %46
46:
 %47 = getelementptr %struct.mz_zip_archive, i8* %9, i32 0, i32 5
 %48 = load i32, i32* %47
 store i32 %48, i32* %10
 br label %49
49:
 store i32 0, i32* %8
 br label %50
50:
 %51 = load i8*, i8** %7
 %52 = icmp ne i8* %51, null
 br i1 %52, label %53, label %56
53:
 %54 = load i32, i32* %10
 %55 = load i8*, i8** %7
 store i32 %54, i32* %55
 br label %56
56:
 %57 = load i32, i32* %8
 store i32 %57, i32* %4
 br label %58
58:
 %59 = load i32, i32* %4
 ret i32 %59
}

define i32 @mz_zip_writer_init_v2 (i8* %0, i64 %1, i32 %2) {
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca i32
 %13 = alloca i8*
 %14 = alloca i64
 %15 = alloca i32
 %16 = alloca i32
 store i8* %0, i8** %13
 store i64 %1, i64* %14
 store i32 %2, i32* %15
 %17 = load i32, i32* %15
 %18 = and i32 %17, 16384
 %19 = icmp ne i32 %18, 0
 %20 = zext i1 %19 to i32
 store i32 %20, i32* %16
 %21 = load i8*, i8** %13
 %22 = icmp ne i8* %21, null
 br i1 %22, label %23, label %38
23:
 %24 = load i8*, i8** %13
 %25 = getelementptr %struct.mz_zip_archive, i8* %24, i32 0, i32 15
 %26 = load i8*, i8** %25
 %27 = icmp ne i8* %26, null
 br i1 %27, label %38, label %28
28:
 %29 = load i8*, i8** %13
 %30 = getelementptr %struct.mz_zip_archive, i8* %29, i32 0, i32 12
 %31 = load i8*, i8** %30
 %32 = icmp ne i8* %31, null
 br i1 %32, label %33, label %38
33:
 %34 = load i8*, i8** %13
 %35 = getelementptr %struct.mz_zip_archive, i8* %34, i32 0, i32 3
 %36 = load i32, i32* %35
 %37 = icmp ne i32 %36, 0
 br i1 %37, label %38, label %47
38:
 %39 = load i8*, i8** %13
 store i8* %39, i8** %4
 store i32 24, i32* %5
 %40 = load i8*, i8** %4
 %41 = icmp ne i8* %40, null
 br i1 %41, label %42, label %46
42:
 %43 = load i32, i32* %5
 %44 = load i8*, i8** %4
 %45 = getelementptr %struct.mz_zip_archive, i8* %44, i32 0, i32 5
 store i32 %43, i32* %45
 br label %46
46:
 store i32 0, i32* %12
 br label %180
47:
 %48 = load i32, i32* %15
 %49 = and i32 %48, 32768
 %50 = icmp ne i32 %49, 0
 br i1 %50, label %51, label %66
51:
 %52 = load i8*, i8** %13
 %53 = getelementptr %struct.mz_zip_archive, i8* %52, i32 0, i32 11
 %54 = load i8*, i8** %53
 %55 = icmp ne i8* %54, null
 br i1 %55, label %65, label %56
56:
 %57 = load i8*, i8** %13
 store i8* %57, i8** %6
 store i32 24, i32* %7
 %58 = load i8*, i8** %6
 %59 = icmp ne i8* %58, null
 br i1 %59, label %60, label %64
60:
 %61 = load i32, i32* %7
 %62 = load i8*, i8** %6
 %63 = getelementptr %struct.mz_zip_archive, i8* %62, i32 0, i32 5
 store i32 %61, i32* %63
 br label %64
64:
 store i32 0, i32* %12
 br label %180
65:
 br label %66
66:
 %67 = load i8*, i8** %13
 %68 = getelementptr %struct.mz_zip_archive, i8* %67, i32 0, i32 6
 %69 = load i64, i64* %68
 %70 = icmp ne i64 %69, 0
 br i1 %70, label %71, label %91
71:
 %72 = load i8*, i8** %13
 %73 = getelementptr %struct.mz_zip_archive, i8* %72, i32 0, i32 6
 %74 = load i64, i64* %73
 %75 = load i8*, i8** %13
 %76 = getelementptr %struct.mz_zip_archive, i8* %75, i32 0, i32 6
 %77 = load i64, i64* %76
 %78 = sub i64 %77, 1
 %79 = and i64 %74, %78
 %80 = icmp ne i64 %79, 0
 br i1 %80, label %81, label %90
81:
 %82 = load i8*, i8** %13
 store i8* %82, i8** %8
 store i32 24, i32* %9
 %83 = load i8*, i8** %8
 %84 = icmp ne i8* %83, null
 br i1 %84, label %85, label %89
85:
 %86 = load i32, i32* %9
 %87 = load i8*, i8** %8
 %88 = getelementptr %struct.mz_zip_archive, i8* %87, i32 0, i32 5
 store i32 %86, i32* %88
 br label %89
89:
 store i32 0, i32* %12
 br label %180
90:
 br label %91
91:
 %92 = load i8*, i8** %13
 %93 = getelementptr %struct.mz_zip_archive, i8* %92, i32 0, i32 7
 %94 = load i8*, i8** %93
 %95 = icmp ne i8* %94, null
 br i1 %95, label %99, label %96
96:
 %97 = load i8*, i8** %13
 %98 = getelementptr %struct.mz_zip_archive, i8* %97, i32 0, i32 7
 store i8* @miniz_def_alloc_func, i8** %98
 br label %99
99:
 %100 = load i8*, i8** %13
 %101 = getelementptr %struct.mz_zip_archive, i8* %100, i32 0, i32 8
 %102 = load i8*, i8** %101
 %103 = icmp ne i8* %102, null
 br i1 %103, label %107, label %104
104:
 %105 = load i8*, i8** %13
 %106 = getelementptr %struct.mz_zip_archive, i8* %105, i32 0, i32 8
 store i8* @miniz_def_free_func, i8** %106
 br label %107
107:
 %108 = load i8*, i8** %13
 %109 = getelementptr %struct.mz_zip_archive, i8* %108, i32 0, i32 9
 %110 = load i8*, i8** %109
 %111 = icmp ne i8* %110, null
 br i1 %111, label %115, label %112
112:
 %113 = load i8*, i8** %13
 %114 = getelementptr %struct.mz_zip_archive, i8* %113, i32 0, i32 9
 store i8* @miniz_def_realloc_func, i8** %114
 br label %115
115:
 %116 = load i64, i64* %14
 %117 = load i8*, i8** %13
 %118 = getelementptr %struct.mz_zip_archive, i8* %117, i32 0, i32 0
 store i64 %116, i64* %118
 %119 = load i8*, i8** %13
 %120 = getelementptr %struct.mz_zip_archive, i8* %119, i32 0, i32 1
 store i64 0, i64* %120
 %121 = load i8*, i8** %13
 %122 = getelementptr %struct.mz_zip_archive, i8* %121, i32 0, i32 2
 store i32 0, i32* %122
 %123 = load i8*, i8** %13
 %124 = getelementptr %struct.mz_zip_archive, i8* %123, i32 0, i32 7
 %125 = load i8*, i8** %124
 %126 = load i8*, i8** %13
 %127 = getelementptr %struct.mz_zip_archive, i8* %126, i32 0, i32 10
 %128 = load i8*, i8** %127
 %129 = call i8* %125 (i8* %128, i64 1, i64 152)
 %130 = load i8*, i8** %13
 %131 = getelementptr %struct.mz_zip_archive, i8* %130, i32 0, i32 15
 store i8* %129, i8** %131
 %132 = icmp eq i8* null, %129
 br i1 %132, label %133, label %142
133:
 %134 = load i8*, i8** %13
 store i8* %134, i8** %10
 store i32 16, i32* %11
 %135 = load i8*, i8** %10
 %136 = icmp ne i8* %135, null
 br i1 %136, label %137, label %141
137:
 %138 = load i32, i32* %11
 %139 = load i8*, i8** %10
 %140 = getelementptr %struct.mz_zip_archive, i8* %139, i32 0, i32 5
 store i32 %138, i32* %140
 br label %141
141:
 store i32 0, i32* %12
 br label %180
142:
 %143 = load i8*, i8** %13
 %144 = getelementptr %struct.mz_zip_archive, i8* %143, i32 0, i32 15
 %145 = load i8*, i8** %144
 %146 = load i8*, i8** %13
 %147 = getelementptr %struct.mz_zip_archive, i8* %146, i32 0, i32 15
 %148 = load i8*, i8** %147
 %149 = call i64 @llvm.objectsize.i64.p0 (i8* %148, i1 0, i1 1, i1 0)
 %150 = call i8* @__memset_chk (i8* %145, i32 0, i64 152, i64 %149)
 %151 = load i8*, i8** %13
 %152 = getelementptr %struct.mz_zip_archive, i8* %151, i32 0, i32 15
 %153 = load i8*, i8** %152
 %154 = getelementptr %struct.mz_zip_internal_state_tag, i8* %153, i32 0, i32 0
 %155 = getelementptr %struct.mz_zip_array, i8* %154, i32 0, i32 3
 store i32 1, i32* %155
 %156 = load i8*, i8** %13
 %157 = getelementptr %struct.mz_zip_archive, i8* %156, i32 0, i32 15
 %158 = load i8*, i8** %157
 %159 = getelementptr %struct.mz_zip_internal_state_tag, i8* %158, i32 0, i32 1
 %160 = getelementptr %struct.mz_zip_array, i8* %159, i32 0, i32 3
 store i32 4, i32* %160
 %161 = load i8*, i8** %13
 %162 = getelementptr %struct.mz_zip_archive, i8* %161, i32 0, i32 15
 %163 = load i8*, i8** %162
 %164 = getelementptr %struct.mz_zip_internal_state_tag, i8* %163, i32 0, i32 2
 %165 = getelementptr %struct.mz_zip_array, i8* %164, i32 0, i32 3
 store i32 4, i32* %165
 %166 = load i32, i32* %16
 %167 = load i8*, i8** %13
 %168 = getelementptr %struct.mz_zip_archive, i8* %167, i32 0, i32 15
 %169 = load i8*, i8** %168
 %170 = getelementptr %struct.mz_zip_internal_state_tag, i8* %169, i32 0, i32 4
 store i32 %166, i32* %170
 %171 = load i32, i32* %16
 %172 = load i8*, i8** %13
 %173 = getelementptr %struct.mz_zip_archive, i8* %172, i32 0, i32 15
 %174 = load i8*, i8** %173
 %175 = getelementptr %struct.mz_zip_internal_state_tag, i8* %174, i32 0, i32 5
 store i32 %171, i32* %175
 %176 = load i8*, i8** %13
 %177 = getelementptr %struct.mz_zip_archive, i8* %176, i32 0, i32 4
 store i32 1, i32* %177
 %178 = load i8*, i8** %13
 %179 = getelementptr %struct.mz_zip_archive, i8* %178, i32 0, i32 3
 store i32 2, i32* %179
 store i32 1, i32* %12
 br label %180
180:
 %181 = load i32, i32* %12
 ret i32 %181
}

define i32 @mz_zip_writer_init (i8* %0, i64 %1) {
 %3 = alloca i8*
 %4 = alloca i64
 store i8* %0, i8** %3
 store i64 %1, i64* %4
 %5 = load i8*, i8** %3
 %6 = load i64, i64* %4
 %7 = call i32 @mz_zip_writer_init_v2 (i8* %5, i64 %6, i32 0)
 ret i32 %7
}

define i32 @mz_zip_writer_init_heap_v2 (i8* %0, i64 %1, i64 %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i64
 %10 = alloca i64
 %11 = alloca i32
 store i8* %0, i8** %8
 store i64 %1, i64* %9
 store i64 %2, i64* %10
 store i32 %3, i32* %11
 %12 = load i8*, i8** %8
 %13 = getelementptr %struct.mz_zip_archive, i8* %12, i32 0, i32 12
 store i8* @mz_zip_heap_write_func, i8** %13
 %14 = load i8*, i8** %8
 %15 = getelementptr %struct.mz_zip_archive, i8* %14, i32 0, i32 13
 store i8* null, i8** %15
 %16 = load i32, i32* %11
 %17 = and i32 %16, 32768
 %18 = icmp ne i32 %17, 0
 br i1 %18, label %19, label %22
19:
 %20 = load i8*, i8** %8
 %21 = getelementptr %struct.mz_zip_archive, i8* %20, i32 0, i32 11
 store i8* @mz_zip_mem_read_func, i8** %21
 br label %22
22:
 %23 = load i8*, i8** %8
 %24 = load i8*, i8** %8
 %25 = getelementptr %struct.mz_zip_archive, i8* %24, i32 0, i32 14
 store i8* %23, i8** %25
 %26 = load i8*, i8** %8
 %27 = load i64, i64* %9
 %28 = load i32, i32* %11
 %29 = call i32 @mz_zip_writer_init_v2 (i8* %26, i64 %27, i32 %28)
 %30 = icmp ne i32 %29, 0
 br i1 %30, label %32, label %31
31:
 store i32 0, i32* %7
 br label %77
32:
 %33 = load i8*, i8** %8
 %34 = getelementptr %struct.mz_zip_archive, i8* %33, i32 0, i32 4
 store i32 3, i32* %34
 %35 = load i64, i64* %10
 %36 = load i64, i64* %9
 %37 = icmp ugt i64 %35, %36
 br i1 %37, label %38, label %40
38:
 %39 = load i64, i64* %10
 br label %42
40:
 %41 = load i64, i64* %9
 br label %42
42:
 %43 = phi i64 [%39, %38], [%41, %40]
 store i64 %43, i64* %10
 %44 = icmp ne i64 0, %43
 br i1 %44, label %45, label %76
45:
 %46 = load i8*, i8** %8
 %47 = getelementptr %struct.mz_zip_archive, i8* %46, i32 0, i32 7
 %48 = load i8*, i8** %47
 %49 = load i8*, i8** %8
 %50 = getelementptr %struct.mz_zip_archive, i8* %49, i32 0, i32 10
 %51 = load i8*, i8** %50
 %52 = load i64, i64* %10
 %53 = call i8* %48 (i8* %51, i64 1, i64 %52)
 %54 = load i8*, i8** %8
 %55 = getelementptr %struct.mz_zip_archive, i8* %54, i32 0, i32 15
 %56 = load i8*, i8** %55
 %57 = getelementptr %struct.mz_zip_internal_state_tag, i8* %56, i32 0, i32 8
 store i8* %53, i8** %57
 %58 = icmp eq i8* null, %53
 br i1 %58, label %59, label %70
59:
 %60 = load i8*, i8** %8
 %61 = call i32 @mz_zip_writer_end_internal (i8* %60, i32 0)
 %62 = load i8*, i8** %8
 store i8* %62, i8** %5
 store i32 16, i32* %6
 %63 = load i8*, i8** %5
 %64 = icmp ne i8* %63, null
 br i1 %64, label %65, label %69
65:
 %66 = load i32, i32* %6
 %67 = load i8*, i8** %5
 %68 = getelementptr %struct.mz_zip_archive, i8* %67, i32 0, i32 5
 store i32 %66, i32* %68
 br label %69
69:
 store i32 0, i32* %7
 br label %77
70:
 %71 = load i64, i64* %10
 %72 = load i8*, i8** %8
 %73 = getelementptr %struct.mz_zip_archive, i8* %72, i32 0, i32 15
 %74 = load i8*, i8** %73
 %75 = getelementptr %struct.mz_zip_internal_state_tag, i8* %74, i32 0, i32 10
 store i64 %71, i64* %75
 br label %76
76:
 store i32 1, i32* %7
 br label %77
77:
 %78 = load i32, i32* %7
 ret i32 %78
}

define i64 @mz_zip_heap_write_func (i8* %0, i64 %1, i8* %2, i64 %3) {
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i64
 %8 = alloca i8*
 %9 = alloca i64
 %10 = alloca i8*
 %11 = alloca i64
 %12 = alloca i8*
 %13 = alloca i8*
 %14 = alloca i64
 %15 = alloca i8*
 %16 = alloca i64
 store i8* %0, i8** %8
 store i64 %1, i64* %9
 store i8* %2, i8** %10
 store i64 %3, i64* %11
 %17 = load i8*, i8** %8
 store i8* %17, i8** %12
 %18 = load i8*, i8** %12
 %19 = getelementptr %struct.mz_zip_archive, i8* %18, i32 0, i32 15
 %20 = load i8*, i8** %19
 store i8* %20, i8** %13
 %21 = load i64, i64* %9
 %22 = load i64, i64* %11
 %23 = add i64 %21, %22
 %24 = load i8*, i8** %13
 %25 = getelementptr %struct.mz_zip_internal_state_tag, i8* %24, i32 0, i32 9
 %26 = load i64, i64* %25
 %27 = icmp ugt i64 %23, %26
 br i1 %27, label %28, label %32
28:
 %29 = load i64, i64* %9
 %30 = load i64, i64* %11
 %31 = add i64 %29, %30
 br label %36
32:
 %33 = load i8*, i8** %13
 %34 = getelementptr %struct.mz_zip_internal_state_tag, i8* %33, i32 0, i32 9
 %35 = load i64, i64* %34
 br label %36
36:
 %37 = phi i64 [%31, %28], [%35, %32]
 store i64 %37, i64* %14
 %38 = load i64, i64* %11
 %39 = icmp ne i64 %38, 0
 br i1 %39, label %41, label %40
40:
 store i64 0, i64* %7
 br label %114
41:
 %42 = load i64, i64* %14
 %43 = load i8*, i8** %13
 %44 = getelementptr %struct.mz_zip_internal_state_tag, i8* %43, i32 0, i32 10
 %45 = load i64, i64* %44
 %46 = icmp ugt i64 %42, %45
 br i1 %46, label %47, label %95
47:
 %48 = load i8*, i8** %13
 %49 = getelementptr %struct.mz_zip_internal_state_tag, i8* %48, i32 0, i32 10
 %50 = load i64, i64* %49
 %51 = icmp ugt i64 64, %50
 br i1 %51, label %52, label %53
52:
 br label %57
53:
 %54 = load i8*, i8** %13
 %55 = getelementptr %struct.mz_zip_internal_state_tag, i8* %54, i32 0, i32 10
 %56 = load i64, i64* %55
 br label %57
57:
 %58 = phi i64 [64, %52], [%56, %53]
 store i64 %58, i64* %16
 br label %59
59:
 %60 = load i64, i64* %16
 %61 = load i64, i64* %14
 %62 = icmp ult i64 %60, %61
 br i1 %62, label %63, label %66
63:
 %64 = load i64, i64* %16
 %65 = mul i64 %64, 2
 store i64 %65, i64* %16
 br label %59
66:
 %67 = load i8*, i8** %12
 %68 = getelementptr %struct.mz_zip_archive, i8* %67, i32 0, i32 9
 %69 = load i8*, i8** %68
 %70 = load i8*, i8** %12
 %71 = getelementptr %struct.mz_zip_archive, i8* %70, i32 0, i32 10
 %72 = load i8*, i8** %71
 %73 = load i8*, i8** %13
 %74 = getelementptr %struct.mz_zip_internal_state_tag, i8* %73, i32 0, i32 8
 %75 = load i8*, i8** %74
 %76 = load i64, i64* %16
 %77 = call i8* %69 (i8* %72, i8* %75, i64 1, i64 %76)
 store i8* %77, i8** %15
 %78 = icmp eq i8* null, %77
 br i1 %78, label %79, label %88
79:
 %80 = load i8*, i8** %12
 store i8* %80, i8** %5
 store i32 16, i32* %6
 %81 = load i8*, i8** %5
 %82 = icmp ne i8* %81, null
 br i1 %82, label %83, label %87
83:
 %84 = load i32, i32* %6
 %85 = load i8*, i8** %5
 %86 = getelementptr %struct.mz_zip_archive, i8* %85, i32 0, i32 5
 store i32 %84, i32* %86
 br label %87
87:
 store i64 0, i64* %7
 br label %114
88:
 %89 = load i8*, i8** %15
 %90 = load i8*, i8** %13
 %91 = getelementptr %struct.mz_zip_internal_state_tag, i8* %90, i32 0, i32 8
 store i8* %89, i8** %91
 %92 = load i64, i64* %16
 %93 = load i8*, i8** %13
 %94 = getelementptr %struct.mz_zip_internal_state_tag, i8* %93, i32 0, i32 10
 store i64 %92, i64* %94
 br label %95
95:
 %96 = load i8*, i8** %13
 %97 = getelementptr %struct.mz_zip_internal_state_tag, i8* %96, i32 0, i32 8
 %98 = load i8*, i8** %97
 %99 = load i64, i64* %9
 %100 = getelementptr i8, i8* %98, i64 %99
 %101 = load i8*, i8** %10
 %102 = load i64, i64* %11
 %103 = load i8*, i8** %13
 %104 = getelementptr %struct.mz_zip_internal_state_tag, i8* %103, i32 0, i32 8
 %105 = load i8*, i8** %104
 %106 = load i64, i64* %9
 %107 = getelementptr i8, i8* %105, i64 %106
 %108 = call i64 @llvm.objectsize.i64.p0 (i8* %107, i1 0, i1 1, i1 0)
 %109 = call i8* @__memcpy_chk (i8* %100, i8* %101, i64 %102, i64 %108)
 %110 = load i64, i64* %14
 %111 = load i8*, i8** %13
 %112 = getelementptr %struct.mz_zip_internal_state_tag, i8* %111, i32 0, i32 9
 store i64 %110, i64* %112
 %113 = load i64, i64* %11
 store i64 %113, i64* %7
 br label %114
114:
 %115 = load i64, i64* %7
 ret i64 %115
}

define i32 @mz_zip_writer_end_internal (i8* %0, i32 %1) {
 %3 = alloca i8*
 %4 = alloca i8*
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i8*
 %10 = alloca i32
 %11 = alloca i8*
 %12 = alloca i32
 %13 = alloca i32
 %14 = alloca i8*
 %15 = alloca i32
 %16 = alloca i8*
 %17 = alloca i32
 store i8* %0, i8** %14
 store i32 %1, i32* %15
 store i32 1, i32* %17
 %18 = load i8*, i8** %14
 %19 = icmp ne i8* %18, null
 br i1 %19, label %20, label %45
20:
 %21 = load i8*, i8** %14
 %22 = getelementptr %struct.mz_zip_archive, i8* %21, i32 0, i32 15
 %23 = load i8*, i8** %22
 %24 = icmp ne i8* %23, null
 br i1 %24, label %25, label %45
25:
 %26 = load i8*, i8** %14
 %27 = getelementptr %struct.mz_zip_archive, i8* %26, i32 0, i32 7
 %28 = load i8*, i8** %27
 %29 = icmp ne i8* %28, null
 br i1 %29, label %30, label %45
30:
 %31 = load i8*, i8** %14
 %32 = getelementptr %struct.mz_zip_archive, i8* %31, i32 0, i32 8
 %33 = load i8*, i8** %32
 %34 = icmp ne i8* %33, null
 br i1 %34, label %35, label %45
35:
 %36 = load i8*, i8** %14
 %37 = getelementptr %struct.mz_zip_archive, i8* %36, i32 0, i32 3
 %38 = load i32, i32* %37
 %39 = icmp ne i32 %38, 2
 br i1 %39, label %40, label %58
40:
 %41 = load i8*, i8** %14
 %42 = getelementptr %struct.mz_zip_archive, i8* %41, i32 0, i32 3
 %43 = load i32, i32* %42
 %44 = icmp ne i32 %43, 3
 br i1 %44, label %45, label %58
45:
 %46 = load i32, i32* %15
 %47 = icmp ne i32 %46, 0
 br i1 %47, label %48, label %57
48:
 %49 = load i8*, i8** %14
 store i8* %49, i8** %9
 store i32 24, i32* %10
 %50 = load i8*, i8** %9
 %51 = icmp ne i8* %50, null
 br i1 %51, label %52, label %56
52:
 %53 = load i32, i32* %10
 %54 = load i8*, i8** %9
 %55 = getelementptr %struct.mz_zip_archive, i8* %54, i32 0, i32 5
 store i32 %53, i32* %55
 br label %56
56:
 br label %57
57:
 store i32 0, i32* %13
 br label %174
58:
 %59 = load i8*, i8** %14
 %60 = getelementptr %struct.mz_zip_archive, i8* %59, i32 0, i32 15
 %61 = load i8*, i8** %60
 store i8* %61, i8** %16
 %62 = load i8*, i8** %14
 %63 = getelementptr %struct.mz_zip_archive, i8* %62, i32 0, i32 15
 store i8* null, i8** %63
 %64 = load i8*, i8** %14
 %65 = load i8*, i8** %16
 %66 = getelementptr %struct.mz_zip_internal_state_tag, i8* %65, i32 0, i32 0
 store i8* %64, i8** %3
 store i8* %66, i8** %4
 %67 = load i8*, i8** %3
 %68 = getelementptr %struct.mz_zip_archive, i8* %67, i32 0, i32 8
 %69 = load i8*, i8** %68
 %70 = load i8*, i8** %3
 %71 = getelementptr %struct.mz_zip_archive, i8* %70, i32 0, i32 10
 %72 = load i8*, i8** %71
 %73 = load i8*, i8** %4
 %74 = load i8*, i8** %73
 call void %69 (i8* %72, i8* %74)
 %75 = load i8*, i8** %4
 %76 = load i8*, i8** %4
 %77 = call i64 @llvm.objectsize.i64.p0 (i8* %76, i1 0, i1 1, i1 0)
 %78 = call i8* @__memset_chk (i8* %75, i32 0, i64 32, i64 %77)
 %79 = load i8*, i8** %14
 %80 = load i8*, i8** %16
 %81 = getelementptr %struct.mz_zip_internal_state_tag, i8* %80, i32 0, i32 1
 store i8* %79, i8** %5
 store i8* %81, i8** %6
 %82 = load i8*, i8** %5
 %83 = getelementptr %struct.mz_zip_archive, i8* %82, i32 0, i32 8
 %84 = load i8*, i8** %83
 %85 = load i8*, i8** %5
 %86 = getelementptr %struct.mz_zip_archive, i8* %85, i32 0, i32 10
 %87 = load i8*, i8** %86
 %88 = load i8*, i8** %6
 %89 = load i8*, i8** %88
 call void %84 (i8* %87, i8* %89)
 %90 = load i8*, i8** %6
 %91 = load i8*, i8** %6
 %92 = call i64 @llvm.objectsize.i64.p0 (i8* %91, i1 0, i1 1, i1 0)
 %93 = call i8* @__memset_chk (i8* %90, i32 0, i64 32, i64 %92)
 %94 = load i8*, i8** %14
 %95 = load i8*, i8** %16
 %96 = getelementptr %struct.mz_zip_internal_state_tag, i8* %95, i32 0, i32 2
 store i8* %94, i8** %7
 store i8* %96, i8** %8
 %97 = load i8*, i8** %7
 %98 = getelementptr %struct.mz_zip_archive, i8* %97, i32 0, i32 8
 %99 = load i8*, i8** %98
 %100 = load i8*, i8** %7
 %101 = getelementptr %struct.mz_zip_archive, i8* %100, i32 0, i32 10
 %102 = load i8*, i8** %101
 %103 = load i8*, i8** %8
 %104 = load i8*, i8** %103
 call void %99 (i8* %102, i8* %104)
 %105 = load i8*, i8** %8
 %106 = load i8*, i8** %8
 %107 = call i64 @llvm.objectsize.i64.p0 (i8* %106, i1 0, i1 1, i1 0)
 %108 = call i8* @__memset_chk (i8* %105, i32 0, i64 32, i64 %107)
 %109 = load i8*, i8** %16
 %110 = getelementptr %struct.mz_zip_internal_state_tag, i8* %109, i32 0, i32 6
 %111 = load i8*, i8** %110
 %112 = icmp ne i8* %111, null
 br i1 %112, label %113, label %141
113:
 %114 = load i8*, i8** %14
 %115 = getelementptr %struct.mz_zip_archive, i8* %114, i32 0, i32 4
 %116 = load i32, i32* %115
 %117 = icmp eq i32 %116, 4
 br i1 %117, label %118, label %138
118:
 %119 = load i8*, i8** %16
 %120 = getelementptr %struct.mz_zip_internal_state_tag, i8* %119, i32 0, i32 6
 %121 = load i8*, i8** %120
 %122 = call i32 @fclose (i8* %121)
 %123 = icmp eq i32 %122, -1
 br i1 %123, label %124, label %137
124:
 %125 = load i32, i32* %15
 %126 = icmp ne i32 %125, 0
 br i1 %126, label %127, label %136
127:
 %128 = load i8*, i8** %14
 store i8* %128, i8** %11
 store i32 21, i32* %12
 %129 = load i8*, i8** %11
 %130 = icmp ne i8* %129, null
 br i1 %130, label %131, label %135
131:
 %132 = load i32, i32* %12
 %133 = load i8*, i8** %11
 %134 = getelementptr %struct.mz_zip_archive, i8* %133, i32 0, i32 5
 store i32 %132, i32* %134
 br label %135
135:
 br label %136
136:
 store i32 0, i32* %17
 br label %137
137:
 br label %138
138:
 %139 = load i8*, i8** %16
 %140 = getelementptr %struct.mz_zip_internal_state_tag, i8* %139, i32 0, i32 6
 store i8* null, i8** %140
 br label %141
141:
 %142 = load i8*, i8** %14
 %143 = getelementptr %struct.mz_zip_archive, i8* %142, i32 0, i32 12
 %144 = load i8*, i8** %143
 %145 = icmp eq i8* %144, @mz_zip_heap_write_func
 br i1 %145, label %146, label %163
146:
 %147 = load i8*, i8** %16
 %148 = getelementptr %struct.mz_zip_internal_state_tag, i8* %147, i32 0, i32 8
 %149 = load i8*, i8** %148
 %150 = icmp ne i8* %149, null
 br i1 %150, label %151, label %163
151:
 %152 = load i8*, i8** %14
 %153 = getelementptr %struct.mz_zip_archive, i8* %152, i32 0, i32 8
 %154 = load i8*, i8** %153
 %155 = load i8*, i8** %14
 %156 = getelementptr %struct.mz_zip_archive, i8* %155, i32 0, i32 10
 %157 = load i8*, i8** %156
 %158 = load i8*, i8** %16
 %159 = getelementptr %struct.mz_zip_internal_state_tag, i8* %158, i32 0, i32 8
 %160 = load i8*, i8** %159
 call void %154 (i8* %157, i8* %160)
 %161 = load i8*, i8** %16
 %162 = getelementptr %struct.mz_zip_internal_state_tag, i8* %161, i32 0, i32 8
 store i8* null, i8** %162
 br label %163
163:
 %164 = load i8*, i8** %14
 %165 = getelementptr %struct.mz_zip_archive, i8* %164, i32 0, i32 8
 %166 = load i8*, i8** %165
 %167 = load i8*, i8** %14
 %168 = getelementptr %struct.mz_zip_archive, i8* %167, i32 0, i32 10
 %169 = load i8*, i8** %168
 %170 = load i8*, i8** %16
 call void %166 (i8* %169, i8* %170)
 %171 = load i8*, i8** %14
 %172 = getelementptr %struct.mz_zip_archive, i8* %171, i32 0, i32 3
 store i32 0, i32* %172
 %173 = load i32, i32* %17
 store i32 %173, i32* %13
 br label %174
174:
 %175 = load i32, i32* %13
 ret i32 %175
}

define i32 @mz_zip_writer_init_heap (i8* %0, i64 %1, i64 %2) {
 %4 = alloca i8*
 %5 = alloca i64
 %6 = alloca i64
 store i8* %0, i8** %4
 store i64 %1, i64* %5
 store i64 %2, i64* %6
 %7 = load i8*, i8** %4
 %8 = load i64, i64* %5
 %9 = load i64, i64* %6
 %10 = call i32 @mz_zip_writer_init_heap_v2 (i8* %7, i64 %8, i64 %9, i32 0)
 ret i32 %10
}

define i32 @mz_zip_writer_init_file (i8* %0, i8* %1, i64 %2) {
 %4 = alloca i8*
 %5 = alloca i8*
 %6 = alloca i64
 store i8* %0, i8** %4
 store i8* %1, i8** %5
 store i64 %2, i64* %6
 %7 = load i8*, i8** %4
 %8 = load i8*, i8** %5
 %9 = load i64, i64* %6
 %10 = call i32 @mz_zip_writer_init_file_v2 (i8* %7, i8* %8, i64 %9, i32 0)
 ret i32 %10
}

define i32 @mz_zip_writer_init_file_v2 (i8* %0, i8* %1, i64 %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i32
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i8*
 %12 = alloca i64
 %13 = alloca i32
 %14 = alloca i8*
 %15 = alloca i64
 %16 = alloca [4096 x i8]
 %17 = alloca i64
 store i8* %0, i8** %10
 store i8* %1, i8** %11
 store i64 %2, i64* %12
 store i32 %3, i32* %13
 %18 = load i8*, i8** %10
 %19 = getelementptr %struct.mz_zip_archive, i8* %18, i32 0, i32 12
 store i8* @mz_zip_file_write_func, i8** %19
 %20 = load i8*, i8** %10
 %21 = getelementptr %struct.mz_zip_archive, i8* %20, i32 0, i32 13
 store i8* null, i8** %21
 %22 = load i32, i32* %13
 %23 = and i32 %22, 32768
 %24 = icmp ne i32 %23, 0
 br i1 %24, label %25, label %28
25:
 %26 = load i8*, i8** %10
 %27 = getelementptr %struct.mz_zip_archive, i8* %26, i32 0, i32 11
 store i8* @mz_zip_file_read_func, i8** %27
 br label %28
28:
 %29 = load i8*, i8** %10
 %30 = load i8*, i8** %10
 %31 = getelementptr %struct.mz_zip_archive, i8* %30, i32 0, i32 14
 store i8* %29, i8** %31
 %32 = load i8*, i8** %10
 %33 = load i64, i64* %12
 %34 = load i32, i32* %13
 %35 = call i32 @mz_zip_writer_init_v2 (i8* %32, i64 %33, i32 %34)
 %36 = icmp ne i32 %35, 0
 br i1 %36, label %38, label %37
37:
 store i32 0, i32* %9
 br label %113
38:
 %39 = load i8*, i8** %11
 %40 = load i32, i32* %13
 %41 = and i32 %40, 32768
 %42 = icmp ne i32 %41, 0
 %43 = zext i1 %42 to i64
 %44 = select i1 %42, i8* @.str.20, i8* @.str.19
 %45 = call i8* @fopen (i8* %39, i8* %44)
 store i8* %45, i8** %14
 %46 = icmp eq i8* null, %45
 br i1 %46, label %47, label %58
47:
 %48 = load i8*, i8** %10
 %49 = call i32 @mz_zip_writer_end (i8* %48)
 %50 = load i8*, i8** %10
 store i8* %50, i8** %5
 store i32 17, i32* %6
 %51 = load i8*, i8** %5
 %52 = icmp ne i8* %51, null
 br i1 %52, label %53, label %57
53:
 %54 = load i32, i32* %6
 %55 = load i8*, i8** %5
 %56 = getelementptr %struct.mz_zip_archive, i8* %55, i32 0, i32 5
 store i32 %54, i32* %56
 br label %57
57:
 store i32 0, i32* %9
 br label %113
58:
 %59 = load i8*, i8** %14
 %60 = load i8*, i8** %10
 %61 = getelementptr %struct.mz_zip_archive, i8* %60, i32 0, i32 15
 %62 = load i8*, i8** %61
 %63 = getelementptr %struct.mz_zip_internal_state_tag, i8* %62, i32 0, i32 6
 store i8* %59, i8** %63
 %64 = load i8*, i8** %10
 %65 = getelementptr %struct.mz_zip_archive, i8* %64, i32 0, i32 4
 store i32 4, i32* %65
 %66 = load i64, i64* %12
 %67 = icmp ne i64 %66, 0
 br i1 %67, label %68, label %112
68:
 store i64 0, i64* %15
 %69 = getelementptr [4096 x i8], i8* %16, i64 0, i64 0
 call void @memset (i8* %69, i8 0, i64 4096, i1 0)
 br label %70
70:
 %71 = load i64, i64* %12
 %72 = icmp ult i64 4096, %71
 br i1 %72, label %73, label %74
73:
 br label %76
74:
 %75 = load i64, i64* %12
 br label %76
76:
 %77 = phi i64 [4096, %73], [%75, %74]
 store i64 %77, i64* %17
 %78 = load i8*, i8** %10
 %79 = getelementptr %struct.mz_zip_archive, i8* %78, i32 0, i32 12
 %80 = load i8*, i8** %79
 %81 = load i8*, i8** %10
 %82 = getelementptr %struct.mz_zip_archive, i8* %81, i32 0, i32 14
 %83 = load i8*, i8** %82
 %84 = load i64, i64* %15
 %85 = getelementptr [4096 x i8], i8* %16, i64 0, i64 0
 %86 = load i64, i64* %17
 %87 = call i64 %80 (i8* %83, i64 %84, i8* %85, i64 %86)
 %88 = load i64, i64* %17
 %89 = icmp ne i64 %87, %88
 br i1 %89, label %90, label %101
90:
 %91 = load i8*, i8** %10
 %92 = call i32 @mz_zip_writer_end (i8* %91)
 %93 = load i8*, i8** %10
 store i8* %93, i8** %7
 store i32 19, i32* %8
 %94 = load i8*, i8** %7
 %95 = icmp ne i8* %94, null
 br i1 %95, label %96, label %100
96:
 %97 = load i32, i32* %8
 %98 = load i8*, i8** %7
 %99 = getelementptr %struct.mz_zip_archive, i8* %98, i32 0, i32 5
 store i32 %97, i32* %99
 br label %100
100:
 store i32 0, i32* %9
 br label %113
101:
 %102 = load i64, i64* %17
 %103 = load i64, i64* %15
 %104 = add i64 %103, %102
 store i64 %104, i64* %15
 %105 = load i64, i64* %17
 %106 = load i64, i64* %12
 %107 = sub i64 %106, %105
 store i64 %107, i64* %12
 br label %108
108:
 %109 = load i64, i64* %12
 %110 = icmp ne i64 %109, 0
 br i1 %110, label %70, label %111
111:
 br label %112
112:
 store i32 1, i32* %9
 br label %113
113:
 %114 = load i32, i32* %9
 ret i32 %114
}

define i64 @mz_zip_file_write_func (i8* %0, i64 %1, i8* %2, i64 %3) {
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i64
 %8 = alloca i8*
 %9 = alloca i64
 %10 = alloca i8*
 %11 = alloca i64
 %12 = alloca i8*
 %13 = alloca i64
 store i8* %0, i8** %8
 store i64 %1, i64* %9
 store i8* %2, i8** %10
 store i64 %3, i64* %11
 %14 = load i8*, i8** %8
 store i8* %14, i8** %12
 %15 = load i8*, i8** %12
 %16 = getelementptr %struct.mz_zip_archive, i8* %15, i32 0, i32 15
 %17 = load i8*, i8** %16
 %18 = getelementptr %struct.mz_zip_internal_state_tag, i8* %17, i32 0, i32 6
 %19 = load i8*, i8** %18
 %20 = call i64 @ftello (i8* %19)
 store i64 %20, i64* %13
 %21 = load i8*, i8** %12
 %22 = getelementptr %struct.mz_zip_archive, i8* %21, i32 0, i32 15
 %23 = load i8*, i8** %22
 %24 = getelementptr %struct.mz_zip_internal_state_tag, i8* %23, i32 0, i32 7
 %25 = load i64, i64* %24
 %26 = load i64, i64* %9
 %27 = add i64 %26, %25
 store i64 %27, i64* %9
 %28 = load i64, i64* %9
 %29 = icmp slt i64 %28, 0
 br i1 %29, label %43, label %30
30:
 %31 = load i64, i64* %13
 %32 = load i64, i64* %9
 %33 = icmp ne i64 %31, %32
 br i1 %33, label %34, label %52
34:
 %35 = load i8*, i8** %12
 %36 = getelementptr %struct.mz_zip_archive, i8* %35, i32 0, i32 15
 %37 = load i8*, i8** %36
 %38 = getelementptr %struct.mz_zip_internal_state_tag, i8* %37, i32 0, i32 6
 %39 = load i8*, i8** %38
 %40 = load i64, i64* %9
 %41 = call i32 @fseeko (i8* %39, i64 %40, i32 0)
 %42 = icmp ne i32 %41, 0
 br i1 %42, label %43, label %52
43:
 %44 = load i8*, i8** %12
 store i8* %44, i8** %5
 store i32 22, i32* %6
 %45 = load i8*, i8** %5
 %46 = icmp ne i8* %45, null
 br i1 %46, label %47, label %51
47:
 %48 = load i32, i32* %6
 %49 = load i8*, i8** %5
 %50 = getelementptr %struct.mz_zip_archive, i8* %49, i32 0, i32 5
 store i32 %48, i32* %50
 br label %51
51:
 store i64 0, i64* %7
 br label %61
52:
 %53 = load i8*, i8** %10
 %54 = load i64, i64* %11
 %55 = load i8*, i8** %12
 %56 = getelementptr %struct.mz_zip_archive, i8* %55, i32 0, i32 15
 %57 = load i8*, i8** %56
 %58 = getelementptr %struct.mz_zip_internal_state_tag, i8* %57, i32 0, i32 6
 %59 = load i8*, i8** %58
 %60 = call i64 @fwrite (i8* %53, i64 1, i64 %54, i8* %59)
 store i64 %60, i64* %7
 br label %61
61:
 %62 = load i64, i64* %7
 ret i64 %62
}

define i32 @mz_zip_writer_end (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 %4 = call i32 @mz_zip_writer_end_internal (i8* %3, i32 1)
 ret i32 %4
}

define i32 @mz_zip_writer_init_cfile (i8* %0, i8* %1, i32 %2) {
 %4 = alloca i32
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i32
 store i8* %0, i8** %5
 store i8* %1, i8** %6
 store i32 %2, i32* %7
 %8 = load i8*, i8** %5
 %9 = getelementptr %struct.mz_zip_archive, i8* %8, i32 0, i32 12
 store i8* @mz_zip_file_write_func, i8** %9
 %10 = load i8*, i8** %5
 %11 = getelementptr %struct.mz_zip_archive, i8* %10, i32 0, i32 13
 store i8* null, i8** %11
 %12 = load i32, i32* %7
 %13 = and i32 %12, 32768
 %14 = icmp ne i32 %13, 0
 br i1 %14, label %15, label %18
15:
 %16 = load i8*, i8** %5
 %17 = getelementptr %struct.mz_zip_archive, i8* %16, i32 0, i32 11
 store i8* @mz_zip_file_read_func, i8** %17
 br label %18
18:
 %19 = load i8*, i8** %5
 %20 = load i8*, i8** %5
 %21 = getelementptr %struct.mz_zip_archive, i8* %20, i32 0, i32 14
 store i8* %19, i8** %21
 %22 = load i8*, i8** %5
 %23 = load i32, i32* %7
 %24 = call i32 @mz_zip_writer_init_v2 (i8* %22, i64 0, i32 %23)
 %25 = icmp ne i32 %24, 0
 br i1 %25, label %27, label %26
26:
 store i32 0, i32* %4
 br label %45
27:
 %28 = load i8*, i8** %6
 %29 = load i8*, i8** %5
 %30 = getelementptr %struct.mz_zip_archive, i8* %29, i32 0, i32 15
 %31 = load i8*, i8** %30
 %32 = getelementptr %struct.mz_zip_internal_state_tag, i8* %31, i32 0, i32 6
 store i8* %28, i8** %32
 %33 = load i8*, i8** %5
 %34 = getelementptr %struct.mz_zip_archive, i8* %33, i32 0, i32 15
 %35 = load i8*, i8** %34
 %36 = getelementptr %struct.mz_zip_internal_state_tag, i8* %35, i32 0, i32 6
 %37 = load i8*, i8** %36
 %38 = call i64 @ftello (i8* %37)
 %39 = load i8*, i8** %5
 %40 = getelementptr %struct.mz_zip_archive, i8* %39, i32 0, i32 15
 %41 = load i8*, i8** %40
 %42 = getelementptr %struct.mz_zip_internal_state_tag, i8* %41, i32 0, i32 7
 store i64 %38, i64* %42
 %43 = load i8*, i8** %5
 %44 = getelementptr %struct.mz_zip_archive, i8* %43, i32 0, i32 4
 store i32 5, i32* %44
 store i32 1, i32* %4
 br label %45
45:
 %46 = load i32, i32* %4
 ret i32 %46
}

define i32 @mz_zip_writer_init_from_reader_v2 (i8* %0, i8* %1, i32 %2) {
 %4 = alloca i8*
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca i8*
 %13 = alloca i32
 %14 = alloca i8*
 %15 = alloca i32
 %16 = alloca i8*
 %17 = alloca i32
 %18 = alloca i8*
 %19 = alloca i32
 %20 = alloca i8*
 %21 = alloca i32
 %22 = alloca i8*
 %23 = alloca i32
 %24 = alloca i8*
 %25 = alloca i32
 %26 = alloca i32
 %27 = alloca i8*
 %28 = alloca i8*
 %29 = alloca i32
 %30 = alloca i8*
 store i8* %0, i8** %27
 store i8* %1, i8** %28
 store i32 %2, i32* %29
 %31 = load i8*, i8** %27
 %32 = icmp ne i8* %31, null
 br i1 %32, label %33, label %43
33:
 %34 = load i8*, i8** %27
 %35 = getelementptr %struct.mz_zip_archive, i8* %34, i32 0, i32 15
 %36 = load i8*, i8** %35
 %37 = icmp ne i8* %36, null
 br i1 %37, label %38, label %43
38:
 %39 = load i8*, i8** %27
 %40 = getelementptr %struct.mz_zip_archive, i8* %39, i32 0, i32 3
 %41 = load i32, i32* %40
 %42 = icmp ne i32 %41, 1
 br i1 %42, label %43, label %52
43:
 %44 = load i8*, i8** %27
 store i8* %44, i8** %6
 store i32 24, i32* %7
 %45 = load i8*, i8** %6
 %46 = icmp ne i8* %45, null
 br i1 %46, label %47, label %51
47:
 %48 = load i32, i32* %7
 %49 = load i8*, i8** %6
 %50 = getelementptr %struct.mz_zip_archive, i8* %49, i32 0, i32 5
 store i32 %48, i32* %50
 br label %51
51:
 store i32 0, i32* %26
 br label %265
52:
 %53 = load i32, i32* %29
 %54 = and i32 %53, 16384
 %55 = icmp ne i32 %54, 0
 br i1 %55, label %56, label %73
56:
 %57 = load i8*, i8** %27
 %58 = getelementptr %struct.mz_zip_archive, i8* %57, i32 0, i32 15
 %59 = load i8*, i8** %58
 %60 = getelementptr %struct.mz_zip_internal_state_tag, i8* %59, i32 0, i32 4
 %61 = load i32, i32* %60
 %62 = icmp ne i32 %61, 0
 br i1 %62, label %72, label %63
63:
 %64 = load i8*, i8** %27
 store i8* %64, i8** %8
 store i32 24, i32* %9
 %65 = load i8*, i8** %8
 %66 = icmp ne i8* %65, null
 br i1 %66, label %67, label %71
67:
 %68 = load i32, i32* %9
 %69 = load i8*, i8** %8
 %70 = getelementptr %struct.mz_zip_archive, i8* %69, i32 0, i32 5
 store i32 %68, i32* %70
 br label %71
71:
 store i32 0, i32* %26
 br label %265
72:
 br label %73
73:
 %74 = load i8*, i8** %27
 %75 = getelementptr %struct.mz_zip_archive, i8* %74, i32 0, i32 15
 %76 = load i8*, i8** %75
 %77 = getelementptr %struct.mz_zip_internal_state_tag, i8* %76, i32 0, i32 4
 %78 = load i32, i32* %77
 %79 = icmp ne i32 %78, 0
 br i1 %79, label %80, label %95
80:
 %81 = load i8*, i8** %27
 %82 = getelementptr %struct.mz_zip_archive, i8* %81, i32 0, i32 2
 %83 = load i32, i32* %82
 %84 = icmp eq i32 %83, -1
 br i1 %84, label %85, label %94
85:
 %86 = load i8*, i8** %27
 store i8* %86, i8** %10
 store i32 2, i32* %11
 %87 = load i8*, i8** %10
 %88 = icmp ne i8* %87, null
 br i1 %88, label %89, label %93
89:
 %90 = load i32, i32* %11
 %91 = load i8*, i8** %10
 %92 = getelementptr %struct.mz_zip_archive, i8* %91, i32 0, i32 5
 store i32 %90, i32* %92
 br label %93
93:
 store i32 0, i32* %26
 br label %265
94:
 br label %126
95:
 %96 = load i8*, i8** %27
 %97 = getelementptr %struct.mz_zip_archive, i8* %96, i32 0, i32 2
 %98 = load i32, i32* %97
 %99 = icmp eq i32 %98, 65535
 br i1 %99, label %100, label %109
100:
 %101 = load i8*, i8** %27
 store i8* %101, i8** %12
 store i32 2, i32* %13
 %102 = load i8*, i8** %12
 %103 = icmp ne i8* %102, null
 br i1 %103, label %104, label %108
104:
 %105 = load i32, i32* %13
 %106 = load i8*, i8** %12
 %107 = getelementptr %struct.mz_zip_archive, i8* %106, i32 0, i32 5
 store i32 %105, i32* %107
 br label %108
108:
 store i32 0, i32* %26
 br label %265
109:
 %110 = load i8*, i8** %27
 %111 = getelementptr %struct.mz_zip_archive, i8* %110, i32 0, i32 0
 %112 = load i64, i64* %111
 %113 = add i64 %112, 46
 %114 = add i64 %113, 30
 %115 = icmp ugt i64 %114, 4294967295
 br i1 %115, label %116, label %125
116:
 %117 = load i8*, i8** %27
 store i8* %117, i8** %14
 store i32 3, i32* %15
 %118 = load i8*, i8** %14
 %119 = icmp ne i8* %118, null
 br i1 %119, label %120, label %124
120:
 %121 = load i32, i32* %15
 %122 = load i8*, i8** %14
 %123 = getelementptr %struct.mz_zip_archive, i8* %122, i32 0, i32 5
 store i32 %121, i32* %123
 br label %124
124:
 store i32 0, i32* %26
 br label %265
125:
 br label %126
126:
 %127 = load i8*, i8** %27
 %128 = getelementptr %struct.mz_zip_archive, i8* %127, i32 0, i32 15
 %129 = load i8*, i8** %128
 store i8* %129, i8** %30
 %130 = load i8*, i8** %30
 %131 = getelementptr %struct.mz_zip_internal_state_tag, i8* %130, i32 0, i32 6
 %132 = load i8*, i8** %131
 %133 = icmp ne i8* %132, null
 br i1 %133, label %134, label %192
134:
 %135 = load i8*, i8** %27
 %136 = getelementptr %struct.mz_zip_archive, i8* %135, i32 0, i32 14
 %137 = load i8*, i8** %136
 %138 = load i8*, i8** %27
 %139 = icmp ne i8* %137, %138
 br i1 %139, label %140, label %149
140:
 %141 = load i8*, i8** %27
 store i8* %141, i8** %16
 store i32 24, i32* %17
 %142 = load i8*, i8** %16
 %143 = icmp ne i8* %142, null
 br i1 %143, label %144, label %148
144:
 %145 = load i32, i32* %17
 %146 = load i8*, i8** %16
 %147 = getelementptr %struct.mz_zip_archive, i8* %146, i32 0, i32 5
 store i32 %145, i32* %147
 br label %148
148:
 store i32 0, i32* %26
 br label %265
149:
 %150 = load i8*, i8** %27
 %151 = getelementptr %struct.mz_zip_archive, i8* %150, i32 0, i32 4
 %152 = load i32, i32* %151
 %153 = icmp eq i32 %152, 4
 br i1 %153, label %154, label %187
154:
 %155 = load i8*, i8** %28
 %156 = icmp ne i8* %155, null
 br i1 %156, label %166, label %157
157:
 %158 = load i8*, i8** %27
 store i8* %158, i8** %18
 store i32 24, i32* %19
 %159 = load i8*, i8** %18
 %160 = icmp ne i8* %159, null
 br i1 %160, label %161, label %165
161:
 %162 = load i32, i32* %19
 %163 = load i8*, i8** %18
 %164 = getelementptr %struct.mz_zip_archive, i8* %163, i32 0, i32 5
 store i32 %162, i32* %164
 br label %165
165:
 store i32 0, i32* %26
 br label %265
166:
 %167 = load i8*, i8** %28
 %168 = load i8*, i8** %30
 %169 = getelementptr %struct.mz_zip_internal_state_tag, i8* %168, i32 0, i32 6
 %170 = load i8*, i8** %169
 %171 = call i8* @freopen (i8* %167, i8* @.str.21, i8* %170)
 %172 = load i8*, i8** %30
 %173 = getelementptr %struct.mz_zip_internal_state_tag, i8* %172, i32 0, i32 6
 store i8* %171, i8** %173
 %174 = icmp eq i8* null, %171
 br i1 %174, label %175, label %186
175:
 %176 = load i8*, i8** %27
 %177 = call i32 @mz_zip_reader_end_internal (i8* %176, i32 0)
 %178 = load i8*, i8** %27
 store i8* %178, i8** %20
 store i32 17, i32* %21
 %179 = load i8*, i8** %20
 %180 = icmp ne i8* %179, null
 br i1 %180, label %181, label %185
181:
 %182 = load i32, i32* %21
 %183 = load i8*, i8** %20
 %184 = getelementptr %struct.mz_zip_archive, i8* %183, i32 0, i32 5
 store i32 %182, i32* %184
 br label %185
185:
 store i32 0, i32* %26
 br label %265
186:
 br label %187
187:
 %188 = load i8*, i8** %27
 %189 = getelementptr %struct.mz_zip_archive, i8* %188, i32 0, i32 12
 store i8* @mz_zip_file_write_func, i8** %189
 %190 = load i8*, i8** %27
 %191 = getelementptr %struct.mz_zip_archive, i8* %190, i32 0, i32 13
 store i8* null, i8** %191
 br label %238
192:
 %193 = load i8*, i8** %30
 %194 = getelementptr %struct.mz_zip_internal_state_tag, i8* %193, i32 0, i32 8
 %195 = load i8*, i8** %194
 %196 = icmp ne i8* %195, null
 br i1 %196, label %197, label %222
197:
 %198 = load i8*, i8** %27
 %199 = getelementptr %struct.mz_zip_archive, i8* %198, i32 0, i32 14
 %200 = load i8*, i8** %199
 %201 = load i8*, i8** %27
 %202 = icmp ne i8* %200, %201
 br i1 %202, label %203, label %212
203:
 %204 = load i8*, i8** %27
 store i8* %204, i8** %22
 store i32 24, i32* %23
 %205 = load i8*, i8** %22
 %206 = icmp ne i8* %205, null
 br i1 %206, label %207, label %211
207:
 %208 = load i32, i32* %23
 %209 = load i8*, i8** %22
 %210 = getelementptr %struct.mz_zip_archive, i8* %209, i32 0, i32 5
 store i32 %208, i32* %210
 br label %211
211:
 store i32 0, i32* %26
 br label %265
212:
 %213 = load i8*, i8** %30
 %214 = getelementptr %struct.mz_zip_internal_state_tag, i8* %213, i32 0, i32 9
 %215 = load i64, i64* %214
 %216 = load i8*, i8** %30
 %217 = getelementptr %struct.mz_zip_internal_state_tag, i8* %216, i32 0, i32 10
 store i64 %215, i64* %217
 %218 = load i8*, i8** %27
 %219 = getelementptr %struct.mz_zip_archive, i8* %218, i32 0, i32 12
 store i8* @mz_zip_heap_write_func, i8** %219
 %220 = load i8*, i8** %27
 %221 = getelementptr %struct.mz_zip_archive, i8* %220, i32 0, i32 13
 store i8* null, i8** %221
 br label %237
222:
 %223 = load i8*, i8** %27
 %224 = getelementptr %struct.mz_zip_archive, i8* %223, i32 0, i32 12
 %225 = load i8*, i8** %224
 %226 = icmp ne i8* %225, null
 br i1 %226, label %236, label %227
227:
 %228 = load i8*, i8** %27
 store i8* %228, i8** %24
 store i32 24, i32* %25
 %229 = load i8*, i8** %24
 %230 = icmp ne i8* %229, null
 br i1 %230, label %231, label %235
231:
 %232 = load i32, i32* %25
 %233 = load i8*, i8** %24
 %234 = getelementptr %struct.mz_zip_archive, i8* %233, i32 0, i32 5
 store i32 %232, i32* %234
 br label %235
235:
 store i32 0, i32* %26
 br label %265
236:
 br label %237
237:
 br label %238
238:
 %239 = load i8*, i8** %27
 %240 = getelementptr %struct.mz_zip_archive, i8* %239, i32 0, i32 1
 %241 = load i64, i64* %240
 %242 = load i8*, i8** %27
 %243 = getelementptr %struct.mz_zip_archive, i8* %242, i32 0, i32 0
 store i64 %241, i64* %243
 %244 = load i8*, i8** %27
 %245 = getelementptr %struct.mz_zip_archive, i8* %244, i32 0, i32 1
 store i64 0, i64* %245
 %246 = load i8*, i8** %27
 %247 = load i8*, i8** %27
 %248 = getelementptr %struct.mz_zip_archive, i8* %247, i32 0, i32 15
 %249 = load i8*, i8** %248
 %250 = getelementptr %struct.mz_zip_internal_state_tag, i8* %249, i32 0, i32 2
 store i8* %246, i8** %4
 store i8* %250, i8** %5
 %251 = load i8*, i8** %4
 %252 = getelementptr %struct.mz_zip_archive, i8* %251, i32 0, i32 8
 %253 = load i8*, i8** %252
 %254 = load i8*, i8** %4
 %255 = getelementptr %struct.mz_zip_archive, i8* %254, i32 0, i32 10
 %256 = load i8*, i8** %255
 %257 = load i8*, i8** %5
 %258 = load i8*, i8** %257
 call void %253 (i8* %256, i8* %258)
 %259 = load i8*, i8** %5
 %260 = load i8*, i8** %5
 %261 = call i64 @llvm.objectsize.i64.p0 (i8* %260, i1 0, i1 1, i1 0)
 %262 = call i8* @__memset_chk (i8* %259, i32 0, i64 32, i64 %261)
 %263 = load i8*, i8** %27
 %264 = getelementptr %struct.mz_zip_archive, i8* %263, i32 0, i32 3
 store i32 2, i32* %264
 store i32 1, i32* %26
 br label %265
265:
 %266 = load i32, i32* %26
 ret i32 %266
}

define i32 @mz_zip_writer_init_from_reader (i8* %0, i8* %1) {
 %3 = alloca i8*
 %4 = alloca i8*
 store i8* %0, i8** %3
 store i8* %1, i8** %4
 %5 = load i8*, i8** %3
 %6 = load i8*, i8** %4
 %7 = call i32 @mz_zip_writer_init_from_reader_v2 (i8* %5, i8* %6, i32 0)
 ret i32 %7
}

define i32 @mz_zip_writer_add_mem (i8* %0, i8* %1, i8* %2, i64 %3, i32 %4) {
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i64
 %10 = alloca i32
 store i8* %0, i8** %6
 store i8* %1, i8** %7
 store i8* %2, i8** %8
 store i64 %3, i64* %9
 store i32 %4, i32* %10
 %11 = load i8*, i8** %6
 %12 = load i8*, i8** %7
 %13 = load i8*, i8** %8
 %14 = load i64, i64* %9
 %15 = load i32, i32* %10
 %16 = call i32 @mz_zip_writer_add_mem_ex (i8* %11, i8* %12, i8* %13, i64 %14, i8* null, i16 0, i32 %15, i64 0, i32 0)
 ret i32 %16
}

define i32 @mz_zip_writer_add_mem_ex (i8* %0, i8* %1, i8* %2, i64 %3, i8* %4, i16 %5, i32 %6, i64 %7, i32 %8) {
 %10 = alloca i8*
 %11 = alloca i8*
 %12 = alloca i8*
 %13 = alloca i64
 %14 = alloca i8*
 %15 = alloca i16
 %16 = alloca i32
 %17 = alloca i64
 %18 = alloca i32
 store i8* %0, i8** %10
 store i8* %1, i8** %11
 store i8* %2, i8** %12
 store i64 %3, i64* %13
 store i8* %4, i8** %14
 store i16 %5, i16* %15
 store i32 %6, i32* %16
 store i64 %7, i64* %17
 store i32 %8, i32* %18
 %19 = load i8*, i8** %10
 %20 = load i8*, i8** %11
 %21 = load i8*, i8** %12
 %22 = load i64, i64* %13
 %23 = load i8*, i8** %14
 %24 = load i16, i16* %15
 %25 = load i32, i32* %16
 %26 = load i64, i64* %17
 %27 = load i32, i32* %18
 %28 = call i32 @mz_zip_writer_add_mem_ex_v2 (i8* %19, i8* %20, i8* %21, i64 %22, i8* %23, i16 %24, i32 %25, i64 %26, i32 %27, i8* null, i8* null, i32 0, i8* null, i32 0)
 ret i32 %28
}

define i32 @mz_zip_writer_add_mem_ex_v2 (i8* %0, i8* %1, i8* %2, i64 %3, i8* %4, i16 %5, i32 %6, i64 %7, i32 %8, i8* %9, i8* %10, i32 %11, i8* %12, i32 %13) {
 %15 = alloca i32
 %16 = alloca i8*
 %17 = alloca i8*
 %18 = alloca i64
 %19 = alloca i32
 %20 = alloca i32
 %21 = alloca i8*
 %22 = alloca i8*
 %23 = alloca i64
 %24 = alloca i32
 %25 = alloca i8*
 %26 = alloca i32
 %27 = alloca i8*
 %28 = alloca i32
 %29 = alloca i8*
 %30 = alloca i64
 %31 = alloca i8*
 %32 = alloca i32
 %33 = alloca i8*
 %34 = alloca i32
 %35 = alloca i8*
 %36 = alloca i64
 %37 = alloca i8*
 %38 = alloca i32
 %39 = alloca i8*
 %40 = alloca i32
 %41 = alloca i8*
 %42 = alloca i32
 %43 = alloca i8*
 %44 = alloca i32
 %45 = alloca i8*
 %46 = alloca i8*
 %47 = alloca i64
 %48 = alloca i8*
 %49 = alloca i8*
 %50 = alloca i64
 %51 = alloca i8*
 %52 = alloca i32
 %53 = alloca i8*
 %54 = alloca i32
 %55 = alloca i8*
 %56 = alloca i32
 %57 = alloca i8*
 %58 = alloca i32
 %59 = alloca i8*
 %60 = alloca i32
 %61 = alloca i8*
 %62 = alloca i32
 %63 = alloca i8*
 %64 = alloca i32
 %65 = alloca i8*
 %66 = alloca i32
 %67 = alloca i8*
 %68 = alloca i32
 %69 = alloca i8*
 %70 = alloca i32
 %71 = alloca i8*
 %72 = alloca i32
 %73 = alloca i8*
 %74 = alloca i32
 %75 = alloca i8*
 %76 = alloca i32
 %77 = alloca i8*
 %78 = alloca i32
 %79 = alloca i8*
 %80 = alloca i32
 %81 = alloca i8*
 %82 = alloca i32
 %83 = alloca i8*
 %84 = alloca i32
 %85 = alloca i8*
 %86 = alloca i32
 %87 = alloca i8*
 %88 = alloca i32
 %89 = alloca i8*
 %90 = alloca i32
 %91 = alloca i8*
 %92 = alloca i32
 %93 = alloca i32
 %94 = alloca i8*
 %95 = alloca i8*
 %96 = alloca i8*
 %97 = alloca i64
 %98 = alloca i8*
 %99 = alloca i16
 %100 = alloca i32
 %101 = alloca i64
 %102 = alloca i32
 %103 = alloca i8*
 %104 = alloca i8*
 %105 = alloca i32
 %106 = alloca i8*
 %107 = alloca i32
 %108 = alloca i16
 %109 = alloca i16
 %110 = alloca i16
 %111 = alloca i32
 %112 = alloca i32
 %113 = alloca i32
 %114 = alloca i64
 %115 = alloca i64
 %116 = alloca i64
 %117 = alloca i64
 %118 = alloca [30 x i8]
 %119 = alloca i8*
 %120 = alloca i32
 %121 = alloca i8*
 %122 = alloca i8*
 %123 = alloca i32
 %124 = alloca [28 x i8]
 %125 = alloca i16
 %126 = alloca i64
 %127 = alloca %struct.mz_zip_writer_add_state
 %128 = alloca [24 x i8]
 %129 = alloca i32
 store i8* %0, i8** %94
 store i8* %1, i8** %95
 store i8* %2, i8** %96
 store i64 %3, i64* %97
 store i8* %4, i8** %98
 store i16 %5, i16* %99
 store i32 %6, i32* %100
 store i64 %7, i64* %101
 store i32 %8, i32* %102
 store i8* %9, i8** %103
 store i8* %10, i8** %104
 store i32 %11, i32* %105
 store i8* %12, i8** %106
 store i32 %13, i32* %107
 store i16 0, i16* %108
 store i16 0, i16* %109
 store i16 0, i16* %110
 store i32 0, i32* %112
 %130 = load i8*, i8** %94
 %131 = getelementptr %struct.mz_zip_archive, i8* %130, i32 0, i32 0
 %132 = load i64, i64* %131
 store i64 %132, i64* %114
 %133 = load i8*, i8** %94
 %134 = getelementptr %struct.mz_zip_archive, i8* %133, i32 0, i32 0
 %135 = load i64, i64* %134
 store i64 %135, i64* %115
 store i64 0, i64* %116
 store i8* null, i8** %119
 store i8* null, i8** %122
 store i32 0, i32* %123
 store i16 0, i16* %125
 %136 = load i32, i32* %100
 %137 = icmp slt i32 %136, 0
 br i1 %137, label %138, label %139
138:
 store i32 6, i32* %100
 br label %139
139:
 %140 = load i64, i64* %101
 %141 = icmp ne i64 %140, 0
 br i1 %141, label %149, label %142
142:
 %143 = load i64, i64* %97
 %144 = icmp ne i64 %143, 0
 br i1 %144, label %145, label %154
145:
 %146 = load i32, i32* %100
 %147 = and i32 %146, 1024
 %148 = icmp ne i32 %147, 0
 br i1 %148, label %154, label %149
149:
 %150 = load i16, i16* %125
 %151 = zext i16 %150 to i32
 %152 = or i32 %151, 8
 %153 = trunc i32 %152 to i16
 store i16 %153, i16* %125
 br label %154
154:
 %155 = load i32, i32* %100
 %156 = and i32 %155, 65536
 %157 = icmp ne i32 %156, 0
 br i1 %157, label %163, label %158
158:
 %159 = load i16, i16* %125
 %160 = zext i16 %159 to i32
 %161 = or i32 %160, 2048
 %162 = trunc i32 %161 to i16
 store i16 %162, i16* %125
 br label %163
163:
 %164 = load i32, i32* %100
 %165 = and i32 %164, 15
 store i32 %165, i32* %111
 %166 = load i32, i32* %111
 %167 = icmp ne i32 %166, 0
 br i1 %167, label %168, label %172
168:
 %169 = load i32, i32* %100
 %170 = and i32 %169, 1024
 %171 = icmp ne i32 %170, 0
 br label %172
172:
 %173 = phi i1 [1, %163], [%171, %168]
 %174 = zext i1 %173 to i32
 store i32 %174, i32* %120
 %175 = load i8*, i8** %94
 %176 = icmp ne i8* %175, null
 br i1 %176, label %177, label %206
177:
 %178 = load i8*, i8** %94
 %179 = getelementptr %struct.mz_zip_archive, i8* %178, i32 0, i32 15
 %180 = load i8*, i8** %179
 %181 = icmp ne i8* %180, null
 br i1 %181, label %182, label %206
182:
 %183 = load i8*, i8** %94
 %184 = getelementptr %struct.mz_zip_archive, i8* %183, i32 0, i32 3
 %185 = load i32, i32* %184
 %186 = icmp ne i32 %185, 2
 br i1 %186, label %206, label %187
187:
 %188 = load i64, i64* %97
 %189 = icmp ne i64 %188, 0
 br i1 %189, label %190, label %193
190:
 %191 = load i8*, i8** %96
 %192 = icmp ne i8* %191, null
 br i1 %192, label %193, label %206
193:
 %194 = load i8*, i8** %95
 %195 = icmp ne i8* %194, null
 br i1 %195, label %196, label %206
196:
 %197 = load i16, i16* %99
 %198 = zext i16 %197 to i32
 %199 = icmp ne i32 %198, 0
 br i1 %199, label %200, label %203
200:
 %201 = load i8*, i8** %98
 %202 = icmp ne i8* %201, null
 br i1 %202, label %203, label %206
203:
 %204 = load i32, i32* %111
 %205 = icmp ugt i32 %204, 10
 br i1 %205, label %206, label %215
206:
 %207 = load i8*, i8** %94
 store i8* %207, i8** %51
 store i32 24, i32* %52
 %208 = load i8*, i8** %51
 %209 = icmp ne i8* %208, null
 br i1 %209, label %210, label %214
210:
 %211 = load i32, i32* %52
 %212 = load i8*, i8** %51
 %213 = getelementptr %struct.mz_zip_archive, i8* %212, i32 0, i32 5
 store i32 %211, i32* %213
 br label %214
214:
 store i32 0, i32* %93
 br label %1212
215:
 %216 = load i8*, i8** %94
 %217 = getelementptr %struct.mz_zip_archive, i8* %216, i32 0, i32 15
 %218 = load i8*, i8** %217
 store i8* %218, i8** %121
 %219 = load i8*, i8** %121
 %220 = getelementptr %struct.mz_zip_internal_state_tag, i8* %219, i32 0, i32 4
 %221 = load i32, i32* %220
 %222 = icmp ne i32 %221, 0
 br i1 %222, label %223, label %238
223:
 %224 = load i8*, i8** %94
 %225 = getelementptr %struct.mz_zip_archive, i8* %224, i32 0, i32 2
 %226 = load i32, i32* %225
 %227 = icmp eq i32 %226, -1
 br i1 %227, label %228, label %237
228:
 %229 = load i8*, i8** %94
 store i8* %229, i8** %53
 store i32 2, i32* %54
 %230 = load i8*, i8** %53
 %231 = icmp ne i8* %230, null
 br i1 %231, label %232, label %236
232:
 %233 = load i32, i32* %54
 %234 = load i8*, i8** %53
 %235 = getelementptr %struct.mz_zip_archive, i8* %234, i32 0, i32 5
 store i32 %233, i32* %235
 br label %236
236:
 store i32 0, i32* %93
 br label %1212
237:
 br label %256
238:
 %239 = load i8*, i8** %94
 %240 = getelementptr %struct.mz_zip_archive, i8* %239, i32 0, i32 2
 %241 = load i32, i32* %240
 %242 = icmp eq i32 %241, 65535
 br i1 %242, label %243, label %246
243:
 %244 = load i8*, i8** %121
 %245 = getelementptr %struct.mz_zip_internal_state_tag, i8* %244, i32 0, i32 4
 store i32 1, i32* %245
 br label %246
246:
 %247 = load i64, i64* %97
 %248 = icmp ugt i64 %247, 4294967295
 br i1 %248, label %252, label %249
249:
 %250 = load i64, i64* %101
 %251 = icmp ugt i64 %250, 4294967295
 br i1 %251, label %252, label %255
252:
 %253 = load i8*, i8** %121
 %254 = getelementptr %struct.mz_zip_internal_state_tag, i8* %253, i32 0, i32 4
 store i32 1, i32* %254
 br label %255
255:
 br label %256
256:
 %257 = load i32, i32* %100
 %258 = and i32 %257, 1024
 %259 = icmp ne i32 %258, 0
 br i1 %259, label %272, label %260
260:
 %261 = load i64, i64* %101
 %262 = icmp ne i64 %261, 0
 br i1 %262, label %263, label %272
263:
 %264 = load i8*, i8** %94
 store i8* %264, i8** %55
 store i32 24, i32* %56
 %265 = load i8*, i8** %55
 %266 = icmp ne i8* %265, null
 br i1 %266, label %267, label %271
267:
 %268 = load i32, i32* %56
 %269 = load i8*, i8** %55
 %270 = getelementptr %struct.mz_zip_archive, i8* %269, i32 0, i32 5
 store i32 %268, i32* %270
 br label %271
271:
 store i32 0, i32* %93
 br label %1212
272:
 %273 = load i8*, i8** %95
 %274 = call i32 @mz_zip_writer_validate_archive_name (i8* %273)
 %275 = icmp ne i32 %274, 0
 br i1 %275, label %285, label %276
276:
 %277 = load i8*, i8** %94
 store i8* %277, i8** %57
 store i32 25, i32* %58
 %278 = load i8*, i8** %57
 %279 = icmp ne i8* %278, null
 br i1 %279, label %280, label %284
280:
 %281 = load i32, i32* %58
 %282 = load i8*, i8** %57
 %283 = getelementptr %struct.mz_zip_archive, i8* %282, i32 0, i32 5
 store i32 %281, i32* %283
 br label %284
284:
 store i32 0, i32* %93
 br label %1212
285:
 %286 = load i8*, i8** %103
 %287 = icmp ne i8* %286, null
 br i1 %287, label %288, label %291
288:
 %289 = load i8*, i8** %103
 %290 = load i64, i64* %289
 call void @mz_zip_time_t_to_dos_time (i64 %290, i8* %109, i8* %110)
 br label %294
291:
 %292 = call i64 @time (i8* %126)
 %293 = load i64, i64* %126
 call void @mz_zip_time_t_to_dos_time (i64 %293, i8* %109, i8* %110)
 br label %294
294:
 %295 = load i32, i32* %100
 %296 = and i32 %295, 1024
 %297 = icmp ne i32 %296, 0
 br i1 %297, label %308, label %298
298:
 %299 = load i8*, i8** %96
 %300 = load i64, i64* %97
 %301 = call i64 @mz_crc32 (i64 0, i8* %299, i64 %300)
 %302 = trunc i64 %301 to i32
 store i32 %302, i32* %102
 %303 = load i64, i64* %97
 store i64 %303, i64* %101
 %304 = load i64, i64* %101
 %305 = icmp ule i64 %304, 3
 br i1 %305, label %306, label %307
306:
 store i32 0, i32* %111
 store i32 1, i32* %120
 br label %307
307:
 br label %308
308:
 %309 = load i8*, i8** %95
 %310 = call i64 @strlen (i8* %309)
 store i64 %310, i64* %117
 %311 = load i64, i64* %117
 %312 = icmp ugt i64 %311, 65535
 br i1 %312, label %313, label %322
313:
 %314 = load i8*, i8** %94
 store i8* %314, i8** %59
 store i32 25, i32* %60
 %315 = load i8*, i8** %59
 %316 = icmp ne i8* %315, null
 br i1 %316, label %317, label %321
317:
 %318 = load i32, i32* %60
 %319 = load i8*, i8** %59
 %320 = getelementptr %struct.mz_zip_archive, i8* %319, i32 0, i32 5
 store i32 %318, i32* %320
 br label %321
321:
 store i32 0, i32* %93
 br label %1212
322:
 %323 = load i8*, i8** %94
 %324 = call i32 @mz_zip_writer_compute_padding_needed_for_file_alignment (i8* %323)
 store i32 %324, i32* %113
 %325 = load i8*, i8** %121
 %326 = getelementptr %struct.mz_zip_internal_state_tag, i8* %325, i32 0, i32 0
 %327 = getelementptr %struct.mz_zip_array, i8* %326, i32 0, i32 1
 %328 = load i64, i64* %327
 %329 = add i64 %328, 46
 %330 = load i64, i64* %117
 %331 = add i64 %329, %330
 %332 = add i64 %331, 28
 %333 = load i16, i16* %99
 %334 = zext i16 %333 to i64
 %335 = add i64 %332, %334
 %336 = icmp uge i64 %335, 4294967295
 br i1 %336, label %337, label %346
337:
 %338 = load i8*, i8** %94
 store i8* %338, i8** %61
 store i32 15, i32* %62
 %339 = load i8*, i8** %61
 %340 = icmp ne i8* %339, null
 br i1 %340, label %341, label %345
341:
 %342 = load i32, i32* %62
 %343 = load i8*, i8** %61
 %344 = getelementptr %struct.mz_zip_archive, i8* %343, i32 0, i32 5
 store i32 %342, i32* %344
 br label %345
345:
 store i32 0, i32* %93
 br label %1212
346:
 %347 = load i8*, i8** %121
 %348 = getelementptr %struct.mz_zip_internal_state_tag, i8* %347, i32 0, i32 4
 %349 = load i32, i32* %348
 %350 = icmp ne i32 %349, 0
 br i1 %350, label %385, label %351
351:
 %352 = load i8*, i8** %94
 %353 = getelementptr %struct.mz_zip_archive, i8* %352, i32 0, i32 0
 %354 = load i64, i64* %353
 %355 = load i32, i32* %113
 %356 = zext i32 %355 to i64
 %357 = add i64 %354, %356
 %358 = add i64 %357, 30
 %359 = load i64, i64* %117
 %360 = add i64 %358, %359
 %361 = add i64 %360, 46
 %362 = load i64, i64* %117
 %363 = add i64 %361, %362
 %364 = load i16, i16* %99
 %365 = zext i16 %364 to i64
 %366 = add i64 %363, %365
 %367 = load i32, i32* %105
 %368 = zext i32 %367 to i64
 %369 = add i64 %366, %368
 %370 = load i8*, i8** %121
 %371 = getelementptr %struct.mz_zip_internal_state_tag, i8* %370, i32 0, i32 0
 %372 = getelementptr %struct.mz_zip_array, i8* %371, i32 0, i32 1
 %373 = load i64, i64* %372
 %374 = add i64 %369, %373
 %375 = add i64 %374, 22
 %376 = load i32, i32* %107
 %377 = zext i32 %376 to i64
 %378 = add i64 %375, %377
 %379 = add i64 %378, 16
 %380 = icmp ugt i64 %379, 4294967295
 br i1 %380, label %381, label %384
381:
 %382 = load i8*, i8** %121
 %383 = getelementptr %struct.mz_zip_internal_state_tag, i8* %382, i32 0, i32 4
 store i32 1, i32* %383
 br label %384
384:
 br label %385
385:
 %386 = load i64, i64* %117
 %387 = icmp ne i64 %386, 0
 br i1 %387, label %388, label %414
388:
 %389 = load i8*, i8** %95
 %390 = load i64, i64* %117
 %391 = sub i64 %390, 1
 %392 = getelementptr i8, i8* %389, i64 %391
 %393 = load i8, i8* %392
 %394 = sext i8 %393 to i32
 %395 = icmp eq i32 %394, 47
 br i1 %395, label %396, label %414
396:
 %397 = load i32, i32* %112
 %398 = or i32 %397, 16
 store i32 %398, i32* %112
 %399 = load i64, i64* %97
 %400 = icmp ne i64 %399, 0
 br i1 %400, label %404, label %401
401:
 %402 = load i64, i64* %101
 %403 = icmp ne i64 %402, 0
 br i1 %403, label %404, label %413
404:
 %405 = load i8*, i8** %94
 store i8* %405, i8** %63
 store i32 24, i32* %64
 %406 = load i8*, i8** %63
 %407 = icmp ne i8* %406, null
 br i1 %407, label %408, label %412
408:
 %409 = load i32, i32* %64
 %410 = load i8*, i8** %63
 %411 = getelementptr %struct.mz_zip_archive, i8* %410, i32 0, i32 5
 store i32 %409, i32* %411
 br label %412
412:
 store i32 0, i32* %93
 br label %1212
413:
 br label %414
414:
 %415 = load i8*, i8** %94
 %416 = load i8*, i8** %121
 %417 = getelementptr %struct.mz_zip_internal_state_tag, i8* %416, i32 0, i32 0
 %418 = load i64, i64* %117
 %419 = add i64 46, %418
 %420 = load i16, i16* %99
 %421 = zext i16 %420 to i64
 %422 = add i64 %419, %421
 %423 = load i8*, i8** %121
 %424 = getelementptr %struct.mz_zip_internal_state_tag, i8* %423, i32 0, i32 4
 %425 = load i32, i32* %424
 %426 = icmp ne i32 %425, 0
 %427 = zext i1 %426 to i64
 %428 = select i1 %426, i64 28, i64 0
 %429 = add i64 %422, %428
 store i8* %415, i8** %45
 store i8* %417, i8** %46
 store i64 %429, i64* %47
 %430 = load i8*, i8** %45
 %431 = load i8*, i8** %46
 %432 = load i8*, i8** %46
 %433 = getelementptr %struct.mz_zip_array, i8* %432, i32 0, i32 1
 %434 = load i64, i64* %433
 %435 = load i64, i64* %47
 %436 = add i64 %434, %435
 store i8* %430, i8** %21
 store i8* %431, i8** %22
 store i64 %436, i64* %23
 store i32 1, i32* %24
 %437 = load i64, i64* %23
 %438 = load i8*, i8** %22
 %439 = getelementptr %struct.mz_zip_array, i8* %438, i32 0, i32 2
 %440 = load i64, i64* %439
 %441 = icmp ugt i64 %437, %440
 br i1 %441, label %442, label %451
442:
 %443 = load i8*, i8** %21
 %444 = load i8*, i8** %22
 %445 = load i64, i64* %23
 %446 = load i32, i32* %24
 %447 = call i32 @mz_zip_array_ensure_capacity (i8* %443, i8* %444, i64 %445, i32 %446)
 %448 = icmp ne i32 %447, 0
 br i1 %448, label %450, label %449
449:
 store i32 0, i32* %20
 br label %452
450:
 br label %451
451:
 store i32 1, i32* %20
 br label %452
452:
 %453 = load i32, i32* %20
 %454 = icmp ne i32 %453, 0
 br i1 %454, label %455, label %484
455:
 %456 = load i8*, i8** %94
 %457 = load i8*, i8** %121
 %458 = getelementptr %struct.mz_zip_internal_state_tag, i8* %457, i32 0, i32 1
 store i8* %456, i8** %48
 store i8* %458, i8** %49
 store i64 1, i64* %50
 %459 = load i8*, i8** %48
 %460 = load i8*, i8** %49
 %461 = load i8*, i8** %49
 %462 = getelementptr %struct.mz_zip_array, i8* %461, i32 0, i32 1
 %463 = load i64, i64* %462
 %464 = load i64, i64* %50
 %465 = add i64 %463, %464
 store i8* %459, i8** %16
 store i8* %460, i8** %17
 store i64 %465, i64* %18
 store i32 1, i32* %19
 %466 = load i64, i64* %18
 %467 = load i8*, i8** %17
 %468 = getelementptr %struct.mz_zip_array, i8* %467, i32 0, i32 2
 %469 = load i64, i64* %468
 %470 = icmp ugt i64 %466, %469
 br i1 %470, label %471, label %480
471:
 %472 = load i8*, i8** %16
 %473 = load i8*, i8** %17
 %474 = load i64, i64* %18
 %475 = load i32, i32* %19
 %476 = call i32 @mz_zip_array_ensure_capacity (i8* %472, i8* %473, i64 %474, i32 %475)
 %477 = icmp ne i32 %476, 0
 br i1 %477, label %479, label %478
478:
 store i32 0, i32* %15
 br label %481
479:
 br label %480
480:
 store i32 1, i32* %15
 br label %481
481:
 %482 = load i32, i32* %15
 %483 = icmp ne i32 %482, 0
 br i1 %483, label %493, label %484
484:
 %485 = load i8*, i8** %94
 store i8* %485, i8** %65
 store i32 16, i32* %66
 %486 = load i8*, i8** %65
 %487 = icmp ne i8* %486, null
 br i1 %487, label %488, label %492
488:
 %489 = load i32, i32* %66
 %490 = load i8*, i8** %65
 %491 = getelementptr %struct.mz_zip_archive, i8* %490, i32 0, i32 5
 store i32 %489, i32* %491
 br label %492
492:
 store i32 0, i32* %93
 br label %1212
493:
 %494 = load i32, i32* %120
 %495 = icmp ne i32 %494, 0
 br i1 %495, label %518, label %496
496:
 %497 = load i64, i64* %97
 %498 = icmp ne i64 %497, 0
 br i1 %498, label %499, label %518
499:
 %500 = load i8*, i8** %94
 %501 = getelementptr %struct.mz_zip_archive, i8* %500, i32 0, i32 7
 %502 = load i8*, i8** %501
 %503 = load i8*, i8** %94
 %504 = getelementptr %struct.mz_zip_archive, i8* %503, i32 0, i32 10
 %505 = load i8*, i8** %504
 %506 = call i8* %502 (i8* %505, i64 1, i64 319352)
 store i8* %506, i8** %119
 %507 = icmp eq i8* null, %506
 br i1 %507, label %508, label %517
508:
 %509 = load i8*, i8** %94
 store i8* %509, i8** %67
 store i32 16, i32* %68
 %510 = load i8*, i8** %67
 %511 = icmp ne i8* %510, null
 br i1 %511, label %512, label %516
512:
 %513 = load i32, i32* %68
 %514 = load i8*, i8** %67
 %515 = getelementptr %struct.mz_zip_archive, i8* %514, i32 0, i32 5
 store i32 %513, i32* %515
 br label %516
516:
 store i32 0, i32* %93
 br label %1212
517:
 br label %518
518:
 %519 = load i8*, i8** %94
 %520 = load i64, i64* %115
 %521 = load i32, i32* %113
 %522 = call i32 @mz_zip_writer_write_zeros (i8* %519, i64 %520, i32 %521)
 %523 = icmp ne i32 %522, 0
 br i1 %523, label %532, label %524
524:
 %525 = load i8*, i8** %94
 %526 = getelementptr %struct.mz_zip_archive, i8* %525, i32 0, i32 8
 %527 = load i8*, i8** %526
 %528 = load i8*, i8** %94
 %529 = getelementptr %struct.mz_zip_archive, i8* %528, i32 0, i32 10
 %530 = load i8*, i8** %529
 %531 = load i8*, i8** %119
 call void %527 (i8* %530, i8* %531)
 store i32 0, i32* %93
 br label %1212
532:
 %533 = load i32, i32* %113
 %534 = zext i32 %533 to i64
 %535 = load i64, i64* %114
 %536 = add i64 %535, %534
 store i64 %536, i64* %114
 %537 = load i8*, i8** %94
 %538 = getelementptr %struct.mz_zip_archive, i8* %537, i32 0, i32 6
 %539 = load i64, i64* %538
 %540 = icmp ne i64 %539, 0
 br i1 %540, label %541, label %557
541:
 %542 = load i64, i64* %114
 %543 = load i8*, i8** %94
 %544 = getelementptr %struct.mz_zip_archive, i8* %543, i32 0, i32 6
 %545 = load i64, i64* %544
 %546 = sub i64 %545, 1
 %547 = and i64 %542, %546
 %548 = icmp eq i64 %547, 0
 %549 = xor i1 %548, 1
 %550 = zext i1 %549 to i32
 %551 = sext i32 %550 to i64
 %552 = icmp ne i64 %551, 0
 br i1 %552, label %553, label %555
553:
 call void @__assert_rtn (i8* @__func__.mz_zip_writer_add_mem_ex_v2, i8* @.str.11, i32 7764, i8* @.str.22)
 unreachable
554:
 br label %556
555:
 br label %556
556:
 br label %557
557:
 %558 = load i32, i32* %113
 %559 = zext i32 %558 to i64
 %560 = load i64, i64* %115
 %561 = add i64 %560, %559
 store i64 %561, i64* %115
 %562 = getelementptr [30 x i8], i8* %118, i64 0, i64 0
 call void @memset (i8* %562, i8 0, i64 30, i1 0)
 %563 = load i32, i32* %120
 %564 = icmp ne i32 %563, 0
 br i1 %564, label %565, label %569
565:
 %566 = load i32, i32* %100
 %567 = and i32 %566, 1024
 %568 = icmp ne i32 %567, 0
 br i1 %568, label %569, label %570
569:
 store i16 8, i16* %108
 br label %570
570:
 %571 = load i8*, i8** %121
 %572 = getelementptr %struct.mz_zip_internal_state_tag, i8* %571, i32 0, i32 4
 %573 = load i32, i32* %572
 %574 = icmp ne i32 %573, 0
 br i1 %574, label %575, label %714
575:
 %576 = load i64, i64* %101
 %577 = icmp uge i64 %576, 4294967295
 br i1 %577, label %581, label %578
578:
 %579 = load i64, i64* %114
 %580 = icmp uge i64 %579, 4294967295
 br i1 %580, label %581, label %603
581:
 %582 = getelementptr [28 x i8], i8* %124, i64 0, i64 0
 store i8* %582, i8** %122
 %583 = getelementptr [28 x i8], i8* %124, i64 0, i64 0
 %584 = load i64, i64* %101
 %585 = icmp uge i64 %584, 4294967295
 br i1 %585, label %586, label %587
586:
 br label %588
587:
 br label %588
588:
 %589 = phi i8* [%101, %586], [null, %587]
 %590 = load i64, i64* %101
 %591 = icmp uge i64 %590, 4294967295
 br i1 %591, label %592, label %593
592:
 br label %594
593:
 br label %594
594:
 %595 = phi i8* [%116, %592], [null, %593]
 %596 = load i64, i64* %114
 %597 = icmp uge i64 %596, 4294967295
 br i1 %597, label %598, label %599
598:
 br label %600
599:
 br label %600
600:
 %601 = phi i8* [%114, %598], [null, %599]
 %602 = call i32 @mz_zip_writer_create_zip64_extra_data (i8* %583, i8* %589, i8* %595, i8* %601)
 store i32 %602, i32* %123
 br label %603
603:
 %604 = load i8*, i8** %94
 %605 = getelementptr [30 x i8], i8* %118, i64 0, i64 0
 %606 = load i64, i64* %117
 %607 = trunc i64 %606 to i16
 %608 = load i32, i32* %123
 %609 = load i32, i32* %105
 %610 = add i32 %608, %609
 %611 = trunc i32 %610 to i16
 %612 = load i16, i16* %108
 %613 = load i16, i16* %125
 %614 = load i16, i16* %109
 %615 = load i16, i16* %110
 %616 = call i32 @mz_zip_writer_create_local_dir_header (i8* %604, i8* %605, i16 %607, i16 %611, i64 0, i64 0, i32 0, i16 %612, i16 %613, i16 %614, i16 %615)
 %617 = icmp ne i32 %616, 0
 br i1 %617, label %627, label %618
618:
 %619 = load i8*, i8** %94
 store i8* %619, i8** %69
 store i32 27, i32* %70
 %620 = load i8*, i8** %69
 %621 = icmp ne i8* %620, null
 br i1 %621, label %622, label %626
622:
 %623 = load i32, i32* %70
 %624 = load i8*, i8** %69
 %625 = getelementptr %struct.mz_zip_archive, i8* %624, i32 0, i32 5
 store i32 %623, i32* %625
 br label %626
626:
 store i32 0, i32* %93
 br label %1212
627:
 %628 = load i8*, i8** %94
 %629 = getelementptr %struct.mz_zip_archive, i8* %628, i32 0, i32 12
 %630 = load i8*, i8** %629
 %631 = load i8*, i8** %94
 %632 = getelementptr %struct.mz_zip_archive, i8* %631, i32 0, i32 14
 %633 = load i8*, i8** %632
 %634 = load i64, i64* %114
 %635 = getelementptr [30 x i8], i8* %118, i64 0, i64 0
 %636 = call i64 %630 (i8* %633, i64 %634, i8* %635, i64 30)
 %637 = icmp ne i64 %636, 30
 br i1 %637, label %638, label %647
638:
 %639 = load i8*, i8** %94
 store i8* %639, i8** %71
 store i32 19, i32* %72
 %640 = load i8*, i8** %71
 %641 = icmp ne i8* %640, null
 br i1 %641, label %642, label %646
642:
 %643 = load i32, i32* %72
 %644 = load i8*, i8** %71
 %645 = getelementptr %struct.mz_zip_archive, i8* %644, i32 0, i32 5
 store i32 %643, i32* %645
 br label %646
646:
 store i32 0, i32* %93
 br label %1212
647:
 %648 = load i64, i64* %115
 %649 = add i64 %648, 30
 store i64 %649, i64* %115
 %650 = load i8*, i8** %94
 %651 = getelementptr %struct.mz_zip_archive, i8* %650, i32 0, i32 12
 %652 = load i8*, i8** %651
 %653 = load i8*, i8** %94
 %654 = getelementptr %struct.mz_zip_archive, i8* %653, i32 0, i32 14
 %655 = load i8*, i8** %654
 %656 = load i64, i64* %115
 %657 = load i8*, i8** %95
 %658 = load i64, i64* %117
 %659 = call i64 %652 (i8* %655, i64 %656, i8* %657, i64 %658)
 %660 = load i64, i64* %117
 %661 = icmp ne i64 %659, %660
 br i1 %661, label %662, label %678
662:
 %663 = load i8*, i8** %94
 %664 = getelementptr %struct.mz_zip_archive, i8* %663, i32 0, i32 8
 %665 = load i8*, i8** %664
 %666 = load i8*, i8** %94
 %667 = getelementptr %struct.mz_zip_archive, i8* %666, i32 0, i32 10
 %668 = load i8*, i8** %667
 %669 = load i8*, i8** %119
 call void %665 (i8* %668, i8* %669)
 %670 = load i8*, i8** %94
 store i8* %670, i8** %73
 store i32 19, i32* %74
 %671 = load i8*, i8** %73
 %672 = icmp ne i8* %671, null
 br i1 %672, label %673, label %677
673:
 %674 = load i32, i32* %74
 %675 = load i8*, i8** %73
 %676 = getelementptr %struct.mz_zip_archive, i8* %675, i32 0, i32 5
 store i32 %674, i32* %676
 br label %677
677:
 store i32 0, i32* %93
 br label %1212
678:
 %679 = load i64, i64* %117
 %680 = load i64, i64* %115
 %681 = add i64 %680, %679
 store i64 %681, i64* %115
 %682 = load i8*, i8** %122
 %683 = icmp ne i8* %682, null
 br i1 %683, label %684, label %713
684:
 %685 = load i8*, i8** %94
 %686 = getelementptr %struct.mz_zip_archive, i8* %685, i32 0, i32 12
 %687 = load i8*, i8** %686
 %688 = load i8*, i8** %94
 %689 = getelementptr %struct.mz_zip_archive, i8* %688, i32 0, i32 14
 %690 = load i8*, i8** %689
 %691 = load i64, i64* %115
 %692 = getelementptr [28 x i8], i8* %124, i64 0, i64 0
 %693 = load i32, i32* %123
 %694 = zext i32 %693 to i64
 %695 = call i64 %687 (i8* %690, i64 %691, i8* %692, i64 %694)
 %696 = load i32, i32* %123
 %697 = zext i32 %696 to i64
 %698 = icmp ne i64 %695, %697
 br i1 %698, label %699, label %708
699:
 %700 = load i8*, i8** %94
 store i8* %700, i8** %75
 store i32 19, i32* %76
 %701 = load i8*, i8** %75
 %702 = icmp ne i8* %701, null
 br i1 %702, label %703, label %707
703:
 %704 = load i32, i32* %76
 %705 = load i8*, i8** %75
 %706 = getelementptr %struct.mz_zip_archive, i8* %705, i32 0, i32 5
 store i32 %704, i32* %706
 br label %707
707:
 store i32 0, i32* %93
 br label %1212
708:
 %709 = load i32, i32* %123
 %710 = zext i32 %709 to i64
 %711 = load i64, i64* %115
 %712 = add i64 %711, %710
 store i64 %712, i64* %115
 br label %713
713:
 br label %806
714:
 %715 = load i64, i64* %116
 %716 = icmp ugt i64 %715, 4294967295
 br i1 %716, label %720, label %717
717:
 %718 = load i64, i64* %115
 %719 = icmp ugt i64 %718, 4294967295
 br i1 %719, label %720, label %729
720:
 %721 = load i8*, i8** %94
 store i8* %721, i8** %77
 store i32 29, i32* %78
 %722 = load i8*, i8** %77
 %723 = icmp ne i8* %722, null
 br i1 %723, label %724, label %728
724:
 %725 = load i32, i32* %78
 %726 = load i8*, i8** %77
 %727 = getelementptr %struct.mz_zip_archive, i8* %726, i32 0, i32 5
 store i32 %725, i32* %727
 br label %728
728:
 store i32 0, i32* %93
 br label %1212
729:
 %730 = load i8*, i8** %94
 %731 = getelementptr [30 x i8], i8* %118, i64 0, i64 0
 %732 = load i64, i64* %117
 %733 = trunc i64 %732 to i16
 %734 = load i32, i32* %105
 %735 = trunc i32 %734 to i16
 %736 = load i16, i16* %108
 %737 = load i16, i16* %125
 %738 = load i16, i16* %109
 %739 = load i16, i16* %110
 %740 = call i32 @mz_zip_writer_create_local_dir_header (i8* %730, i8* %731, i16 %733, i16 %735, i64 0, i64 0, i32 0, i16 %736, i16 %737, i16 %738, i16 %739)
 %741 = icmp ne i32 %740, 0
 br i1 %741, label %751, label %742
742:
 %743 = load i8*, i8** %94
 store i8* %743, i8** %79
 store i32 27, i32* %80
 %744 = load i8*, i8** %79
 %745 = icmp ne i8* %744, null
 br i1 %745, label %746, label %750
746:
 %747 = load i32, i32* %80
 %748 = load i8*, i8** %79
 %749 = getelementptr %struct.mz_zip_archive, i8* %748, i32 0, i32 5
 store i32 %747, i32* %749
 br label %750
750:
 store i32 0, i32* %93
 br label %1212
751:
 %752 = load i8*, i8** %94
 %753 = getelementptr %struct.mz_zip_archive, i8* %752, i32 0, i32 12
 %754 = load i8*, i8** %753
 %755 = load i8*, i8** %94
 %756 = getelementptr %struct.mz_zip_archive, i8* %755, i32 0, i32 14
 %757 = load i8*, i8** %756
 %758 = load i64, i64* %114
 %759 = getelementptr [30 x i8], i8* %118, i64 0, i64 0
 %760 = call i64 %754 (i8* %757, i64 %758, i8* %759, i64 30)
 %761 = icmp ne i64 %760, 30
 br i1 %761, label %762, label %771
762:
 %763 = load i8*, i8** %94
 store i8* %763, i8** %81
 store i32 19, i32* %82
 %764 = load i8*, i8** %81
 %765 = icmp ne i8* %764, null
 br i1 %765, label %766, label %770
766:
 %767 = load i32, i32* %82
 %768 = load i8*, i8** %81
 %769 = getelementptr %struct.mz_zip_archive, i8* %768, i32 0, i32 5
 store i32 %767, i32* %769
 br label %770
770:
 store i32 0, i32* %93
 br label %1212
771:
 %772 = load i64, i64* %115
 %773 = add i64 %772, 30
 store i64 %773, i64* %115
 %774 = load i8*, i8** %94
 %775 = getelementptr %struct.mz_zip_archive, i8* %774, i32 0, i32 12
 %776 = load i8*, i8** %775
 %777 = load i8*, i8** %94
 %778 = getelementptr %struct.mz_zip_archive, i8* %777, i32 0, i32 14
 %779 = load i8*, i8** %778
 %780 = load i64, i64* %115
 %781 = load i8*, i8** %95
 %782 = load i64, i64* %117
 %783 = call i64 %776 (i8* %779, i64 %780, i8* %781, i64 %782)
 %784 = load i64, i64* %117
 %785 = icmp ne i64 %783, %784
 br i1 %785, label %786, label %802
786:
 %787 = load i8*, i8** %94
 %788 = getelementptr %struct.mz_zip_archive, i8* %787, i32 0, i32 8
 %789 = load i8*, i8** %788
 %790 = load i8*, i8** %94
 %791 = getelementptr %struct.mz_zip_archive, i8* %790, i32 0, i32 10
 %792 = load i8*, i8** %791
 %793 = load i8*, i8** %119
 call void %789 (i8* %792, i8* %793)
 %794 = load i8*, i8** %94
 store i8* %794, i8** %83
 store i32 19, i32* %84
 %795 = load i8*, i8** %83
 %796 = icmp ne i8* %795, null
 br i1 %796, label %797, label %801
797:
 %798 = load i32, i32* %84
 %799 = load i8*, i8** %83
 %800 = getelementptr %struct.mz_zip_archive, i8* %799, i32 0, i32 5
 store i32 %798, i32* %800
 br label %801
801:
 store i32 0, i32* %93
 br label %1212
802:
 %803 = load i64, i64* %117
 %804 = load i64, i64* %115
 %805 = add i64 %804, %803
 store i64 %805, i64* %115
 br label %806
806:
 %807 = load i32, i32* %105
 %808 = icmp ugt i32 %807, 0
 br i1 %808, label %809, label %838
809:
 %810 = load i8*, i8** %94
 %811 = getelementptr %struct.mz_zip_archive, i8* %810, i32 0, i32 12
 %812 = load i8*, i8** %811
 %813 = load i8*, i8** %94
 %814 = getelementptr %struct.mz_zip_archive, i8* %813, i32 0, i32 14
 %815 = load i8*, i8** %814
 %816 = load i64, i64* %115
 %817 = load i8*, i8** %104
 %818 = load i32, i32* %105
 %819 = zext i32 %818 to i64
 %820 = call i64 %812 (i8* %815, i64 %816, i8* %817, i64 %819)
 %821 = load i32, i32* %105
 %822 = zext i32 %821 to i64
 %823 = icmp ne i64 %820, %822
 br i1 %823, label %824, label %833
824:
 %825 = load i8*, i8** %94
 store i8* %825, i8** %85
 store i32 19, i32* %86
 %826 = load i8*, i8** %85
 %827 = icmp ne i8* %826, null
 br i1 %827, label %828, label %832
828:
 %829 = load i32, i32* %86
 %830 = load i8*, i8** %85
 %831 = getelementptr %struct.mz_zip_archive, i8* %830, i32 0, i32 5
 store i32 %829, i32* %831
 br label %832
832:
 store i32 0, i32* %93
 br label %1212
833:
 %834 = load i32, i32* %105
 %835 = zext i32 %834 to i64
 %836 = load i64, i64* %115
 %837 = add i64 %836, %835
 store i64 %837, i64* %115
 br label %838
838:
 %839 = load i32, i32* %120
 %840 = icmp ne i32 %839, 0
 br i1 %840, label %841, label %875
841:
 %842 = load i8*, i8** %94
 %843 = getelementptr %struct.mz_zip_archive, i8* %842, i32 0, i32 12
 %844 = load i8*, i8** %843
 %845 = load i8*, i8** %94
 %846 = getelementptr %struct.mz_zip_archive, i8* %845, i32 0, i32 14
 %847 = load i8*, i8** %846
 %848 = load i64, i64* %115
 %849 = load i8*, i8** %96
 %850 = load i64, i64* %97
 %851 = call i64 %844 (i8* %847, i64 %848, i8* %849, i64 %850)
 %852 = load i64, i64* %97
 %853 = icmp ne i64 %851, %852
 br i1 %853, label %854, label %870
854:
 %855 = load i8*, i8** %94
 %856 = getelementptr %struct.mz_zip_archive, i8* %855, i32 0, i32 8
 %857 = load i8*, i8** %856
 %858 = load i8*, i8** %94
 %859 = getelementptr %struct.mz_zip_archive, i8* %858, i32 0, i32 10
 %860 = load i8*, i8** %859
 %861 = load i8*, i8** %119
 call void %857 (i8* %860, i8* %861)
 %862 = load i8*, i8** %94
 store i8* %862, i8** %87
 store i32 19, i32* %88
 %863 = load i8*, i8** %87
 %864 = icmp ne i8* %863, null
 br i1 %864, label %865, label %869
865:
 %866 = load i32, i32* %88
 %867 = load i8*, i8** %87
 %868 = getelementptr %struct.mz_zip_archive, i8* %867, i32 0, i32 5
 store i32 %866, i32* %868
 br label %869
869:
 store i32 0, i32* %93
 br label %1212
870:
 %871 = load i64, i64* %97
 %872 = load i64, i64* %115
 %873 = add i64 %872, %871
 store i64 %873, i64* %115
 %874 = load i64, i64* %97
 store i64 %874, i64* %116
 br label %917
875:
 %876 = load i64, i64* %97
 %877 = icmp ne i64 %876, 0
 br i1 %877, label %878, label %916
878:
 %879 = load i8*, i8** %94
 %880 = getelementptr %struct.mz_zip_writer_add_state, i8* %127, i32 0, i32 0
 store i8* %879, i8** %880
 %881 = load i64, i64* %115
 %882 = getelementptr %struct.mz_zip_writer_add_state, i8* %127, i32 0, i32 1
 store i64 %881, i64* %882
 %883 = getelementptr %struct.mz_zip_writer_add_state, i8* %127, i32 0, i32 2
 store i64 0, i64* %883
 %884 = load i8*, i8** %119
 %885 = load i32, i32* %111
 %886 = call i32 @tdefl_create_comp_flags_from_zip_params (i32 %885, i32 -15, i32 0)
 %887 = call i32 @tdefl_init (i8* %884, i8* @mz_zip_writer_add_put_buf_callback, i8* %127, i32 %886)
 %888 = icmp ne i32 %887, 0
 br i1 %888, label %895, label %889
889:
 %890 = load i8*, i8** %119
 %891 = load i8*, i8** %96
 %892 = load i64, i64* %97
 %893 = call i32 @tdefl_compress_buffer (i8* %890, i8* %891, i64 %892, i32 4)
 %894 = icmp ne i32 %893, 1
 br i1 %894, label %895, label %911
895:
 %896 = load i8*, i8** %94
 %897 = getelementptr %struct.mz_zip_archive, i8* %896, i32 0, i32 8
 %898 = load i8*, i8** %897
 %899 = load i8*, i8** %94
 %900 = getelementptr %struct.mz_zip_archive, i8* %899, i32 0, i32 10
 %901 = load i8*, i8** %900
 %902 = load i8*, i8** %119
 call void %898 (i8* %901, i8* %902)
 %903 = load i8*, i8** %94
 store i8* %903, i8** %89
 store i32 12, i32* %90
 %904 = load i8*, i8** %89
 %905 = icmp ne i8* %904, null
 br i1 %905, label %906, label %910
906:
 %907 = load i32, i32* %90
 %908 = load i8*, i8** %89
 %909 = getelementptr %struct.mz_zip_archive, i8* %908, i32 0, i32 5
 store i32 %907, i32* %909
 br label %910
910:
 store i32 0, i32* %93
 br label %1212
911:
 %912 = getelementptr %struct.mz_zip_writer_add_state, i8* %127, i32 0, i32 2
 %913 = load i64, i64* %912
 store i64 %913, i64* %116
 %914 = getelementptr %struct.mz_zip_writer_add_state, i8* %127, i32 0, i32 1
 %915 = load i64, i64* %914
 store i64 %915, i64* %115
 br label %916
916:
 br label %917
917:
 %918 = load i8*, i8** %94
 %919 = getelementptr %struct.mz_zip_archive, i8* %918, i32 0, i32 8
 %920 = load i8*, i8** %919
 %921 = load i8*, i8** %94
 %922 = getelementptr %struct.mz_zip_archive, i8* %921, i32 0, i32 10
 %923 = load i8*, i8** %922
 %924 = load i8*, i8** %119
 call void %920 (i8* %923, i8* %924)
 store i8* null, i8** %119
 %925 = load i64, i64* %101
 %926 = icmp ne i64 %925, 0
 br i1 %926, label %927, label %1156
927:
 store i32 16, i32* %129
 %928 = load i16, i16* %125
 %929 = zext i16 %928 to i32
 %930 = and i32 %929, 8
 %931 = icmp ne i32 %930, 0
 %932 = xor i1 %931, 1
 %933 = zext i1 %932 to i32
 %934 = sext i32 %933 to i64
 %935 = icmp ne i64 %934, 0
 br i1 %935, label %936, label %938
936:
 call void @__assert_rtn (i8* @__func__.mz_zip_writer_add_mem_ex_v2, i8* @.str.11, i32 7873, i8* @.str.23)
 unreachable
937:
 br label %939
938:
 br label %939
939:
 %940 = getelementptr [24 x i8], i8* %128, i64 0, i64 0
 %941 = getelementptr i8, i8* %940, i64 0
 store i8* %941, i8** %37
 store i32 134695760, i32* %38
 %942 = load i32, i32* %38
 %943 = trunc i32 %942 to i8
 %944 = load i8*, i8** %37
 store i8 %943, i8* %944
 %945 = load i32, i32* %38
 %946 = lshr i32 %945, 8
 %947 = trunc i32 %946 to i8
 %948 = load i8*, i8** %37
 %949 = getelementptr i8, i8* %948, i64 1
 store i8 %947, i8* %949
 %950 = load i32, i32* %38
 %951 = lshr i32 %950, 16
 %952 = trunc i32 %951 to i8
 %953 = load i8*, i8** %37
 %954 = getelementptr i8, i8* %953, i64 2
 store i8 %952, i8* %954
 %955 = load i32, i32* %38
 %956 = lshr i32 %955, 24
 %957 = trunc i32 %956 to i8
 %958 = load i8*, i8** %37
 %959 = getelementptr i8, i8* %958, i64 3
 store i8 %957, i8* %959
 %960 = getelementptr [24 x i8], i8* %128, i64 0, i64 0
 %961 = getelementptr i8, i8* %960, i64 4
 %962 = load i32, i32* %102
 store i8* %961, i8** %39
 store i32 %962, i32* %40
 %963 = load i32, i32* %40
 %964 = trunc i32 %963 to i8
 %965 = load i8*, i8** %39
 store i8 %964, i8* %965
 %966 = load i32, i32* %40
 %967 = lshr i32 %966, 8
 %968 = trunc i32 %967 to i8
 %969 = load i8*, i8** %39
 %970 = getelementptr i8, i8* %969, i64 1
 store i8 %968, i8* %970
 %971 = load i32, i32* %40
 %972 = lshr i32 %971, 16
 %973 = trunc i32 %972 to i8
 %974 = load i8*, i8** %39
 %975 = getelementptr i8, i8* %974, i64 2
 store i8 %973, i8* %975
 %976 = load i32, i32* %40
 %977 = lshr i32 %976, 24
 %978 = trunc i32 %977 to i8
 %979 = load i8*, i8** %39
 %980 = getelementptr i8, i8* %979, i64 3
 store i8 %978, i8* %980
 %981 = load i8*, i8** %122
 %982 = icmp eq i8* %981, null
 br i1 %982, label %983, label %1040
983:
 %984 = load i64, i64* %116
 %985 = icmp ugt i64 %984, 4294967295
 br i1 %985, label %986, label %995
986:
 %987 = load i8*, i8** %94
 store i8* %987, i8** %91
 store i32 29, i32* %92
 %988 = load i8*, i8** %91
 %989 = icmp ne i8* %988, null
 br i1 %989, label %990, label %994
990:
 %991 = load i32, i32* %92
 %992 = load i8*, i8** %91
 %993 = getelementptr %struct.mz_zip_archive, i8* %992, i32 0, i32 5
 store i32 %991, i32* %993
 br label %994
994:
 store i32 0, i32* %93
 br label %1212
995:
 %996 = getelementptr [24 x i8], i8* %128, i64 0, i64 0
 %997 = getelementptr i8, i8* %996, i64 8
 %998 = load i64, i64* %116
 %999 = trunc i64 %998 to i32
 store i8* %997, i8** %41
 store i32 %999, i32* %42
 %1000 = load i32, i32* %42
 %1001 = trunc i32 %1000 to i8
 %1002 = load i8*, i8** %41
 store i8 %1001, i8* %1002
 %1003 = load i32, i32* %42
 %1004 = lshr i32 %1003, 8
 %1005 = trunc i32 %1004 to i8
 %1006 = load i8*, i8** %41
 %1007 = getelementptr i8, i8* %1006, i64 1
 store i8 %1005, i8* %1007
 %1008 = load i32, i32* %42
 %1009 = lshr i32 %1008, 16
 %1010 = trunc i32 %1009 to i8
 %1011 = load i8*, i8** %41
 %1012 = getelementptr i8, i8* %1011, i64 2
 store i8 %1010, i8* %1012
 %1013 = load i32, i32* %42
 %1014 = lshr i32 %1013, 24
 %1015 = trunc i32 %1014 to i8
 %1016 = load i8*, i8** %41
 %1017 = getelementptr i8, i8* %1016, i64 3
 store i8 %1015, i8* %1017
 %1018 = getelementptr [24 x i8], i8* %128, i64 0, i64 0
 %1019 = getelementptr i8, i8* %1018, i64 12
 %1020 = load i64, i64* %101
 %1021 = trunc i64 %1020 to i32
 store i8* %1019, i8** %43
 store i32 %1021, i32* %44
 %1022 = load i32, i32* %44
 %1023 = trunc i32 %1022 to i8
 %1024 = load i8*, i8** %43
 store i8 %1023, i8* %1024
 %1025 = load i32, i32* %44
 %1026 = lshr i32 %1025, 8
 %1027 = trunc i32 %1026 to i8
 %1028 = load i8*, i8** %43
 %1029 = getelementptr i8, i8* %1028, i64 1
 store i8 %1027, i8* %1029
 %1030 = load i32, i32* %44
 %1031 = lshr i32 %1030, 16
 %1032 = trunc i32 %1031 to i8
 %1033 = load i8*, i8** %43
 %1034 = getelementptr i8, i8* %1033, i64 2
 store i8 %1032, i8* %1034
 %1035 = load i32, i32* %44
 %1036 = lshr i32 %1035, 24
 %1037 = trunc i32 %1036 to i8
 %1038 = load i8*, i8** %43
 %1039 = getelementptr i8, i8* %1038, i64 3
 store i8 %1037, i8* %1039
 br label %1135
1040:
 %1041 = getelementptr [24 x i8], i8* %128, i64 0, i64 0
 %1042 = getelementptr i8, i8* %1041, i64 8
 %1043 = load i64, i64* %116
 store i8* %1042, i8** %29
 store i64 %1043, i64* %30
 %1044 = load i8*, i8** %29
 %1045 = load i64, i64* %30
 %1046 = trunc i64 %1045 to i32
 store i8* %1044, i8** %25
 store i32 %1046, i32* %26
 %1047 = load i32, i32* %26
 %1048 = trunc i32 %1047 to i8
 %1049 = load i8*, i8** %25
 store i8 %1048, i8* %1049
 %1050 = load i32, i32* %26
 %1051 = lshr i32 %1050, 8
 %1052 = trunc i32 %1051 to i8
 %1053 = load i8*, i8** %25
 %1054 = getelementptr i8, i8* %1053, i64 1
 store i8 %1052, i8* %1054
 %1055 = load i32, i32* %26
 %1056 = lshr i32 %1055, 16
 %1057 = trunc i32 %1056 to i8
 %1058 = load i8*, i8** %25
 %1059 = getelementptr i8, i8* %1058, i64 2
 store i8 %1057, i8* %1059
 %1060 = load i32, i32* %26
 %1061 = lshr i32 %1060, 24
 %1062 = trunc i32 %1061 to i8
 %1063 = load i8*, i8** %25
 %1064 = getelementptr i8, i8* %1063, i64 3
 store i8 %1062, i8* %1064
 %1065 = load i8*, i8** %29
 %1066 = getelementptr i8, i8* %1065, i64 4
 %1067 = load i64, i64* %30
 %1068 = lshr i64 %1067, 32
 %1069 = trunc i64 %1068 to i32
 store i8* %1066, i8** %27
 store i32 %1069, i32* %28
 %1070 = load i32, i32* %28
 %1071 = trunc i32 %1070 to i8
 %1072 = load i8*, i8** %27
 store i8 %1071, i8* %1072
 %1073 = load i32, i32* %28
 %1074 = lshr i32 %1073, 8
 %1075 = trunc i32 %1074 to i8
 %1076 = load i8*, i8** %27
 %1077 = getelementptr i8, i8* %1076, i64 1
 store i8 %1075, i8* %1077
 %1078 = load i32, i32* %28
 %1079 = lshr i32 %1078, 16
 %1080 = trunc i32 %1079 to i8
 %1081 = load i8*, i8** %27
 %1082 = getelementptr i8, i8* %1081, i64 2
 store i8 %1080, i8* %1082
 %1083 = load i32, i32* %28
 %1084 = lshr i32 %1083, 24
 %1085 = trunc i32 %1084 to i8
 %1086 = load i8*, i8** %27
 %1087 = getelementptr i8, i8* %1086, i64 3
 store i8 %1085, i8* %1087
 %1088 = getelementptr [24 x i8], i8* %128, i64 0, i64 0
 %1089 = getelementptr i8, i8* %1088, i64 16
 %1090 = load i64, i64* %101
 store i8* %1089, i8** %35
 store i64 %1090, i64* %36
 %1091 = load i8*, i8** %35
 %1092 = load i64, i64* %36
 %1093 = trunc i64 %1092 to i32
 store i8* %1091, i8** %31
 store i32 %1093, i32* %32
 %1094 = load i32, i32* %32
 %1095 = trunc i32 %1094 to i8
 %1096 = load i8*, i8** %31
 store i8 %1095, i8* %1096
 %1097 = load i32, i32* %32
 %1098 = lshr i32 %1097, 8
 %1099 = trunc i32 %1098 to i8
 %1100 = load i8*, i8** %31
 %1101 = getelementptr i8, i8* %1100, i64 1
 store i8 %1099, i8* %1101
 %1102 = load i32, i32* %32
 %1103 = lshr i32 %1102, 16
 %1104 = trunc i32 %1103 to i8
 %1105 = load i8*, i8** %31
 %1106 = getelementptr i8, i8* %1105, i64 2
 store i8 %1104, i8* %1106
 %1107 = load i32, i32* %32
 %1108 = lshr i32 %1107, 24
 %1109 = trunc i32 %1108 to i8
 %1110 = load i8*, i8** %31
 %1111 = getelementptr i8, i8* %1110, i64 3
 store i8 %1109, i8* %1111
 %1112 = load i8*, i8** %35
 %1113 = getelementptr i8, i8* %1112, i64 4
 %1114 = load i64, i64* %36
 %1115 = lshr i64 %1114, 32
 %1116 = trunc i64 %1115 to i32
 store i8* %1113, i8** %33
 store i32 %1116, i32* %34
 %1117 = load i32, i32* %34
 %1118 = trunc i32 %1117 to i8
 %1119 = load i8*, i8** %33
 store i8 %1118, i8* %1119
 %1120 = load i32, i32* %34
 %1121 = lshr i32 %1120, 8
 %1122 = trunc i32 %1121 to i8
 %1123 = load i8*, i8** %33
 %1124 = getelementptr i8, i8* %1123, i64 1
 store i8 %1122, i8* %1124
 %1125 = load i32, i32* %34
 %1126 = lshr i32 %1125, 16
 %1127 = trunc i32 %1126 to i8
 %1128 = load i8*, i8** %33
 %1129 = getelementptr i8, i8* %1128, i64 2
 store i8 %1127, i8* %1129
 %1130 = load i32, i32* %34
 %1131 = lshr i32 %1130, 24
 %1132 = trunc i32 %1131 to i8
 %1133 = load i8*, i8** %33
 %1134 = getelementptr i8, i8* %1133, i64 3
 store i8 %1132, i8* %1134
 store i32 24, i32* %129
 br label %1135
1135:
 %1136 = load i8*, i8** %94
 %1137 = getelementptr %struct.mz_zip_archive, i8* %1136, i32 0, i32 12
 %1138 = load i8*, i8** %1137
 %1139 = load i8*, i8** %94
 %1140 = getelementptr %struct.mz_zip_archive, i8* %1139, i32 0, i32 14
 %1141 = load i8*, i8** %1140
 %1142 = load i64, i64* %115
 %1143 = getelementptr [24 x i8], i8* %128, i64 0, i64 0
 %1144 = load i32, i32* %129
 %1145 = zext i32 %1144 to i64
 %1146 = call i64 %1138 (i8* %1141, i64 %1142, i8* %1143, i64 %1145)
 %1147 = load i32, i32* %129
 %1148 = zext i32 %1147 to i64
 %1149 = icmp ne i64 %1146, %1148
 br i1 %1149, label %1150, label %1151
1150:
 store i32 0, i32* %93
 br label %1212
1151:
 %1152 = load i32, i32* %129
 %1153 = zext i32 %1152 to i64
 %1154 = load i64, i64* %115
 %1155 = add i64 %1154, %1153
 store i64 %1155, i64* %115
 br label %1156
1156:
 %1157 = load i8*, i8** %122
 %1158 = icmp ne i8* %1157, null
 br i1 %1158, label %1159, label %1180
1159:
 %1160 = getelementptr [28 x i8], i8* %124, i64 0, i64 0
 %1161 = load i64, i64* %101
 %1162 = icmp uge i64 %1161, 4294967295
 br i1 %1162, label %1163, label %1164
1163:
 br label %1165
1164:
 br label %1165
1165:
 %1166 = phi i8* [%101, %1163], [null, %1164]
 %1167 = load i64, i64* %101
 %1168 = icmp uge i64 %1167, 4294967295
 br i1 %1168, label %1169, label %1170
1169:
 br label %1171
1170:
 br label %1171
1171:
 %1172 = phi i8* [%116, %1169], [null, %1170]
 %1173 = load i64, i64* %114
 %1174 = icmp uge i64 %1173, 4294967295
 br i1 %1174, label %1175, label %1176
1175:
 br label %1177
1176:
 br label %1177
1177:
 %1178 = phi i8* [%114, %1175], [null, %1176]
 %1179 = call i32 @mz_zip_writer_create_zip64_extra_data (i8* %1160, i8* %1166, i8* %1172, i8* %1178)
 store i32 %1179, i32* %123
 br label %1180
1180:
 %1181 = load i8*, i8** %94
 %1182 = load i8*, i8** %95
 %1183 = load i64, i64* %117
 %1184 = trunc i64 %1183 to i16
 %1185 = load i8*, i8** %122
 %1186 = load i32, i32* %123
 %1187 = trunc i32 %1186 to i16
 %1188 = load i8*, i8** %98
 %1189 = load i16, i16* %99
 %1190 = load i64, i64* %101
 %1191 = load i64, i64* %116
 %1192 = load i32, i32* %102
 %1193 = load i16, i16* %108
 %1194 = load i16, i16* %125
 %1195 = load i16, i16* %109
 %1196 = load i16, i16* %110
 %1197 = load i64, i64* %114
 %1198 = load i32, i32* %112
 %1199 = load i8*, i8** %106
 %1200 = load i32, i32* %107
 %1201 = call i32 @mz_zip_writer_add_to_central_dir (i8* %1181, i8* %1182, i16 %1184, i8* %1185, i16 %1187, i8* %1188, i16 %1189, i64 %1190, i64 %1191, i32 %1192, i16 %1193, i16 %1194, i16 %1195, i16 %1196, i64 %1197, i32 %1198, i8* %1199, i32 %1200)
 %1202 = icmp ne i32 %1201, 0
 br i1 %1202, label %1204, label %1203
1203:
 store i32 0, i32* %93
 br label %1212
1204:
 %1205 = load i8*, i8** %94
 %1206 = getelementptr %struct.mz_zip_archive, i8* %1205, i32 0, i32 2
 %1207 = load i32, i32* %1206
 %1208 = add i32 %1207, 1
 store i32 %1208, i32* %1206
 %1209 = load i64, i64* %115
 %1210 = load i8*, i8** %94
 %1211 = getelementptr %struct.mz_zip_archive, i8* %1210, i32 0, i32 0
 store i64 %1209, i64* %1211
 store i32 1, i32* %93
 br label %1212
1212:
 %1213 = load i32, i32* %93
 ret i32 %1213
}

define i32 @mz_zip_writer_validate_archive_name (i8* %0) {
 %2 = alloca i32
 %3 = alloca i8*
 store i8* %0, i8** %3
 %4 = load i8*, i8** %3
 %5 = load i8, i8* %4
 %6 = sext i8 %5 to i32
 %7 = icmp eq i32 %6, 47
 br i1 %7, label %8, label %9
8:
 store i32 0, i32* %2
 br label %10
9:
 store i32 1, i32* %2
 br label %10
10:
 %11 = load i32, i32* %2
 ret i32 %11
}

define void @mz_zip_time_t_to_dos_time (i64 %0, i8* %1, i8* %2) {
 %4 = alloca i64
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i8*
 store i64 %0, i64* %4
 store i8* %1, i8** %5
 store i8* %2, i8** %6
 %8 = call i8* @localtime (i8* %4)
 store i8* %8, i8** %7
 %9 = load i8*, i8** %7
 %10 = getelementptr %struct.tm, i8* %9, i32 0, i32 2
 %11 = load i32, i32* %10
 %12 = shl i32 %11, 11
 %13 = load i8*, i8** %7
 %14 = getelementptr %struct.tm, i8* %13, i32 0, i32 1
 %15 = load i32, i32* %14
 %16 = shl i32 %15, 5
 %17 = add i32 %12, %16
 %18 = load i8*, i8** %7
 %19 = getelementptr %struct.tm, i8* %18, i32 0, i32 0
 %20 = load i32, i32* %19
 %21 = ashr i32 %20, 1
 %22 = add i32 %17, %21
 %23 = trunc i32 %22 to i16
 %24 = load i8*, i8** %5
 store i16 %23, i16* %24
 %25 = load i8*, i8** %7
 %26 = getelementptr %struct.tm, i8* %25, i32 0, i32 5
 %27 = load i32, i32* %26
 %28 = add i32 %27, 1900
 %29 = sub i32 %28, 1980
 %30 = shl i32 %29, 9
 %31 = load i8*, i8** %7
 %32 = getelementptr %struct.tm, i8* %31, i32 0, i32 4
 %33 = load i32, i32* %32
 %34 = add i32 %33, 1
 %35 = shl i32 %34, 5
 %36 = add i32 %30, %35
 %37 = load i8*, i8** %7
 %38 = getelementptr %struct.tm, i8* %37, i32 0, i32 3
 %39 = load i32, i32* %38
 %40 = add i32 %36, %39
 %41 = trunc i32 %40 to i16
 %42 = load i8*, i8** %6
 store i16 %41, i16* %42
 ret void
}

define i32 @mz_zip_writer_compute_padding_needed_for_file_alignment (i8* %0) {
 %2 = alloca i32
 %3 = alloca i8*
 %4 = alloca i32
 store i8* %0, i8** %3
 %5 = load i8*, i8** %3
 %6 = getelementptr %struct.mz_zip_archive, i8* %5, i32 0, i32 6
 %7 = load i64, i64* %6
 %8 = icmp ne i64 %7, 0
 br i1 %8, label %10, label %9
9:
 store i32 0, i32* %2
 br label %32
10:
 %11 = load i8*, i8** %3
 %12 = getelementptr %struct.mz_zip_archive, i8* %11, i32 0, i32 0
 %13 = load i64, i64* %12
 %14 = load i8*, i8** %3
 %15 = getelementptr %struct.mz_zip_archive, i8* %14, i32 0, i32 6
 %16 = load i64, i64* %15
 %17 = sub i64 %16, 1
 %18 = and i64 %13, %17
 %19 = trunc i64 %18 to i32
 store i32 %19, i32* %4
 %20 = load i8*, i8** %3
 %21 = getelementptr %struct.mz_zip_archive, i8* %20, i32 0, i32 6
 %22 = load i64, i64* %21
 %23 = load i32, i32* %4
 %24 = zext i32 %23 to i64
 %25 = sub i64 %22, %24
 %26 = load i8*, i8** %3
 %27 = getelementptr %struct.mz_zip_archive, i8* %26, i32 0, i32 6
 %28 = load i64, i64* %27
 %29 = sub i64 %28, 1
 %30 = and i64 %25, %29
 %31 = trunc i64 %30 to i32
 store i32 %31, i32* %2
 br label %32
32:
 %33 = load i32, i32* %2
 ret i32 %33
}

define i32 @mz_zip_writer_write_zeros (i8* %0, i64 %1, i32 %2) {
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i64
 %9 = alloca i32
 %10 = alloca [4096 x i8]
 %11 = alloca i32
 store i8* %0, i8** %7
 store i64 %1, i64* %8
 store i32 %2, i32* %9
 %12 = getelementptr [4096 x i8], i8* %10, i64 0, i64 0
 %13 = load i32, i32* %9
 %14 = zext i32 %13 to i64
 %15 = icmp ult i64 4096, %14
 br i1 %15, label %16, label %17
16:
 br label %20
17:
 %18 = load i32, i32* %9
 %19 = zext i32 %18 to i64
 br label %20
20:
 %21 = phi i64 [4096, %16], [%19, %17]
 %22 = call i8* @__memset_chk (i8* %12, i32 0, i64 %21, i64 4096)
 br label %23
23:
 %24 = load i32, i32* %9
 %25 = icmp ne i32 %24, 0
 br i1 %25, label %26, label %68
26:
 %27 = load i32, i32* %9
 %28 = zext i32 %27 to i64
 %29 = icmp ult i64 4096, %28
 br i1 %29, label %30, label %31
30:
 br label %34
31:
 %32 = load i32, i32* %9
 %33 = zext i32 %32 to i64
 br label %34
34:
 %35 = phi i64 [4096, %30], [%33, %31]
 %36 = trunc i64 %35 to i32
 store i32 %36, i32* %11
 %37 = load i8*, i8** %7
 %38 = getelementptr %struct.mz_zip_archive, i8* %37, i32 0, i32 12
 %39 = load i8*, i8** %38
 %40 = load i8*, i8** %7
 %41 = getelementptr %struct.mz_zip_archive, i8* %40, i32 0, i32 14
 %42 = load i8*, i8** %41
 %43 = load i64, i64* %8
 %44 = getelementptr [4096 x i8], i8* %10, i64 0, i64 0
 %45 = load i32, i32* %11
 %46 = zext i32 %45 to i64
 %47 = call i64 %39 (i8* %42, i64 %43, i8* %44, i64 %46)
 %48 = load i32, i32* %11
 %49 = zext i32 %48 to i64
 %50 = icmp ne i64 %47, %49
 br i1 %50, label %51, label %60
51:
 %52 = load i8*, i8** %7
 store i8* %52, i8** %4
 store i32 19, i32* %5
 %53 = load i8*, i8** %4
 %54 = icmp ne i8* %53, null
 br i1 %54, label %55, label %59
55:
 %56 = load i32, i32* %5
 %57 = load i8*, i8** %4
 %58 = getelementptr %struct.mz_zip_archive, i8* %57, i32 0, i32 5
 store i32 %56, i32* %58
 br label %59
59:
 store i32 0, i32* %6
 br label %69
60:
 %61 = load i32, i32* %11
 %62 = zext i32 %61 to i64
 %63 = load i64, i64* %8
 %64 = add i64 %63, %62
 store i64 %64, i64* %8
 %65 = load i32, i32* %11
 %66 = load i32, i32* %9
 %67 = sub i32 %66, %65
 store i32 %67, i32* %9
 br label %23
68:
 store i32 1, i32* %6
 br label %69
69:
 %70 = load i32, i32* %6
 ret i32 %70
}

define i32 @mz_zip_writer_create_zip64_extra_data (i8* %0, i8* %1, i8* %2, i8* %3) {
 %5 = alloca i8*
 %6 = alloca i16
 %7 = alloca i8*
 %8 = alloca i16
 %9 = alloca i8*
 %10 = alloca i16
 %11 = alloca i8*
 %12 = alloca i32
 %13 = alloca i8*
 %14 = alloca i32
 %15 = alloca i8*
 %16 = alloca i64
 %17 = alloca i8*
 %18 = alloca i32
 %19 = alloca i8*
 %20 = alloca i32
 %21 = alloca i8*
 %22 = alloca i64
 %23 = alloca i8*
 %24 = alloca i32
 %25 = alloca i8*
 %26 = alloca i32
 %27 = alloca i8*
 %28 = alloca i64
 %29 = alloca i8*
 %30 = alloca i8*
 %31 = alloca i8*
 %32 = alloca i8*
 %33 = alloca i8*
 %34 = alloca i32
 store i8* %0, i8** %29
 store i8* %1, i8** %30
 store i8* %2, i8** %31
 store i8* %3, i8** %32
 %35 = load i8*, i8** %29
 store i8* %35, i8** %33
 store i32 0, i32* %34
 %36 = load i8*, i8** %33
 %37 = getelementptr i8, i8* %36, i64 0
 store i8* %37, i8** %5
 store i16 1, i16* %6
 %38 = load i16, i16* %6
 %39 = trunc i16 %38 to i8
 %40 = load i8*, i8** %5
 store i8 %39, i8* %40
 %41 = load i16, i16* %6
 %42 = zext i16 %41 to i32
 %43 = ashr i32 %42, 8
 %44 = trunc i32 %43 to i8
 %45 = load i8*, i8** %5
 %46 = getelementptr i8, i8* %45, i64 1
 store i8 %44, i8* %46
 %47 = load i8*, i8** %33
 %48 = getelementptr i8, i8* %47, i64 2
 store i8* %48, i8** %7
 store i16 0, i16* %8
 %49 = load i16, i16* %8
 %50 = trunc i16 %49 to i8
 %51 = load i8*, i8** %7
 store i8 %50, i8* %51
 %52 = load i16, i16* %8
 %53 = zext i16 %52 to i32
 %54 = ashr i32 %53, 8
 %55 = trunc i32 %54 to i8
 %56 = load i8*, i8** %7
 %57 = getelementptr i8, i8* %56, i64 1
 store i8 %55, i8* %57
 %58 = load i8*, i8** %33
 %59 = getelementptr i8, i8* %58, i64 4
 store i8* %59, i8** %33
 %60 = load i8*, i8** %30
 %61 = icmp ne i8* %60, null
 br i1 %61, label %62, label %116
62:
 %63 = load i8*, i8** %33
 %64 = load i8*, i8** %30
 %65 = load i64, i64* %64
 store i8* %63, i8** %15
 store i64 %65, i64* %16
 %66 = load i8*, i8** %15
 %67 = load i64, i64* %16
 %68 = trunc i64 %67 to i32
 store i8* %66, i8** %11
 store i32 %68, i32* %12
 %69 = load i32, i32* %12
 %70 = trunc i32 %69 to i8
 %71 = load i8*, i8** %11
 store i8 %70, i8* %71
 %72 = load i32, i32* %12
 %73 = lshr i32 %72, 8
 %74 = trunc i32 %73 to i8
 %75 = load i8*, i8** %11
 %76 = getelementptr i8, i8* %75, i64 1
 store i8 %74, i8* %76
 %77 = load i32, i32* %12
 %78 = lshr i32 %77, 16
 %79 = trunc i32 %78 to i8
 %80 = load i8*, i8** %11
 %81 = getelementptr i8, i8* %80, i64 2
 store i8 %79, i8* %81
 %82 = load i32, i32* %12
 %83 = lshr i32 %82, 24
 %84 = trunc i32 %83 to i8
 %85 = load i8*, i8** %11
 %86 = getelementptr i8, i8* %85, i64 3
 store i8 %84, i8* %86
 %87 = load i8*, i8** %15
 %88 = getelementptr i8, i8* %87, i64 4
 %89 = load i64, i64* %16
 %90 = lshr i64 %89, 32
 %91 = trunc i64 %90 to i32
 store i8* %88, i8** %13
 store i32 %91, i32* %14
 %92 = load i32, i32* %14
 %93 = trunc i32 %92 to i8
 %94 = load i8*, i8** %13
 store i8 %93, i8* %94
 %95 = load i32, i32* %14
 %96 = lshr i32 %95, 8
 %97 = trunc i32 %96 to i8
 %98 = load i8*, i8** %13
 %99 = getelementptr i8, i8* %98, i64 1
 store i8 %97, i8* %99
 %100 = load i32, i32* %14
 %101 = lshr i32 %100, 16
 %102 = trunc i32 %101 to i8
 %103 = load i8*, i8** %13
 %104 = getelementptr i8, i8* %103, i64 2
 store i8 %102, i8* %104
 %105 = load i32, i32* %14
 %106 = lshr i32 %105, 24
 %107 = trunc i32 %106 to i8
 %108 = load i8*, i8** %13
 %109 = getelementptr i8, i8* %108, i64 3
 store i8 %107, i8* %109
 %110 = load i8*, i8** %33
 %111 = getelementptr i8, i8* %110, i64 8
 store i8* %111, i8** %33
 %112 = load i32, i32* %34
 %113 = zext i32 %112 to i64
 %114 = add i64 %113, 8
 %115 = trunc i64 %114 to i32
 store i32 %115, i32* %34
 br label %116
116:
 %117 = load i8*, i8** %31
 %118 = icmp ne i8* %117, null
 br i1 %118, label %119, label %173
119:
 %120 = load i8*, i8** %33
 %121 = load i8*, i8** %31
 %122 = load i64, i64* %121
 store i8* %120, i8** %21
 store i64 %122, i64* %22
 %123 = load i8*, i8** %21
 %124 = load i64, i64* %22
 %125 = trunc i64 %124 to i32
 store i8* %123, i8** %17
 store i32 %125, i32* %18
 %126 = load i32, i32* %18
 %127 = trunc i32 %126 to i8
 %128 = load i8*, i8** %17
 store i8 %127, i8* %128
 %129 = load i32, i32* %18
 %130 = lshr i32 %129, 8
 %131 = trunc i32 %130 to i8
 %132 = load i8*, i8** %17
 %133 = getelementptr i8, i8* %132, i64 1
 store i8 %131, i8* %133
 %134 = load i32, i32* %18
 %135 = lshr i32 %134, 16
 %136 = trunc i32 %135 to i8
 %137 = load i8*, i8** %17
 %138 = getelementptr i8, i8* %137, i64 2
 store i8 %136, i8* %138
 %139 = load i32, i32* %18
 %140 = lshr i32 %139, 24
 %141 = trunc i32 %140 to i8
 %142 = load i8*, i8** %17
 %143 = getelementptr i8, i8* %142, i64 3
 store i8 %141, i8* %143
 %144 = load i8*, i8** %21
 %145 = getelementptr i8, i8* %144, i64 4
 %146 = load i64, i64* %22
 %147 = lshr i64 %146, 32
 %148 = trunc i64 %147 to i32
 store i8* %145, i8** %19
 store i32 %148, i32* %20
 %149 = load i32, i32* %20
 %150 = trunc i32 %149 to i8
 %151 = load i8*, i8** %19
 store i8 %150, i8* %151
 %152 = load i32, i32* %20
 %153 = lshr i32 %152, 8
 %154 = trunc i32 %153 to i8
 %155 = load i8*, i8** %19
 %156 = getelementptr i8, i8* %155, i64 1
 store i8 %154, i8* %156
 %157 = load i32, i32* %20
 %158 = lshr i32 %157, 16
 %159 = trunc i32 %158 to i8
 %160 = load i8*, i8** %19
 %161 = getelementptr i8, i8* %160, i64 2
 store i8 %159, i8* %161
 %162 = load i32, i32* %20
 %163 = lshr i32 %162, 24
 %164 = trunc i32 %163 to i8
 %165 = load i8*, i8** %19
 %166 = getelementptr i8, i8* %165, i64 3
 store i8 %164, i8* %166
 %167 = load i8*, i8** %33
 %168 = getelementptr i8, i8* %167, i64 8
 store i8* %168, i8** %33
 %169 = load i32, i32* %34
 %170 = zext i32 %169 to i64
 %171 = add i64 %170, 8
 %172 = trunc i64 %171 to i32
 store i32 %172, i32* %34
 br label %173
173:
 %174 = load i8*, i8** %32
 %175 = icmp ne i8* %174, null
 br i1 %175, label %176, label %230
176:
 %177 = load i8*, i8** %33
 %178 = load i8*, i8** %32
 %179 = load i64, i64* %178
 store i8* %177, i8** %27
 store i64 %179, i64* %28
 %180 = load i8*, i8** %27
 %181 = load i64, i64* %28
 %182 = trunc i64 %181 to i32
 store i8* %180, i8** %23
 store i32 %182, i32* %24
 %183 = load i32, i32* %24
 %184 = trunc i32 %183 to i8
 %185 = load i8*, i8** %23
 store i8 %184, i8* %185
 %186 = load i32, i32* %24
 %187 = lshr i32 %186, 8
 %188 = trunc i32 %187 to i8
 %189 = load i8*, i8** %23
 %190 = getelementptr i8, i8* %189, i64 1
 store i8 %188, i8* %190
 %191 = load i32, i32* %24
 %192 = lshr i32 %191, 16
 %193 = trunc i32 %192 to i8
 %194 = load i8*, i8** %23
 %195 = getelementptr i8, i8* %194, i64 2
 store i8 %193, i8* %195
 %196 = load i32, i32* %24
 %197 = lshr i32 %196, 24
 %198 = trunc i32 %197 to i8
 %199 = load i8*, i8** %23
 %200 = getelementptr i8, i8* %199, i64 3
 store i8 %198, i8* %200
 %201 = load i8*, i8** %27
 %202 = getelementptr i8, i8* %201, i64 4
 %203 = load i64, i64* %28
 %204 = lshr i64 %203, 32
 %205 = trunc i64 %204 to i32
 store i8* %202, i8** %25
 store i32 %205, i32* %26
 %206 = load i32, i32* %26
 %207 = trunc i32 %206 to i8
 %208 = load i8*, i8** %25
 store i8 %207, i8* %208
 %209 = load i32, i32* %26
 %210 = lshr i32 %209, 8
 %211 = trunc i32 %210 to i8
 %212 = load i8*, i8** %25
 %213 = getelementptr i8, i8* %212, i64 1
 store i8 %211, i8* %213
 %214 = load i32, i32* %26
 %215 = lshr i32 %214, 16
 %216 = trunc i32 %215 to i8
 %217 = load i8*, i8** %25
 %218 = getelementptr i8, i8* %217, i64 2
 store i8 %216, i8* %218
 %219 = load i32, i32* %26
 %220 = lshr i32 %219, 24
 %221 = trunc i32 %220 to i8
 %222 = load i8*, i8** %25
 %223 = getelementptr i8, i8* %222, i64 3
 store i8 %221, i8* %223
 %224 = load i8*, i8** %33
 %225 = getelementptr i8, i8* %224, i64 8
 store i8* %225, i8** %33
 %226 = load i32, i32* %34
 %227 = zext i32 %226 to i64
 %228 = add i64 %227, 8
 %229 = trunc i64 %228 to i32
 store i32 %229, i32* %34
 br label %230
230:
 %231 = load i8*, i8** %29
 %232 = getelementptr i8, i8* %231, i64 2
 %233 = load i32, i32* %34
 %234 = trunc i32 %233 to i16
 store i8* %232, i8** %9
 store i16 %234, i16* %10
 %235 = load i16, i16* %10
 %236 = trunc i16 %235 to i8
 %237 = load i8*, i8** %9
 store i8 %236, i8* %237
 %238 = load i16, i16* %10
 %239 = zext i16 %238 to i32
 %240 = ashr i32 %239, 8
 %241 = trunc i32 %240 to i8
 %242 = load i8*, i8** %9
 %243 = getelementptr i8, i8* %242, i64 1
 store i8 %241, i8* %243
 %244 = load i8*, i8** %33
 %245 = load i8*, i8** %29
 %246 = ptrtoint i8** %244 to i64
 %247 = ptrtoint i8** %245 to i64
 %248 = sub i64 %246, %247
 %249 = trunc i64 %248 to i32
 ret i32 %249
}

define i32 @mz_zip_writer_create_local_dir_header (i8* %0, i8* %1, i16 %2, i16 %3, i64 %4, i64 %5, i32 %6, i16 %7, i16 %8, i16 %9, i16 %10) {
 %12 = alloca i8*
 %13 = alloca i16
 %14 = alloca i8*
 %15 = alloca i16
 %16 = alloca i8*
 %17 = alloca i16
 %18 = alloca i8*
 %19 = alloca i16
 %20 = alloca i8*
 %21 = alloca i16
 %22 = alloca i8*
 %23 = alloca i16
 %24 = alloca i8*
 %25 = alloca i16
 %26 = alloca i8*
 %27 = alloca i32
 %28 = alloca i8*
 %29 = alloca i32
 %30 = alloca i8*
 %31 = alloca i32
 %32 = alloca i8*
 %33 = alloca i32
 %34 = alloca i8*
 %35 = alloca i8*
 %36 = alloca i16
 %37 = alloca i16
 %38 = alloca i64
 %39 = alloca i64
 %40 = alloca i32
 %41 = alloca i16
 %42 = alloca i16
 %43 = alloca i16
 %44 = alloca i16
 store i8* %0, i8** %34
 store i8* %1, i8** %35
 store i16 %2, i16* %36
 store i16 %3, i16* %37
 store i64 %4, i64* %38
 store i64 %5, i64* %39
 store i32 %6, i32* %40
 store i16 %7, i16* %41
 store i16 %8, i16* %42
 store i16 %9, i16* %43
 store i16 %10, i16* %44
 %45 = load i8*, i8** %34
 %46 = load i8*, i8** %35
 %47 = load i8*, i8** %35
 %48 = call i64 @llvm.objectsize.i64.p0 (i8* %47, i1 0, i1 1, i1 0)
 %49 = call i8* @__memset_chk (i8* %46, i32 0, i64 30, i64 %48)
 %50 = load i8*, i8** %35
 %51 = getelementptr i8, i8* %50, i64 0
 store i8* %51, i8** %26
 store i32 67324752, i32* %27
 %52 = load i32, i32* %27
 %53 = trunc i32 %52 to i8
 %54 = load i8*, i8** %26
 store i8 %53, i8* %54
 %55 = load i32, i32* %27
 %56 = lshr i32 %55, 8
 %57 = trunc i32 %56 to i8
 %58 = load i8*, i8** %26
 %59 = getelementptr i8, i8* %58, i64 1
 store i8 %57, i8* %59
 %60 = load i32, i32* %27
 %61 = lshr i32 %60, 16
 %62 = trunc i32 %61 to i8
 %63 = load i8*, i8** %26
 %64 = getelementptr i8, i8* %63, i64 2
 store i8 %62, i8* %64
 %65 = load i32, i32* %27
 %66 = lshr i32 %65, 24
 %67 = trunc i32 %66 to i8
 %68 = load i8*, i8** %26
 %69 = getelementptr i8, i8* %68, i64 3
 store i8 %67, i8* %69
 %70 = load i8*, i8** %35
 %71 = getelementptr i8, i8* %70, i64 4
 %72 = load i16, i16* %41
 %73 = zext i16 %72 to i32
 %74 = icmp ne i32 %73, 0
 %75 = zext i1 %74 to i64
 %76 = select i1 %74, i32 20, i32 0
 %77 = trunc i32 %76 to i16
 store i8* %71, i8** %12
 store i16 %77, i16* %13
 %78 = load i16, i16* %13
 %79 = trunc i16 %78 to i8
 %80 = load i8*, i8** %12
 store i8 %79, i8* %80
 %81 = load i16, i16* %13
 %82 = zext i16 %81 to i32
 %83 = ashr i32 %82, 8
 %84 = trunc i32 %83 to i8
 %85 = load i8*, i8** %12
 %86 = getelementptr i8, i8* %85, i64 1
 store i8 %84, i8* %86
 %87 = load i8*, i8** %35
 %88 = getelementptr i8, i8* %87, i64 6
 %89 = load i16, i16* %42
 store i8* %88, i8** %14
 store i16 %89, i16* %15
 %90 = load i16, i16* %15
 %91 = trunc i16 %90 to i8
 %92 = load i8*, i8** %14
 store i8 %91, i8* %92
 %93 = load i16, i16* %15
 %94 = zext i16 %93 to i32
 %95 = ashr i32 %94, 8
 %96 = trunc i32 %95 to i8
 %97 = load i8*, i8** %14
 %98 = getelementptr i8, i8* %97, i64 1
 store i8 %96, i8* %98
 %99 = load i8*, i8** %35
 %100 = getelementptr i8, i8* %99, i64 8
 %101 = load i16, i16* %41
 store i8* %100, i8** %16
 store i16 %101, i16* %17
 %102 = load i16, i16* %17
 %103 = trunc i16 %102 to i8
 %104 = load i8*, i8** %16
 store i8 %103, i8* %104
 %105 = load i16, i16* %17
 %106 = zext i16 %105 to i32
 %107 = ashr i32 %106, 8
 %108 = trunc i32 %107 to i8
 %109 = load i8*, i8** %16
 %110 = getelementptr i8, i8* %109, i64 1
 store i8 %108, i8* %110
 %111 = load i8*, i8** %35
 %112 = getelementptr i8, i8* %111, i64 10
 %113 = load i16, i16* %43
 store i8* %112, i8** %18
 store i16 %113, i16* %19
 %114 = load i16, i16* %19
 %115 = trunc i16 %114 to i8
 %116 = load i8*, i8** %18
 store i8 %115, i8* %116
 %117 = load i16, i16* %19
 %118 = zext i16 %117 to i32
 %119 = ashr i32 %118, 8
 %120 = trunc i32 %119 to i8
 %121 = load i8*, i8** %18
 %122 = getelementptr i8, i8* %121, i64 1
 store i8 %120, i8* %122
 %123 = load i8*, i8** %35
 %124 = getelementptr i8, i8* %123, i64 12
 %125 = load i16, i16* %44
 store i8* %124, i8** %20
 store i16 %125, i16* %21
 %126 = load i16, i16* %21
 %127 = trunc i16 %126 to i8
 %128 = load i8*, i8** %20
 store i8 %127, i8* %128
 %129 = load i16, i16* %21
 %130 = zext i16 %129 to i32
 %131 = ashr i32 %130, 8
 %132 = trunc i32 %131 to i8
 %133 = load i8*, i8** %20
 %134 = getelementptr i8, i8* %133, i64 1
 store i8 %132, i8* %134
 %135 = load i8*, i8** %35
 %136 = getelementptr i8, i8* %135, i64 14
 %137 = load i32, i32* %40
 store i8* %136, i8** %28
 store i32 %137, i32* %29
 %138 = load i32, i32* %29
 %139 = trunc i32 %138 to i8
 %140 = load i8*, i8** %28
 store i8 %139, i8* %140
 %141 = load i32, i32* %29
 %142 = lshr i32 %141, 8
 %143 = trunc i32 %142 to i8
 %144 = load i8*, i8** %28
 %145 = getelementptr i8, i8* %144, i64 1
 store i8 %143, i8* %145
 %146 = load i32, i32* %29
 %147 = lshr i32 %146, 16
 %148 = trunc i32 %147 to i8
 %149 = load i8*, i8** %28
 %150 = getelementptr i8, i8* %149, i64 2
 store i8 %148, i8* %150
 %151 = load i32, i32* %29
 %152 = lshr i32 %151, 24
 %153 = trunc i32 %152 to i8
 %154 = load i8*, i8** %28
 %155 = getelementptr i8, i8* %154, i64 3
 store i8 %153, i8* %155
 %156 = load i8*, i8** %35
 %157 = getelementptr i8, i8* %156, i64 18
 %158 = load i64, i64* %39
 %159 = icmp ult i64 %158, 4294967295
 br i1 %159, label %160, label %162
160:
 %161 = load i64, i64* %39
 br label %163
162:
 br label %163
163:
 %164 = phi i64 [%161, %160], [4294967295, %162]
 %165 = trunc i64 %164 to i32
 store i8* %157, i8** %30
 store i32 %165, i32* %31
 %166 = load i32, i32* %31
 %167 = trunc i32 %166 to i8
 %168 = load i8*, i8** %30
 store i8 %167, i8* %168
 %169 = load i32, i32* %31
 %170 = lshr i32 %169, 8
 %171 = trunc i32 %170 to i8
 %172 = load i8*, i8** %30
 %173 = getelementptr i8, i8* %172, i64 1
 store i8 %171, i8* %173
 %174 = load i32, i32* %31
 %175 = lshr i32 %174, 16
 %176 = trunc i32 %175 to i8
 %177 = load i8*, i8** %30
 %178 = getelementptr i8, i8* %177, i64 2
 store i8 %176, i8* %178
 %179 = load i32, i32* %31
 %180 = lshr i32 %179, 24
 %181 = trunc i32 %180 to i8
 %182 = load i8*, i8** %30
 %183 = getelementptr i8, i8* %182, i64 3
 store i8 %181, i8* %183
 %184 = load i8*, i8** %35
 %185 = getelementptr i8, i8* %184, i64 22
 %186 = load i64, i64* %38
 %187 = icmp ult i64 %186, 4294967295
 br i1 %187, label %188, label %190
188:
 %189 = load i64, i64* %38
 br label %191
190:
 br label %191
191:
 %192 = phi i64 [%189, %188], [4294967295, %190]
 %193 = trunc i64 %192 to i32
 store i8* %185, i8** %32
 store i32 %193, i32* %33
 %194 = load i32, i32* %33
 %195 = trunc i32 %194 to i8
 %196 = load i8*, i8** %32
 store i8 %195, i8* %196
 %197 = load i32, i32* %33
 %198 = lshr i32 %197, 8
 %199 = trunc i32 %198 to i8
 %200 = load i8*, i8** %32
 %201 = getelementptr i8, i8* %200, i64 1
 store i8 %199, i8* %201
 %202 = load i32, i32* %33
 %203 = lshr i32 %202, 16
 %204 = trunc i32 %203 to i8
 %205 = load i8*, i8** %32
 %206 = getelementptr i8, i8* %205, i64 2
 store i8 %204, i8* %206
 %207 = load i32, i32* %33
 %208 = lshr i32 %207, 24
 %209 = trunc i32 %208 to i8
 %210 = load i8*, i8** %32
 %211 = getelementptr i8, i8* %210, i64 3
 store i8 %209, i8* %211
 %212 = load i8*, i8** %35
 %213 = getelementptr i8, i8* %212, i64 26
 %214 = load i16, i16* %36
 store i8* %213, i8** %22
 store i16 %214, i16* %23
 %215 = load i16, i16* %23
 %216 = trunc i16 %215 to i8
 %217 = load i8*, i8** %22
 store i8 %216, i8* %217
 %218 = load i16, i16* %23
 %219 = zext i16 %218 to i32
 %220 = ashr i32 %219, 8
 %221 = trunc i32 %220 to i8
 %222 = load i8*, i8** %22
 %223 = getelementptr i8, i8* %222, i64 1
 store i8 %221, i8* %223
 %224 = load i8*, i8** %35
 %225 = getelementptr i8, i8* %224, i64 28
 %226 = load i16, i16* %37
 store i8* %225, i8** %24
 store i16 %226, i16* %25
 %227 = load i16, i16* %25
 %228 = trunc i16 %227 to i8
 %229 = load i8*, i8** %24
 store i8 %228, i8* %229
 %230 = load i16, i16* %25
 %231 = zext i16 %230 to i32
 %232 = ashr i32 %231, 8
 %233 = trunc i32 %232 to i8
 %234 = load i8*, i8** %24
 %235 = getelementptr i8, i8* %234, i64 1
 store i8 %233, i8* %235
 ret i32 1
}

define i32 @mz_zip_writer_add_put_buf_callback (i8* %0, i32 %1, i8* %2) {
 %4 = alloca i32
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i8*
 %8 = alloca i8*
 store i8* %0, i8** %5
 store i32 %1, i32* %6
 store i8* %2, i8** %7
 %9 = load i8*, i8** %7
 store i8* %9, i8** %8
 %10 = load i8*, i8** %8
 %11 = getelementptr %struct.mz_zip_writer_add_state, i8* %10, i32 0, i32 0
 %12 = load i8*, i8** %11
 %13 = getelementptr %struct.mz_zip_archive, i8* %12, i32 0, i32 12
 %14 = load i8*, i8** %13
 %15 = load i8*, i8** %8
 %16 = getelementptr %struct.mz_zip_writer_add_state, i8* %15, i32 0, i32 0
 %17 = load i8*, i8** %16
 %18 = getelementptr %struct.mz_zip_archive, i8* %17, i32 0, i32 14
 %19 = load i8*, i8** %18
 %20 = load i8*, i8** %8
 %21 = getelementptr %struct.mz_zip_writer_add_state, i8* %20, i32 0, i32 1
 %22 = load i64, i64* %21
 %23 = load i8*, i8** %5
 %24 = load i32, i32* %6
 %25 = sext i32 %24 to i64
 %26 = call i64 %14 (i8* %19, i64 %22, i8* %23, i64 %25)
 %27 = trunc i64 %26 to i32
 %28 = load i32, i32* %6
 %29 = icmp ne i32 %27, %28
 br i1 %29, label %30, label %31
30:
 store i32 0, i32* %4
 br label %44
31:
 %32 = load i32, i32* %6
 %33 = sext i32 %32 to i64
 %34 = load i8*, i8** %8
 %35 = getelementptr %struct.mz_zip_writer_add_state, i8* %34, i32 0, i32 1
 %36 = load i64, i64* %35
 %37 = add i64 %36, %33
 store i64 %37, i64* %35
 %38 = load i32, i32* %6
 %39 = sext i32 %38 to i64
 %40 = load i8*, i8** %8
 %41 = getelementptr %struct.mz_zip_writer_add_state, i8* %40, i32 0, i32 2
 %42 = load i64, i64* %41
 %43 = add i64 %42, %39
 store i64 %43, i64* %41
 store i32 1, i32* %4
 br label %44
44:
 %45 = load i32, i32* %4
 ret i32 %45
}

define i32 @mz_zip_writer_add_to_central_dir (i8* %0, i8* %1, i16 %2, i8* %3, i16 %4, i8* %5, i16 %6, i64 %7, i64 %8, i32 %9, i16 %10, i16 %11, i16 %12, i16 %13, i64 %14, i32 %15, i8* %16, i32 %17) {
 %19 = alloca i32
 %20 = alloca i8*
 %21 = alloca i8*
 %22 = alloca i64
 %23 = alloca i32
 %24 = alloca i32
 %25 = alloca i8*
 %26 = alloca i8*
 %27 = alloca i8*
 %28 = alloca i64
 %29 = alloca i64
 %30 = alloca i32
 %31 = alloca i8*
 %32 = alloca i8*
 %33 = alloca i64
 %34 = alloca i32
 %35 = alloca i32
 %36 = alloca i8*
 %37 = alloca i8*
 %38 = alloca i8*
 %39 = alloca i64
 %40 = alloca i64
 %41 = alloca i32
 %42 = alloca i8*
 %43 = alloca i8*
 %44 = alloca i64
 %45 = alloca i32
 %46 = alloca i32
 %47 = alloca i8*
 %48 = alloca i8*
 %49 = alloca i8*
 %50 = alloca i64
 %51 = alloca i64
 %52 = alloca i32
 %53 = alloca i8*
 %54 = alloca i8*
 %55 = alloca i64
 %56 = alloca i32
 %57 = alloca i32
 %58 = alloca i8*
 %59 = alloca i8*
 %60 = alloca i8*
 %61 = alloca i64
 %62 = alloca i64
 %63 = alloca i32
 %64 = alloca i8*
 %65 = alloca i8*
 %66 = alloca i64
 %67 = alloca i32
 %68 = alloca i32
 %69 = alloca i8*
 %70 = alloca i8*
 %71 = alloca i8*
 %72 = alloca i64
 %73 = alloca i64
 %74 = alloca i32
 %75 = alloca i8*
 %76 = alloca i8*
 %77 = alloca i64
 %78 = alloca i32
 %79 = alloca i32
 %80 = alloca i8*
 %81 = alloca i8*
 %82 = alloca i8*
 %83 = alloca i64
 %84 = alloca i64
 %85 = alloca i32
 %86 = alloca i8*
 %87 = alloca i8*
 %88 = alloca i64
 %89 = alloca i32
 %90 = alloca i8*
 %91 = alloca i32
 %92 = alloca i8*
 %93 = alloca i32
 %94 = alloca i8*
 %95 = alloca i32
 %96 = alloca i8*
 %97 = alloca i32
 %98 = alloca i32
 %99 = alloca i8*
 %100 = alloca i8*
 %101 = alloca i16
 %102 = alloca i8*
 %103 = alloca i16
 %104 = alloca i8*
 %105 = alloca i16
 %106 = alloca i64
 %107 = alloca i64
 %108 = alloca i32
 %109 = alloca i16
 %110 = alloca i16
 %111 = alloca i16
 %112 = alloca i16
 %113 = alloca i64
 %114 = alloca i32
 %115 = alloca i8*
 %116 = alloca i32
 %117 = alloca i8*
 %118 = alloca i32
 %119 = alloca i64
 %120 = alloca [46 x i8]
 store i8* %0, i8** %99
 store i8* %1, i8** %100
 store i16 %2, i16* %101
 store i8* %3, i8** %102
 store i16 %4, i16* %103
 store i8* %5, i8** %104
 store i16 %6, i16* %105
 store i64 %7, i64* %106
 store i64 %8, i64* %107
 store i32 %9, i32* %108
 store i16 %10, i16* %109
 store i16 %11, i16* %110
 store i16 %12, i16* %111
 store i16 %13, i16* %112
 store i64 %14, i64* %113
 store i32 %15, i32* %114
 store i8* %16, i8** %115
 store i32 %17, i32* %116
 %121 = load i8*, i8** %99
 %122 = getelementptr %struct.mz_zip_archive, i8* %121, i32 0, i32 15
 %123 = load i8*, i8** %122
 store i8* %123, i8** %117
 %124 = load i8*, i8** %117
 %125 = getelementptr %struct.mz_zip_internal_state_tag, i8* %124, i32 0, i32 0
 %126 = getelementptr %struct.mz_zip_array, i8* %125, i32 0, i32 1
 %127 = load i64, i64* %126
 %128 = trunc i64 %127 to i32
 store i32 %128, i32* %118
 %129 = load i8*, i8** %117
 %130 = getelementptr %struct.mz_zip_internal_state_tag, i8* %129, i32 0, i32 0
 %131 = getelementptr %struct.mz_zip_array, i8* %130, i32 0, i32 1
 %132 = load i64, i64* %131
 store i64 %132, i64* %119
 %133 = load i8*, i8** %99
 %134 = getelementptr %struct.mz_zip_archive, i8* %133, i32 0, i32 15
 %135 = load i8*, i8** %134
 %136 = getelementptr %struct.mz_zip_internal_state_tag, i8* %135, i32 0, i32 4
 %137 = load i32, i32* %136
 %138 = icmp ne i32 %137, 0
 br i1 %138, label %152, label %139
139:
 %140 = load i64, i64* %113
 %141 = icmp ugt i64 %140, 4294967295
 br i1 %141, label %142, label %151
142:
 %143 = load i8*, i8** %99
 store i8* %143, i8** %90
 store i32 3, i32* %91
 %144 = load i8*, i8** %90
 %145 = icmp ne i8* %144, null
 br i1 %145, label %146, label %150
146:
 %147 = load i32, i32* %91
 %148 = load i8*, i8** %90
 %149 = getelementptr %struct.mz_zip_archive, i8* %148, i32 0, i32 5
 store i32 %147, i32* %149
 br label %150
150:
 store i32 0, i32* %98
 br label %671
151:
 br label %152
152:
 %153 = load i8*, i8** %117
 %154 = getelementptr %struct.mz_zip_internal_state_tag, i8* %153, i32 0, i32 0
 %155 = getelementptr %struct.mz_zip_array, i8* %154, i32 0, i32 1
 %156 = load i64, i64* %155
 %157 = add i64 %156, 46
 %158 = load i16, i16* %101
 %159 = zext i16 %158 to i64
 %160 = add i64 %157, %159
 %161 = load i16, i16* %103
 %162 = zext i16 %161 to i64
 %163 = add i64 %160, %162
 %164 = load i32, i32* %116
 %165 = zext i32 %164 to i64
 %166 = add i64 %163, %165
 %167 = load i16, i16* %105
 %168 = zext i16 %167 to i64
 %169 = add i64 %166, %168
 %170 = icmp uge i64 %169, 4294967295
 br i1 %170, label %171, label %180
171:
 %172 = load i8*, i8** %99
 store i8* %172, i8** %92
 store i32 15, i32* %93
 %173 = load i8*, i8** %92
 %174 = icmp ne i8* %173, null
 br i1 %174, label %175, label %179
175:
 %176 = load i32, i32* %93
 %177 = load i8*, i8** %92
 %178 = getelementptr %struct.mz_zip_archive, i8* %177, i32 0, i32 5
 store i32 %176, i32* %178
 br label %179
179:
 store i32 0, i32* %98
 br label %671
180:
 %181 = load i8*, i8** %99
 %182 = getelementptr [46 x i8], i8* %120, i64 0, i64 0
 %183 = load i16, i16* %101
 %184 = load i16, i16* %103
 %185 = zext i16 %184 to i32
 %186 = load i32, i32* %116
 %187 = add i32 %185, %186
 %188 = trunc i32 %187 to i16
 %189 = load i16, i16* %105
 %190 = load i64, i64* %106
 %191 = load i64, i64* %107
 %192 = load i32, i32* %108
 %193 = load i16, i16* %109
 %194 = load i16, i16* %110
 %195 = load i16, i16* %111
 %196 = load i16, i16* %112
 %197 = load i64, i64* %113
 %198 = load i32, i32* %114
 %199 = call i32 @mz_zip_writer_create_central_dir_header (i8* %181, i8* %182, i16 %183, i16 %188, i16 %189, i64 %190, i64 %191, i32 %192, i16 %193, i16 %194, i16 %195, i16 %196, i64 %197, i32 %198)
 %200 = icmp ne i32 %199, 0
 br i1 %200, label %210, label %201
201:
 %202 = load i8*, i8** %99
 store i8* %202, i8** %94
 store i32 27, i32* %95
 %203 = load i8*, i8** %94
 %204 = icmp ne i8* %203, null
 br i1 %204, label %205, label %209
205:
 %206 = load i32, i32* %95
 %207 = load i8*, i8** %94
 %208 = getelementptr %struct.mz_zip_archive, i8* %207, i32 0, i32 5
 store i32 %206, i32* %208
 br label %209
209:
 store i32 0, i32* %98
 br label %671
210:
 %211 = load i8*, i8** %99
 %212 = load i8*, i8** %117
 %213 = getelementptr %struct.mz_zip_internal_state_tag, i8* %212, i32 0, i32 0
 %214 = getelementptr [46 x i8], i8* %120, i64 0, i64 0
 store i8* %211, i8** %25
 store i8* %213, i8** %26
 store i8* %214, i8** %27
 store i64 46, i64* %28
 %215 = load i8*, i8** %26
 %216 = getelementptr %struct.mz_zip_array, i8* %215, i32 0, i32 1
 %217 = load i64, i64* %216
 store i64 %217, i64* %29
 %218 = load i8*, i8** %25
 %219 = load i8*, i8** %26
 %220 = load i64, i64* %29
 %221 = load i64, i64* %28
 %222 = add i64 %220, %221
 store i8* %218, i8** %20
 store i8* %219, i8** %21
 store i64 %222, i64* %22
 store i32 1, i32* %23
 %223 = load i64, i64* %22
 %224 = load i8*, i8** %21
 %225 = getelementptr %struct.mz_zip_array, i8* %224, i32 0, i32 2
 %226 = load i64, i64* %225
 %227 = icmp ugt i64 %223, %226
 br i1 %227, label %228, label %237
228:
 %229 = load i8*, i8** %20
 %230 = load i8*, i8** %21
 %231 = load i64, i64* %22
 %232 = load i32, i32* %23
 %233 = call i32 @mz_zip_array_ensure_capacity (i8* %229, i8* %230, i64 %231, i32 %232)
 %234 = icmp ne i32 %233, 0
 br i1 %234, label %236, label %235
235:
 store i32 0, i32* %19
 br label %241
236:
 br label %237
237:
 %238 = load i64, i64* %22
 %239 = load i8*, i8** %21
 %240 = getelementptr %struct.mz_zip_array, i8* %239, i32 0, i32 1
 store i64 %238, i64* %240
 store i32 1, i32* %19
 br label %241
241:
 %242 = load i32, i32* %19
 %243 = icmp ne i32 %242, 0
 br i1 %243, label %245, label %244
244:
 store i32 0, i32* %24
 br label %277
245:
 %246 = load i64, i64* %28
 %247 = icmp ugt i64 %246, 0
 br i1 %247, label %248, label %276
248:
 %249 = load i8*, i8** %26
 %250 = load i8*, i8** %249
 %251 = load i64, i64* %29
 %252 = load i8*, i8** %26
 %253 = getelementptr %struct.mz_zip_array, i8* %252, i32 0, i32 3
 %254 = load i32, i32* %253
 %255 = zext i32 %254 to i64
 %256 = mul i64 %251, %255
 %257 = getelementptr i8, i8* %250, i64 %256
 %258 = load i8*, i8** %27
 %259 = load i64, i64* %28
 %260 = load i8*, i8** %26
 %261 = getelementptr %struct.mz_zip_array, i8* %260, i32 0, i32 3
 %262 = load i32, i32* %261
 %263 = zext i32 %262 to i64
 %264 = mul i64 %259, %263
 %265 = load i8*, i8** %26
 %266 = load i8*, i8** %265
 %267 = load i64, i64* %29
 %268 = load i8*, i8** %26
 %269 = getelementptr %struct.mz_zip_array, i8* %268, i32 0, i32 3
 %270 = load i32, i32* %269
 %271 = zext i32 %270 to i64
 %272 = mul i64 %267, %271
 %273 = getelementptr i8, i8* %266, i64 %272
 %274 = call i64 @llvm.objectsize.i64.p0 (i8* %273, i1 0, i1 1, i1 0)
 %275 = call i8* @__memcpy_chk (i8* %257, i8* %258, i64 %264, i64 %274)
 br label %276
276:
 store i32 1, i32* %24
 br label %277
277:
 %278 = load i32, i32* %24
 %279 = icmp ne i32 %278, 0
 br i1 %279, label %280, label %637
280:
 %281 = load i8*, i8** %99
 %282 = load i8*, i8** %117
 %283 = getelementptr %struct.mz_zip_internal_state_tag, i8* %282, i32 0, i32 0
 %284 = load i8*, i8** %100
 %285 = load i16, i16* %101
 %286 = zext i16 %285 to i64
 store i8* %281, i8** %36
 store i8* %283, i8** %37
 store i8* %284, i8** %38
 store i64 %286, i64* %39
 %287 = load i8*, i8** %37
 %288 = getelementptr %struct.mz_zip_array, i8* %287, i32 0, i32 1
 %289 = load i64, i64* %288
 store i64 %289, i64* %40
 %290 = load i8*, i8** %36
 %291 = load i8*, i8** %37
 %292 = load i64, i64* %40
 %293 = load i64, i64* %39
 %294 = add i64 %292, %293
 store i8* %290, i8** %31
 store i8* %291, i8** %32
 store i64 %294, i64* %33
 store i32 1, i32* %34
 %295 = load i64, i64* %33
 %296 = load i8*, i8** %32
 %297 = getelementptr %struct.mz_zip_array, i8* %296, i32 0, i32 2
 %298 = load i64, i64* %297
 %299 = icmp ugt i64 %295, %298
 br i1 %299, label %300, label %309
300:
 %301 = load i8*, i8** %31
 %302 = load i8*, i8** %32
 %303 = load i64, i64* %33
 %304 = load i32, i32* %34
 %305 = call i32 @mz_zip_array_ensure_capacity (i8* %301, i8* %302, i64 %303, i32 %304)
 %306 = icmp ne i32 %305, 0
 br i1 %306, label %308, label %307
307:
 store i32 0, i32* %30
 br label %313
308:
 br label %309
309:
 %310 = load i64, i64* %33
 %311 = load i8*, i8** %32
 %312 = getelementptr %struct.mz_zip_array, i8* %311, i32 0, i32 1
 store i64 %310, i64* %312
 store i32 1, i32* %30
 br label %313
313:
 %314 = load i32, i32* %30
 %315 = icmp ne i32 %314, 0
 br i1 %315, label %317, label %316
316:
 store i32 0, i32* %35
 br label %349
317:
 %318 = load i64, i64* %39
 %319 = icmp ugt i64 %318, 0
 br i1 %319, label %320, label %348
320:
 %321 = load i8*, i8** %37
 %322 = load i8*, i8** %321
 %323 = load i64, i64* %40
 %324 = load i8*, i8** %37
 %325 = getelementptr %struct.mz_zip_array, i8* %324, i32 0, i32 3
 %326 = load i32, i32* %325
 %327 = zext i32 %326 to i64
 %328 = mul i64 %323, %327
 %329 = getelementptr i8, i8* %322, i64 %328
 %330 = load i8*, i8** %38
 %331 = load i64, i64* %39
 %332 = load i8*, i8** %37
 %333 = getelementptr %struct.mz_zip_array, i8* %332, i32 0, i32 3
 %334 = load i32, i32* %333
 %335 = zext i32 %334 to i64
 %336 = mul i64 %331, %335
 %337 = load i8*, i8** %37
 %338 = load i8*, i8** %337
 %339 = load i64, i64* %40
 %340 = load i8*, i8** %37
 %341 = getelementptr %struct.mz_zip_array, i8* %340, i32 0, i32 3
 %342 = load i32, i32* %341
 %343 = zext i32 %342 to i64
 %344 = mul i64 %339, %343
 %345 = getelementptr i8, i8* %338, i64 %344
 %346 = call i64 @llvm.objectsize.i64.p0 (i8* %345, i1 0, i1 1, i1 0)
 %347 = call i8* @__memcpy_chk (i8* %329, i8* %330, i64 %336, i64 %346)
 br label %348
348:
 store i32 1, i32* %35
 br label %349
349:
 %350 = load i32, i32* %35
 %351 = icmp ne i32 %350, 0
 br i1 %351, label %352, label %637
352:
 %353 = load i8*, i8** %99
 %354 = load i8*, i8** %117
 %355 = getelementptr %struct.mz_zip_internal_state_tag, i8* %354, i32 0, i32 0
 %356 = load i8*, i8** %102
 %357 = load i16, i16* %103
 %358 = zext i16 %357 to i64
 store i8* %353, i8** %47
 store i8* %355, i8** %48
 store i8* %356, i8** %49
 store i64 %358, i64* %50
 %359 = load i8*, i8** %48
 %360 = getelementptr %struct.mz_zip_array, i8* %359, i32 0, i32 1
 %361 = load i64, i64* %360
 store i64 %361, i64* %51
 %362 = load i8*, i8** %47
 %363 = load i8*, i8** %48
 %364 = load i64, i64* %51
 %365 = load i64, i64* %50
 %366 = add i64 %364, %365
 store i8* %362, i8** %42
 store i8* %363, i8** %43
 store i64 %366, i64* %44
 store i32 1, i32* %45
 %367 = load i64, i64* %44
 %368 = load i8*, i8** %43
 %369 = getelementptr %struct.mz_zip_array, i8* %368, i32 0, i32 2
 %370 = load i64, i64* %369
 %371 = icmp ugt i64 %367, %370
 br i1 %371, label %372, label %381
372:
 %373 = load i8*, i8** %42
 %374 = load i8*, i8** %43
 %375 = load i64, i64* %44
 %376 = load i32, i32* %45
 %377 = call i32 @mz_zip_array_ensure_capacity (i8* %373, i8* %374, i64 %375, i32 %376)
 %378 = icmp ne i32 %377, 0
 br i1 %378, label %380, label %379
379:
 store i32 0, i32* %41
 br label %385
380:
 br label %381
381:
 %382 = load i64, i64* %44
 %383 = load i8*, i8** %43
 %384 = getelementptr %struct.mz_zip_array, i8* %383, i32 0, i32 1
 store i64 %382, i64* %384
 store i32 1, i32* %41
 br label %385
385:
 %386 = load i32, i32* %41
 %387 = icmp ne i32 %386, 0
 br i1 %387, label %389, label %388
388:
 store i32 0, i32* %46
 br label %421
389:
 %390 = load i64, i64* %50
 %391 = icmp ugt i64 %390, 0
 br i1 %391, label %392, label %420
392:
 %393 = load i8*, i8** %48
 %394 = load i8*, i8** %393
 %395 = load i64, i64* %51
 %396 = load i8*, i8** %48
 %397 = getelementptr %struct.mz_zip_array, i8* %396, i32 0, i32 3
 %398 = load i32, i32* %397
 %399 = zext i32 %398 to i64
 %400 = mul i64 %395, %399
 %401 = getelementptr i8, i8* %394, i64 %400
 %402 = load i8*, i8** %49
 %403 = load i64, i64* %50
 %404 = load i8*, i8** %48
 %405 = getelementptr %struct.mz_zip_array, i8* %404, i32 0, i32 3
 %406 = load i32, i32* %405
 %407 = zext i32 %406 to i64
 %408 = mul i64 %403, %407
 %409 = load i8*, i8** %48
 %410 = load i8*, i8** %409
 %411 = load i64, i64* %51
 %412 = load i8*, i8** %48
 %413 = getelementptr %struct.mz_zip_array, i8* %412, i32 0, i32 3
 %414 = load i32, i32* %413
 %415 = zext i32 %414 to i64
 %416 = mul i64 %411, %415
 %417 = getelementptr i8, i8* %410, i64 %416
 %418 = call i64 @llvm.objectsize.i64.p0 (i8* %417, i1 0, i1 1, i1 0)
 %419 = call i8* @__memcpy_chk (i8* %401, i8* %402, i64 %408, i64 %418)
 br label %420
420:
 store i32 1, i32* %46
 br label %421
421:
 %422 = load i32, i32* %46
 %423 = icmp ne i32 %422, 0
 br i1 %423, label %424, label %637
424:
 %425 = load i8*, i8** %99
 %426 = load i8*, i8** %117
 %427 = getelementptr %struct.mz_zip_internal_state_tag, i8* %426, i32 0, i32 0
 %428 = load i8*, i8** %115
 %429 = load i32, i32* %116
 %430 = zext i32 %429 to i64
 store i8* %425, i8** %58
 store i8* %427, i8** %59
 store i8* %428, i8** %60
 store i64 %430, i64* %61
 %431 = load i8*, i8** %59
 %432 = getelementptr %struct.mz_zip_array, i8* %431, i32 0, i32 1
 %433 = load i64, i64* %432
 store i64 %433, i64* %62
 %434 = load i8*, i8** %58
 %435 = load i8*, i8** %59
 %436 = load i64, i64* %62
 %437 = load i64, i64* %61
 %438 = add i64 %436, %437
 store i8* %434, i8** %53
 store i8* %435, i8** %54
 store i64 %438, i64* %55
 store i32 1, i32* %56
 %439 = load i64, i64* %55
 %440 = load i8*, i8** %54
 %441 = getelementptr %struct.mz_zip_array, i8* %440, i32 0, i32 2
 %442 = load i64, i64* %441
 %443 = icmp ugt i64 %439, %442
 br i1 %443, label %444, label %453
444:
 %445 = load i8*, i8** %53
 %446 = load i8*, i8** %54
 %447 = load i64, i64* %55
 %448 = load i32, i32* %56
 %449 = call i32 @mz_zip_array_ensure_capacity (i8* %445, i8* %446, i64 %447, i32 %448)
 %450 = icmp ne i32 %449, 0
 br i1 %450, label %452, label %451
451:
 store i32 0, i32* %52
 br label %457
452:
 br label %453
453:
 %454 = load i64, i64* %55
 %455 = load i8*, i8** %54
 %456 = getelementptr %struct.mz_zip_array, i8* %455, i32 0, i32 1
 store i64 %454, i64* %456
 store i32 1, i32* %52
 br label %457
457:
 %458 = load i32, i32* %52
 %459 = icmp ne i32 %458, 0
 br i1 %459, label %461, label %460
460:
 store i32 0, i32* %57
 br label %493
461:
 %462 = load i64, i64* %61
 %463 = icmp ugt i64 %462, 0
 br i1 %463, label %464, label %492
464:
 %465 = load i8*, i8** %59
 %466 = load i8*, i8** %465
 %467 = load i64, i64* %62
 %468 = load i8*, i8** %59
 %469 = getelementptr %struct.mz_zip_array, i8* %468, i32 0, i32 3
 %470 = load i32, i32* %469
 %471 = zext i32 %470 to i64
 %472 = mul i64 %467, %471
 %473 = getelementptr i8, i8* %466, i64 %472
 %474 = load i8*, i8** %60
 %475 = load i64, i64* %61
 %476 = load i8*, i8** %59
 %477 = getelementptr %struct.mz_zip_array, i8* %476, i32 0, i32 3
 %478 = load i32, i32* %477
 %479 = zext i32 %478 to i64
 %480 = mul i64 %475, %479
 %481 = load i8*, i8** %59
 %482 = load i8*, i8** %481
 %483 = load i64, i64* %62
 %484 = load i8*, i8** %59
 %485 = getelementptr %struct.mz_zip_array, i8* %484, i32 0, i32 3
 %486 = load i32, i32* %485
 %487 = zext i32 %486 to i64
 %488 = mul i64 %483, %487
 %489 = getelementptr i8, i8* %482, i64 %488
 %490 = call i64 @llvm.objectsize.i64.p0 (i8* %489, i1 0, i1 1, i1 0)
 %491 = call i8* @__memcpy_chk (i8* %473, i8* %474, i64 %480, i64 %490)
 br label %492
492:
 store i32 1, i32* %57
 br label %493
493:
 %494 = load i32, i32* %57
 %495 = icmp ne i32 %494, 0
 br i1 %495, label %496, label %637
496:
 %497 = load i8*, i8** %99
 %498 = load i8*, i8** %117
 %499 = getelementptr %struct.mz_zip_internal_state_tag, i8* %498, i32 0, i32 0
 %500 = load i8*, i8** %104
 %501 = load i16, i16* %105
 %502 = zext i16 %501 to i64
 store i8* %497, i8** %69
 store i8* %499, i8** %70
 store i8* %500, i8** %71
 store i64 %502, i64* %72
 %503 = load i8*, i8** %70
 %504 = getelementptr %struct.mz_zip_array, i8* %503, i32 0, i32 1
 %505 = load i64, i64* %504
 store i64 %505, i64* %73
 %506 = load i8*, i8** %69
 %507 = load i8*, i8** %70
 %508 = load i64, i64* %73
 %509 = load i64, i64* %72
 %510 = add i64 %508, %509
 store i8* %506, i8** %64
 store i8* %507, i8** %65
 store i64 %510, i64* %66
 store i32 1, i32* %67
 %511 = load i64, i64* %66
 %512 = load i8*, i8** %65
 %513 = getelementptr %struct.mz_zip_array, i8* %512, i32 0, i32 2
 %514 = load i64, i64* %513
 %515 = icmp ugt i64 %511, %514
 br i1 %515, label %516, label %525
516:
 %517 = load i8*, i8** %64
 %518 = load i8*, i8** %65
 %519 = load i64, i64* %66
 %520 = load i32, i32* %67
 %521 = call i32 @mz_zip_array_ensure_capacity (i8* %517, i8* %518, i64 %519, i32 %520)
 %522 = icmp ne i32 %521, 0
 br i1 %522, label %524, label %523
523:
 store i32 0, i32* %63
 br label %529
524:
 br label %525
525:
 %526 = load i64, i64* %66
 %527 = load i8*, i8** %65
 %528 = getelementptr %struct.mz_zip_array, i8* %527, i32 0, i32 1
 store i64 %526, i64* %528
 store i32 1, i32* %63
 br label %529
529:
 %530 = load i32, i32* %63
 %531 = icmp ne i32 %530, 0
 br i1 %531, label %533, label %532
532:
 store i32 0, i32* %68
 br label %565
533:
 %534 = load i64, i64* %72
 %535 = icmp ugt i64 %534, 0
 br i1 %535, label %536, label %564
536:
 %537 = load i8*, i8** %70
 %538 = load i8*, i8** %537
 %539 = load i64, i64* %73
 %540 = load i8*, i8** %70
 %541 = getelementptr %struct.mz_zip_array, i8* %540, i32 0, i32 3
 %542 = load i32, i32* %541
 %543 = zext i32 %542 to i64
 %544 = mul i64 %539, %543
 %545 = getelementptr i8, i8* %538, i64 %544
 %546 = load i8*, i8** %71
 %547 = load i64, i64* %72
 %548 = load i8*, i8** %70
 %549 = getelementptr %struct.mz_zip_array, i8* %548, i32 0, i32 3
 %550 = load i32, i32* %549
 %551 = zext i32 %550 to i64
 %552 = mul i64 %547, %551
 %553 = load i8*, i8** %70
 %554 = load i8*, i8** %553
 %555 = load i64, i64* %73
 %556 = load i8*, i8** %70
 %557 = getelementptr %struct.mz_zip_array, i8* %556, i32 0, i32 3
 %558 = load i32, i32* %557
 %559 = zext i32 %558 to i64
 %560 = mul i64 %555, %559
 %561 = getelementptr i8, i8* %554, i64 %560
 %562 = call i64 @llvm.objectsize.i64.p0 (i8* %561, i1 0, i1 1, i1 0)
 %563 = call i8* @__memcpy_chk (i8* %545, i8* %546, i64 %552, i64 %562)
 br label %564
564:
 store i32 1, i32* %68
 br label %565
565:
 %566 = load i32, i32* %68
 %567 = icmp ne i32 %566, 0
 br i1 %567, label %568, label %637
568:
 %569 = load i8*, i8** %99
 %570 = load i8*, i8** %117
 %571 = getelementptr %struct.mz_zip_internal_state_tag, i8* %570, i32 0, i32 1
 store i8* %569, i8** %80
 store i8* %571, i8** %81
 store i8* %118, i8** %82
 store i64 1, i64* %83
 %572 = load i8*, i8** %81
 %573 = getelementptr %struct.mz_zip_array, i8* %572, i32 0, i32 1
 %574 = load i64, i64* %573
 store i64 %574, i64* %84
 %575 = load i8*, i8** %80
 %576 = load i8*, i8** %81
 %577 = load i64, i64* %84
 %578 = load i64, i64* %83
 %579 = add i64 %577, %578
 store i8* %575, i8** %75
 store i8* %576, i8** %76
 store i64 %579, i64* %77
 store i32 1, i32* %78
 %580 = load i64, i64* %77
 %581 = load i8*, i8** %76
 %582 = getelementptr %struct.mz_zip_array, i8* %581, i32 0, i32 2
 %583 = load i64, i64* %582
 %584 = icmp ugt i64 %580, %583
 br i1 %584, label %585, label %594
585:
 %586 = load i8*, i8** %75
 %587 = load i8*, i8** %76
 %588 = load i64, i64* %77
 %589 = load i32, i32* %78
 %590 = call i32 @mz_zip_array_ensure_capacity (i8* %586, i8* %587, i64 %588, i32 %589)
 %591 = icmp ne i32 %590, 0
 br i1 %591, label %593, label %592
592:
 store i32 0, i32* %74
 br label %598
593:
 br label %594
594:
 %595 = load i64, i64* %77
 %596 = load i8*, i8** %76
 %597 = getelementptr %struct.mz_zip_array, i8* %596, i32 0, i32 1
 store i64 %595, i64* %597
 store i32 1, i32* %74
 br label %598
598:
 %599 = load i32, i32* %74
 %600 = icmp ne i32 %599, 0
 br i1 %600, label %602, label %601
601:
 store i32 0, i32* %79
 br label %634
602:
 %603 = load i64, i64* %83
 %604 = icmp ugt i64 %603, 0
 br i1 %604, label %605, label %633
605:
 %606 = load i8*, i8** %81
 %607 = load i8*, i8** %606
 %608 = load i64, i64* %84
 %609 = load i8*, i8** %81
 %610 = getelementptr %struct.mz_zip_array, i8* %609, i32 0, i32 3
 %611 = load i32, i32* %610
 %612 = zext i32 %611 to i64
 %613 = mul i64 %608, %612
 %614 = getelementptr i8, i8* %607, i64 %613
 %615 = load i8*, i8** %82
 %616 = load i64, i64* %83
 %617 = load i8*, i8** %81
 %618 = getelementptr %struct.mz_zip_array, i8* %617, i32 0, i32 3
 %619 = load i32, i32* %618
 %620 = zext i32 %619 to i64
 %621 = mul i64 %616, %620
 %622 = load i8*, i8** %81
 %623 = load i8*, i8** %622
 %624 = load i64, i64* %84
 %625 = load i8*, i8** %81
 %626 = getelementptr %struct.mz_zip_array, i8* %625, i32 0, i32 3
 %627 = load i32, i32* %626
 %628 = zext i32 %627 to i64
 %629 = mul i64 %624, %628
 %630 = getelementptr i8, i8* %623, i64 %629
 %631 = call i64 @llvm.objectsize.i64.p0 (i8* %630, i1 0, i1 1, i1 0)
 %632 = call i8* @__memcpy_chk (i8* %614, i8* %615, i64 %621, i64 %631)
 br label %633
633:
 store i32 1, i32* %79
 br label %634
634:
 %635 = load i32, i32* %79
 %636 = icmp ne i32 %635, 0
 br i1 %636, label %670, label %637
637:
 %638 = load i8*, i8** %99
 %639 = load i8*, i8** %117
 %640 = getelementptr %struct.mz_zip_internal_state_tag, i8* %639, i32 0, i32 0
 %641 = load i64, i64* %119
 store i8* %638, i8** %86
 store i8* %640, i8** %87
 store i64 %641, i64* %88
 store i32 0, i32* %89
 %642 = load i64, i64* %88
 %643 = load i8*, i8** %87
 %644 = getelementptr %struct.mz_zip_array, i8* %643, i32 0, i32 2
 %645 = load i64, i64* %644
 %646 = icmp ugt i64 %642, %645
 br i1 %646, label %647, label %656
647:
 %648 = load i8*, i8** %86
 %649 = load i8*, i8** %87
 %650 = load i64, i64* %88
 %651 = load i32, i32* %89
 %652 = call i32 @mz_zip_array_ensure_capacity (i8* %648, i8* %649, i64 %650, i32 %651)
 %653 = icmp ne i32 %652, 0
 br i1 %653, label %655, label %654
654:
 store i32 0, i32* %85
 br label %660
655:
 br label %656
656:
 %657 = load i64, i64* %88
 %658 = load i8*, i8** %87
 %659 = getelementptr %struct.mz_zip_array, i8* %658, i32 0, i32 1
 store i64 %657, i64* %659
 store i32 1, i32* %85
 br label %660
660:
 %661 = load i32, i32* %85
 %662 = load i8*, i8** %99
 store i8* %662, i8** %96
 store i32 16, i32* %97
 %663 = load i8*, i8** %96
 %664 = icmp ne i8* %663, null
 br i1 %664, label %665, label %669
665:
 %666 = load i32, i32* %97
 %667 = load i8*, i8** %96
 %668 = getelementptr %struct.mz_zip_archive, i8* %667, i32 0, i32 5
 store i32 %666, i32* %668
 br label %669
669:
 store i32 0, i32* %98
 br label %671
670:
 store i32 1, i32* %98
 br label %671
671:
 %672 = load i32, i32* %98
 ret i32 %672
}

define i32 @mz_zip_writer_add_read_buf_callback (i8* %0, i8* %1, i8* %2, i8* %3, i64 %4, i8* %5, i8* %6, i16 %7, i32 %8, i8* %9, i32 %10, i8* %11, i32 %12) {
 %14 = alloca i8*
 %15 = alloca i32
 %16 = alloca i8*
 %17 = alloca i32
 %18 = alloca i8*
 %19 = alloca i64
 %20 = alloca i8*
 %21 = alloca i32
 %22 = alloca i8*
 %23 = alloca i32
 %24 = alloca i8*
 %25 = alloca i64
 %26 = alloca i8*
 %27 = alloca i32
 %28 = alloca i8*
 %29 = alloca i32
 %30 = alloca i8*
 %31 = alloca i32
 %32 = alloca i8*
 %33 = alloca i32
 %34 = alloca i8*
 %35 = alloca i32
 %36 = alloca i8*
 %37 = alloca i32
 %38 = alloca i8*
 %39 = alloca i32
 %40 = alloca i8*
 %41 = alloca i32
 %42 = alloca i8*
 %43 = alloca i32
 %44 = alloca i8*
 %45 = alloca i32
 %46 = alloca i8*
 %47 = alloca i32
 %48 = alloca i8*
 %49 = alloca i32
 %50 = alloca i8*
 %51 = alloca i32
 %52 = alloca i8*
 %53 = alloca i32
 %54 = alloca i8*
 %55 = alloca i32
 %56 = alloca i8*
 %57 = alloca i32
 %58 = alloca i8*
 %59 = alloca i32
 %60 = alloca i8*
 %61 = alloca i32
 %62 = alloca i8*
 %63 = alloca i32
 %64 = alloca i8*
 %65 = alloca i32
 %66 = alloca i8*
 %67 = alloca i32
 %68 = alloca i8*
 %69 = alloca i32
 %70 = alloca i8*
 %71 = alloca i32
 %72 = alloca i8*
 %73 = alloca i32
 %74 = alloca i8*
 %75 = alloca i32
 %76 = alloca i8*
 %77 = alloca i32
 %78 = alloca i8*
 %79 = alloca i32
 %80 = alloca i8*
 %81 = alloca i32
 %82 = alloca i8*
 %83 = alloca i32
 %84 = alloca i8*
 %85 = alloca i32
 %86 = alloca i8*
 %87 = alloca i32
 %88 = alloca i8*
 %89 = alloca i32
 %90 = alloca i32
 %91 = alloca i8*
 %92 = alloca i8*
 %93 = alloca i8*
 %94 = alloca i8*
 %95 = alloca i64
 %96 = alloca i8*
 %97 = alloca i8*
 %98 = alloca i16
 %99 = alloca i32
 %100 = alloca i8*
 %101 = alloca i32
 %102 = alloca i8*
 %103 = alloca i32
 %104 = alloca i16
 %105 = alloca i32
 %106 = alloca i32
 %107 = alloca i32
 %108 = alloca i16
 %109 = alloca i16
 %110 = alloca i16
 %111 = alloca i16
 %112 = alloca i64
 %113 = alloca i64
 %114 = alloca i64
 %115 = alloca i64
 %116 = alloca i64
 %117 = alloca [30 x i8]
 %118 = alloca i8*
 %119 = alloca i32
 %120 = alloca [28 x i8]
 %121 = alloca i8*
 %122 = alloca i64
 %123 = alloca i64
 %124 = alloca i8*
 %125 = alloca i64
 %126 = alloca i32
 %127 = alloca %struct.mz_zip_writer_add_state
 %128 = alloca i8*
 %129 = alloca i32
 %130 = alloca i32
 %131 = alloca i64
 %132 = alloca [24 x i8]
 %133 = alloca i32
 store i8* %0, i8** %91
 store i8* %1, i8** %92
 store i8* %2, i8** %93
 store i8* %3, i8** %94
 store i64 %4, i64* %95
 store i8* %5, i8** %96
 store i8* %6, i8** %97
 store i16 %7, i16* %98
 store i32 %8, i32* %99
 store i8* %9, i8** %100
 store i32 %10, i32* %101
 store i8* %11, i8** %102
 store i32 %12, i32* %103
 store i32 0, i32* %105
 store i16 0, i16* %108
 store i16 0, i16* %109
 store i16 0, i16* %110
 store i16 0, i16* %111
 %134 = load i8*, i8** %91
 %135 = getelementptr %struct.mz_zip_archive, i8* %134, i32 0, i32 0
 %136 = load i64, i64* %135
 store i64 %136, i64* %113
 store i64 0, i64* %114
 store i64 0, i64* %115
 store i8* null, i8** %118
 store i32 0, i32* %119
 store i64 0, i64* %122
 %137 = load i32, i32* %99
 %138 = icmp slt i32 %137, 0
 br i1 %138, label %139, label %140
139:
 store i32 6, i32* %99
 br label %140
140:
 %141 = load i32, i32* %99
 %142 = and i32 %141, 15
 store i32 %142, i32* %106
 %143 = load i32, i32* %99
 %144 = and i32 %143, 131072
 %145 = icmp ne i32 %144, 0
 %146 = zext i1 %145 to i64
 %147 = select i1 %145, i32 0, i32 8
 %148 = trunc i32 %147 to i16
 store i16 %148, i16* %104
 %149 = load i32, i32* %99
 %150 = and i32 %149, 65536
 %151 = icmp ne i32 %150, 0
 br i1 %151, label %157, label %152
152:
 %153 = load i16, i16* %104
 %154 = zext i16 %153 to i32
 %155 = or i32 %154, 2048
 %156 = trunc i32 %155 to i16
 store i16 %156, i16* %104
 br label %157
157:
 %158 = load i8*, i8** %91
 %159 = icmp ne i8* %158, null
 br i1 %159, label %160, label %183
160:
 %161 = load i8*, i8** %91
 %162 = getelementptr %struct.mz_zip_archive, i8* %161, i32 0, i32 15
 %163 = load i8*, i8** %162
 %164 = icmp ne i8* %163, null
 br i1 %164, label %165, label %183
165:
 %166 = load i8*, i8** %91
 %167 = getelementptr %struct.mz_zip_archive, i8* %166, i32 0, i32 3
 %168 = load i32, i32* %167
 %169 = icmp ne i32 %168, 2
 br i1 %169, label %183, label %170
170:
 %171 = load i8*, i8** %92
 %172 = icmp ne i8* %171, null
 br i1 %172, label %173, label %183
173:
 %174 = load i16, i16* %98
 %175 = zext i16 %174 to i32
 %176 = icmp ne i32 %175, 0
 br i1 %176, label %177, label %180
177:
 %178 = load i8*, i8** %97
 %179 = icmp ne i8* %178, null
 br i1 %179, label %180, label %183
180:
 %181 = load i32, i32* %106
 %182 = icmp ugt i32 %181, 10
 br i1 %182, label %183, label %192
183:
 %184 = load i8*, i8** %91
 store i8* %184, i8** %34
 store i32 24, i32* %35
 %185 = load i8*, i8** %34
 %186 = icmp ne i8* %185, null
 br i1 %186, label %187, label %191
187:
 %188 = load i32, i32* %35
 %189 = load i8*, i8** %34
 %190 = getelementptr %struct.mz_zip_archive, i8* %189, i32 0, i32 5
 store i32 %188, i32* %190
 br label %191
191:
 store i32 0, i32* %90
 br label %1360
192:
 %193 = load i8*, i8** %91
 %194 = getelementptr %struct.mz_zip_archive, i8* %193, i32 0, i32 15
 %195 = load i8*, i8** %194
 store i8* %195, i8** %121
 %196 = load i8*, i8** %121
 %197 = getelementptr %struct.mz_zip_internal_state_tag, i8* %196, i32 0, i32 4
 %198 = load i32, i32* %197
 %199 = icmp ne i32 %198, 0
 br i1 %199, label %206, label %200
200:
 %201 = load i64, i64* %95
 %202 = icmp ugt i64 %201, 4294967295
 br i1 %202, label %203, label %206
203:
 %204 = load i8*, i8** %121
 %205 = getelementptr %struct.mz_zip_internal_state_tag, i8* %204, i32 0, i32 4
 store i32 1, i32* %205
 br label %206
206:
 %207 = load i32, i32* %99
 %208 = and i32 %207, 1024
 %209 = icmp ne i32 %208, 0
 br i1 %209, label %210, label %219
210:
 %211 = load i8*, i8** %91
 store i8* %211, i8** %36
 store i32 24, i32* %37
 %212 = load i8*, i8** %36
 %213 = icmp ne i8* %212, null
 br i1 %213, label %214, label %218
214:
 %215 = load i32, i32* %37
 %216 = load i8*, i8** %36
 %217 = getelementptr %struct.mz_zip_archive, i8* %216, i32 0, i32 5
 store i32 %215, i32* %217
 br label %218
218:
 store i32 0, i32* %90
 br label %1360
219:
 %220 = load i8*, i8** %92
 %221 = call i32 @mz_zip_writer_validate_archive_name (i8* %220)
 %222 = icmp ne i32 %221, 0
 br i1 %222, label %232, label %223
223:
 %224 = load i8*, i8** %91
 store i8* %224, i8** %38
 store i32 25, i32* %39
 %225 = load i8*, i8** %38
 %226 = icmp ne i8* %225, null
 br i1 %226, label %227, label %231
227:
 %228 = load i32, i32* %39
 %229 = load i8*, i8** %38
 %230 = getelementptr %struct.mz_zip_archive, i8* %229, i32 0, i32 5
 store i32 %228, i32* %230
 br label %231
231:
 store i32 0, i32* %90
 br label %1360
232:
 %233 = load i8*, i8** %121
 %234 = getelementptr %struct.mz_zip_internal_state_tag, i8* %233, i32 0, i32 4
 %235 = load i32, i32* %234
 %236 = icmp ne i32 %235, 0
 br i1 %236, label %237, label %252
237:
 %238 = load i8*, i8** %91
 %239 = getelementptr %struct.mz_zip_archive, i8* %238, i32 0, i32 2
 %240 = load i32, i32* %239
 %241 = icmp eq i32 %240, -1
 br i1 %241, label %242, label %251
242:
 %243 = load i8*, i8** %91
 store i8* %243, i8** %40
 store i32 2, i32* %41
 %244 = load i8*, i8** %40
 %245 = icmp ne i8* %244, null
 br i1 %245, label %246, label %250
246:
 %247 = load i32, i32* %41
 %248 = load i8*, i8** %40
 %249 = getelementptr %struct.mz_zip_archive, i8* %248, i32 0, i32 5
 store i32 %247, i32* %249
 br label %250
250:
 store i32 0, i32* %90
 br label %1360
251:
 br label %261
252:
 %253 = load i8*, i8** %91
 %254 = getelementptr %struct.mz_zip_archive, i8* %253, i32 0, i32 2
 %255 = load i32, i32* %254
 %256 = icmp eq i32 %255, 65535
 br i1 %256, label %257, label %260
257:
 %258 = load i8*, i8** %121
 %259 = getelementptr %struct.mz_zip_internal_state_tag, i8* %258, i32 0, i32 4
 store i32 1, i32* %259
 br label %260
260:
 br label %261
261:
 %262 = load i8*, i8** %92
 %263 = call i64 @strlen (i8* %262)
 store i64 %263, i64* %116
 %264 = load i64, i64* %116
 %265 = icmp ugt i64 %264, 65535
 br i1 %265, label %266, label %275
266:
 %267 = load i8*, i8** %91
 store i8* %267, i8** %42
 store i32 25, i32* %43
 %268 = load i8*, i8** %42
 %269 = icmp ne i8* %268, null
 br i1 %269, label %270, label %274
270:
 %271 = load i32, i32* %43
 %272 = load i8*, i8** %42
 %273 = getelementptr %struct.mz_zip_archive, i8* %272, i32 0, i32 5
 store i32 %271, i32* %273
 br label %274
274:
 store i32 0, i32* %90
 br label %1360
275:
 %276 = load i8*, i8** %91
 %277 = call i32 @mz_zip_writer_compute_padding_needed_for_file_alignment (i8* %276)
 store i32 %277, i32* %107
 %278 = load i8*, i8** %121
 %279 = getelementptr %struct.mz_zip_internal_state_tag, i8* %278, i32 0, i32 0
 %280 = getelementptr %struct.mz_zip_array, i8* %279, i32 0, i32 1
 %281 = load i64, i64* %280
 %282 = add i64 %281, 46
 %283 = load i64, i64* %116
 %284 = add i64 %282, %283
 %285 = add i64 %284, 28
 %286 = load i16, i16* %98
 %287 = zext i16 %286 to i64
 %288 = add i64 %285, %287
 %289 = icmp uge i64 %288, 4294967295
 br i1 %289, label %290, label %299
290:
 %291 = load i8*, i8** %91
 store i8* %291, i8** %44
 store i32 15, i32* %45
 %292 = load i8*, i8** %44
 %293 = icmp ne i8* %292, null
 br i1 %293, label %294, label %298
294:
 %295 = load i32, i32* %45
 %296 = load i8*, i8** %44
 %297 = getelementptr %struct.mz_zip_archive, i8* %296, i32 0, i32 5
 store i32 %295, i32* %297
 br label %298
298:
 store i32 0, i32* %90
 br label %1360
299:
 %300 = load i8*, i8** %121
 %301 = getelementptr %struct.mz_zip_internal_state_tag, i8* %300, i32 0, i32 4
 %302 = load i32, i32* %301
 %303 = icmp ne i32 %302, 0
 br i1 %303, label %339, label %304
304:
 %305 = load i8*, i8** %91
 %306 = getelementptr %struct.mz_zip_archive, i8* %305, i32 0, i32 0
 %307 = load i64, i64* %306
 %308 = load i32, i32* %107
 %309 = zext i32 %308 to i64
 %310 = add i64 %307, %309
 %311 = add i64 %310, 30
 %312 = load i64, i64* %116
 %313 = add i64 %311, %312
 %314 = add i64 %313, 46
 %315 = load i64, i64* %116
 %316 = add i64 %314, %315
 %317 = load i16, i16* %98
 %318 = zext i16 %317 to i64
 %319 = add i64 %316, %318
 %320 = load i32, i32* %101
 %321 = zext i32 %320 to i64
 %322 = add i64 %319, %321
 %323 = load i8*, i8** %121
 %324 = getelementptr %struct.mz_zip_internal_state_tag, i8* %323, i32 0, i32 0
 %325 = getelementptr %struct.mz_zip_array, i8* %324, i32 0, i32 1
 %326 = load i64, i64* %325
 %327 = add i64 %322, %326
 %328 = add i64 %327, 22
 %329 = add i64 %328, 1024
 %330 = add i64 %329, 16
 %331 = load i32, i32* %103
 %332 = zext i32 %331 to i64
 %333 = add i64 %330, %332
 %334 = icmp ugt i64 %333, 4294967295
 br i1 %334, label %335, label %338
335:
 %336 = load i8*, i8** %121
 %337 = getelementptr %struct.mz_zip_internal_state_tag, i8* %336, i32 0, i32 4
 store i32 1, i32* %337
 br label %338
338:
 br label %339
339:
 %340 = load i8*, i8** %96
 %341 = icmp ne i8* %340, null
 br i1 %341, label %342, label %345
342:
 %343 = load i8*, i8** %96
 %344 = load i64, i64* %343
 call void @mz_zip_time_t_to_dos_time (i64 %344, i8* %109, i8* %110)
 br label %345
345:
 %346 = load i64, i64* %95
 %347 = icmp ule i64 %346, 3
 br i1 %347, label %348, label %349
348:
 store i32 0, i32* %106
 br label %349
349:
 %350 = load i8*, i8** %91
 %351 = load i64, i64* %113
 %352 = load i32, i32* %107
 %353 = call i32 @mz_zip_writer_write_zeros (i8* %350, i64 %351, i32 %352)
 %354 = icmp ne i32 %353, 0
 br i1 %354, label %364, label %355
355:
 %356 = load i8*, i8** %91
 store i8* %356, i8** %46
 store i32 19, i32* %47
 %357 = load i8*, i8** %46
 %358 = icmp ne i8* %357, null
 br i1 %358, label %359, label %363
359:
 %360 = load i32, i32* %47
 %361 = load i8*, i8** %46
 %362 = getelementptr %struct.mz_zip_archive, i8* %361, i32 0, i32 5
 store i32 %360, i32* %362
 br label %363
363:
 store i32 0, i32* %90
 br label %1360
364:
 %365 = load i32, i32* %107
 %366 = zext i32 %365 to i64
 %367 = load i64, i64* %113
 %368 = add i64 %367, %366
 store i64 %368, i64* %113
 %369 = load i64, i64* %113
 store i64 %369, i64* %112
 %370 = load i8*, i8** %91
 %371 = getelementptr %struct.mz_zip_archive, i8* %370, i32 0, i32 6
 %372 = load i64, i64* %371
 %373 = icmp ne i64 %372, 0
 br i1 %373, label %374, label %390
374:
 %375 = load i64, i64* %113
 %376 = load i8*, i8** %91
 %377 = getelementptr %struct.mz_zip_archive, i8* %376, i32 0, i32 6
 %378 = load i64, i64* %377
 %379 = sub i64 %378, 1
 %380 = and i64 %375, %379
 %381 = icmp eq i64 %380, 0
 %382 = xor i1 %381, 1
 %383 = zext i1 %382 to i32
 %384 = sext i32 %383 to i64
 %385 = icmp ne i64 %384, 0
 br i1 %385, label %386, label %388
386:
 call void @__assert_rtn (i8* @__func__.mz_zip_writer_add_read_buf_callback, i8* @.str.11, i32 8015, i8* @.str.24)
 unreachable
387:
 br label %389
388:
 br label %389
389:
 br label %390
390:
 %391 = load i64, i64* %95
 %392 = icmp ne i64 %391, 0
 br i1 %392, label %393, label %397
393:
 %394 = load i32, i32* %106
 %395 = icmp ne i32 %394, 0
 br i1 %395, label %396, label %397
396:
 store i16 8, i16* %108
 br label %397
397:
 %398 = getelementptr [30 x i8], i8* %117, i64 0, i64 0
 call void @memset (i8* %398, i8 0, i64 30, i1 0)
 %399 = load i8*, i8** %121
 %400 = getelementptr %struct.mz_zip_internal_state_tag, i8* %399, i32 0, i32 4
 %401 = load i32, i32* %400
 %402 = icmp ne i32 %401, 0
 br i1 %402, label %403, label %545
403:
 %404 = load i64, i64* %95
 %405 = icmp uge i64 %404, 4294967295
 br i1 %405, label %409, label %406
406:
 %407 = load i64, i64* %112
 %408 = icmp uge i64 %407, 4294967295
 br i1 %408, label %409, label %445
409:
 %410 = getelementptr [28 x i8], i8* %120, i64 0, i64 0
 store i8* %410, i8** %118
 %411 = load i32, i32* %99
 %412 = and i32 %411, 131072
 %413 = icmp ne i32 %412, 0
 br i1 %413, label %414, label %435
414:
 %415 = getelementptr [28 x i8], i8* %120, i64 0, i64 0
 %416 = load i64, i64* %95
 %417 = icmp uge i64 %416, 4294967295
 br i1 %417, label %418, label %419
418:
 br label %420
419:
 br label %420
420:
 %421 = phi i8* [%114, %418], [null, %419]
 %422 = load i64, i64* %95
 %423 = icmp uge i64 %422, 4294967295
 br i1 %423, label %424, label %425
424:
 br label %426
425:
 br label %426
426:
 %427 = phi i8* [%115, %424], [null, %425]
 %428 = load i64, i64* %112
 %429 = icmp uge i64 %428, 4294967295
 br i1 %429, label %430, label %431
430:
 br label %432
431:
 br label %432
432:
 %433 = phi i8* [%112, %430], [null, %431]
 %434 = call i32 @mz_zip_writer_create_zip64_extra_data (i8* %415, i8* %421, i8* %427, i8* %433)
 store i32 %434, i32* %119
 br label %444
435:
 %436 = getelementptr [28 x i8], i8* %120, i64 0, i64 0
 %437 = load i64, i64* %112
 %438 = icmp uge i64 %437, 4294967295
 br i1 %438, label %439, label %440
439:
 br label %441
440:
 br label %441
441:
 %442 = phi i8* [%112, %439], [null, %440]
 %443 = call i32 @mz_zip_writer_create_zip64_extra_data (i8* %436, i8* null, i8* null, i8* %442)
 store i32 %443, i32* %119
 br label %444
444:
 br label %445
445:
 %446 = load i8*, i8** %91
 %447 = getelementptr [30 x i8], i8* %117, i64 0, i64 0
 %448 = load i64, i64* %116
 %449 = trunc i64 %448 to i16
 %450 = load i32, i32* %119
 %451 = load i32, i32* %101
 %452 = add i32 %450, %451
 %453 = trunc i32 %452 to i16
 %454 = load i16, i16* %108
 %455 = load i16, i16* %104
 %456 = load i16, i16* %109
 %457 = load i16, i16* %110
 %458 = call i32 @mz_zip_writer_create_local_dir_header (i8* %446, i8* %447, i16 %449, i16 %453, i64 0, i64 0, i32 0, i16 %454, i16 %455, i16 %456, i16 %457)
 %459 = icmp ne i32 %458, 0
 br i1 %459, label %469, label %460
460:
 %461 = load i8*, i8** %91
 store i8* %461, i8** %48
 store i32 27, i32* %49
 %462 = load i8*, i8** %48
 %463 = icmp ne i8* %462, null
 br i1 %463, label %464, label %468
464:
 %465 = load i32, i32* %49
 %466 = load i8*, i8** %48
 %467 = getelementptr %struct.mz_zip_archive, i8* %466, i32 0, i32 5
 store i32 %465, i32* %467
 br label %468
468:
 store i32 0, i32* %90
 br label %1360
469:
 %470 = load i8*, i8** %91
 %471 = getelementptr %struct.mz_zip_archive, i8* %470, i32 0, i32 12
 %472 = load i8*, i8** %471
 %473 = load i8*, i8** %91
 %474 = getelementptr %struct.mz_zip_archive, i8* %473, i32 0, i32 14
 %475 = load i8*, i8** %474
 %476 = load i64, i64* %113
 %477 = getelementptr [30 x i8], i8* %117, i64 0, i64 0
 %478 = call i64 %472 (i8* %475, i64 %476, i8* %477, i64 30)
 %479 = icmp ne i64 %478, 30
 br i1 %479, label %480, label %489
480:
 %481 = load i8*, i8** %91
 store i8* %481, i8** %50
 store i32 19, i32* %51
 %482 = load i8*, i8** %50
 %483 = icmp ne i8* %482, null
 br i1 %483, label %484, label %488
484:
 %485 = load i32, i32* %51
 %486 = load i8*, i8** %50
 %487 = getelementptr %struct.mz_zip_archive, i8* %486, i32 0, i32 5
 store i32 %485, i32* %487
 br label %488
488:
 store i32 0, i32* %90
 br label %1360
489:
 %490 = load i64, i64* %113
 %491 = add i64 %490, 30
 store i64 %491, i64* %113
 %492 = load i8*, i8** %91
 %493 = getelementptr %struct.mz_zip_archive, i8* %492, i32 0, i32 12
 %494 = load i8*, i8** %493
 %495 = load i8*, i8** %91
 %496 = getelementptr %struct.mz_zip_archive, i8* %495, i32 0, i32 14
 %497 = load i8*, i8** %496
 %498 = load i64, i64* %113
 %499 = load i8*, i8** %92
 %500 = load i64, i64* %116
 %501 = call i64 %494 (i8* %497, i64 %498, i8* %499, i64 %500)
 %502 = load i64, i64* %116
 %503 = icmp ne i64 %501, %502
 br i1 %503, label %504, label %513
504:
 %505 = load i8*, i8** %91
 store i8* %505, i8** %52
 store i32 19, i32* %53
 %506 = load i8*, i8** %52
 %507 = icmp ne i8* %506, null
 br i1 %507, label %508, label %512
508:
 %509 = load i32, i32* %53
 %510 = load i8*, i8** %52
 %511 = getelementptr %struct.mz_zip_archive, i8* %510, i32 0, i32 5
 store i32 %509, i32* %511
 br label %512
512:
 store i32 0, i32* %90
 br label %1360
513:
 %514 = load i64, i64* %116
 %515 = load i64, i64* %113
 %516 = add i64 %515, %514
 store i64 %516, i64* %113
 %517 = load i8*, i8** %91
 %518 = getelementptr %struct.mz_zip_archive, i8* %517, i32 0, i32 12
 %519 = load i8*, i8** %518
 %520 = load i8*, i8** %91
 %521 = getelementptr %struct.mz_zip_archive, i8* %520, i32 0, i32 14
 %522 = load i8*, i8** %521
 %523 = load i64, i64* %113
 %524 = getelementptr [28 x i8], i8* %120, i64 0, i64 0
 %525 = load i32, i32* %119
 %526 = zext i32 %525 to i64
 %527 = call i64 %519 (i8* %522, i64 %523, i8* %524, i64 %526)
 %528 = load i32, i32* %119
 %529 = zext i32 %528 to i64
 %530 = icmp ne i64 %527, %529
 br i1 %530, label %531, label %540
531:
 %532 = load i8*, i8** %91
 store i8* %532, i8** %54
 store i32 19, i32* %55
 %533 = load i8*, i8** %54
 %534 = icmp ne i8* %533, null
 br i1 %534, label %535, label %539
535:
 %536 = load i32, i32* %55
 %537 = load i8*, i8** %54
 %538 = getelementptr %struct.mz_zip_archive, i8* %537, i32 0, i32 5
 store i32 %536, i32* %538
 br label %539
539:
 store i32 0, i32* %90
 br label %1360
540:
 %541 = load i32, i32* %119
 %542 = zext i32 %541 to i64
 %543 = load i64, i64* %113
 %544 = add i64 %543, %542
 store i64 %544, i64* %113
 br label %630
545:
 %546 = load i64, i64* %115
 %547 = icmp ugt i64 %546, 4294967295
 br i1 %547, label %551, label %548
548:
 %549 = load i64, i64* %113
 %550 = icmp ugt i64 %549, 4294967295
 br i1 %550, label %551, label %560
551:
 %552 = load i8*, i8** %91
 store i8* %552, i8** %56
 store i32 29, i32* %57
 %553 = load i8*, i8** %56
 %554 = icmp ne i8* %553, null
 br i1 %554, label %555, label %559
555:
 %556 = load i32, i32* %57
 %557 = load i8*, i8** %56
 %558 = getelementptr %struct.mz_zip_archive, i8* %557, i32 0, i32 5
 store i32 %556, i32* %558
 br label %559
559:
 store i32 0, i32* %90
 br label %1360
560:
 %561 = load i8*, i8** %91
 %562 = getelementptr [30 x i8], i8* %117, i64 0, i64 0
 %563 = load i64, i64* %116
 %564 = trunc i64 %563 to i16
 %565 = load i32, i32* %101
 %566 = trunc i32 %565 to i16
 %567 = load i16, i16* %108
 %568 = load i16, i16* %104
 %569 = load i16, i16* %109
 %570 = load i16, i16* %110
 %571 = call i32 @mz_zip_writer_create_local_dir_header (i8* %561, i8* %562, i16 %564, i16 %566, i64 0, i64 0, i32 0, i16 %567, i16 %568, i16 %569, i16 %570)
 %572 = icmp ne i32 %571, 0
 br i1 %572, label %582, label %573
573:
 %574 = load i8*, i8** %91
 store i8* %574, i8** %58
 store i32 27, i32* %59
 %575 = load i8*, i8** %58
 %576 = icmp ne i8* %575, null
 br i1 %576, label %577, label %581
577:
 %578 = load i32, i32* %59
 %579 = load i8*, i8** %58
 %580 = getelementptr %struct.mz_zip_archive, i8* %579, i32 0, i32 5
 store i32 %578, i32* %580
 br label %581
581:
 store i32 0, i32* %90
 br label %1360
582:
 %583 = load i8*, i8** %91
 %584 = getelementptr %struct.mz_zip_archive, i8* %583, i32 0, i32 12
 %585 = load i8*, i8** %584
 %586 = load i8*, i8** %91
 %587 = getelementptr %struct.mz_zip_archive, i8* %586, i32 0, i32 14
 %588 = load i8*, i8** %587
 %589 = load i64, i64* %113
 %590 = getelementptr [30 x i8], i8* %117, i64 0, i64 0
 %591 = call i64 %585 (i8* %588, i64 %589, i8* %590, i64 30)
 %592 = icmp ne i64 %591, 30
 br i1 %592, label %593, label %602
593:
 %594 = load i8*, i8** %91
 store i8* %594, i8** %60
 store i32 19, i32* %61
 %595 = load i8*, i8** %60
 %596 = icmp ne i8* %595, null
 br i1 %596, label %597, label %601
597:
 %598 = load i32, i32* %61
 %599 = load i8*, i8** %60
 %600 = getelementptr %struct.mz_zip_archive, i8* %599, i32 0, i32 5
 store i32 %598, i32* %600
 br label %601
601:
 store i32 0, i32* %90
 br label %1360
602:
 %603 = load i64, i64* %113
 %604 = add i64 %603, 30
 store i64 %604, i64* %113
 %605 = load i8*, i8** %91
 %606 = getelementptr %struct.mz_zip_archive, i8* %605, i32 0, i32 12
 %607 = load i8*, i8** %606
 %608 = load i8*, i8** %91
 %609 = getelementptr %struct.mz_zip_archive, i8* %608, i32 0, i32 14
 %610 = load i8*, i8** %609
 %611 = load i64, i64* %113
 %612 = load i8*, i8** %92
 %613 = load i64, i64* %116
 %614 = call i64 %607 (i8* %610, i64 %611, i8* %612, i64 %613)
 %615 = load i64, i64* %116
 %616 = icmp ne i64 %614, %615
 br i1 %616, label %617, label %626
617:
 %618 = load i8*, i8** %91
 store i8* %618, i8** %62
 store i32 19, i32* %63
 %619 = load i8*, i8** %62
 %620 = icmp ne i8* %619, null
 br i1 %620, label %621, label %625
621:
 %622 = load i32, i32* %63
 %623 = load i8*, i8** %62
 %624 = getelementptr %struct.mz_zip_archive, i8* %623, i32 0, i32 5
 store i32 %622, i32* %624
 br label %625
625:
 store i32 0, i32* %90
 br label %1360
626:
 %627 = load i64, i64* %116
 %628 = load i64, i64* %113
 %629 = add i64 %628, %627
 store i64 %629, i64* %113
 br label %630
630:
 %631 = load i32, i32* %101
 %632 = icmp ugt i32 %631, 0
 br i1 %632, label %633, label %662
633:
 %634 = load i8*, i8** %91
 %635 = getelementptr %struct.mz_zip_archive, i8* %634, i32 0, i32 12
 %636 = load i8*, i8** %635
 %637 = load i8*, i8** %91
 %638 = getelementptr %struct.mz_zip_archive, i8* %637, i32 0, i32 14
 %639 = load i8*, i8** %638
 %640 = load i64, i64* %113
 %641 = load i8*, i8** %100
 %642 = load i32, i32* %101
 %643 = zext i32 %642 to i64
 %644 = call i64 %636 (i8* %639, i64 %640, i8* %641, i64 %643)
 %645 = load i32, i32* %101
 %646 = zext i32 %645 to i64
 %647 = icmp ne i64 %644, %646
 br i1 %647, label %648, label %657
648:
 %649 = load i8*, i8** %91
 store i8* %649, i8** %64
 store i32 19, i32* %65
 %650 = load i8*, i8** %64
 %651 = icmp ne i8* %650, null
 br i1 %651, label %652, label %656
652:
 %653 = load i32, i32* %65
 %654 = load i8*, i8** %64
 %655 = getelementptr %struct.mz_zip_archive, i8* %654, i32 0, i32 5
 store i32 %653, i32* %655
 br label %656
656:
 store i32 0, i32* %90
 br label %1360
657:
 %658 = load i32, i32* %101
 %659 = zext i32 %658 to i64
 %660 = load i64, i64* %113
 %661 = add i64 %660, %659
 store i64 %661, i64* %113
 br label %662
662:
 %663 = load i64, i64* %95
 %664 = icmp ne i64 %663, 0
 br i1 %664, label %665, label %934
665:
 %666 = load i8*, i8** %91
 %667 = getelementptr %struct.mz_zip_archive, i8* %666, i32 0, i32 7
 %668 = load i8*, i8** %667
 %669 = load i8*, i8** %91
 %670 = getelementptr %struct.mz_zip_archive, i8* %669, i32 0, i32 10
 %671 = load i8*, i8** %670
 %672 = call i8* %668 (i8* %671, i64 1, i64 65536)
 store i8* %672, i8** %124
 %673 = load i8*, i8** %124
 %674 = icmp ne i8* %673, null
 br i1 %674, label %684, label %675
675:
 %676 = load i8*, i8** %91
 store i8* %676, i8** %66
 store i32 16, i32* %67
 %677 = load i8*, i8** %66
 %678 = icmp ne i8* %677, null
 br i1 %678, label %679, label %683
679:
 %680 = load i32, i32* %67
 %681 = load i8*, i8** %66
 %682 = getelementptr %struct.mz_zip_archive, i8* %681, i32 0, i32 5
 store i32 %680, i32* %682
 br label %683
683:
 store i32 0, i32* %90
 br label %1360
684:
 %685 = load i32, i32* %106
 %686 = icmp ne i32 %685, 0
 br i1 %686, label %767, label %687
687:
 br label %688
688:
 %689 = load i8*, i8** %93
 %690 = load i8*, i8** %94
 %691 = load i64, i64* %122
 %692 = load i8*, i8** %124
 %693 = call i64 %689 (i8* %690, i64 %691, i8* %692, i64 65536)
 store i64 %693, i64* %125
 %694 = load i64, i64* %125
 %695 = icmp eq i64 %694, 0
 br i1 %695, label %696, label %697
696:
 br label %764
697:
 %698 = load i64, i64* %125
 %699 = icmp ugt i64 %698, 65536
 br i1 %699, label %706, label %700
700:
 %701 = load i64, i64* %122
 %702 = load i64, i64* %125
 %703 = add i64 %701, %702
 %704 = load i64, i64* %95
 %705 = icmp ugt i64 %703, %704
 br i1 %705, label %706, label %722
706:
 %707 = load i8*, i8** %91
 %708 = getelementptr %struct.mz_zip_archive, i8* %707, i32 0, i32 8
 %709 = load i8*, i8** %708
 %710 = load i8*, i8** %91
 %711 = getelementptr %struct.mz_zip_archive, i8* %710, i32 0, i32 10
 %712 = load i8*, i8** %711
 %713 = load i8*, i8** %124
 call void %709 (i8* %712, i8* %713)
 %714 = load i8*, i8** %91
 store i8* %714, i8** %68
 store i32 20, i32* %69
 %715 = load i8*, i8** %68
 %716 = icmp ne i8* %715, null
 br i1 %716, label %717, label %721
717:
 %718 = load i32, i32* %69
 %719 = load i8*, i8** %68
 %720 = getelementptr %struct.mz_zip_archive, i8* %719, i32 0, i32 5
 store i32 %718, i32* %720
 br label %721
721:
 store i32 0, i32* %90
 br label %1360
722:
 %723 = load i8*, i8** %91
 %724 = getelementptr %struct.mz_zip_archive, i8* %723, i32 0, i32 12
 %725 = load i8*, i8** %724
 %726 = load i8*, i8** %91
 %727 = getelementptr %struct.mz_zip_archive, i8* %726, i32 0, i32 14
 %728 = load i8*, i8** %727
 %729 = load i64, i64* %113
 %730 = load i8*, i8** %124
 %731 = load i64, i64* %125
 %732 = call i64 %725 (i8* %728, i64 %729, i8* %730, i64 %731)
 %733 = load i64, i64* %125
 %734 = icmp ne i64 %732, %733
 br i1 %734, label %735, label %751
735:
 %736 = load i8*, i8** %91
 %737 = getelementptr %struct.mz_zip_archive, i8* %736, i32 0, i32 8
 %738 = load i8*, i8** %737
 %739 = load i8*, i8** %91
 %740 = getelementptr %struct.mz_zip_archive, i8* %739, i32 0, i32 10
 %741 = load i8*, i8** %740
 %742 = load i8*, i8** %124
 call void %738 (i8* %741, i8* %742)
 %743 = load i8*, i8** %91
 store i8* %743, i8** %70
 store i32 19, i32* %71
 %744 = load i8*, i8** %70
 %745 = icmp ne i8* %744, null
 br i1 %745, label %746, label %750
746:
 %747 = load i32, i32* %71
 %748 = load i8*, i8** %70
 %749 = getelementptr %struct.mz_zip_archive, i8* %748, i32 0, i32 5
 store i32 %747, i32* %749
 br label %750
750:
 store i32 0, i32* %90
 br label %1360
751:
 %752 = load i64, i64* %125
 %753 = load i64, i64* %122
 %754 = add i64 %753, %752
 store i64 %754, i64* %122
 %755 = load i32, i32* %105
 %756 = zext i32 %755 to i64
 %757 = load i8*, i8** %124
 %758 = load i64, i64* %125
 %759 = call i64 @mz_crc32 (i64 %756, i8* %757, i64 %758)
 %760 = trunc i64 %759 to i32
 store i32 %760, i32* %105
 %761 = load i64, i64* %125
 %762 = load i64, i64* %113
 %763 = add i64 %762, %761
 store i64 %763, i64* %113
 br label %688
764:
 %765 = load i64, i64* %122
 store i64 %765, i64* %114
 %766 = load i64, i64* %114
 store i64 %766, i64* %115
 br label %926
767:
 store i32 0, i32* %126
 %768 = load i8*, i8** %91
 %769 = getelementptr %struct.mz_zip_archive, i8* %768, i32 0, i32 7
 %770 = load i8*, i8** %769
 %771 = load i8*, i8** %91
 %772 = getelementptr %struct.mz_zip_archive, i8* %771, i32 0, i32 10
 %773 = load i8*, i8** %772
 %774 = call i8* %770 (i8* %773, i64 1, i64 319352)
 store i8* %774, i8** %128
 %775 = load i8*, i8** %128
 %776 = icmp ne i8* %775, null
 br i1 %776, label %793, label %777
777:
 %778 = load i8*, i8** %91
 %779 = getelementptr %struct.mz_zip_archive, i8* %778, i32 0, i32 8
 %780 = load i8*, i8** %779
 %781 = load i8*, i8** %91
 %782 = getelementptr %struct.mz_zip_archive, i8* %781, i32 0, i32 10
 %783 = load i8*, i8** %782
 %784 = load i8*, i8** %124
 call void %780 (i8* %783, i8* %784)
 %785 = load i8*, i8** %91
 store i8* %785, i8** %72
 store i32 16, i32* %73
 %786 = load i8*, i8** %72
 %787 = icmp ne i8* %786, null
 br i1 %787, label %788, label %792
788:
 %789 = load i32, i32* %73
 %790 = load i8*, i8** %72
 %791 = getelementptr %struct.mz_zip_archive, i8* %790, i32 0, i32 5
 store i32 %789, i32* %791
 br label %792
792:
 store i32 0, i32* %90
 br label %1360
793:
 %794 = load i8*, i8** %91
 %795 = getelementptr %struct.mz_zip_writer_add_state, i8* %127, i32 0, i32 0
 store i8* %794, i8** %795
 %796 = load i64, i64* %113
 %797 = getelementptr %struct.mz_zip_writer_add_state, i8* %127, i32 0, i32 1
 store i64 %796, i64* %797
 %798 = getelementptr %struct.mz_zip_writer_add_state, i8* %127, i32 0, i32 2
 store i64 0, i64* %798
 %799 = load i8*, i8** %128
 %800 = load i32, i32* %106
 %801 = call i32 @tdefl_create_comp_flags_from_zip_params (i32 %800, i32 -15, i32 0)
 %802 = call i32 @tdefl_init (i8* %799, i8* @mz_zip_writer_add_put_buf_callback, i8* %127, i32 %801)
 %803 = icmp ne i32 %802, 0
 br i1 %803, label %804, label %827
804:
 %805 = load i8*, i8** %91
 %806 = getelementptr %struct.mz_zip_archive, i8* %805, i32 0, i32 8
 %807 = load i8*, i8** %806
 %808 = load i8*, i8** %91
 %809 = getelementptr %struct.mz_zip_archive, i8* %808, i32 0, i32 10
 %810 = load i8*, i8** %809
 %811 = load i8*, i8** %128
 call void %807 (i8* %810, i8* %811)
 %812 = load i8*, i8** %91
 %813 = getelementptr %struct.mz_zip_archive, i8* %812, i32 0, i32 8
 %814 = load i8*, i8** %813
 %815 = load i8*, i8** %91
 %816 = getelementptr %struct.mz_zip_archive, i8* %815, i32 0, i32 10
 %817 = load i8*, i8** %816
 %818 = load i8*, i8** %124
 call void %814 (i8* %817, i8* %818)
 %819 = load i8*, i8** %91
 store i8* %819, i8** %74
 store i32 27, i32* %75
 %820 = load i8*, i8** %74
 %821 = icmp ne i8* %820, null
 br i1 %821, label %822, label %826
822:
 %823 = load i32, i32* %75
 %824 = load i8*, i8** %74
 %825 = getelementptr %struct.mz_zip_archive, i8* %824, i32 0, i32 5
 store i32 %823, i32* %825
 br label %826
826:
 store i32 0, i32* %90
 br label %1360
827:
 br label %828
828:
 store i32 0, i32* %130
 %829 = load i8*, i8** %93
 %830 = load i8*, i8** %94
 %831 = load i64, i64* %122
 %832 = load i8*, i8** %124
 %833 = call i64 %829 (i8* %830, i64 %831, i8* %832, i64 65536)
 store i64 %833, i64* %131
 %834 = load i64, i64* %131
 %835 = icmp ugt i64 %834, 65536
 br i1 %835, label %842, label %836
836:
 %837 = load i64, i64* %122
 %838 = load i64, i64* %131
 %839 = add i64 %837, %838
 %840 = load i64, i64* %95
 %841 = icmp ugt i64 %839, %840
 br i1 %841, label %842, label %851
842:
 %843 = load i8*, i8** %91
 store i8* %843, i8** %76
 store i32 20, i32* %77
 %844 = load i8*, i8** %76
 %845 = icmp ne i8* %844, null
 br i1 %845, label %846, label %850
846:
 %847 = load i32, i32* %77
 %848 = load i8*, i8** %76
 %849 = getelementptr %struct.mz_zip_archive, i8* %848, i32 0, i32 5
 store i32 %847, i32* %849
 br label %850
850:
 br label %902
851:
 %852 = load i64, i64* %131
 %853 = load i64, i64* %122
 %854 = add i64 %853, %852
 store i64 %854, i64* %122
 %855 = load i32, i32* %105
 %856 = zext i32 %855 to i64
 %857 = load i8*, i8** %124
 %858 = load i64, i64* %131
 %859 = call i64 @mz_crc32 (i64 %856, i8* %857, i64 %858)
 %860 = trunc i64 %859 to i32
 store i32 %860, i32* %105
 %861 = load i8*, i8** %91
 %862 = getelementptr %struct.mz_zip_archive, i8* %861, i32 0, i32 13
 %863 = load i8*, i8** %862
 %864 = icmp ne i8* %863, null
 br i1 %864, label %865, label %875
865:
 %866 = load i8*, i8** %91
 %867 = getelementptr %struct.mz_zip_archive, i8* %866, i32 0, i32 13
 %868 = load i8*, i8** %867
 %869 = load i8*, i8** %91
 %870 = getelementptr %struct.mz_zip_archive, i8* %869, i32 0, i32 14
 %871 = load i8*, i8** %870
 %872 = call i32 %868 (i8* %871)
 %873 = icmp ne i32 %872, 0
 br i1 %873, label %874, label %875
874:
 store i32 3, i32* %130
 br label %875
875:
 %876 = load i64, i64* %131
 %877 = icmp eq i64 %876, 0
 br i1 %877, label %878, label %879
878:
 store i32 4, i32* %130
 br label %879
879:
 %880 = load i8*, i8** %128
 %881 = load i8*, i8** %124
 %882 = load i64, i64* %131
 %883 = load i32, i32* %130
 %884 = call i32 @tdefl_compress_buffer (i8* %880, i8* %881, i64 %882, i32 %883)
 store i32 %884, i32* %129
 %885 = load i32, i32* %129
 %886 = icmp eq i32 %885, 1
 br i1 %886, label %887, label %888
887:
 store i32 1, i32* %126
 br label %902
888:
 %889 = load i32, i32* %129
 %890 = icmp ne i32 %889, 0
 br i1 %890, label %891, label %900
891:
 %892 = load i8*, i8** %91
 store i8* %892, i8** %78
 store i32 12, i32* %79
 %893 = load i8*, i8** %78
 %894 = icmp ne i8* %893, null
 br i1 %894, label %895, label %899
895:
 %896 = load i32, i32* %79
 %897 = load i8*, i8** %78
 %898 = getelementptr %struct.mz_zip_archive, i8* %897, i32 0, i32 5
 store i32 %896, i32* %898
 br label %899
899:
 br label %902
900:
 br label %901
901:
 br label %828
902:
 %903 = load i8*, i8** %91
 %904 = getelementptr %struct.mz_zip_archive, i8* %903, i32 0, i32 8
 %905 = load i8*, i8** %904
 %906 = load i8*, i8** %91
 %907 = getelementptr %struct.mz_zip_archive, i8* %906, i32 0, i32 10
 %908 = load i8*, i8** %907
 %909 = load i8*, i8** %128
 call void %905 (i8* %908, i8* %909)
 %910 = load i32, i32* %126
 %911 = icmp ne i32 %910, 0
 br i1 %911, label %920, label %912
912:
 %913 = load i8*, i8** %91
 %914 = getelementptr %struct.mz_zip_archive, i8* %913, i32 0, i32 8
 %915 = load i8*, i8** %914
 %916 = load i8*, i8** %91
 %917 = getelementptr %struct.mz_zip_archive, i8* %916, i32 0, i32 10
 %918 = load i8*, i8** %917
 %919 = load i8*, i8** %124
 call void %915 (i8* %918, i8* %919)
 store i32 0, i32* %90
 br label %1360
920:
 %921 = load i64, i64* %122
 store i64 %921, i64* %114
 %922 = getelementptr %struct.mz_zip_writer_add_state, i8* %127, i32 0, i32 2
 %923 = load i64, i64* %922
 store i64 %923, i64* %115
 %924 = getelementptr %struct.mz_zip_writer_add_state, i8* %127, i32 0, i32 1
 %925 = load i64, i64* %924
 store i64 %925, i64* %113
 br label %926
926:
 %927 = load i8*, i8** %91
 %928 = getelementptr %struct.mz_zip_archive, i8* %927, i32 0, i32 8
 %929 = load i8*, i8** %928
 %930 = load i8*, i8** %91
 %931 = getelementptr %struct.mz_zip_archive, i8* %930, i32 0, i32 10
 %932 = load i8*, i8** %931
 %933 = load i8*, i8** %124
 call void %929 (i8* %932, i8* %933)
 br label %934
934:
 %935 = load i32, i32* %99
 %936 = and i32 %935, 131072
 %937 = icmp ne i32 %936, 0
 br i1 %937, label %1155, label %938
938:
 store i32 16, i32* %133
 %939 = getelementptr [24 x i8], i8* %132, i64 0, i64 0
 %940 = getelementptr i8, i8* %939, i64 0
 store i8* %940, i8** %26
 store i32 134695760, i32* %27
 %941 = load i32, i32* %27
 %942 = trunc i32 %941 to i8
 %943 = load i8*, i8** %26
 store i8 %942, i8* %943
 %944 = load i32, i32* %27
 %945 = lshr i32 %944, 8
 %946 = trunc i32 %945 to i8
 %947 = load i8*, i8** %26
 %948 = getelementptr i8, i8* %947, i64 1
 store i8 %946, i8* %948
 %949 = load i32, i32* %27
 %950 = lshr i32 %949, 16
 %951 = trunc i32 %950 to i8
 %952 = load i8*, i8** %26
 %953 = getelementptr i8, i8* %952, i64 2
 store i8 %951, i8* %953
 %954 = load i32, i32* %27
 %955 = lshr i32 %954, 24
 %956 = trunc i32 %955 to i8
 %957 = load i8*, i8** %26
 %958 = getelementptr i8, i8* %957, i64 3
 store i8 %956, i8* %958
 %959 = getelementptr [24 x i8], i8* %132, i64 0, i64 0
 %960 = getelementptr i8, i8* %959, i64 4
 %961 = load i32, i32* %105
 store i8* %960, i8** %28
 store i32 %961, i32* %29
 %962 = load i32, i32* %29
 %963 = trunc i32 %962 to i8
 %964 = load i8*, i8** %28
 store i8 %963, i8* %964
 %965 = load i32, i32* %29
 %966 = lshr i32 %965, 8
 %967 = trunc i32 %966 to i8
 %968 = load i8*, i8** %28
 %969 = getelementptr i8, i8* %968, i64 1
 store i8 %967, i8* %969
 %970 = load i32, i32* %29
 %971 = lshr i32 %970, 16
 %972 = trunc i32 %971 to i8
 %973 = load i8*, i8** %28
 %974 = getelementptr i8, i8* %973, i64 2
 store i8 %972, i8* %974
 %975 = load i32, i32* %29
 %976 = lshr i32 %975, 24
 %977 = trunc i32 %976 to i8
 %978 = load i8*, i8** %28
 %979 = getelementptr i8, i8* %978, i64 3
 store i8 %977, i8* %979
 %980 = load i8*, i8** %118
 %981 = icmp eq i8* %980, null
 br i1 %981, label %982, label %1039
982:
 %983 = load i64, i64* %115
 %984 = icmp ugt i64 %983, 4294967295
 br i1 %984, label %985, label %994
985:
 %986 = load i8*, i8** %91
 store i8* %986, i8** %80
 store i32 29, i32* %81
 %987 = load i8*, i8** %80
 %988 = icmp ne i8* %987, null
 br i1 %988, label %989, label %993
989:
 %990 = load i32, i32* %81
 %991 = load i8*, i8** %80
 %992 = getelementptr %struct.mz_zip_archive, i8* %991, i32 0, i32 5
 store i32 %990, i32* %992
 br label %993
993:
 store i32 0, i32* %90
 br label %1360
994:
 %995 = getelementptr [24 x i8], i8* %132, i64 0, i64 0
 %996 = getelementptr i8, i8* %995, i64 8
 %997 = load i64, i64* %115
 %998 = trunc i64 %997 to i32
 store i8* %996, i8** %30
 store i32 %998, i32* %31
 %999 = load i32, i32* %31
 %1000 = trunc i32 %999 to i8
 %1001 = load i8*, i8** %30
 store i8 %1000, i8* %1001
 %1002 = load i32, i32* %31
 %1003 = lshr i32 %1002, 8
 %1004 = trunc i32 %1003 to i8
 %1005 = load i8*, i8** %30
 %1006 = getelementptr i8, i8* %1005, i64 1
 store i8 %1004, i8* %1006
 %1007 = load i32, i32* %31
 %1008 = lshr i32 %1007, 16
 %1009 = trunc i32 %1008 to i8
 %1010 = load i8*, i8** %30
 %1011 = getelementptr i8, i8* %1010, i64 2
 store i8 %1009, i8* %1011
 %1012 = load i32, i32* %31
 %1013 = lshr i32 %1012, 24
 %1014 = trunc i32 %1013 to i8
 %1015 = load i8*, i8** %30
 %1016 = getelementptr i8, i8* %1015, i64 3
 store i8 %1014, i8* %1016
 %1017 = getelementptr [24 x i8], i8* %132, i64 0, i64 0
 %1018 = getelementptr i8, i8* %1017, i64 12
 %1019 = load i64, i64* %114
 %1020 = trunc i64 %1019 to i32
 store i8* %1018, i8** %32
 store i32 %1020, i32* %33
 %1021 = load i32, i32* %33
 %1022 = trunc i32 %1021 to i8
 %1023 = load i8*, i8** %32
 store i8 %1022, i8* %1023
 %1024 = load i32, i32* %33
 %1025 = lshr i32 %1024, 8
 %1026 = trunc i32 %1025 to i8
 %1027 = load i8*, i8** %32
 %1028 = getelementptr i8, i8* %1027, i64 1
 store i8 %1026, i8* %1028
 %1029 = load i32, i32* %33
 %1030 = lshr i32 %1029, 16
 %1031 = trunc i32 %1030 to i8
 %1032 = load i8*, i8** %32
 %1033 = getelementptr i8, i8* %1032, i64 2
 store i8 %1031, i8* %1033
 %1034 = load i32, i32* %33
 %1035 = lshr i32 %1034, 24
 %1036 = trunc i32 %1035 to i8
 %1037 = load i8*, i8** %32
 %1038 = getelementptr i8, i8* %1037, i64 3
 store i8 %1036, i8* %1038
 br label %1134
1039:
 %1040 = getelementptr [24 x i8], i8* %132, i64 0, i64 0
 %1041 = getelementptr i8, i8* %1040, i64 8
 %1042 = load i64, i64* %115
 store i8* %1041, i8** %18
 store i64 %1042, i64* %19
 %1043 = load i8*, i8** %18
 %1044 = load i64, i64* %19
 %1045 = trunc i64 %1044 to i32
 store i8* %1043, i8** %14
 store i32 %1045, i32* %15
 %1046 = load i32, i32* %15
 %1047 = trunc i32 %1046 to i8
 %1048 = load i8*, i8** %14
 store i8 %1047, i8* %1048
 %1049 = load i32, i32* %15
 %1050 = lshr i32 %1049, 8
 %1051 = trunc i32 %1050 to i8
 %1052 = load i8*, i8** %14
 %1053 = getelementptr i8, i8* %1052, i64 1
 store i8 %1051, i8* %1053
 %1054 = load i32, i32* %15
 %1055 = lshr i32 %1054, 16
 %1056 = trunc i32 %1055 to i8
 %1057 = load i8*, i8** %14
 %1058 = getelementptr i8, i8* %1057, i64 2
 store i8 %1056, i8* %1058
 %1059 = load i32, i32* %15
 %1060 = lshr i32 %1059, 24
 %1061 = trunc i32 %1060 to i8
 %1062 = load i8*, i8** %14
 %1063 = getelementptr i8, i8* %1062, i64 3
 store i8 %1061, i8* %1063
 %1064 = load i8*, i8** %18
 %1065 = getelementptr i8, i8* %1064, i64 4
 %1066 = load i64, i64* %19
 %1067 = lshr i64 %1066, 32
 %1068 = trunc i64 %1067 to i32
 store i8* %1065, i8** %16
 store i32 %1068, i32* %17
 %1069 = load i32, i32* %17
 %1070 = trunc i32 %1069 to i8
 %1071 = load i8*, i8** %16
 store i8 %1070, i8* %1071
 %1072 = load i32, i32* %17
 %1073 = lshr i32 %1072, 8
 %1074 = trunc i32 %1073 to i8
 %1075 = load i8*, i8** %16
 %1076 = getelementptr i8, i8* %1075, i64 1
 store i8 %1074, i8* %1076
 %1077 = load i32, i32* %17
 %1078 = lshr i32 %1077, 16
 %1079 = trunc i32 %1078 to i8
 %1080 = load i8*, i8** %16
 %1081 = getelementptr i8, i8* %1080, i64 2
 store i8 %1079, i8* %1081
 %1082 = load i32, i32* %17
 %1083 = lshr i32 %1082, 24
 %1084 = trunc i32 %1083 to i8
 %1085 = load i8*, i8** %16
 %1086 = getelementptr i8, i8* %1085, i64 3
 store i8 %1084, i8* %1086
 %1087 = getelementptr [24 x i8], i8* %132, i64 0, i64 0
 %1088 = getelementptr i8, i8* %1087, i64 16
 %1089 = load i64, i64* %114
 store i8* %1088, i8** %24
 store i64 %1089, i64* %25
 %1090 = load i8*, i8** %24
 %1091 = load i64, i64* %25
 %1092 = trunc i64 %1091 to i32
 store i8* %1090, i8** %20
 store i32 %1092, i32* %21
 %1093 = load i32, i32* %21
 %1094 = trunc i32 %1093 to i8
 %1095 = load i8*, i8** %20
 store i8 %1094, i8* %1095
 %1096 = load i32, i32* %21
 %1097 = lshr i32 %1096, 8
 %1098 = trunc i32 %1097 to i8
 %1099 = load i8*, i8** %20
 %1100 = getelementptr i8, i8* %1099, i64 1
 store i8 %1098, i8* %1100
 %1101 = load i32, i32* %21
 %1102 = lshr i32 %1101, 16
 %1103 = trunc i32 %1102 to i8
 %1104 = load i8*, i8** %20
 %1105 = getelementptr i8, i8* %1104, i64 2
 store i8 %1103, i8* %1105
 %1106 = load i32, i32* %21
 %1107 = lshr i32 %1106, 24
 %1108 = trunc i32 %1107 to i8
 %1109 = load i8*, i8** %20
 %1110 = getelementptr i8, i8* %1109, i64 3
 store i8 %1108, i8* %1110
 %1111 = load i8*, i8** %24
 %1112 = getelementptr i8, i8* %1111, i64 4
 %1113 = load i64, i64* %25
 %1114 = lshr i64 %1113, 32
 %1115 = trunc i64 %1114 to i32
 store i8* %1112, i8** %22
 store i32 %1115, i32* %23
 %1116 = load i32, i32* %23
 %1117 = trunc i32 %1116 to i8
 %1118 = load i8*, i8** %22
 store i8 %1117, i8* %1118
 %1119 = load i32, i32* %23
 %1120 = lshr i32 %1119, 8
 %1121 = trunc i32 %1120 to i8
 %1122 = load i8*, i8** %22
 %1123 = getelementptr i8, i8* %1122, i64 1
 store i8 %1121, i8* %1123
 %1124 = load i32, i32* %23
 %1125 = lshr i32 %1124, 16
 %1126 = trunc i32 %1125 to i8
 %1127 = load i8*, i8** %22
 %1128 = getelementptr i8, i8* %1127, i64 2
 store i8 %1126, i8* %1128
 %1129 = load i32, i32* %23
 %1130 = lshr i32 %1129, 24
 %1131 = trunc i32 %1130 to i8
 %1132 = load i8*, i8** %22
 %1133 = getelementptr i8, i8* %1132, i64 3
 store i8 %1131, i8* %1133
 store i32 24, i32* %133
 br label %1134
1134:
 %1135 = load i8*, i8** %91
 %1136 = getelementptr %struct.mz_zip_archive, i8* %1135, i32 0, i32 12
 %1137 = load i8*, i8** %1136
 %1138 = load i8*, i8** %91
 %1139 = getelementptr %struct.mz_zip_archive, i8* %1138, i32 0, i32 14
 %1140 = load i8*, i8** %1139
 %1141 = load i64, i64* %113
 %1142 = getelementptr [24 x i8], i8* %132, i64 0, i64 0
 %1143 = load i32, i32* %133
 %1144 = zext i32 %1143 to i64
 %1145 = call i64 %1137 (i8* %1140, i64 %1141, i8* %1142, i64 %1144)
 %1146 = load i32, i32* %133
 %1147 = zext i32 %1146 to i64
 %1148 = icmp ne i64 %1145, %1147
 br i1 %1148, label %1149, label %1150
1149:
 store i32 0, i32* %90
 br label %1360
1150:
 %1151 = load i32, i32* %133
 %1152 = zext i32 %1151 to i64
 %1153 = load i64, i64* %113
 %1154 = add i64 %1153, %1152
 store i64 %1154, i64* %113
 br label %1155
1155:
 %1156 = load i32, i32* %99
 %1157 = and i32 %1156, 131072
 %1158 = icmp ne i32 %1157, 0
 br i1 %1158, label %1159, label %1303
1159:
 %1160 = load i8*, i8** %118
 %1161 = icmp ne i8* %1160, null
 br i1 %1161, label %1162, label %1183
1162:
 %1163 = getelementptr [28 x i8], i8* %120, i64 0, i64 0
 %1164 = load i64, i64* %95
 %1165 = icmp uge i64 %1164, 4294967295
 br i1 %1165, label %1166, label %1167
1166:
 br label %1168
1167:
 br label %1168
1168:
 %1169 = phi i8* [%114, %1166], [null, %1167]
 %1170 = load i64, i64* %95
 %1171 = icmp uge i64 %1170, 4294967295
 br i1 %1171, label %1172, label %1173
1172:
 br label %1174
1173:
 br label %1174
1174:
 %1175 = phi i8* [%115, %1172], [null, %1173]
 %1176 = load i64, i64* %112
 %1177 = icmp uge i64 %1176, 4294967295
 br i1 %1177, label %1178, label %1179
1178:
 br label %1180
1179:
 br label %1180
1180:
 %1181 = phi i8* [%112, %1178], [null, %1179]
 %1182 = call i32 @mz_zip_writer_create_zip64_extra_data (i8* %1163, i8* %1169, i8* %1175, i8* %1181)
 store i32 %1182, i32* %119
 br label %1183
1183:
 %1184 = load i8*, i8** %91
 %1185 = getelementptr [30 x i8], i8* %117, i64 0, i64 0
 %1186 = load i64, i64* %116
 %1187 = trunc i64 %1186 to i16
 %1188 = load i32, i32* %119
 %1189 = load i32, i32* %101
 %1190 = add i32 %1188, %1189
 %1191 = trunc i32 %1190 to i16
 %1192 = load i64, i64* %95
 %1193 = icmp uge i64 %1192, 4294967295
 br i1 %1193, label %1194, label %1195
1194:
 br label %1197
1195:
 %1196 = load i64, i64* %114
 br label %1197
1197:
 %1198 = phi i64 [4294967295, %1194], [%1196, %1195]
 %1199 = load i64, i64* %95
 %1200 = icmp uge i64 %1199, 4294967295
 br i1 %1200, label %1201, label %1202
1201:
 br label %1204
1202:
 %1203 = load i64, i64* %115
 br label %1204
1204:
 %1205 = phi i64 [4294967295, %1201], [%1203, %1202]
 %1206 = load i32, i32* %105
 %1207 = load i16, i16* %108
 %1208 = load i16, i16* %104
 %1209 = load i16, i16* %109
 %1210 = load i16, i16* %110
 %1211 = call i32 @mz_zip_writer_create_local_dir_header (i8* %1184, i8* %1185, i16 %1187, i16 %1191, i64 %1198, i64 %1205, i32 %1206, i16 %1207, i16 %1208, i16 %1209, i16 %1210)
 %1212 = icmp ne i32 %1211, 0
 br i1 %1212, label %1222, label %1213
1213:
 %1214 = load i8*, i8** %91
 store i8* %1214, i8** %82
 store i32 27, i32* %83
 %1215 = load i8*, i8** %82
 %1216 = icmp ne i8* %1215, null
 br i1 %1216, label %1217, label %1221
1217:
 %1218 = load i32, i32* %83
 %1219 = load i8*, i8** %82
 %1220 = getelementptr %struct.mz_zip_archive, i8* %1219, i32 0, i32 5
 store i32 %1218, i32* %1220
 br label %1221
1221:
 store i32 0, i32* %90
 br label %1360
1222:
 %1223 = load i64, i64* %112
 store i64 %1223, i64* %123
 %1224 = load i8*, i8** %91
 %1225 = getelementptr %struct.mz_zip_archive, i8* %1224, i32 0, i32 12
 %1226 = load i8*, i8** %1225
 %1227 = load i8*, i8** %91
 %1228 = getelementptr %struct.mz_zip_archive, i8* %1227, i32 0, i32 14
 %1229 = load i8*, i8** %1228
 %1230 = load i64, i64* %123
 %1231 = getelementptr [30 x i8], i8* %117, i64 0, i64 0
 %1232 = call i64 %1226 (i8* %1229, i64 %1230, i8* %1231, i64 30)
 %1233 = icmp ne i64 %1232, 30
 br i1 %1233, label %1234, label %1243
1234:
 %1235 = load i8*, i8** %91
 store i8* %1235, i8** %84
 store i32 19, i32* %85
 %1236 = load i8*, i8** %84
 %1237 = icmp ne i8* %1236, null
 br i1 %1237, label %1238, label %1242
1238:
 %1239 = load i32, i32* %85
 %1240 = load i8*, i8** %84
 %1241 = getelementptr %struct.mz_zip_archive, i8* %1240, i32 0, i32 5
 store i32 %1239, i32* %1241
 br label %1242
1242:
 store i32 0, i32* %90
 br label %1360
1243:
 %1244 = load i8*, i8** %118
 %1245 = icmp ne i8* %1244, null
 br i1 %1245, label %1246, label %1302
1246:
 %1247 = load i64, i64* %123
 %1248 = add i64 %1247, 30
 store i64 %1248, i64* %123
 %1249 = load i8*, i8** %91
 %1250 = getelementptr %struct.mz_zip_archive, i8* %1249, i32 0, i32 12
 %1251 = load i8*, i8** %1250
 %1252 = load i8*, i8** %91
 %1253 = getelementptr %struct.mz_zip_archive, i8* %1252, i32 0, i32 14
 %1254 = load i8*, i8** %1253
 %1255 = load i64, i64* %123
 %1256 = load i8*, i8** %92
 %1257 = load i64, i64* %116
 %1258 = call i64 %1251 (i8* %1254, i64 %1255, i8* %1256, i64 %1257)
 %1259 = load i64, i64* %116
 %1260 = icmp ne i64 %1258, %1259
 br i1 %1260, label %1261, label %1270
1261:
 %1262 = load i8*, i8** %91
 store i8* %1262, i8** %86
 store i32 19, i32* %87
 %1263 = load i8*, i8** %86
 %1264 = icmp ne i8* %1263, null
 br i1 %1264, label %1265, label %1269
1265:
 %1266 = load i32, i32* %87
 %1267 = load i8*, i8** %86
 %1268 = getelementptr %struct.mz_zip_archive, i8* %1267, i32 0, i32 5
 store i32 %1266, i32* %1268
 br label %1269
1269:
 store i32 0, i32* %90
 br label %1360
1270:
 %1271 = load i64, i64* %116
 %1272 = load i64, i64* %123
 %1273 = add i64 %1272, %1271
 store i64 %1273, i64* %123
 %1274 = load i8*, i8** %91
 %1275 = getelementptr %struct.mz_zip_archive, i8* %1274, i32 0, i32 12
 %1276 = load i8*, i8** %1275
 %1277 = load i8*, i8** %91
 %1278 = getelementptr %struct.mz_zip_archive, i8* %1277, i32 0, i32 14
 %1279 = load i8*, i8** %1278
 %1280 = load i64, i64* %123
 %1281 = getelementptr [28 x i8], i8* %120, i64 0, i64 0
 %1282 = load i32, i32* %119
 %1283 = zext i32 %1282 to i64
 %1284 = call i64 %1276 (i8* %1279, i64 %1280, i8* %1281, i64 %1283)
 %1285 = load i32, i32* %119
 %1286 = zext i32 %1285 to i64
 %1287 = icmp ne i64 %1284, %1286
 br i1 %1287, label %1288, label %1297
1288:
 %1289 = load i8*, i8** %91
 store i8* %1289, i8** %88
 store i32 19, i32* %89
 %1290 = load i8*, i8** %88
 %1291 = icmp ne i8* %1290, null
 br i1 %1291, label %1292, label %1296
1292:
 %1293 = load i32, i32* %89
 %1294 = load i8*, i8** %88
 %1295 = getelementptr %struct.mz_zip_archive, i8* %1294, i32 0, i32 5
 store i32 %1293, i32* %1295
 br label %1296
1296:
 store i32 0, i32* %90
 br label %1360
1297:
 %1298 = load i32, i32* %119
 %1299 = zext i32 %1298 to i64
 %1300 = load i64, i64* %123
 %1301 = add i64 %1300, %1299
 store i64 %1301, i64* %123
 br label %1302
1302:
 br label %1303
1303:
 %1304 = load i8*, i8** %118
 %1305 = icmp ne i8* %1304, null
 br i1 %1305, label %1306, label %1327
1306:
 %1307 = getelementptr [28 x i8], i8* %120, i64 0, i64 0
 %1308 = load i64, i64* %114
 %1309 = icmp uge i64 %1308, 4294967295
 br i1 %1309, label %1310, label %1311
1310:
 br label %1312
1311:
 br label %1312
1312:
 %1313 = phi i8* [%114, %1310], [null, %1311]
 %1314 = load i64, i64* %114
 %1315 = icmp uge i64 %1314, 4294967295
 br i1 %1315, label %1316, label %1317
1316:
 br label %1318
1317:
 br label %1318
1318:
 %1319 = phi i8* [%115, %1316], [null, %1317]
 %1320 = load i64, i64* %112
 %1321 = icmp uge i64 %1320, 4294967295
 br i1 %1321, label %1322, label %1323
1322:
 br label %1324
1323:
 br label %1324
1324:
 %1325 = phi i8* [%112, %1322], [null, %1323]
 %1326 = call i32 @mz_zip_writer_create_zip64_extra_data (i8* %1307, i8* %1313, i8* %1319, i8* %1325)
 store i32 %1326, i32* %119
 br label %1327
1327:
 %1328 = load i8*, i8** %91
 %1329 = load i8*, i8** %92
 %1330 = load i64, i64* %116
 %1331 = trunc i64 %1330 to i16
 %1332 = load i8*, i8** %118
 %1333 = load i32, i32* %119
 %1334 = trunc i32 %1333 to i16
 %1335 = load i8*, i8** %97
 %1336 = load i16, i16* %98
 %1337 = load i64, i64* %114
 %1338 = load i64, i64* %115
 %1339 = load i32, i32* %105
 %1340 = load i16, i16* %108
 %1341 = load i16, i16* %104
 %1342 = load i16, i16* %109
 %1343 = load i16, i16* %110
 %1344 = load i64, i64* %112
 %1345 = load i16, i16* %111
 %1346 = zext i16 %1345 to i32
 %1347 = load i8*, i8** %102
 %1348 = load i32, i32* %103
 %1349 = call i32 @mz_zip_writer_add_to_central_dir (i8* %1328, i8* %1329, i16 %1331, i8* %1332, i16 %1334, i8* %1335, i16 %1336, i64 %1337, i64 %1338, i32 %1339, i16 %1340, i16 %1341, i16 %1342, i16 %1343, i64 %1344, i32 %1346, i8* %1347, i32 %1348)
 %1350 = icmp ne i32 %1349, 0
 br i1 %1350, label %1352, label %1351
1351:
 store i32 0, i32* %90
 br label %1360
1352:
 %1353 = load i8*, i8** %91
 %1354 = getelementptr %struct.mz_zip_archive, i8* %1353, i32 0, i32 2
 %1355 = load i32, i32* %1354
 %1356 = add i32 %1355, 1
 store i32 %1356, i32* %1354
 %1357 = load i64, i64* %113
 %1358 = load i8*, i8** %91
 %1359 = getelementptr %struct.mz_zip_archive, i8* %1358, i32 0, i32 0
 store i64 %1357, i64* %1359
 store i32 1, i32* %90
 br label %1360
1360:
 %1361 = load i32, i32* %90
 ret i32 %1361
}

define i32 @mz_zip_writer_add_cfile (i8* %0, i8* %1, i8* %2, i64 %3, i8* %4, i8* %5, i16 %6, i32 %7, i8* %8, i32 %9, i8* %10, i32 %11) {
 %13 = alloca i8*
 %14 = alloca i8*
 %15 = alloca i8*
 %16 = alloca i64
 %17 = alloca i8*
 %18 = alloca i8*
 %19 = alloca i16
 %20 = alloca i32
 %21 = alloca i8*
 %22 = alloca i32
 %23 = alloca i8*
 %24 = alloca i32
 store i8* %0, i8** %13
 store i8* %1, i8** %14
 store i8* %2, i8** %15
 store i64 %3, i64* %16
 store i8* %4, i8** %17
 store i8* %5, i8** %18
 store i16 %6, i16* %19
 store i32 %7, i32* %20
 store i8* %8, i8** %21
 store i32 %9, i32* %22
 store i8* %10, i8** %23
 store i32 %11, i32* %24
 %25 = load i8*, i8** %13
 %26 = load i8*, i8** %14
 %27 = load i8*, i8** %15
 %28 = load i64, i64* %16
 %29 = load i8*, i8** %17
 %30 = load i8*, i8** %18
 %31 = load i16, i16* %19
 %32 = load i32, i32* %20
 %33 = load i8*, i8** %21
 %34 = load i32, i32* %22
 %35 = load i8*, i8** %23
 %36 = load i32, i32* %24
 %37 = call i32 @mz_zip_writer_add_read_buf_callback (i8* %25, i8* %26, i8* @mz_file_read_func_stdio, i8* %27, i64 %28, i8* %29, i8* %30, i16 %31, i32 %32, i8* %33, i32 %34, i8* %35, i32 %36)
 ret i32 %37
}

define i64 @mz_file_read_func_stdio (i8* %0, i64 %1, i8* %2, i64 %3) {
 %5 = alloca i64
 %6 = alloca i8*
 %7 = alloca i64
 %8 = alloca i8*
 %9 = alloca i64
 %10 = alloca i8*
 %11 = alloca i64
 store i8* %0, i8** %6
 store i64 %1, i64* %7
 store i8* %2, i8** %8
 store i64 %3, i64* %9
 %12 = load i8*, i8** %6
 store i8* %12, i8** %10
 %13 = load i8*, i8** %10
 %14 = call i64 @ftello (i8* %13)
 store i64 %14, i64* %11
 %15 = load i64, i64* %7
 %16 = icmp slt i64 %15, 0
 br i1 %16, label %26, label %17
17:
 %18 = load i64, i64* %11
 %19 = load i64, i64* %7
 %20 = icmp ne i64 %18, %19
 br i1 %20, label %21, label %27
21:
 %22 = load i8*, i8** %10
 %23 = load i64, i64* %7
 %24 = call i32 @fseeko (i8* %22, i64 %23, i32 0)
 %25 = icmp ne i32 %24, 0
 br i1 %25, label %26, label %27
26:
 store i64 0, i64* %5
 br label %32
27:
 %28 = load i8*, i8** %8
 %29 = load i64, i64* %9
 %30 = load i8*, i8** %10
 %31 = call i64 @fread (i8* %28, i64 1, i64 %29, i8* %30)
 store i64 %31, i64* %5
 br label %32
32:
 %33 = load i64, i64* %5
 ret i64 %33
}

define i32 @mz_zip_writer_add_file (i8* %0, i8* %1, i8* %2, i8* %3, i16 %4, i32 %5) {
 %7 = alloca i8*
 %8 = alloca i32
 %9 = alloca i8*
 %10 = alloca i32
 %11 = alloca i32
 %12 = alloca i8*
 %13 = alloca i8*
 %14 = alloca i8*
 %15 = alloca i8*
 %16 = alloca i16
 %17 = alloca i32
 %18 = alloca i8*
 %19 = alloca i64
 %20 = alloca i64
 %21 = alloca i8*
 %22 = alloca i32
 store i8* %0, i8** %12
 store i8* %1, i8** %13
 store i8* %2, i8** %14
 store i8* %3, i8** %15
 store i16 %4, i16* %16
 store i32 %5, i32* %17
 store i8* null, i8** %18
 store i64 0, i64* %19
 store i8* null, i8** %21
 call void @memset (i8* %20, i8 0, i64 8, i1 0)
 store i8* %20, i8** %21
 %23 = load i8*, i8** %14
 %24 = call i32 @mz_zip_get_file_modified_time (i8* %23, i8* %20)
 %25 = icmp ne i32 %24, 0
 br i1 %25, label %35, label %26
26:
 %27 = load i8*, i8** %12
 store i8* %27, i8** %7
 store i32 23, i32* %8
 %28 = load i8*, i8** %7
 %29 = icmp ne i8* %28, null
 br i1 %29, label %30, label %34
30:
 %31 = load i32, i32* %8
 %32 = load i8*, i8** %7
 %33 = getelementptr %struct.mz_zip_archive, i8* %32, i32 0, i32 5
 store i32 %31, i32* %33
 br label %34
34:
 store i32 0, i32* %11
 br label %68
35:
 %36 = load i8*, i8** %14
 %37 = call i8* @fopen (i8* %36, i8* @.str.18)
 store i8* %37, i8** %18
 %38 = load i8*, i8** %18
 %39 = icmp ne i8* %38, null
 br i1 %39, label %49, label %40
40:
 %41 = load i8*, i8** %12
 store i8* %41, i8** %9
 store i32 17, i32* %10
 %42 = load i8*, i8** %9
 %43 = icmp ne i8* %42, null
 br i1 %43, label %44, label %48
44:
 %45 = load i32, i32* %10
 %46 = load i8*, i8** %9
 %47 = getelementptr %struct.mz_zip_archive, i8* %46, i32 0, i32 5
 store i32 %45, i32* %47
 br label %48
48:
 store i32 0, i32* %11
 br label %68
49:
 %50 = load i8*, i8** %18
 %51 = call i32 @fseeko (i8* %50, i64 0, i32 2)
 %52 = load i8*, i8** %18
 %53 = call i64 @ftello (i8* %52)
 store i64 %53, i64* %19
 %54 = load i8*, i8** %18
 %55 = call i32 @fseeko (i8* %54, i64 0, i32 0)
 %56 = load i8*, i8** %12
 %57 = load i8*, i8** %13
 %58 = load i8*, i8** %18
 %59 = load i64, i64* %19
 %60 = load i8*, i8** %21
 %61 = load i8*, i8** %15
 %62 = load i16, i16* %16
 %63 = load i32, i32* %17
 %64 = call i32 @mz_zip_writer_add_cfile (i8* %56, i8* %57, i8* %58, i64 %59, i8* %60, i8* %61, i16 %62, i32 %63, i8* null, i32 0, i8* null, i32 0)
 store i32 %64, i32* %22
 %65 = load i8*, i8** %18
 %66 = call i32 @fclose (i8* %65)
 %67 = load i32, i32* %22
 store i32 %67, i32* %11
 br label %68
68:
 %69 = load i32, i32* %11
 ret i32 %69
}

define i32 @mz_zip_get_file_modified_time (i8* %0, i8* %1) {
 %3 = alloca i32
 %4 = alloca i8*
 %5 = alloca i8*
 %6 = alloca %struct.stat
 store i8* %0, i8** %4
 store i8* %1, i8** %5
 %7 = load i8*, i8** %4
 %8 = call i32 @stat (i8* %7, i8* %6)
 %9 = icmp ne i32 %8, 0
 br i1 %9, label %10, label %11
10:
 store i32 0, i32* %3
 br label %16
11:
 %12 = getelementptr %struct.stat, i8* %6, i32 0, i32 8
 %13 = getelementptr %struct.timespec, i8* %12, i32 0, i32 0
 %14 = load i64, i64* %13
 %15 = load i8*, i8** %5
 store i64 %14, i64* %15
 store i32 1, i32* %3
 br label %16
16:
 %17 = load i32, i32* %3
 ret i32 %17
}

define i32 @mz_zip_writer_add_from_zip_reader (i8* %0, i8* %1, i32 %2) {
 %4 = alloca i32
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i64
 %8 = alloca i32
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i8*
 %12 = alloca i8*
 %13 = alloca i64
 %14 = alloca i64
 %15 = alloca i32
 %16 = alloca i8*
 %17 = alloca i8*
 %18 = alloca i64
 %19 = alloca i32
 %20 = alloca i32
 %21 = alloca i8*
 %22 = alloca i8*
 %23 = alloca i8*
 %24 = alloca i64
 %25 = alloca i64
 %26 = alloca i32
 %27 = alloca i8*
 %28 = alloca i8*
 %29 = alloca i64
 %30 = alloca i32
 %31 = alloca i32
 %32 = alloca i8*
 %33 = alloca i8*
 %34 = alloca i8*
 %35 = alloca i64
 %36 = alloca i64
 %37 = alloca i32
 %38 = alloca i8*
 %39 = alloca i8*
 %40 = alloca i64
 %41 = alloca i32
 %42 = alloca i32
 %43 = alloca i8*
 %44 = alloca i8*
 %45 = alloca i8*
 %46 = alloca i64
 %47 = alloca i64
 %48 = alloca i32
 %49 = alloca i8*
 %50 = alloca i8*
 %51 = alloca i64
 %52 = alloca i32
 %53 = alloca i32
 %54 = alloca i8*
 %55 = alloca i8*
 %56 = alloca i8*
 %57 = alloca i64
 %58 = alloca i64
 %59 = alloca i32
 %60 = alloca i8*
 %61 = alloca i8*
 %62 = alloca i64
 %63 = alloca i32
 %64 = alloca i32
 %65 = alloca i8*
 %66 = alloca i8*
 %67 = alloca i8*
 %68 = alloca i64
 %69 = alloca i64
 %70 = alloca i32
 %71 = alloca i8*
 %72 = alloca i8*
 %73 = alloca i64
 %74 = alloca i32
 %75 = alloca i32
 %76 = alloca i8*
 %77 = alloca i8*
 %78 = alloca i8*
 %79 = alloca i64
 %80 = alloca i64
 %81 = alloca i8*
 %82 = alloca i16
 %83 = alloca i8*
 %84 = alloca i32
 %85 = alloca i8*
 %86 = alloca i32
 %87 = alloca i8*
 %88 = alloca i64
 %89 = alloca i8*
 %90 = alloca i32
 %91 = alloca i8*
 %92 = alloca i32
 %93 = alloca i8*
 %94 = alloca i64
 %95 = alloca i8*
 %96 = alloca i32
 %97 = alloca i8*
 %98 = alloca i32
 %99 = alloca i8*
 %100 = alloca i32
 %101 = alloca i8*
 %102 = alloca i32
 %103 = alloca i8*
 %104 = alloca i32
 %105 = alloca i8*
 %106 = alloca i32
 %107 = alloca i8*
 %108 = alloca i8*
 %109 = alloca i8*
 %110 = alloca i8*
 %111 = alloca i8*
 %112 = alloca i8*
 %113 = alloca i8*
 %114 = alloca i8*
 %115 = alloca i8*
 %116 = alloca i8*
 %117 = alloca i8*
 %118 = alloca i8*
 %119 = alloca i8*
 %120 = alloca i8*
 %121 = alloca i8*
 %122 = alloca i8*
 %123 = alloca i8*
 %124 = alloca i8*
 %125 = alloca i8*
 %126 = alloca i8*
 %127 = alloca i8*
 %128 = alloca i8*
 %129 = alloca i32
 %130 = alloca i8*
 %131 = alloca i8*
 %132 = alloca i64
 %133 = alloca i32
 %134 = alloca i32
 %135 = alloca i8*
 %136 = alloca i8*
 %137 = alloca i64
 %138 = alloca i32
 %139 = alloca i32
 %140 = alloca i8*
 %141 = alloca i8*
 %142 = alloca i64
 %143 = alloca i32
 %144 = alloca i32
 %145 = alloca i8*
 %146 = alloca i8*
 %147 = alloca i64
 %148 = alloca i32
 %149 = alloca i32
 %150 = alloca i8*
 %151 = alloca i8*
 %152 = alloca i64
 %153 = alloca i32
 %154 = alloca i32
 %155 = alloca i8*
 %156 = alloca i8*
 %157 = alloca i64
 %158 = alloca i32
 %159 = alloca i32
 %160 = alloca i8*
 %161 = alloca i8*
 %162 = alloca i64
 %163 = alloca i32
 %164 = alloca i8*
 %165 = alloca i32
 %166 = alloca i8*
 %167 = alloca i32
 %168 = alloca i8*
 %169 = alloca i8*
 %170 = alloca i32
 %171 = alloca i8*
 %172 = alloca i32
 %173 = alloca i8*
 %174 = alloca i32
 %175 = alloca i8*
 %176 = alloca i32
 %177 = alloca i8*
 %178 = alloca i32
 %179 = alloca i8*
 %180 = alloca i32
 %181 = alloca i8*
 %182 = alloca i32
 %183 = alloca i8*
 %184 = alloca i32
 %185 = alloca i8*
 %186 = alloca i32
 %187 = alloca i8*
 %188 = alloca i32
 %189 = alloca i8*
 %190 = alloca i32
 %191 = alloca i8*
 %192 = alloca i32
 %193 = alloca i8*
 %194 = alloca i32
 %195 = alloca i8*
 %196 = alloca i32
 %197 = alloca i8*
 %198 = alloca i32
 %199 = alloca i8*
 %200 = alloca i32
 %201 = alloca i8*
 %202 = alloca i32
 %203 = alloca i8*
 %204 = alloca i32
 %205 = alloca i8*
 %206 = alloca i32
 %207 = alloca i8*
 %208 = alloca i32
 %209 = alloca i8*
 %210 = alloca i32
 %211 = alloca i8*
 %212 = alloca i32
 %213 = alloca i8*
 %214 = alloca i32
 %215 = alloca i8*
 %216 = alloca i32
 %217 = alloca i8*
 %218 = alloca i32
 %219 = alloca i8*
 %220 = alloca i32
 %221 = alloca i8*
 %222 = alloca i32
 %223 = alloca i8*
 %224 = alloca i32
 %225 = alloca i8*
 %226 = alloca i32
 %227 = alloca i8*
 %228 = alloca i32
 %229 = alloca i8*
 %230 = alloca i32
 %231 = alloca i8*
 %232 = alloca i32
 %233 = alloca i8*
 %234 = alloca i32
 %235 = alloca i32
 %236 = alloca i8*
 %237 = alloca i8*
 %238 = alloca i32
 %239 = alloca i32
 %240 = alloca i32
 %241 = alloca i32
 %242 = alloca i32
 %243 = alloca i64
 %244 = alloca i64
 %245 = alloca i64
 %246 = alloca i64
 %247 = alloca [8 x i32]
 %248 = alloca i8*
 %249 = alloca [46 x i8]
 %250 = alloca i64
 %251 = alloca i8*
 %252 = alloca i8*
 %253 = alloca i8*
 %254 = alloca %struct.mz_zip_archive_file_stat
 %255 = alloca i32
 %256 = alloca i32
 %257 = alloca i32
 %258 = alloca i32
 %259 = alloca i32
 %260 = alloca i64
 %261 = alloca i64
 %262 = alloca i32
 %263 = alloca %struct.mz_zip_array
 %264 = alloca i8*
 %265 = alloca i32
 %266 = alloca i32
 %267 = alloca i32
 %268 = alloca i32
 %269 = alloca i8*
 %270 = alloca i64
 %271 = alloca i32
 %272 = alloca i8*
 %273 = alloca i32
 %274 = alloca i64
 %275 = alloca i64
 %276 = alloca i8*
 %277 = alloca %struct.mz_zip_array
 store i8* %0, i8** %236
 store i8* %1, i8** %237
 store i32 %2, i32* %238
 %278 = getelementptr [8 x i32], i8* %247, i64 0, i64 0
 store i8* %278, i8** %248
 store i32 0, i32* %262
 %279 = load i8*, i8** %236
 %280 = icmp ne i8* %279, null
 br i1 %280, label %281, label %296
281:
 %282 = load i8*, i8** %236
 %283 = getelementptr %struct.mz_zip_archive, i8* %282, i32 0, i32 15
 %284 = load i8*, i8** %283
 %285 = icmp ne i8* %284, null
 br i1 %285, label %286, label %296
286:
 %287 = load i8*, i8** %236
 %288 = getelementptr %struct.mz_zip_archive, i8* %287, i32 0, i32 3
 %289 = load i32, i32* %288
 %290 = icmp ne i32 %289, 2
 br i1 %290, label %296, label %291
291:
 %292 = load i8*, i8** %237
 %293 = getelementptr %struct.mz_zip_archive, i8* %292, i32 0, i32 11
 %294 = load i8*, i8** %293
 %295 = icmp ne i8* %294, null
 br i1 %295, label %305, label %296
296:
 %297 = load i8*, i8** %236
 store i8* %297, i8** %171
 store i32 24, i32* %172
 %298 = load i8*, i8** %171
 %299 = icmp ne i8* %298, null
 br i1 %299, label %300, label %304
300:
 %301 = load i32, i32* %172
 %302 = load i8*, i8** %171
 %303 = getelementptr %struct.mz_zip_archive, i8* %302, i32 0, i32 5
 store i32 %301, i32* %303
 br label %304
304:
 store i32 0, i32* %235
 br label %2607
305:
 %306 = load i8*, i8** %236
 %307 = getelementptr %struct.mz_zip_archive, i8* %306, i32 0, i32 15
 %308 = load i8*, i8** %307
 store i8* %308, i8** %251
 %309 = load i8*, i8** %237
 %310 = getelementptr %struct.mz_zip_archive, i8* %309, i32 0, i32 15
 %311 = load i8*, i8** %310
 %312 = getelementptr %struct.mz_zip_internal_state_tag, i8* %311, i32 0, i32 4
 %313 = load i32, i32* %312
 %314 = icmp ne i32 %313, 0
 br i1 %314, label %315, label %331
315:
 %316 = load i8*, i8** %236
 %317 = getelementptr %struct.mz_zip_archive, i8* %316, i32 0, i32 15
 %318 = load i8*, i8** %317
 %319 = getelementptr %struct.mz_zip_internal_state_tag, i8* %318, i32 0, i32 4
 %320 = load i32, i32* %319
 %321 = icmp ne i32 %320, 0
 br i1 %321, label %331, label %322
322:
 %323 = load i8*, i8** %236
 store i8* %323, i8** %173
 store i32 24, i32* %174
 %324 = load i8*, i8** %173
 %325 = icmp ne i8* %324, null
 br i1 %325, label %326, label %330
326:
 %327 = load i32, i32* %174
 %328 = load i8*, i8** %173
 %329 = getelementptr %struct.mz_zip_archive, i8* %328, i32 0, i32 5
 store i32 %327, i32* %329
 br label %330
330:
 store i32 0, i32* %235
 br label %2607
331:
 %332 = load i8*, i8** %237
 %333 = load i32, i32* %238
 store i8* %332, i8** %169
 store i32 %333, i32* %170
 %334 = load i8*, i8** %169
 %335 = icmp ne i8* %334, null
 br i1 %335, label %336, label %347
336:
 %337 = load i8*, i8** %169
 %338 = getelementptr %struct.mz_zip_archive, i8* %337, i32 0, i32 15
 %339 = load i8*, i8** %338
 %340 = icmp ne i8* %339, null
 br i1 %340, label %341, label %347
341:
 %342 = load i32, i32* %170
 %343 = load i8*, i8** %169
 %344 = getelementptr %struct.mz_zip_archive, i8* %343, i32 0, i32 2
 %345 = load i32, i32* %344
 %346 = icmp uge i32 %342, %345
 br i1 %346, label %347, label %348
347:
 store i8* null, i8** %168
 br label %364
348:
 %349 = load i8*, i8** %169
 %350 = getelementptr %struct.mz_zip_archive, i8* %349, i32 0, i32 15
 %351 = load i8*, i8** %350
 %352 = load i8*, i8** %351
 %353 = load i8*, i8** %169
 %354 = getelementptr %struct.mz_zip_archive, i8* %353, i32 0, i32 15
 %355 = load i8*, i8** %354
 %356 = getelementptr %struct.mz_zip_internal_state_tag, i8* %355, i32 0, i32 1
 %357 = load i8*, i8** %356
 %358 = load i32, i32* %170
 %359 = zext i32 %358 to i64
 %360 = getelementptr i32, i8* %357, i64 %359
 %361 = load i32, i32* %360
 %362 = zext i32 %361 to i64
 %363 = getelementptr i8, i8* %352, i64 %362
 store i8* %363, i8** %168
 br label %364
364:
 %365 = load i8*, i8** %168
 store i8* %365, i8** %253
 %366 = icmp eq i8* null, %365
 br i1 %366, label %367, label %376
367:
 %368 = load i8*, i8** %236
 store i8* %368, i8** %175
 store i32 24, i32* %176
 %369 = load i8*, i8** %175
 %370 = icmp ne i8* %369, null
 br i1 %370, label %371, label %375
371:
 %372 = load i32, i32* %176
 %373 = load i8*, i8** %175
 %374 = getelementptr %struct.mz_zip_archive, i8* %373, i32 0, i32 5
 store i32 %372, i32* %374
 br label %375
375:
 store i32 0, i32* %235
 br label %2607
376:
 %377 = load i8*, i8** %253
 %378 = getelementptr i8, i8* %377, i64 0
 %379 = getelementptr i8, i8* %378, i64 0
 %380 = load i8, i8* %379
 %381 = zext i8 %380 to i32
 %382 = load i8*, i8** %253
 %383 = getelementptr i8, i8* %382, i64 0
 %384 = getelementptr i8, i8* %383, i64 1
 %385 = load i8, i8* %384
 %386 = zext i8 %385 to i32
 %387 = shl i32 %386, 8
 %388 = or i32 %381, %387
 %389 = load i8*, i8** %253
 %390 = getelementptr i8, i8* %389, i64 0
 %391 = getelementptr i8, i8* %390, i64 2
 %392 = load i8, i8* %391
 %393 = zext i8 %392 to i32
 %394 = shl i32 %393, 16
 %395 = or i32 %388, %394
 %396 = load i8*, i8** %253
 %397 = getelementptr i8, i8* %396, i64 0
 %398 = getelementptr i8, i8* %397, i64 3
 %399 = load i8, i8* %398
 %400 = zext i8 %399 to i32
 %401 = shl i32 %400, 24
 %402 = or i32 %395, %401
 %403 = icmp ne i32 %402, 33639248
 br i1 %403, label %404, label %413
404:
 %405 = load i8*, i8** %236
 store i8* %405, i8** %177
 store i32 9, i32* %178
 %406 = load i8*, i8** %177
 %407 = icmp ne i8* %406, null
 br i1 %407, label %408, label %412
408:
 %409 = load i32, i32* %178
 %410 = load i8*, i8** %177
 %411 = getelementptr %struct.mz_zip_archive, i8* %410, i32 0, i32 5
 store i32 %409, i32* %411
 br label %412
412:
 store i32 0, i32* %235
 br label %2607
413:
 %414 = load i8*, i8** %253
 %415 = getelementptr i8, i8* %414, i64 28
 %416 = getelementptr i8, i8* %415, i64 0
 %417 = load i8, i8* %416
 %418 = zext i8 %417 to i32
 %419 = load i8*, i8** %253
 %420 = getelementptr i8, i8* %419, i64 28
 %421 = getelementptr i8, i8* %420, i64 1
 %422 = load i8, i8* %421
 %423 = zext i8 %422 to i32
 %424 = shl i32 %423, 8
 %425 = or i32 %418, %424
 store i32 %425, i32* %255
 %426 = load i8*, i8** %253
 %427 = getelementptr i8, i8* %426, i64 32
 %428 = getelementptr i8, i8* %427, i64 0
 %429 = load i8, i8* %428
 %430 = zext i8 %429 to i32
 %431 = load i8*, i8** %253
 %432 = getelementptr i8, i8* %431, i64 32
 %433 = getelementptr i8, i8* %432, i64 1
 %434 = load i8, i8* %433
 %435 = zext i8 %434 to i32
 %436 = shl i32 %435, 8
 %437 = or i32 %430, %436
 store i32 %437, i32* %256
 %438 = load i8*, i8** %253
 %439 = getelementptr i8, i8* %438, i64 30
 %440 = getelementptr i8, i8* %439, i64 0
 %441 = load i8, i8* %440
 %442 = zext i8 %441 to i32
 %443 = load i8*, i8** %253
 %444 = getelementptr i8, i8* %443, i64 30
 %445 = getelementptr i8, i8* %444, i64 1
 %446 = load i8, i8* %445
 %447 = zext i8 %446 to i32
 %448 = shl i32 %447, 8
 %449 = or i32 %442, %448
 store i32 %449, i32* %257
 %450 = load i32, i32* %255
 %451 = load i32, i32* %257
 %452 = add i32 %450, %451
 %453 = load i32, i32* %256
 %454 = add i32 %452, %453
 store i32 %454, i32* %242
 %455 = load i8*, i8** %251
 %456 = getelementptr %struct.mz_zip_internal_state_tag, i8* %455, i32 0, i32 0
 %457 = getelementptr %struct.mz_zip_array, i8* %456, i32 0, i32 1
 %458 = load i64, i64* %457
 %459 = add i64 %458, 46
 %460 = load i32, i32* %242
 %461 = zext i32 %460 to i64
 %462 = add i64 %459, %461
 %463 = add i64 %462, 32
 %464 = icmp uge i64 %463, 4294967295
 br i1 %464, label %465, label %474
465:
 %466 = load i8*, i8** %236
 store i8* %466, i8** %179
 store i32 15, i32* %180
 %467 = load i8*, i8** %179
 %468 = icmp ne i8* %467, null
 br i1 %468, label %469, label %473
469:
 %470 = load i32, i32* %180
 %471 = load i8*, i8** %179
 %472 = getelementptr %struct.mz_zip_archive, i8* %471, i32 0, i32 5
 store i32 %470, i32* %472
 br label %473
473:
 store i32 0, i32* %235
 br label %2607
474:
 %475 = load i8*, i8** %236
 %476 = call i32 @mz_zip_writer_compute_padding_needed_for_file_alignment (i8* %475)
 store i32 %476, i32* %241
 %477 = load i8*, i8** %251
 %478 = getelementptr %struct.mz_zip_internal_state_tag, i8* %477, i32 0, i32 4
 %479 = load i32, i32* %478
 %480 = icmp ne i32 %479, 0
 br i1 %480, label %496, label %481
481:
 %482 = load i8*, i8** %236
 %483 = getelementptr %struct.mz_zip_archive, i8* %482, i32 0, i32 2
 %484 = load i32, i32* %483
 %485 = icmp eq i32 %484, 65535
 br i1 %485, label %486, label %495
486:
 %487 = load i8*, i8** %236
 store i8* %487, i8** %181
 store i32 2, i32* %182
 %488 = load i8*, i8** %181
 %489 = icmp ne i8* %488, null
 br i1 %489, label %490, label %494
490:
 %491 = load i32, i32* %182
 %492 = load i8*, i8** %181
 %493 = getelementptr %struct.mz_zip_archive, i8* %492, i32 0, i32 5
 store i32 %491, i32* %493
 br label %494
494:
 store i32 0, i32* %235
 br label %2607
495:
 br label %511
496:
 %497 = load i8*, i8** %236
 %498 = getelementptr %struct.mz_zip_archive, i8* %497, i32 0, i32 2
 %499 = load i32, i32* %498
 %500 = icmp eq i32 %499, -1
 br i1 %500, label %501, label %510
501:
 %502 = load i8*, i8** %236
 store i8* %502, i8** %183
 store i32 2, i32* %184
 %503 = load i8*, i8** %183
 %504 = icmp ne i8* %503, null
 br i1 %504, label %505, label %509
505:
 %506 = load i32, i32* %184
 %507 = load i8*, i8** %183
 %508 = getelementptr %struct.mz_zip_archive, i8* %507, i32 0, i32 5
 store i32 %506, i32* %508
 br label %509
509:
 store i32 0, i32* %235
 br label %2607
510:
 br label %511
511:
 %512 = load i8*, i8** %237
 %513 = load i32, i32* %238
 %514 = load i8*, i8** %253
 %515 = call i32 @mz_zip_file_stat_internal (i8* %512, i32 %513, i8* %514, i8* %254, i8* null)
 %516 = icmp ne i32 %515, 0
 br i1 %516, label %518, label %517
517:
 store i32 0, i32* %235
 br label %2607
518:
 %519 = getelementptr %struct.mz_zip_archive_file_stat, i8* %254, i32 0, i32 11
 %520 = load i64, i64* %519
 store i64 %520, i64* %245
 %521 = load i8*, i8** %236
 %522 = getelementptr %struct.mz_zip_archive, i8* %521, i32 0, i32 0
 %523 = load i64, i64* %522
 store i64 %523, i64* %246
 %524 = load i8*, i8** %237
 %525 = getelementptr %struct.mz_zip_archive, i8* %524, i32 0, i32 11
 %526 = load i8*, i8** %525
 %527 = load i8*, i8** %237
 %528 = getelementptr %struct.mz_zip_archive, i8* %527, i32 0, i32 14
 %529 = load i8*, i8** %528
 %530 = load i64, i64* %245
 %531 = load i8*, i8** %248
 %532 = call i64 %526 (i8* %529, i64 %530, i8* %531, i64 30)
 %533 = icmp ne i64 %532, 30
 br i1 %533, label %534, label %543
534:
 %535 = load i8*, i8** %236
 store i8* %535, i8** %185
 store i32 20, i32* %186
 %536 = load i8*, i8** %185
 %537 = icmp ne i8* %536, null
 br i1 %537, label %538, label %542
538:
 %539 = load i32, i32* %186
 %540 = load i8*, i8** %185
 %541 = getelementptr %struct.mz_zip_archive, i8* %540, i32 0, i32 5
 store i32 %539, i32* %541
 br label %542
542:
 store i32 0, i32* %235
 br label %2607
543:
 %544 = load i8*, i8** %248
 %545 = getelementptr i8, i8* %544, i64 0
 %546 = load i8, i8* %545
 %547 = zext i8 %546 to i32
 %548 = load i8*, i8** %248
 %549 = getelementptr i8, i8* %548, i64 1
 %550 = load i8, i8* %549
 %551 = zext i8 %550 to i32
 %552 = shl i32 %551, 8
 %553 = or i32 %547, %552
 %554 = load i8*, i8** %248
 %555 = getelementptr i8, i8* %554, i64 2
 %556 = load i8, i8* %555
 %557 = zext i8 %556 to i32
 %558 = shl i32 %557, 16
 %559 = or i32 %553, %558
 %560 = load i8*, i8** %248
 %561 = getelementptr i8, i8* %560, i64 3
 %562 = load i8, i8* %561
 %563 = zext i8 %562 to i32
 %564 = shl i32 %563, 24
 %565 = or i32 %559, %564
 %566 = icmp ne i32 %565, 67324752
 br i1 %566, label %567, label %576
567:
 %568 = load i8*, i8** %236
 store i8* %568, i8** %187
 store i32 9, i32* %188
 %569 = load i8*, i8** %187
 %570 = icmp ne i8* %569, null
 br i1 %570, label %571, label %575
571:
 %572 = load i32, i32* %188
 %573 = load i8*, i8** %187
 %574 = getelementptr %struct.mz_zip_archive, i8* %573, i32 0, i32 5
 store i32 %572, i32* %574
 br label %575
575:
 store i32 0, i32* %235
 br label %2607
576:
 %577 = load i64, i64* %245
 %578 = add i64 %577, 30
 store i64 %578, i64* %245
 %579 = load i8*, i8** %248
 %580 = getelementptr i8, i8* %579, i64 26
 %581 = getelementptr i8, i8* %580, i64 0
 %582 = load i8, i8* %581
 %583 = zext i8 %582 to i32
 %584 = load i8*, i8** %248
 %585 = getelementptr i8, i8* %584, i64 26
 %586 = getelementptr i8, i8* %585, i64 1
 %587 = load i8, i8* %586
 %588 = zext i8 %587 to i32
 %589 = shl i32 %588, 8
 %590 = or i32 %583, %589
 store i32 %590, i32* %258
 %591 = load i8*, i8** %248
 %592 = getelementptr i8, i8* %591, i64 28
 %593 = getelementptr i8, i8* %592, i64 0
 %594 = load i8, i8* %593
 %595 = zext i8 %594 to i32
 %596 = load i8*, i8** %248
 %597 = getelementptr i8, i8* %596, i64 28
 %598 = getelementptr i8, i8* %597, i64 1
 %599 = load i8, i8* %598
 %600 = zext i8 %599 to i32
 %601 = shl i32 %600, 8
 %602 = or i32 %595, %601
 store i32 %602, i32* %259
 %603 = load i8*, i8** %248
 %604 = getelementptr i8, i8* %603, i64 18
 %605 = getelementptr i8, i8* %604, i64 0
 %606 = load i8, i8* %605
 %607 = zext i8 %606 to i32
 %608 = load i8*, i8** %248
 %609 = getelementptr i8, i8* %608, i64 18
 %610 = getelementptr i8, i8* %609, i64 1
 %611 = load i8, i8* %610
 %612 = zext i8 %611 to i32
 %613 = shl i32 %612, 8
 %614 = or i32 %607, %613
 %615 = load i8*, i8** %248
 %616 = getelementptr i8, i8* %615, i64 18
 %617 = getelementptr i8, i8* %616, i64 2
 %618 = load i8, i8* %617
 %619 = zext i8 %618 to i32
 %620 = shl i32 %619, 16
 %621 = or i32 %614, %620
 %622 = load i8*, i8** %248
 %623 = getelementptr i8, i8* %622, i64 18
 %624 = getelementptr i8, i8* %623, i64 3
 %625 = load i8, i8* %624
 %626 = zext i8 %625 to i32
 %627 = shl i32 %626, 24
 %628 = or i32 %621, %627
 %629 = zext i32 %628 to i64
 store i64 %629, i64* %260
 %630 = load i8*, i8** %248
 %631 = getelementptr i8, i8* %630, i64 22
 %632 = getelementptr i8, i8* %631, i64 0
 %633 = load i8, i8* %632
 %634 = zext i8 %633 to i32
 %635 = load i8*, i8** %248
 %636 = getelementptr i8, i8* %635, i64 22
 %637 = getelementptr i8, i8* %636, i64 1
 %638 = load i8, i8* %637
 %639 = zext i8 %638 to i32
 %640 = shl i32 %639, 8
 %641 = or i32 %634, %640
 %642 = load i8*, i8** %248
 %643 = getelementptr i8, i8* %642, i64 22
 %644 = getelementptr i8, i8* %643, i64 2
 %645 = load i8, i8* %644
 %646 = zext i8 %645 to i32
 %647 = shl i32 %646, 16
 %648 = or i32 %641, %647
 %649 = load i8*, i8** %248
 %650 = getelementptr i8, i8* %649, i64 22
 %651 = getelementptr i8, i8* %650, i64 3
 %652 = load i8, i8* %651
 %653 = zext i8 %652 to i32
 %654 = shl i32 %653, 24
 %655 = or i32 %648, %654
 %656 = zext i32 %655 to i64
 store i64 %656, i64* %261
 %657 = load i32, i32* %258
 %658 = load i32, i32* %259
 %659 = add i32 %657, %658
 %660 = zext i32 %659 to i64
 %661 = getelementptr %struct.mz_zip_archive_file_stat, i8* %254, i32 0, i32 7
 %662 = load i64, i64* %661
 %663 = add i64 %660, %662
 store i64 %663, i64* %243
 %664 = load i32, i32* %259
 %665 = icmp ne i32 %664, 0
 br i1 %665, label %666, label %1007
666:
 %667 = load i64, i64* %260
 %668 = icmp eq i64 %667, 4294967295
 br i1 %668, label %672, label %669
669:
 %670 = load i64, i64* %261
 %671 = icmp eq i64 %670, 4294967295
 br i1 %671, label %672, label %1007
672:
 %673 = load i32, i32* %259
 store i32 %673, i32* %265
 store i8* %263, i8** %164
 store i32 1, i32* %165
 %674 = load i8*, i8** %164
 %675 = load i8*, i8** %164
 %676 = call i64 @llvm.objectsize.i64.p0 (i8* %675, i1 0, i1 1, i1 0)
 %677 = call i8* @__memset_chk (i8* %674, i32 0, i64 32, i64 %676)
 %678 = load i32, i32* %165
 %679 = load i8*, i8** %164
 %680 = getelementptr %struct.mz_zip_array, i8* %679, i32 0, i32 3
 store i32 %678, i32* %680
 %681 = load i8*, i8** %236
 %682 = load i32, i32* %259
 %683 = zext i32 %682 to i64
 store i8* %681, i8** %130
 store i8* %263, i8** %131
 store i64 %683, i64* %132
 store i32 0, i32* %133
 %684 = load i64, i64* %132
 %685 = load i8*, i8** %131
 %686 = getelementptr %struct.mz_zip_array, i8* %685, i32 0, i32 2
 %687 = load i64, i64* %686
 %688 = icmp ugt i64 %684, %687
 br i1 %688, label %689, label %698
689:
 %690 = load i8*, i8** %130
 %691 = load i8*, i8** %131
 %692 = load i64, i64* %132
 %693 = load i32, i32* %133
 %694 = call i32 @mz_zip_array_ensure_capacity (i8* %690, i8* %691, i64 %692, i32 %693)
 %695 = icmp ne i32 %694, 0
 br i1 %695, label %697, label %696
696:
 store i32 0, i32* %129
 br label %702
697:
 br label %698
698:
 %699 = load i64, i64* %132
 %700 = load i8*, i8** %131
 %701 = getelementptr %struct.mz_zip_array, i8* %700, i32 0, i32 1
 store i64 %699, i64* %701
 store i32 1, i32* %129
 br label %702
702:
 %703 = load i32, i32* %129
 %704 = icmp ne i32 %703, 0
 br i1 %704, label %714, label %705
705:
 %706 = load i8*, i8** %236
 store i8* %706, i8** %189
 store i32 16, i32* %190
 %707 = load i8*, i8** %189
 %708 = icmp ne i8* %707, null
 br i1 %708, label %709, label %713
709:
 %710 = load i32, i32* %190
 %711 = load i8*, i8** %189
 %712 = getelementptr %struct.mz_zip_archive, i8* %711, i32 0, i32 5
 store i32 %710, i32* %712
 br label %713
713:
 store i32 0, i32* %235
 br label %2607
714:
 %715 = load i8*, i8** %237
 %716 = getelementptr %struct.mz_zip_archive, i8* %715, i32 0, i32 11
 %717 = load i8*, i8** %716
 %718 = load i8*, i8** %237
 %719 = getelementptr %struct.mz_zip_archive, i8* %718, i32 0, i32 14
 %720 = load i8*, i8** %719
 %721 = getelementptr %struct.mz_zip_archive_file_stat, i8* %254, i32 0, i32 11
 %722 = load i64, i64* %721
 %723 = add i64 %722, 30
 %724 = load i32, i32* %258
 %725 = zext i32 %724 to i64
 %726 = add i64 %723, %725
 %727 = getelementptr %struct.mz_zip_array, i8* %263, i32 0, i32 0
 %728 = load i8*, i8** %727
 %729 = load i32, i32* %259
 %730 = zext i32 %729 to i64
 %731 = call i64 %717 (i8* %720, i64 %726, i8* %728, i64 %730)
 %732 = load i32, i32* %259
 %733 = zext i32 %732 to i64
 %734 = icmp ne i64 %731, %733
 br i1 %734, label %735, label %757
735:
 %736 = load i8*, i8** %236
 store i8* %736, i8** %107
 store i8* %263, i8** %108
 %737 = load i8*, i8** %107
 %738 = getelementptr %struct.mz_zip_archive, i8* %737, i32 0, i32 8
 %739 = load i8*, i8** %738
 %740 = load i8*, i8** %107
 %741 = getelementptr %struct.mz_zip_archive, i8* %740, i32 0, i32 10
 %742 = load i8*, i8** %741
 %743 = load i8*, i8** %108
 %744 = load i8*, i8** %743
 call void %739 (i8* %742, i8* %744)
 %745 = load i8*, i8** %108
 %746 = load i8*, i8** %108
 %747 = call i64 @llvm.objectsize.i64.p0 (i8* %746, i1 0, i1 1, i1 0)
 %748 = call i8* @__memset_chk (i8* %745, i32 0, i64 32, i64 %747)
 %749 = load i8*, i8** %236
 store i8* %749, i8** %191
 store i32 20, i32* %192
 %750 = load i8*, i8** %191
 %751 = icmp ne i8* %750, null
 br i1 %751, label %752, label %756
752:
 %753 = load i32, i32* %192
 %754 = load i8*, i8** %191
 %755 = getelementptr %struct.mz_zip_archive, i8* %754, i32 0, i32 5
 store i32 %753, i32* %755
 br label %756
756:
 store i32 0, i32* %235
 br label %2607
757:
 %758 = getelementptr %struct.mz_zip_array, i8* %263, i32 0, i32 0
 %759 = load i8*, i8** %758
 store i8* %759, i8** %264
 br label %760
760:
 %761 = load i32, i32* %265
 %762 = zext i32 %761 to i64
 %763 = icmp ult i64 %762, 4
 br i1 %763, label %764, label %786
764:
 %765 = load i8*, i8** %236
 store i8* %765, i8** %109
 store i8* %263, i8** %110
 %766 = load i8*, i8** %109
 %767 = getelementptr %struct.mz_zip_archive, i8* %766, i32 0, i32 8
 %768 = load i8*, i8** %767
 %769 = load i8*, i8** %109
 %770 = getelementptr %struct.mz_zip_archive, i8* %769, i32 0, i32 10
 %771 = load i8*, i8** %770
 %772 = load i8*, i8** %110
 %773 = load i8*, i8** %772
 call void %768 (i8* %771, i8* %773)
 %774 = load i8*, i8** %110
 %775 = load i8*, i8** %110
 %776 = call i64 @llvm.objectsize.i64.p0 (i8* %775, i1 0, i1 1, i1 0)
 %777 = call i8* @__memset_chk (i8* %774, i32 0, i64 32, i64 %776)
 %778 = load i8*, i8** %236
 store i8* %778, i8** %193
 store i32 9, i32* %194
 %779 = load i8*, i8** %193
 %780 = icmp ne i8* %779, null
 br i1 %780, label %781, label %785
781:
 %782 = load i32, i32* %194
 %783 = load i8*, i8** %193
 %784 = getelementptr %struct.mz_zip_archive, i8* %783, i32 0, i32 5
 store i32 %782, i32* %784
 br label %785
785:
 store i32 0, i32* %235
 br label %2607
786:
 %787 = load i8*, i8** %264
 %788 = getelementptr i8, i8* %787, i64 0
 %789 = load i8, i8* %788
 %790 = zext i8 %789 to i32
 %791 = load i8*, i8** %264
 %792 = getelementptr i8, i8* %791, i64 1
 %793 = load i8, i8* %792
 %794 = zext i8 %793 to i32
 %795 = shl i32 %794, 8
 %796 = or i32 %790, %795
 store i32 %796, i32* %266
 %797 = load i8*, i8** %264
 %798 = getelementptr i8, i8* %797, i64 2
 %799 = getelementptr i8, i8* %798, i64 0
 %800 = load i8, i8* %799
 %801 = zext i8 %800 to i32
 %802 = load i8*, i8** %264
 %803 = getelementptr i8, i8* %802, i64 2
 %804 = getelementptr i8, i8* %803, i64 1
 %805 = load i8, i8* %804
 %806 = zext i8 %805 to i32
 %807 = shl i32 %806, 8
 %808 = or i32 %801, %807
 store i32 %808, i32* %267
 %809 = load i32, i32* %267
 %810 = zext i32 %809 to i64
 %811 = add i64 %810, 4
 %812 = trunc i64 %811 to i32
 store i32 %812, i32* %268
 %813 = load i32, i32* %268
 %814 = load i32, i32* %265
 %815 = icmp ugt i32 %813, %814
 br i1 %815, label %816, label %838
816:
 %817 = load i8*, i8** %236
 store i8* %817, i8** %111
 store i8* %263, i8** %112
 %818 = load i8*, i8** %111
 %819 = getelementptr %struct.mz_zip_archive, i8* %818, i32 0, i32 8
 %820 = load i8*, i8** %819
 %821 = load i8*, i8** %111
 %822 = getelementptr %struct.mz_zip_archive, i8* %821, i32 0, i32 10
 %823 = load i8*, i8** %822
 %824 = load i8*, i8** %112
 %825 = load i8*, i8** %824
 call void %820 (i8* %823, i8* %825)
 %826 = load i8*, i8** %112
 %827 = load i8*, i8** %112
 %828 = call i64 @llvm.objectsize.i64.p0 (i8* %827, i1 0, i1 1, i1 0)
 %829 = call i8* @__memset_chk (i8* %826, i32 0, i64 32, i64 %828)
 %830 = load i8*, i8** %236
 store i8* %830, i8** %195
 store i32 9, i32* %196
 %831 = load i8*, i8** %195
 %832 = icmp ne i8* %831, null
 br i1 %832, label %833, label %837
833:
 %834 = load i32, i32* %196
 %835 = load i8*, i8** %195
 %836 = getelementptr %struct.mz_zip_archive, i8* %835, i32 0, i32 5
 store i32 %834, i32* %836
 br label %837
837:
 store i32 0, i32* %235
 br label %2607
838:
 %839 = load i32, i32* %266
 %840 = icmp eq i32 %839, 1
 br i1 %840, label %841, label %982
841:
 %842 = load i8*, i8** %264
 %843 = getelementptr i8, i8* %842, i64 4
 store i8* %843, i8** %269
 %844 = load i32, i32* %267
 %845 = zext i32 %844 to i64
 %846 = icmp ult i64 %845, 16
 br i1 %846, label %847, label %869
847:
 %848 = load i8*, i8** %236
 store i8* %848, i8** %113
 store i8* %263, i8** %114
 %849 = load i8*, i8** %113
 %850 = getelementptr %struct.mz_zip_archive, i8* %849, i32 0, i32 8
 %851 = load i8*, i8** %850
 %852 = load i8*, i8** %113
 %853 = getelementptr %struct.mz_zip_archive, i8* %852, i32 0, i32 10
 %854 = load i8*, i8** %853
 %855 = load i8*, i8** %114
 %856 = load i8*, i8** %855
 call void %851 (i8* %854, i8* %856)
 %857 = load i8*, i8** %114
 %858 = load i8*, i8** %114
 %859 = call i64 @llvm.objectsize.i64.p0 (i8* %858, i1 0, i1 1, i1 0)
 %860 = call i8* @__memset_chk (i8* %857, i32 0, i64 32, i64 %859)
 %861 = load i8*, i8** %236
 store i8* %861, i8** %197
 store i32 9, i32* %198
 %862 = load i8*, i8** %197
 %863 = icmp ne i8* %862, null
 br i1 %863, label %864, label %868
864:
 %865 = load i32, i32* %198
 %866 = load i8*, i8** %197
 %867 = getelementptr %struct.mz_zip_archive, i8* %866, i32 0, i32 5
 store i32 %865, i32* %867
 br label %868
868:
 store i32 0, i32* %235
 br label %2607
869:
 %870 = load i8*, i8** %269
 %871 = getelementptr i8, i8* %870, i64 0
 %872 = load i8, i8* %871
 %873 = zext i8 %872 to i32
 %874 = load i8*, i8** %269
 %875 = getelementptr i8, i8* %874, i64 1
 %876 = load i8, i8* %875
 %877 = zext i8 %876 to i32
 %878 = shl i32 %877, 8
 %879 = or i32 %873, %878
 %880 = load i8*, i8** %269
 %881 = getelementptr i8, i8* %880, i64 2
 %882 = load i8, i8* %881
 %883 = zext i8 %882 to i32
 %884 = shl i32 %883, 16
 %885 = or i32 %879, %884
 %886 = load i8*, i8** %269
 %887 = getelementptr i8, i8* %886, i64 3
 %888 = load i8, i8* %887
 %889 = zext i8 %888 to i32
 %890 = shl i32 %889, 24
 %891 = or i32 %885, %890
 %892 = zext i32 %891 to i64
 %893 = load i8*, i8** %269
 %894 = getelementptr i8, i8* %893, i64 4
 %895 = getelementptr i8, i8* %894, i64 0
 %896 = load i8, i8* %895
 %897 = zext i8 %896 to i32
 %898 = load i8*, i8** %269
 %899 = getelementptr i8, i8* %898, i64 4
 %900 = getelementptr i8, i8* %899, i64 1
 %901 = load i8, i8* %900
 %902 = zext i8 %901 to i32
 %903 = shl i32 %902, 8
 %904 = or i32 %897, %903
 %905 = load i8*, i8** %269
 %906 = getelementptr i8, i8* %905, i64 4
 %907 = getelementptr i8, i8* %906, i64 2
 %908 = load i8, i8* %907
 %909 = zext i8 %908 to i32
 %910 = shl i32 %909, 16
 %911 = or i32 %904, %910
 %912 = load i8*, i8** %269
 %913 = getelementptr i8, i8* %912, i64 4
 %914 = getelementptr i8, i8* %913, i64 3
 %915 = load i8, i8* %914
 %916 = zext i8 %915 to i32
 %917 = shl i32 %916, 24
 %918 = or i32 %911, %917
 %919 = zext i32 %918 to i64
 %920 = shl i64 %919, 32
 %921 = or i64 %892, %920
 store i64 %921, i64* %261
 %922 = load i8*, i8** %269
 %923 = getelementptr i8, i8* %922, i64 8
 %924 = getelementptr i8, i8* %923, i64 0
 %925 = load i8, i8* %924
 %926 = zext i8 %925 to i32
 %927 = load i8*, i8** %269
 %928 = getelementptr i8, i8* %927, i64 8
 %929 = getelementptr i8, i8* %928, i64 1
 %930 = load i8, i8* %929
 %931 = zext i8 %930 to i32
 %932 = shl i32 %931, 8
 %933 = or i32 %926, %932
 %934 = load i8*, i8** %269
 %935 = getelementptr i8, i8* %934, i64 8
 %936 = getelementptr i8, i8* %935, i64 2
 %937 = load i8, i8* %936
 %938 = zext i8 %937 to i32
 %939 = shl i32 %938, 16
 %940 = or i32 %933, %939
 %941 = load i8*, i8** %269
 %942 = getelementptr i8, i8* %941, i64 8
 %943 = getelementptr i8, i8* %942, i64 3
 %944 = load i8, i8* %943
 %945 = zext i8 %944 to i32
 %946 = shl i32 %945, 24
 %947 = or i32 %940, %946
 %948 = zext i32 %947 to i64
 %949 = load i8*, i8** %269
 %950 = getelementptr i8, i8* %949, i64 8
 %951 = getelementptr i8, i8* %950, i64 4
 %952 = getelementptr i8, i8* %951, i64 0
 %953 = load i8, i8* %952
 %954 = zext i8 %953 to i32
 %955 = load i8*, i8** %269
 %956 = getelementptr i8, i8* %955, i64 8
 %957 = getelementptr i8, i8* %956, i64 4
 %958 = getelementptr i8, i8* %957, i64 1
 %959 = load i8, i8* %958
 %960 = zext i8 %959 to i32
 %961 = shl i32 %960, 8
 %962 = or i32 %954, %961
 %963 = load i8*, i8** %269
 %964 = getelementptr i8, i8* %963, i64 8
 %965 = getelementptr i8, i8* %964, i64 4
 %966 = getelementptr i8, i8* %965, i64 2
 %967 = load i8, i8* %966
 %968 = zext i8 %967 to i32
 %969 = shl i32 %968, 16
 %970 = or i32 %962, %969
 %971 = load i8*, i8** %269
 %972 = getelementptr i8, i8* %971, i64 8
 %973 = getelementptr i8, i8* %972, i64 4
 %974 = getelementptr i8, i8* %973, i64 3
 %975 = load i8, i8* %974
 %976 = zext i8 %975 to i32
 %977 = shl i32 %976, 24
 %978 = or i32 %970, %977
 %979 = zext i32 %978 to i64
 %980 = shl i64 %979, 32
 %981 = or i64 %948, %980
 store i64 %981, i64* %260
 store i32 1, i32* %262
 br label %993
982:
 %983 = load i32, i32* %268
 %984 = load i8*, i8** %264
 %985 = zext i32 %983 to i64
 %986 = getelementptr i8, i8* %984, i64 %985
 store i8* %986, i8** %264
 %987 = load i32, i32* %268
 %988 = load i32, i32* %265
 %989 = sub i32 %988, %987
 store i32 %989, i32* %265
 br label %990
990:
 %991 = load i32, i32* %265
 %992 = icmp ne i32 %991, 0
 br i1 %992, label %760, label %993
993:
 %994 = load i8*, i8** %236
 store i8* %994, i8** %115
 store i8* %263, i8** %116
 %995 = load i8*, i8** %115
 %996 = getelementptr %struct.mz_zip_archive, i8* %995, i32 0, i32 8
 %997 = load i8*, i8** %996
 %998 = load i8*, i8** %115
 %999 = getelementptr %struct.mz_zip_archive, i8* %998, i32 0, i32 10
 %1000 = load i8*, i8** %999
 %1001 = load i8*, i8** %116
 %1002 = load i8*, i8** %1001
 call void %997 (i8* %1000, i8* %1002)
 %1003 = load i8*, i8** %116
 %1004 = load i8*, i8** %116
 %1005 = call i64 @llvm.objectsize.i64.p0 (i8* %1004, i1 0, i1 1, i1 0)
 %1006 = call i8* @__memset_chk (i8* %1003, i32 0, i64 32, i64 %1005)
 br label %1007
1007:
 %1008 = load i8*, i8** %251
 %1009 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1008, i32 0, i32 4
 %1010 = load i32, i32* %1009
 %1011 = icmp ne i32 %1010, 0
 br i1 %1011, label %1044, label %1012
1012:
 %1013 = load i64, i64* %246
 %1014 = load i32, i32* %241
 %1015 = zext i32 %1014 to i64
 %1016 = add i64 %1013, %1015
 %1017 = add i64 %1016, 30
 %1018 = load i64, i64* %243
 %1019 = add i64 %1017, %1018
 %1020 = add i64 %1019, 16
 %1021 = load i8*, i8** %251
 %1022 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1021, i32 0, i32 0
 %1023 = getelementptr %struct.mz_zip_array, i8* %1022, i32 0, i32 1
 %1024 = load i64, i64* %1023
 %1025 = add i64 %1020, %1024
 %1026 = add i64 %1025, 46
 %1027 = load i32, i32* %242
 %1028 = zext i32 %1027 to i64
 %1029 = add i64 %1026, %1028
 %1030 = add i64 %1029, 22
 %1031 = add i64 %1030, 64
 store i64 %1031, i64* %270
 %1032 = load i64, i64* %270
 %1033 = icmp uge i64 %1032, 4294967295
 br i1 %1033, label %1034, label %1043
1034:
 %1035 = load i8*, i8** %236
 store i8* %1035, i8** %199
 store i32 29, i32* %200
 %1036 = load i8*, i8** %199
 %1037 = icmp ne i8* %1036, null
 br i1 %1037, label %1038, label %1042
1038:
 %1039 = load i32, i32* %200
 %1040 = load i8*, i8** %199
 %1041 = getelementptr %struct.mz_zip_archive, i8* %1040, i32 0, i32 5
 store i32 %1039, i32* %1041
 br label %1042
1042:
 store i32 0, i32* %235
 br label %2607
1043:
 br label %1044
1044:
 %1045 = load i8*, i8** %236
 %1046 = load i64, i64* %246
 %1047 = load i32, i32* %241
 %1048 = call i32 @mz_zip_writer_write_zeros (i8* %1045, i64 %1046, i32 %1047)
 %1049 = icmp ne i32 %1048, 0
 br i1 %1049, label %1051, label %1050
1050:
 store i32 0, i32* %235
 br label %2607
1051:
 %1052 = load i32, i32* %241
 %1053 = zext i32 %1052 to i64
 %1054 = load i64, i64* %246
 %1055 = add i64 %1054, %1053
 store i64 %1055, i64* %246
 %1056 = load i64, i64* %246
 store i64 %1056, i64* %244
 %1057 = load i8*, i8** %236
 %1058 = getelementptr %struct.mz_zip_archive, i8* %1057, i32 0, i32 6
 %1059 = load i64, i64* %1058
 %1060 = icmp ne i64 %1059, 0
 br i1 %1060, label %1061, label %1077
1061:
 %1062 = load i64, i64* %244
 %1063 = load i8*, i8** %236
 %1064 = getelementptr %struct.mz_zip_archive, i8* %1063, i32 0, i32 6
 %1065 = load i64, i64* %1064
 %1066 = sub i64 %1065, 1
 %1067 = and i64 %1062, %1066
 %1068 = icmp eq i64 %1067, 0
 %1069 = xor i1 %1068, 1
 %1070 = zext i1 %1069 to i32
 %1071 = sext i32 %1070 to i64
 %1072 = icmp ne i64 %1071, 0
 br i1 %1072, label %1073, label %1075
1073:
 call void @__assert_rtn (i8* @__func__.mz_zip_writer_add_from_zip_reader, i8* @.str.11, i32 8572, i8* @.str.22)
 unreachable
1074:
 br label %1076
1075:
 br label %1076
1076:
 br label %1077
1077:
 %1078 = load i8*, i8** %236
 %1079 = getelementptr %struct.mz_zip_archive, i8* %1078, i32 0, i32 12
 %1080 = load i8*, i8** %1079
 %1081 = load i8*, i8** %236
 %1082 = getelementptr %struct.mz_zip_archive, i8* %1081, i32 0, i32 14
 %1083 = load i8*, i8** %1082
 %1084 = load i64, i64* %246
 %1085 = load i8*, i8** %248
 %1086 = call i64 %1080 (i8* %1083, i64 %1084, i8* %1085, i64 30)
 %1087 = icmp ne i64 %1086, 30
 br i1 %1087, label %1088, label %1097
1088:
 %1089 = load i8*, i8** %236
 store i8* %1089, i8** %201
 store i32 19, i32* %202
 %1090 = load i8*, i8** %201
 %1091 = icmp ne i8* %1090, null
 br i1 %1091, label %1092, label %1096
1092:
 %1093 = load i32, i32* %202
 %1094 = load i8*, i8** %201
 %1095 = getelementptr %struct.mz_zip_archive, i8* %1094, i32 0, i32 5
 store i32 %1093, i32* %1095
 br label %1096
1096:
 store i32 0, i32* %235
 br label %2607
1097:
 %1098 = load i64, i64* %246
 %1099 = add i64 %1098, 30
 store i64 %1099, i64* %246
 %1100 = load i8*, i8** %236
 %1101 = getelementptr %struct.mz_zip_archive, i8* %1100, i32 0, i32 7
 %1102 = load i8*, i8** %1101
 %1103 = load i8*, i8** %236
 %1104 = getelementptr %struct.mz_zip_archive, i8* %1103, i32 0, i32 10
 %1105 = load i8*, i8** %1104
 %1106 = load i64, i64* %243
 %1107 = icmp ult i64 65536, %1106
 br i1 %1107, label %1108, label %1109
1108:
 br label %1111
1109:
 %1110 = load i64, i64* %243
 br label %1111
1111:
 %1112 = phi i64 [65536, %1108], [%1110, %1109]
 %1113 = icmp ugt i64 32, %1112
 br i1 %1113, label %1114, label %1115
1114:
 br label %1123
1115:
 %1116 = load i64, i64* %243
 %1117 = icmp ult i64 65536, %1116
 br i1 %1117, label %1118, label %1119
1118:
 br label %1121
1119:
 %1120 = load i64, i64* %243
 br label %1121
1121:
 %1122 = phi i64 [65536, %1118], [%1120, %1119]
 br label %1123
1123:
 %1124 = phi i64 [32, %1114], [%1122, %1121]
 %1125 = call i8* %1102 (i8* %1105, i64 1, i64 %1124)
 store i8* %1125, i8** %252
 %1126 = icmp eq i8* null, %1125
 br i1 %1126, label %1127, label %1136
1127:
 %1128 = load i8*, i8** %236
 store i8* %1128, i8** %203
 store i32 16, i32* %204
 %1129 = load i8*, i8** %203
 %1130 = icmp ne i8* %1129, null
 br i1 %1130, label %1131, label %1135
1131:
 %1132 = load i32, i32* %204
 %1133 = load i8*, i8** %203
 %1134 = getelementptr %struct.mz_zip_archive, i8* %1133, i32 0, i32 5
 store i32 %1132, i32* %1134
 br label %1135
1135:
 store i32 0, i32* %235
 br label %2607
1136:
 br label %1137
1137:
 %1138 = load i64, i64* %243
 %1139 = icmp ne i64 %1138, 0
 br i1 %1139, label %1140, label %1223
1140:
 %1141 = load i64, i64* %243
 %1142 = icmp ult i64 65536, %1141
 br i1 %1142, label %1143, label %1144
1143:
 br label %1146
1144:
 %1145 = load i64, i64* %243
 br label %1146
1146:
 %1147 = phi i64 [65536, %1143], [%1145, %1144]
 %1148 = trunc i64 %1147 to i32
 store i32 %1148, i32* %239
 %1149 = load i8*, i8** %237
 %1150 = getelementptr %struct.mz_zip_archive, i8* %1149, i32 0, i32 11
 %1151 = load i8*, i8** %1150
 %1152 = load i8*, i8** %237
 %1153 = getelementptr %struct.mz_zip_archive, i8* %1152, i32 0, i32 14
 %1154 = load i8*, i8** %1153
 %1155 = load i64, i64* %245
 %1156 = load i8*, i8** %252
 %1157 = load i32, i32* %239
 %1158 = zext i32 %1157 to i64
 %1159 = call i64 %1151 (i8* %1154, i64 %1155, i8* %1156, i64 %1158)
 %1160 = load i32, i32* %239
 %1161 = zext i32 %1160 to i64
 %1162 = icmp ne i64 %1159, %1161
 br i1 %1162, label %1163, label %1179
1163:
 %1164 = load i8*, i8** %236
 %1165 = getelementptr %struct.mz_zip_archive, i8* %1164, i32 0, i32 8
 %1166 = load i8*, i8** %1165
 %1167 = load i8*, i8** %236
 %1168 = getelementptr %struct.mz_zip_archive, i8* %1167, i32 0, i32 10
 %1169 = load i8*, i8** %1168
 %1170 = load i8*, i8** %252
 call void %1166 (i8* %1169, i8* %1170)
 %1171 = load i8*, i8** %236
 store i8* %1171, i8** %205
 store i32 20, i32* %206
 %1172 = load i8*, i8** %205
 %1173 = icmp ne i8* %1172, null
 br i1 %1173, label %1174, label %1178
1174:
 %1175 = load i32, i32* %206
 %1176 = load i8*, i8** %205
 %1177 = getelementptr %struct.mz_zip_archive, i8* %1176, i32 0, i32 5
 store i32 %1175, i32* %1177
 br label %1178
1178:
 store i32 0, i32* %235
 br label %2607
1179:
 %1180 = load i32, i32* %239
 %1181 = zext i32 %1180 to i64
 %1182 = load i64, i64* %245
 %1183 = add i64 %1182, %1181
 store i64 %1183, i64* %245
 %1184 = load i8*, i8** %236
 %1185 = getelementptr %struct.mz_zip_archive, i8* %1184, i32 0, i32 12
 %1186 = load i8*, i8** %1185
 %1187 = load i8*, i8** %236
 %1188 = getelementptr %struct.mz_zip_archive, i8* %1187, i32 0, i32 14
 %1189 = load i8*, i8** %1188
 %1190 = load i64, i64* %246
 %1191 = load i8*, i8** %252
 %1192 = load i32, i32* %239
 %1193 = zext i32 %1192 to i64
 %1194 = call i64 %1186 (i8* %1189, i64 %1190, i8* %1191, i64 %1193)
 %1195 = load i32, i32* %239
 %1196 = zext i32 %1195 to i64
 %1197 = icmp ne i64 %1194, %1196
 br i1 %1197, label %1198, label %1214
1198:
 %1199 = load i8*, i8** %236
 %1200 = getelementptr %struct.mz_zip_archive, i8* %1199, i32 0, i32 8
 %1201 = load i8*, i8** %1200
 %1202 = load i8*, i8** %236
 %1203 = getelementptr %struct.mz_zip_archive, i8* %1202, i32 0, i32 10
 %1204 = load i8*, i8** %1203
 %1205 = load i8*, i8** %252
 call void %1201 (i8* %1204, i8* %1205)
 %1206 = load i8*, i8** %236
 store i8* %1206, i8** %207
 store i32 19, i32* %208
 %1207 = load i8*, i8** %207
 %1208 = icmp ne i8* %1207, null
 br i1 %1208, label %1209, label %1213
1209:
 %1210 = load i32, i32* %208
 %1211 = load i8*, i8** %207
 %1212 = getelementptr %struct.mz_zip_archive, i8* %1211, i32 0, i32 5
 store i32 %1210, i32* %1212
 br label %1213
1213:
 store i32 0, i32* %235
 br label %2607
1214:
 %1215 = load i32, i32* %239
 %1216 = zext i32 %1215 to i64
 %1217 = load i64, i64* %246
 %1218 = add i64 %1217, %1216
 store i64 %1218, i64* %246
 %1219 = load i32, i32* %239
 %1220 = zext i32 %1219 to i64
 %1221 = load i64, i64* %243
 %1222 = sub i64 %1221, %1220
 store i64 %1222, i64* %243
 br label %1137
1223:
 %1224 = load i8*, i8** %248
 %1225 = getelementptr i8, i8* %1224, i64 6
 %1226 = getelementptr i8, i8* %1225, i64 0
 %1227 = load i8, i8* %1226
 %1228 = zext i8 %1227 to i32
 %1229 = load i8*, i8** %248
 %1230 = getelementptr i8, i8* %1229, i64 6
 %1231 = getelementptr i8, i8* %1230, i64 1
 %1232 = load i8, i8* %1231
 %1233 = zext i8 %1232 to i32
 %1234 = shl i32 %1233, 8
 %1235 = or i32 %1228, %1234
 store i32 %1235, i32* %240
 %1236 = load i32, i32* %240
 %1237 = and i32 %1236, 8
 %1238 = icmp ne i32 %1237, 0
 br i1 %1238, label %1239, label %1629
1239:
 %1240 = load i8*, i8** %237
 %1241 = getelementptr %struct.mz_zip_archive, i8* %1240, i32 0, i32 15
 %1242 = load i8*, i8** %1241
 %1243 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1242, i32 0, i32 4
 %1244 = load i32, i32* %1243
 %1245 = icmp ne i32 %1244, 0
 br i1 %1245, label %1249, label %1246
1246:
 %1247 = load i32, i32* %262
 %1248 = icmp ne i32 %1247, 0
 br i1 %1248, label %1249, label %1305
1249:
 %1250 = load i8*, i8** %237
 %1251 = getelementptr %struct.mz_zip_archive, i8* %1250, i32 0, i32 11
 %1252 = load i8*, i8** %1251
 %1253 = load i8*, i8** %237
 %1254 = getelementptr %struct.mz_zip_archive, i8* %1253, i32 0, i32 14
 %1255 = load i8*, i8** %1254
 %1256 = load i64, i64* %245
 %1257 = load i8*, i8** %252
 %1258 = call i64 %1252 (i8* %1255, i64 %1256, i8* %1257, i64 24)
 %1259 = icmp ne i64 %1258, 24
 br i1 %1259, label %1260, label %1276
1260:
 %1261 = load i8*, i8** %236
 %1262 = getelementptr %struct.mz_zip_archive, i8* %1261, i32 0, i32 8
 %1263 = load i8*, i8** %1262
 %1264 = load i8*, i8** %236
 %1265 = getelementptr %struct.mz_zip_archive, i8* %1264, i32 0, i32 10
 %1266 = load i8*, i8** %1265
 %1267 = load i8*, i8** %252
 call void %1263 (i8* %1266, i8* %1267)
 %1268 = load i8*, i8** %236
 store i8* %1268, i8** %209
 store i32 20, i32* %210
 %1269 = load i8*, i8** %209
 %1270 = icmp ne i8* %1269, null
 br i1 %1270, label %1271, label %1275
1271:
 %1272 = load i32, i32* %210
 %1273 = load i8*, i8** %209
 %1274 = getelementptr %struct.mz_zip_archive, i8* %1273, i32 0, i32 5
 store i32 %1272, i32* %1274
 br label %1275
1275:
 store i32 0, i32* %235
 br label %2607
1276:
 %1277 = load i8*, i8** %252
 %1278 = getelementptr i8, i8* %1277, i64 0
 %1279 = load i8, i8* %1278
 %1280 = zext i8 %1279 to i32
 %1281 = load i8*, i8** %252
 %1282 = getelementptr i8, i8* %1281, i64 1
 %1283 = load i8, i8* %1282
 %1284 = zext i8 %1283 to i32
 %1285 = shl i32 %1284, 8
 %1286 = or i32 %1280, %1285
 %1287 = load i8*, i8** %252
 %1288 = getelementptr i8, i8* %1287, i64 2
 %1289 = load i8, i8* %1288
 %1290 = zext i8 %1289 to i32
 %1291 = shl i32 %1290, 16
 %1292 = or i32 %1286, %1291
 %1293 = load i8*, i8** %252
 %1294 = getelementptr i8, i8* %1293, i64 3
 %1295 = load i8, i8* %1294
 %1296 = zext i8 %1295 to i32
 %1297 = shl i32 %1296, 24
 %1298 = or i32 %1292, %1297
 %1299 = icmp eq i32 %1298, 134695760
 %1300 = zext i1 %1299 to i64
 %1301 = select i1 %1299, i32 6, i32 5
 %1302 = sext i32 %1301 to i64
 %1303 = mul i64 4, %1302
 %1304 = trunc i64 %1303 to i32
 store i32 %1304, i32* %239
 br label %1589
1305:
 %1306 = load i8*, i8** %237
 %1307 = getelementptr %struct.mz_zip_archive, i8* %1306, i32 0, i32 11
 %1308 = load i8*, i8** %1307
 %1309 = load i8*, i8** %237
 %1310 = getelementptr %struct.mz_zip_archive, i8* %1309, i32 0, i32 14
 %1311 = load i8*, i8** %1310
 %1312 = load i64, i64* %245
 %1313 = load i8*, i8** %252
 %1314 = call i64 %1308 (i8* %1311, i64 %1312, i8* %1313, i64 16)
 %1315 = icmp ne i64 %1314, 16
 br i1 %1315, label %1316, label %1332
1316:
 %1317 = load i8*, i8** %236
 %1318 = getelementptr %struct.mz_zip_archive, i8* %1317, i32 0, i32 8
 %1319 = load i8*, i8** %1318
 %1320 = load i8*, i8** %236
 %1321 = getelementptr %struct.mz_zip_archive, i8* %1320, i32 0, i32 10
 %1322 = load i8*, i8** %1321
 %1323 = load i8*, i8** %252
 call void %1319 (i8* %1322, i8* %1323)
 %1324 = load i8*, i8** %236
 store i8* %1324, i8** %211
 store i32 20, i32* %212
 %1325 = load i8*, i8** %211
 %1326 = icmp ne i8* %1325, null
 br i1 %1326, label %1327, label %1331
1327:
 %1328 = load i32, i32* %212
 %1329 = load i8*, i8** %211
 %1330 = getelementptr %struct.mz_zip_archive, i8* %1329, i32 0, i32 5
 store i32 %1328, i32* %1330
 br label %1331
1331:
 store i32 0, i32* %235
 br label %2607
1332:
 %1333 = load i8*, i8** %252
 %1334 = getelementptr i8, i8* %1333, i64 0
 %1335 = load i8, i8* %1334
 %1336 = zext i8 %1335 to i32
 %1337 = load i8*, i8** %252
 %1338 = getelementptr i8, i8* %1337, i64 1
 %1339 = load i8, i8* %1338
 %1340 = zext i8 %1339 to i32
 %1341 = shl i32 %1340, 8
 %1342 = or i32 %1336, %1341
 %1343 = load i8*, i8** %252
 %1344 = getelementptr i8, i8* %1343, i64 2
 %1345 = load i8, i8* %1344
 %1346 = zext i8 %1345 to i32
 %1347 = shl i32 %1346, 16
 %1348 = or i32 %1342, %1347
 %1349 = load i8*, i8** %252
 %1350 = getelementptr i8, i8* %1349, i64 3
 %1351 = load i8, i8* %1350
 %1352 = zext i8 %1351 to i32
 %1353 = shl i32 %1352, 24
 %1354 = or i32 %1348, %1353
 %1355 = icmp eq i32 %1354, 134695760
 %1356 = zext i1 %1355 to i32
 store i32 %1356, i32* %271
 %1357 = load i8*, i8** %236
 %1358 = getelementptr %struct.mz_zip_archive, i8* %1357, i32 0, i32 15
 %1359 = load i8*, i8** %1358
 %1360 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1359, i32 0, i32 4
 %1361 = load i32, i32* %1360
 %1362 = icmp ne i32 %1361, 0
 br i1 %1362, label %1363, label %1580
1363:
 %1364 = load i8*, i8** %252
 %1365 = load i32, i32* %271
 %1366 = icmp ne i32 %1365, 0
 %1367 = zext i1 %1366 to i64
 %1368 = select i1 %1366, i64 4, i64 0
 %1369 = getelementptr i8, i8* %1364, i64 %1368
 store i8* %1369, i8** %272
 %1370 = load i8*, i8** %272
 %1371 = getelementptr i8, i8* %1370, i64 0
 %1372 = load i8, i8* %1371
 %1373 = zext i8 %1372 to i32
 %1374 = load i8*, i8** %272
 %1375 = getelementptr i8, i8* %1374, i64 1
 %1376 = load i8, i8* %1375
 %1377 = zext i8 %1376 to i32
 %1378 = shl i32 %1377, 8
 %1379 = or i32 %1373, %1378
 %1380 = load i8*, i8** %272
 %1381 = getelementptr i8, i8* %1380, i64 2
 %1382 = load i8, i8* %1381
 %1383 = zext i8 %1382 to i32
 %1384 = shl i32 %1383, 16
 %1385 = or i32 %1379, %1384
 %1386 = load i8*, i8** %272
 %1387 = getelementptr i8, i8* %1386, i64 3
 %1388 = load i8, i8* %1387
 %1389 = zext i8 %1388 to i32
 %1390 = shl i32 %1389, 24
 %1391 = or i32 %1385, %1390
 store i32 %1391, i32* %273
 %1392 = load i8*, i8** %272
 %1393 = getelementptr i8, i8* %1392, i64 4
 %1394 = getelementptr i8, i8* %1393, i64 0
 %1395 = load i8, i8* %1394
 %1396 = zext i8 %1395 to i32
 %1397 = load i8*, i8** %272
 %1398 = getelementptr i8, i8* %1397, i64 4
 %1399 = getelementptr i8, i8* %1398, i64 1
 %1400 = load i8, i8* %1399
 %1401 = zext i8 %1400 to i32
 %1402 = shl i32 %1401, 8
 %1403 = or i32 %1396, %1402
 %1404 = load i8*, i8** %272
 %1405 = getelementptr i8, i8* %1404, i64 4
 %1406 = getelementptr i8, i8* %1405, i64 2
 %1407 = load i8, i8* %1406
 %1408 = zext i8 %1407 to i32
 %1409 = shl i32 %1408, 16
 %1410 = or i32 %1403, %1409
 %1411 = load i8*, i8** %272
 %1412 = getelementptr i8, i8* %1411, i64 4
 %1413 = getelementptr i8, i8* %1412, i64 3
 %1414 = load i8, i8* %1413
 %1415 = zext i8 %1414 to i32
 %1416 = shl i32 %1415, 24
 %1417 = or i32 %1410, %1416
 %1418 = zext i32 %1417 to i64
 store i64 %1418, i64* %274
 %1419 = load i8*, i8** %272
 %1420 = getelementptr i8, i8* %1419, i64 8
 %1421 = getelementptr i8, i8* %1420, i64 0
 %1422 = load i8, i8* %1421
 %1423 = zext i8 %1422 to i32
 %1424 = load i8*, i8** %272
 %1425 = getelementptr i8, i8* %1424, i64 8
 %1426 = getelementptr i8, i8* %1425, i64 1
 %1427 = load i8, i8* %1426
 %1428 = zext i8 %1427 to i32
 %1429 = shl i32 %1428, 8
 %1430 = or i32 %1423, %1429
 %1431 = load i8*, i8** %272
 %1432 = getelementptr i8, i8* %1431, i64 8
 %1433 = getelementptr i8, i8* %1432, i64 2
 %1434 = load i8, i8* %1433
 %1435 = zext i8 %1434 to i32
 %1436 = shl i32 %1435, 16
 %1437 = or i32 %1430, %1436
 %1438 = load i8*, i8** %272
 %1439 = getelementptr i8, i8* %1438, i64 8
 %1440 = getelementptr i8, i8* %1439, i64 3
 %1441 = load i8, i8* %1440
 %1442 = zext i8 %1441 to i32
 %1443 = shl i32 %1442, 24
 %1444 = or i32 %1437, %1443
 %1445 = zext i32 %1444 to i64
 store i64 %1445, i64* %275
 %1446 = load i8*, i8** %252
 store i8* %1446, i8** %95
 store i32 134695760, i32* %96
 %1447 = load i32, i32* %96
 %1448 = trunc i32 %1447 to i8
 %1449 = load i8*, i8** %95
 store i8 %1448, i8* %1449
 %1450 = load i32, i32* %96
 %1451 = lshr i32 %1450, 8
 %1452 = trunc i32 %1451 to i8
 %1453 = load i8*, i8** %95
 %1454 = getelementptr i8, i8* %1453, i64 1
 store i8 %1452, i8* %1454
 %1455 = load i32, i32* %96
 %1456 = lshr i32 %1455, 16
 %1457 = trunc i32 %1456 to i8
 %1458 = load i8*, i8** %95
 %1459 = getelementptr i8, i8* %1458, i64 2
 store i8 %1457, i8* %1459
 %1460 = load i32, i32* %96
 %1461 = lshr i32 %1460, 24
 %1462 = trunc i32 %1461 to i8
 %1463 = load i8*, i8** %95
 %1464 = getelementptr i8, i8* %1463, i64 3
 store i8 %1462, i8* %1464
 %1465 = load i8*, i8** %252
 %1466 = getelementptr i8, i8* %1465, i64 4
 %1467 = load i32, i32* %273
 store i8* %1466, i8** %97
 store i32 %1467, i32* %98
 %1468 = load i32, i32* %98
 %1469 = trunc i32 %1468 to i8
 %1470 = load i8*, i8** %97
 store i8 %1469, i8* %1470
 %1471 = load i32, i32* %98
 %1472 = lshr i32 %1471, 8
 %1473 = trunc i32 %1472 to i8
 %1474 = load i8*, i8** %97
 %1475 = getelementptr i8, i8* %1474, i64 1
 store i8 %1473, i8* %1475
 %1476 = load i32, i32* %98
 %1477 = lshr i32 %1476, 16
 %1478 = trunc i32 %1477 to i8
 %1479 = load i8*, i8** %97
 %1480 = getelementptr i8, i8* %1479, i64 2
 store i8 %1478, i8* %1480
 %1481 = load i32, i32* %98
 %1482 = lshr i32 %1481, 24
 %1483 = trunc i32 %1482 to i8
 %1484 = load i8*, i8** %97
 %1485 = getelementptr i8, i8* %1484, i64 3
 store i8 %1483, i8* %1485
 %1486 = load i8*, i8** %252
 %1487 = getelementptr i8, i8* %1486, i64 8
 %1488 = load i64, i64* %274
 store i8* %1487, i8** %87
 store i64 %1488, i64* %88
 %1489 = load i8*, i8** %87
 %1490 = load i64, i64* %88
 %1491 = trunc i64 %1490 to i32
 store i8* %1489, i8** %83
 store i32 %1491, i32* %84
 %1492 = load i32, i32* %84
 %1493 = trunc i32 %1492 to i8
 %1494 = load i8*, i8** %83
 store i8 %1493, i8* %1494
 %1495 = load i32, i32* %84
 %1496 = lshr i32 %1495, 8
 %1497 = trunc i32 %1496 to i8
 %1498 = load i8*, i8** %83
 %1499 = getelementptr i8, i8* %1498, i64 1
 store i8 %1497, i8* %1499
 %1500 = load i32, i32* %84
 %1501 = lshr i32 %1500, 16
 %1502 = trunc i32 %1501 to i8
 %1503 = load i8*, i8** %83
 %1504 = getelementptr i8, i8* %1503, i64 2
 store i8 %1502, i8* %1504
 %1505 = load i32, i32* %84
 %1506 = lshr i32 %1505, 24
 %1507 = trunc i32 %1506 to i8
 %1508 = load i8*, i8** %83
 %1509 = getelementptr i8, i8* %1508, i64 3
 store i8 %1507, i8* %1509
 %1510 = load i8*, i8** %87
 %1511 = getelementptr i8, i8* %1510, i64 4
 %1512 = load i64, i64* %88
 %1513 = lshr i64 %1512, 32
 %1514 = trunc i64 %1513 to i32
 store i8* %1511, i8** %85
 store i32 %1514, i32* %86
 %1515 = load i32, i32* %86
 %1516 = trunc i32 %1515 to i8
 %1517 = load i8*, i8** %85
 store i8 %1516, i8* %1517
 %1518 = load i32, i32* %86
 %1519 = lshr i32 %1518, 8
 %1520 = trunc i32 %1519 to i8
 %1521 = load i8*, i8** %85
 %1522 = getelementptr i8, i8* %1521, i64 1
 store i8 %1520, i8* %1522
 %1523 = load i32, i32* %86
 %1524 = lshr i32 %1523, 16
 %1525 = trunc i32 %1524 to i8
 %1526 = load i8*, i8** %85
 %1527 = getelementptr i8, i8* %1526, i64 2
 store i8 %1525, i8* %1527
 %1528 = load i32, i32* %86
 %1529 = lshr i32 %1528, 24
 %1530 = trunc i32 %1529 to i8
 %1531 = load i8*, i8** %85
 %1532 = getelementptr i8, i8* %1531, i64 3
 store i8 %1530, i8* %1532
 %1533 = load i8*, i8** %252
 %1534 = getelementptr i8, i8* %1533, i64 16
 %1535 = load i64, i64* %275
 store i8* %1534, i8** %93
 store i64 %1535, i64* %94
 %1536 = load i8*, i8** %93
 %1537 = load i64, i64* %94
 %1538 = trunc i64 %1537 to i32
 store i8* %1536, i8** %89
 store i32 %1538, i32* %90
 %1539 = load i32, i32* %90
 %1540 = trunc i32 %1539 to i8
 %1541 = load i8*, i8** %89
 store i8 %1540, i8* %1541
 %1542 = load i32, i32* %90
 %1543 = lshr i32 %1542, 8
 %1544 = trunc i32 %1543 to i8
 %1545 = load i8*, i8** %89
 %1546 = getelementptr i8, i8* %1545, i64 1
 store i8 %1544, i8* %1546
 %1547 = load i32, i32* %90
 %1548 = lshr i32 %1547, 16
 %1549 = trunc i32 %1548 to i8
 %1550 = load i8*, i8** %89
 %1551 = getelementptr i8, i8* %1550, i64 2
 store i8 %1549, i8* %1551
 %1552 = load i32, i32* %90
 %1553 = lshr i32 %1552, 24
 %1554 = trunc i32 %1553 to i8
 %1555 = load i8*, i8** %89
 %1556 = getelementptr i8, i8* %1555, i64 3
 store i8 %1554, i8* %1556
 %1557 = load i8*, i8** %93
 %1558 = getelementptr i8, i8* %1557, i64 4
 %1559 = load i64, i64* %94
 %1560 = lshr i64 %1559, 32
 %1561 = trunc i64 %1560 to i32
 store i8* %1558, i8** %91
 store i32 %1561, i32* %92
 %1562 = load i32, i32* %92
 %1563 = trunc i32 %1562 to i8
 %1564 = load i8*, i8** %91
 store i8 %1563, i8* %1564
 %1565 = load i32, i32* %92
 %1566 = lshr i32 %1565, 8
 %1567 = trunc i32 %1566 to i8
 %1568 = load i8*, i8** %91
 %1569 = getelementptr i8, i8* %1568, i64 1
 store i8 %1567, i8* %1569
 %1570 = load i32, i32* %92
 %1571 = lshr i32 %1570, 16
 %1572 = trunc i32 %1571 to i8
 %1573 = load i8*, i8** %91
 %1574 = getelementptr i8, i8* %1573, i64 2
 store i8 %1572, i8* %1574
 %1575 = load i32, i32* %92
 %1576 = lshr i32 %1575, 24
 %1577 = trunc i32 %1576 to i8
 %1578 = load i8*, i8** %91
 %1579 = getelementptr i8, i8* %1578, i64 3
 store i8 %1577, i8* %1579
 store i32 24, i32* %239
 br label %1588
1580:
 %1581 = load i32, i32* %271
 %1582 = icmp ne i32 %1581, 0
 %1583 = zext i1 %1582 to i64
 %1584 = select i1 %1582, i32 4, i32 3
 %1585 = sext i32 %1584 to i64
 %1586 = mul i64 4, %1585
 %1587 = trunc i64 %1586 to i32
 store i32 %1587, i32* %239
 br label %1588
1588:
 br label %1589
1589:
 %1590 = load i8*, i8** %236
 %1591 = getelementptr %struct.mz_zip_archive, i8* %1590, i32 0, i32 12
 %1592 = load i8*, i8** %1591
 %1593 = load i8*, i8** %236
 %1594 = getelementptr %struct.mz_zip_archive, i8* %1593, i32 0, i32 14
 %1595 = load i8*, i8** %1594
 %1596 = load i64, i64* %246
 %1597 = load i8*, i8** %252
 %1598 = load i32, i32* %239
 %1599 = zext i32 %1598 to i64
 %1600 = call i64 %1592 (i8* %1595, i64 %1596, i8* %1597, i64 %1599)
 %1601 = load i32, i32* %239
 %1602 = zext i32 %1601 to i64
 %1603 = icmp ne i64 %1600, %1602
 br i1 %1603, label %1604, label %1620
1604:
 %1605 = load i8*, i8** %236
 %1606 = getelementptr %struct.mz_zip_archive, i8* %1605, i32 0, i32 8
 %1607 = load i8*, i8** %1606
 %1608 = load i8*, i8** %236
 %1609 = getelementptr %struct.mz_zip_archive, i8* %1608, i32 0, i32 10
 %1610 = load i8*, i8** %1609
 %1611 = load i8*, i8** %252
 call void %1607 (i8* %1610, i8* %1611)
 %1612 = load i8*, i8** %236
 store i8* %1612, i8** %213
 store i32 19, i32* %214
 %1613 = load i8*, i8** %213
 %1614 = icmp ne i8* %1613, null
 br i1 %1614, label %1615, label %1619
1615:
 %1616 = load i32, i32* %214
 %1617 = load i8*, i8** %213
 %1618 = getelementptr %struct.mz_zip_archive, i8* %1617, i32 0, i32 5
 store i32 %1616, i32* %1618
 br label %1619
1619:
 store i32 0, i32* %235
 br label %2607
1620:
 %1621 = load i32, i32* %239
 %1622 = zext i32 %1621 to i64
 %1623 = load i64, i64* %245
 %1624 = add i64 %1623, %1622
 store i64 %1624, i64* %245
 %1625 = load i32, i32* %239
 %1626 = zext i32 %1625 to i64
 %1627 = load i64, i64* %246
 %1628 = add i64 %1627, %1626
 store i64 %1628, i64* %246
 br label %1629
1629:
 %1630 = load i8*, i8** %236
 %1631 = getelementptr %struct.mz_zip_archive, i8* %1630, i32 0, i32 8
 %1632 = load i8*, i8** %1631
 %1633 = load i8*, i8** %236
 %1634 = getelementptr %struct.mz_zip_archive, i8* %1633, i32 0, i32 10
 %1635 = load i8*, i8** %1634
 %1636 = load i8*, i8** %252
 call void %1632 (i8* %1635, i8* %1636)
 %1637 = load i8*, i8** %251
 %1638 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1637, i32 0, i32 0
 %1639 = getelementptr %struct.mz_zip_array, i8* %1638, i32 0, i32 1
 %1640 = load i64, i64* %1639
 store i64 %1640, i64* %250
 %1641 = getelementptr [46 x i8], i8* %249, i64 0, i64 0
 %1642 = load i8*, i8** %253
 call void @memcpy (i8* %1641, i8* %1642, i64 46, i1 0)
 %1643 = load i8*, i8** %251
 %1644 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1643, i32 0, i32 4
 %1645 = load i32, i32* %1644
 %1646 = icmp ne i32 %1645, 0
 br i1 %1646, label %1647, label %2224
1647:
 %1648 = load i8*, i8** %253
 %1649 = getelementptr i8, i8* %1648, i64 46
 %1650 = load i32, i32* %255
 %1651 = zext i32 %1650 to i64
 %1652 = getelementptr i8, i8* %1649, i64 %1651
 store i8* %1652, i8** %276
 store i8* %277, i8** %166
 store i32 1, i32* %167
 %1653 = load i8*, i8** %166
 %1654 = load i8*, i8** %166
 %1655 = call i64 @llvm.objectsize.i64.p0 (i8* %1654, i1 0, i1 1, i1 0)
 %1656 = call i8* @__memset_chk (i8* %1653, i32 0, i64 32, i64 %1655)
 %1657 = load i32, i32* %167
 %1658 = load i8*, i8** %166
 %1659 = getelementptr %struct.mz_zip_array, i8* %1658, i32 0, i32 3
 store i32 %1657, i32* %1659
 %1660 = getelementptr [46 x i8], i8* %249, i64 0, i64 0
 %1661 = getelementptr i8, i8* %1660, i64 20
 store i8* %1661, i8** %99
 store i32 -1, i32* %100
 %1662 = load i32, i32* %100
 %1663 = trunc i32 %1662 to i8
 %1664 = load i8*, i8** %99
 store i8 %1663, i8* %1664
 %1665 = load i32, i32* %100
 %1666 = lshr i32 %1665, 8
 %1667 = trunc i32 %1666 to i8
 %1668 = load i8*, i8** %99
 %1669 = getelementptr i8, i8* %1668, i64 1
 store i8 %1667, i8* %1669
 %1670 = load i32, i32* %100
 %1671 = lshr i32 %1670, 16
 %1672 = trunc i32 %1671 to i8
 %1673 = load i8*, i8** %99
 %1674 = getelementptr i8, i8* %1673, i64 2
 store i8 %1672, i8* %1674
 %1675 = load i32, i32* %100
 %1676 = lshr i32 %1675, 24
 %1677 = trunc i32 %1676 to i8
 %1678 = load i8*, i8** %99
 %1679 = getelementptr i8, i8* %1678, i64 3
 store i8 %1677, i8* %1679
 %1680 = getelementptr [46 x i8], i8* %249, i64 0, i64 0
 %1681 = getelementptr i8, i8* %1680, i64 24
 store i8* %1681, i8** %101
 store i32 -1, i32* %102
 %1682 = load i32, i32* %102
 %1683 = trunc i32 %1682 to i8
 %1684 = load i8*, i8** %101
 store i8 %1683, i8* %1684
 %1685 = load i32, i32* %102
 %1686 = lshr i32 %1685, 8
 %1687 = trunc i32 %1686 to i8
 %1688 = load i8*, i8** %101
 %1689 = getelementptr i8, i8* %1688, i64 1
 store i8 %1687, i8* %1689
 %1690 = load i32, i32* %102
 %1691 = lshr i32 %1690, 16
 %1692 = trunc i32 %1691 to i8
 %1693 = load i8*, i8** %101
 %1694 = getelementptr i8, i8* %1693, i64 2
 store i8 %1692, i8* %1694
 %1695 = load i32, i32* %102
 %1696 = lshr i32 %1695, 24
 %1697 = trunc i32 %1696 to i8
 %1698 = load i8*, i8** %101
 %1699 = getelementptr i8, i8* %1698, i64 3
 store i8 %1697, i8* %1699
 %1700 = getelementptr [46 x i8], i8* %249, i64 0, i64 0
 %1701 = getelementptr i8, i8* %1700, i64 42
 store i8* %1701, i8** %103
 store i32 -1, i32* %104
 %1702 = load i32, i32* %104
 %1703 = trunc i32 %1702 to i8
 %1704 = load i8*, i8** %103
 store i8 %1703, i8* %1704
 %1705 = load i32, i32* %104
 %1706 = lshr i32 %1705, 8
 %1707 = trunc i32 %1706 to i8
 %1708 = load i8*, i8** %103
 %1709 = getelementptr i8, i8* %1708, i64 1
 store i8 %1707, i8* %1709
 %1710 = load i32, i32* %104
 %1711 = lshr i32 %1710, 16
 %1712 = trunc i32 %1711 to i8
 %1713 = load i8*, i8** %103
 %1714 = getelementptr i8, i8* %1713, i64 2
 store i8 %1712, i8* %1714
 %1715 = load i32, i32* %104
 %1716 = lshr i32 %1715, 24
 %1717 = trunc i32 %1716 to i8
 %1718 = load i8*, i8** %103
 %1719 = getelementptr i8, i8* %1718, i64 3
 store i8 %1717, i8* %1719
 %1720 = load i8*, i8** %236
 %1721 = load i8*, i8** %276
 %1722 = load i32, i32* %257
 %1723 = getelementptr %struct.mz_zip_archive_file_stat, i8* %254, i32 0, i32 7
 %1724 = getelementptr %struct.mz_zip_archive_file_stat, i8* %254, i32 0, i32 8
 %1725 = call i32 @mz_zip_writer_update_zip64_extension_block (i8* %277, i8* %1720, i8* %1721, i32 %1722, i8* %1723, i8* %1724, i8* %244, i8* null)
 %1726 = icmp ne i32 %1725, 0
 br i1 %1726, label %1741, label %1727
1727:
 %1728 = load i8*, i8** %236
 store i8* %1728, i8** %117
 store i8* %277, i8** %118
 %1729 = load i8*, i8** %117
 %1730 = getelementptr %struct.mz_zip_archive, i8* %1729, i32 0, i32 8
 %1731 = load i8*, i8** %1730
 %1732 = load i8*, i8** %117
 %1733 = getelementptr %struct.mz_zip_archive, i8* %1732, i32 0, i32 10
 %1734 = load i8*, i8** %1733
 %1735 = load i8*, i8** %118
 %1736 = load i8*, i8** %1735
 call void %1731 (i8* %1734, i8* %1736)
 %1737 = load i8*, i8** %118
 %1738 = load i8*, i8** %118
 %1739 = call i64 @llvm.objectsize.i64.p0 (i8* %1738, i1 0, i1 1, i1 0)
 %1740 = call i8* @__memset_chk (i8* %1737, i32 0, i64 32, i64 %1739)
 store i32 0, i32* %235
 br label %2607
1741:
 %1742 = getelementptr [46 x i8], i8* %249, i64 0, i64 0
 %1743 = getelementptr i8, i8* %1742, i64 30
 %1744 = getelementptr %struct.mz_zip_array, i8* %277, i32 0, i32 1
 %1745 = load i64, i64* %1744
 %1746 = trunc i64 %1745 to i16
 store i8* %1743, i8** %81
 store i16 %1746, i16* %82
 %1747 = load i16, i16* %82
 %1748 = trunc i16 %1747 to i8
 %1749 = load i8*, i8** %81
 store i8 %1748, i8* %1749
 %1750 = load i16, i16* %82
 %1751 = zext i16 %1750 to i32
 %1752 = ashr i32 %1751, 8
 %1753 = trunc i32 %1752 to i8
 %1754 = load i8*, i8** %81
 %1755 = getelementptr i8, i8* %1754, i64 1
 store i8 %1753, i8* %1755
 %1756 = load i8*, i8** %236
 %1757 = load i8*, i8** %251
 %1758 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1757, i32 0, i32 0
 %1759 = getelementptr [46 x i8], i8* %249, i64 0, i64 0
 store i8* %1756, i8** %10
 store i8* %1758, i8** %11
 store i8* %1759, i8** %12
 store i64 46, i64* %13
 %1760 = load i8*, i8** %11
 %1761 = getelementptr %struct.mz_zip_array, i8* %1760, i32 0, i32 1
 %1762 = load i64, i64* %1761
 store i64 %1762, i64* %14
 %1763 = load i8*, i8** %10
 %1764 = load i8*, i8** %11
 %1765 = load i64, i64* %14
 %1766 = load i64, i64* %13
 %1767 = add i64 %1765, %1766
 store i8* %1763, i8** %5
 store i8* %1764, i8** %6
 store i64 %1767, i64* %7
 store i32 1, i32* %8
 %1768 = load i64, i64* %7
 %1769 = load i8*, i8** %6
 %1770 = getelementptr %struct.mz_zip_array, i8* %1769, i32 0, i32 2
 %1771 = load i64, i64* %1770
 %1772 = icmp ugt i64 %1768, %1771
 br i1 %1772, label %1773, label %1782
1773:
 %1774 = load i8*, i8** %5
 %1775 = load i8*, i8** %6
 %1776 = load i64, i64* %7
 %1777 = load i32, i32* %8
 %1778 = call i32 @mz_zip_array_ensure_capacity (i8* %1774, i8* %1775, i64 %1776, i32 %1777)
 %1779 = icmp ne i32 %1778, 0
 br i1 %1779, label %1781, label %1780
1780:
 store i32 0, i32* %4
 br label %1786
1781:
 br label %1782
1782:
 %1783 = load i64, i64* %7
 %1784 = load i8*, i8** %6
 %1785 = getelementptr %struct.mz_zip_array, i8* %1784, i32 0, i32 1
 store i64 %1783, i64* %1785
 store i32 1, i32* %4
 br label %1786
1786:
 %1787 = load i32, i32* %4
 %1788 = icmp ne i32 %1787, 0
 br i1 %1788, label %1790, label %1789
1789:
 store i32 0, i32* %9
 br label %1822
1790:
 %1791 = load i64, i64* %13
 %1792 = icmp ugt i64 %1791, 0
 br i1 %1792, label %1793, label %1821
1793:
 %1794 = load i8*, i8** %11
 %1795 = load i8*, i8** %1794
 %1796 = load i64, i64* %14
 %1797 = load i8*, i8** %11
 %1798 = getelementptr %struct.mz_zip_array, i8* %1797, i32 0, i32 3
 %1799 = load i32, i32* %1798
 %1800 = zext i32 %1799 to i64
 %1801 = mul i64 %1796, %1800
 %1802 = getelementptr i8, i8* %1795, i64 %1801
 %1803 = load i8*, i8** %12
 %1804 = load i64, i64* %13
 %1805 = load i8*, i8** %11
 %1806 = getelementptr %struct.mz_zip_array, i8* %1805, i32 0, i32 3
 %1807 = load i32, i32* %1806
 %1808 = zext i32 %1807 to i64
 %1809 = mul i64 %1804, %1808
 %1810 = load i8*, i8** %11
 %1811 = load i8*, i8** %1810
 %1812 = load i64, i64* %14
 %1813 = load i8*, i8** %11
 %1814 = getelementptr %struct.mz_zip_array, i8* %1813, i32 0, i32 3
 %1815 = load i32, i32* %1814
 %1816 = zext i32 %1815 to i64
 %1817 = mul i64 %1812, %1816
 %1818 = getelementptr i8, i8* %1811, i64 %1817
 %1819 = call i64 @llvm.objectsize.i64.p0 (i8* %1818, i1 0, i1 1, i1 0)
 %1820 = call i8* @__memcpy_chk (i8* %1802, i8* %1803, i64 %1809, i64 %1819)
 br label %1821
1821:
 store i32 1, i32* %9
 br label %1822
1822:
 %1823 = load i32, i32* %9
 %1824 = icmp ne i32 %1823, 0
 br i1 %1824, label %1847, label %1825
1825:
 %1826 = load i8*, i8** %236
 store i8* %1826, i8** %119
 store i8* %277, i8** %120
 %1827 = load i8*, i8** %119
 %1828 = getelementptr %struct.mz_zip_archive, i8* %1827, i32 0, i32 8
 %1829 = load i8*, i8** %1828
 %1830 = load i8*, i8** %119
 %1831 = getelementptr %struct.mz_zip_archive, i8* %1830, i32 0, i32 10
 %1832 = load i8*, i8** %1831
 %1833 = load i8*, i8** %120
 %1834 = load i8*, i8** %1833
 call void %1829 (i8* %1832, i8* %1834)
 %1835 = load i8*, i8** %120
 %1836 = load i8*, i8** %120
 %1837 = call i64 @llvm.objectsize.i64.p0 (i8* %1836, i1 0, i1 1, i1 0)
 %1838 = call i8* @__memset_chk (i8* %1835, i32 0, i64 32, i64 %1837)
 %1839 = load i8*, i8** %236
 store i8* %1839, i8** %215
 store i32 16, i32* %216
 %1840 = load i8*, i8** %215
 %1841 = icmp ne i8* %1840, null
 br i1 %1841, label %1842, label %1846
1842:
 %1843 = load i32, i32* %216
 %1844 = load i8*, i8** %215
 %1845 = getelementptr %struct.mz_zip_archive, i8* %1844, i32 0, i32 5
 store i32 %1843, i32* %1845
 br label %1846
1846:
 store i32 0, i32* %235
 br label %2607
1847:
 %1848 = load i8*, i8** %236
 %1849 = load i8*, i8** %251
 %1850 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1849, i32 0, i32 0
 %1851 = load i8*, i8** %253
 %1852 = getelementptr i8, i8* %1851, i64 46
 %1853 = load i32, i32* %255
 %1854 = zext i32 %1853 to i64
 store i8* %1848, i8** %21
 store i8* %1850, i8** %22
 store i8* %1852, i8** %23
 store i64 %1854, i64* %24
 %1855 = load i8*, i8** %22
 %1856 = getelementptr %struct.mz_zip_array, i8* %1855, i32 0, i32 1
 %1857 = load i64, i64* %1856
 store i64 %1857, i64* %25
 %1858 = load i8*, i8** %21
 %1859 = load i8*, i8** %22
 %1860 = load i64, i64* %25
 %1861 = load i64, i64* %24
 %1862 = add i64 %1860, %1861
 store i8* %1858, i8** %16
 store i8* %1859, i8** %17
 store i64 %1862, i64* %18
 store i32 1, i32* %19
 %1863 = load i64, i64* %18
 %1864 = load i8*, i8** %17
 %1865 = getelementptr %struct.mz_zip_array, i8* %1864, i32 0, i32 2
 %1866 = load i64, i64* %1865
 %1867 = icmp ugt i64 %1863, %1866
 br i1 %1867, label %1868, label %1877
1868:
 %1869 = load i8*, i8** %16
 %1870 = load i8*, i8** %17
 %1871 = load i64, i64* %18
 %1872 = load i32, i32* %19
 %1873 = call i32 @mz_zip_array_ensure_capacity (i8* %1869, i8* %1870, i64 %1871, i32 %1872)
 %1874 = icmp ne i32 %1873, 0
 br i1 %1874, label %1876, label %1875
1875:
 store i32 0, i32* %15
 br label %1881
1876:
 br label %1877
1877:
 %1878 = load i64, i64* %18
 %1879 = load i8*, i8** %17
 %1880 = getelementptr %struct.mz_zip_array, i8* %1879, i32 0, i32 1
 store i64 %1878, i64* %1880
 store i32 1, i32* %15
 br label %1881
1881:
 %1882 = load i32, i32* %15
 %1883 = icmp ne i32 %1882, 0
 br i1 %1883, label %1885, label %1884
1884:
 store i32 0, i32* %20
 br label %1917
1885:
 %1886 = load i64, i64* %24
 %1887 = icmp ugt i64 %1886, 0
 br i1 %1887, label %1888, label %1916
1888:
 %1889 = load i8*, i8** %22
 %1890 = load i8*, i8** %1889
 %1891 = load i64, i64* %25
 %1892 = load i8*, i8** %22
 %1893 = getelementptr %struct.mz_zip_array, i8* %1892, i32 0, i32 3
 %1894 = load i32, i32* %1893
 %1895 = zext i32 %1894 to i64
 %1896 = mul i64 %1891, %1895
 %1897 = getelementptr i8, i8* %1890, i64 %1896
 %1898 = load i8*, i8** %23
 %1899 = load i64, i64* %24
 %1900 = load i8*, i8** %22
 %1901 = getelementptr %struct.mz_zip_array, i8* %1900, i32 0, i32 3
 %1902 = load i32, i32* %1901
 %1903 = zext i32 %1902 to i64
 %1904 = mul i64 %1899, %1903
 %1905 = load i8*, i8** %22
 %1906 = load i8*, i8** %1905
 %1907 = load i64, i64* %25
 %1908 = load i8*, i8** %22
 %1909 = getelementptr %struct.mz_zip_array, i8* %1908, i32 0, i32 3
 %1910 = load i32, i32* %1909
 %1911 = zext i32 %1910 to i64
 %1912 = mul i64 %1907, %1911
 %1913 = getelementptr i8, i8* %1906, i64 %1912
 %1914 = call i64 @llvm.objectsize.i64.p0 (i8* %1913, i1 0, i1 1, i1 0)
 %1915 = call i8* @__memcpy_chk (i8* %1897, i8* %1898, i64 %1904, i64 %1914)
 br label %1916
1916:
 store i32 1, i32* %20
 br label %1917
1917:
 %1918 = load i32, i32* %20
 %1919 = icmp ne i32 %1918, 0
 br i1 %1919, label %1966, label %1920
1920:
 %1921 = load i8*, i8** %236
 store i8* %1921, i8** %121
 store i8* %277, i8** %122
 %1922 = load i8*, i8** %121
 %1923 = getelementptr %struct.mz_zip_archive, i8* %1922, i32 0, i32 8
 %1924 = load i8*, i8** %1923
 %1925 = load i8*, i8** %121
 %1926 = getelementptr %struct.mz_zip_archive, i8* %1925, i32 0, i32 10
 %1927 = load i8*, i8** %1926
 %1928 = load i8*, i8** %122
 %1929 = load i8*, i8** %1928
 call void %1924 (i8* %1927, i8* %1929)
 %1930 = load i8*, i8** %122
 %1931 = load i8*, i8** %122
 %1932 = call i64 @llvm.objectsize.i64.p0 (i8* %1931, i1 0, i1 1, i1 0)
 %1933 = call i8* @__memset_chk (i8* %1930, i32 0, i64 32, i64 %1932)
 %1934 = load i8*, i8** %236
 %1935 = load i8*, i8** %251
 %1936 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1935, i32 0, i32 0
 %1937 = load i64, i64* %250
 store i8* %1934, i8** %135
 store i8* %1936, i8** %136
 store i64 %1937, i64* %137
 store i32 0, i32* %138
 %1938 = load i64, i64* %137
 %1939 = load i8*, i8** %136
 %1940 = getelementptr %struct.mz_zip_array, i8* %1939, i32 0, i32 2
 %1941 = load i64, i64* %1940
 %1942 = icmp ugt i64 %1938, %1941
 br i1 %1942, label %1943, label %1952
1943:
 %1944 = load i8*, i8** %135
 %1945 = load i8*, i8** %136
 %1946 = load i64, i64* %137
 %1947 = load i32, i32* %138
 %1948 = call i32 @mz_zip_array_ensure_capacity (i8* %1944, i8* %1945, i64 %1946, i32 %1947)
 %1949 = icmp ne i32 %1948, 0
 br i1 %1949, label %1951, label %1950
1950:
 store i32 0, i32* %134
 br label %1956
1951:
 br label %1952
1952:
 %1953 = load i64, i64* %137
 %1954 = load i8*, i8** %136
 %1955 = getelementptr %struct.mz_zip_array, i8* %1954, i32 0, i32 1
 store i64 %1953, i64* %1955
 store i32 1, i32* %134
 br label %1956
1956:
 %1957 = load i32, i32* %134
 %1958 = load i8*, i8** %236
 store i8* %1958, i8** %217
 store i32 16, i32* %218
 %1959 = load i8*, i8** %217
 %1960 = icmp ne i8* %1959, null
 br i1 %1960, label %1961, label %1965
1961:
 %1962 = load i32, i32* %218
 %1963 = load i8*, i8** %217
 %1964 = getelementptr %struct.mz_zip_archive, i8* %1963, i32 0, i32 5
 store i32 %1962, i32* %1964
 br label %1965
1965:
 store i32 0, i32* %235
 br label %2607
1966:
 %1967 = load i8*, i8** %236
 %1968 = load i8*, i8** %251
 %1969 = getelementptr %struct.mz_zip_internal_state_tag, i8* %1968, i32 0, i32 0
 %1970 = getelementptr %struct.mz_zip_array, i8* %277, i32 0, i32 0
 %1971 = load i8*, i8** %1970
 %1972 = getelementptr %struct.mz_zip_array, i8* %277, i32 0, i32 1
 %1973 = load i64, i64* %1972
 store i8* %1967, i8** %32
 store i8* %1969, i8** %33
 store i8* %1971, i8** %34
 store i64 %1973, i64* %35
 %1974 = load i8*, i8** %33
 %1975 = getelementptr %struct.mz_zip_array, i8* %1974, i32 0, i32 1
 %1976 = load i64, i64* %1975
 store i64 %1976, i64* %36
 %1977 = load i8*, i8** %32
 %1978 = load i8*, i8** %33
 %1979 = load i64, i64* %36
 %1980 = load i64, i64* %35
 %1981 = add i64 %1979, %1980
 store i8* %1977, i8** %27
 store i8* %1978, i8** %28
 store i64 %1981, i64* %29
 store i32 1, i32* %30
 %1982 = load i64, i64* %29
 %1983 = load i8*, i8** %28
 %1984 = getelementptr %struct.mz_zip_array, i8* %1983, i32 0, i32 2
 %1985 = load i64, i64* %1984
 %1986 = icmp ugt i64 %1982, %1985
 br i1 %1986, label %1987, label %1996
1987:
 %1988 = load i8*, i8** %27
 %1989 = load i8*, i8** %28
 %1990 = load i64, i64* %29
 %1991 = load i32, i32* %30
 %1992 = call i32 @mz_zip_array_ensure_capacity (i8* %1988, i8* %1989, i64 %1990, i32 %1991)
 %1993 = icmp ne i32 %1992, 0
 br i1 %1993, label %1995, label %1994
1994:
 store i32 0, i32* %26
 br label %2000
1995:
 br label %1996
1996:
 %1997 = load i64, i64* %29
 %1998 = load i8*, i8** %28
 %1999 = getelementptr %struct.mz_zip_array, i8* %1998, i32 0, i32 1
 store i64 %1997, i64* %1999
 store i32 1, i32* %26
 br label %2000
2000:
 %2001 = load i32, i32* %26
 %2002 = icmp ne i32 %2001, 0
 br i1 %2002, label %2004, label %2003
2003:
 store i32 0, i32* %31
 br label %2036
2004:
 %2005 = load i64, i64* %35
 %2006 = icmp ugt i64 %2005, 0
 br i1 %2006, label %2007, label %2035
2007:
 %2008 = load i8*, i8** %33
 %2009 = load i8*, i8** %2008
 %2010 = load i64, i64* %36
 %2011 = load i8*, i8** %33
 %2012 = getelementptr %struct.mz_zip_array, i8* %2011, i32 0, i32 3
 %2013 = load i32, i32* %2012
 %2014 = zext i32 %2013 to i64
 %2015 = mul i64 %2010, %2014
 %2016 = getelementptr i8, i8* %2009, i64 %2015
 %2017 = load i8*, i8** %34
 %2018 = load i64, i64* %35
 %2019 = load i8*, i8** %33
 %2020 = getelementptr %struct.mz_zip_array, i8* %2019, i32 0, i32 3
 %2021 = load i32, i32* %2020
 %2022 = zext i32 %2021 to i64
 %2023 = mul i64 %2018, %2022
 %2024 = load i8*, i8** %33
 %2025 = load i8*, i8** %2024
 %2026 = load i64, i64* %36
 %2027 = load i8*, i8** %33
 %2028 = getelementptr %struct.mz_zip_array, i8* %2027, i32 0, i32 3
 %2029 = load i32, i32* %2028
 %2030 = zext i32 %2029 to i64
 %2031 = mul i64 %2026, %2030
 %2032 = getelementptr i8, i8* %2025, i64 %2031
 %2033 = call i64 @llvm.objectsize.i64.p0 (i8* %2032, i1 0, i1 1, i1 0)
 %2034 = call i8* @__memcpy_chk (i8* %2016, i8* %2017, i64 %2023, i64 %2033)
 br label %2035
2035:
 store i32 1, i32* %31
 br label %2036
2036:
 %2037 = load i32, i32* %31
 %2038 = icmp ne i32 %2037, 0
 br i1 %2038, label %2085, label %2039
2039:
 %2040 = load i8*, i8** %236
 store i8* %2040, i8** %123
 store i8* %277, i8** %124
 %2041 = load i8*, i8** %123
 %2042 = getelementptr %struct.mz_zip_archive, i8* %2041, i32 0, i32 8
 %2043 = load i8*, i8** %2042
 %2044 = load i8*, i8** %123
 %2045 = getelementptr %struct.mz_zip_archive, i8* %2044, i32 0, i32 10
 %2046 = load i8*, i8** %2045
 %2047 = load i8*, i8** %124
 %2048 = load i8*, i8** %2047
 call void %2043 (i8* %2046, i8* %2048)
 %2049 = load i8*, i8** %124
 %2050 = load i8*, i8** %124
 %2051 = call i64 @llvm.objectsize.i64.p0 (i8* %2050, i1 0, i1 1, i1 0)
 %2052 = call i8* @__memset_chk (i8* %2049, i32 0, i64 32, i64 %2051)
 %2053 = load i8*, i8** %236
 %2054 = load i8*, i8** %251
 %2055 = getelementptr %struct.mz_zip_internal_state_tag, i8* %2054, i32 0, i32 0
 %2056 = load i64, i64* %250
 store i8* %2053, i8** %140
 store i8* %2055, i8** %141
 store i64 %2056, i64* %142
 store i32 0, i32* %143
 %2057 = load i64, i64* %142
 %2058 = load i8*, i8** %141
 %2059 = getelementptr %struct.mz_zip_array, i8* %2058, i32 0, i32 2
 %2060 = load i64, i64* %2059
 %2061 = icmp ugt i64 %2057, %2060
 br i1 %2061, label %2062, label %2071
2062:
 %2063 = load i8*, i8** %140
 %2064 = load i8*, i8** %141
 %2065 = load i64, i64* %142
 %2066 = load i32, i32* %143
 %2067 = call i32 @mz_zip_array_ensure_capacity (i8* %2063, i8* %2064, i64 %2065, i32 %2066)
 %2068 = icmp ne i32 %2067, 0
 br i1 %2068, label %2070, label %2069
2069:
 store i32 0, i32* %139
 br label %2075
2070:
 br label %2071
2071:
 %2072 = load i64, i64* %142
 %2073 = load i8*, i8** %141
 %2074 = getelementptr %struct.mz_zip_array, i8* %2073, i32 0, i32 1
 store i64 %2072, i64* %2074
 store i32 1, i32* %139
 br label %2075
2075:
 %2076 = load i32, i32* %139
 %2077 = load i8*, i8** %236
 store i8* %2077, i8** %219
 store i32 16, i32* %220
 %2078 = load i8*, i8** %219
 %2079 = icmp ne i8* %2078, null
 br i1 %2079, label %2080, label %2084
2080:
 %2081 = load i32, i32* %220
 %2082 = load i8*, i8** %219
 %2083 = getelementptr %struct.mz_zip_archive, i8* %2082, i32 0, i32 5
 store i32 %2081, i32* %2083
 br label %2084
2084:
 store i32 0, i32* %235
 br label %2607
2085:
 %2086 = load i8*, i8** %236
 %2087 = load i8*, i8** %251
 %2088 = getelementptr %struct.mz_zip_internal_state_tag, i8* %2087, i32 0, i32 0
 %2089 = load i8*, i8** %253
 %2090 = getelementptr i8, i8* %2089, i64 46
 %2091 = load i32, i32* %255
 %2092 = zext i32 %2091 to i64
 %2093 = getelementptr i8, i8* %2090, i64 %2092
 %2094 = load i32, i32* %257
 %2095 = zext i32 %2094 to i64
 %2096 = getelementptr i8, i8* %2093, i64 %2095
 %2097 = load i32, i32* %256
 %2098 = zext i32 %2097 to i64
 store i8* %2086, i8** %43
 store i8* %2088, i8** %44
 store i8* %2096, i8** %45
 store i64 %2098, i64* %46
 %2099 = load i8*, i8** %44
 %2100 = getelementptr %struct.mz_zip_array, i8* %2099, i32 0, i32 1
 %2101 = load i64, i64* %2100
 store i64 %2101, i64* %47
 %2102 = load i8*, i8** %43
 %2103 = load i8*, i8** %44
 %2104 = load i64, i64* %47
 %2105 = load i64, i64* %46
 %2106 = add i64 %2104, %2105
 store i8* %2102, i8** %38
 store i8* %2103, i8** %39
 store i64 %2106, i64* %40
 store i32 1, i32* %41
 %2107 = load i64, i64* %40
 %2108 = load i8*, i8** %39
 %2109 = getelementptr %struct.mz_zip_array, i8* %2108, i32 0, i32 2
 %2110 = load i64, i64* %2109
 %2111 = icmp ugt i64 %2107, %2110
 br i1 %2111, label %2112, label %2121
2112:
 %2113 = load i8*, i8** %38
 %2114 = load i8*, i8** %39
 %2115 = load i64, i64* %40
 %2116 = load i32, i32* %41
 %2117 = call i32 @mz_zip_array_ensure_capacity (i8* %2113, i8* %2114, i64 %2115, i32 %2116)
 %2118 = icmp ne i32 %2117, 0
 br i1 %2118, label %2120, label %2119
2119:
 store i32 0, i32* %37
 br label %2125
2120:
 br label %2121
2121:
 %2122 = load i64, i64* %40
 %2123 = load i8*, i8** %39
 %2124 = getelementptr %struct.mz_zip_array, i8* %2123, i32 0, i32 1
 store i64 %2122, i64* %2124
 store i32 1, i32* %37
 br label %2125
2125:
 %2126 = load i32, i32* %37
 %2127 = icmp ne i32 %2126, 0
 br i1 %2127, label %2129, label %2128
2128:
 store i32 0, i32* %42
 br label %2161
2129:
 %2130 = load i64, i64* %46
 %2131 = icmp ugt i64 %2130, 0
 br i1 %2131, label %2132, label %2160
2132:
 %2133 = load i8*, i8** %44
 %2134 = load i8*, i8** %2133
 %2135 = load i64, i64* %47
 %2136 = load i8*, i8** %44
 %2137 = getelementptr %struct.mz_zip_array, i8* %2136, i32 0, i32 3
 %2138 = load i32, i32* %2137
 %2139 = zext i32 %2138 to i64
 %2140 = mul i64 %2135, %2139
 %2141 = getelementptr i8, i8* %2134, i64 %2140
 %2142 = load i8*, i8** %45
 %2143 = load i64, i64* %46
 %2144 = load i8*, i8** %44
 %2145 = getelementptr %struct.mz_zip_array, i8* %2144, i32 0, i32 3
 %2146 = load i32, i32* %2145
 %2147 = zext i32 %2146 to i64
 %2148 = mul i64 %2143, %2147
 %2149 = load i8*, i8** %44
 %2150 = load i8*, i8** %2149
 %2151 = load i64, i64* %47
 %2152 = load i8*, i8** %44
 %2153 = getelementptr %struct.mz_zip_array, i8* %2152, i32 0, i32 3
 %2154 = load i32, i32* %2153
 %2155 = zext i32 %2154 to i64
 %2156 = mul i64 %2151, %2155
 %2157 = getelementptr i8, i8* %2150, i64 %2156
 %2158 = call i64 @llvm.objectsize.i64.p0 (i8* %2157, i1 0, i1 1, i1 0)
 %2159 = call i8* @__memcpy_chk (i8* %2141, i8* %2142, i64 %2148, i64 %2158)
 br label %2160
2160:
 store i32 1, i32* %42
 br label %2161
2161:
 %2162 = load i32, i32* %42
 %2163 = icmp ne i32 %2162, 0
 br i1 %2163, label %2210, label %2164
2164:
 %2165 = load i8*, i8** %236
 store i8* %2165, i8** %125
 store i8* %277, i8** %126
 %2166 = load i8*, i8** %125
 %2167 = getelementptr %struct.mz_zip_archive, i8* %2166, i32 0, i32 8
 %2168 = load i8*, i8** %2167
 %2169 = load i8*, i8** %125
 %2170 = getelementptr %struct.mz_zip_archive, i8* %2169, i32 0, i32 10
 %2171 = load i8*, i8** %2170
 %2172 = load i8*, i8** %126
 %2173 = load i8*, i8** %2172
 call void %2168 (i8* %2171, i8* %2173)
 %2174 = load i8*, i8** %126
 %2175 = load i8*, i8** %126
 %2176 = call i64 @llvm.objectsize.i64.p0 (i8* %2175, i1 0, i1 1, i1 0)
 %2177 = call i8* @__memset_chk (i8* %2174, i32 0, i64 32, i64 %2176)
 %2178 = load i8*, i8** %236
 %2179 = load i8*, i8** %251
 %2180 = getelementptr %struct.mz_zip_internal_state_tag, i8* %2179, i32 0, i32 0
 %2181 = load i64, i64* %250
 store i8* %2178, i8** %145
 store i8* %2180, i8** %146
 store i64 %2181, i64* %147
 store i32 0, i32* %148
 %2182 = load i64, i64* %147
 %2183 = load i8*, i8** %146
 %2184 = getelementptr %struct.mz_zip_array, i8* %2183, i32 0, i32 2
 %2185 = load i64, i64* %2184
 %2186 = icmp ugt i64 %2182, %2185
 br i1 %2186, label %2187, label %2196
2187:
 %2188 = load i8*, i8** %145
 %2189 = load i8*, i8** %146
 %2190 = load i64, i64* %147
 %2191 = load i32, i32* %148
 %2192 = call i32 @mz_zip_array_ensure_capacity (i8* %2188, i8* %2189, i64 %2190, i32 %2191)
 %2193 = icmp ne i32 %2192, 0
 br i1 %2193, label %2195, label %2194
2194:
 store i32 0, i32* %144
 br label %2200
2195:
 br label %2196
2196:
 %2197 = load i64, i64* %147
 %2198 = load i8*, i8** %146
 %2199 = getelementptr %struct.mz_zip_array, i8* %2198, i32 0, i32 1
 store i64 %2197, i64* %2199
 store i32 1, i32* %144
 br label %2200
2200:
 %2201 = load i32, i32* %144
 %2202 = load i8*, i8** %236
 store i8* %2202, i8** %221
 store i32 16, i32* %222
 %2203 = load i8*, i8** %221
 %2204 = icmp ne i8* %2203, null
 br i1 %2204, label %2205, label %2209
2205:
 %2206 = load i32, i32* %222
 %2207 = load i8*, i8** %221
 %2208 = getelementptr %struct.mz_zip_archive, i8* %2207, i32 0, i32 5
 store i32 %2206, i32* %2208
 br label %2209
2209:
 store i32 0, i32* %235
 br label %2607
2210:
 %2211 = load i8*, i8** %236
 store i8* %2211, i8** %127
 store i8* %277, i8** %128
 %2212 = load i8*, i8** %127
 %2213 = getelementptr %struct.mz_zip_archive, i8* %2212, i32 0, i32 8
 %2214 = load i8*, i8** %2213
 %2215 = load i8*, i8** %127
 %2216 = getelementptr %struct.mz_zip_archive, i8* %2215, i32 0, i32 10
 %2217 = load i8*, i8** %2216
 %2218 = load i8*, i8** %128
 %2219 = load i8*, i8** %2218
 call void %2214 (i8* %2217, i8* %2219)
 %2220 = load i8*, i8** %128
 %2221 = load i8*, i8** %128
 %2222 = call i64 @llvm.objectsize.i64.p0 (i8* %2221, i1 0, i1 1, i1 0)
 %2223 = call i8* @__memset_chk (i8* %2220, i32 0, i64 32, i64 %2222)
 br label %2456
2224:
 %2225 = load i64, i64* %246
 %2226 = icmp ugt i64 %2225, 4294967295
 br i1 %2226, label %2227, label %2236
2227:
 %2228 = load i8*, i8** %236
 store i8* %2228, i8** %223
 store i32 29, i32* %224
 %2229 = load i8*, i8** %223
 %2230 = icmp ne i8* %2229, null
 br i1 %2230, label %2231, label %2235
2231:
 %2232 = load i32, i32* %224
 %2233 = load i8*, i8** %223
 %2234 = getelementptr %struct.mz_zip_archive, i8* %2233, i32 0, i32 5
 store i32 %2232, i32* %2234
 br label %2235
2235:
 store i32 0, i32* %235
 br label %2607
2236:
 %2237 = load i64, i64* %244
 %2238 = icmp uge i64 %2237, 4294967295
 br i1 %2238, label %2239, label %2248
2239:
 %2240 = load i8*, i8** %236
 store i8* %2240, i8** %225
 store i32 29, i32* %226
 %2241 = load i8*, i8** %225
 %2242 = icmp ne i8* %2241, null
 br i1 %2242, label %2243, label %2247
2243:
 %2244 = load i32, i32* %226
 %2245 = load i8*, i8** %225
 %2246 = getelementptr %struct.mz_zip_archive, i8* %2245, i32 0, i32 5
 store i32 %2244, i32* %2246
 br label %2247
2247:
 store i32 0, i32* %235
 br label %2607
2248:
 %2249 = getelementptr [46 x i8], i8* %249, i64 0, i64 0
 %2250 = getelementptr i8, i8* %2249, i64 42
 %2251 = load i64, i64* %244
 %2252 = trunc i64 %2251 to i32
 store i8* %2250, i8** %105
 store i32 %2252, i32* %106
 %2253 = load i32, i32* %106
 %2254 = trunc i32 %2253 to i8
 %2255 = load i8*, i8** %105
 store i8 %2254, i8* %2255
 %2256 = load i32, i32* %106
 %2257 = lshr i32 %2256, 8
 %2258 = trunc i32 %2257 to i8
 %2259 = load i8*, i8** %105
 %2260 = getelementptr i8, i8* %2259, i64 1
 store i8 %2258, i8* %2260
 %2261 = load i32, i32* %106
 %2262 = lshr i32 %2261, 16
 %2263 = trunc i32 %2262 to i8
 %2264 = load i8*, i8** %105
 %2265 = getelementptr i8, i8* %2264, i64 2
 store i8 %2263, i8* %2265
 %2266 = load i32, i32* %106
 %2267 = lshr i32 %2266, 24
 %2268 = trunc i32 %2267 to i8
 %2269 = load i8*, i8** %105
 %2270 = getelementptr i8, i8* %2269, i64 3
 store i8 %2268, i8* %2270
 %2271 = load i8*, i8** %236
 %2272 = load i8*, i8** %251
 %2273 = getelementptr %struct.mz_zip_internal_state_tag, i8* %2272, i32 0, i32 0
 %2274 = getelementptr [46 x i8], i8* %249, i64 0, i64 0
 store i8* %2271, i8** %54
 store i8* %2273, i8** %55
 store i8* %2274, i8** %56
 store i64 46, i64* %57
 %2275 = load i8*, i8** %55
 %2276 = getelementptr %struct.mz_zip_array, i8* %2275, i32 0, i32 1
 %2277 = load i64, i64* %2276
 store i64 %2277, i64* %58
 %2278 = load i8*, i8** %54
 %2279 = load i8*, i8** %55
 %2280 = load i64, i64* %58
 %2281 = load i64, i64* %57
 %2282 = add i64 %2280, %2281
 store i8* %2278, i8** %49
 store i8* %2279, i8** %50
 store i64 %2282, i64* %51
 store i32 1, i32* %52
 %2283 = load i64, i64* %51
 %2284 = load i8*, i8** %50
 %2285 = getelementptr %struct.mz_zip_array, i8* %2284, i32 0, i32 2
 %2286 = load i64, i64* %2285
 %2287 = icmp ugt i64 %2283, %2286
 br i1 %2287, label %2288, label %2297
2288:
 %2289 = load i8*, i8** %49
 %2290 = load i8*, i8** %50
 %2291 = load i64, i64* %51
 %2292 = load i32, i32* %52
 %2293 = call i32 @mz_zip_array_ensure_capacity (i8* %2289, i8* %2290, i64 %2291, i32 %2292)
 %2294 = icmp ne i32 %2293, 0
 br i1 %2294, label %2296, label %2295
2295:
 store i32 0, i32* %48
 br label %2301
2296:
 br label %2297
2297:
 %2298 = load i64, i64* %51
 %2299 = load i8*, i8** %50
 %2300 = getelementptr %struct.mz_zip_array, i8* %2299, i32 0, i32 1
 store i64 %2298, i64* %2300
 store i32 1, i32* %48
 br label %2301
2301:
 %2302 = load i32, i32* %48
 %2303 = icmp ne i32 %2302, 0
 br i1 %2303, label %2305, label %2304
2304:
 store i32 0, i32* %53
 br label %2337
2305:
 %2306 = load i64, i64* %57
 %2307 = icmp ugt i64 %2306, 0
 br i1 %2307, label %2308, label %2336
2308:
 %2309 = load i8*, i8** %55
 %2310 = load i8*, i8** %2309
 %2311 = load i64, i64* %58
 %2312 = load i8*, i8** %55
 %2313 = getelementptr %struct.mz_zip_array, i8* %2312, i32 0, i32 3
 %2314 = load i32, i32* %2313
 %2315 = zext i32 %2314 to i64
 %2316 = mul i64 %2311, %2315
 %2317 = getelementptr i8, i8* %2310, i64 %2316
 %2318 = load i8*, i8** %56
 %2319 = load i64, i64* %57
 %2320 = load i8*, i8** %55
 %2321 = getelementptr %struct.mz_zip_array, i8* %2320, i32 0, i32 3
 %2322 = load i32, i32* %2321
 %2323 = zext i32 %2322 to i64
 %2324 = mul i64 %2319, %2323
 %2325 = load i8*, i8** %55
 %2326 = load i8*, i8** %2325
 %2327 = load i64, i64* %58
 %2328 = load i8*, i8** %55
 %2329 = getelementptr %struct.mz_zip_array, i8* %2328, i32 0, i32 3
 %2330 = load i32, i32* %2329
 %2331 = zext i32 %2330 to i64
 %2332 = mul i64 %2327, %2331
 %2333 = getelementptr i8, i8* %2326, i64 %2332
 %2334 = call i64 @llvm.objectsize.i64.p0 (i8* %2333, i1 0, i1 1, i1 0)
 %2335 = call i8* @__memcpy_chk (i8* %2317, i8* %2318, i64 %2324, i64 %2334)
 br label %2336
2336:
 store i32 1, i32* %53
 br label %2337
2337:
 %2338 = load i32, i32* %53
 %2339 = icmp ne i32 %2338, 0
 br i1 %2339, label %2349, label %2340
2340:
 %2341 = load i8*, i8** %236
 store i8* %2341, i8** %227
 store i32 16, i32* %228
 %2342 = load i8*, i8** %227
 %2343 = icmp ne i8* %2342, null
 br i1 %2343, label %2344, label %2348
2344:
 %2345 = load i32, i32* %228
 %2346 = load i8*, i8** %227
 %2347 = getelementptr %struct.mz_zip_archive, i8* %2346, i32 0, i32 5
 store i32 %2345, i32* %2347
 br label %2348
2348:
 store i32 0, i32* %235
 br label %2607
2349:
 %2350 = load i8*, i8** %236
 %2351 = load i8*, i8** %251
 %2352 = getelementptr %struct.mz_zip_internal_state_tag, i8* %2351, i32 0, i32 0
 %2353 = load i8*, i8** %253
 %2354 = getelementptr i8, i8* %2353, i64 46
 %2355 = load i32, i32* %242
 %2356 = zext i32 %2355 to i64
 store i8* %2350, i8** %65
 store i8* %2352, i8** %66
 store i8* %2354, i8** %67
 store i64 %2356, i64* %68
 %2357 = load i8*, i8** %66
 %2358 = getelementptr %struct.mz_zip_array, i8* %2357, i32 0, i32 1
 %2359 = load i64, i64* %2358
 store i64 %2359, i64* %69
 %2360 = load i8*, i8** %65
 %2361 = load i8*, i8** %66
 %2362 = load i64, i64* %69
 %2363 = load i64, i64* %68
 %2364 = add i64 %2362, %2363
 store i8* %2360, i8** %60
 store i8* %2361, i8** %61
 store i64 %2364, i64* %62
 store i32 1, i32* %63
 %2365 = load i64, i64* %62
 %2366 = load i8*, i8** %61
 %2367 = getelementptr %struct.mz_zip_array, i8* %2366, i32 0, i32 2
 %2368 = load i64, i64* %2367
 %2369 = icmp ugt i64 %2365, %2368
 br i1 %2369, label %2370, label %2379
2370:
 %2371 = load i8*, i8** %60
 %2372 = load i8*, i8** %61
 %2373 = load i64, i64* %62
 %2374 = load i32, i32* %63
 %2375 = call i32 @mz_zip_array_ensure_capacity (i8* %2371, i8* %2372, i64 %2373, i32 %2374)
 %2376 = icmp ne i32 %2375, 0
 br i1 %2376, label %2378, label %2377
2377:
 store i32 0, i32* %59
 br label %2383
2378:
 br label %2379
2379:
 %2380 = load i64, i64* %62
 %2381 = load i8*, i8** %61
 %2382 = getelementptr %struct.mz_zip_array, i8* %2381, i32 0, i32 1
 store i64 %2380, i64* %2382
 store i32 1, i32* %59
 br label %2383
2383:
 %2384 = load i32, i32* %59
 %2385 = icmp ne i32 %2384, 0
 br i1 %2385, label %2387, label %2386
2386:
 store i32 0, i32* %64
 br label %2419
2387:
 %2388 = load i64, i64* %68
 %2389 = icmp ugt i64 %2388, 0
 br i1 %2389, label %2390, label %2418
2390:
 %2391 = load i8*, i8** %66
 %2392 = load i8*, i8** %2391
 %2393 = load i64, i64* %69
 %2394 = load i8*, i8** %66
 %2395 = getelementptr %struct.mz_zip_array, i8* %2394, i32 0, i32 3
 %2396 = load i32, i32* %2395
 %2397 = zext i32 %2396 to i64
 %2398 = mul i64 %2393, %2397
 %2399 = getelementptr i8, i8* %2392, i64 %2398
 %2400 = load i8*, i8** %67
 %2401 = load i64, i64* %68
 %2402 = load i8*, i8** %66
 %2403 = getelementptr %struct.mz_zip_array, i8* %2402, i32 0, i32 3
 %2404 = load i32, i32* %2403
 %2405 = zext i32 %2404 to i64
 %2406 = mul i64 %2401, %2405
 %2407 = load i8*, i8** %66
 %2408 = load i8*, i8** %2407
 %2409 = load i64, i64* %69
 %2410 = load i8*, i8** %66
 %2411 = getelementptr %struct.mz_zip_array, i8* %2410, i32 0, i32 3
 %2412 = load i32, i32* %2411
 %2413 = zext i32 %2412 to i64
 %2414 = mul i64 %2409, %2413
 %2415 = getelementptr i8, i8* %2408, i64 %2414
 %2416 = call i64 @llvm.objectsize.i64.p0 (i8* %2415, i1 0, i1 1, i1 0)
 %2417 = call i8* @__memcpy_chk (i8* %2399, i8* %2400, i64 %2406, i64 %2416)
 br label %2418
2418:
 store i32 1, i32* %64
 br label %2419
2419:
 %2420 = load i32, i32* %64
 %2421 = icmp ne i32 %2420, 0
 br i1 %2421, label %2455, label %2422
2422:
 %2423 = load i8*, i8** %236
 %2424 = load i8*, i8** %251
 %2425 = getelementptr %struct.mz_zip_internal_state_tag, i8* %2424, i32 0, i32 0
 %2426 = load i64, i64* %250
 store i8* %2423, i8** %150
 store i8* %2425, i8** %151
 store i64 %2426, i64* %152
 store i32 0, i32* %153
 %2427 = load i64, i64* %152
 %2428 = load i8*, i8** %151
 %2429 = getelementptr %struct.mz_zip_array, i8* %2428, i32 0, i32 2
 %2430 = load i64, i64* %2429
 %2431 = icmp ugt i64 %2427, %2430
 br i1 %2431, label %2432, label %2441
2432:
 %2433 = load i8*, i8** %150
 %2434 = load i8*, i8** %151
 %2435 = load i64, i64* %152
 %2436 = load i32, i32* %153
 %2437 = call i32 @mz_zip_array_ensure_capacity (i8* %2433, i8* %2434, i64 %2435, i32 %2436)
 %2438 = icmp ne i32 %2437, 0
 br i1 %2438, label %2440, label %2439
2439:
 store i32 0, i32* %149
 br label %2445
2440:
 br label %2441
2441:
 %2442 = load i64, i64* %152
 %2443 = load i8*, i8** %151
 %2444 = getelementptr %struct.mz_zip_array, i8* %2443, i32 0, i32 1
 store i64 %2442, i64* %2444
 store i32 1, i32* %149
 br label %2445
2445:
 %2446 = load i32, i32* %149
 %2447 = load i8*, i8** %236
 store i8* %2447, i8** %229
 store i32 16, i32* %230
 %2448 = load i8*, i8** %229
 %2449 = icmp ne i8* %2448, null
 br i1 %2449, label %2450, label %2454
2450:
 %2451 = load i32, i32* %230
 %2452 = load i8*, i8** %229
 %2453 = getelementptr %struct.mz_zip_archive, i8* %2452, i32 0, i32 5
 store i32 %2451, i32* %2453
 br label %2454
2454:
 store i32 0, i32* %235
 br label %2607
2455:
 br label %2456
2456:
 %2457 = load i8*, i8** %251
 %2458 = getelementptr %struct.mz_zip_internal_state_tag, i8* %2457, i32 0, i32 0
 %2459 = getelementptr %struct.mz_zip_array, i8* %2458, i32 0, i32 1
 %2460 = load i64, i64* %2459
 %2461 = icmp uge i64 %2460, 4294967295
 br i1 %2461, label %2462, label %2495
2462:
 %2463 = load i8*, i8** %236
 %2464 = load i8*, i8** %251
 %2465 = getelementptr %struct.mz_zip_internal_state_tag, i8* %2464, i32 0, i32 0
 %2466 = load i64, i64* %250
 store i8* %2463, i8** %155
 store i8* %2465, i8** %156
 store i64 %2466, i64* %157
 store i32 0, i32* %158
 %2467 = load i64, i64* %157
 %2468 = load i8*, i8** %156
 %2469 = getelementptr %struct.mz_zip_array, i8* %2468, i32 0, i32 2
 %2470 = load i64, i64* %2469
 %2471 = icmp ugt i64 %2467, %2470
 br i1 %2471, label %2472, label %2481
2472:
 %2473 = load i8*, i8** %155
 %2474 = load i8*, i8** %156
 %2475 = load i64, i64* %157
 %2476 = load i32, i32* %158
 %2477 = call i32 @mz_zip_array_ensure_capacity (i8* %2473, i8* %2474, i64 %2475, i32 %2476)
 %2478 = icmp ne i32 %2477, 0
 br i1 %2478, label %2480, label %2479
2479:
 store i32 0, i32* %154
 br label %2485
2480:
 br label %2481
2481:
 %2482 = load i64, i64* %157
 %2483 = load i8*, i8** %156
 %2484 = getelementptr %struct.mz_zip_array, i8* %2483, i32 0, i32 1
 store i64 %2482, i64* %2484
 store i32 1, i32* %154
 br label %2485
2485:
 %2486 = load i32, i32* %154
 %2487 = load i8*, i8** %236
 store i8* %2487, i8** %231
 store i32 15, i32* %232
 %2488 = load i8*, i8** %231
 %2489 = icmp ne i8* %2488, null
 br i1 %2489, label %2490, label %2494
2490:
 %2491 = load i32, i32* %232
 %2492 = load i8*, i8** %231
 %2493 = getelementptr %struct.mz_zip_archive, i8* %2492, i32 0, i32 5
 store i32 %2491, i32* %2493
 br label %2494
2494:
 store i32 0, i32* %235
 br label %2607
2495:
 %2496 = load i64, i64* %250
 %2497 = trunc i64 %2496 to i32
 store i32 %2497, i32* %239
 %2498 = load i8*, i8** %236
 %2499 = load i8*, i8** %251
 %2500 = getelementptr %struct.mz_zip_internal_state_tag, i8* %2499, i32 0, i32 1
 store i8* %2498, i8** %76
 store i8* %2500, i8** %77
 store i8* %239, i8** %78
 store i64 1, i64* %79
 %2501 = load i8*, i8** %77
 %2502 = getelementptr %struct.mz_zip_array, i8* %2501, i32 0, i32 1
 %2503 = load i64, i64* %2502
 store i64 %2503, i64* %80
 %2504 = load i8*, i8** %76
 %2505 = load i8*, i8** %77
 %2506 = load i64, i64* %80
 %2507 = load i64, i64* %79
 %2508 = add i64 %2506, %2507
 store i8* %2504, i8** %71
 store i8* %2505, i8** %72
 store i64 %2508, i64* %73
 store i32 1, i32* %74
 %2509 = load i64, i64* %73
 %2510 = load i8*, i8** %72
 %2511 = getelementptr %struct.mz_zip_array, i8* %2510, i32 0, i32 2
 %2512 = load i64, i64* %2511
 %2513 = icmp ugt i64 %2509, %2512
 br i1 %2513, label %2514, label %2523
2514:
 %2515 = load i8*, i8** %71
 %2516 = load i8*, i8** %72
 %2517 = load i64, i64* %73
 %2518 = load i32, i32* %74
 %2519 = call i32 @mz_zip_array_ensure_capacity (i8* %2515, i8* %2516, i64 %2517, i32 %2518)
 %2520 = icmp ne i32 %2519, 0
 br i1 %2520, label %2522, label %2521
2521:
 store i32 0, i32* %70
 br label %2527
2522:
 br label %2523
2523:
 %2524 = load i64, i64* %73
 %2525 = load i8*, i8** %72
 %2526 = getelementptr %struct.mz_zip_array, i8* %2525, i32 0, i32 1
 store i64 %2524, i64* %2526
 store i32 1, i32* %70
 br label %2527
2527:
 %2528 = load i32, i32* %70
 %2529 = icmp ne i32 %2528, 0
 br i1 %2529, label %2531, label %2530
2530:
 store i32 0, i32* %75
 br label %2563
2531:
 %2532 = load i64, i64* %79
 %2533 = icmp ugt i64 %2532, 0
 br i1 %2533, label %2534, label %2562
2534:
 %2535 = load i8*, i8** %77
 %2536 = load i8*, i8** %2535
 %2537 = load i64, i64* %80
 %2538 = load i8*, i8** %77
 %2539 = getelementptr %struct.mz_zip_array, i8* %2538, i32 0, i32 3
 %2540 = load i32, i32* %2539
 %2541 = zext i32 %2540 to i64
 %2542 = mul i64 %2537, %2541
 %2543 = getelementptr i8, i8* %2536, i64 %2542
 %2544 = load i8*, i8** %78
 %2545 = load i64, i64* %79
 %2546 = load i8*, i8** %77
 %2547 = getelementptr %struct.mz_zip_array, i8* %2546, i32 0, i32 3
 %2548 = load i32, i32* %2547
 %2549 = zext i32 %2548 to i64
 %2550 = mul i64 %2545, %2549
 %2551 = load i8*, i8** %77
 %2552 = load i8*, i8** %2551
 %2553 = load i64, i64* %80
 %2554 = load i8*, i8** %77
 %2555 = getelementptr %struct.mz_zip_array, i8* %2554, i32 0, i32 3
 %2556 = load i32, i32* %2555
 %2557 = zext i32 %2556 to i64
 %2558 = mul i64 %2553, %2557
 %2559 = getelementptr i8, i8* %2552, i64 %2558
 %2560 = call i64 @llvm.objectsize.i64.p0 (i8* %2559, i1 0, i1 1, i1 0)
 %2561 = call i8* @__memcpy_chk (i8* %2543, i8* %2544, i64 %2550, i64 %2560)
 br label %2562
2562:
 store i32 1, i32* %75
 br label %2563
2563:
 %2564 = load i32, i32* %75
 %2565 = icmp ne i32 %2564, 0
 br i1 %2565, label %2599, label %2566
2566:
 %2567 = load i8*, i8** %236
 %2568 = load i8*, i8** %251
 %2569 = getelementptr %struct.mz_zip_internal_state_tag, i8* %2568, i32 0, i32 0
 %2570 = load i64, i64* %250
 store i8* %2567, i8** %160
 store i8* %2569, i8** %161
 store i64 %2570, i64* %162
 store i32 0, i32* %163
 %2571 = load i64, i64* %162
 %2572 = load i8*, i8** %161
 %2573 = getelementptr %struct.mz_zip_array, i8* %2572, i32 0, i32 2
 %2574 = load i64, i64* %2573
 %2575 = icmp ugt i64 %2571, %2574
 br i1 %2575, label %2576, label %2585
2576:
 %2577 = load i8*, i8** %160
 %2578 = load i8*, i8** %161
 %2579 = load i64, i64* %162
 %2580 = load i32, i32* %163
 %2581 = call i32 @mz_zip_array_ensure_capacity (i8* %2577, i8* %2578, i64 %2579, i32 %2580)
 %2582 = icmp ne i32 %2581, 0
 br i1 %2582, label %2584, label %2583
2583:
 store i32 0, i32* %159
 br label %2589
2584:
 br label %2585
2585:
 %2586 = load i64, i64* %162
 %2587 = load i8*, i8** %161
 %2588 = getelementptr %struct.mz_zip_array, i8* %2587, i32 0, i32 1
 store i64 %2586, i64* %2588
 store i32 1, i32* %159
 br label %2589
2589:
 %2590 = load i32, i32* %159
 %2591 = load i8*, i8** %236
 store i8* %2591, i8** %233
 store i32 16, i32* %234
 %2592 = load i8*, i8** %233
 %2593 = icmp ne i8* %2592, null
 br i1 %2593, label %2594, label %2598
2594:
 %2595 = load i32, i32* %234
 %2596 = load i8*, i8** %233
 %2597 = getelementptr %struct.mz_zip_archive, i8* %2596, i32 0, i32 5
 store i32 %2595, i32* %2597
 br label %2598
2598:
 store i32 0, i32* %235
 br label %2607
2599:
 %2600 = load i8*, i8** %236
 %2601 = getelementptr %struct.mz_zip_archive, i8* %2600, i32 0, i32 2
 %2602 = load i32, i32* %2601
 %2603 = add i32 %2602, 1
 store i32 %2603, i32* %2601
 %2604 = load i64, i64* %246
 %2605 = load i8*, i8** %236
 %2606 = getelementptr %struct.mz_zip_archive, i8* %2605, i32 0, i32 0
 store i64 %2604, i64* %2606
 store i32 1, i32* %235
 br label %2607
2607:
 %2608 = load i32, i32* %235
 ret i32 %2608
}

define i32 @mz_zip_writer_update_zip64_extension_block (i8* %0, i8* %1, i8* %2, i32 %3, i8* %4, i8* %5, i8* %6, i8* %7) {
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i8*
 %12 = alloca i64
 %13 = alloca i32
 %14 = alloca i32
 %15 = alloca i8*
 %16 = alloca i8*
 %17 = alloca i64
 %18 = alloca i32
 %19 = alloca i32
 %20 = alloca i8*
 %21 = alloca i8*
 %22 = alloca i8*
 %23 = alloca i64
 %24 = alloca i64
 %25 = alloca i32
 %26 = alloca i8*
 %27 = alloca i8*
 %28 = alloca i64
 %29 = alloca i32
 %30 = alloca i32
 %31 = alloca i8*
 %32 = alloca i8*
 %33 = alloca i8*
 %34 = alloca i64
 %35 = alloca i64
 %36 = alloca i8*
 %37 = alloca i16
 %38 = alloca i8*
 %39 = alloca i16
 %40 = alloca i8*
 %41 = alloca i16
 %42 = alloca i8*
 %43 = alloca i32
 %44 = alloca i8*
 %45 = alloca i32
 %46 = alloca i8*
 %47 = alloca i64
 %48 = alloca i8*
 %49 = alloca i32
 %50 = alloca i8*
 %51 = alloca i32
 %52 = alloca i8*
 %53 = alloca i64
 %54 = alloca i8*
 %55 = alloca i32
 %56 = alloca i8*
 %57 = alloca i32
 %58 = alloca i8*
 %59 = alloca i64
 %60 = alloca i8*
 %61 = alloca i32
 %62 = alloca i32
 %63 = alloca i8*
 %64 = alloca i8*
 %65 = alloca i64
 %66 = alloca i32
 %67 = alloca i8*
 %68 = alloca i32
 %69 = alloca i8*
 %70 = alloca i32
 %71 = alloca i8*
 %72 = alloca i32
 %73 = alloca i8*
 %74 = alloca i32
 %75 = alloca i8*
 %76 = alloca i32
 %77 = alloca i32
 %78 = alloca i8*
 %79 = alloca i8*
 %80 = alloca i8*
 %81 = alloca i32
 %82 = alloca i8*
 %83 = alloca i8*
 %84 = alloca i8*
 %85 = alloca i8*
 %86 = alloca [64 x i8]
 %87 = alloca i8*
 %88 = alloca i32
 %89 = alloca i8*
 %90 = alloca i32
 %91 = alloca i32
 %92 = alloca i32
 store i8* %0, i8** %78
 store i8* %1, i8** %79
 store i8* %2, i8** %80
 store i32 %3, i32* %81
 store i8* %4, i8** %82
 store i8* %5, i8** %83
 store i8* %6, i8** %84
 store i8* %7, i8** %85
 %93 = load i8*, i8** %79
 %94 = load i8*, i8** %78
 %95 = load i32, i32* %81
 %96 = add i32 %95, 64
 %97 = zext i32 %96 to i64
 store i8* %93, i8** %10
 store i8* %94, i8** %11
 store i64 %97, i64* %12
 store i32 0, i32* %13
 %98 = load i64, i64* %12
 %99 = load i8*, i8** %11
 %100 = getelementptr %struct.mz_zip_array, i8* %99, i32 0, i32 2
 %101 = load i64, i64* %100
 %102 = icmp ugt i64 %98, %101
 br i1 %102, label %103, label %112
103:
 %104 = load i8*, i8** %10
 %105 = load i8*, i8** %11
 %106 = load i64, i64* %12
 %107 = load i32, i32* %13
 %108 = call i32 @mz_zip_array_ensure_capacity (i8* %104, i8* %105, i64 %106, i32 %107)
 %109 = icmp ne i32 %108, 0
 br i1 %109, label %111, label %110
110:
 store i32 0, i32* %9
 br label %113
111:
 br label %112
112:
 store i32 1, i32* %9
 br label %113
113:
 %114 = load i32, i32* %9
 %115 = icmp ne i32 %114, 0
 br i1 %115, label %125, label %116
116:
 %117 = load i8*, i8** %79
 store i8* %117, i8** %67
 store i32 16, i32* %68
 %118 = load i8*, i8** %67
 %119 = icmp ne i8* %118, null
 br i1 %119, label %120, label %124
120:
 %121 = load i32, i32* %68
 %122 = load i8*, i8** %67
 %123 = getelementptr %struct.mz_zip_archive, i8* %122, i32 0, i32 5
 store i32 %121, i32* %123
 br label %124
124:
 store i32 0, i32* %77
 br label %629
125:
 %126 = load i8*, i8** %79
 %127 = load i8*, i8** %78
 store i8* %126, i8** %63
 store i8* %127, i8** %64
 store i64 0, i64* %65
 store i32 0, i32* %66
 %128 = load i64, i64* %65
 %129 = load i8*, i8** %64
 %130 = getelementptr %struct.mz_zip_array, i8* %129, i32 0, i32 2
 %131 = load i64, i64* %130
 %132 = icmp ugt i64 %128, %131
 br i1 %132, label %133, label %142
133:
 %134 = load i8*, i8** %63
 %135 = load i8*, i8** %64
 %136 = load i64, i64* %65
 %137 = load i32, i32* %66
 %138 = call i32 @mz_zip_array_ensure_capacity (i8* %134, i8* %135, i64 %136, i32 %137)
 %139 = icmp ne i32 %138, 0
 br i1 %139, label %141, label %140
140:
 store i32 0, i32* %62
 br label %146
141:
 br label %142
142:
 %143 = load i64, i64* %65
 %144 = load i8*, i8** %64
 %145 = getelementptr %struct.mz_zip_array, i8* %144, i32 0, i32 1
 store i64 %143, i64* %145
 store i32 1, i32* %62
 br label %146
146:
 %147 = load i32, i32* %62
 %148 = load i8*, i8** %83
 %149 = icmp ne i8* %148, null
 br i1 %149, label %159, label %150
150:
 %151 = load i8*, i8** %82
 %152 = icmp ne i8* %151, null
 br i1 %152, label %159, label %153
153:
 %154 = load i8*, i8** %84
 %155 = icmp ne i8* %154, null
 br i1 %155, label %159, label %156
156:
 %157 = load i8*, i8** %85
 %158 = icmp ne i8* %157, null
 br i1 %158, label %159, label %471
159:
 %160 = getelementptr [64 x i8], i8* %86, i64 0, i64 0
 store i8* %160, i8** %87
 %161 = load i8*, i8** %87
 store i8* %161, i8** %36
 store i16 1, i16* %37
 %162 = load i16, i16* %37
 %163 = trunc i16 %162 to i8
 %164 = load i8*, i8** %36
 store i8 %163, i8* %164
 %165 = load i16, i16* %37
 %166 = zext i16 %165 to i32
 %167 = ashr i32 %166, 8
 %168 = trunc i32 %167 to i8
 %169 = load i8*, i8** %36
 %170 = getelementptr i8, i8* %169, i64 1
 store i8 %168, i8* %170
 %171 = load i8*, i8** %87
 %172 = getelementptr i8, i8* %171, i64 2
 store i8* %172, i8** %38
 store i16 0, i16* %39
 %173 = load i16, i16* %39
 %174 = trunc i16 %173 to i8
 %175 = load i8*, i8** %38
 store i8 %174, i8* %175
 %176 = load i16, i16* %39
 %177 = zext i16 %176 to i32
 %178 = ashr i32 %177, 8
 %179 = trunc i32 %178 to i8
 %180 = load i8*, i8** %38
 %181 = getelementptr i8, i8* %180, i64 1
 store i8 %179, i8* %181
 %182 = load i8*, i8** %87
 %183 = getelementptr i8, i8* %182, i64 4
 store i8* %183, i8** %87
 %184 = load i8*, i8** %83
 %185 = icmp ne i8* %184, null
 br i1 %185, label %186, label %236
186:
 %187 = load i8*, i8** %87
 %188 = load i8*, i8** %83
 %189 = load i64, i64* %188
 store i8* %187, i8** %46
 store i64 %189, i64* %47
 %190 = load i8*, i8** %46
 %191 = load i64, i64* %47
 %192 = trunc i64 %191 to i32
 store i8* %190, i8** %42
 store i32 %192, i32* %43
 %193 = load i32, i32* %43
 %194 = trunc i32 %193 to i8
 %195 = load i8*, i8** %42
 store i8 %194, i8* %195
 %196 = load i32, i32* %43
 %197 = lshr i32 %196, 8
 %198 = trunc i32 %197 to i8
 %199 = load i8*, i8** %42
 %200 = getelementptr i8, i8* %199, i64 1
 store i8 %198, i8* %200
 %201 = load i32, i32* %43
 %202 = lshr i32 %201, 16
 %203 = trunc i32 %202 to i8
 %204 = load i8*, i8** %42
 %205 = getelementptr i8, i8* %204, i64 2
 store i8 %203, i8* %205
 %206 = load i32, i32* %43
 %207 = lshr i32 %206, 24
 %208 = trunc i32 %207 to i8
 %209 = load i8*, i8** %42
 %210 = getelementptr i8, i8* %209, i64 3
 store i8 %208, i8* %210
 %211 = load i8*, i8** %46
 %212 = getelementptr i8, i8* %211, i64 4
 %213 = load i64, i64* %47
 %214 = lshr i64 %213, 32
 %215 = trunc i64 %214 to i32
 store i8* %212, i8** %44
 store i32 %215, i32* %45
 %216 = load i32, i32* %45
 %217 = trunc i32 %216 to i8
 %218 = load i8*, i8** %44
 store i8 %217, i8* %218
 %219 = load i32, i32* %45
 %220 = lshr i32 %219, 8
 %221 = trunc i32 %220 to i8
 %222 = load i8*, i8** %44
 %223 = getelementptr i8, i8* %222, i64 1
 store i8 %221, i8* %223
 %224 = load i32, i32* %45
 %225 = lshr i32 %224, 16
 %226 = trunc i32 %225 to i8
 %227 = load i8*, i8** %44
 %228 = getelementptr i8, i8* %227, i64 2
 store i8 %226, i8* %228
 %229 = load i32, i32* %45
 %230 = lshr i32 %229, 24
 %231 = trunc i32 %230 to i8
 %232 = load i8*, i8** %44
 %233 = getelementptr i8, i8* %232, i64 3
 store i8 %231, i8* %233
 %234 = load i8*, i8** %87
 %235 = getelementptr i8, i8* %234, i64 8
 store i8* %235, i8** %87
 br label %236
236:
 %237 = load i8*, i8** %82
 %238 = icmp ne i8* %237, null
 br i1 %238, label %239, label %289
239:
 %240 = load i8*, i8** %87
 %241 = load i8*, i8** %82
 %242 = load i64, i64* %241
 store i8* %240, i8** %52
 store i64 %242, i64* %53
 %243 = load i8*, i8** %52
 %244 = load i64, i64* %53
 %245 = trunc i64 %244 to i32
 store i8* %243, i8** %48
 store i32 %245, i32* %49
 %246 = load i32, i32* %49
 %247 = trunc i32 %246 to i8
 %248 = load i8*, i8** %48
 store i8 %247, i8* %248
 %249 = load i32, i32* %49
 %250 = lshr i32 %249, 8
 %251 = trunc i32 %250 to i8
 %252 = load i8*, i8** %48
 %253 = getelementptr i8, i8* %252, i64 1
 store i8 %251, i8* %253
 %254 = load i32, i32* %49
 %255 = lshr i32 %254, 16
 %256 = trunc i32 %255 to i8
 %257 = load i8*, i8** %48
 %258 = getelementptr i8, i8* %257, i64 2
 store i8 %256, i8* %258
 %259 = load i32, i32* %49
 %260 = lshr i32 %259, 24
 %261 = trunc i32 %260 to i8
 %262 = load i8*, i8** %48
 %263 = getelementptr i8, i8* %262, i64 3
 store i8 %261, i8* %263
 %264 = load i8*, i8** %52
 %265 = getelementptr i8, i8* %264, i64 4
 %266 = load i64, i64* %53
 %267 = lshr i64 %266, 32
 %268 = trunc i64 %267 to i32
 store i8* %265, i8** %50
 store i32 %268, i32* %51
 %269 = load i32, i32* %51
 %270 = trunc i32 %269 to i8
 %271 = load i8*, i8** %50
 store i8 %270, i8* %271
 %272 = load i32, i32* %51
 %273 = lshr i32 %272, 8
 %274 = trunc i32 %273 to i8
 %275 = load i8*, i8** %50
 %276 = getelementptr i8, i8* %275, i64 1
 store i8 %274, i8* %276
 %277 = load i32, i32* %51
 %278 = lshr i32 %277, 16
 %279 = trunc i32 %278 to i8
 %280 = load i8*, i8** %50
 %281 = getelementptr i8, i8* %280, i64 2
 store i8 %279, i8* %281
 %282 = load i32, i32* %51
 %283 = lshr i32 %282, 24
 %284 = trunc i32 %283 to i8
 %285 = load i8*, i8** %50
 %286 = getelementptr i8, i8* %285, i64 3
 store i8 %284, i8* %286
 %287 = load i8*, i8** %87
 %288 = getelementptr i8, i8* %287, i64 8
 store i8* %288, i8** %87
 br label %289
289:
 %290 = load i8*, i8** %84
 %291 = icmp ne i8* %290, null
 br i1 %291, label %292, label %342
292:
 %293 = load i8*, i8** %87
 %294 = load i8*, i8** %84
 %295 = load i64, i64* %294
 store i8* %293, i8** %58
 store i64 %295, i64* %59
 %296 = load i8*, i8** %58
 %297 = load i64, i64* %59
 %298 = trunc i64 %297 to i32
 store i8* %296, i8** %54
 store i32 %298, i32* %55
 %299 = load i32, i32* %55
 %300 = trunc i32 %299 to i8
 %301 = load i8*, i8** %54
 store i8 %300, i8* %301
 %302 = load i32, i32* %55
 %303 = lshr i32 %302, 8
 %304 = trunc i32 %303 to i8
 %305 = load i8*, i8** %54
 %306 = getelementptr i8, i8* %305, i64 1
 store i8 %304, i8* %306
 %307 = load i32, i32* %55
 %308 = lshr i32 %307, 16
 %309 = trunc i32 %308 to i8
 %310 = load i8*, i8** %54
 %311 = getelementptr i8, i8* %310, i64 2
 store i8 %309, i8* %311
 %312 = load i32, i32* %55
 %313 = lshr i32 %312, 24
 %314 = trunc i32 %313 to i8
 %315 = load i8*, i8** %54
 %316 = getelementptr i8, i8* %315, i64 3
 store i8 %314, i8* %316
 %317 = load i8*, i8** %58
 %318 = getelementptr i8, i8* %317, i64 4
 %319 = load i64, i64* %59
 %320 = lshr i64 %319, 32
 %321 = trunc i64 %320 to i32
 store i8* %318, i8** %56
 store i32 %321, i32* %57
 %322 = load i32, i32* %57
 %323 = trunc i32 %322 to i8
 %324 = load i8*, i8** %56
 store i8 %323, i8* %324
 %325 = load i32, i32* %57
 %326 = lshr i32 %325, 8
 %327 = trunc i32 %326 to i8
 %328 = load i8*, i8** %56
 %329 = getelementptr i8, i8* %328, i64 1
 store i8 %327, i8* %329
 %330 = load i32, i32* %57
 %331 = lshr i32 %330, 16
 %332 = trunc i32 %331 to i8
 %333 = load i8*, i8** %56
 %334 = getelementptr i8, i8* %333, i64 2
 store i8 %332, i8* %334
 %335 = load i32, i32* %57
 %336 = lshr i32 %335, 24
 %337 = trunc i32 %336 to i8
 %338 = load i8*, i8** %56
 %339 = getelementptr i8, i8* %338, i64 3
 store i8 %337, i8* %339
 %340 = load i8*, i8** %87
 %341 = getelementptr i8, i8* %340, i64 8
 store i8* %341, i8** %87
 br label %342
342:
 %343 = load i8*, i8** %85
 %344 = icmp ne i8* %343, null
 br i1 %344, label %345, label %369
345:
 %346 = load i8*, i8** %87
 %347 = load i8*, i8** %85
 %348 = load i32, i32* %347
 store i8* %346, i8** %60
 store i32 %348, i32* %61
 %349 = load i32, i32* %61
 %350 = trunc i32 %349 to i8
 %351 = load i8*, i8** %60
 store i8 %350, i8* %351
 %352 = load i32, i32* %61
 %353 = lshr i32 %352, 8
 %354 = trunc i32 %353 to i8
 %355 = load i8*, i8** %60
 %356 = getelementptr i8, i8* %355, i64 1
 store i8 %354, i8* %356
 %357 = load i32, i32* %61
 %358 = lshr i32 %357, 16
 %359 = trunc i32 %358 to i8
 %360 = load i8*, i8** %60
 %361 = getelementptr i8, i8* %360, i64 2
 store i8 %359, i8* %361
 %362 = load i32, i32* %61
 %363 = lshr i32 %362, 24
 %364 = trunc i32 %363 to i8
 %365 = load i8*, i8** %60
 %366 = getelementptr i8, i8* %365, i64 3
 store i8 %364, i8* %366
 %367 = load i8*, i8** %87
 %368 = getelementptr i8, i8* %367, i64 4
 store i8* %368, i8** %87
 br label %369
369:
 %370 = getelementptr [64 x i8], i8* %86, i64 0, i64 0
 %371 = getelementptr i8, i8* %370, i64 2
 %372 = load i8*, i8** %87
 %373 = getelementptr [64 x i8], i8* %86, i64 0, i64 0
 %374 = ptrtoint i8** %372 to i64
 %375 = ptrtoint i8** %373 to i64
 %376 = sub i64 %374, %375
 %377 = sub i64 %376, 4
 %378 = trunc i64 %377 to i16
 store i8* %371, i8** %40
 store i16 %378, i16* %41
 %379 = load i16, i16* %41
 %380 = trunc i16 %379 to i8
 %381 = load i8*, i8** %40
 store i8 %380, i8* %381
 %382 = load i16, i16* %41
 %383 = zext i16 %382 to i32
 %384 = ashr i32 %383, 8
 %385 = trunc i32 %384 to i8
 %386 = load i8*, i8** %40
 %387 = getelementptr i8, i8* %386, i64 1
 store i8 %385, i8* %387
 %388 = load i8*, i8** %79
 %389 = load i8*, i8** %78
 %390 = getelementptr [64 x i8], i8* %86, i64 0, i64 0
 %391 = load i8*, i8** %87
 %392 = getelementptr [64 x i8], i8* %86, i64 0, i64 0
 %393 = ptrtoint i8** %391 to i64
 %394 = ptrtoint i8** %392 to i64
 %395 = sub i64 %393, %394
 store i8* %388, i8** %20
 store i8* %389, i8** %21
 store i8* %390, i8** %22
 store i64 %395, i64* %23
 %396 = load i8*, i8** %21
 %397 = getelementptr %struct.mz_zip_array, i8* %396, i32 0, i32 1
 %398 = load i64, i64* %397
 store i64 %398, i64* %24
 %399 = load i8*, i8** %20
 %400 = load i8*, i8** %21
 %401 = load i64, i64* %24
 %402 = load i64, i64* %23
 %403 = add i64 %401, %402
 store i8* %399, i8** %15
 store i8* %400, i8** %16
 store i64 %403, i64* %17
 store i32 1, i32* %18
 %404 = load i64, i64* %17
 %405 = load i8*, i8** %16
 %406 = getelementptr %struct.mz_zip_array, i8* %405, i32 0, i32 2
 %407 = load i64, i64* %406
 %408 = icmp ugt i64 %404, %407
 br i1 %408, label %409, label %418
409:
 %410 = load i8*, i8** %15
 %411 = load i8*, i8** %16
 %412 = load i64, i64* %17
 %413 = load i32, i32* %18
 %414 = call i32 @mz_zip_array_ensure_capacity (i8* %410, i8* %411, i64 %412, i32 %413)
 %415 = icmp ne i32 %414, 0
 br i1 %415, label %417, label %416
416:
 store i32 0, i32* %14
 br label %422
417:
 br label %418
418:
 %419 = load i64, i64* %17
 %420 = load i8*, i8** %16
 %421 = getelementptr %struct.mz_zip_array, i8* %420, i32 0, i32 1
 store i64 %419, i64* %421
 store i32 1, i32* %14
 br label %422
422:
 %423 = load i32, i32* %14
 %424 = icmp ne i32 %423, 0
 br i1 %424, label %426, label %425
425:
 store i32 0, i32* %19
 br label %458
426:
 %427 = load i64, i64* %23
 %428 = icmp ugt i64 %427, 0
 br i1 %428, label %429, label %457
429:
 %430 = load i8*, i8** %21
 %431 = load i8*, i8** %430
 %432 = load i64, i64* %24
 %433 = load i8*, i8** %21
 %434 = getelementptr %struct.mz_zip_array, i8* %433, i32 0, i32 3
 %435 = load i32, i32* %434
 %436 = zext i32 %435 to i64
 %437 = mul i64 %432, %436
 %438 = getelementptr i8, i8* %431, i64 %437
 %439 = load i8*, i8** %22
 %440 = load i64, i64* %23
 %441 = load i8*, i8** %21
 %442 = getelementptr %struct.mz_zip_array, i8* %441, i32 0, i32 3
 %443 = load i32, i32* %442
 %444 = zext i32 %443 to i64
 %445 = mul i64 %440, %444
 %446 = load i8*, i8** %21
 %447 = load i8*, i8** %446
 %448 = load i64, i64* %24
 %449 = load i8*, i8** %21
 %450 = getelementptr %struct.mz_zip_array, i8* %449, i32 0, i32 3
 %451 = load i32, i32* %450
 %452 = zext i32 %451 to i64
 %453 = mul i64 %448, %452
 %454 = getelementptr i8, i8* %447, i64 %453
 %455 = call i64 @llvm.objectsize.i64.p0 (i8* %454, i1 0, i1 1, i1 0)
 %456 = call i8* @__memcpy_chk (i8* %438, i8* %439, i64 %445, i64 %455)
 br label %457
457:
 store i32 1, i32* %19
 br label %458
458:
 %459 = load i32, i32* %19
 %460 = icmp ne i32 %459, 0
 br i1 %460, label %470, label %461
461:
 %462 = load i8*, i8** %79
 store i8* %462, i8** %69
 store i32 16, i32* %70
 %463 = load i8*, i8** %69
 %464 = icmp ne i8* %463, null
 br i1 %464, label %465, label %469
465:
 %466 = load i32, i32* %70
 %467 = load i8*, i8** %69
 %468 = getelementptr %struct.mz_zip_archive, i8* %467, i32 0, i32 5
 store i32 %466, i32* %468
 br label %469
469:
 store i32 0, i32* %77
 br label %629
470:
 br label %471
471:
 %472 = load i8*, i8** %80
 %473 = icmp ne i8* %472, null
 br i1 %473, label %474, label %628
474:
 %475 = load i32, i32* %81
 %476 = icmp ne i32 %475, 0
 br i1 %476, label %477, label %628
477:
 %478 = load i32, i32* %81
 store i32 %478, i32* %88
 %479 = load i8*, i8** %80
 store i8* %479, i8** %89
 br label %480
480:
 %481 = load i32, i32* %88
 %482 = zext i32 %481 to i64
 %483 = icmp ult i64 %482, 4
 br i1 %483, label %484, label %493
484:
 %485 = load i8*, i8** %79
 store i8* %485, i8** %71
 store i32 9, i32* %72
 %486 = load i8*, i8** %71
 %487 = icmp ne i8* %486, null
 br i1 %487, label %488, label %492
488:
 %489 = load i32, i32* %72
 %490 = load i8*, i8** %71
 %491 = getelementptr %struct.mz_zip_archive, i8* %490, i32 0, i32 5
 store i32 %489, i32* %491
 br label %492
492:
 store i32 0, i32* %77
 br label %629
493:
 %494 = load i8*, i8** %89
 %495 = getelementptr i8, i8* %494, i64 0
 %496 = load i8, i8* %495
 %497 = zext i8 %496 to i32
 %498 = load i8*, i8** %89
 %499 = getelementptr i8, i8* %498, i64 1
 %500 = load i8, i8* %499
 %501 = zext i8 %500 to i32
 %502 = shl i32 %501, 8
 %503 = or i32 %497, %502
 store i32 %503, i32* %90
 %504 = load i8*, i8** %89
 %505 = getelementptr i8, i8* %504, i64 2
 %506 = getelementptr i8, i8* %505, i64 0
 %507 = load i8, i8* %506
 %508 = zext i8 %507 to i32
 %509 = load i8*, i8** %89
 %510 = getelementptr i8, i8* %509, i64 2
 %511 = getelementptr i8, i8* %510, i64 1
 %512 = load i8, i8* %511
 %513 = zext i8 %512 to i32
 %514 = shl i32 %513, 8
 %515 = or i32 %508, %514
 store i32 %515, i32* %91
 %516 = load i32, i32* %91
 %517 = zext i32 %516 to i64
 %518 = add i64 %517, 4
 %519 = trunc i64 %518 to i32
 store i32 %519, i32* %92
 %520 = load i32, i32* %92
 %521 = load i32, i32* %88
 %522 = icmp ugt i32 %520, %521
 br i1 %522, label %523, label %532
523:
 %524 = load i8*, i8** %79
 store i8* %524, i8** %73
 store i32 9, i32* %74
 %525 = load i8*, i8** %73
 %526 = icmp ne i8* %525, null
 br i1 %526, label %527, label %531
527:
 %528 = load i32, i32* %74
 %529 = load i8*, i8** %73
 %530 = getelementptr %struct.mz_zip_archive, i8* %529, i32 0, i32 5
 store i32 %528, i32* %530
 br label %531
531:
 store i32 0, i32* %77
 br label %629
532:
 %533 = load i32, i32* %90
 %534 = icmp ne i32 %533, 1
 br i1 %534, label %535, label %616
535:
 %536 = load i8*, i8** %79
 %537 = load i8*, i8** %78
 %538 = load i8*, i8** %89
 %539 = load i32, i32* %92
 %540 = zext i32 %539 to i64
 store i8* %536, i8** %31
 store i8* %537, i8** %32
 store i8* %538, i8** %33
 store i64 %540, i64* %34
 %541 = load i8*, i8** %32
 %542 = getelementptr %struct.mz_zip_array, i8* %541, i32 0, i32 1
 %543 = load i64, i64* %542
 store i64 %543, i64* %35
 %544 = load i8*, i8** %31
 %545 = load i8*, i8** %32
 %546 = load i64, i64* %35
 %547 = load i64, i64* %34
 %548 = add i64 %546, %547
 store i8* %544, i8** %26
 store i8* %545, i8** %27
 store i64 %548, i64* %28
 store i32 1, i32* %29
 %549 = load i64, i64* %28
 %550 = load i8*, i8** %27
 %551 = getelementptr %struct.mz_zip_array, i8* %550, i32 0, i32 2
 %552 = load i64, i64* %551
 %553 = icmp ugt i64 %549, %552
 br i1 %553, label %554, label %563
554:
 %555 = load i8*, i8** %26
 %556 = load i8*, i8** %27
 %557 = load i64, i64* %28
 %558 = load i32, i32* %29
 %559 = call i32 @mz_zip_array_ensure_capacity (i8* %555, i8* %556, i64 %557, i32 %558)
 %560 = icmp ne i32 %559, 0
 br i1 %560, label %562, label %561
561:
 store i32 0, i32* %25
 br label %567
562:
 br label %563
563:
 %564 = load i64, i64* %28
 %565 = load i8*, i8** %27
 %566 = getelementptr %struct.mz_zip_array, i8* %565, i32 0, i32 1
 store i64 %564, i64* %566
 store i32 1, i32* %25
 br label %567
567:
 %568 = load i32, i32* %25
 %569 = icmp ne i32 %568, 0
 br i1 %569, label %571, label %570
570:
 store i32 0, i32* %30
 br label %603
571:
 %572 = load i64, i64* %34
 %573 = icmp ugt i64 %572, 0
 br i1 %573, label %574, label %602
574:
 %575 = load i8*, i8** %32
 %576 = load i8*, i8** %575
 %577 = load i64, i64* %35
 %578 = load i8*, i8** %32
 %579 = getelementptr %struct.mz_zip_array, i8* %578, i32 0, i32 3
 %580 = load i32, i32* %579
 %581 = zext i32 %580 to i64
 %582 = mul i64 %577, %581
 %583 = getelementptr i8, i8* %576, i64 %582
 %584 = load i8*, i8** %33
 %585 = load i64, i64* %34
 %586 = load i8*, i8** %32
 %587 = getelementptr %struct.mz_zip_array, i8* %586, i32 0, i32 3
 %588 = load i32, i32* %587
 %589 = zext i32 %588 to i64
 %590 = mul i64 %585, %589
 %591 = load i8*, i8** %32
 %592 = load i8*, i8** %591
 %593 = load i64, i64* %35
 %594 = load i8*, i8** %32
 %595 = getelementptr %struct.mz_zip_array, i8* %594, i32 0, i32 3
 %596 = load i32, i32* %595
 %597 = zext i32 %596 to i64
 %598 = mul i64 %593, %597
 %599 = getelementptr i8, i8* %592, i64 %598
 %600 = call i64 @llvm.objectsize.i64.p0 (i8* %599, i1 0, i1 1, i1 0)
 %601 = call i8* @__memcpy_chk (i8* %583, i8* %584, i64 %590, i64 %600)
 br label %602
602:
 store i32 1, i32* %30
 br label %603
603:
 %604 = load i32, i32* %30
 %605 = icmp ne i32 %604, 0
 br i1 %605, label %615, label %606
606:
 %607 = load i8*, i8** %79
 store i8* %607, i8** %75
 store i32 16, i32* %76
 %608 = load i8*, i8** %75
 %609 = icmp ne i8* %608, null
 br i1 %609, label %610, label %614
610:
 %611 = load i32, i32* %76
 %612 = load i8*, i8** %75
 %613 = getelementptr %struct.mz_zip_archive, i8* %612, i32 0, i32 5
 store i32 %611, i32* %613
 br label %614
614:
 store i32 0, i32* %77
 br label %629
615:
 br label %616
616:
 %617 = load i32, i32* %92
 %618 = load i8*, i8** %89
 %619 = zext i32 %617 to i64
 %620 = getelementptr i8, i8* %618, i64 %619
 store i8* %620, i8** %89
 %621 = load i32, i32* %92
 %622 = load i32, i32* %88
 %623 = sub i32 %622, %621
 store i32 %623, i32* %88
 br label %624
624:
 %625 = load i32, i32* %88
 %626 = icmp ne i32 %625, 0
 br i1 %626, label %480, label %627
627:
 br label %628
628:
 store i32 1, i32* %77
 br label %629
629:
 %630 = load i32, i32* %77
 ret i32 %630
}

define i32 @mz_zip_writer_finalize_archive (i8* %0) {
 %2 = alloca i8*
 %3 = alloca i16
 %4 = alloca i8*
 %5 = alloca i16
 %6 = alloca i8*
 %7 = alloca i16
 %8 = alloca i8*
 %9 = alloca i16
 %10 = alloca i8*
 %11 = alloca i32
 %12 = alloca i8*
 %13 = alloca i32
 %14 = alloca i8*
 %15 = alloca i64
 %16 = alloca i8*
 %17 = alloca i32
 %18 = alloca i8*
 %19 = alloca i32
 %20 = alloca i8*
 %21 = alloca i64
 %22 = alloca i8*
 %23 = alloca i32
 %24 = alloca i8*
 %25 = alloca i32
 %26 = alloca i8*
 %27 = alloca i64
 %28 = alloca i8*
 %29 = alloca i32
 %30 = alloca i8*
 %31 = alloca i32
 %32 = alloca i8*
 %33 = alloca i64
 %34 = alloca i8*
 %35 = alloca i32
 %36 = alloca i8*
 %37 = alloca i32
 %38 = alloca i8*
 %39 = alloca i64
 %40 = alloca i8*
 %41 = alloca i32
 %42 = alloca i8*
 %43 = alloca i32
 %44 = alloca i8*
 %45 = alloca i64
 %46 = alloca i8*
 %47 = alloca i32
 %48 = alloca i8*
 %49 = alloca i32
 %50 = alloca i8*
 %51 = alloca i32
 %52 = alloca i8*
 %53 = alloca i32
 %54 = alloca i8*
 %55 = alloca i32
 %56 = alloca i8*
 %57 = alloca i32
 %58 = alloca i8*
 %59 = alloca i32
 %60 = alloca i8*
 %61 = alloca i32
 %62 = alloca i8*
 %63 = alloca i32
 %64 = alloca i8*
 %65 = alloca i32
 %66 = alloca i8*
 %67 = alloca i32
 %68 = alloca i8*
 %69 = alloca i32
 %70 = alloca i8*
 %71 = alloca i32
 %72 = alloca i8*
 %73 = alloca i32
 %74 = alloca i32
 %75 = alloca i8*
 %76 = alloca i8*
 %77 = alloca i64
 %78 = alloca i64
 %79 = alloca [256 x i8]
 %80 = alloca i64
 store i8* %0, i8** %75
 %81 = load i8*, i8** %75
 %82 = icmp ne i8* %81, null
 br i1 %82, label %83, label %93
83:
 %84 = load i8*, i8** %75
 %85 = getelementptr %struct.mz_zip_archive, i8* %84, i32 0, i32 15
 %86 = load i8*, i8** %85
 %87 = icmp ne i8* %86, null
 br i1 %87, label %88, label %93
88:
 %89 = load i8*, i8** %75
 %90 = getelementptr %struct.mz_zip_archive, i8* %89, i32 0, i32 3
 %91 = load i32, i32* %90
 %92 = icmp ne i32 %91, 2
 br i1 %92, label %93, label %102
93:
 %94 = load i8*, i8** %75
 store i8* %94, i8** %58
 store i32 24, i32* %59
 %95 = load i8*, i8** %58
 %96 = icmp ne i8* %95, null
 br i1 %96, label %97, label %101
97:
 %98 = load i32, i32* %59
 %99 = load i8*, i8** %58
 %100 = getelementptr %struct.mz_zip_archive, i8* %99, i32 0, i32 5
 store i32 %98, i32* %100
 br label %101
101:
 store i32 0, i32* %74
 br label %802
102:
 %103 = load i8*, i8** %75
 %104 = getelementptr %struct.mz_zip_archive, i8* %103, i32 0, i32 15
 %105 = load i8*, i8** %104
 store i8* %105, i8** %76
 %106 = load i8*, i8** %76
 %107 = getelementptr %struct.mz_zip_internal_state_tag, i8* %106, i32 0, i32 4
 %108 = load i32, i32* %107
 %109 = icmp ne i32 %108, 0
 br i1 %109, label %110, label %126
110:
 %111 = load i8*, i8** %76
 %112 = getelementptr %struct.mz_zip_internal_state_tag, i8* %111, i32 0, i32 0
 %113 = getelementptr %struct.mz_zip_array, i8* %112, i32 0, i32 1
 %114 = load i64, i64* %113
 %115 = icmp uge i64 %114, 4294967295
 br i1 %115, label %116, label %125
116:
 %117 = load i8*, i8** %75
 store i8* %117, i8** %60
 store i32 2, i32* %61
 %118 = load i8*, i8** %60
 %119 = icmp ne i8* %118, null
 br i1 %119, label %120, label %124
120:
 %121 = load i32, i32* %61
 %122 = load i8*, i8** %60
 %123 = getelementptr %struct.mz_zip_archive, i8* %122, i32 0, i32 5
 store i32 %121, i32* %123
 br label %124
124:
 store i32 0, i32* %74
 br label %802
125:
 br label %152
126:
 %127 = load i8*, i8** %75
 %128 = getelementptr %struct.mz_zip_archive, i8* %127, i32 0, i32 2
 %129 = load i32, i32* %128
 %130 = icmp ugt i32 %129, 65535
 br i1 %130, label %142, label %131
131:
 %132 = load i8*, i8** %75
 %133 = getelementptr %struct.mz_zip_archive, i8* %132, i32 0, i32 0
 %134 = load i64, i64* %133
 %135 = load i8*, i8** %76
 %136 = getelementptr %struct.mz_zip_internal_state_tag, i8* %135, i32 0, i32 0
 %137 = getelementptr %struct.mz_zip_array, i8* %136, i32 0, i32 1
 %138 = load i64, i64* %137
 %139 = add i64 %134, %138
 %140 = add i64 %139, 22
 %141 = icmp ugt i64 %140, 4294967295
 br i1 %141, label %142, label %151
142:
 %143 = load i8*, i8** %75
 store i8* %143, i8** %62
 store i32 2, i32* %63
 %144 = load i8*, i8** %62
 %145 = icmp ne i8* %144, null
 br i1 %145, label %146, label %150
146:
 %147 = load i32, i32* %63
 %148 = load i8*, i8** %62
 %149 = getelementptr %struct.mz_zip_archive, i8* %148, i32 0, i32 5
 store i32 %147, i32* %149
 br label %150
150:
 store i32 0, i32* %74
 br label %802
151:
 br label %152
152:
 store i64 0, i64* %77
 store i64 0, i64* %78
 %153 = load i8*, i8** %75
 %154 = getelementptr %struct.mz_zip_archive, i8* %153, i32 0, i32 2
 %155 = load i32, i32* %154
 %156 = icmp ne i32 %155, 0
 br i1 %156, label %157, label %198
157:
 %158 = load i8*, i8** %75
 %159 = getelementptr %struct.mz_zip_archive, i8* %158, i32 0, i32 0
 %160 = load i64, i64* %159
 store i64 %160, i64* %77
 %161 = load i8*, i8** %76
 %162 = getelementptr %struct.mz_zip_internal_state_tag, i8* %161, i32 0, i32 0
 %163 = getelementptr %struct.mz_zip_array, i8* %162, i32 0, i32 1
 %164 = load i64, i64* %163
 store i64 %164, i64* %78
 %165 = load i64, i64* %77
 %166 = load i8*, i8** %75
 %167 = getelementptr %struct.mz_zip_archive, i8* %166, i32 0, i32 1
 store i64 %165, i64* %167
 %168 = load i8*, i8** %75
 %169 = getelementptr %struct.mz_zip_archive, i8* %168, i32 0, i32 12
 %170 = load i8*, i8** %169
 %171 = load i8*, i8** %75
 %172 = getelementptr %struct.mz_zip_archive, i8* %171, i32 0, i32 14
 %173 = load i8*, i8** %172
 %174 = load i64, i64* %77
 %175 = load i8*, i8** %76
 %176 = getelementptr %struct.mz_zip_internal_state_tag, i8* %175, i32 0, i32 0
 %177 = getelementptr %struct.mz_zip_array, i8* %176, i32 0, i32 0
 %178 = load i8*, i8** %177
 %179 = load i64, i64* %78
 %180 = call i64 %170 (i8* %173, i64 %174, i8* %178, i64 %179)
 %181 = load i64, i64* %78
 %182 = icmp ne i64 %180, %181
 br i1 %182, label %183, label %192
183:
 %184 = load i8*, i8** %75
 store i8* %184, i8** %64
 store i32 19, i32* %65
 %185 = load i8*, i8** %64
 %186 = icmp ne i8* %185, null
 br i1 %186, label %187, label %191
187:
 %188 = load i32, i32* %65
 %189 = load i8*, i8** %64
 %190 = getelementptr %struct.mz_zip_archive, i8* %189, i32 0, i32 5
 store i32 %188, i32* %190
 br label %191
191:
 store i32 0, i32* %74
 br label %802
192:
 %193 = load i64, i64* %78
 %194 = load i8*, i8** %75
 %195 = getelementptr %struct.mz_zip_archive, i8* %194, i32 0, i32 0
 %196 = load i64, i64* %195
 %197 = add i64 %196, %193
 store i64 %197, i64* %195
 br label %198
198:
 %199 = load i8*, i8** %76
 %200 = getelementptr %struct.mz_zip_internal_state_tag, i8* %199, i32 0, i32 4
 %201 = load i32, i32* %200
 %202 = icmp ne i32 %201, 0
 br i1 %202, label %203, label %630
203:
 %204 = load i8*, i8** %75
 %205 = getelementptr %struct.mz_zip_archive, i8* %204, i32 0, i32 0
 %206 = load i64, i64* %205
 store i64 %206, i64* %80
 %207 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 call void @memset (i8* %207, i8 0, i64 256, i1 0)
 %208 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %209 = getelementptr i8, i8* %208, i64 0
 store i8* %209, i8** %46
 store i32 101075792, i32* %47
 %210 = load i32, i32* %47
 %211 = trunc i32 %210 to i8
 %212 = load i8*, i8** %46
 store i8 %211, i8* %212
 %213 = load i32, i32* %47
 %214 = lshr i32 %213, 8
 %215 = trunc i32 %214 to i8
 %216 = load i8*, i8** %46
 %217 = getelementptr i8, i8* %216, i64 1
 store i8 %215, i8* %217
 %218 = load i32, i32* %47
 %219 = lshr i32 %218, 16
 %220 = trunc i32 %219 to i8
 %221 = load i8*, i8** %46
 %222 = getelementptr i8, i8* %221, i64 2
 store i8 %220, i8* %222
 %223 = load i32, i32* %47
 %224 = lshr i32 %223, 24
 %225 = trunc i32 %224 to i8
 %226 = load i8*, i8** %46
 %227 = getelementptr i8, i8* %226, i64 3
 store i8 %225, i8* %227
 %228 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %229 = getelementptr i8, i8* %228, i64 4
 store i8* %229, i8** %14
 store i64 44, i64* %15
 %230 = load i8*, i8** %14
 %231 = load i64, i64* %15
 %232 = trunc i64 %231 to i32
 store i8* %230, i8** %10
 store i32 %232, i32* %11
 %233 = load i32, i32* %11
 %234 = trunc i32 %233 to i8
 %235 = load i8*, i8** %10
 store i8 %234, i8* %235
 %236 = load i32, i32* %11
 %237 = lshr i32 %236, 8
 %238 = trunc i32 %237 to i8
 %239 = load i8*, i8** %10
 %240 = getelementptr i8, i8* %239, i64 1
 store i8 %238, i8* %240
 %241 = load i32, i32* %11
 %242 = lshr i32 %241, 16
 %243 = trunc i32 %242 to i8
 %244 = load i8*, i8** %10
 %245 = getelementptr i8, i8* %244, i64 2
 store i8 %243, i8* %245
 %246 = load i32, i32* %11
 %247 = lshr i32 %246, 24
 %248 = trunc i32 %247 to i8
 %249 = load i8*, i8** %10
 %250 = getelementptr i8, i8* %249, i64 3
 store i8 %248, i8* %250
 %251 = load i8*, i8** %14
 %252 = getelementptr i8, i8* %251, i64 4
 %253 = load i64, i64* %15
 %254 = lshr i64 %253, 32
 %255 = trunc i64 %254 to i32
 store i8* %252, i8** %12
 store i32 %255, i32* %13
 %256 = load i32, i32* %13
 %257 = trunc i32 %256 to i8
 %258 = load i8*, i8** %12
 store i8 %257, i8* %258
 %259 = load i32, i32* %13
 %260 = lshr i32 %259, 8
 %261 = trunc i32 %260 to i8
 %262 = load i8*, i8** %12
 %263 = getelementptr i8, i8* %262, i64 1
 store i8 %261, i8* %263
 %264 = load i32, i32* %13
 %265 = lshr i32 %264, 16
 %266 = trunc i32 %265 to i8
 %267 = load i8*, i8** %12
 %268 = getelementptr i8, i8* %267, i64 2
 store i8 %266, i8* %268
 %269 = load i32, i32* %13
 %270 = lshr i32 %269, 24
 %271 = trunc i32 %270 to i8
 %272 = load i8*, i8** %12
 %273 = getelementptr i8, i8* %272, i64 3
 store i8 %271, i8* %273
 %274 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %275 = getelementptr i8, i8* %274, i64 12
 store i8* %275, i8** %2
 store i16 798, i16* %3
 %276 = load i16, i16* %3
 %277 = trunc i16 %276 to i8
 %278 = load i8*, i8** %2
 store i8 %277, i8* %278
 %279 = load i16, i16* %3
 %280 = zext i16 %279 to i32
 %281 = ashr i32 %280, 8
 %282 = trunc i32 %281 to i8
 %283 = load i8*, i8** %2
 %284 = getelementptr i8, i8* %283, i64 1
 store i8 %282, i8* %284
 %285 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %286 = getelementptr i8, i8* %285, i64 14
 store i8* %286, i8** %4
 store i16 45, i16* %5
 %287 = load i16, i16* %5
 %288 = trunc i16 %287 to i8
 %289 = load i8*, i8** %4
 store i8 %288, i8* %289
 %290 = load i16, i16* %5
 %291 = zext i16 %290 to i32
 %292 = ashr i32 %291, 8
 %293 = trunc i32 %292 to i8
 %294 = load i8*, i8** %4
 %295 = getelementptr i8, i8* %294, i64 1
 store i8 %293, i8* %295
 %296 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %297 = getelementptr i8, i8* %296, i64 24
 %298 = load i8*, i8** %75
 %299 = getelementptr %struct.mz_zip_archive, i8* %298, i32 0, i32 2
 %300 = load i32, i32* %299
 %301 = zext i32 %300 to i64
 store i8* %297, i8** %20
 store i64 %301, i64* %21
 %302 = load i8*, i8** %20
 %303 = load i64, i64* %21
 %304 = trunc i64 %303 to i32
 store i8* %302, i8** %16
 store i32 %304, i32* %17
 %305 = load i32, i32* %17
 %306 = trunc i32 %305 to i8
 %307 = load i8*, i8** %16
 store i8 %306, i8* %307
 %308 = load i32, i32* %17
 %309 = lshr i32 %308, 8
 %310 = trunc i32 %309 to i8
 %311 = load i8*, i8** %16
 %312 = getelementptr i8, i8* %311, i64 1
 store i8 %310, i8* %312
 %313 = load i32, i32* %17
 %314 = lshr i32 %313, 16
 %315 = trunc i32 %314 to i8
 %316 = load i8*, i8** %16
 %317 = getelementptr i8, i8* %316, i64 2
 store i8 %315, i8* %317
 %318 = load i32, i32* %17
 %319 = lshr i32 %318, 24
 %320 = trunc i32 %319 to i8
 %321 = load i8*, i8** %16
 %322 = getelementptr i8, i8* %321, i64 3
 store i8 %320, i8* %322
 %323 = load i8*, i8** %20
 %324 = getelementptr i8, i8* %323, i64 4
 %325 = load i64, i64* %21
 %326 = lshr i64 %325, 32
 %327 = trunc i64 %326 to i32
 store i8* %324, i8** %18
 store i32 %327, i32* %19
 %328 = load i32, i32* %19
 %329 = trunc i32 %328 to i8
 %330 = load i8*, i8** %18
 store i8 %329, i8* %330
 %331 = load i32, i32* %19
 %332 = lshr i32 %331, 8
 %333 = trunc i32 %332 to i8
 %334 = load i8*, i8** %18
 %335 = getelementptr i8, i8* %334, i64 1
 store i8 %333, i8* %335
 %336 = load i32, i32* %19
 %337 = lshr i32 %336, 16
 %338 = trunc i32 %337 to i8
 %339 = load i8*, i8** %18
 %340 = getelementptr i8, i8* %339, i64 2
 store i8 %338, i8* %340
 %341 = load i32, i32* %19
 %342 = lshr i32 %341, 24
 %343 = trunc i32 %342 to i8
 %344 = load i8*, i8** %18
 %345 = getelementptr i8, i8* %344, i64 3
 store i8 %343, i8* %345
 %346 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %347 = getelementptr i8, i8* %346, i64 32
 %348 = load i8*, i8** %75
 %349 = getelementptr %struct.mz_zip_archive, i8* %348, i32 0, i32 2
 %350 = load i32, i32* %349
 %351 = zext i32 %350 to i64
 store i8* %347, i8** %26
 store i64 %351, i64* %27
 %352 = load i8*, i8** %26
 %353 = load i64, i64* %27
 %354 = trunc i64 %353 to i32
 store i8* %352, i8** %22
 store i32 %354, i32* %23
 %355 = load i32, i32* %23
 %356 = trunc i32 %355 to i8
 %357 = load i8*, i8** %22
 store i8 %356, i8* %357
 %358 = load i32, i32* %23
 %359 = lshr i32 %358, 8
 %360 = trunc i32 %359 to i8
 %361 = load i8*, i8** %22
 %362 = getelementptr i8, i8* %361, i64 1
 store i8 %360, i8* %362
 %363 = load i32, i32* %23
 %364 = lshr i32 %363, 16
 %365 = trunc i32 %364 to i8
 %366 = load i8*, i8** %22
 %367 = getelementptr i8, i8* %366, i64 2
 store i8 %365, i8* %367
 %368 = load i32, i32* %23
 %369 = lshr i32 %368, 24
 %370 = trunc i32 %369 to i8
 %371 = load i8*, i8** %22
 %372 = getelementptr i8, i8* %371, i64 3
 store i8 %370, i8* %372
 %373 = load i8*, i8** %26
 %374 = getelementptr i8, i8* %373, i64 4
 %375 = load i64, i64* %27
 %376 = lshr i64 %375, 32
 %377 = trunc i64 %376 to i32
 store i8* %374, i8** %24
 store i32 %377, i32* %25
 %378 = load i32, i32* %25
 %379 = trunc i32 %378 to i8
 %380 = load i8*, i8** %24
 store i8 %379, i8* %380
 %381 = load i32, i32* %25
 %382 = lshr i32 %381, 8
 %383 = trunc i32 %382 to i8
 %384 = load i8*, i8** %24
 %385 = getelementptr i8, i8* %384, i64 1
 store i8 %383, i8* %385
 %386 = load i32, i32* %25
 %387 = lshr i32 %386, 16
 %388 = trunc i32 %387 to i8
 %389 = load i8*, i8** %24
 %390 = getelementptr i8, i8* %389, i64 2
 store i8 %388, i8* %390
 %391 = load i32, i32* %25
 %392 = lshr i32 %391, 24
 %393 = trunc i32 %392 to i8
 %394 = load i8*, i8** %24
 %395 = getelementptr i8, i8* %394, i64 3
 store i8 %393, i8* %395
 %396 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %397 = getelementptr i8, i8* %396, i64 40
 %398 = load i64, i64* %78
 store i8* %397, i8** %32
 store i64 %398, i64* %33
 %399 = load i8*, i8** %32
 %400 = load i64, i64* %33
 %401 = trunc i64 %400 to i32
 store i8* %399, i8** %28
 store i32 %401, i32* %29
 %402 = load i32, i32* %29
 %403 = trunc i32 %402 to i8
 %404 = load i8*, i8** %28
 store i8 %403, i8* %404
 %405 = load i32, i32* %29
 %406 = lshr i32 %405, 8
 %407 = trunc i32 %406 to i8
 %408 = load i8*, i8** %28
 %409 = getelementptr i8, i8* %408, i64 1
 store i8 %407, i8* %409
 %410 = load i32, i32* %29
 %411 = lshr i32 %410, 16
 %412 = trunc i32 %411 to i8
 %413 = load i8*, i8** %28
 %414 = getelementptr i8, i8* %413, i64 2
 store i8 %412, i8* %414
 %415 = load i32, i32* %29
 %416 = lshr i32 %415, 24
 %417 = trunc i32 %416 to i8
 %418 = load i8*, i8** %28
 %419 = getelementptr i8, i8* %418, i64 3
 store i8 %417, i8* %419
 %420 = load i8*, i8** %32
 %421 = getelementptr i8, i8* %420, i64 4
 %422 = load i64, i64* %33
 %423 = lshr i64 %422, 32
 %424 = trunc i64 %423 to i32
 store i8* %421, i8** %30
 store i32 %424, i32* %31
 %425 = load i32, i32* %31
 %426 = trunc i32 %425 to i8
 %427 = load i8*, i8** %30
 store i8 %426, i8* %427
 %428 = load i32, i32* %31
 %429 = lshr i32 %428, 8
 %430 = trunc i32 %429 to i8
 %431 = load i8*, i8** %30
 %432 = getelementptr i8, i8* %431, i64 1
 store i8 %430, i8* %432
 %433 = load i32, i32* %31
 %434 = lshr i32 %433, 16
 %435 = trunc i32 %434 to i8
 %436 = load i8*, i8** %30
 %437 = getelementptr i8, i8* %436, i64 2
 store i8 %435, i8* %437
 %438 = load i32, i32* %31
 %439 = lshr i32 %438, 24
 %440 = trunc i32 %439 to i8
 %441 = load i8*, i8** %30
 %442 = getelementptr i8, i8* %441, i64 3
 store i8 %440, i8* %442
 %443 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %444 = getelementptr i8, i8* %443, i64 48
 %445 = load i64, i64* %77
 store i8* %444, i8** %38
 store i64 %445, i64* %39
 %446 = load i8*, i8** %38
 %447 = load i64, i64* %39
 %448 = trunc i64 %447 to i32
 store i8* %446, i8** %34
 store i32 %448, i32* %35
 %449 = load i32, i32* %35
 %450 = trunc i32 %449 to i8
 %451 = load i8*, i8** %34
 store i8 %450, i8* %451
 %452 = load i32, i32* %35
 %453 = lshr i32 %452, 8
 %454 = trunc i32 %453 to i8
 %455 = load i8*, i8** %34
 %456 = getelementptr i8, i8* %455, i64 1
 store i8 %454, i8* %456
 %457 = load i32, i32* %35
 %458 = lshr i32 %457, 16
 %459 = trunc i32 %458 to i8
 %460 = load i8*, i8** %34
 %461 = getelementptr i8, i8* %460, i64 2
 store i8 %459, i8* %461
 %462 = load i32, i32* %35
 %463 = lshr i32 %462, 24
 %464 = trunc i32 %463 to i8
 %465 = load i8*, i8** %34
 %466 = getelementptr i8, i8* %465, i64 3
 store i8 %464, i8* %466
 %467 = load i8*, i8** %38
 %468 = getelementptr i8, i8* %467, i64 4
 %469 = load i64, i64* %39
 %470 = lshr i64 %469, 32
 %471 = trunc i64 %470 to i32
 store i8* %468, i8** %36
 store i32 %471, i32* %37
 %472 = load i32, i32* %37
 %473 = trunc i32 %472 to i8
 %474 = load i8*, i8** %36
 store i8 %473, i8* %474
 %475 = load i32, i32* %37
 %476 = lshr i32 %475, 8
 %477 = trunc i32 %476 to i8
 %478 = load i8*, i8** %36
 %479 = getelementptr i8, i8* %478, i64 1
 store i8 %477, i8* %479
 %480 = load i32, i32* %37
 %481 = lshr i32 %480, 16
 %482 = trunc i32 %481 to i8
 %483 = load i8*, i8** %36
 %484 = getelementptr i8, i8* %483, i64 2
 store i8 %482, i8* %484
 %485 = load i32, i32* %37
 %486 = lshr i32 %485, 24
 %487 = trunc i32 %486 to i8
 %488 = load i8*, i8** %36
 %489 = getelementptr i8, i8* %488, i64 3
 store i8 %487, i8* %489
 %490 = load i8*, i8** %75
 %491 = getelementptr %struct.mz_zip_archive, i8* %490, i32 0, i32 12
 %492 = load i8*, i8** %491
 %493 = load i8*, i8** %75
 %494 = getelementptr %struct.mz_zip_archive, i8* %493, i32 0, i32 14
 %495 = load i8*, i8** %494
 %496 = load i8*, i8** %75
 %497 = getelementptr %struct.mz_zip_archive, i8* %496, i32 0, i32 0
 %498 = load i64, i64* %497
 %499 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %500 = call i64 %492 (i8* %495, i64 %498, i8* %499, i64 56)
 %501 = icmp ne i64 %500, 56
 br i1 %501, label %502, label %511
502:
 %503 = load i8*, i8** %75
 store i8* %503, i8** %66
 store i32 19, i32* %67
 %504 = load i8*, i8** %66
 %505 = icmp ne i8* %504, null
 br i1 %505, label %506, label %510
506:
 %507 = load i32, i32* %67
 %508 = load i8*, i8** %66
 %509 = getelementptr %struct.mz_zip_archive, i8* %508, i32 0, i32 5
 store i32 %507, i32* %509
 br label %510
510:
 store i32 0, i32* %74
 br label %802
511:
 %512 = load i8*, i8** %75
 %513 = getelementptr %struct.mz_zip_archive, i8* %512, i32 0, i32 0
 %514 = load i64, i64* %513
 %515 = add i64 %514, 56
 store i64 %515, i64* %513
 %516 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 call void @memset (i8* %516, i8 0, i64 256, i1 0)
 %517 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %518 = getelementptr i8, i8* %517, i64 0
 store i8* %518, i8** %48
 store i32 117853008, i32* %49
 %519 = load i32, i32* %49
 %520 = trunc i32 %519 to i8
 %521 = load i8*, i8** %48
 store i8 %520, i8* %521
 %522 = load i32, i32* %49
 %523 = lshr i32 %522, 8
 %524 = trunc i32 %523 to i8
 %525 = load i8*, i8** %48
 %526 = getelementptr i8, i8* %525, i64 1
 store i8 %524, i8* %526
 %527 = load i32, i32* %49
 %528 = lshr i32 %527, 16
 %529 = trunc i32 %528 to i8
 %530 = load i8*, i8** %48
 %531 = getelementptr i8, i8* %530, i64 2
 store i8 %529, i8* %531
 %532 = load i32, i32* %49
 %533 = lshr i32 %532, 24
 %534 = trunc i32 %533 to i8
 %535 = load i8*, i8** %48
 %536 = getelementptr i8, i8* %535, i64 3
 store i8 %534, i8* %536
 %537 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %538 = getelementptr i8, i8* %537, i64 8
 %539 = load i64, i64* %80
 store i8* %538, i8** %44
 store i64 %539, i64* %45
 %540 = load i8*, i8** %44
 %541 = load i64, i64* %45
 %542 = trunc i64 %541 to i32
 store i8* %540, i8** %40
 store i32 %542, i32* %41
 %543 = load i32, i32* %41
 %544 = trunc i32 %543 to i8
 %545 = load i8*, i8** %40
 store i8 %544, i8* %545
 %546 = load i32, i32* %41
 %547 = lshr i32 %546, 8
 %548 = trunc i32 %547 to i8
 %549 = load i8*, i8** %40
 %550 = getelementptr i8, i8* %549, i64 1
 store i8 %548, i8* %550
 %551 = load i32, i32* %41
 %552 = lshr i32 %551, 16
 %553 = trunc i32 %552 to i8
 %554 = load i8*, i8** %40
 %555 = getelementptr i8, i8* %554, i64 2
 store i8 %553, i8* %555
 %556 = load i32, i32* %41
 %557 = lshr i32 %556, 24
 %558 = trunc i32 %557 to i8
 %559 = load i8*, i8** %40
 %560 = getelementptr i8, i8* %559, i64 3
 store i8 %558, i8* %560
 %561 = load i8*, i8** %44
 %562 = getelementptr i8, i8* %561, i64 4
 %563 = load i64, i64* %45
 %564 = lshr i64 %563, 32
 %565 = trunc i64 %564 to i32
 store i8* %562, i8** %42
 store i32 %565, i32* %43
 %566 = load i32, i32* %43
 %567 = trunc i32 %566 to i8
 %568 = load i8*, i8** %42
 store i8 %567, i8* %568
 %569 = load i32, i32* %43
 %570 = lshr i32 %569, 8
 %571 = trunc i32 %570 to i8
 %572 = load i8*, i8** %42
 %573 = getelementptr i8, i8* %572, i64 1
 store i8 %571, i8* %573
 %574 = load i32, i32* %43
 %575 = lshr i32 %574, 16
 %576 = trunc i32 %575 to i8
 %577 = load i8*, i8** %42
 %578 = getelementptr i8, i8* %577, i64 2
 store i8 %576, i8* %578
 %579 = load i32, i32* %43
 %580 = lshr i32 %579, 24
 %581 = trunc i32 %580 to i8
 %582 = load i8*, i8** %42
 %583 = getelementptr i8, i8* %582, i64 3
 store i8 %581, i8* %583
 %584 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %585 = getelementptr i8, i8* %584, i64 16
 store i8* %585, i8** %50
 store i32 1, i32* %51
 %586 = load i32, i32* %51
 %587 = trunc i32 %586 to i8
 %588 = load i8*, i8** %50
 store i8 %587, i8* %588
 %589 = load i32, i32* %51
 %590 = lshr i32 %589, 8
 %591 = trunc i32 %590 to i8
 %592 = load i8*, i8** %50
 %593 = getelementptr i8, i8* %592, i64 1
 store i8 %591, i8* %593
 %594 = load i32, i32* %51
 %595 = lshr i32 %594, 16
 %596 = trunc i32 %595 to i8
 %597 = load i8*, i8** %50
 %598 = getelementptr i8, i8* %597, i64 2
 store i8 %596, i8* %598
 %599 = load i32, i32* %51
 %600 = lshr i32 %599, 24
 %601 = trunc i32 %600 to i8
 %602 = load i8*, i8** %50
 %603 = getelementptr i8, i8* %602, i64 3
 store i8 %601, i8* %603
 %604 = load i8*, i8** %75
 %605 = getelementptr %struct.mz_zip_archive, i8* %604, i32 0, i32 12
 %606 = load i8*, i8** %605
 %607 = load i8*, i8** %75
 %608 = getelementptr %struct.mz_zip_archive, i8* %607, i32 0, i32 14
 %609 = load i8*, i8** %608
 %610 = load i8*, i8** %75
 %611 = getelementptr %struct.mz_zip_archive, i8* %610, i32 0, i32 0
 %612 = load i64, i64* %611
 %613 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %614 = call i64 %606 (i8* %609, i64 %612, i8* %613, i64 20)
 %615 = icmp ne i64 %614, 20
 br i1 %615, label %616, label %625
616:
 %617 = load i8*, i8** %75
 store i8* %617, i8** %68
 store i32 19, i32* %69
 %618 = load i8*, i8** %68
 %619 = icmp ne i8* %618, null
 br i1 %619, label %620, label %624
620:
 %621 = load i32, i32* %69
 %622 = load i8*, i8** %68
 %623 = getelementptr %struct.mz_zip_archive, i8* %622, i32 0, i32 5
 store i32 %621, i32* %623
 br label %624
624:
 store i32 0, i32* %74
 br label %802
625:
 %626 = load i8*, i8** %75
 %627 = getelementptr %struct.mz_zip_archive, i8* %626, i32 0, i32 0
 %628 = load i64, i64* %627
 %629 = add i64 %628, 20
 store i64 %629, i64* %627
 br label %630
630:
 %631 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 call void @memset (i8* %631, i8 0, i64 256, i1 0)
 %632 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %633 = getelementptr i8, i8* %632, i64 0
 store i8* %633, i8** %52
 store i32 101010256, i32* %53
 %634 = load i32, i32* %53
 %635 = trunc i32 %634 to i8
 %636 = load i8*, i8** %52
 store i8 %635, i8* %636
 %637 = load i32, i32* %53
 %638 = lshr i32 %637, 8
 %639 = trunc i32 %638 to i8
 %640 = load i8*, i8** %52
 %641 = getelementptr i8, i8* %640, i64 1
 store i8 %639, i8* %641
 %642 = load i32, i32* %53
 %643 = lshr i32 %642, 16
 %644 = trunc i32 %643 to i8
 %645 = load i8*, i8** %52
 %646 = getelementptr i8, i8* %645, i64 2
 store i8 %644, i8* %646
 %647 = load i32, i32* %53
 %648 = lshr i32 %647, 24
 %649 = trunc i32 %648 to i8
 %650 = load i8*, i8** %52
 %651 = getelementptr i8, i8* %650, i64 3
 store i8 %649, i8* %651
 %652 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %653 = getelementptr i8, i8* %652, i64 8
 %654 = load i8*, i8** %75
 %655 = getelementptr %struct.mz_zip_archive, i8* %654, i32 0, i32 2
 %656 = load i32, i32* %655
 %657 = icmp ult i32 65535, %656
 br i1 %657, label %658, label %659
658:
 br label %663
659:
 %660 = load i8*, i8** %75
 %661 = getelementptr %struct.mz_zip_archive, i8* %660, i32 0, i32 2
 %662 = load i32, i32* %661
 br label %663
663:
 %664 = phi i32 [65535, %658], [%662, %659]
 %665 = trunc i32 %664 to i16
 store i8* %653, i8** %6
 store i16 %665, i16* %7
 %666 = load i16, i16* %7
 %667 = trunc i16 %666 to i8
 %668 = load i8*, i8** %6
 store i8 %667, i8* %668
 %669 = load i16, i16* %7
 %670 = zext i16 %669 to i32
 %671 = ashr i32 %670, 8
 %672 = trunc i32 %671 to i8
 %673 = load i8*, i8** %6
 %674 = getelementptr i8, i8* %673, i64 1
 store i8 %672, i8* %674
 %675 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %676 = getelementptr i8, i8* %675, i64 10
 %677 = load i8*, i8** %75
 %678 = getelementptr %struct.mz_zip_archive, i8* %677, i32 0, i32 2
 %679 = load i32, i32* %678
 %680 = icmp ult i32 65535, %679
 br i1 %680, label %681, label %682
681:
 br label %686
682:
 %683 = load i8*, i8** %75
 %684 = getelementptr %struct.mz_zip_archive, i8* %683, i32 0, i32 2
 %685 = load i32, i32* %684
 br label %686
686:
 %687 = phi i32 [65535, %681], [%685, %682]
 %688 = trunc i32 %687 to i16
 store i8* %676, i8** %8
 store i16 %688, i16* %9
 %689 = load i16, i16* %9
 %690 = trunc i16 %689 to i8
 %691 = load i8*, i8** %8
 store i8 %690, i8* %691
 %692 = load i16, i16* %9
 %693 = zext i16 %692 to i32
 %694 = ashr i32 %693, 8
 %695 = trunc i32 %694 to i8
 %696 = load i8*, i8** %8
 %697 = getelementptr i8, i8* %696, i64 1
 store i8 %695, i8* %697
 %698 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %699 = getelementptr i8, i8* %698, i64 12
 %700 = load i64, i64* %78
 %701 = icmp ult i64 4294967295, %700
 br i1 %701, label %702, label %703
702:
 br label %705
703:
 %704 = load i64, i64* %78
 br label %705
705:
 %706 = phi i64 [4294967295, %702], [%704, %703]
 %707 = trunc i64 %706 to i32
 store i8* %699, i8** %54
 store i32 %707, i32* %55
 %708 = load i32, i32* %55
 %709 = trunc i32 %708 to i8
 %710 = load i8*, i8** %54
 store i8 %709, i8* %710
 %711 = load i32, i32* %55
 %712 = lshr i32 %711, 8
 %713 = trunc i32 %712 to i8
 %714 = load i8*, i8** %54
 %715 = getelementptr i8, i8* %714, i64 1
 store i8 %713, i8* %715
 %716 = load i32, i32* %55
 %717 = lshr i32 %716, 16
 %718 = trunc i32 %717 to i8
 %719 = load i8*, i8** %54
 %720 = getelementptr i8, i8* %719, i64 2
 store i8 %718, i8* %720
 %721 = load i32, i32* %55
 %722 = lshr i32 %721, 24
 %723 = trunc i32 %722 to i8
 %724 = load i8*, i8** %54
 %725 = getelementptr i8, i8* %724, i64 3
 store i8 %723, i8* %725
 %726 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %727 = getelementptr i8, i8* %726, i64 16
 %728 = load i64, i64* %77
 %729 = icmp ult i64 4294967295, %728
 br i1 %729, label %730, label %731
730:
 br label %733
731:
 %732 = load i64, i64* %77
 br label %733
733:
 %734 = phi i64 [4294967295, %730], [%732, %731]
 %735 = trunc i64 %734 to i32
 store i8* %727, i8** %56
 store i32 %735, i32* %57
 %736 = load i32, i32* %57
 %737 = trunc i32 %736 to i8
 %738 = load i8*, i8** %56
 store i8 %737, i8* %738
 %739 = load i32, i32* %57
 %740 = lshr i32 %739, 8
 %741 = trunc i32 %740 to i8
 %742 = load i8*, i8** %56
 %743 = getelementptr i8, i8* %742, i64 1
 store i8 %741, i8* %743
 %744 = load i32, i32* %57
 %745 = lshr i32 %744, 16
 %746 = trunc i32 %745 to i8
 %747 = load i8*, i8** %56
 %748 = getelementptr i8, i8* %747, i64 2
 store i8 %746, i8* %748
 %749 = load i32, i32* %57
 %750 = lshr i32 %749, 24
 %751 = trunc i32 %750 to i8
 %752 = load i8*, i8** %56
 %753 = getelementptr i8, i8* %752, i64 3
 store i8 %751, i8* %753
 %754 = load i8*, i8** %75
 %755 = getelementptr %struct.mz_zip_archive, i8* %754, i32 0, i32 12
 %756 = load i8*, i8** %755
 %757 = load i8*, i8** %75
 %758 = getelementptr %struct.mz_zip_archive, i8* %757, i32 0, i32 14
 %759 = load i8*, i8** %758
 %760 = load i8*, i8** %75
 %761 = getelementptr %struct.mz_zip_archive, i8* %760, i32 0, i32 0
 %762 = load i64, i64* %761
 %763 = getelementptr [256 x i8], i8* %79, i64 0, i64 0
 %764 = call i64 %756 (i8* %759, i64 %762, i8* %763, i64 22)
 %765 = icmp ne i64 %764, 22
 br i1 %765, label %766, label %775
766:
 %767 = load i8*, i8** %75
 store i8* %767, i8** %70
 store i32 19, i32* %71
 %768 = load i8*, i8** %70
 %769 = icmp ne i8* %768, null
 br i1 %769, label %770, label %774
770:
 %771 = load i32, i32* %71
 %772 = load i8*, i8** %70
 %773 = getelementptr %struct.mz_zip_archive, i8* %772, i32 0, i32 5
 store i32 %771, i32* %773
 br label %774
774:
 store i32 0, i32* %74
 br label %802
775:
 %776 = load i8*, i8** %76
 %777 = getelementptr %struct.mz_zip_internal_state_tag, i8* %776, i32 0, i32 6
 %778 = load i8*, i8** %777
 %779 = icmp ne i8* %778, null
 br i1 %779, label %780, label %795
780:
 %781 = load i8*, i8** %76
 %782 = getelementptr %struct.mz_zip_internal_state_tag, i8* %781, i32 0, i32 6
 %783 = load i8*, i8** %782
 %784 = call i32 @fflush (i8* %783)
 %785 = icmp eq i32 %784, -1
 br i1 %785, label %786, label %795
786:
 %787 = load i8*, i8** %75
 store i8* %787, i8** %72
 store i32 21, i32* %73
 %788 = load i8*, i8** %72
 %789 = icmp ne i8* %788, null
 br i1 %789, label %790, label %794
790:
 %791 = load i32, i32* %73
 %792 = load i8*, i8** %72
 %793 = getelementptr %struct.mz_zip_archive, i8* %792, i32 0, i32 5
 store i32 %791, i32* %793
 br label %794
794:
 store i32 0, i32* %74
 br label %802
795:
 %796 = load i8*, i8** %75
 %797 = getelementptr %struct.mz_zip_archive, i8* %796, i32 0, i32 0
 %798 = load i64, i64* %797
 %799 = add i64 %798, 22
 store i64 %799, i64* %797
 %800 = load i8*, i8** %75
 %801 = getelementptr %struct.mz_zip_archive, i8* %800, i32 0, i32 3
 store i32 3, i32* %801
 store i32 1, i32* %74
 br label %802
802:
 %803 = load i32, i32* %74
 ret i32 %803
}

define i32 @mz_zip_writer_finalize_heap_archive (i8* %0, i8* %1, i8* %2) {
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i32
 %11 = alloca i8*
 %12 = alloca i8*
 %13 = alloca i8*
 store i8* %0, i8** %11
 store i8* %1, i8** %12
 store i8* %2, i8** %13
 %14 = load i8*, i8** %12
 %15 = icmp ne i8* %14, null
 br i1 %15, label %16, label %19
16:
 %17 = load i8*, i8** %13
 %18 = icmp ne i8* %17, null
 br i1 %18, label %28, label %19
19:
 %20 = load i8*, i8** %11
 store i8* %20, i8** %4
 store i32 24, i32* %5
 %21 = load i8*, i8** %4
 %22 = icmp ne i8* %21, null
 br i1 %22, label %23, label %27
23:
 %24 = load i32, i32* %5
 %25 = load i8*, i8** %4
 %26 = getelementptr %struct.mz_zip_archive, i8* %25, i32 0, i32 5
 store i32 %24, i32* %26
 br label %27
27:
 store i32 0, i32* %10
 br label %91
28:
 %29 = load i8*, i8** %12
 store i8* null, i8** %29
 %30 = load i8*, i8** %13
 store i64 0, i64* %30
 %31 = load i8*, i8** %11
 %32 = icmp ne i8* %31, null
 br i1 %32, label %33, label %38
33:
 %34 = load i8*, i8** %11
 %35 = getelementptr %struct.mz_zip_archive, i8* %34, i32 0, i32 15
 %36 = load i8*, i8** %35
 %37 = icmp ne i8* %36, null
 br i1 %37, label %47, label %38
38:
 %39 = load i8*, i8** %11
 store i8* %39, i8** %6
 store i32 24, i32* %7
 %40 = load i8*, i8** %6
 %41 = icmp ne i8* %40, null
 br i1 %41, label %42, label %46
42:
 %43 = load i32, i32* %7
 %44 = load i8*, i8** %6
 %45 = getelementptr %struct.mz_zip_archive, i8* %44, i32 0, i32 5
 store i32 %43, i32* %45
 br label %46
46:
 store i32 0, i32* %10
 br label %91
47:
 %48 = load i8*, i8** %11
 %49 = getelementptr %struct.mz_zip_archive, i8* %48, i32 0, i32 12
 %50 = load i8*, i8** %49
 %51 = icmp ne i8* %50, @mz_zip_heap_write_func
 br i1 %51, label %52, label %61
52:
 %53 = load i8*, i8** %11
 store i8* %53, i8** %8
 store i32 24, i32* %9
 %54 = load i8*, i8** %8
 %55 = icmp ne i8* %54, null
 br i1 %55, label %56, label %60
56:
 %57 = load i32, i32* %9
 %58 = load i8*, i8** %8
 %59 = getelementptr %struct.mz_zip_archive, i8* %58, i32 0, i32 5
 store i32 %57, i32* %59
 br label %60
60:
 store i32 0, i32* %10
 br label %91
61:
 %62 = load i8*, i8** %11
 %63 = call i32 @mz_zip_writer_finalize_archive (i8* %62)
 %64 = icmp ne i32 %63, 0
 br i1 %64, label %66, label %65
65:
 store i32 0, i32* %10
 br label %91
66:
 %67 = load i8*, i8** %11
 %68 = getelementptr %struct.mz_zip_archive, i8* %67, i32 0, i32 15
 %69 = load i8*, i8** %68
 %70 = getelementptr %struct.mz_zip_internal_state_tag, i8* %69, i32 0, i32 8
 %71 = load i8*, i8** %70
 %72 = load i8*, i8** %12
 store i8* %71, i8** %72
 %73 = load i8*, i8** %11
 %74 = getelementptr %struct.mz_zip_archive, i8* %73, i32 0, i32 15
 %75 = load i8*, i8** %74
 %76 = getelementptr %struct.mz_zip_internal_state_tag, i8* %75, i32 0, i32 9
 %77 = load i64, i64* %76
 %78 = load i8*, i8** %13
 store i64 %77, i64* %78
 %79 = load i8*, i8** %11
 %80 = getelementptr %struct.mz_zip_archive, i8* %79, i32 0, i32 15
 %81 = load i8*, i8** %80
 %82 = getelementptr %struct.mz_zip_internal_state_tag, i8* %81, i32 0, i32 8
 store i8* null, i8** %82
 %83 = load i8*, i8** %11
 %84 = getelementptr %struct.mz_zip_archive, i8* %83, i32 0, i32 15
 %85 = load i8*, i8** %84
 %86 = getelementptr %struct.mz_zip_internal_state_tag, i8* %85, i32 0, i32 10
 store i64 0, i64* %86
 %87 = load i8*, i8** %11
 %88 = getelementptr %struct.mz_zip_archive, i8* %87, i32 0, i32 15
 %89 = load i8*, i8** %88
 %90 = getelementptr %struct.mz_zip_internal_state_tag, i8* %89, i32 0, i32 9
 store i64 0, i64* %90
 store i32 1, i32* %10
 br label %91
91:
 %92 = load i32, i32* %10
 ret i32 %92
}

define i32 @mz_zip_add_mem_to_archive_file_in_place (i8* %0, i8* %1, i8* %2, i64 %3, i8* %4, i16 %5, i32 %6) {
 %8 = alloca i8*
 %9 = alloca i8*
 %10 = alloca i8*
 %11 = alloca i64
 %12 = alloca i8*
 %13 = alloca i16
 %14 = alloca i32
 store i8* %0, i8** %8
 store i8* %1, i8** %9
 store i8* %2, i8** %10
 store i64 %3, i64* %11
 store i8* %4, i8** %12
 store i16 %5, i16* %13
 store i32 %6, i32* %14
 %15 = load i8*, i8** %8
 %16 = load i8*, i8** %9
 %17 = load i8*, i8** %10
 %18 = load i64, i64* %11
 %19 = load i8*, i8** %12
 %20 = load i16, i16* %13
 %21 = load i32, i32* %14
 %22 = call i32 @mz_zip_add_mem_to_archive_file_in_place_v2 (i8* %15, i8* %16, i8* %17, i64 %18, i8* %19, i16 %20, i32 %21, i8* null)
 ret i32 %22
}

define i32 @mz_zip_add_mem_to_archive_file_in_place_v2 (i8* %0, i8* %1, i8* %2, i64 %3, i8* %4, i16 %5, i32 %6, i8* %7) {
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i8*
 %12 = alloca i8*
 %13 = alloca i64
 %14 = alloca i8*
 %15 = alloca i16
 %16 = alloca i32
 %17 = alloca i8*
 %18 = alloca i32
 %19 = alloca i32
 %20 = alloca %struct.mz_zip_archive
 %21 = alloca %struct.stat
 %22 = alloca i32
 %23 = alloca i32
 store i8* %0, i8** %10
 store i8* %1, i8** %11
 store i8* %2, i8** %12
 store i64 %3, i64* %13
 store i8* %4, i8** %14
 store i16 %5, i16* %15
 store i32 %6, i32* %16
 store i8* %7, i8** %17
 store i32 0, i32* %19
 store i32 0, i32* %22
 call void @mz_zip_zero_struct (i8* %20)
 %24 = load i32, i32* %16
 %25 = icmp slt i32 %24, 0
 br i1 %25, label %26, label %27
26:
 store i32 6, i32* %16
 br label %27
27:
 %28 = load i8*, i8** %10
 %29 = icmp ne i8* %28, null
 br i1 %29, label %30, label %50
30:
 %31 = load i8*, i8** %11
 %32 = icmp ne i8* %31, null
 br i1 %32, label %33, label %50
33:
 %34 = load i64, i64* %13
 %35 = icmp ne i64 %34, 0
 br i1 %35, label %36, label %39
36:
 %37 = load i8*, i8** %12
 %38 = icmp ne i8* %37, null
 br i1 %38, label %39, label %50
39:
 %40 = load i16, i16* %15
 %41 = zext i16 %40 to i32
 %42 = icmp ne i32 %41, 0
 br i1 %42, label %43, label %46
43:
 %44 = load i8*, i8** %14
 %45 = icmp ne i8* %44, null
 br i1 %45, label %46, label %50
46:
 %47 = load i32, i32* %16
 %48 = and i32 %47, 15
 %49 = icmp ugt i32 %48, 10
 br i1 %49, label %50, label %56
50:
 %51 = load i8*, i8** %17
 %52 = icmp ne i8* %51, null
 br i1 %52, label %53, label %55
53:
 %54 = load i8*, i8** %17
 store i32 24, i32* %54
 br label %55
55:
 store i32 0, i32* %9
 br label %161
56:
 %57 = load i8*, i8** %11
 %58 = call i32 @mz_zip_writer_validate_archive_name (i8* %57)
 %59 = icmp ne i32 %58, 0
 br i1 %59, label %66, label %60
60:
 %61 = load i8*, i8** %17
 %62 = icmp ne i8* %61, null
 br i1 %62, label %63, label %65
63:
 %64 = load i8*, i8** %17
 store i32 25, i32* %64
 br label %65
65:
 store i32 0, i32* %9
 br label %161
66:
 %67 = load i8*, i8** %10
 %68 = call i32 @stat (i8* %67, i8* %21)
 %69 = icmp ne i32 %68, 0
 br i1 %69, label %70, label %84
70:
 %71 = load i8*, i8** %10
 %72 = load i32, i32* %16
 %73 = call i32 @mz_zip_writer_init_file_v2 (i8* %20, i8* %71, i64 0, i32 %72)
 %74 = icmp ne i32 %73, 0
 br i1 %74, label %83, label %75
75:
 %76 = load i8*, i8** %17
 %77 = icmp ne i8* %76, null
 br i1 %77, label %78, label %82
78:
 %79 = getelementptr %struct.mz_zip_archive, i8* %20, i32 0, i32 5
 %80 = load i32, i32* %79
 %81 = load i8*, i8** %17
 store i32 %80, i32* %81
 br label %82
82:
 store i32 0, i32* %9
 br label %161
83:
 store i32 1, i32* %19
 br label %113
84:
 %85 = load i8*, i8** %10
 %86 = load i32, i32* %16
 %87 = or i32 %86, 2048
 %88 = call i32 @mz_zip_reader_init_file_v2 (i8* %20, i8* %85, i32 %87, i64 0, i64 0)
 %89 = icmp ne i32 %88, 0
 br i1 %89, label %98, label %90
90:
 %91 = load i8*, i8** %17
 %92 = icmp ne i8* %91, null
 br i1 %92, label %93, label %97
93:
 %94 = getelementptr %struct.mz_zip_archive, i8* %20, i32 0, i32 5
 %95 = load i32, i32* %94
 %96 = load i8*, i8** %17
 store i32 %95, i32* %96
 br label %97
97:
 store i32 0, i32* %9
 br label %161
98:
 %99 = load i8*, i8** %10
 %100 = load i32, i32* %16
 %101 = call i32 @mz_zip_writer_init_from_reader_v2 (i8* %20, i8* %99, i32 %100)
 %102 = icmp ne i32 %101, 0
 br i1 %102, label %112, label %103
103:
 %104 = load i8*, i8** %17
 %105 = icmp ne i8* %104, null
 br i1 %105, label %106, label %110
106:
 %107 = getelementptr %struct.mz_zip_archive, i8* %20, i32 0, i32 5
 %108 = load i32, i32* %107
 %109 = load i8*, i8** %17
 store i32 %108, i32* %109
 br label %110
110:
 %111 = call i32 @mz_zip_reader_end_internal (i8* %20, i32 0)
 store i32 0, i32* %9
 br label %161
112:
 br label %113
113:
 %114 = load i8*, i8** %11
 %115 = load i8*, i8** %12
 %116 = load i64, i64* %13
 %117 = load i8*, i8** %14
 %118 = load i16, i16* %15
 %119 = load i32, i32* %16
 %120 = call i32 @mz_zip_writer_add_mem_ex (i8* %20, i8* %114, i8* %115, i64 %116, i8* %117, i16 %118, i32 %119, i64 0, i32 0)
 store i32 %120, i32* %18
 %121 = getelementptr %struct.mz_zip_archive, i8* %20, i32 0, i32 5
 %122 = load i32, i32* %121
 store i32 %122, i32* %22
 %123 = call i32 @mz_zip_writer_finalize_archive (i8* %20)
 %124 = icmp ne i32 %123, 0
 br i1 %124, label %132, label %125
125:
 %126 = load i32, i32* %22
 %127 = icmp ne i32 %126, 0
 br i1 %127, label %131, label %128
128:
 %129 = getelementptr %struct.mz_zip_archive, i8* %20, i32 0, i32 5
 %130 = load i32, i32* %129
 store i32 %130, i32* %22
 br label %131
131:
 store i32 0, i32* %18
 br label %132
132:
 %133 = load i32, i32* %18
 %134 = call i32 @mz_zip_writer_end_internal (i8* %20, i32 %133)
 %135 = icmp ne i32 %134, 0
 br i1 %135, label %143, label %136
136:
 %137 = load i32, i32* %22
 %138 = icmp ne i32 %137, 0
 br i1 %138, label %142, label %139
139:
 %140 = getelementptr %struct.mz_zip_archive, i8* %20, i32 0, i32 5
 %141 = load i32, i32* %140
 store i32 %141, i32* %22
 br label %142
142:
 store i32 0, i32* %18
 br label %143
143:
 %144 = load i32, i32* %18
 %145 = icmp ne i32 %144, 0
 br i1 %145, label %153, label %146
146:
 %147 = load i32, i32* %19
 %148 = icmp ne i32 %147, 0
 br i1 %148, label %149, label %153
149:
 %150 = load i8*, i8** %10
 %151 = call i32 @remove (i8* %150)
 store i32 %151, i32* %23
 %152 = load i32, i32* %23
 br label %153
153:
 %154 = load i8*, i8** %17
 %155 = icmp ne i8* %154, null
 br i1 %155, label %156, label %159
156:
 %157 = load i32, i32* %22
 %158 = load i8*, i8** %17
 store i32 %157, i32* %158
 br label %159
159:
 %160 = load i32, i32* %18
 store i32 %160, i32* %9
 br label %161
161:
 %162 = load i32, i32* %9
 ret i32 %162
}

define i8* @mz_zip_extract_archive_file_to_heap_v2 (i8* %0, i8* %1, i8* %2, i8* %3, i32 %4, i8* %5) {
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i8*
 %10 = alloca i8*
 %11 = alloca i8*
 %12 = alloca i32
 %13 = alloca i8*
 %14 = alloca i32
 %15 = alloca %struct.mz_zip_archive
 %16 = alloca i8*
 store i8* %0, i8** %8
 store i8* %1, i8** %9
 store i8* %2, i8** %10
 store i8* %3, i8** %11
 store i32 %4, i32* %12
 store i8* %5, i8** %13
 store i8* null, i8** %16
 %17 = load i8*, i8** %11
 %18 = icmp ne i8* %17, null
 br i1 %18, label %19, label %21
19:
 %20 = load i8*, i8** %11
 store i64 0, i64* %20
 br label %21
21:
 %22 = load i8*, i8** %8
 %23 = icmp ne i8* %22, null
 br i1 %23, label %24, label %27
24:
 %25 = load i8*, i8** %9
 %26 = icmp ne i8* %25, null
 br i1 %26, label %33, label %27
27:
 %28 = load i8*, i8** %13
 %29 = icmp ne i8* %28, null
 br i1 %29, label %30, label %32
30:
 %31 = load i8*, i8** %13
 store i32 24, i32* %31
 br label %32
32:
 store i8* null, i8** %7
 br label %71
33:
 call void @mz_zip_zero_struct (i8* %15)
 %34 = load i8*, i8** %8
 %35 = load i32, i32* %12
 %36 = or i32 %35, 2048
 %37 = call i32 @mz_zip_reader_init_file_v2 (i8* %15, i8* %34, i32 %36, i64 0, i64 0)
 %38 = icmp ne i32 %37, 0
 br i1 %38, label %47, label %39
39:
 %40 = load i8*, i8** %13
 %41 = icmp ne i8* %40, null
 br i1 %41, label %42, label %46
42:
 %43 = getelementptr %struct.mz_zip_archive, i8* %15, i32 0, i32 5
 %44 = load i32, i32* %43
 %45 = load i8*, i8** %13
 store i32 %44, i32* %45
 br label %46
46:
 store i8* null, i8** %7
 br label %71
47:
 %48 = load i8*, i8** %9
 %49 = load i8*, i8** %10
 %50 = load i32, i32* %12
 %51 = call i32 @mz_zip_reader_locate_file_v2 (i8* %15, i8* %48, i8* %49, i32 %50, i8* %14)
 %52 = icmp ne i32 %51, 0
 br i1 %52, label %53, label %58
53:
 %54 = load i32, i32* %14
 %55 = load i8*, i8** %11
 %56 = load i32, i32* %12
 %57 = call i8* @mz_zip_reader_extract_to_heap (i8* %15, i32 %54, i8* %55, i32 %56)
 store i8* %57, i8** %16
 br label %58
58:
 %59 = load i8*, i8** %16
 %60 = icmp ne i8* %59, null
 %61 = zext i1 %60 to i32
 %62 = call i32 @mz_zip_reader_end_internal (i8* %15, i32 %61)
 %63 = load i8*, i8** %13
 %64 = icmp ne i8* %63, null
 br i1 %64, label %65, label %69
65:
 %66 = getelementptr %struct.mz_zip_archive, i8* %15, i32 0, i32 5
 %67 = load i32, i32* %66
 %68 = load i8*, i8** %13
 store i32 %67, i32* %68
 br label %69
69:
 %70 = load i8*, i8** %16
 store i8* %70, i8** %7
 br label %71
71:
 %72 = load i8*, i8** %7
 ret i8* %72
}

define i8* @mz_zip_extract_archive_file_to_heap (i8* %0, i8* %1, i8* %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i32
 store i8* %0, i8** %5
 store i8* %1, i8** %6
 store i8* %2, i8** %7
 store i32 %3, i32* %8
 %9 = load i8*, i8** %5
 %10 = load i8*, i8** %6
 %11 = load i8*, i8** %7
 %12 = load i32, i32* %8
 %13 = call i8* @mz_zip_extract_archive_file_to_heap_v2 (i8* %9, i8* %10, i8* null, i8* %11, i32 %12, i8* null)
 ret i8* %13
}

define i32 @mz_zip_get_mode (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 %4 = icmp ne i8* %3, null
 br i1 %4, label %5, label %9
5:
 %6 = load i8*, i8** %2
 %7 = getelementptr %struct.mz_zip_archive, i8* %6, i32 0, i32 3
 %8 = load i32, i32* %7
 br label %10
9:
 br label %10
10:
 %11 = phi i32 [%8, %5], [0, %9]
 ret i32 %11
}

define i32 @mz_zip_get_type (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 %4 = icmp ne i8* %3, null
 br i1 %4, label %5, label %9
5:
 %6 = load i8*, i8** %2
 %7 = getelementptr %struct.mz_zip_archive, i8* %6, i32 0, i32 4
 %8 = load i32, i32* %7
 br label %10
9:
 br label %10
10:
 %11 = phi i32 [%8, %5], [0, %9]
 ret i32 %11
}

define i32 @mz_zip_set_last_error (i8* %0, i32 %1) {
 %3 = alloca i32
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i32
 store i8* %0, i8** %4
 store i32 %1, i32* %5
 %7 = load i8*, i8** %4
 %8 = icmp ne i8* %7, null
 br i1 %8, label %10, label %9
9:
 store i32 24, i32* %3
 br label %18
10:
 %11 = load i8*, i8** %4
 %12 = getelementptr %struct.mz_zip_archive, i8* %11, i32 0, i32 5
 %13 = load i32, i32* %12
 store i32 %13, i32* %6
 %14 = load i32, i32* %5
 %15 = load i8*, i8** %4
 %16 = getelementptr %struct.mz_zip_archive, i8* %15, i32 0, i32 5
 store i32 %14, i32* %16
 %17 = load i32, i32* %6
 store i32 %17, i32* %3
 br label %18
18:
 %19 = load i32, i32* %3
 ret i32 %19
}

define i32 @mz_zip_peek_last_error (i8* %0) {
 %2 = alloca i32
 %3 = alloca i8*
 store i8* %0, i8** %3
 %4 = load i8*, i8** %3
 %5 = icmp ne i8* %4, null
 br i1 %5, label %7, label %6
6:
 store i32 24, i32* %2
 br label %11
7:
 %8 = load i8*, i8** %3
 %9 = getelementptr %struct.mz_zip_archive, i8* %8, i32 0, i32 5
 %10 = load i32, i32* %9
 store i32 %10, i32* %2
 br label %11
11:
 %12 = load i32, i32* %2
 ret i32 %12
}

define i32 @mz_zip_clear_last_error (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 %4 = call i32 @mz_zip_set_last_error (i8* %3, i32 0)
 ret i32 %4
}

define i32 @mz_zip_get_last_error (i8* %0) {
 %2 = alloca i32
 %3 = alloca i8*
 %4 = alloca i32
 store i8* %0, i8** %3
 %5 = load i8*, i8** %3
 %6 = icmp ne i8* %5, null
 br i1 %6, label %8, label %7
7:
 store i32 24, i32* %2
 br label %15
8:
 %9 = load i8*, i8** %3
 %10 = getelementptr %struct.mz_zip_archive, i8* %9, i32 0, i32 5
 %11 = load i32, i32* %10
 store i32 %11, i32* %4
 %12 = load i8*, i8** %3
 %13 = getelementptr %struct.mz_zip_archive, i8* %12, i32 0, i32 5
 store i32 0, i32* %13
 %14 = load i32, i32* %4
 store i32 %14, i32* %2
 br label %15
15:
 %16 = load i32, i32* %2
 ret i32 %16
}

define i8* @mz_zip_get_error_string (i32 %0) {
 %2 = alloca i8*
 %3 = alloca i32
 store i32 %0, i32* %3
 %4 = load i32, i32* %3
 switch i32 %4, label %38 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
    i32 6, label %11
    i32 7, label %12
    i32 8, label %13
    i32 9, label %14
    i32 10, label %15
    i32 11, label %16
    i32 12, label %17
    i32 13, label %18
    i32 14, label %19
    i32 15, label %20
    i32 16, label %21
    i32 17, label %22
    i32 18, label %23
    i32 19, label %24
    i32 20, label %25
    i32 21, label %26
    i32 22, label %27
    i32 23, label %28
    i32 24, label %29
    i32 25, label %30
    i32 26, label %31
    i32 27, label %32
    i32 28, label %33
    i32 29, label %34
    i32 30, label %35
    i32 31, label %36
    i32 32, label %37
  ]
5:
 store i8* @.str.25, i8** %2
 br label %40
6:
 store i8* @.str.26, i8** %2
 br label %40
7:
 store i8* @.str.27, i8** %2
 br label %40
8:
 store i8* @.str.28, i8** %2
 br label %40
9:
 store i8* @.str.29, i8** %2
 br label %40
10:
 store i8* @.str.30, i8** %2
 br label %40
11:
 store i8* @.str.31, i8** %2
 br label %40
12:
 store i8* @.str.32, i8** %2
 br label %40
13:
 store i8* @.str.33, i8** %2
 br label %40
14:
 store i8* @.str.34, i8** %2
 br label %40
15:
 store i8* @.str.35, i8** %2
 br label %40
16:
 store i8* @.str.36, i8** %2
 br label %40
17:
 store i8* @.str.37, i8** %2
 br label %40
18:
 store i8* @.str.38, i8** %2
 br label %40
19:
 store i8* @.str.39, i8** %2
 br label %40
20:
 store i8* @.str.40, i8** %2
 br label %40
21:
 store i8* @.str.41, i8** %2
 br label %40
22:
 store i8* @.str.42, i8** %2
 br label %40
23:
 store i8* @.str.43, i8** %2
 br label %40
24:
 store i8* @.str.44, i8** %2
 br label %40
25:
 store i8* @.str.45, i8** %2
 br label %40
26:
 store i8* @.str.46, i8** %2
 br label %40
27:
 store i8* @.str.47, i8** %2
 br label %40
28:
 store i8* @.str.48, i8** %2
 br label %40
29:
 store i8* @.str.49, i8** %2
 br label %40
30:
 store i8* @.str.50, i8** %2
 br label %40
31:
 store i8* @.str.51, i8** %2
 br label %40
32:
 store i8* @.str.52, i8** %2
 br label %40
33:
 store i8* @.str.53, i8** %2
 br label %40
34:
 store i8* @.str.54, i8** %2
 br label %40
35:
 store i8* @.str.55, i8** %2
 br label %40
36:
 store i8* @.str.56, i8** %2
 br label %40
37:
 store i8* @.str.57, i8** %2
 br label %40
38:
 br label %39
39:
 store i8* @.str.58, i8** %2
 br label %40
40:
 %41 = load i8*, i8** %2
 ret i8* %41
}

define i32 @mz_zip_is_zip64 (i8* %0) {
 %2 = alloca i32
 %3 = alloca i8*
 store i8* %0, i8** %3
 %4 = load i8*, i8** %3
 %5 = icmp ne i8* %4, null
 br i1 %5, label %6, label %11
6:
 %7 = load i8*, i8** %3
 %8 = getelementptr %struct.mz_zip_archive, i8* %7, i32 0, i32 15
 %9 = load i8*, i8** %8
 %10 = icmp ne i8* %9, null
 br i1 %10, label %12, label %11
11:
 store i32 0, i32* %2
 br label %18
12:
 %13 = load i8*, i8** %3
 %14 = getelementptr %struct.mz_zip_archive, i8* %13, i32 0, i32 15
 %15 = load i8*, i8** %14
 %16 = getelementptr %struct.mz_zip_internal_state_tag, i8* %15, i32 0, i32 4
 %17 = load i32, i32* %16
 store i32 %17, i32* %2
 br label %18
18:
 %19 = load i32, i32* %2
 ret i32 %19
}

define i64 @mz_zip_get_central_dir_size (i8* %0) {
 %2 = alloca i64
 %3 = alloca i8*
 store i8* %0, i8** %3
 %4 = load i8*, i8** %3
 %5 = icmp ne i8* %4, null
 br i1 %5, label %6, label %11
6:
 %7 = load i8*, i8** %3
 %8 = getelementptr %struct.mz_zip_archive, i8* %7, i32 0, i32 15
 %9 = load i8*, i8** %8
 %10 = icmp ne i8* %9, null
 br i1 %10, label %12, label %11
11:
 store i64 0, i64* %2
 br label %19
12:
 %13 = load i8*, i8** %3
 %14 = getelementptr %struct.mz_zip_archive, i8* %13, i32 0, i32 15
 %15 = load i8*, i8** %14
 %16 = getelementptr %struct.mz_zip_internal_state_tag, i8* %15, i32 0, i32 0
 %17 = getelementptr %struct.mz_zip_array, i8* %16, i32 0, i32 1
 %18 = load i64, i64* %17
 store i64 %18, i64* %2
 br label %19
19:
 %20 = load i64, i64* %2
 ret i64 %20
}

define i32 @mz_zip_reader_get_num_files (i8* %0) {
 %2 = alloca i8*
 store i8* %0, i8** %2
 %3 = load i8*, i8** %2
 %4 = icmp ne i8* %3, null
 br i1 %4, label %5, label %9
5:
 %6 = load i8*, i8** %2
 %7 = getelementptr %struct.mz_zip_archive, i8* %6, i32 0, i32 2
 %8 = load i32, i32* %7
 br label %10
9:
 br label %10
10:
 %11 = phi i32 [%8, %5], [0, %9]
 ret i32 %11
}

define i64 @mz_zip_get_archive_size (i8* %0) {
 %2 = alloca i64
 %3 = alloca i8*
 store i8* %0, i8** %3
 %4 = load i8*, i8** %3
 %5 = icmp ne i8* %4, null
 br i1 %5, label %7, label %6
6:
 store i64 0, i64* %2
 br label %11
7:
 %8 = load i8*, i8** %3
 %9 = getelementptr %struct.mz_zip_archive, i8* %8, i32 0, i32 0
 %10 = load i64, i64* %9
 store i64 %10, i64* %2
 br label %11
11:
 %12 = load i64, i64* %2
 ret i64 %12
}

define i64 @mz_zip_get_archive_file_start_offset (i8* %0) {
 %2 = alloca i64
 %3 = alloca i8*
 store i8* %0, i8** %3
 %4 = load i8*, i8** %3
 %5 = icmp ne i8* %4, null
 br i1 %5, label %6, label %11
6:
 %7 = load i8*, i8** %3
 %8 = getelementptr %struct.mz_zip_archive, i8* %7, i32 0, i32 15
 %9 = load i8*, i8** %8
 %10 = icmp ne i8* %9, null
 br i1 %10, label %12, label %11
11:
 store i64 0, i64* %2
 br label %18
12:
 %13 = load i8*, i8** %3
 %14 = getelementptr %struct.mz_zip_archive, i8* %13, i32 0, i32 15
 %15 = load i8*, i8** %14
 %16 = getelementptr %struct.mz_zip_internal_state_tag, i8* %15, i32 0, i32 7
 %17 = load i64, i64* %16
 store i64 %17, i64* %2
 br label %18
18:
 %19 = load i64, i64* %2
 ret i64 %19
}

define i8* @mz_zip_get_cfile (i8* %0) {
 %2 = alloca i8*
 %3 = alloca i8*
 store i8* %0, i8** %3
 %4 = load i8*, i8** %3
 %5 = icmp ne i8* %4, null
 br i1 %5, label %6, label %11
6:
 %7 = load i8*, i8** %3
 %8 = getelementptr %struct.mz_zip_archive, i8* %7, i32 0, i32 15
 %9 = load i8*, i8** %8
 %10 = icmp ne i8* %9, null
 br i1 %10, label %12, label %11
11:
 store i8* null, i8** %2
 br label %18
12:
 %13 = load i8*, i8** %3
 %14 = getelementptr %struct.mz_zip_archive, i8* %13, i32 0, i32 15
 %15 = load i8*, i8** %14
 %16 = getelementptr %struct.mz_zip_internal_state_tag, i8* %15, i32 0, i32 6
 %17 = load i8*, i8** %16
 store i8* %17, i8** %2
 br label %18
18:
 %19 = load i8*, i8** %2
 ret i8* %19
}

define i64 @mz_zip_read_archive_data (i8* %0, i64 %1, i8* %2, i64 %3) {
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i64
 %8 = alloca i8*
 %9 = alloca i64
 %10 = alloca i8*
 %11 = alloca i64
 store i8* %0, i8** %8
 store i64 %1, i64* %9
 store i8* %2, i8** %10
 store i64 %3, i64* %11
 %12 = load i8*, i8** %8
 %13 = icmp ne i8* %12, null
 br i1 %13, label %14, label %27
14:
 %15 = load i8*, i8** %8
 %16 = getelementptr %struct.mz_zip_archive, i8* %15, i32 0, i32 15
 %17 = load i8*, i8** %16
 %18 = icmp ne i8* %17, null
 br i1 %18, label %19, label %27
19:
 %20 = load i8*, i8** %10
 %21 = icmp ne i8* %20, null
 br i1 %21, label %22, label %27
22:
 %23 = load i8*, i8** %8
 %24 = getelementptr %struct.mz_zip_archive, i8* %23, i32 0, i32 11
 %25 = load i8*, i8** %24
 %26 = icmp ne i8* %25, null
 br i1 %26, label %37, label %27
27:
 %28 = load i8*, i8** %8
 store i8* %28, i8** %5
 store i32 24, i32* %6
 %29 = load i8*, i8** %5
 %30 = icmp ne i8* %29, null
 br i1 %30, label %31, label %35
31:
 %32 = load i32, i32* %6
 %33 = load i8*, i8** %5
 %34 = getelementptr %struct.mz_zip_archive, i8* %33, i32 0, i32 5
 store i32 %32, i32* %34
 br label %35
35:
 %36 = sext i32 0 to i64
 store i64 %36, i64* %7
 br label %48
37:
 %38 = load i8*, i8** %8
 %39 = getelementptr %struct.mz_zip_archive, i8* %38, i32 0, i32 11
 %40 = load i8*, i8** %39
 %41 = load i8*, i8** %8
 %42 = getelementptr %struct.mz_zip_archive, i8* %41, i32 0, i32 14
 %43 = load i8*, i8** %42
 %44 = load i64, i64* %9
 %45 = load i8*, i8** %10
 %46 = load i64, i64* %11
 %47 = call i64 %40 (i8* %43, i64 %44, i8* %45, i64 %46)
 store i64 %47, i64* %7
 br label %48
48:
 %49 = load i64, i64* %7
 ret i64 %49
}

define i32 @mz_zip_reader_get_filename (i8* %0, i32 %1, i8* %2, i32 %3) {
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i32
 %11 = alloca i8*
 %12 = alloca i32
 %13 = alloca i8*
 %14 = alloca i32
 %15 = alloca i32
 %16 = alloca i8*
 store i8* %0, i8** %11
 store i32 %1, i32* %12
 store i8* %2, i8** %13
 store i32 %3, i32* %14
 %17 = load i8*, i8** %11
 %18 = load i32, i32* %12
 store i8* %17, i8** %6
 store i32 %18, i32* %7
 %19 = load i8*, i8** %6
 %20 = icmp ne i8* %19, null
 br i1 %20, label %21, label %32
21:
 %22 = load i8*, i8** %6
 %23 = getelementptr %struct.mz_zip_archive, i8* %22, i32 0, i32 15
 %24 = load i8*, i8** %23
 %25 = icmp ne i8* %24, null
 br i1 %25, label %26, label %32
26:
 %27 = load i32, i32* %7
 %28 = load i8*, i8** %6
 %29 = getelementptr %struct.mz_zip_archive, i8* %28, i32 0, i32 2
 %30 = load i32, i32* %29
 %31 = icmp uge i32 %27, %30
 br i1 %31, label %32, label %33
32:
 store i8* null, i8** %5
 br label %49
33:
 %34 = load i8*, i8** %6
 %35 = getelementptr %struct.mz_zip_archive, i8* %34, i32 0, i32 15
 %36 = load i8*, i8** %35
 %37 = load i8*, i8** %36
 %38 = load i8*, i8** %6
 %39 = getelementptr %struct.mz_zip_archive, i8* %38, i32 0, i32 15
 %40 = load i8*, i8** %39
 %41 = getelementptr %struct.mz_zip_internal_state_tag, i8* %40, i32 0, i32 1
 %42 = load i8*, i8** %41
 %43 = load i32, i32* %7
 %44 = zext i32 %43 to i64
 %45 = getelementptr i32, i8* %42, i64 %44
 %46 = load i32, i32* %45
 %47 = zext i32 %46 to i64
 %48 = getelementptr i8, i8* %37, i64 %47
 store i8* %48, i8** %5
 br label %49
49:
 %50 = load i8*, i8** %5
 store i8* %50, i8** %16
 %51 = load i8*, i8** %16
 %52 = icmp ne i8* %51, null
 br i1 %52, label %68, label %53
53:
 %54 = load i32, i32* %14
 %55 = icmp ne i32 %54, 0
 br i1 %55, label %56, label %59
56:
 %57 = load i8*, i8** %13
 %58 = getelementptr i8, i8* %57, i64 0
 store i8 0, i8* %58
 br label %59
59:
 %60 = load i8*, i8** %11
 store i8* %60, i8** %8
 store i32 24, i32* %9
 %61 = load i8*, i8** %8
 %62 = icmp ne i8* %61, null
 br i1 %62, label %63, label %67
63:
 %64 = load i32, i32* %9
 %65 = load i8*, i8** %8
 %66 = getelementptr %struct.mz_zip_archive, i8* %65, i32 0, i32 5
 store i32 %64, i32* %66
 br label %67
67:
 store i32 0, i32* %10
 br label %110
68:
 %69 = load i8*, i8** %16
 %70 = getelementptr i8, i8* %69, i64 28
 %71 = getelementptr i8, i8* %70, i64 0
 %72 = load i8, i8* %71
 %73 = zext i8 %72 to i32
 %74 = load i8*, i8** %16
 %75 = getelementptr i8, i8* %74, i64 28
 %76 = getelementptr i8, i8* %75, i64 1
 %77 = load i8, i8* %76
 %78 = zext i8 %77 to i32
 %79 = shl i32 %78, 8
 %80 = or i32 %73, %79
 store i32 %80, i32* %15
 %81 = load i32, i32* %14
 %82 = icmp ne i32 %81, 0
 br i1 %82, label %83, label %107
83:
 %84 = load i32, i32* %15
 %85 = load i32, i32* %14
 %86 = sub i32 %85, 1
 %87 = icmp ult i32 %84, %86
 br i1 %87, label %88, label %90
88:
 %89 = load i32, i32* %15
 br label %93
90:
 %91 = load i32, i32* %14
 %92 = sub i32 %91, 1
 br label %93
93:
 %94 = phi i32 [%89, %88], [%92, %90]
 store i32 %94, i32* %15
 %95 = load i8*, i8** %13
 %96 = load i8*, i8** %16
 %97 = getelementptr i8, i8* %96, i64 46
 %98 = load i32, i32* %15
 %99 = zext i32 %98 to i64
 %100 = load i8*, i8** %13
 %101 = call i64 @llvm.objectsize.i64.p0 (i8* %100, i1 0, i1 1, i1 0)
 %102 = call i8* @__memcpy_chk (i8* %95, i8* %97, i64 %99, i64 %101)
 %103 = load i8*, i8** %13
 %104 = load i32, i32* %15
 %105 = zext i32 %104 to i64
 %106 = getelementptr i8, i8* %103, i64 %105
 store i8 0, i8* %106
 br label %107
107:
 %108 = load i32, i32* %15
 %109 = add i32 %108, 1
 store i32 %109, i32* %10
 br label %110
110:
 %111 = load i32, i32* %10
 ret i32 %111
}

define i32 @mz_zip_end (i8* %0) {
 %2 = alloca i32
 %3 = alloca i8*
 store i8* %0, i8** %3
 %4 = load i8*, i8** %3
 %5 = icmp ne i8* %4, null
 br i1 %5, label %7, label %6
6:
 store i32 0, i32* %2
 br label %30
7:
 %8 = load i8*, i8** %3
 %9 = getelementptr %struct.mz_zip_archive, i8* %8, i32 0, i32 3
 %10 = load i32, i32* %9
 %11 = icmp eq i32 %10, 1
 br i1 %11, label %12, label %15
12:
 %13 = load i8*, i8** %3
 %14 = call i32 @mz_zip_reader_end (i8* %13)
 store i32 %14, i32* %2
 br label %30
15:
 %16 = load i8*, i8** %3
 %17 = getelementptr %struct.mz_zip_archive, i8* %16, i32 0, i32 3
 %18 = load i32, i32* %17
 %19 = icmp eq i32 %18, 2
 br i1 %19, label %25, label %20
20:
 %21 = load i8*, i8** %3
 %22 = getelementptr %struct.mz_zip_archive, i8* %21, i32 0, i32 3
 %23 = load i32, i32* %22
 %24 = icmp eq i32 %23, 3
 br i1 %24, label %25, label %28
25:
 %26 = load i8*, i8** %3
 %27 = call i32 @mz_zip_writer_end (i8* %26)
 store i32 %27, i32* %2
 br label %30
28:
 br label %29
29:
 store i32 0, i32* %2
 br label %30
30:
 %31 = load i32, i32* %2
 ret i32 %31
}

define i32 @main (i32 %0, i8* %1) {
 %3 = alloca i32
 %4 = alloca i32
 %5 = alloca i8*
 %6 = alloca i32
 %7 = alloca i32
 %8 = alloca i64
 %9 = alloca i64
 %10 = alloca i64
 %11 = alloca i8*
 %12 = alloca i8*
 %13 = alloca i32
 %14 = alloca i32
 %15 = alloca i32
 store i32 0, i32* %3
 store i32 %0, i32* %4
 store i8* %1, i8** %5
 store i32 0, i32* %6
 %16 = load i8*, i8** @s_pStr
 %17 = call i64 @strlen (i8* %16)
 store i64 %17, i64* %8
 %18 = load i64, i64* %8
 %19 = call i64 @mz_compressBound (i64 %18)
 store i64 %19, i64* %9
 %20 = load i64, i64* %8
 store i64 %20, i64* %10
 store i32 0, i32* %13
 %21 = load i32, i32* %4
 %22 = load i8*, i8** %5
 %23 = call i32 (i8*, ...) @printf (i8* @.str.59, i8* @.str)
 br label %24
24:
 %25 = load i64, i64* %9
 %26 = call i8* @malloc (i64 %25)
 store i8* %26, i8** %11
 %27 = load i64, i64* %8
 %28 = call i8* @malloc (i64 %27)
 store i8* %28, i8** %12
 %29 = load i8*, i8** %11
 %30 = icmp ne i8* %29, null
 br i1 %30, label %31, label %34
31:
 %32 = load i8*, i8** %12
 %33 = icmp ne i8* %32, null
 br i1 %33, label %36, label %34
34:
 %35 = call i32 (i8*, ...) @printf (i8* @.str.60)
 store i32 1, i32* %3
 br label %133
36:
 %37 = load i8*, i8** %11
 %38 = load i8*, i8** @s_pStr
 %39 = load i64, i64* %8
 %40 = call i32 @mz_compress (i8* %37, i8* %9, i8* %38, i64 %39)
 store i32 %40, i32* %7
 %41 = load i32, i32* %7
 %42 = icmp ne i32 %41, 0
 br i1 %42, label %43, label %47
43:
 %44 = call i32 (i8*, ...) @printf (i8* @.str.61)
 %45 = load i8*, i8** %11
 call void @free (i8* %45)
 %46 = load i8*, i8** %12
 call void @free (i8* %46)
 store i32 1, i32* %3
 br label %133
47:
 %48 = load i64, i64* %8
 %49 = trunc i64 %48 to i32
 %50 = load i64, i64* %9
 %51 = trunc i64 %50 to i32
 %52 = call i32 (i8*, ...) @printf (i8* @.str.62, i32 %49, i32 %51)
 %53 = load i32, i32* %6
 %54 = icmp ne i32 %53, 0
 br i1 %54, label %55, label %80
55:
 %56 = call i32 @rand ()
 %57 = srem i32 %56, 3
 %58 = add i32 1, %57
 store i32 %58, i32* %14
 br label %59
59:
 %60 = load i32, i32* %14
 %61 = add i32 %60, -1
 store i32 %61, i32* %14
 %62 = icmp ne i32 %60, 0
 br i1 %62, label %63, label %79
63:
 %64 = call i32 @rand ()
 %65 = sext i32 %64 to i64
 %66 = load i64, i64* %9
 %67 = urem i64 %65, %66
 %68 = trunc i64 %67 to i32
 store i32 %68, i32* %15
 %69 = call i32 @rand ()
 %70 = and i32 %69, 255
 %71 = load i8*, i8** %11
 %72 = load i32, i32* %15
 %73 = zext i32 %72 to i64
 %74 = getelementptr i8, i8* %71, i64 %73
 %75 = load i8, i8* %74
 %76 = zext i8 %75 to i32
 %77 = xor i32 %76, %70
 %78 = trunc i32 %77 to i8
 store i8 %78, i8* %74
 br label %59
79:
 br label %80
80:
 %81 = load i8*, i8** %12
 %82 = load i8*, i8** %11
 %83 = load i64, i64* %9
 %84 = call i32 @mz_uncompress (i8* %81, i8* %10, i8* %82, i64 %83)
 store i32 %84, i32* %7
 %85 = load i32, i32* %7
 %86 = icmp eq i32 %85, 0
 %87 = zext i1 %86 to i32
 %88 = load i32, i32* %13
 %89 = add i32 %88, %87
 store i32 %89, i32* %13
 %90 = load i32, i32* %6
 %91 = icmp ne i32 %90, 0
 br i1 %91, label %92, label %96
92:
 %93 = load i32, i32* %6
 %94 = load i32, i32* %13
 %95 = call i32 (i8*, ...) @printf (i8* @.str.63, i32 %93, i32 %94)
 br label %123
96:
 %97 = load i32, i32* %7
 %98 = icmp ne i32 %97, 0
 br i1 %98, label %99, label %103
99:
 %100 = call i32 (i8*, ...) @printf (i8* @.str.64)
 %101 = load i8*, i8** %11
 call void @free (i8* %101)
 %102 = load i8*, i8** %12
 call void @free (i8* %102)
 store i32 1, i32* %3
 br label %133
103:
 %104 = load i64, i64* %9
 %105 = trunc i64 %104 to i32
 %106 = load i64, i64* %10
 %107 = trunc i64 %106 to i32
 %108 = call i32 (i8*, ...) @printf (i8* @.str.65, i32 %105, i32 %107)
 %109 = load i64, i64* %10
 %110 = load i64, i64* %8
 %111 = icmp ne i64 %109, %110
 br i1 %111, label %118, label %112
112:
 %113 = load i8*, i8** %12
 %114 = load i8*, i8** @s_pStr
 %115 = load i64, i64* %8
 %116 = call i32 @memcmp (i8* %113, i8* %114, i64 %115)
 %117 = icmp ne i32 %116, 0
 br i1 %117, label %118, label %122
118:
 %119 = call i32 (i8*, ...) @printf (i8* @.str.66)
 %120 = load i8*, i8** %11
 call void @free (i8* %120)
 %121 = load i8*, i8** %12
 call void @free (i8* %121)
 store i32 1, i32* %3
 br label %133
122:
 br label %123
123:
 %124 = load i8*, i8** %11
 call void @free (i8* %124)
 %125 = load i8*, i8** %12
 call void @free (i8* %125)
 %126 = load i32, i32* %6
 %127 = add i32 %126, 1
 store i32 %127, i32* %6
 br label %128
128:
 %129 = load i32, i32* %4
 %130 = icmp sge i32 %129, 2
 br i1 %130, label %24, label %131
131:
 %132 = call i32 (i8*, ...) @printf (i8* @.str.67)
 store i32 0, i32* %3
 br label %133
133:
 %134 = load i32, i32* %3
 ret i32 %134
}

define i32 @tdefl_compress_block (i8* %0, i32 %1) {
 %3 = alloca i8*
 %4 = alloca i32
 store i8* %0, i8** %3
 store i32 %1, i32* %4
 %5 = load i32, i32* %4
 %6 = icmp ne i32 %5, 0
 br i1 %6, label %7, label %9
7:
 %8 = load i8*, i8** %3
 call void @tdefl_start_static_block (i8* %8)
 br label %11
9:
 %10 = load i8*, i8** %3
 call void @tdefl_start_dynamic_block (i8* %10)
 br label %11
11:
 %12 = load i8*, i8** %3
 %13 = call i32 @tdefl_compress_lz_codes (i8* %12)
 ret i32 %13
}

define void @tdefl_start_static_block (i8* %0) {
 %2 = alloca i8*
 %3 = alloca i32
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i32
 store i8* %0, i8** %2
 %7 = load i8*, i8** %2
 %8 = getelementptr %struct.tdefl_compressor, i8* %7, i32 0, i32 38
 %9 = getelementptr [3 x [288 x i8]], i8* %8, i64 0, i64 0
 %10 = getelementptr [288 x i8], i8* %9, i64 0, i64 0
 store i8* %10, i8** %4
 store i32 0, i32* %3
 br label %11
11:
 %12 = load i32, i32* %3
 %13 = icmp ule i32 %12, 143
 br i1 %13, label %14, label %20
14:
 %15 = load i8*, i8** %4
 %16 = getelementptr i8, i8* %15, i32 1
 store i8* %16, i8** %4
 store i8 8, i8* %15
 br label %17
17:
 %18 = load i32, i32* %3
 %19 = add i32 %18, 1
 store i32 %19, i32* %3
 br label %11
20:
 br label %21
21:
 %22 = load i32, i32* %3
 %23 = icmp ule i32 %22, 255
 br i1 %23, label %24, label %30
24:
 %25 = load i8*, i8** %4
 %26 = getelementptr i8, i8* %25, i32 1
 store i8* %26, i8** %4
 store i8 9, i8* %25
 br label %27
27:
 %28 = load i32, i32* %3
 %29 = add i32 %28, 1
 store i32 %29, i32* %3
 br label %21
30:
 br label %31
31:
 %32 = load i32, i32* %3
 %33 = icmp ule i32 %32, 279
 br i1 %33, label %34, label %40
34:
 %35 = load i8*, i8** %4
 %36 = getelementptr i8, i8* %35, i32 1
 store i8* %36, i8** %4
 store i8 7, i8* %35
 br label %37
37:
 %38 = load i32, i32* %3
 %39 = add i32 %38, 1
 store i32 %39, i32* %3
 br label %31
40:
 br label %41
41:
 %42 = load i32, i32* %3
 %43 = icmp ule i32 %42, 287
 br i1 %43, label %44, label %50
44:
 %45 = load i8*, i8** %4
 %46 = getelementptr i8, i8* %45, i32 1
 store i8* %46, i8** %4
 store i8 8, i8* %45
 br label %47
47:
 %48 = load i32, i32* %3
 %49 = add i32 %48, 1
 store i32 %49, i32* %3
 br label %41
50:
 %51 = load i8*, i8** %2
 %52 = getelementptr %struct.tdefl_compressor, i8* %51, i32 0, i32 38
 %53 = getelementptr [3 x [288 x i8]], i8* %52, i64 0, i64 1
 %54 = getelementptr [288 x i8], i8* %53, i64 0, i64 0
 %55 = load i8*, i8** %2
 %56 = getelementptr %struct.tdefl_compressor, i8* %55, i32 0, i32 38
 %57 = getelementptr [3 x [288 x i8]], i8* %56, i64 0, i64 1
 %58 = getelementptr [288 x i8], i8* %57, i64 0, i64 0
 %59 = call i64 @llvm.objectsize.i64.p0 (i8* %58, i1 0, i1 1, i1 0)
 %60 = call i8* @__memset_chk (i8* %54, i32 5, i64 32, i64 %59)
 %61 = load i8*, i8** %2
 call void @tdefl_optimize_huffman_table (i8* %61, i32 0, i32 288, i32 15, i32 1)
 %62 = load i8*, i8** %2
 call void @tdefl_optimize_huffman_table (i8* %62, i32 1, i32 32, i32 15, i32 1)
 br label %63
63:
 store i32 1, i32* %5
 store i32 2, i32* %6
 %64 = load i32, i32* %5
 %65 = load i32, i32* %6
 %66 = shl i32 1, %65
 %67 = sub i32 %66, 1
 %68 = icmp ule i32 %64, %67
 %69 = xor i1 %68, 1
 %70 = zext i1 %69 to i32
 %71 = sext i32 %70 to i64
 %72 = icmp ne i64 %71, 0
 br i1 %72, label %73, label %75
73:
 call void @__assert_rtn (i8* @__func__.tdefl_start_static_block, i8* @.str.11, i32 2521, i8* @.str.72)
 unreachable
74:
 br label %76
75:
 br label %76
76:
 %77 = load i32, i32* %5
 %78 = load i8*, i8** %2
 %79 = getelementptr %struct.tdefl_compressor, i8* %78, i32 0, i32 16
 %80 = load i32, i32* %79
 %81 = shl i32 %77, %80
 %82 = load i8*, i8** %2
 %83 = getelementptr %struct.tdefl_compressor, i8* %82, i32 0, i32 17
 %84 = load i32, i32* %83
 %85 = or i32 %84, %81
 store i32 %85, i32* %83
 %86 = load i32, i32* %6
 %87 = load i8*, i8** %2
 %88 = getelementptr %struct.tdefl_compressor, i8* %87, i32 0, i32 16
 %89 = load i32, i32* %88
 %90 = add i32 %89, %86
 store i32 %90, i32* %88
 br label %91
91:
 %92 = load i8*, i8** %2
 %93 = getelementptr %struct.tdefl_compressor, i8* %92, i32 0, i32 16
 %94 = load i32, i32* %93
 %95 = icmp uge i32 %94, 8
 br i1 %95, label %96, label %122
96:
 %97 = load i8*, i8** %2
 %98 = getelementptr %struct.tdefl_compressor, i8* %97, i32 0, i32 11
 %99 = load i8*, i8** %98
 %100 = load i8*, i8** %2
 %101 = getelementptr %struct.tdefl_compressor, i8* %100, i32 0, i32 12
 %102 = load i8*, i8** %101
 %103 = icmp ult i8* %99, %102
 br i1 %103, label %104, label %113
104:
 %105 = load i8*, i8** %2
 %106 = getelementptr %struct.tdefl_compressor, i8* %105, i32 0, i32 17
 %107 = load i32, i32* %106
 %108 = trunc i32 %107 to i8
 %109 = load i8*, i8** %2
 %110 = getelementptr %struct.tdefl_compressor, i8* %109, i32 0, i32 11
 %111 = load i8*, i8** %110
 %112 = getelementptr i8, i8* %111, i32 1
 store i8* %112, i8** %110
 store i8 %108, i8* %111
 br label %113
113:
 %114 = load i8*, i8** %2
 %115 = getelementptr %struct.tdefl_compressor, i8* %114, i32 0, i32 17
 %116 = load i32, i32* %115
 %117 = lshr i32 %116, 8
 store i32 %117, i32* %115
 %118 = load i8*, i8** %2
 %119 = getelementptr %struct.tdefl_compressor, i8* %118, i32 0, i32 16
 %120 = load i32, i32* %119
 %121 = sub i32 %120, 8
 store i32 %121, i32* %119
 br label %91
122:
 br label %123
123:
 ret void
}

define void @tdefl_start_dynamic_block (i8* %0) {
 %2 = alloca i8*
 %3 = alloca i32
 %4 = alloca i32
 %5 = alloca i32
 %6 = alloca i32
 %7 = alloca i32
 %8 = alloca i32
 %9 = alloca i32
 %10 = alloca i32
 %11 = alloca i32
 %12 = alloca [320 x i8]
 %13 = alloca [320 x i8]
 %14 = alloca i8
 %15 = alloca i8
 %16 = alloca i32
 %17 = alloca i32
 %18 = alloca i32
 %19 = alloca i32
 %20 = alloca i32
 %21 = alloca i32
 %22 = alloca i32
 %23 = alloca i32
 %24 = alloca i32
 %25 = alloca i32
 %26 = alloca i32
 %27 = alloca i32
 %28 = alloca i32
 %29 = alloca i32
 %30 = alloca i32
 store i8* %0, i8** %2
 store i8 -1, i8* %14
 %31 = load i8*, i8** %2
 %32 = getelementptr %struct.tdefl_compressor, i8* %31, i32 0, i32 36
 %33 = getelementptr [3 x [288 x i16]], i8* %32, i64 0, i64 0
 %34 = getelementptr [288 x i16], i8* %33, i64 0, i64 256
 store i16 1, i16* %34
 %35 = load i8*, i8** %2
 call void @tdefl_optimize_huffman_table (i8* %35, i32 0, i32 288, i32 15, i32 0)
 %36 = load i8*, i8** %2
 call void @tdefl_optimize_huffman_table (i8* %36, i32 1, i32 32, i32 15, i32 0)
 store i32 286, i32* %3
 br label %37
37:
 %38 = load i32, i32* %3
 %39 = icmp sgt i32 %38, 257
 br i1 %39, label %40, label %55
40:
 %41 = load i8*, i8** %2
 %42 = getelementptr %struct.tdefl_compressor, i8* %41, i32 0, i32 38
 %43 = getelementptr [3 x [288 x i8]], i8* %42, i64 0, i64 0
 %44 = load i32, i32* %3
 %45 = sub i32 %44, 1
 %46 = sext i32 %45 to i64
 %47 = getelementptr [288 x i8], i8* %43, i64 0, i64 %46
 %48 = load i8, i8* %47
 %49 = icmp ne i8 %48, 0
 br i1 %49, label %50, label %51
50:
 br label %55
51:
 br label %52
52:
 %53 = load i32, i32* %3
 %54 = add i32 %53, -1
 store i32 %54, i32* %3
 br label %37
55:
 store i32 30, i32* %4
 br label %56
56:
 %57 = load i32, i32* %4
 %58 = icmp sgt i32 %57, 1
 br i1 %58, label %59, label %74
59:
 %60 = load i8*, i8** %2
 %61 = getelementptr %struct.tdefl_compressor, i8* %60, i32 0, i32 38
 %62 = getelementptr [3 x [288 x i8]], i8* %61, i64 0, i64 1
 %63 = load i32, i32* %4
 %64 = sub i32 %63, 1
 %65 = sext i32 %64 to i64
 %66 = getelementptr [288 x i8], i8* %62, i64 0, i64 %65
 %67 = load i8, i8* %66
 %68 = icmp ne i8 %67, 0
 br i1 %68, label %69, label %70
69:
 br label %74
70:
 br label %71
71:
 %72 = load i32, i32* %4
 %73 = add i32 %72, -1
 store i32 %73, i32* %4
 br label %56
74:
 %75 = getelementptr [320 x i8], i8* %12, i64 0, i64 0
 %76 = load i8*, i8** %2
 %77 = getelementptr %struct.tdefl_compressor, i8* %76, i32 0, i32 38
 %78 = getelementptr [3 x [288 x i8]], i8* %77, i64 0, i64 0
 %79 = getelementptr [288 x i8], i8* %78, i64 0, i64 0
 %80 = load i32, i32* %3
 %81 = sext i32 %80 to i64
 %82 = call i8* @__memcpy_chk (i8* %75, i8* %79, i64 %81, i64 320)
 %83 = getelementptr [320 x i8], i8* %12, i64 0, i64 0
 %84 = load i32, i32* %3
 %85 = sext i32 %84 to i64
 %86 = getelementptr i8, i8* %83, i64 %85
 %87 = load i8*, i8** %2
 %88 = getelementptr %struct.tdefl_compressor, i8* %87, i32 0, i32 38
 %89 = getelementptr [3 x [288 x i8]], i8* %88, i64 0, i64 1
 %90 = getelementptr [288 x i8], i8* %89, i64 0, i64 0
 %91 = load i32, i32* %4
 %92 = sext i32 %91 to i64
 %93 = getelementptr [320 x i8], i8* %12, i64 0, i64 0
 %94 = load i32, i32* %3
 %95 = sext i32 %94 to i64
 %96 = getelementptr i8, i8* %93, i64 %95
 %97 = call i64 @llvm.objectsize.i64.p0 (i8* %96, i1 0, i1 1, i1 0)
 %98 = call i8* @__memcpy_chk (i8* %86, i8* %90, i64 %92, i64 %97)
 %99 = load i32, i32* %3
 %100 = load i32, i32* %4
 %101 = add i32 %99, %100
 store i32 %101, i32* %7
 store i32 0, i32* %8
 store i32 0, i32* %9
 store i32 0, i32* %10
 %102 = load i8*, i8** %2
 %103 = getelementptr %struct.tdefl_compressor, i8* %102, i32 0, i32 36
 %104 = getelementptr [3 x [288 x i16]], i8* %103, i64 0, i64 2
 %105 = getelementptr [288 x i16], i8* %104, i64 0, i64 0
 %106 = load i8*, i8** %2
 %107 = getelementptr %struct.tdefl_compressor, i8* %106, i32 0, i32 36
 %108 = getelementptr [3 x [288 x i16]], i8* %107, i64 0, i64 2
 %109 = getelementptr [288 x i16], i8* %108, i64 0, i64 0
 %110 = call i64 @llvm.objectsize.i64.p0 (i8* %109, i1 0, i1 1, i1 0)
 %111 = call i8* @__memset_chk (i8* %105, i32 0, i64 38, i64 %110)
 store i32 0, i32* %6
 br label %112
112:
 %113 = load i32, i32* %6
 %114 = load i32, i32* %7
 %115 = icmp ult i32 %113, %114
 br i1 %115, label %116, label %515
116:
 %117 = load i32, i32* %6
 %118 = zext i32 %117 to i64
 %119 = getelementptr [320 x i8], i8* %12, i64 0, i64 %118
 %120 = load i8, i8* %119
 store i8 %120, i8* %15
 %121 = load i8, i8* %15
 %122 = icmp ne i8 %121, 0
 br i1 %122, label %272, label %123
123:
 %124 = load i32, i32* %10
 %125 = icmp ne i32 %124, 0
 br i1 %125, label %126, label %183
126:
 %127 = load i32, i32* %10
 %128 = icmp ult i32 %127, 3
 br i1 %128, label %129, label %158
129:
 %130 = load i8*, i8** %2
 %131 = getelementptr %struct.tdefl_compressor, i8* %130, i32 0, i32 36
 %132 = getelementptr [3 x [288 x i16]], i8* %131, i64 0, i64 2
 %133 = load i8, i8* %14
 %134 = zext i8 %133 to i64
 %135 = getelementptr [288 x i16], i8* %132, i64 0, i64 %134
 %136 = load i16, i16* %135
 %137 = zext i16 %136 to i32
 %138 = load i32, i32* %10
 %139 = add i32 %137, %138
 %140 = trunc i32 %139 to i16
 %141 = load i8*, i8** %2
 %142 = getelementptr %struct.tdefl_compressor, i8* %141, i32 0, i32 36
 %143 = getelementptr [3 x [288 x i16]], i8* %142, i64 0, i64 2
 %144 = load i8, i8* %14
 %145 = zext i8 %144 to i64
 %146 = getelementptr [288 x i16], i8* %143, i64 0, i64 %145
 store i16 %140, i16* %146
 br label %147
147:
 %148 = load i32, i32* %10
 %149 = add i32 %148, -1
 store i32 %149, i32* %10
 %150 = icmp ne i32 %148, 0
 br i1 %150, label %151, label %157
151:
 %152 = load i8, i8* %14
 %153 = load i32, i32* %8
 %154 = add i32 %153, 1
 store i32 %154, i32* %8
 %155 = zext i32 %153 to i64
 %156 = getelementptr [320 x i8], i8* %13, i64 0, i64 %155
 store i8 %152, i8* %156
 br label %147
157:
 br label %182
158:
 %159 = load i8*, i8** %2
 %160 = getelementptr %struct.tdefl_compressor, i8* %159, i32 0, i32 36
 %161 = getelementptr [3 x [288 x i16]], i8* %160, i64 0, i64 2
 %162 = getelementptr [288 x i16], i8* %161, i64 0, i64 16
 %163 = load i16, i16* %162
 %164 = zext i16 %163 to i32
 %165 = add i32 %164, 1
 %166 = trunc i32 %165 to i16
 %167 = load i8*, i8** %2
 %168 = getelementptr %struct.tdefl_compressor, i8* %167, i32 0, i32 36
 %169 = getelementptr [3 x [288 x i16]], i8* %168, i64 0, i64 2
 %170 = getelementptr [288 x i16], i8* %169, i64 0, i64 16
 store i16 %166, i16* %170
 %171 = load i32, i32* %8
 %172 = add i32 %171, 1
 store i32 %172, i32* %8
 %173 = zext i32 %171 to i64
 %174 = getelementptr [320 x i8], i8* %13, i64 0, i64 %173
 store i8 16, i8* %174
 %175 = load i32, i32* %10
 %176 = sub i32 %175, 3
 %177 = trunc i32 %176 to i8
 %178 = load i32, i32* %8
 %179 = add i32 %178, 1
 store i32 %179, i32* %8
 %180 = zext i32 %178 to i64
 %181 = getelementptr [320 x i8], i8* %13, i64 0, i64 %180
 store i8 %177, i8* %181
 br label %182
182:
 store i32 0, i32* %10
 br label %183
183:
 %184 = load i32, i32* %9
 %185 = add i32 %184, 1
 store i32 %185, i32* %9
 %186 = icmp eq i32 %185, 138
 br i1 %186, label %187, label %271
187:
 %188 = load i32, i32* %9
 %189 = icmp ne i32 %188, 0
 br i1 %189, label %190, label %270
190:
 %191 = load i32, i32* %9
 %192 = icmp ult i32 %191, 3
 br i1 %192, label %193, label %217
193:
 %194 = load i8*, i8** %2
 %195 = getelementptr %struct.tdefl_compressor, i8* %194, i32 0, i32 36
 %196 = getelementptr [3 x [288 x i16]], i8* %195, i64 0, i64 2
 %197 = getelementptr [288 x i16], i8* %196, i64 0, i64 0
 %198 = load i16, i16* %197
 %199 = zext i16 %198 to i32
 %200 = load i32, i32* %9
 %201 = add i32 %199, %200
 %202 = trunc i32 %201 to i16
 %203 = load i8*, i8** %2
 %204 = getelementptr %struct.tdefl_compressor, i8* %203, i32 0, i32 36
 %205 = getelementptr [3 x [288 x i16]], i8* %204, i64 0, i64 2
 %206 = getelementptr [288 x i16], i8* %205, i64 0, i64 0
 store i16 %202, i16* %206
 br label %207
207:
 %208 = load i32, i32* %9
 %209 = add i32 %208, -1
 store i32 %209, i32* %9
 %210 = icmp ne i32 %208, 0
 br i1 %210, label %211, label %216
211:
 %212 = load i32, i32* %8
 %213 = add i32 %212, 1
 store i32 %213, i32* %8
 %214 = zext i32 %212 to i64
 %215 = getelementptr [320 x i8], i8* %13, i64 0, i64 %214
 store i8 0, i8* %215
 br label %207
216:
 br label %269
217:
 %218 = load i32, i32* %9
 %219 = icmp ule i32 %218, 10
 br i1 %219, label %220, label %244
220:
 %221 = load i8*, i8** %2
 %222 = getelementptr %struct.tdefl_compressor, i8* %221, i32 0, i32 36
 %223 = getelementptr [3 x [288 x i16]], i8* %222, i64 0, i64 2
 %224 = getelementptr [288 x i16], i8* %223, i64 0, i64 17
 %225 = load i16, i16* %224
 %226 = zext i16 %225 to i32
 %227 = add i32 %226, 1
 %228 = trunc i32 %227 to i16
 %229 = load i8*, i8** %2
 %230 = getelementptr %struct.tdefl_compressor, i8* %229, i32 0, i32 36
 %231 = getelementptr [3 x [288 x i16]], i8* %230, i64 0, i64 2
 %232 = getelementptr [288 x i16], i8* %231, i64 0, i64 17
 store i16 %228, i16* %232
 %233 = load i32, i32* %8
 %234 = add i32 %233, 1
 store i32 %234, i32* %8
 %235 = zext i32 %233 to i64
 %236 = getelementptr [320 x i8], i8* %13, i64 0, i64 %235
 store i8 17, i8* %236
 %237 = load i32, i32* %9
 %238 = sub i32 %237, 3
 %239 = trunc i32 %238 to i8
 %240 = load i32, i32* %8
 %241 = add i32 %240, 1
 store i32 %241, i32* %8
 %242 = zext i32 %240 to i64
 %243 = getelementptr [320 x i8], i8* %13, i64 0, i64 %242
 store i8 %239, i8* %243
 br label %268
244:
 %245 = load i8*, i8** %2
 %246 = getelementptr %struct.tdefl_compressor, i8* %245, i32 0, i32 36
 %247 = getelementptr [3 x [288 x i16]], i8* %246, i64 0, i64 2
 %248 = getelementptr [288 x i16], i8* %247, i64 0, i64 18
 %249 = load i16, i16* %248
 %250 = zext i16 %249 to i32
 %251 = add i32 %250, 1
 %252 = trunc i32 %251 to i16
 %253 = load i8*, i8** %2
 %254 = getelementptr %struct.tdefl_compressor, i8* %253, i32 0, i32 36
 %255 = getelementptr [3 x [288 x i16]], i8* %254, i64 0, i64 2
 %256 = getelementptr [288 x i16], i8* %255, i64 0, i64 18
 store i16 %252, i16* %256
 %257 = load i32, i32* %8
 %258 = add i32 %257, 1
 store i32 %258, i32* %8
 %259 = zext i32 %257 to i64
 %260 = getelementptr [320 x i8], i8* %13, i64 0, i64 %259
 store i8 18, i8* %260
 %261 = load i32, i32* %9
 %262 = sub i32 %261, 11
 %263 = trunc i32 %262 to i8
 %264 = load i32, i32* %8
 %265 = add i32 %264, 1
 store i32 %265, i32* %8
 %266 = zext i32 %264 to i64
 %267 = getelementptr [320 x i8], i8* %13, i64 0, i64 %266
 store i8 %263, i8* %267
 br label %268
268:
 br label %269
269:
 store i32 0, i32* %9
 br label %270
270:
 br label %271
271:
 br label %510
272:
 %273 = load i32, i32* %9
 %274 = icmp ne i32 %273, 0
 br i1 %274, label %275, label %355
275:
 %276 = load i32, i32* %9
 %277 = icmp ult i32 %276, 3
 br i1 %277, label %278, label %302
278:
 %279 = load i8*, i8** %2
 %280 = getelementptr %struct.tdefl_compressor, i8* %279, i32 0, i32 36
 %281 = getelementptr [3 x [288 x i16]], i8* %280, i64 0, i64 2
 %282 = getelementptr [288 x i16], i8* %281, i64 0, i64 0
 %283 = load i16, i16* %282
 %284 = zext i16 %283 to i32
 %285 = load i32, i32* %9
 %286 = add i32 %284, %285
 %287 = trunc i32 %286 to i16
 %288 = load i8*, i8** %2
 %289 = getelementptr %struct.tdefl_compressor, i8* %288, i32 0, i32 36
 %290 = getelementptr [3 x [288 x i16]], i8* %289, i64 0, i64 2
 %291 = getelementptr [288 x i16], i8* %290, i64 0, i64 0
 store i16 %287, i16* %291
 br label %292
292:
 %293 = load i32, i32* %9
 %294 = add i32 %293, -1
 store i32 %294, i32* %9
 %295 = icmp ne i32 %293, 0
 br i1 %295, label %296, label %301
296:
 %297 = load i32, i32* %8
 %298 = add i32 %297, 1
 store i32 %298, i32* %8
 %299 = zext i32 %297 to i64
 %300 = getelementptr [320 x i8], i8* %13, i64 0, i64 %299
 store i8 0, i8* %300
 br label %292
301:
 br label %354
302:
 %303 = load i32, i32* %9
 %304 = icmp ule i32 %303, 10
 br i1 %304, label %305, label %329
305:
 %306 = load i8*, i8** %2
 %307 = getelementptr %struct.tdefl_compressor, i8* %306, i32 0, i32 36
 %308 = getelementptr [3 x [288 x i16]], i8* %307, i64 0, i64 2
 %309 = getelementptr [288 x i16], i8* %308, i64 0, i64 17
 %310 = load i16, i16* %309
 %311 = zext i16 %310 to i32
 %312 = add i32 %311, 1
 %313 = trunc i32 %312 to i16
 %314 = load i8*, i8** %2
 %315 = getelementptr %struct.tdefl_compressor, i8* %314, i32 0, i32 36
 %316 = getelementptr [3 x [288 x i16]], i8* %315, i64 0, i64 2
 %317 = getelementptr [288 x i16], i8* %316, i64 0, i64 17
 store i16 %313, i16* %317
 %318 = load i32, i32* %8
 %319 = add i32 %318, 1
 store i32 %319, i32* %8
 %320 = zext i32 %318 to i64
 %321 = getelementptr [320 x i8], i8* %13, i64 0, i64 %320
 store i8 17, i8* %321
 %322 = load i32, i32* %9
 %323 = sub i32 %322, 3
 %324 = trunc i32 %323 to i8
 %325 = load i32, i32* %8
 %326 = add i32 %325, 1
 store i32 %326, i32* %8
 %327 = zext i32 %325 to i64
 %328 = getelementptr [320 x i8], i8* %13, i64 0, i64 %327
 store i8 %324, i8* %328
 br label %353
329:
 %330 = load i8*, i8** %2
 %331 = getelementptr %struct.tdefl_compressor, i8* %330, i32 0, i32 36
 %332 = getelementptr [3 x [288 x i16]], i8* %331, i64 0, i64 2
 %333 = getelementptr [288 x i16], i8* %332, i64 0, i64 18
 %334 = load i16, i16* %333
 %335 = zext i16 %334 to i32
 %336 = add i32 %335, 1
 %337 = trunc i32 %336 to i16
 %338 = load i8*, i8** %2
 %339 = getelementptr %struct.tdefl_compressor, i8* %338, i32 0, i32 36
 %340 = getelementptr [3 x [288 x i16]], i8* %339, i64 0, i64 2
 %341 = getelementptr [288 x i16], i8* %340, i64 0, i64 18
 store i16 %337, i16* %341
 %342 = load i32, i32* %8
 %343 = add i32 %342, 1
 store i32 %343, i32* %8
 %344 = zext i32 %342 to i64
 %345 = getelementptr [320 x i8], i8* %13, i64 0, i64 %344
 store i8 18, i8* %345
 %346 = load i32, i32* %9
 %347 = sub i32 %346, 11
 %348 = trunc i32 %347 to i8
 %349 = load i32, i32* %8
 %350 = add i32 %349, 1
 store i32 %350, i32* %8
 %351 = zext i32 %349 to i64
 %352 = getelementptr [320 x i8], i8* %13, i64 0, i64 %351
 store i8 %348, i8* %352
 br label %353
353:
 br label %354
354:
 store i32 0, i32* %9
 br label %355
355:
 %356 = load i8, i8* %15
 %357 = zext i8 %356 to i32
 %358 = load i8, i8* %14
 %359 = zext i8 %358 to i32
 %360 = icmp ne i32 %357, %359
 br i1 %360, label %361, label %443
361:
 %362 = load i32, i32* %10
 %363 = icmp ne i32 %362, 0
 br i1 %363, label %364, label %421
364:
 %365 = load i32, i32* %10
 %366 = icmp ult i32 %365, 3
 br i1 %366, label %367, label %396
367:
 %368 = load i8*, i8** %2
 %369 = getelementptr %struct.tdefl_compressor, i8* %368, i32 0, i32 36
 %370 = getelementptr [3 x [288 x i16]], i8* %369, i64 0, i64 2
 %371 = load i8, i8* %14
 %372 = zext i8 %371 to i64
 %373 = getelementptr [288 x i16], i8* %370, i64 0, i64 %372
 %374 = load i16, i16* %373
 %375 = zext i16 %374 to i32
 %376 = load i32, i32* %10
 %377 = add i32 %375, %376
 %378 = trunc i32 %377 to i16
 %379 = load i8*, i8** %2
 %380 = getelementptr %struct.tdefl_compressor, i8* %379, i32 0, i32 36
 %381 = getelementptr [3 x [288 x i16]], i8* %380, i64 0, i64 2
 %382 = load i8, i8* %14
 %383 = zext i8 %382 to i64
 %384 = getelementptr [288 x i16], i8* %381, i64 0, i64 %383
 store i16 %378, i16* %384
 br label %385
385:
 %386 = load i32, i32* %10
 %387 = add i32 %386, -1
 store i32 %387, i32* %10
 %388 = icmp ne i32 %386, 0
 br i1 %388, label %389, label %395
389:
 %390 = load i8, i8* %14
 %391 = load i32, i32* %8
 %392 = add i32 %391, 1
 store i32 %392, i32* %8
 %393 = zext i32 %391 to i64
 %394 = getelementptr [320 x i8], i8* %13, i64 0, i64 %393
 store i8 %390, i8* %394
 br label %385
395:
 br label %420
396:
 %397 = load i8*, i8** %2
 %398 = getelementptr %struct.tdefl_compressor, i8* %397, i32 0, i32 36
 %399 = getelementptr [3 x [288 x i16]], i8* %398, i64 0, i64 2
 %400 = getelementptr [288 x i16], i8* %399, i64 0, i64 16
 %401 = load i16, i16* %400
 %402 = zext i16 %401 to i32
 %403 = add i32 %402, 1
 %404 = trunc i32 %403 to i16
 %405 = load i8*, i8** %2
 %406 = getelementptr %struct.tdefl_compressor, i8* %405, i32 0, i32 36
 %407 = getelementptr [3 x [288 x i16]], i8* %406, i64 0, i64 2
 %408 = getelementptr [288 x i16], i8* %407, i64 0, i64 16
 store i16 %404, i16* %408
 %409 = load i32, i32* %8
 %410 = add i32 %409, 1
 store i32 %410, i32* %8
 %411 = zext i32 %409 to i64
 %412 = getelementptr [320 x i8], i8* %13, i64 0, i64 %411
 store i8 16, i8* %412
 %413 = load i32, i32* %10
 %414 = sub i32 %413, 3
 %415 = trunc i32 %414 to i8
 %416 = load i32, i32* %8
 %417 = add i32 %416, 1
 store i32 %417, i32* %8
 %418 = zext i32 %416 to i64
 %419 = getelementptr [320 x i8], i8* %13, i64 0, i64 %418
 store i8 %415, i8* %419
 br label %420
420:
 store i32 0, i32* %10
 br label %421
421:
 %422 = load i8*, i8** %2
 %423 = getelementptr %struct.tdefl_compressor, i8* %422, i32 0, i32 36
 %424 = getelementptr [3 x [288 x i16]], i8* %423, i64 0, i64 2
 %425 = load i8, i8* %15
 %426 = zext i8 %425 to i64
 %427 = getelementptr [288 x i16], i8* %424, i64 0, i64 %426
 %428 = load i16, i16* %427
 %429 = zext i16 %428 to i32
 %430 = add i32 %429, 1
 %431 = trunc i32 %430 to i16
 %432 = load i8*, i8** %2
 %433 = getelementptr %struct.tdefl_compressor, i8* %432, i32 0, i32 36
 %434 = getelementptr [3 x [288 x i16]], i8* %433, i64 0, i64 2
 %435 = load i8, i8* %15
 %436 = zext i8 %435 to i64
 %437 = getelementptr [288 x i16], i8* %434, i64 0, i64 %436
 store i16 %431, i16* %437
 %438 = load i8, i8* %15
 %439 = load i32, i32* %8
 %440 = add i32 %439, 1
 store i32 %440, i32* %8
 %441 = zext i32 %439 to i64
 %442 = getelementptr [320 x i8], i8* %13, i64 0, i64 %441
 store i8 %438, i8* %442
 br label %509
443:
 %444 = load i32, i32* %10
 %445 = add i32 %444, 1
 store i32 %445, i32* %10
 %446 = icmp eq i32 %445, 6
 br i1 %446, label %447, label %508
447:
 %448 = load i32, i32* %10
 %449 = icmp ne i32 %448, 0
 br i1 %449, label %450, label %507
450:
 %451 = load i32, i32* %10
 %452 = icmp ult i32 %451, 3
 br i1 %452, label %453, label %482
453:
 %454 = load i8*, i8** %2
 %455 = getelementptr %struct.tdefl_compressor, i8* %454, i32 0, i32 36
 %456 = getelementptr [3 x [288 x i16]], i8* %455, i64 0, i64 2
 %457 = load i8, i8* %14
 %458 = zext i8 %457 to i64
 %459 = getelementptr [288 x i16], i8* %456, i64 0, i64 %458
 %460 = load i16, i16* %459
 %461 = zext i16 %460 to i32
 %462 = load i32, i32* %10
 %463 = add i32 %461, %462
 %464 = trunc i32 %463 to i16
 %465 = load i8*, i8** %2
 %466 = getelementptr %struct.tdefl_compressor, i8* %465, i32 0, i32 36
 %467 = getelementptr [3 x [288 x i16]], i8* %466, i64 0, i64 2
 %468 = load i8, i8* %14
 %469 = zext i8 %468 to i64
 %470 = getelementptr [288 x i16], i8* %467, i64 0, i64 %469
 store i16 %464, i16* %470
 br label %471
471:
 %472 = load i32, i32* %10
 %473 = add i32 %472, -1
 store i32 %473, i32* %10
 %474 = icmp ne i32 %472, 0
 br i1 %474, label %475, label %481
475:
 %476 = load i8, i8* %14
 %477 = load i32, i32* %8
 %478 = add i32 %477, 1
 store i32 %478, i32* %8
 %479 = zext i32 %477 to i64
 %480 = getelementptr [320 x i8], i8* %13, i64 0, i64 %479
 store i8 %476, i8* %480
 br label %471
481:
 br label %506
482:
 %483 = load i8*, i8** %2
 %484 = getelementptr %struct.tdefl_compressor, i8* %483, i32 0, i32 36
 %485 = getelementptr [3 x [288 x i16]], i8* %484, i64 0, i64 2
 %486 = getelementptr [288 x i16], i8* %485, i64 0, i64 16
 %487 = load i16, i16* %486
 %488 = zext i16 %487 to i32
 %489 = add i32 %488, 1
 %490 = trunc i32 %489 to i16
 %491 = load i8*, i8** %2
 %492 = getelementptr %struct.tdefl_compressor, i8* %491, i32 0, i32 36
 %493 = getelementptr [3 x [288 x i16]], i8* %492, i64 0, i64 2
 %494 = getelementptr [288 x i16], i8* %493, i64 0, i64 16
 store i16 %490, i16* %494
 %495 = load i32, i32* %8
 %496 = add i32 %495, 1
 store i32 %496, i32* %8
 %497 = zext i32 %495 to i64
 %498 = getelementptr [320 x i8], i8* %13, i64 0, i64 %497
 store i8 16, i8* %498
 %499 = load i32, i32* %10
 %500 = sub i32 %499, 3
 %501 = trunc i32 %500 to i8
 %502 = load i32, i32* %8
 %503 = add i32 %502, 1
 store i32 %503, i32* %8
 %504 = zext i32 %502 to i64
 %505 = getelementptr [320 x i8], i8* %13, i64 0, i64 %504
 store i8 %501, i8* %505
 br label %506
506:
 store i32 0, i32* %10
 br label %507
507:
 br label %508
508:
 br label %509
509:
 br label %510
510:
 %511 = load i8, i8* %15
 store i8 %511, i8* %14
 br label %512
512:
 %513 = load i32, i32* %6
 %514 = add i32 %513, 1
 store i32 %514, i32* %6
 br label %112
515:
 %516 = load i32, i32* %10
 %517 = icmp ne i32 %516, 0
 br i1 %517, label %518, label %579
518:
 %519 = load i32, i32* %10
 %520 = icmp ne i32 %519, 0
 br i1 %520, label %521, label %578
521:
 %522 = load i32, i32* %10
 %523 = icmp ult i32 %522, 3
 br i1 %523, label %524, label %553
524:
 %525 = load i8*, i8** %2
 %526 = getelementptr %struct.tdefl_compressor, i8* %525, i32 0, i32 36
 %527 = getelementptr [3 x [288 x i16]], i8* %526, i64 0, i64 2
 %528 = load i8, i8* %14
 %529 = zext i8 %528 to i64
 %530 = getelementptr [288 x i16], i8* %527, i64 0, i64 %529
 %531 = load i16, i16* %530
 %532 = zext i16 %531 to i32
 %533 = load i32, i32* %10
 %534 = add i32 %532, %533
 %535 = trunc i32 %534 to i16
 %536 = load i8*, i8** %2
 %537 = getelementptr %struct.tdefl_compressor, i8* %536, i32 0, i32 36
 %538 = getelementptr [3 x [288 x i16]], i8* %537, i64 0, i64 2
 %539 = load i8, i8* %14
 %540 = zext i8 %539 to i64
 %541 = getelementptr [288 x i16], i8* %538, i64 0, i64 %540
 store i16 %535, i16* %541
 br label %542
542:
 %543 = load i32, i32* %10
 %544 = add i32 %543, -1
 store i32 %544, i32* %10
 %545 = icmp ne i32 %543, 0
 br i1 %545, label %546, label %552
546:
 %547 = load i8, i8* %14
 %548 = load i32, i32* %8
 %549 = add i32 %548, 1
 store i32 %549, i32* %8
 %550 = zext i32 %548 to i64
 %551 = getelementptr [320 x i8], i8* %13, i64 0, i64 %550
 store i8 %547, i8* %551
 br label %542
552:
 br label %577
553:
 %554 = load i8*, i8** %2
 %555 = getelementptr %struct.tdefl_compressor, i8* %554, i32 0, i32 36
 %556 = getelementptr [3 x [288 x i16]], i8* %555, i64 0, i64 2
 %557 = getelementptr [288 x i16], i8* %556, i64 0, i64 16
 %558 = load i16, i16* %557
 %559 = zext i16 %558 to i32
 %560 = add i32 %559, 1
 %561 = trunc i32 %560 to i16
 %562 = load i8*, i8** %2
 %563 = getelementptr %struct.tdefl_compressor, i8* %562, i32 0, i32 36
 %564 = getelementptr [3 x [288 x i16]], i8* %563, i64 0, i64 2
 %565 = getelementptr [288 x i16], i8* %564, i64 0, i64 16
 store i16 %561, i16* %565
 %566 = load i32, i32* %8
 %567 = add i32 %566, 1
 store i32 %567, i32* %8
 %568 = zext i32 %566 to i64
 %569 = getelementptr [320 x i8], i8* %13, i64 0, i64 %568
 store i8 16, i8* %569
 %570 = load i32, i32* %10
 %571 = sub i32 %570, 3
 %572 = trunc i32 %571 to i8
 %573 = load i32, i32* %8
 %574 = add i32 %573, 1
 store i32 %574, i32* %8
 %575 = zext i32 %573 to i64
 %576 = getelementptr [320 x i8], i8* %13, i64 0, i64 %575
 store i8 %572, i8* %576
 br label %577
577:
 store i32 0, i32* %10
 br label %578
578:
 br label %663
579:
 %580 = load i32, i32* %9
 %581 = icmp ne i32 %580, 0
 br i1 %581, label %582, label %662
582:
 %583 = load i32, i32* %9
 %584 = icmp ult i32 %583, 3
 br i1 %584, label %585, label %609
585:
 %586 = load i8*, i8** %2
 %587 = getelementptr %struct.tdefl_compressor, i8* %586, i32 0, i32 36
 %588 = getelementptr [3 x [288 x i16]], i8* %587, i64 0, i64 2
 %589 = getelementptr [288 x i16], i8* %588, i64 0, i64 0
 %590 = load i16, i16* %589
 %591 = zext i16 %590 to i32
 %592 = load i32, i32* %9
 %593 = add i32 %591, %592
 %594 = trunc i32 %593 to i16
 %595 = load i8*, i8** %2
 %596 = getelementptr %struct.tdefl_compressor, i8* %595, i32 0, i32 36
 %597 = getelementptr [3 x [288 x i16]], i8* %596, i64 0, i64 2
 %598 = getelementptr [288 x i16], i8* %597, i64 0, i64 0
 store i16 %594, i16* %598
 br label %599
599:
 %600 = load i32, i32* %9
 %601 = add i32 %600, -1
 store i32 %601, i32* %9
 %602 = icmp ne i32 %600, 0
 br i1 %602, label %603, label %608
603:
 %604 = load i32, i32* %8
 %605 = add i32 %604, 1
 store i32 %605, i32* %8
 %606 = zext i32 %604 to i64
 %607 = getelementptr [320 x i8], i8* %13, i64 0, i64 %606
 store i8 0, i8* %607
 br label %599
608:
 br label %661
609:
 %610 = load i32, i32* %9
 %611 = icmp ule i32 %610, 10
 br i1 %611, label %612, label %636
612:
 %613 = load i8*, i8** %2
 %614 = getelementptr %struct.tdefl_compressor, i8* %613, i32 0, i32 36
 %615 = getelementptr [3 x [288 x i16]], i8* %614, i64 0, i64 2
 %616 = getelementptr [288 x i16], i8* %615, i64 0, i64 17
 %617 = load i16, i16* %616
 %618 = zext i16 %617 to i32
 %619 = add i32 %618, 1
 %620 = trunc i32 %619 to i16
 %621 = load i8*, i8** %2
 %622 = getelementptr %struct.tdefl_compressor, i8* %621, i32 0, i32 36
 %623 = getelementptr [3 x [288 x i16]], i8* %622, i64 0, i64 2
 %624 = getelementptr [288 x i16], i8* %623, i64 0, i64 17
 store i16 %620, i16* %624
 %625 = load i32, i32* %8
 %626 = add i32 %625, 1
 store i32 %626, i32* %8
 %627 = zext i32 %625 to i64
 %628 = getelementptr [320 x i8], i8* %13, i64 0, i64 %627
 store i8 17, i8* %628
 %629 = load i32, i32* %9
 %630 = sub i32 %629, 3
 %631 = trunc i32 %630 to i8
 %632 = load i32, i32* %8
 %633 = add i32 %632, 1
 store i32 %633, i32* %8
 %634 = zext i32 %632 to i64
 %635 = getelementptr [320 x i8], i8* %13, i64 0, i64 %634
 store i8 %631, i8* %635
 br label %660
636:
 %637 = load i8*, i8** %2
 %638 = getelementptr %struct.tdefl_compressor, i8* %637, i32 0, i32 36
 %639 = getelementptr [3 x [288 x i16]], i8* %638, i64 0, i64 2
 %640 = getelementptr [288 x i16], i8* %639, i64 0, i64 18
 %641 = load i16, i16* %640
 %642 = zext i16 %641 to i32
 %643 = add i32 %642, 1
 %644 = trunc i32 %643 to i16
 %645 = load i8*, i8** %2
 %646 = getelementptr %struct.tdefl_compressor, i8* %645, i32 0, i32 36
 %647 = getelementptr [3 x [288 x i16]], i8* %646, i64 0, i64 2
 %648 = getelementptr [288 x i16], i8* %647, i64 0, i64 18
 store i16 %644, i16* %648
 %649 = load i32, i32* %8
 %650 = add i32 %649, 1
 store i32 %650, i32* %8
 %651 = zext i32 %649 to i64
 %652 = getelementptr [320 x i8], i8* %13, i64 0, i64 %651
 store i8 18, i8* %652
 %653 = load i32, i32* %9
 %654 = sub i32 %653, 11
 %655 = trunc i32 %654 to i8
 %656 = load i32, i32* %8
 %657 = add i32 %656, 1
 store i32 %657, i32* %8
 %658 = zext i32 %656 to i64
 %659 = getelementptr [320 x i8], i8* %13, i64 0, i64 %658
 store i8 %655, i8* %659
 br label %660
660:
 br label %661
661:
 store i32 0, i32* %9
 br label %662
662:
 br label %663
663:
 %664 = load i8*, i8** %2
 call void @tdefl_optimize_huffman_table (i8* %664, i32 2, i32 19, i32 7, i32 0)
 br label %665
665:
 store i32 2, i32* %16
 store i32 2, i32* %17
 %666 = load i32, i32* %16
 %667 = load i32, i32* %17
 %668 = shl i32 1, %667
 %669 = sub i32 %668, 1
 %670 = icmp ule i32 %666, %669
 %671 = xor i1 %670, 1
 %672 = zext i1 %671 to i32
 %673 = sext i32 %672 to i64
 %674 = icmp ne i64 %673, 0
 br i1 %674, label %675, label %677
675:
 call void @__assert_rtn (i8* @__func__.tdefl_start_dynamic_block, i8* @.str.11, i32 2479, i8* @.str.72)
 unreachable
676:
 br label %678
677:
 br label %678
678:
 %679 = load i32, i32* %16
 %680 = load i8*, i8** %2
 %681 = getelementptr %struct.tdefl_compressor, i8* %680, i32 0, i32 16
 %682 = load i32, i32* %681
 %683 = shl i32 %679, %682
 %684 = load i8*, i8** %2
 %685 = getelementptr %struct.tdefl_compressor, i8* %684, i32 0, i32 17
 %686 = load i32, i32* %685
 %687 = or i32 %686, %683
 store i32 %687, i32* %685
 %688 = load i32, i32* %17
 %689 = load i8*, i8** %2
 %690 = getelementptr %struct.tdefl_compressor, i8* %689, i32 0, i32 16
 %691 = load i32, i32* %690
 %692 = add i32 %691, %688
 store i32 %692, i32* %690
 br label %693
693:
 %694 = load i8*, i8** %2
 %695 = getelementptr %struct.tdefl_compressor, i8* %694, i32 0, i32 16
 %696 = load i32, i32* %695
 %697 = icmp uge i32 %696, 8
 br i1 %697, label %698, label %724
698:
 %699 = load i8*, i8** %2
 %700 = getelementptr %struct.tdefl_compressor, i8* %699, i32 0, i32 11
 %701 = load i8*, i8** %700
 %702 = load i8*, i8** %2
 %703 = getelementptr %struct.tdefl_compressor, i8* %702, i32 0, i32 12
 %704 = load i8*, i8** %703
 %705 = icmp ult i8* %701, %704
 br i1 %705, label %706, label %715
706:
 %707 = load i8*, i8** %2
 %708 = getelementptr %struct.tdefl_compressor, i8* %707, i32 0, i32 17
 %709 = load i32, i32* %708
 %710 = trunc i32 %709 to i8
 %711 = load i8*, i8** %2
 %712 = getelementptr %struct.tdefl_compressor, i8* %711, i32 0, i32 11
 %713 = load i8*, i8** %712
 %714 = getelementptr i8, i8* %713, i32 1
 store i8* %714, i8** %712
 store i8 %710, i8* %713
 br label %715
715:
 %716 = load i8*, i8** %2
 %717 = getelementptr %struct.tdefl_compressor, i8* %716, i32 0, i32 17
 %718 = load i32, i32* %717
 %719 = lshr i32 %718, 8
 store i32 %719, i32* %717
 %720 = load i8*, i8** %2
 %721 = getelementptr %struct.tdefl_compressor, i8* %720, i32 0, i32 16
 %722 = load i32, i32* %721
 %723 = sub i32 %722, 8
 store i32 %723, i32* %721
 br label %693
724:
 br label %725
725:
 br label %726
726:
 %727 = load i32, i32* %3
 %728 = sub i32 %727, 257
 store i32 %728, i32* %18
 store i32 5, i32* %19
 %729 = load i32, i32* %18
 %730 = load i32, i32* %19
 %731 = shl i32 1, %730
 %732 = sub i32 %731, 1
 %733 = icmp ule i32 %729, %732
 %734 = xor i1 %733, 1
 %735 = zext i1 %734 to i32
 %736 = sext i32 %735 to i64
 %737 = icmp ne i64 %736, 0
 br i1 %737, label %738, label %740
738:
 call void @__assert_rtn (i8* @__func__.tdefl_start_dynamic_block, i8* @.str.11, i32 2481, i8* @.str.72)
 unreachable
739:
 br label %741
740:
 br label %741
741:
 %742 = load i32, i32* %18
 %743 = load i8*, i8** %2
 %744 = getelementptr %struct.tdefl_compressor, i8* %743, i32 0, i32 16
 %745 = load i32, i32* %744
 %746 = shl i32 %742, %745
 %747 = load i8*, i8** %2
 %748 = getelementptr %struct.tdefl_compressor, i8* %747, i32 0, i32 17
 %749 = load i32, i32* %748
 %750 = or i32 %749, %746
 store i32 %750, i32* %748
 %751 = load i32, i32* %19
 %752 = load i8*, i8** %2
 %753 = getelementptr %struct.tdefl_compressor, i8* %752, i32 0, i32 16
 %754 = load i32, i32* %753
 %755 = add i32 %754, %751
 store i32 %755, i32* %753
 br label %756
756:
 %757 = load i8*, i8** %2
 %758 = getelementptr %struct.tdefl_compressor, i8* %757, i32 0, i32 16
 %759 = load i32, i32* %758
 %760 = icmp uge i32 %759, 8
 br i1 %760, label %761, label %787
761:
 %762 = load i8*, i8** %2
 %763 = getelementptr %struct.tdefl_compressor, i8* %762, i32 0, i32 11
 %764 = load i8*, i8** %763
 %765 = load i8*, i8** %2
 %766 = getelementptr %struct.tdefl_compressor, i8* %765, i32 0, i32 12
 %767 = load i8*, i8** %766
 %768 = icmp ult i8* %764, %767
 br i1 %768, label %769, label %778
769:
 %770 = load i8*, i8** %2
 %771 = getelementptr %struct.tdefl_compressor, i8* %770, i32 0, i32 17
 %772 = load i32, i32* %771
 %773 = trunc i32 %772 to i8
 %774 = load i8*, i8** %2
 %775 = getelementptr %struct.tdefl_compressor, i8* %774, i32 0, i32 11
 %776 = load i8*, i8** %775
 %777 = getelementptr i8, i8* %776, i32 1
 store i8* %777, i8** %775
 store i8 %773, i8* %776
 br label %778
778:
 %779 = load i8*, i8** %2
 %780 = getelementptr %struct.tdefl_compressor, i8* %779, i32 0, i32 17
 %781 = load i32, i32* %780
 %782 = lshr i32 %781, 8
 store i32 %782, i32* %780
 %783 = load i8*, i8** %2
 %784 = getelementptr %struct.tdefl_compressor, i8* %783, i32 0, i32 16
 %785 = load i32, i32* %784
 %786 = sub i32 %785, 8
 store i32 %786, i32* %784
 br label %756
787:
 br label %788
788:
 br label %789
789:
 %790 = load i32, i32* %4
 %791 = sub i32 %790, 1
 store i32 %791, i32* %20
 store i32 5, i32* %21
 %792 = load i32, i32* %20
 %793 = load i32, i32* %21
 %794 = shl i32 1, %793
 %795 = sub i32 %794, 1
 %796 = icmp ule i32 %792, %795
 %797 = xor i1 %796, 1
 %798 = zext i1 %797 to i32
 %799 = sext i32 %798 to i64
 %800 = icmp ne i64 %799, 0
 br i1 %800, label %801, label %803
801:
 call void @__assert_rtn (i8* @__func__.tdefl_start_dynamic_block, i8* @.str.11, i32 2482, i8* @.str.72)
 unreachable
802:
 br label %804
803:
 br label %804
804:
 %805 = load i32, i32* %20
 %806 = load i8*, i8** %2
 %807 = getelementptr %struct.tdefl_compressor, i8* %806, i32 0, i32 16
 %808 = load i32, i32* %807
 %809 = shl i32 %805, %808
 %810 = load i8*, i8** %2
 %811 = getelementptr %struct.tdefl_compressor, i8* %810, i32 0, i32 17
 %812 = load i32, i32* %811
 %813 = or i32 %812, %809
 store i32 %813, i32* %811
 %814 = load i32, i32* %21
 %815 = load i8*, i8** %2
 %816 = getelementptr %struct.tdefl_compressor, i8* %815, i32 0, i32 16
 %817 = load i32, i32* %816
 %818 = add i32 %817, %814
 store i32 %818, i32* %816
 br label %819
819:
 %820 = load i8*, i8** %2
 %821 = getelementptr %struct.tdefl_compressor, i8* %820, i32 0, i32 16
 %822 = load i32, i32* %821
 %823 = icmp uge i32 %822, 8
 br i1 %823, label %824, label %850
824:
 %825 = load i8*, i8** %2
 %826 = getelementptr %struct.tdefl_compressor, i8* %825, i32 0, i32 11
 %827 = load i8*, i8** %826
 %828 = load i8*, i8** %2
 %829 = getelementptr %struct.tdefl_compressor, i8* %828, i32 0, i32 12
 %830 = load i8*, i8** %829
 %831 = icmp ult i8* %827, %830
 br i1 %831, label %832, label %841
832:
 %833 = load i8*, i8** %2
 %834 = getelementptr %struct.tdefl_compressor, i8* %833, i32 0, i32 17
 %835 = load i32, i32* %834
 %836 = trunc i32 %835 to i8
 %837 = load i8*, i8** %2
 %838 = getelementptr %struct.tdefl_compressor, i8* %837, i32 0, i32 11
 %839 = load i8*, i8** %838
 %840 = getelementptr i8, i8* %839, i32 1
 store i8* %840, i8** %838
 store i8 %836, i8* %839
 br label %841
841:
 %842 = load i8*, i8** %2
 %843 = getelementptr %struct.tdefl_compressor, i8* %842, i32 0, i32 17
 %844 = load i32, i32* %843
 %845 = lshr i32 %844, 8
 store i32 %845, i32* %843
 %846 = load i8*, i8** %2
 %847 = getelementptr %struct.tdefl_compressor, i8* %846, i32 0, i32 16
 %848 = load i32, i32* %847
 %849 = sub i32 %848, 8
 store i32 %849, i32* %847
 br label %819
850:
 br label %851
851:
 store i32 18, i32* %5
 br label %852
852:
 %853 = load i32, i32* %5
 %854 = icmp sge i32 %853, 0
 br i1 %854, label %855, label %872
855:
 %856 = load i8*, i8** %2
 %857 = getelementptr %struct.tdefl_compressor, i8* %856, i32 0, i32 38
 %858 = getelementptr [3 x [288 x i8]], i8* %857, i64 0, i64 2
 %859 = load i32, i32* %5
 %860 = sext i32 %859 to i64
 %861 = getelementptr [19 x i8], i8* @s_tdefl_packed_code_size_syms_swizzle, i64 0, i64 %860
 %862 = load i8, i8* %861
 %863 = zext i8 %862 to i64
 %864 = getelementptr [288 x i8], i8* %858, i64 0, i64 %863
 %865 = load i8, i8* %864
 %866 = icmp ne i8 %865, 0
 br i1 %866, label %867, label %868
867:
 br label %872
868:
 br label %869
869:
 %870 = load i32, i32* %5
 %871 = add i32 %870, -1
 store i32 %871, i32* %5
 br label %852
872:
 %873 = load i32, i32* %5
 %874 = add i32 %873, 1
 %875 = icmp sgt i32 4, %874
 br i1 %875, label %876, label %877
876:
 br label %880
877:
 %878 = load i32, i32* %5
 %879 = add i32 %878, 1
 br label %880
880:
 %881 = phi i32 [4, %876], [%879, %877]
 store i32 %881, i32* %5
 br label %882
882:
 %883 = load i32, i32* %5
 %884 = sub i32 %883, 4
 store i32 %884, i32* %22
 store i32 4, i32* %23
 %885 = load i32, i32* %22
 %886 = load i32, i32* %23
 %887 = shl i32 1, %886
 %888 = sub i32 %887, 1
 %889 = icmp ule i32 %885, %888
 %890 = xor i1 %889, 1
 %891 = zext i1 %890 to i32
 %892 = sext i32 %891 to i64
 %893 = icmp ne i64 %892, 0
 br i1 %893, label %894, label %896
894:
 call void @__assert_rtn (i8* @__func__.tdefl_start_dynamic_block, i8* @.str.11, i32 2488, i8* @.str.72)
 unreachable
895:
 br label %897
896:
 br label %897
897:
 %898 = load i32, i32* %22
 %899 = load i8*, i8** %2
 %900 = getelementptr %struct.tdefl_compressor, i8* %899, i32 0, i32 16
 %901 = load i32, i32* %900
 %902 = shl i32 %898, %901
 %903 = load i8*, i8** %2
 %904 = getelementptr %struct.tdefl_compressor, i8* %903, i32 0, i32 17
 %905 = load i32, i32* %904
 %906 = or i32 %905, %902
 store i32 %906, i32* %904
 %907 = load i32, i32* %23
 %908 = load i8*, i8** %2
 %909 = getelementptr %struct.tdefl_compressor, i8* %908, i32 0, i32 16
 %910 = load i32, i32* %909
 %911 = add i32 %910, %907
 store i32 %911, i32* %909
 br label %912
912:
 %913 = load i8*, i8** %2
 %914 = getelementptr %struct.tdefl_compressor, i8* %913, i32 0, i32 16
 %915 = load i32, i32* %914
 %916 = icmp uge i32 %915, 8
 br i1 %916, label %917, label %943
917:
 %918 = load i8*, i8** %2
 %919 = getelementptr %struct.tdefl_compressor, i8* %918, i32 0, i32 11
 %920 = load i8*, i8** %919
 %921 = load i8*, i8** %2
 %922 = getelementptr %struct.tdefl_compressor, i8* %921, i32 0, i32 12
 %923 = load i8*, i8** %922
 %924 = icmp ult i8* %920, %923
 br i1 %924, label %925, label %934
925:
 %926 = load i8*, i8** %2
 %927 = getelementptr %struct.tdefl_compressor, i8* %926, i32 0, i32 17
 %928 = load i32, i32* %927
 %929 = trunc i32 %928 to i8
 %930 = load i8*, i8** %2
 %931 = getelementptr %struct.tdefl_compressor, i8* %930, i32 0, i32 11
 %932 = load i8*, i8** %931
 %933 = getelementptr i8, i8* %932, i32 1
 store i8* %933, i8** %931
 store i8 %929, i8* %932
 br label %934
934:
 %935 = load i8*, i8** %2
 %936 = getelementptr %struct.tdefl_compressor, i8* %935, i32 0, i32 17
 %937 = load i32, i32* %936
 %938 = lshr i32 %937, 8
 store i32 %938, i32* %936
 %939 = load i8*, i8** %2
 %940 = getelementptr %struct.tdefl_compressor, i8* %939, i32 0, i32 16
 %941 = load i32, i32* %940
 %942 = sub i32 %941, 8
 store i32 %942, i32* %940
 br label %912
943:
 br label %944
944:
 store i32 0, i32* %6
 br label %945
945:
 %946 = load i32, i32* %6
 %947 = load i32, i32* %5
 %948 = icmp slt i32 %946, %947
 br i1 %948, label %949, label %1025
949:
 br label %950
950:
 %951 = load i8*, i8** %2
 %952 = getelementptr %struct.tdefl_compressor, i8* %951, i32 0, i32 38
 %953 = getelementptr [3 x [288 x i8]], i8* %952, i64 0, i64 2
 %954 = load i32, i32* %6
 %955 = zext i32 %954 to i64
 %956 = getelementptr [19 x i8], i8* @s_tdefl_packed_code_size_syms_swizzle, i64 0, i64 %955
 %957 = load i8, i8* %956
 %958 = zext i8 %957 to i64
 %959 = getelementptr [288 x i8], i8* %953, i64 0, i64 %958
 %960 = load i8, i8* %959
 %961 = zext i8 %960 to i32
 store i32 %961, i32* %24
 store i32 3, i32* %25
 %962 = load i32, i32* %24
 %963 = load i32, i32* %25
 %964 = shl i32 1, %963
 %965 = sub i32 %964, 1
 %966 = icmp ule i32 %962, %965
 %967 = xor i1 %966, 1
 %968 = zext i1 %967 to i32
 %969 = sext i32 %968 to i64
 %970 = icmp ne i64 %969, 0
 br i1 %970, label %971, label %973
971:
 call void @__assert_rtn (i8* @__func__.tdefl_start_dynamic_block, i8* @.str.11, i32 2490, i8* @.str.72)
 unreachable
972:
 br label %974
973:
 br label %974
974:
 %975 = load i32, i32* %24
 %976 = load i8*, i8** %2
 %977 = getelementptr %struct.tdefl_compressor, i8* %976, i32 0, i32 16
 %978 = load i32, i32* %977
 %979 = shl i32 %975, %978
 %980 = load i8*, i8** %2
 %981 = getelementptr %struct.tdefl_compressor, i8* %980, i32 0, i32 17
 %982 = load i32, i32* %981
 %983 = or i32 %982, %979
 store i32 %983, i32* %981
 %984 = load i32, i32* %25
 %985 = load i8*, i8** %2
 %986 = getelementptr %struct.tdefl_compressor, i8* %985, i32 0, i32 16
 %987 = load i32, i32* %986
 %988 = add i32 %987, %984
 store i32 %988, i32* %986
 br label %989
989:
 %990 = load i8*, i8** %2
 %991 = getelementptr %struct.tdefl_compressor, i8* %990, i32 0, i32 16
 %992 = load i32, i32* %991
 %993 = icmp uge i32 %992, 8
 br i1 %993, label %994, label %1020
994:
 %995 = load i8*, i8** %2
 %996 = getelementptr %struct.tdefl_compressor, i8* %995, i32 0, i32 11
 %997 = load i8*, i8** %996
 %998 = load i8*, i8** %2
 %999 = getelementptr %struct.tdefl_compressor, i8* %998, i32 0, i32 12
 %1000 = load i8*, i8** %999
 %1001 = icmp ult i8* %997, %1000
 br i1 %1001, label %1002, label %1011
1002:
 %1003 = load i8*, i8** %2
 %1004 = getelementptr %struct.tdefl_compressor, i8* %1003, i32 0, i32 17
 %1005 = load i32, i32* %1004
 %1006 = trunc i32 %1005 to i8
 %1007 = load i8*, i8** %2
 %1008 = getelementptr %struct.tdefl_compressor, i8* %1007, i32 0, i32 11
 %1009 = load i8*, i8** %1008
 %1010 = getelementptr i8, i8* %1009, i32 1
 store i8* %1010, i8** %1008
 store i8 %1006, i8* %1009
 br label %1011
1011:
 %1012 = load i8*, i8** %2
 %1013 = getelementptr %struct.tdefl_compressor, i8* %1012, i32 0, i32 17
 %1014 = load i32, i32* %1013
 %1015 = lshr i32 %1014, 8
 store i32 %1015, i32* %1013
 %1016 = load i8*, i8** %2
 %1017 = getelementptr %struct.tdefl_compressor, i8* %1016, i32 0, i32 16
 %1018 = load i32, i32* %1017
 %1019 = sub i32 %1018, 8
 store i32 %1019, i32* %1017
 br label %989
1020:
 br label %1021
1021:
 br label %1022
1022:
 %1023 = load i32, i32* %6
 %1024 = add i32 %1023, 1
 store i32 %1024, i32* %6
 br label %945
1025:
 store i32 0, i32* %11
 br label %1026
1026:
 %1027 = load i32, i32* %11
 %1028 = load i32, i32* %8
 %1029 = icmp ult i32 %1027, %1028
 br i1 %1029, label %1030, label %1201
1030:
 %1031 = load i32, i32* %11
 %1032 = add i32 %1031, 1
 store i32 %1032, i32* %11
 %1033 = zext i32 %1031 to i64
 %1034 = getelementptr [320 x i8], i8* %13, i64 0, i64 %1033
 %1035 = load i8, i8* %1034
 %1036 = zext i8 %1035 to i32
 store i32 %1036, i32* %26
 %1037 = load i32, i32* %26
 %1038 = icmp ult i32 %1037, 19
 %1039 = xor i1 %1038, 1
 %1040 = zext i1 %1039 to i32
 %1041 = sext i32 %1040 to i64
 %1042 = icmp ne i64 %1041, 0
 br i1 %1042, label %1043, label %1045
1043:
 call void @__assert_rtn (i8* @__func__.tdefl_start_dynamic_block, i8* @.str.11, i32 2495, i8* @.str.74)
 unreachable
1044:
 br label %1046
1045:
 br label %1046
1046:
 br label %1047
1047:
 %1048 = load i8*, i8** %2
 %1049 = getelementptr %struct.tdefl_compressor, i8* %1048, i32 0, i32 37
 %1050 = getelementptr [3 x [288 x i16]], i8* %1049, i64 0, i64 2
 %1051 = load i32, i32* %26
 %1052 = zext i32 %1051 to i64
 %1053 = getelementptr [288 x i16], i8* %1050, i64 0, i64 %1052
 %1054 = load i16, i16* %1053
 %1055 = zext i16 %1054 to i32
 store i32 %1055, i32* %27
 %1056 = load i8*, i8** %2
 %1057 = getelementptr %struct.tdefl_compressor, i8* %1056, i32 0, i32 38
 %1058 = getelementptr [3 x [288 x i8]], i8* %1057, i64 0, i64 2
 %1059 = load i32, i32* %26
 %1060 = zext i32 %1059 to i64
 %1061 = getelementptr [288 x i8], i8* %1058, i64 0, i64 %1060
 %1062 = load i8, i8* %1061
 %1063 = zext i8 %1062 to i32
 store i32 %1063, i32* %28
 %1064 = load i32, i32* %27
 %1065 = load i32, i32* %28
 %1066 = shl i32 1, %1065
 %1067 = sub i32 %1066, 1
 %1068 = icmp ule i32 %1064, %1067
 %1069 = xor i1 %1068, 1
 %1070 = zext i1 %1069 to i32
 %1071 = sext i32 %1070 to i64
 %1072 = icmp ne i64 %1071, 0
 br i1 %1072, label %1073, label %1075
1073:
 call void @__assert_rtn (i8* @__func__.tdefl_start_dynamic_block, i8* @.str.11, i32 2496, i8* @.str.72)
 unreachable
1074:
 br label %1076
1075:
 br label %1076
1076:
 %1077 = load i32, i32* %27
 %1078 = load i8*, i8** %2
 %1079 = getelementptr %struct.tdefl_compressor, i8* %1078, i32 0, i32 16
 %1080 = load i32, i32* %1079
 %1081 = shl i32 %1077, %1080
 %1082 = load i8*, i8** %2
 %1083 = getelementptr %struct.tdefl_compressor, i8* %1082, i32 0, i32 17
 %1084 = load i32, i32* %1083
 %1085 = or i32 %1084, %1081
 store i32 %1085, i32* %1083
 %1086 = load i32, i32* %28
 %1087 = load i8*, i8** %2
 %1088 = getelementptr %struct.tdefl_compressor, i8* %1087, i32 0, i32 16
 %1089 = load i32, i32* %1088
 %1090 = add i32 %1089, %1086
 store i32 %1090, i32* %1088
 br label %1091
1091:
 %1092 = load i8*, i8** %2
 %1093 = getelementptr %struct.tdefl_compressor, i8* %1092, i32 0, i32 16
 %1094 = load i32, i32* %1093
 %1095 = icmp uge i32 %1094, 8
 br i1 %1095, label %1096, label %1122
1096:
 %1097 = load i8*, i8** %2
 %1098 = getelementptr %struct.tdefl_compressor, i8* %1097, i32 0, i32 11
 %1099 = load i8*, i8** %1098
 %1100 = load i8*, i8** %2
 %1101 = getelementptr %struct.tdefl_compressor, i8* %1100, i32 0, i32 12
 %1102 = load i8*, i8** %1101
 %1103 = icmp ult i8* %1099, %1102
 br i1 %1103, label %1104, label %1113
1104:
 %1105 = load i8*, i8** %2
 %1106 = getelementptr %struct.tdefl_compressor, i8* %1105, i32 0, i32 17
 %1107 = load i32, i32* %1106
 %1108 = trunc i32 %1107 to i8
 %1109 = load i8*, i8** %2
 %1110 = getelementptr %struct.tdefl_compressor, i8* %1109, i32 0, i32 11
 %1111 = load i8*, i8** %1110
 %1112 = getelementptr i8, i8* %1111, i32 1
 store i8* %1112, i8** %1110
 store i8 %1108, i8* %1111
 br label %1113
1113:
 %1114 = load i8*, i8** %2
 %1115 = getelementptr %struct.tdefl_compressor, i8* %1114, i32 0, i32 17
 %1116 = load i32, i32* %1115
 %1117 = lshr i32 %1116, 8
 store i32 %1117, i32* %1115
 %1118 = load i8*, i8** %2
 %1119 = getelementptr %struct.tdefl_compressor, i8* %1118, i32 0, i32 16
 %1120 = load i32, i32* %1119
 %1121 = sub i32 %1120, 8
 store i32 %1121, i32* %1119
 br label %1091
1122:
 br label %1123
1123:
 %1124 = load i32, i32* %26
 %1125 = icmp uge i32 %1124, 16
 br i1 %1125, label %1126, label %1200
1126:
 br label %1127
1127:
 %1128 = load i32, i32* %11
 %1129 = add i32 %1128, 1
 store i32 %1129, i32* %11
 %1130 = zext i32 %1128 to i64
 %1131 = getelementptr [320 x i8], i8* %13, i64 0, i64 %1130
 %1132 = load i8, i8* %1131
 %1133 = zext i8 %1132 to i32
 store i32 %1133, i32* %29
 %1134 = load i32, i32* %26
 %1135 = sub i32 %1134, 16
 %1136 = zext i32 %1135 to i64
 %1137 = getelementptr [4 x i8], i8* @.str.15, i64 0, i64 %1136
 %1138 = load i8, i8* %1137
 %1139 = sext i8 %1138 to i32
 store i32 %1139, i32* %30
 %1140 = load i32, i32* %29
 %1141 = load i32, i32* %30
 %1142 = shl i32 1, %1141
 %1143 = sub i32 %1142, 1
 %1144 = icmp ule i32 %1140, %1143
 %1145 = xor i1 %1144, 1
 %1146 = zext i1 %1145 to i32
 %1147 = sext i32 %1146 to i64
 %1148 = icmp ne i64 %1147, 0
 br i1 %1148, label %1149, label %1151
1149:
 call void @__assert_rtn (i8* @__func__.tdefl_start_dynamic_block, i8* @.str.11, i32 2498, i8* @.str.72)
 unreachable
1150:
 br label %1152
1151:
 br label %1152
1152:
 %1153 = load i32, i32* %29
 %1154 = load i8*, i8** %2
 %1155 = getelementptr %struct.tdefl_compressor, i8* %1154, i32 0, i32 16
 %1156 = load i32, i32* %1155
 %1157 = shl i32 %1153, %1156
 %1158 = load i8*, i8** %2
 %1159 = getelementptr %struct.tdefl_compressor, i8* %1158, i32 0, i32 17
 %1160 = load i32, i32* %1159
 %1161 = or i32 %1160, %1157
 store i32 %1161, i32* %1159
 %1162 = load i32, i32* %30
 %1163 = load i8*, i8** %2
 %1164 = getelementptr %struct.tdefl_compressor, i8* %1163, i32 0, i32 16
 %1165 = load i32, i32* %1164
 %1166 = add i32 %1165, %1162
 store i32 %1166, i32* %1164
 br label %1167
1167:
 %1168 = load i8*, i8** %2
 %1169 = getelementptr %struct.tdefl_compressor, i8* %1168, i32 0, i32 16
 %1170 = load i32, i32* %1169
 %1171 = icmp uge i32 %1170, 8
 br i1 %1171, label %1172, label %1198
1172:
 %1173 = load i8*, i8** %2
 %1174 = getelementptr %struct.tdefl_compressor, i8* %1173, i32 0, i32 11
 %1175 = load i8*, i8** %1174
 %1176 = load i8*, i8** %2
 %1177 = getelementptr %struct.tdefl_compressor, i8* %1176, i32 0, i32 12
 %1178 = load i8*, i8** %1177
 %1179 = icmp ult i8* %1175, %1178
 br i1 %1179, label %1180, label %1189
1180:
 %1181 = load i8*, i8** %2
 %1182 = getelementptr %struct.tdefl_compressor, i8* %1181, i32 0, i32 17
 %1183 = load i32, i32* %1182
 %1184 = trunc i32 %1183 to i8
 %1185 = load i8*, i8** %2
 %1186 = getelementptr %struct.tdefl_compressor, i8* %1185, i32 0, i32 11
 %1187 = load i8*, i8** %1186
 %1188 = getelementptr i8, i8* %1187, i32 1
 store i8* %1188, i8** %1186
 store i8 %1184, i8* %1187
 br label %1189
1189:
 %1190 = load i8*, i8** %2
 %1191 = getelementptr %struct.tdefl_compressor, i8* %1190, i32 0, i32 17
 %1192 = load i32, i32* %1191
 %1193 = lshr i32 %1192, 8
 store i32 %1193, i32* %1191
 %1194 = load i8*, i8** %2
 %1195 = getelementptr %struct.tdefl_compressor, i8* %1194, i32 0, i32 16
 %1196 = load i32, i32* %1195
 %1197 = sub i32 %1196, 8
 store i32 %1197, i32* %1195
 br label %1167
1198:
 br label %1199
1199:
 br label %1200
1200:
 br label %1026
1201:
 ret void
}

define i32 @tdefl_compress_lz_codes (i8* %0) {
 %2 = alloca i8*
 %3 = alloca i32
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i32
 %7 = alloca i32
 %8 = alloca i32
 %9 = alloca i32
 %10 = alloca i32
 %11 = alloca i32
 %12 = alloca i32
 %13 = alloca i32
 %14 = alloca i32
 %15 = alloca i32
 %16 = alloca i32
 %17 = alloca i32
 %18 = alloca i32
 %19 = alloca i32
 %20 = alloca i32
 %21 = alloca i32
 store i8* %0, i8** %2
 store i32 1, i32* %3
 %22 = load i8*, i8** %2
 %23 = getelementptr %struct.tdefl_compressor, i8* %22, i32 0, i32 39
 %24 = getelementptr [65536 x i8], i8* %23, i64 0, i64 0
 store i8* %24, i8** %4
 br label %25
25:
 %26 = load i8*, i8** %4
 %27 = load i8*, i8** %2
 %28 = getelementptr %struct.tdefl_compressor, i8* %27, i32 0, i32 9
 %29 = load i8*, i8** %28
 %30 = icmp ult i8* %26, %29
 br i1 %30, label %31, label %528
31:
 %32 = load i32, i32* %3
 %33 = icmp eq i32 %32, 1
 br i1 %33, label %34, label %40
34:
 %35 = load i8*, i8** %4
 %36 = getelementptr i8, i8* %35, i32 1
 store i8* %36, i8** %4
 %37 = load i8, i8* %35
 %38 = zext i8 %37 to i32
 %39 = or i32 %38, 256
 store i32 %39, i32* %3
 br label %40
40:
 %41 = load i32, i32* %3
 %42 = and i32 %41, 1
 %43 = icmp ne i32 %42, 0
 br i1 %43, label %44, label %426
44:
 %45 = load i8*, i8** %4
 %46 = getelementptr i8, i8* %45, i64 0
 %47 = load i8, i8* %46
 %48 = zext i8 %47 to i32
 store i32 %48, i32* %7
 %49 = load i8*, i8** %4
 %50 = getelementptr i8, i8* %49, i64 1
 %51 = load i8, i8* %50
 %52 = zext i8 %51 to i32
 %53 = load i8*, i8** %4
 %54 = getelementptr i8, i8* %53, i64 2
 %55 = load i8, i8* %54
 %56 = zext i8 %55 to i32
 %57 = shl i32 %56, 8
 %58 = or i32 %52, %57
 store i32 %58, i32* %8
 %59 = load i8*, i8** %4
 %60 = getelementptr i8, i8* %59, i64 3
 store i8* %60, i8** %4
 %61 = load i8*, i8** %2
 %62 = getelementptr %struct.tdefl_compressor, i8* %61, i32 0, i32 38
 %63 = getelementptr [3 x [288 x i8]], i8* %62, i64 0, i64 0
 %64 = load i32, i32* %7
 %65 = zext i32 %64 to i64
 %66 = getelementptr [256 x i16], i8* @s_tdefl_len_sym, i64 0, i64 %65
 %67 = load i16, i16* %66
 %68 = zext i16 %67 to i64
 %69 = getelementptr [288 x i8], i8* %63, i64 0, i64 %68
 %70 = load i8, i8* %69
 %71 = icmp ne i8 %70, 0
 %72 = xor i1 %71, 1
 %73 = zext i1 %72 to i32
 %74 = sext i32 %73 to i64
 %75 = icmp ne i64 %74, 0
 br i1 %75, label %76, label %78
76:
 call void @__assert_rtn (i8* @__func__.tdefl_compress_lz_codes, i8* @.str.11, i32 2638, i8* @.str.75)
 unreachable
77:
 br label %79
78:
 br label %79
79:
 br label %80
80:
 %81 = load i8*, i8** %2
 %82 = getelementptr %struct.tdefl_compressor, i8* %81, i32 0, i32 37
 %83 = getelementptr [3 x [288 x i16]], i8* %82, i64 0, i64 0
 %84 = load i32, i32* %7
 %85 = zext i32 %84 to i64
 %86 = getelementptr [256 x i16], i8* @s_tdefl_len_sym, i64 0, i64 %85
 %87 = load i16, i16* %86
 %88 = zext i16 %87 to i64
 %89 = getelementptr [288 x i16], i8* %83, i64 0, i64 %88
 %90 = load i16, i16* %89
 %91 = zext i16 %90 to i32
 store i32 %91, i32* %9
 %92 = load i8*, i8** %2
 %93 = getelementptr %struct.tdefl_compressor, i8* %92, i32 0, i32 38
 %94 = getelementptr [3 x [288 x i8]], i8* %93, i64 0, i64 0
 %95 = load i32, i32* %7
 %96 = zext i32 %95 to i64
 %97 = getelementptr [256 x i16], i8* @s_tdefl_len_sym, i64 0, i64 %96
 %98 = load i16, i16* %97
 %99 = zext i16 %98 to i64
 %100 = getelementptr [288 x i8], i8* %94, i64 0, i64 %99
 %101 = load i8, i8* %100
 %102 = zext i8 %101 to i32
 store i32 %102, i32* %10
 %103 = load i32, i32* %9
 %104 = load i32, i32* %10
 %105 = shl i32 1, %104
 %106 = sub i32 %105, 1
 %107 = icmp ule i32 %103, %106
 %108 = xor i1 %107, 1
 %109 = zext i1 %108 to i32
 %110 = sext i32 %109 to i64
 %111 = icmp ne i64 %110, 0
 br i1 %111, label %112, label %114
112:
 call void @__assert_rtn (i8* @__func__.tdefl_compress_lz_codes, i8* @.str.11, i32 2639, i8* @.str.72)
 unreachable
113:
 br label %115
114:
 br label %115
115:
 %116 = load i32, i32* %9
 %117 = load i8*, i8** %2
 %118 = getelementptr %struct.tdefl_compressor, i8* %117, i32 0, i32 16
 %119 = load i32, i32* %118
 %120 = shl i32 %116, %119
 %121 = load i8*, i8** %2
 %122 = getelementptr %struct.tdefl_compressor, i8* %121, i32 0, i32 17
 %123 = load i32, i32* %122
 %124 = or i32 %123, %120
 store i32 %124, i32* %122
 %125 = load i32, i32* %10
 %126 = load i8*, i8** %2
 %127 = getelementptr %struct.tdefl_compressor, i8* %126, i32 0, i32 16
 %128 = load i32, i32* %127
 %129 = add i32 %128, %125
 store i32 %129, i32* %127
 br label %130
130:
 %131 = load i8*, i8** %2
 %132 = getelementptr %struct.tdefl_compressor, i8* %131, i32 0, i32 16
 %133 = load i32, i32* %132
 %134 = icmp uge i32 %133, 8
 br i1 %134, label %135, label %161
135:
 %136 = load i8*, i8** %2
 %137 = getelementptr %struct.tdefl_compressor, i8* %136, i32 0, i32 11
 %138 = load i8*, i8** %137
 %139 = load i8*, i8** %2
 %140 = getelementptr %struct.tdefl_compressor, i8* %139, i32 0, i32 12
 %141 = load i8*, i8** %140
 %142 = icmp ult i8* %138, %141
 br i1 %142, label %143, label %152
143:
 %144 = load i8*, i8** %2
 %145 = getelementptr %struct.tdefl_compressor, i8* %144, i32 0, i32 17
 %146 = load i32, i32* %145
 %147 = trunc i32 %146 to i8
 %148 = load i8*, i8** %2
 %149 = getelementptr %struct.tdefl_compressor, i8* %148, i32 0, i32 11
 %150 = load i8*, i8** %149
 %151 = getelementptr i8, i8* %150, i32 1
 store i8* %151, i8** %149
 store i8 %147, i8* %150
 br label %152
152:
 %153 = load i8*, i8** %2
 %154 = getelementptr %struct.tdefl_compressor, i8* %153, i32 0, i32 17
 %155 = load i32, i32* %154
 %156 = lshr i32 %155, 8
 store i32 %156, i32* %154
 %157 = load i8*, i8** %2
 %158 = getelementptr %struct.tdefl_compressor, i8* %157, i32 0, i32 16
 %159 = load i32, i32* %158
 %160 = sub i32 %159, 8
 store i32 %160, i32* %158
 br label %130
161:
 br label %162
162:
 br label %163
163:
 %164 = load i32, i32* %7
 %165 = load i32, i32* %7
 %166 = zext i32 %165 to i64
 %167 = getelementptr [256 x i8], i8* @s_tdefl_len_extra, i64 0, i64 %166
 %168 = load i8, i8* %167
 %169 = zext i8 %168 to i64
 %170 = getelementptr [17 x i32], i8* @mz_bitmasks, i64 0, i64 %169
 %171 = load i32, i32* %170
 %172 = and i32 %164, %171
 store i32 %172, i32* %11
 %173 = load i32, i32* %7
 %174 = zext i32 %173 to i64
 %175 = getelementptr [256 x i8], i8* @s_tdefl_len_extra, i64 0, i64 %174
 %176 = load i8, i8* %175
 %177 = zext i8 %176 to i32
 store i32 %177, i32* %12
 %178 = load i32, i32* %11
 %179 = load i32, i32* %12
 %180 = shl i32 1, %179
 %181 = sub i32 %180, 1
 %182 = icmp ule i32 %178, %181
 %183 = xor i1 %182, 1
 %184 = zext i1 %183 to i32
 %185 = sext i32 %184 to i64
 %186 = icmp ne i64 %185, 0
 br i1 %186, label %187, label %189
187:
 call void @__assert_rtn (i8* @__func__.tdefl_compress_lz_codes, i8* @.str.11, i32 2640, i8* @.str.72)
 unreachable
188:
 br label %190
189:
 br label %190
190:
 %191 = load i32, i32* %11
 %192 = load i8*, i8** %2
 %193 = getelementptr %struct.tdefl_compressor, i8* %192, i32 0, i32 16
 %194 = load i32, i32* %193
 %195 = shl i32 %191, %194
 %196 = load i8*, i8** %2
 %197 = getelementptr %struct.tdefl_compressor, i8* %196, i32 0, i32 17
 %198 = load i32, i32* %197
 %199 = or i32 %198, %195
 store i32 %199, i32* %197
 %200 = load i32, i32* %12
 %201 = load i8*, i8** %2
 %202 = getelementptr %struct.tdefl_compressor, i8* %201, i32 0, i32 16
 %203 = load i32, i32* %202
 %204 = add i32 %203, %200
 store i32 %204, i32* %202
 br label %205
205:
 %206 = load i8*, i8** %2
 %207 = getelementptr %struct.tdefl_compressor, i8* %206, i32 0, i32 16
 %208 = load i32, i32* %207
 %209 = icmp uge i32 %208, 8
 br i1 %209, label %210, label %236
210:
 %211 = load i8*, i8** %2
 %212 = getelementptr %struct.tdefl_compressor, i8* %211, i32 0, i32 11
 %213 = load i8*, i8** %212
 %214 = load i8*, i8** %2
 %215 = getelementptr %struct.tdefl_compressor, i8* %214, i32 0, i32 12
 %216 = load i8*, i8** %215
 %217 = icmp ult i8* %213, %216
 br i1 %217, label %218, label %227
218:
 %219 = load i8*, i8** %2
 %220 = getelementptr %struct.tdefl_compressor, i8* %219, i32 0, i32 17
 %221 = load i32, i32* %220
 %222 = trunc i32 %221 to i8
 %223 = load i8*, i8** %2
 %224 = getelementptr %struct.tdefl_compressor, i8* %223, i32 0, i32 11
 %225 = load i8*, i8** %224
 %226 = getelementptr i8, i8* %225, i32 1
 store i8* %226, i8** %224
 store i8 %222, i8* %225
 br label %227
227:
 %228 = load i8*, i8** %2
 %229 = getelementptr %struct.tdefl_compressor, i8* %228, i32 0, i32 17
 %230 = load i32, i32* %229
 %231 = lshr i32 %230, 8
 store i32 %231, i32* %229
 %232 = load i8*, i8** %2
 %233 = getelementptr %struct.tdefl_compressor, i8* %232, i32 0, i32 16
 %234 = load i32, i32* %233
 %235 = sub i32 %234, 8
 store i32 %235, i32* %233
 br label %205
236:
 br label %237
237:
 %238 = load i32, i32* %8
 %239 = icmp ult i32 %238, 512
 br i1 %239, label %240, label %251
240:
 %241 = load i32, i32* %8
 %242 = zext i32 %241 to i64
 %243 = getelementptr [512 x i8], i8* @s_tdefl_small_dist_sym, i64 0, i64 %242
 %244 = load i8, i8* %243
 %245 = zext i8 %244 to i32
 store i32 %245, i32* %5
 %246 = load i32, i32* %8
 %247 = zext i32 %246 to i64
 %248 = getelementptr [512 x i8], i8* @s_tdefl_small_dist_extra, i64 0, i64 %247
 %249 = load i8, i8* %248
 %250 = zext i8 %249 to i32
 store i32 %250, i32* %6
 br label %264
251:
 %252 = load i32, i32* %8
 %253 = lshr i32 %252, 8
 %254 = zext i32 %253 to i64
 %255 = getelementptr [128 x i8], i8* @s_tdefl_large_dist_sym, i64 0, i64 %254
 %256 = load i8, i8* %255
 %257 = zext i8 %256 to i32
 store i32 %257, i32* %5
 %258 = load i32, i32* %8
 %259 = lshr i32 %258, 8
 %260 = zext i32 %259 to i64
 %261 = getelementptr [128 x i8], i8* @s_tdefl_large_dist_extra, i64 0, i64 %260
 %262 = load i8, i8* %261
 %263 = zext i8 %262 to i32
 store i32 %263, i32* %6
 br label %264
264:
 %265 = load i8*, i8** %2
 %266 = getelementptr %struct.tdefl_compressor, i8* %265, i32 0, i32 38
 %267 = getelementptr [3 x [288 x i8]], i8* %266, i64 0, i64 1
 %268 = load i32, i32* %5
 %269 = zext i32 %268 to i64
 %270 = getelementptr [288 x i8], i8* %267, i64 0, i64 %269
 %271 = load i8, i8* %270
 %272 = icmp ne i8 %271, 0
 %273 = xor i1 %272, 1
 %274 = zext i1 %273 to i32
 %275 = sext i32 %274 to i64
 %276 = icmp ne i64 %275, 0
 br i1 %276, label %277, label %279
277:
 call void @__assert_rtn (i8* @__func__.tdefl_compress_lz_codes, i8* @.str.11, i32 2652, i8* @.str.76)
 unreachable
278:
 br label %280
279:
 br label %280
280:
 br label %281
281:
 %282 = load i8*, i8** %2
 %283 = getelementptr %struct.tdefl_compressor, i8* %282, i32 0, i32 37
 %284 = getelementptr [3 x [288 x i16]], i8* %283, i64 0, i64 1
 %285 = load i32, i32* %5
 %286 = zext i32 %285 to i64
 %287 = getelementptr [288 x i16], i8* %284, i64 0, i64 %286
 %288 = load i16, i16* %287
 %289 = zext i16 %288 to i32
 store i32 %289, i32* %13
 %290 = load i8*, i8** %2
 %291 = getelementptr %struct.tdefl_compressor, i8* %290, i32 0, i32 38
 %292 = getelementptr [3 x [288 x i8]], i8* %291, i64 0, i64 1
 %293 = load i32, i32* %5
 %294 = zext i32 %293 to i64
 %295 = getelementptr [288 x i8], i8* %292, i64 0, i64 %294
 %296 = load i8, i8* %295
 %297 = zext i8 %296 to i32
 store i32 %297, i32* %14
 %298 = load i32, i32* %13
 %299 = load i32, i32* %14
 %300 = shl i32 1, %299
 %301 = sub i32 %300, 1
 %302 = icmp ule i32 %298, %301
 %303 = xor i1 %302, 1
 %304 = zext i1 %303 to i32
 %305 = sext i32 %304 to i64
 %306 = icmp ne i64 %305, 0
 br i1 %306, label %307, label %309
307:
 call void @__assert_rtn (i8* @__func__.tdefl_compress_lz_codes, i8* @.str.11, i32 2653, i8* @.str.72)
 unreachable
308:
 br label %310
309:
 br label %310
310:
 %311 = load i32, i32* %13
 %312 = load i8*, i8** %2
 %313 = getelementptr %struct.tdefl_compressor, i8* %312, i32 0, i32 16
 %314 = load i32, i32* %313
 %315 = shl i32 %311, %314
 %316 = load i8*, i8** %2
 %317 = getelementptr %struct.tdefl_compressor, i8* %316, i32 0, i32 17
 %318 = load i32, i32* %317
 %319 = or i32 %318, %315
 store i32 %319, i32* %317
 %320 = load i32, i32* %14
 %321 = load i8*, i8** %2
 %322 = getelementptr %struct.tdefl_compressor, i8* %321, i32 0, i32 16
 %323 = load i32, i32* %322
 %324 = add i32 %323, %320
 store i32 %324, i32* %322
 br label %325
325:
 %326 = load i8*, i8** %2
 %327 = getelementptr %struct.tdefl_compressor, i8* %326, i32 0, i32 16
 %328 = load i32, i32* %327
 %329 = icmp uge i32 %328, 8
 br i1 %329, label %330, label %356
330:
 %331 = load i8*, i8** %2
 %332 = getelementptr %struct.tdefl_compressor, i8* %331, i32 0, i32 11
 %333 = load i8*, i8** %332
 %334 = load i8*, i8** %2
 %335 = getelementptr %struct.tdefl_compressor, i8* %334, i32 0, i32 12
 %336 = load i8*, i8** %335
 %337 = icmp ult i8* %333, %336
 br i1 %337, label %338, label %347
338:
 %339 = load i8*, i8** %2
 %340 = getelementptr %struct.tdefl_compressor, i8* %339, i32 0, i32 17
 %341 = load i32, i32* %340
 %342 = trunc i32 %341 to i8
 %343 = load i8*, i8** %2
 %344 = getelementptr %struct.tdefl_compressor, i8* %343, i32 0, i32 11
 %345 = load i8*, i8** %344
 %346 = getelementptr i8, i8* %345, i32 1
 store i8* %346, i8** %344
 store i8 %342, i8* %345
 br label %347
347:
 %348 = load i8*, i8** %2
 %349 = getelementptr %struct.tdefl_compressor, i8* %348, i32 0, i32 17
 %350 = load i32, i32* %349
 %351 = lshr i32 %350, 8
 store i32 %351, i32* %349
 %352 = load i8*, i8** %2
 %353 = getelementptr %struct.tdefl_compressor, i8* %352, i32 0, i32 16
 %354 = load i32, i32* %353
 %355 = sub i32 %354, 8
 store i32 %355, i32* %353
 br label %325
356:
 br label %357
357:
 br label %358
358:
 %359 = load i32, i32* %8
 %360 = load i32, i32* %6
 %361 = zext i32 %360 to i64
 %362 = getelementptr [17 x i32], i8* @mz_bitmasks, i64 0, i64 %361
 %363 = load i32, i32* %362
 %364 = and i32 %359, %363
 store i32 %364, i32* %15
 %365 = load i32, i32* %6
 store i32 %365, i32* %16
 %366 = load i32, i32* %15
 %367 = load i32, i32* %16
 %368 = shl i32 1, %367
 %369 = sub i32 %368, 1
 %370 = icmp ule i32 %366, %369
 %371 = xor i1 %370, 1
 %372 = zext i1 %371 to i32
 %373 = sext i32 %372 to i64
 %374 = icmp ne i64 %373, 0
 br i1 %374, label %375, label %377
375:
 call void @__assert_rtn (i8* @__func__.tdefl_compress_lz_codes, i8* @.str.11, i32 2654, i8* @.str.72)
 unreachable
376:
 br label %378
377:
 br label %378
378:
 %379 = load i32, i32* %15
 %380 = load i8*, i8** %2
 %381 = getelementptr %struct.tdefl_compressor, i8* %380, i32 0, i32 16
 %382 = load i32, i32* %381
 %383 = shl i32 %379, %382
 %384 = load i8*, i8** %2
 %385 = getelementptr %struct.tdefl_compressor, i8* %384, i32 0, i32 17
 %386 = load i32, i32* %385
 %387 = or i32 %386, %383
 store i32 %387, i32* %385
 %388 = load i32, i32* %16
 %389 = load i8*, i8** %2
 %390 = getelementptr %struct.tdefl_compressor, i8* %389, i32 0, i32 16
 %391 = load i32, i32* %390
 %392 = add i32 %391, %388
 store i32 %392, i32* %390
 br label %393
393:
 %394 = load i8*, i8** %2
 %395 = getelementptr %struct.tdefl_compressor, i8* %394, i32 0, i32 16
 %396 = load i32, i32* %395
 %397 = icmp uge i32 %396, 8
 br i1 %397, label %398, label %424
398:
 %399 = load i8*, i8** %2
 %400 = getelementptr %struct.tdefl_compressor, i8* %399, i32 0, i32 11
 %401 = load i8*, i8** %400
 %402 = load i8*, i8** %2
 %403 = getelementptr %struct.tdefl_compressor, i8* %402, i32 0, i32 12
 %404 = load i8*, i8** %403
 %405 = icmp ult i8* %401, %404
 br i1 %405, label %406, label %415
406:
 %407 = load i8*, i8** %2
 %408 = getelementptr %struct.tdefl_compressor, i8* %407, i32 0, i32 17
 %409 = load i32, i32* %408
 %410 = trunc i32 %409 to i8
 %411 = load i8*, i8** %2
 %412 = getelementptr %struct.tdefl_compressor, i8* %411, i32 0, i32 11
 %413 = load i8*, i8** %412
 %414 = getelementptr i8, i8* %413, i32 1
 store i8* %414, i8** %412
 store i8 %410, i8* %413
 br label %415
415:
 %416 = load i8*, i8** %2
 %417 = getelementptr %struct.tdefl_compressor, i8* %416, i32 0, i32 17
 %418 = load i32, i32* %417
 %419 = lshr i32 %418, 8
 store i32 %419, i32* %417
 %420 = load i8*, i8** %2
 %421 = getelementptr %struct.tdefl_compressor, i8* %420, i32 0, i32 16
 %422 = load i32, i32* %421
 %423 = sub i32 %422, 8
 store i32 %423, i32* %421
 br label %393
424:
 br label %425
425:
 br label %524
426:
 %427 = load i8*, i8** %4
 %428 = getelementptr i8, i8* %427, i32 1
 store i8* %428, i8** %4
 %429 = load i8, i8* %427
 %430 = zext i8 %429 to i32
 store i32 %430, i32* %17
 %431 = load i8*, i8** %2
 %432 = getelementptr %struct.tdefl_compressor, i8* %431, i32 0, i32 38
 %433 = getelementptr [3 x [288 x i8]], i8* %432, i64 0, i64 0
 %434 = load i32, i32* %17
 %435 = zext i32 %434 to i64
 %436 = getelementptr [288 x i8], i8* %433, i64 0, i64 %435
 %437 = load i8, i8* %436
 %438 = icmp ne i8 %437, 0
 %439 = xor i1 %438, 1
 %440 = zext i1 %439 to i32
 %441 = sext i32 %440 to i64
 %442 = icmp ne i64 %441, 0
 br i1 %442, label %443, label %445
443:
 call void @__assert_rtn (i8* @__func__.tdefl_compress_lz_codes, i8* @.str.11, i32 2659, i8* @.str.77)
 unreachable
444:
 br label %446
445:
 br label %446
446:
 br label %447
447:
 %448 = load i8*, i8** %2
 %449 = getelementptr %struct.tdefl_compressor, i8* %448, i32 0, i32 37
 %450 = getelementptr [3 x [288 x i16]], i8* %449, i64 0, i64 0
 %451 = load i32, i32* %17
 %452 = zext i32 %451 to i64
 %453 = getelementptr [288 x i16], i8* %450, i64 0, i64 %452
 %454 = load i16, i16* %453
 %455 = zext i16 %454 to i32
 store i32 %455, i32* %18
 %456 = load i8*, i8** %2
 %457 = getelementptr %struct.tdefl_compressor, i8* %456, i32 0, i32 38
 %458 = getelementptr [3 x [288 x i8]], i8* %457, i64 0, i64 0
 %459 = load i32, i32* %17
 %460 = zext i32 %459 to i64
 %461 = getelementptr [288 x i8], i8* %458, i64 0, i64 %460
 %462 = load i8, i8* %461
 %463 = zext i8 %462 to i32
 store i32 %463, i32* %19
 %464 = load i32, i32* %18
 %465 = load i32, i32* %19
 %466 = shl i32 1, %465
 %467 = sub i32 %466, 1
 %468 = icmp ule i32 %464, %467
 %469 = xor i1 %468, 1
 %470 = zext i1 %469 to i32
 %471 = sext i32 %470 to i64
 %472 = icmp ne i64 %471, 0
 br i1 %472, label %473, label %475
473:
 call void @__assert_rtn (i8* @__func__.tdefl_compress_lz_codes, i8* @.str.11, i32 2660, i8* @.str.72)
 unreachable
474:
 br label %476
475:
 br label %476
476:
 %477 = load i32, i32* %18
 %478 = load i8*, i8** %2
 %479 = getelementptr %struct.tdefl_compressor, i8* %478, i32 0, i32 16
 %480 = load i32, i32* %479
 %481 = shl i32 %477, %480
 %482 = load i8*, i8** %2
 %483 = getelementptr %struct.tdefl_compressor, i8* %482, i32 0, i32 17
 %484 = load i32, i32* %483
 %485 = or i32 %484, %481
 store i32 %485, i32* %483
 %486 = load i32, i32* %19
 %487 = load i8*, i8** %2
 %488 = getelementptr %struct.tdefl_compressor, i8* %487, i32 0, i32 16
 %489 = load i32, i32* %488
 %490 = add i32 %489, %486
 store i32 %490, i32* %488
 br label %491
491:
 %492 = load i8*, i8** %2
 %493 = getelementptr %struct.tdefl_compressor, i8* %492, i32 0, i32 16
 %494 = load i32, i32* %493
 %495 = icmp uge i32 %494, 8
 br i1 %495, label %496, label %522
496:
 %497 = load i8*, i8** %2
 %498 = getelementptr %struct.tdefl_compressor, i8* %497, i32 0, i32 11
 %499 = load i8*, i8** %498
 %500 = load i8*, i8** %2
 %501 = getelementptr %struct.tdefl_compressor, i8* %500, i32 0, i32 12
 %502 = load i8*, i8** %501
 %503 = icmp ult i8* %499, %502
 br i1 %503, label %504, label %513
504:
 %505 = load i8*, i8** %2
 %506 = getelementptr %struct.tdefl_compressor, i8* %505, i32 0, i32 17
 %507 = load i32, i32* %506
 %508 = trunc i32 %507 to i8
 %509 = load i8*, i8** %2
 %510 = getelementptr %struct.tdefl_compressor, i8* %509, i32 0, i32 11
 %511 = load i8*, i8** %510
 %512 = getelementptr i8, i8* %511, i32 1
 store i8* %512, i8** %510
 store i8 %508, i8* %511
 br label %513
513:
 %514 = load i8*, i8** %2
 %515 = getelementptr %struct.tdefl_compressor, i8* %514, i32 0, i32 17
 %516 = load i32, i32* %515
 %517 = lshr i32 %516, 8
 store i32 %517, i32* %515
 %518 = load i8*, i8** %2
 %519 = getelementptr %struct.tdefl_compressor, i8* %518, i32 0, i32 16
 %520 = load i32, i32* %519
 %521 = sub i32 %520, 8
 store i32 %521, i32* %519
 br label %491
522:
 br label %523
523:
 br label %524
524:
 br label %525
525:
 %526 = load i32, i32* %3
 %527 = lshr i32 %526, 1
 store i32 %527, i32* %3
 br label %25
528:
 br label %529
529:
 %530 = load i8*, i8** %2
 %531 = getelementptr %struct.tdefl_compressor, i8* %530, i32 0, i32 37
 %532 = getelementptr [3 x [288 x i16]], i8* %531, i64 0, i64 0
 %533 = getelementptr [288 x i16], i8* %532, i64 0, i64 256
 %534 = load i16, i16* %533
 %535 = zext i16 %534 to i32
 store i32 %535, i32* %20
 %536 = load i8*, i8** %2
 %537 = getelementptr %struct.tdefl_compressor, i8* %536, i32 0, i32 38
 %538 = getelementptr [3 x [288 x i8]], i8* %537, i64 0, i64 0
 %539 = getelementptr [288 x i8], i8* %538, i64 0, i64 256
 %540 = load i8, i8* %539
 %541 = zext i8 %540 to i32
 store i32 %541, i32* %21
 %542 = load i32, i32* %20
 %543 = load i32, i32* %21
 %544 = shl i32 1, %543
 %545 = sub i32 %544, 1
 %546 = icmp ule i32 %542, %545
 %547 = xor i1 %546, 1
 %548 = zext i1 %547 to i32
 %549 = sext i32 %548 to i64
 %550 = icmp ne i64 %549, 0
 br i1 %550, label %551, label %553
551:
 call void @__assert_rtn (i8* @__func__.tdefl_compress_lz_codes, i8* @.str.11, i32 2664, i8* @.str.72)
 unreachable
552:
 br label %554
553:
 br label %554
554:
 %555 = load i32, i32* %20
 %556 = load i8*, i8** %2
 %557 = getelementptr %struct.tdefl_compressor, i8* %556, i32 0, i32 16
 %558 = load i32, i32* %557
 %559 = shl i32 %555, %558
 %560 = load i8*, i8** %2
 %561 = getelementptr %struct.tdefl_compressor, i8* %560, i32 0, i32 17
 %562 = load i32, i32* %561
 %563 = or i32 %562, %559
 store i32 %563, i32* %561
 %564 = load i32, i32* %21
 %565 = load i8*, i8** %2
 %566 = getelementptr %struct.tdefl_compressor, i8* %565, i32 0, i32 16
 %567 = load i32, i32* %566
 %568 = add i32 %567, %564
 store i32 %568, i32* %566
 br label %569
569:
 %570 = load i8*, i8** %2
 %571 = getelementptr %struct.tdefl_compressor, i8* %570, i32 0, i32 16
 %572 = load i32, i32* %571
 %573 = icmp uge i32 %572, 8
 br i1 %573, label %574, label %600
574:
 %575 = load i8*, i8** %2
 %576 = getelementptr %struct.tdefl_compressor, i8* %575, i32 0, i32 11
 %577 = load i8*, i8** %576
 %578 = load i8*, i8** %2
 %579 = getelementptr %struct.tdefl_compressor, i8* %578, i32 0, i32 12
 %580 = load i8*, i8** %579
 %581 = icmp ult i8* %577, %580
 br i1 %581, label %582, label %591
582:
 %583 = load i8*, i8** %2
 %584 = getelementptr %struct.tdefl_compressor, i8* %583, i32 0, i32 17
 %585 = load i32, i32* %584
 %586 = trunc i32 %585 to i8
 %587 = load i8*, i8** %2
 %588 = getelementptr %struct.tdefl_compressor, i8* %587, i32 0, i32 11
 %589 = load i8*, i8** %588
 %590 = getelementptr i8, i8* %589, i32 1
 store i8* %590, i8** %588
 store i8 %586, i8* %589
 br label %591
591:
 %592 = load i8*, i8** %2
 %593 = getelementptr %struct.tdefl_compressor, i8* %592, i32 0, i32 17
 %594 = load i32, i32* %593
 %595 = lshr i32 %594, 8
 store i32 %595, i32* %593
 %596 = load i8*, i8** %2
 %597 = getelementptr %struct.tdefl_compressor, i8* %596, i32 0, i32 16
 %598 = load i32, i32* %597
 %599 = sub i32 %598, 8
 store i32 %599, i32* %597
 br label %569
600:
 br label %601
601:
 %602 = load i8*, i8** %2
 %603 = getelementptr %struct.tdefl_compressor, i8* %602, i32 0, i32 11
 %604 = load i8*, i8** %603
 %605 = load i8*, i8** %2
 %606 = getelementptr %struct.tdefl_compressor, i8* %605, i32 0, i32 12
 %607 = load i8*, i8** %606
 %608 = icmp ult i8* %604, %607
 %609 = zext i1 %608 to i32
 ret i32 %609
}

define void @tdefl_optimize_huffman_table (i8* %0, i32 %1, i32 %2, i32 %3, i32 %4) {
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i32
 %9 = alloca i32
 %10 = alloca i32
 %11 = alloca i32
 %12 = alloca i32
 %13 = alloca i32
 %14 = alloca [33 x i32]
 %15 = alloca [33 x i32]
 %16 = alloca [288 x %struct.tdefl_sym_freq]
 %17 = alloca [288 x %struct.tdefl_sym_freq]
 %18 = alloca i8*
 %19 = alloca i32
 %20 = alloca i8*
 %21 = alloca i32
 %22 = alloca i32
 %23 = alloca i32
 store i8* %0, i8** %6
 store i32 %1, i32* %7
 store i32 %2, i32* %8
 store i32 %3, i32* %9
 store i32 %4, i32* %10
 %24 = getelementptr [33 x i32], i8* %14, i64 0, i64 0
 call void @memset (i8* %24, i8 0, i64 132, i1 0)
 %25 = load i32, i32* %10
 %26 = icmp ne i32 %25, 0
 br i1 %26, label %27, label %50
27:
 store i32 0, i32* %11
 br label %28
28:
 %29 = load i32, i32* %11
 %30 = load i32, i32* %8
 %31 = icmp slt i32 %29, %30
 br i1 %31, label %32, label %49
32:
 %33 = load i8*, i8** %6
 %34 = getelementptr %struct.tdefl_compressor, i8* %33, i32 0, i32 38
 %35 = load i32, i32* %7
 %36 = sext i32 %35 to i64
 %37 = getelementptr [3 x [288 x i8]], i8* %34, i64 0, i64 %36
 %38 = load i32, i32* %11
 %39 = sext i32 %38 to i64
 %40 = getelementptr [288 x i8], i8* %37, i64 0, i64 %39
 %41 = load i8, i8* %40
 %42 = zext i8 %41 to i64
 %43 = getelementptr [33 x i32], i8* %14, i64 0, i64 %42
 %44 = load i32, i32* %43
 %45 = add i32 %44, 1
 store i32 %45, i32* %43
 br label %46
46:
 %47 = load i32, i32* %11
 %48 = add i32 %47, 1
 store i32 %48, i32* %11
 br label %28
49:
 br label %184
50:
 store i32 0, i32* %19
 %51 = load i8*, i8** %6
 %52 = getelementptr %struct.tdefl_compressor, i8* %51, i32 0, i32 36
 %53 = load i32, i32* %7
 %54 = sext i32 %53 to i64
 %55 = getelementptr [3 x [288 x i16]], i8* %52, i64 0, i64 %54
 %56 = getelementptr [288 x i16], i8* %55, i64 0, i64 0
 store i8* %56, i8** %20
 store i32 0, i32* %11
 br label %57
57:
 %58 = load i32, i32* %11
 %59 = load i32, i32* %8
 %60 = icmp slt i32 %58, %59
 br i1 %60, label %61, label %89
61:
 %62 = load i8*, i8** %20
 %63 = load i32, i32* %11
 %64 = sext i32 %63 to i64
 %65 = getelementptr i16, i8* %62, i64 %64
 %66 = load i16, i16* %65
 %67 = icmp ne i16 %66, 0
 br i1 %67, label %68, label %85
68:
 %69 = load i8*, i8** %20
 %70 = load i32, i32* %11
 %71 = sext i32 %70 to i64
 %72 = getelementptr i16, i8* %69, i64 %71
 %73 = load i16, i16* %72
 %74 = load i32, i32* %19
 %75 = sext i32 %74 to i64
 %76 = getelementptr [288 x %struct.tdefl_sym_freq], i8* %16, i64 0, i64 %75
 %77 = getelementptr %struct.tdefl_sym_freq, i8* %76, i32 0, i32 0
 store i16 %73, i16* %77
 %78 = load i32, i32* %11
 %79 = trunc i32 %78 to i16
 %80 = load i32, i32* %19
 %81 = add i32 %80, 1
 store i32 %81, i32* %19
 %82 = sext i32 %80 to i64
 %83 = getelementptr [288 x %struct.tdefl_sym_freq], i8* %16, i64 0, i64 %82
 %84 = getelementptr %struct.tdefl_sym_freq, i8* %83, i32 0, i32 1
 store i16 %79, i16* %84
 br label %85
85:
 br label %86
86:
 %87 = load i32, i32* %11
 %88 = add i32 %87, 1
 store i32 %88, i32* %11
 br label %57
89:
 %90 = load i32, i32* %19
 %91 = getelementptr [288 x %struct.tdefl_sym_freq], i8* %16, i64 0, i64 0
 %92 = getelementptr [288 x %struct.tdefl_sym_freq], i8* %17, i64 0, i64 0
 %93 = call i8* @tdefl_radix_sort_syms (i32 %90, i8* %91, i8* %92)
 store i8* %93, i8** %18
 %94 = load i8*, i8** %18
 %95 = load i32, i32* %19
 call void @tdefl_calculate_minimum_redundancy (i8* %94, i32 %95)
 store i32 0, i32* %11
 br label %96
96:
 %97 = load i32, i32* %11
 %98 = load i32, i32* %19
 %99 = icmp slt i32 %97, %98
 br i1 %99, label %100, label %114
100:
 %101 = load i8*, i8** %18
 %102 = load i32, i32* %11
 %103 = sext i32 %102 to i64
 %104 = getelementptr %struct.tdefl_sym_freq, i8* %101, i64 %103
 %105 = getelementptr %struct.tdefl_sym_freq, i8* %104, i32 0, i32 0
 %106 = load i16, i16* %105
 %107 = zext i16 %106 to i64
 %108 = getelementptr [33 x i32], i8* %14, i64 0, i64 %107
 %109 = load i32, i32* %108
 %110 = add i32 %109, 1
 store i32 %110, i32* %108
 br label %111
111:
 %112 = load i32, i32* %11
 %113 = add i32 %112, 1
 store i32 %113, i32* %11
 br label %96
114:
 %115 = getelementptr [33 x i32], i8* %14, i64 0, i64 0
 %116 = load i32, i32* %19
 %117 = load i32, i32* %9
 call void @tdefl_huffman_enforce_max_code_size (i8* %115, i32 %116, i32 %117)
 %118 = load i8*, i8** %6
 %119 = getelementptr %struct.tdefl_compressor, i8* %118, i32 0, i32 38
 %120 = load i32, i32* %7
 %121 = sext i32 %120 to i64
 %122 = getelementptr [3 x [288 x i8]], i8* %119, i64 0, i64 %121
 %123 = getelementptr [288 x i8], i8* %122, i64 0, i64 0
 %124 = load i8*, i8** %6
 %125 = getelementptr %struct.tdefl_compressor, i8* %124, i32 0, i32 38
 %126 = load i32, i32* %7
 %127 = sext i32 %126 to i64
 %128 = getelementptr [3 x [288 x i8]], i8* %125, i64 0, i64 %127
 %129 = getelementptr [288 x i8], i8* %128, i64 0, i64 0
 %130 = call i64 @llvm.objectsize.i64.p0 (i8* %129, i1 0, i1 1, i1 0)
 %131 = call i8* @__memset_chk (i8* %123, i32 0, i64 288, i64 %130)
 %132 = load i8*, i8** %6
 %133 = getelementptr %struct.tdefl_compressor, i8* %132, i32 0, i32 37
 %134 = load i32, i32* %7
 %135 = sext i32 %134 to i64
 %136 = getelementptr [3 x [288 x i16]], i8* %133, i64 0, i64 %135
 %137 = getelementptr [288 x i16], i8* %136, i64 0, i64 0
 %138 = load i8*, i8** %6
 %139 = getelementptr %struct.tdefl_compressor, i8* %138, i32 0, i32 37
 %140 = load i32, i32* %7
 %141 = sext i32 %140 to i64
 %142 = getelementptr [3 x [288 x i16]], i8* %139, i64 0, i64 %141
 %143 = getelementptr [288 x i16], i8* %142, i64 0, i64 0
 %144 = call i64 @llvm.objectsize.i64.p0 (i8* %143, i1 0, i1 1, i1 0)
 %145 = call i8* @__memset_chk (i8* %137, i32 0, i64 576, i64 %144)
 store i32 1, i32* %11
 %146 = load i32, i32* %19
 store i32 %146, i32* %12
 br label %147
147:
 %148 = load i32, i32* %11
 %149 = load i32, i32* %9
 %150 = icmp sle i32 %148, %149
 br i1 %150, label %151, label %183
151:
 %152 = load i32, i32* %11
 %153 = sext i32 %152 to i64
 %154 = getelementptr [33 x i32], i8* %14, i64 0, i64 %153
 %155 = load i32, i32* %154
 store i32 %155, i32* %13
 br label %156
156:
 %157 = load i32, i32* %13
 %158 = icmp sgt i32 %157, 0
 br i1 %158, label %159, label %179
159:
 %160 = load i32, i32* %11
 %161 = trunc i32 %160 to i8
 %162 = load i8*, i8** %6
 %163 = getelementptr %struct.tdefl_compressor, i8* %162, i32 0, i32 38
 %164 = load i32, i32* %7
 %165 = sext i32 %164 to i64
 %166 = getelementptr [3 x [288 x i8]], i8* %163, i64 0, i64 %165
 %167 = load i8*, i8** %18
 %168 = load i32, i32* %12
 %169 = add i32 %168, -1
 store i32 %169, i32* %12
 %170 = sext i32 %169 to i64
 %171 = getelementptr %struct.tdefl_sym_freq, i8* %167, i64 %170
 %172 = getelementptr %struct.tdefl_sym_freq, i8* %171, i32 0, i32 1
 %173 = load i16, i16* %172
 %174 = zext i16 %173 to i64
 %175 = getelementptr [288 x i8], i8* %166, i64 0, i64 %174
 store i8 %161, i8* %175
 br label %176
176:
 %177 = load i32, i32* %13
 %178 = add i32 %177, -1
 store i32 %178, i32* %13
 br label %156
179:
 br label %180
180:
 %181 = load i32, i32* %11
 %182 = add i32 %181, 1
 store i32 %182, i32* %11
 br label %147
183:
 br label %184
184:
 %185 = getelementptr [33 x i32], i8* %15, i64 0, i64 1
 store i32 0, i32* %185
 store i32 0, i32* %12
 store i32 2, i32* %11
 br label %186
186:
 %187 = load i32, i32* %11
 %188 = load i32, i32* %9
 %189 = icmp sle i32 %187, %188
 br i1 %189, label %190, label %205
190:
 %191 = load i32, i32* %12
 %192 = load i32, i32* %11
 %193 = sub i32 %192, 1
 %194 = sext i32 %193 to i64
 %195 = getelementptr [33 x i32], i8* %14, i64 0, i64 %194
 %196 = load i32, i32* %195
 %197 = add i32 %191, %196
 %198 = shl i32 %197, 1
 store i32 %198, i32* %12
 %199 = load i32, i32* %11
 %200 = sext i32 %199 to i64
 %201 = getelementptr [33 x i32], i8* %15, i64 0, i64 %200
 store i32 %198, i32* %201
 br label %202
202:
 %203 = load i32, i32* %11
 %204 = add i32 %203, 1
 store i32 %204, i32* %11
 br label %186
205:
 store i32 0, i32* %11
 br label %206
206:
 %207 = load i32, i32* %11
 %208 = load i32, i32* %8
 %209 = icmp slt i32 %207, %208
 br i1 %209, label %210, label %258
210:
 store i32 0, i32* %21
 %211 = load i8*, i8** %6
 %212 = getelementptr %struct.tdefl_compressor, i8* %211, i32 0, i32 38
 %213 = load i32, i32* %7
 %214 = sext i32 %213 to i64
 %215 = getelementptr [3 x [288 x i8]], i8* %212, i64 0, i64 %214
 %216 = load i32, i32* %11
 %217 = sext i32 %216 to i64
 %218 = getelementptr [288 x i8], i8* %215, i64 0, i64 %217
 %219 = load i8, i8* %218
 %220 = zext i8 %219 to i32
 store i32 %220, i32* %23
 %221 = icmp eq i32 %220, 0
 br i1 %221, label %222, label %223
222:
 br label %255
223:
 %224 = load i32, i32* %23
 %225 = zext i32 %224 to i64
 %226 = getelementptr [33 x i32], i8* %15, i64 0, i64 %225
 %227 = load i32, i32* %226
 %228 = add i32 %227, 1
 store i32 %228, i32* %226
 store i32 %227, i32* %22
 %229 = load i32, i32* %23
 store i32 %229, i32* %13
 br label %230
230:
 %231 = load i32, i32* %13
 %232 = icmp sgt i32 %231, 0
 br i1 %232, label %233, label %244
233:
 %234 = load i32, i32* %21
 %235 = shl i32 %234, 1
 %236 = load i32, i32* %22
 %237 = and i32 %236, 1
 %238 = or i32 %235, %237
 store i32 %238, i32* %21
 br label %239
239:
 %240 = load i32, i32* %13
 %241 = add i32 %240, -1
 store i32 %241, i32* %13
 %242 = load i32, i32* %22
 %243 = lshr i32 %242, 1
 store i32 %243, i32* %22
 br label %230
244:
 %245 = load i32, i32* %21
 %246 = trunc i32 %245 to i16
 %247 = load i8*, i8** %6
 %248 = getelementptr %struct.tdefl_compressor, i8* %247, i32 0, i32 37
 %249 = load i32, i32* %7
 %250 = sext i32 %249 to i64
 %251 = getelementptr [3 x [288 x i16]], i8* %248, i64 0, i64 %250
 %252 = load i32, i32* %11
 %253 = sext i32 %252 to i64
 %254 = getelementptr [288 x i16], i8* %251, i64 0, i64 %253
 store i16 %246, i16* %254
 br label %255
255:
 %256 = load i32, i32* %11
 %257 = add i32 %256, 1
 store i32 %257, i32* %11
 br label %206
258:
 ret void
}

define i8* @tdefl_radix_sort_syms (i32 %0, i8* %1, i8* %2) {
 %4 = alloca i32
 %5 = alloca i8*
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i32
 %9 = alloca i32
 %10 = alloca i32
 %11 = alloca [512 x i32]
 %12 = alloca i8*
 %13 = alloca i8*
 %14 = alloca i32
 %15 = alloca i8*
 %16 = alloca [256 x i32]
 %17 = alloca i32
 %18 = alloca i8*
 store i32 %0, i32* %4
 store i8* %1, i8** %5
 store i8* %2, i8** %6
 store i32 2, i32* %7
 %19 = load i8*, i8** %5
 store i8* %19, i8** %12
 %20 = load i8*, i8** %6
 store i8* %20, i8** %13
 %21 = getelementptr [512 x i32], i8* %11, i64 0, i64 0
 call void @memset (i8* %21, i8 0, i64 2048, i1 0)
 store i32 0, i32* %10
 br label %22
22:
 %23 = load i32, i32* %10
 %24 = load i32, i32* %4
 %25 = icmp ult i32 %23, %24
 br i1 %25, label %26, label %51
26:
 %27 = load i8*, i8** %5
 %28 = load i32, i32* %10
 %29 = zext i32 %28 to i64
 %30 = getelementptr %struct.tdefl_sym_freq, i8* %27, i64 %29
 %31 = getelementptr %struct.tdefl_sym_freq, i8* %30, i32 0, i32 0
 %32 = load i16, i16* %31
 %33 = zext i16 %32 to i32
 store i32 %33, i32* %14
 %34 = load i32, i32* %14
 %35 = and i32 %34, 255
 %36 = zext i32 %35 to i64
 %37 = getelementptr [512 x i32], i8* %11, i64 0, i64 %36
 %38 = load i32, i32* %37
 %39 = add i32 %38, 1
 store i32 %39, i32* %37
 %40 = load i32, i32* %14
 %41 = lshr i32 %40, 8
 %42 = and i32 %41, 255
 %43 = add i32 256, %42
 %44 = zext i32 %43 to i64
 %45 = getelementptr [512 x i32], i8* %11, i64 0, i64 %44
 %46 = load i32, i32* %45
 %47 = add i32 %46, 1
 store i32 %47, i32* %45
 br label %48
48:
 %49 = load i32, i32* %10
 %50 = add i32 %49, 1
 store i32 %50, i32* %10
 br label %22
51:
 br label %52
52:
 %53 = load i32, i32* %7
 %54 = icmp ugt i32 %53, 1
 br i1 %54, label %55, label %64
55:
 %56 = load i32, i32* %4
 %57 = load i32, i32* %7
 %58 = sub i32 %57, 1
 %59 = mul i32 %58, 256
 %60 = zext i32 %59 to i64
 %61 = getelementptr [512 x i32], i8* %11, i64 0, i64 %60
 %62 = load i32, i32* %61
 %63 = icmp eq i32 %56, %62
 br label %64
64:
 %65 = phi i1 [0, %52], [%63, %55]
 br i1 %65, label %66, label %69
66:
 %67 = load i32, i32* %7
 %68 = add i32 %67, -1
 store i32 %68, i32* %7
 br label %52
69:
 store i32 0, i32* %8
 store i32 0, i32* %9
 br label %70
70:
 %71 = load i32, i32* %9
 %72 = load i32, i32* %7
 %73 = icmp ult i32 %71, %72
 br i1 %73, label %74, label %136
74:
 %75 = load i32, i32* %9
 %76 = shl i32 %75, 8
 %77 = zext i32 %76 to i64
 %78 = getelementptr [512 x i32], i8* %11, i64 0, i64 %77
 store i8* %78, i8** %15
 store i32 0, i32* %17
 store i32 0, i32* %10
 br label %79
79:
 %80 = load i32, i32* %10
 %81 = icmp ult i32 %80, 256
 br i1 %81, label %82, label %97
82:
 %83 = load i32, i32* %17
 %84 = load i32, i32* %10
 %85 = zext i32 %84 to i64
 %86 = getelementptr [256 x i32], i8* %16, i64 0, i64 %85
 store i32 %83, i32* %86
 %87 = load i8*, i8** %15
 %88 = load i32, i32* %10
 %89 = zext i32 %88 to i64
 %90 = getelementptr i32, i8* %87, i64 %89
 %91 = load i32, i32* %90
 %92 = load i32, i32* %17
 %93 = add i32 %92, %91
 store i32 %93, i32* %17
 br label %94
94:
 %95 = load i32, i32* %10
 %96 = add i32 %95, 1
 store i32 %96, i32* %10
 br label %79
97:
 store i32 0, i32* %10
 br label %98
98:
 %99 = load i32, i32* %10
 %100 = load i32, i32* %4
 %101 = icmp ult i32 %99, %100
 br i1 %101, label %102, label %127
102:
 %103 = load i8*, i8** %13
 %104 = load i8*, i8** %12
 %105 = load i32, i32* %10
 %106 = zext i32 %105 to i64
 %107 = getelementptr %struct.tdefl_sym_freq, i8* %104, i64 %106
 %108 = getelementptr %struct.tdefl_sym_freq, i8* %107, i32 0, i32 0
 %109 = load i16, i16* %108
 %110 = zext i16 %109 to i32
 %111 = load i32, i32* %8
 %112 = ashr i32 %110, %111
 %113 = and i32 %112, 255
 %114 = sext i32 %113 to i64
 %115 = getelementptr [256 x i32], i8* %16, i64 0, i64 %114
 %116 = load i32, i32* %115
 %117 = add i32 %116, 1
 store i32 %117, i32* %115
 %118 = zext i32 %116 to i64
 %119 = getelementptr %struct.tdefl_sym_freq, i8* %103, i64 %118
 %120 = load i8*, i8** %12
 %121 = load i32, i32* %10
 %122 = zext i32 %121 to i64
 %123 = getelementptr %struct.tdefl_sym_freq, i8* %120, i64 %122
 call void @memcpy (i8* %119, i8* %123, i64 4, i1 0)
 br label %124
124:
 %125 = load i32, i32* %10
 %126 = add i32 %125, 1
 store i32 %126, i32* %10
 br label %98
127:
 %128 = load i8*, i8** %12
 store i8* %128, i8** %18
 %129 = load i8*, i8** %13
 store i8* %129, i8** %12
 %130 = load i8*, i8** %18
 store i8* %130, i8** %13
 br label %131
131:
 %132 = load i32, i32* %9
 %133 = add i32 %132, 1
 store i32 %133, i32* %9
 %134 = load i32, i32* %8
 %135 = add i32 %134, 8
 store i32 %135, i32* %8
 br label %70
136:
 %137 = load i8*, i8** %12
 ret i8* %137
}

define void @tdefl_calculate_minimum_redundancy (i8* %0, i32 %1) {
 %3 = alloca i8*
 %4 = alloca i32
 %5 = alloca i32
 %6 = alloca i32
 %7 = alloca i32
 %8 = alloca i32
 %9 = alloca i32
 %10 = alloca i32
 store i8* %0, i8** %3
 store i32 %1, i32* %4
 %11 = load i32, i32* %4
 %12 = icmp eq i32 %11, 0
 br i1 %12, label %13, label %14
13:
 br label %259
14:
 %15 = load i32, i32* %4
 %16 = icmp eq i32 %15, 1
 br i1 %16, label %17, label %21
17:
 %18 = load i8*, i8** %3
 %19 = getelementptr %struct.tdefl_sym_freq, i8* %18, i64 0
 %20 = getelementptr %struct.tdefl_sym_freq, i8* %19, i32 0, i32 0
 store i16 1, i16* %20
 br label %259
21:
 br label %22
22:
 %23 = load i8*, i8** %3
 %24 = getelementptr %struct.tdefl_sym_freq, i8* %23, i64 1
 %25 = getelementptr %struct.tdefl_sym_freq, i8* %24, i32 0, i32 0
 %26 = load i16, i16* %25
 %27 = zext i16 %26 to i32
 %28 = load i8*, i8** %3
 %29 = getelementptr %struct.tdefl_sym_freq, i8* %28, i64 0
 %30 = getelementptr %struct.tdefl_sym_freq, i8* %29, i32 0, i32 0
 %31 = load i16, i16* %30
 %32 = zext i16 %31 to i32
 %33 = add i32 %32, %27
 %34 = trunc i32 %33 to i16
 store i16 %34, i16* %30
 store i32 0, i32* %5
 store i32 2, i32* %6
 store i32 1, i32* %7
 br label %35
35:
 %36 = load i32, i32* %7
 %37 = load i32, i32* %4
 %38 = sub i32 %37, 1
 %39 = icmp slt i32 %36, %38
 br i1 %39, label %40, label %174
40:
 %41 = load i32, i32* %6
 %42 = load i32, i32* %4
 %43 = icmp sge i32 %41, %42
 br i1 %43, label %60, label %44
44:
 %45 = load i8*, i8** %3
 %46 = load i32, i32* %5
 %47 = sext i32 %46 to i64
 %48 = getelementptr %struct.tdefl_sym_freq, i8* %45, i64 %47
 %49 = getelementptr %struct.tdefl_sym_freq, i8* %48, i32 0, i32 0
 %50 = load i16, i16* %49
 %51 = zext i16 %50 to i32
 %52 = load i8*, i8** %3
 %53 = load i32, i32* %6
 %54 = sext i32 %53 to i64
 %55 = getelementptr %struct.tdefl_sym_freq, i8* %52, i64 %54
 %56 = getelementptr %struct.tdefl_sym_freq, i8* %55, i32 0, i32 0
 %57 = load i16, i16* %56
 %58 = zext i16 %57 to i32
 %59 = icmp slt i32 %51, %58
 br i1 %59, label %60, label %80
60:
 %61 = load i8*, i8** %3
 %62 = load i32, i32* %5
 %63 = sext i32 %62 to i64
 %64 = getelementptr %struct.tdefl_sym_freq, i8* %61, i64 %63
 %65 = getelementptr %struct.tdefl_sym_freq, i8* %64, i32 0, i32 0
 %66 = load i16, i16* %65
 %67 = load i8*, i8** %3
 %68 = load i32, i32* %7
 %69 = sext i32 %68 to i64
 %70 = getelementptr %struct.tdefl_sym_freq, i8* %67, i64 %69
 %71 = getelementptr %struct.tdefl_sym_freq, i8* %70, i32 0, i32 0
 store i16 %66, i16* %71
 %72 = load i32, i32* %7
 %73 = trunc i32 %72 to i16
 %74 = load i8*, i8** %3
 %75 = load i32, i32* %5
 %76 = add i32 %75, 1
 store i32 %76, i32* %5
 %77 = sext i32 %75 to i64
 %78 = getelementptr %struct.tdefl_sym_freq, i8* %74, i64 %77
 %79 = getelementptr %struct.tdefl_sym_freq, i8* %78, i32 0, i32 0
 store i16 %73, i16* %79
 br label %93
80:
 %81 = load i8*, i8** %3
 %82 = load i32, i32* %6
 %83 = add i32 %82, 1
 store i32 %83, i32* %6
 %84 = sext i32 %82 to i64
 %85 = getelementptr %struct.tdefl_sym_freq, i8* %81, i64 %84
 %86 = getelementptr %struct.tdefl_sym_freq, i8* %85, i32 0, i32 0
 %87 = load i16, i16* %86
 %88 = load i8*, i8** %3
 %89 = load i32, i32* %7
 %90 = sext i32 %89 to i64
 %91 = getelementptr %struct.tdefl_sym_freq, i8* %88, i64 %90
 %92 = getelementptr %struct.tdefl_sym_freq, i8* %91, i32 0, i32 0
 store i16 %87, i16* %92
 br label %93
93:
 %94 = load i32, i32* %6
 %95 = load i32, i32* %4
 %96 = icmp sge i32 %94, %95
 br i1 %96, label %117, label %97
97:
 %98 = load i32, i32* %5
 %99 = load i32, i32* %7
 %100 = icmp slt i32 %98, %99
 br i1 %100, label %101, label %147
101:
 %102 = load i8*, i8** %3
 %103 = load i32, i32* %5
 %104 = sext i32 %103 to i64
 %105 = getelementptr %struct.tdefl_sym_freq, i8* %102, i64 %104
 %106 = getelementptr %struct.tdefl_sym_freq, i8* %105, i32 0, i32 0
 %107 = load i16, i16* %106
 %108 = zext i16 %107 to i32
 %109 = load i8*, i8** %3
 %110 = load i32, i32* %6
 %111 = sext i32 %110 to i64
 %112 = getelementptr %struct.tdefl_sym_freq, i8* %109, i64 %111
 %113 = getelementptr %struct.tdefl_sym_freq, i8* %112, i32 0, i32 0
 %114 = load i16, i16* %113
 %115 = zext i16 %114 to i32
 %116 = icmp slt i32 %108, %115
 br i1 %116, label %117, label %147
117:
 %118 = load i8*, i8** %3
 %119 = load i32, i32* %7
 %120 = sext i32 %119 to i64
 %121 = getelementptr %struct.tdefl_sym_freq, i8* %118, i64 %120
 %122 = getelementptr %struct.tdefl_sym_freq, i8* %121, i32 0, i32 0
 %123 = load i16, i16* %122
 %124 = zext i16 %123 to i32
 %125 = load i8*, i8** %3
 %126 = load i32, i32* %5
 %127 = sext i32 %126 to i64
 %128 = getelementptr %struct.tdefl_sym_freq, i8* %125, i64 %127
 %129 = getelementptr %struct.tdefl_sym_freq, i8* %128, i32 0, i32 0
 %130 = load i16, i16* %129
 %131 = zext i16 %130 to i32
 %132 = add i32 %124, %131
 %133 = trunc i32 %132 to i16
 %134 = load i8*, i8** %3
 %135 = load i32, i32* %7
 %136 = sext i32 %135 to i64
 %137 = getelementptr %struct.tdefl_sym_freq, i8* %134, i64 %136
 %138 = getelementptr %struct.tdefl_sym_freq, i8* %137, i32 0, i32 0
 store i16 %133, i16* %138
 %139 = load i32, i32* %7
 %140 = trunc i32 %139 to i16
 %141 = load i8*, i8** %3
 %142 = load i32, i32* %5
 %143 = add i32 %142, 1
 store i32 %143, i32* %5
 %144 = sext i32 %142 to i64
 %145 = getelementptr %struct.tdefl_sym_freq, i8* %141, i64 %144
 %146 = getelementptr %struct.tdefl_sym_freq, i8* %145, i32 0, i32 0
 store i16 %140, i16* %146
 br label %170
147:
 %148 = load i8*, i8** %3
 %149 = load i32, i32* %7
 %150 = sext i32 %149 to i64
 %151 = getelementptr %struct.tdefl_sym_freq, i8* %148, i64 %150
 %152 = getelementptr %struct.tdefl_sym_freq, i8* %151, i32 0, i32 0
 %153 = load i16, i16* %152
 %154 = zext i16 %153 to i32
 %155 = load i8*, i8** %3
 %156 = load i32, i32* %6
 %157 = add i32 %156, 1
 store i32 %157, i32* %6
 %158 = sext i32 %156 to i64
 %159 = getelementptr %struct.tdefl_sym_freq, i8* %155, i64 %158
 %160 = getelementptr %struct.tdefl_sym_freq, i8* %159, i32 0, i32 0
 %161 = load i16, i16* %160
 %162 = zext i16 %161 to i32
 %163 = add i32 %154, %162
 %164 = trunc i32 %163 to i16
 %165 = load i8*, i8** %3
 %166 = load i32, i32* %7
 %167 = sext i32 %166 to i64
 %168 = getelementptr %struct.tdefl_sym_freq, i8* %165, i64 %167
 %169 = getelementptr %struct.tdefl_sym_freq, i8* %168, i32 0, i32 0
 store i16 %164, i16* %169
 br label %170
170:
 br label %171
171:
 %172 = load i32, i32* %7
 %173 = add i32 %172, 1
 store i32 %173, i32* %7
 br label %35
174:
 %175 = load i8*, i8** %3
 %176 = load i32, i32* %4
 %177 = sub i32 %176, 2
 %178 = sext i32 %177 to i64
 %179 = getelementptr %struct.tdefl_sym_freq, i8* %175, i64 %178
 %180 = getelementptr %struct.tdefl_sym_freq, i8* %179, i32 0, i32 0
 store i16 0, i16* %180
 %181 = load i32, i32* %4
 %182 = sub i32 %181, 3
 store i32 %182, i32* %7
 br label %183
183:
 %184 = load i32, i32* %7
 %185 = icmp sge i32 %184, 0
 br i1 %185, label %186, label %209
186:
 %187 = load i8*, i8** %3
 %188 = load i8*, i8** %3
 %189 = load i32, i32* %7
 %190 = sext i32 %189 to i64
 %191 = getelementptr %struct.tdefl_sym_freq, i8* %188, i64 %190
 %192 = getelementptr %struct.tdefl_sym_freq, i8* %191, i32 0, i32 0
 %193 = load i16, i16* %192
 %194 = zext i16 %193 to i64
 %195 = getelementptr %struct.tdefl_sym_freq, i8* %187, i64 %194
 %196 = getelementptr %struct.tdefl_sym_freq, i8* %195, i32 0, i32 0
 %197 = load i16, i16* %196
 %198 = zext i16 %197 to i32
 %199 = add i32 %198, 1
 %200 = trunc i32 %199 to i16
 %201 = load i8*, i8** %3
 %202 = load i32, i32* %7
 %203 = sext i32 %202 to i64
 %204 = getelementptr %struct.tdefl_sym_freq, i8* %201, i64 %203
 %205 = getelementptr %struct.tdefl_sym_freq, i8* %204, i32 0, i32 0
 store i16 %200, i16* %205
 br label %206
206:
 %207 = load i32, i32* %7
 %208 = add i32 %207, -1
 store i32 %208, i32* %7
 br label %183
209:
 store i32 1, i32* %8
 store i32 0, i32* %10
 store i32 0, i32* %9
 %210 = load i32, i32* %4
 %211 = sub i32 %210, 2
 store i32 %211, i32* %5
 %212 = load i32, i32* %4
 %213 = sub i32 %212, 1
 store i32 %213, i32* %7
 br label %214
214:
 %215 = load i32, i32* %8
 %216 = icmp sgt i32 %215, 0
 br i1 %216, label %217, label %259
217:
 br label %218
218:
 %219 = load i32, i32* %5
 %220 = icmp sge i32 %219, 0
 br i1 %220, label %221, label %231
221:
 %222 = load i8*, i8** %3
 %223 = load i32, i32* %5
 %224 = sext i32 %223 to i64
 %225 = getelementptr %struct.tdefl_sym_freq, i8* %222, i64 %224
 %226 = getelementptr %struct.tdefl_sym_freq, i8* %225, i32 0, i32 0
 %227 = load i16, i16* %226
 %228 = zext i16 %227 to i32
 %229 = load i32, i32* %10
 %230 = icmp eq i32 %228, %229
 br label %231
231:
 %232 = phi i1 [0, %218], [%230, %221]
 br i1 %232, label %233, label %238
233:
 %234 = load i32, i32* %9
 %235 = add i32 %234, 1
 store i32 %235, i32* %9
 %236 = load i32, i32* %5
 %237 = add i32 %236, -1
 store i32 %237, i32* %5
 br label %218
238:
 br label %239
239:
 %240 = load i32, i32* %8
 %241 = load i32, i32* %9
 %242 = icmp sgt i32 %240, %241
 br i1 %242, label %243, label %254
243:
 %244 = load i32, i32* %10
 %245 = trunc i32 %244 to i16
 %246 = load i8*, i8** %3
 %247 = load i32, i32* %7
 %248 = add i32 %247, -1
 store i32 %248, i32* %7
 %249 = sext i32 %247 to i64
 %250 = getelementptr %struct.tdefl_sym_freq, i8* %246, i64 %249
 %251 = getelementptr %struct.tdefl_sym_freq, i8* %250, i32 0, i32 0
 store i16 %245, i16* %251
 %252 = load i32, i32* %8
 %253 = add i32 %252, -1
 store i32 %253, i32* %8
 br label %239
254:
 %255 = load i32, i32* %9
 %256 = mul i32 2, %255
 store i32 %256, i32* %8
 %257 = load i32, i32* %10
 %258 = add i32 %257, 1
 store i32 %258, i32* %10
 store i32 0, i32* %9
 br label %214
259:
 ret void
}

define void @tdefl_huffman_enforce_max_code_size (i8* %0, i32 %1, i32 %2) {
 %4 = alloca i8*
 %5 = alloca i32
 %6 = alloca i32
 %7 = alloca i32
 %8 = alloca i32
 store i8* %0, i8** %4
 store i32 %1, i32* %5
 store i32 %2, i32* %6
 store i32 0, i32* %8
 %9 = load i32, i32* %5
 %10 = icmp sle i32 %9, 1
 br i1 %10, label %11, label %12
11:
 br label %101
12:
 %13 = load i32, i32* %6
 %14 = add i32 %13, 1
 store i32 %14, i32* %7
 br label %15
15:
 %16 = load i32, i32* %7
 %17 = icmp sle i32 %16, 32
 br i1 %17, label %18, label %33
18:
 %19 = load i8*, i8** %4
 %20 = load i32, i32* %7
 %21 = sext i32 %20 to i64
 %22 = getelementptr i32, i8* %19, i64 %21
 %23 = load i32, i32* %22
 %24 = load i8*, i8** %4
 %25 = load i32, i32* %6
 %26 = sext i32 %25 to i64
 %27 = getelementptr i32, i8* %24, i64 %26
 %28 = load i32, i32* %27
 %29 = add i32 %28, %23
 store i32 %29, i32* %27
 br label %30
30:
 %31 = load i32, i32* %7
 %32 = add i32 %31, 1
 store i32 %32, i32* %7
 br label %15
33:
 %34 = load i32, i32* %6
 store i32 %34, i32* %7
 br label %35
35:
 %36 = load i32, i32* %7
 %37 = icmp sgt i32 %36, 0
 br i1 %37, label %38, label %53
38:
 %39 = load i8*, i8** %4
 %40 = load i32, i32* %7
 %41 = sext i32 %40 to i64
 %42 = getelementptr i32, i8* %39, i64 %41
 %43 = load i32, i32* %42
 %44 = load i32, i32* %6
 %45 = load i32, i32* %7
 %46 = sub i32 %44, %45
 %47 = shl i32 %43, %46
 %48 = load i32, i32* %8
 %49 = add i32 %48, %47
 store i32 %49, i32* %8
 br label %50
50:
 %51 = load i32, i32* %7
 %52 = add i32 %51, -1
 store i32 %52, i32* %7
 br label %35
53:
 br label %54
54:
 %55 = load i32, i32* %8
 %56 = zext i32 %55 to i64
 %57 = load i32, i32* %6
 %58 = zext i32 %57 to i64
 %59 = shl i64 1, %58
 %60 = icmp ne i64 %56, %59
 br i1 %60, label %61, label %101
61:
 %62 = load i8*, i8** %4
 %63 = load i32, i32* %6
 %64 = sext i32 %63 to i64
 %65 = getelementptr i32, i8* %62, i64 %64
 %66 = load i32, i32* %65
 %67 = add i32 %66, -1
 store i32 %67, i32* %65
 %68 = load i32, i32* %6
 %69 = sub i32 %68, 1
 store i32 %69, i32* %7
 br label %70
70:
 %71 = load i32, i32* %7
 %72 = icmp sgt i32 %71, 0
 br i1 %72, label %73, label %98
73:
 %74 = load i8*, i8** %4
 %75 = load i32, i32* %7
 %76 = sext i32 %75 to i64
 %77 = getelementptr i32, i8* %74, i64 %76
 %78 = load i32, i32* %77
 %79 = icmp ne i32 %78, 0
 br i1 %79, label %80, label %94
80:
 %81 = load i8*, i8** %4
 %82 = load i32, i32* %7
 %83 = sext i32 %82 to i64
 %84 = getelementptr i32, i8* %81, i64 %83
 %85 = load i32, i32* %84
 %86 = add i32 %85, -1
 store i32 %86, i32* %84
 %87 = load i8*, i8** %4
 %88 = load i32, i32* %7
 %89 = add i32 %88, 1
 %90 = sext i32 %89 to i64
 %91 = getelementptr i32, i8* %87, i64 %90
 %92 = load i32, i32* %91
 %93 = add i32 %92, 2
 store i32 %93, i32* %91
 br label %98
94:
 br label %95
95:
 %96 = load i32, i32* %7
 %97 = add i32 %96, -1
 store i32 %97, i32* %7
 br label %70
98:
 %99 = load i32, i32* %8
 %100 = add i32 %99, -1
 store i32 %100, i32* %8
 br label %54
101:
 ret void
}

define i32 @mz_zip_reader_locate_header_sig (i8* %0, i32 %1, i32 %2, i8* %3) {
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i32
 %8 = alloca i32
 %9 = alloca i8*
 %10 = alloca i64
 %11 = alloca [1024 x i32]
 %12 = alloca i8*
 %13 = alloca i32
 %14 = alloca i32
 %15 = alloca i32
 store i8* %0, i8** %6
 store i32 %1, i32* %7
 store i32 %2, i32* %8
 store i8* %3, i8** %9
 %16 = getelementptr [1024 x i32], i8* %11, i64 0, i64 0
 store i8* %16, i8** %12
 %17 = load i8*, i8** %6
 %18 = getelementptr %struct.mz_zip_archive, i8* %17, i32 0, i32 0
 %19 = load i64, i64* %18
 %20 = load i32, i32* %8
 %21 = zext i32 %20 to i64
 %22 = icmp ult i64 %19, %21
 br i1 %22, label %23, label %24
23:
 store i32 0, i32* %5
 br label %167
24:
 %25 = load i8*, i8** %6
 %26 = getelementptr %struct.mz_zip_archive, i8* %25, i32 0, i32 0
 %27 = load i64, i64* %26
 %28 = sub i64 %27, 4096
 %29 = icmp sgt i64 %28, 0
 br i1 %29, label %30, label %35
30:
 %31 = load i8*, i8** %6
 %32 = getelementptr %struct.mz_zip_archive, i8* %31, i32 0, i32 0
 %33 = load i64, i64* %32
 %34 = sub i64 %33, 4096
 br label %36
35:
 br label %36
36:
 %37 = phi i64 [%34, %30], [0, %35]
 store i64 %37, i64* %10
 br label %38
38:
 %39 = load i8*, i8** %6
 %40 = getelementptr %struct.mz_zip_archive, i8* %39, i32 0, i32 0
 %41 = load i64, i64* %40
 %42 = load i64, i64* %10
 %43 = sub i64 %41, %42
 %44 = icmp ult i64 4096, %43
 br i1 %44, label %45, label %46
45:
 br label %52
46:
 %47 = load i8*, i8** %6
 %48 = getelementptr %struct.mz_zip_archive, i8* %47, i32 0, i32 0
 %49 = load i64, i64* %48
 %50 = load i64, i64* %10
 %51 = sub i64 %49, %50
 br label %52
52:
 %53 = phi i64 [4096, %45], [%51, %46]
 %54 = trunc i64 %53 to i32
 store i32 %54, i32* %14
 %55 = load i8*, i8** %6
 %56 = getelementptr %struct.mz_zip_archive, i8* %55, i32 0, i32 11
 %57 = load i8*, i8** %56
 %58 = load i8*, i8** %6
 %59 = getelementptr %struct.mz_zip_archive, i8* %58, i32 0, i32 14
 %60 = load i8*, i8** %59
 %61 = load i64, i64* %10
 %62 = load i8*, i8** %12
 %63 = load i32, i32* %14
 %64 = sext i32 %63 to i64
 %65 = call i64 %57 (i8* %60, i64 %61, i8* %62, i64 %64)
 %66 = load i32, i32* %14
 %67 = zext i32 %66 to i64
 %68 = icmp ne i64 %65, %67
 br i1 %68, label %69, label %70
69:
 store i32 0, i32* %5
 br label %167
70:
 %71 = load i32, i32* %14
 %72 = sub i32 %71, 4
 store i32 %72, i32* %13
 br label %73
73:
 %74 = load i32, i32* %13
 %75 = icmp sge i32 %74, 0
 br i1 %75, label %76, label %132
76:
 %77 = load i8*, i8** %12
 %78 = load i32, i32* %13
 %79 = sext i32 %78 to i64
 %80 = getelementptr i8, i8* %77, i64 %79
 %81 = getelementptr i8, i8* %80, i64 0
 %82 = load i8, i8* %81
 %83 = zext i8 %82 to i32
 %84 = load i8*, i8** %12
 %85 = load i32, i32* %13
 %86 = sext i32 %85 to i64
 %87 = getelementptr i8, i8* %84, i64 %86
 %88 = getelementptr i8, i8* %87, i64 1
 %89 = load i8, i8* %88
 %90 = zext i8 %89 to i32
 %91 = shl i32 %90, 8
 %92 = or i32 %83, %91
 %93 = load i8*, i8** %12
 %94 = load i32, i32* %13
 %95 = sext i32 %94 to i64
 %96 = getelementptr i8, i8* %93, i64 %95
 %97 = getelementptr i8, i8* %96, i64 2
 %98 = load i8, i8* %97
 %99 = zext i8 %98 to i32
 %100 = shl i32 %99, 16
 %101 = or i32 %92, %100
 %102 = load i8*, i8** %12
 %103 = load i32, i32* %13
 %104 = sext i32 %103 to i64
 %105 = getelementptr i8, i8* %102, i64 %104
 %106 = getelementptr i8, i8* %105, i64 3
 %107 = load i8, i8* %106
 %108 = zext i8 %107 to i32
 %109 = shl i32 %108, 24
 %110 = or i32 %101, %109
 store i32 %110, i32* %15
 %111 = load i32, i32* %15
 %112 = load i32, i32* %7
 %113 = icmp eq i32 %111, %112
 br i1 %113, label %114, label %128
114:
 %115 = load i8*, i8** %6
 %116 = getelementptr %struct.mz_zip_archive, i8* %115, i32 0, i32 0
 %117 = load i64, i64* %116
 %118 = load i64, i64* %10
 %119 = load i32, i32* %13
 %120 = sext i32 %119 to i64
 %121 = add i64 %118, %120
 %122 = sub i64 %117, %121
 %123 = load i32, i32* %8
 %124 = zext i32 %123 to i64
 %125 = icmp uge i64 %122, %124
 br i1 %125, label %126, label %127
126:
 br label %132
127:
 br label %128
128:
 br label %129
129:
 %130 = load i32, i32* %13
 %131 = add i32 %130, -1
 store i32 %131, i32* %13
 br label %73
132:
 %133 = load i32, i32* %13
 %134 = icmp sge i32 %133, 0
 br i1 %134, label %135, label %140
135:
 %136 = load i32, i32* %13
 %137 = sext i32 %136 to i64
 %138 = load i64, i64* %10
 %139 = add i64 %138, %137
 store i64 %139, i64* %10
 br label %164
140:
 %141 = load i64, i64* %10
 %142 = icmp ne i64 %141, 0
 br i1 %142, label %143, label %153
143:
 %144 = load i8*, i8** %6
 %145 = getelementptr %struct.mz_zip_archive, i8* %144, i32 0, i32 0
 %146 = load i64, i64* %145
 %147 = load i64, i64* %10
 %148 = sub i64 %146, %147
 %149 = load i32, i32* %8
 %150 = add i32 65535, %149
 %151 = zext i32 %150 to i64
 %152 = icmp uge i64 %148, %151
 br i1 %152, label %153, label %154
153:
 store i32 0, i32* %5
 br label %167
154:
 %155 = load i64, i64* %10
 %156 = sub i64 %155, 4093
 %157 = icmp ugt i64 %156, 0
 br i1 %157, label %158, label %161
158:
 %159 = load i64, i64* %10
 %160 = sub i64 %159, 4093
 br label %162
161:
 br label %162
162:
 %163 = phi i64 [%160, %158], [0, %161]
 store i64 %163, i64* %10
 br label %38
164:
 %165 = load i64, i64* %10
 %166 = load i8*, i8** %9
 store i64 %165, i64* %166
 store i32 1, i32* %5
 br label %167
167:
 %168 = load i32, i32* %5
 ret i32 %168
}

define void @mz_zip_reader_sort_central_dir_offsets_by_filename (i8* %0) {
 %2 = alloca i8*
 %3 = alloca i8*
 %4 = alloca i32
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i8*
 %9 = alloca i32
 %10 = alloca i32
 %11 = alloca i8
 %12 = alloca i8
 %13 = alloca i8*
 %14 = alloca i8*
 %15 = alloca i32
 %16 = alloca i32
 %17 = alloca i8*
 %18 = alloca i8*
 %19 = alloca i8*
 %20 = alloca i32
 %21 = alloca i32
 %22 = alloca i8
 %23 = alloca i8
 %24 = alloca i8*
 %25 = alloca i8*
 %26 = alloca i32
 %27 = alloca i32
 %28 = alloca i8*
 %29 = alloca i8*
 %30 = alloca i8*
 %31 = alloca i32
 %32 = alloca i32
 %33 = alloca i8
 %34 = alloca i8
 %35 = alloca i8*
 %36 = alloca i8*
 %37 = alloca i32
 %38 = alloca i32
 %39 = alloca i8*
 %40 = alloca i8*
 %41 = alloca i8*
 %42 = alloca i32
 %43 = alloca i32
 %44 = alloca i8
 %45 = alloca i8
 %46 = alloca i8*
 %47 = alloca i8*
 %48 = alloca i8*
 %49 = alloca i8*
 %50 = alloca i8*
 %51 = alloca i32
 %52 = alloca i32
 %53 = alloca i32
 %54 = alloca i64
 %55 = alloca i64
 %56 = alloca i32
 %57 = alloca i64
 %58 = alloca i64
 %59 = alloca i32
 %60 = alloca i32
 store i8* %0, i8** %46
 %61 = load i8*, i8** %46
 %62 = getelementptr %struct.mz_zip_archive, i8* %61, i32 0, i32 15
 %63 = load i8*, i8** %62
 store i8* %63, i8** %47
 %64 = load i8*, i8** %47
 %65 = getelementptr %struct.mz_zip_internal_state_tag, i8* %64, i32 0, i32 1
 store i8* %65, i8** %48
 %66 = load i8*, i8** %47
 %67 = getelementptr %struct.mz_zip_internal_state_tag, i8* %66, i32 0, i32 0
 store i8* %67, i8** %49
 %68 = load i8*, i8** %46
 %69 = getelementptr %struct.mz_zip_archive, i8* %68, i32 0, i32 2
 %70 = load i32, i32* %69
 store i32 %70, i32* %53
 %71 = load i32, i32* %53
 %72 = icmp ule i32 %71, 1
 br i1 %72, label %73, label %74
73:
 br label %784
74:
 %75 = load i8*, i8** %47
 %76 = getelementptr %struct.mz_zip_internal_state_tag, i8* %75, i32 0, i32 2
 %77 = getelementptr %struct.mz_zip_array, i8* %76, i32 0, i32 0
 %78 = load i8*, i8** %77
 %79 = getelementptr i32, i8* %78, i64 0
 store i8* %79, i8** %50
 %80 = load i32, i32* %53
 %81 = sub i32 %80, 2
 %82 = lshr i32 %81, 1
 store i32 %82, i32* %51
 br label %83
83:
 %84 = load i32, i32* %51
 %85 = zext i32 %84 to i64
 store i64 %85, i64* %55
 br label %86
86:
 %87 = load i64, i64* %55
 %88 = shl i64 %87, 1
 %89 = add i64 %88, 1
 store i64 %89, i64* %54
 %90 = load i32, i32* %53
 %91 = zext i32 %90 to i64
 %92 = icmp uge i64 %89, %91
 br i1 %92, label %93, label %94
93:
 br label %418
94:
 %95 = load i64, i64* %54
 %96 = add i64 %95, 1
 %97 = load i32, i32* %53
 %98 = zext i32 %97 to i64
 %99 = icmp ult i64 %96, %98
 br i1 %99, label %100, label %247
100:
 %101 = load i8*, i8** %49
 %102 = load i8*, i8** %48
 %103 = load i8*, i8** %50
 %104 = load i64, i64* %54
 %105 = getelementptr i32, i8* %103, i64 %104
 %106 = load i32, i32* %105
 %107 = load i8*, i8** %50
 %108 = load i64, i64* %54
 %109 = add i64 %108, 1
 %110 = getelementptr i32, i8* %107, i64 %109
 %111 = load i32, i32* %110
 store i8* %101, i8** %2
 store i8* %102, i8** %3
 store i32 %106, i32* %4
 store i32 %111, i32* %5
 %112 = load i8*, i8** %2
 %113 = load i8*, i8** %112
 %114 = load i8*, i8** %3
 %115 = load i8*, i8** %114
 %116 = load i32, i32* %4
 %117 = zext i32 %116 to i64
 %118 = getelementptr i32, i8* %115, i64 %117
 %119 = load i32, i32* %118
 %120 = zext i32 %119 to i64
 %121 = getelementptr i8, i8* %113, i64 %120
 store i8* %121, i8** %6
 %122 = load i8*, i8** %2
 %123 = load i8*, i8** %122
 %124 = load i8*, i8** %3
 %125 = load i8*, i8** %124
 %126 = load i32, i32* %5
 %127 = zext i32 %126 to i64
 %128 = getelementptr i32, i8* %125, i64 %127
 %129 = load i32, i32* %128
 %130 = zext i32 %129 to i64
 %131 = getelementptr i8, i8* %123, i64 %130
 store i8* %131, i8** %8
 %132 = load i8*, i8** %6
 %133 = getelementptr i8, i8* %132, i64 28
 %134 = load i8, i8* %133
 %135 = zext i8 %134 to i32
 %136 = load i8*, i8** %6
 %137 = getelementptr i8, i8* %136, i64 28
 %138 = getelementptr i8, i8* %137, i64 1
 %139 = load i8, i8* %138
 %140 = zext i8 %139 to i32
 %141 = shl i32 %140, 8
 %142 = or i32 %135, %141
 store i32 %142, i32* %9
 %143 = load i8*, i8** %8
 %144 = getelementptr i8, i8* %143, i64 28
 %145 = load i8, i8* %144
 %146 = zext i8 %145 to i32
 %147 = load i8*, i8** %8
 %148 = getelementptr i8, i8* %147, i64 28
 %149 = getelementptr i8, i8* %148, i64 1
 %150 = load i8, i8* %149
 %151 = zext i8 %150 to i32
 %152 = shl i32 %151, 8
 %153 = or i32 %146, %152
 store i32 %153, i32* %10
 store i8 0, i8* %11
 store i8 0, i8* %12
 %154 = load i8*, i8** %6
 %155 = getelementptr i8, i8* %154, i64 46
 store i8* %155, i8** %6
 %156 = load i8*, i8** %8
 %157 = getelementptr i8, i8* %156, i64 46
 store i8* %157, i8** %8
 %158 = load i8*, i8** %6
 %159 = load i32, i32* %9
 %160 = load i32, i32* %10
 %161 = icmp ult i32 %159, %160
 br i1 %161, label %162, label %164
162:
 %163 = load i32, i32* %9
 br label %166
164:
 %165 = load i32, i32* %10
 br label %166
166:
 %167 = phi i32 [%163, %162], [%165, %164]
 %168 = zext i32 %167 to i64
 %169 = getelementptr i8, i8* %158, i64 %168
 store i8* %169, i8** %7
 br label %170
170:
 %171 = load i8*, i8** %6
 %172 = load i8*, i8** %7
 %173 = icmp ult i8* %171, %172
 br i1 %173, label %174, label %228
174:
 %175 = load i8*, i8** %6
 %176 = load i8, i8* %175
 %177 = zext i8 %176 to i32
 %178 = icmp sge i32 %177, 65
 br i1 %178, label %179, label %190
179:
 %180 = load i8*, i8** %6
 %181 = load i8, i8* %180
 %182 = zext i8 %181 to i32
 %183 = icmp sle i32 %182, 90
 br i1 %183, label %184, label %190
184:
 %185 = load i8*, i8** %6
 %186 = load i8, i8* %185
 %187 = zext i8 %186 to i32
 %188 = sub i32 %187, 65
 %189 = add i32 %188, 97
 br label %194
190:
 %191 = load i8*, i8** %6
 %192 = load i8, i8* %191
 %193 = zext i8 %192 to i32
 br label %194
194:
 %195 = phi i32 [%189, %184], [%193, %190]
 %196 = trunc i32 %195 to i8
 store i8 %196, i8* %11
 %197 = zext i8 %196 to i32
 %198 = load i8*, i8** %8
 %199 = load i8, i8* %198
 %200 = zext i8 %199 to i32
 %201 = icmp sge i32 %200, 65
 br i1 %201, label %202, label %213
202:
 %203 = load i8*, i8** %8
 %204 = load i8, i8* %203
 %205 = zext i8 %204 to i32
 %206 = icmp sle i32 %205, 90
 br i1 %206, label %207, label %213
207:
 %208 = load i8*, i8** %8
 %209 = load i8, i8* %208
 %210 = zext i8 %209 to i32
 %211 = sub i32 %210, 65
 %212 = add i32 %211, 97
 br label %217
213:
 %214 = load i8*, i8** %8
 %215 = load i8, i8* %214
 %216 = zext i8 %215 to i32
 br label %217
217:
 %218 = phi i32 [%212, %207], [%216, %213]
 %219 = trunc i32 %218 to i8
 store i8 %219, i8* %12
 %220 = zext i8 %219 to i32
 %221 = icmp ne i32 %197, %220
 br i1 %221, label %222, label %223
222:
 br label %228
223:
 %224 = load i8*, i8** %6
 %225 = getelementptr i8, i8* %224, i32 1
 store i8* %225, i8** %6
 %226 = load i8*, i8** %8
 %227 = getelementptr i8, i8* %226, i32 1
 store i8* %227, i8** %8
 br label %170
228:
 %229 = load i8*, i8** %6
 %230 = load i8*, i8** %7
 %231 = icmp eq i8* %229, %230
 br i1 %231, label %232, label %237
232:
 %233 = load i32, i32* %9
 %234 = load i32, i32* %10
 %235 = icmp ult i32 %233, %234
 %236 = zext i1 %235 to i32
 br label %244
237:
 %238 = load i8, i8* %11
 %239 = zext i8 %238 to i32
 %240 = load i8, i8* %12
 %241 = zext i8 %240 to i32
 %242 = icmp slt i32 %239, %241
 %243 = zext i1 %242 to i32
 br label %244
244:
 %245 = phi i32 [%236, %232], [%243, %237]
 %246 = icmp ne i32 %245, 0
 br label %247
247:
 %248 = phi i1 [0, %94], [%246, %244]
 %249 = zext i1 %248 to i32
 %250 = sext i32 %249 to i64
 %251 = load i64, i64* %54
 %252 = add i64 %251, %250
 store i64 %252, i64* %54
 %253 = load i8*, i8** %49
 %254 = load i8*, i8** %48
 %255 = load i8*, i8** %50
 %256 = load i64, i64* %55
 %257 = getelementptr i32, i8* %255, i64 %256
 %258 = load i32, i32* %257
 %259 = load i8*, i8** %50
 %260 = load i64, i64* %54
 %261 = getelementptr i32, i8* %259, i64 %260
 %262 = load i32, i32* %261
 store i8* %253, i8** %13
 store i8* %254, i8** %14
 store i32 %258, i32* %15
 store i32 %262, i32* %16
 %263 = load i8*, i8** %13
 %264 = load i8*, i8** %263
 %265 = load i8*, i8** %14
 %266 = load i8*, i8** %265
 %267 = load i32, i32* %15
 %268 = zext i32 %267 to i64
 %269 = getelementptr i32, i8* %266, i64 %268
 %270 = load i32, i32* %269
 %271 = zext i32 %270 to i64
 %272 = getelementptr i8, i8* %264, i64 %271
 store i8* %272, i8** %17
 %273 = load i8*, i8** %13
 %274 = load i8*, i8** %273
 %275 = load i8*, i8** %14
 %276 = load i8*, i8** %275
 %277 = load i32, i32* %16
 %278 = zext i32 %277 to i64
 %279 = getelementptr i32, i8* %276, i64 %278
 %280 = load i32, i32* %279
 %281 = zext i32 %280 to i64
 %282 = getelementptr i8, i8* %274, i64 %281
 store i8* %282, i8** %19
 %283 = load i8*, i8** %17
 %284 = getelementptr i8, i8* %283, i64 28
 %285 = load i8, i8* %284
 %286 = zext i8 %285 to i32
 %287 = load i8*, i8** %17
 %288 = getelementptr i8, i8* %287, i64 28
 %289 = getelementptr i8, i8* %288, i64 1
 %290 = load i8, i8* %289
 %291 = zext i8 %290 to i32
 %292 = shl i32 %291, 8
 %293 = or i32 %286, %292
 store i32 %293, i32* %20
 %294 = load i8*, i8** %19
 %295 = getelementptr i8, i8* %294, i64 28
 %296 = load i8, i8* %295
 %297 = zext i8 %296 to i32
 %298 = load i8*, i8** %19
 %299 = getelementptr i8, i8* %298, i64 28
 %300 = getelementptr i8, i8* %299, i64 1
 %301 = load i8, i8* %300
 %302 = zext i8 %301 to i32
 %303 = shl i32 %302, 8
 %304 = or i32 %297, %303
 store i32 %304, i32* %21
 store i8 0, i8* %22
 store i8 0, i8* %23
 %305 = load i8*, i8** %17
 %306 = getelementptr i8, i8* %305, i64 46
 store i8* %306, i8** %17
 %307 = load i8*, i8** %19
 %308 = getelementptr i8, i8* %307, i64 46
 store i8* %308, i8** %19
 %309 = load i8*, i8** %17
 %310 = load i32, i32* %20
 %311 = load i32, i32* %21
 %312 = icmp ult i32 %310, %311
 br i1 %312, label %313, label %315
313:
 %314 = load i32, i32* %20
 br label %317
315:
 %316 = load i32, i32* %21
 br label %317
317:
 %318 = phi i32 [%314, %313], [%316, %315]
 %319 = zext i32 %318 to i64
 %320 = getelementptr i8, i8* %309, i64 %319
 store i8* %320, i8** %18
 br label %321
321:
 %322 = load i8*, i8** %17
 %323 = load i8*, i8** %18
 %324 = icmp ult i8* %322, %323
 br i1 %324, label %325, label %379
325:
 %326 = load i8*, i8** %17
 %327 = load i8, i8* %326
 %328 = zext i8 %327 to i32
 %329 = icmp sge i32 %328, 65
 br i1 %329, label %330, label %341
330:
 %331 = load i8*, i8** %17
 %332 = load i8, i8* %331
 %333 = zext i8 %332 to i32
 %334 = icmp sle i32 %333, 90
 br i1 %334, label %335, label %341
335:
 %336 = load i8*, i8** %17
 %337 = load i8, i8* %336
 %338 = zext i8 %337 to i32
 %339 = sub i32 %338, 65
 %340 = add i32 %339, 97
 br label %345
341:
 %342 = load i8*, i8** %17
 %343 = load i8, i8* %342
 %344 = zext i8 %343 to i32
 br label %345
345:
 %346 = phi i32 [%340, %335], [%344, %341]
 %347 = trunc i32 %346 to i8
 store i8 %347, i8* %22
 %348 = zext i8 %347 to i32
 %349 = load i8*, i8** %19
 %350 = load i8, i8* %349
 %351 = zext i8 %350 to i32
 %352 = icmp sge i32 %351, 65
 br i1 %352, label %353, label %364
353:
 %354 = load i8*, i8** %19
 %355 = load i8, i8* %354
 %356 = zext i8 %355 to i32
 %357 = icmp sle i32 %356, 90
 br i1 %357, label %358, label %364
358:
 %359 = load i8*, i8** %19
 %360 = load i8, i8* %359
 %361 = zext i8 %360 to i32
 %362 = sub i32 %361, 65
 %363 = add i32 %362, 97
 br label %368
364:
 %365 = load i8*, i8** %19
 %366 = load i8, i8* %365
 %367 = zext i8 %366 to i32
 br label %368
368:
 %369 = phi i32 [%363, %358], [%367, %364]
 %370 = trunc i32 %369 to i8
 store i8 %370, i8* %23
 %371 = zext i8 %370 to i32
 %372 = icmp ne i32 %348, %371
 br i1 %372, label %373, label %374
373:
 br label %379
374:
 %375 = load i8*, i8** %17
 %376 = getelementptr i8, i8* %375, i32 1
 store i8* %376, i8** %17
 %377 = load i8*, i8** %19
 %378 = getelementptr i8, i8* %377, i32 1
 store i8* %378, i8** %19
 br label %321
379:
 %380 = load i8*, i8** %17
 %381 = load i8*, i8** %18
 %382 = icmp eq i8* %380, %381
 br i1 %382, label %383, label %388
383:
 %384 = load i32, i32* %20
 %385 = load i32, i32* %21
 %386 = icmp ult i32 %384, %385
 %387 = zext i1 %386 to i32
 br label %395
388:
 %389 = load i8, i8* %22
 %390 = zext i8 %389 to i32
 %391 = load i8, i8* %23
 %392 = zext i8 %391 to i32
 %393 = icmp slt i32 %390, %392
 %394 = zext i1 %393 to i32
 br label %395
395:
 %396 = phi i32 [%387, %383], [%394, %388]
 %397 = icmp ne i32 %396, 0
 br i1 %397, label %399, label %398
398:
 br label %418
399:
 br label %400
400:
 %401 = load i8*, i8** %50
 %402 = load i64, i64* %55
 %403 = getelementptr i32, i8* %401, i64 %402
 %404 = load i32, i32* %403
 store i32 %404, i32* %56
 %405 = load i8*, i8** %50
 %406 = load i64, i64* %54
 %407 = getelementptr i32, i8* %405, i64 %406
 %408 = load i32, i32* %407
 %409 = load i8*, i8** %50
 %410 = load i64, i64* %55
 %411 = getelementptr i32, i8* %409, i64 %410
 store i32 %408, i32* %411
 %412 = load i32, i32* %56
 %413 = load i8*, i8** %50
 %414 = load i64, i64* %54
 %415 = getelementptr i32, i8* %413, i64 %414
 store i32 %412, i32* %415
 br label %416
416:
 %417 = load i64, i64* %54
 store i64 %417, i64* %55
 br label %86
418:
 %419 = load i32, i32* %51
 %420 = icmp ne i32 %419, 0
 br i1 %420, label %422, label %421
421:
 br label %425
422:
 %423 = load i32, i32* %51
 %424 = add i32 %423, -1
 store i32 %424, i32* %51
 br label %83
425:
 %426 = load i32, i32* %53
 %427 = sub i32 %426, 1
 store i32 %427, i32* %52
 br label %428
428:
 %429 = load i32, i32* %52
 %430 = icmp ugt i32 %429, 0
 br i1 %430, label %431, label %784
431:
 store i64 0, i64* %58
 br label %432
432:
 %433 = load i8*, i8** %50
 %434 = load i32, i32* %52
 %435 = zext i32 %434 to i64
 %436 = getelementptr i32, i8* %433, i64 %435
 %437 = load i32, i32* %436
 store i32 %437, i32* %59
 %438 = load i8*, i8** %50
 %439 = getelementptr i32, i8* %438, i64 0
 %440 = load i32, i32* %439
 %441 = load i8*, i8** %50
 %442 = load i32, i32* %52
 %443 = zext i32 %442 to i64
 %444 = getelementptr i32, i8* %441, i64 %443
 store i32 %440, i32* %444
 %445 = load i32, i32* %59
 %446 = load i8*, i8** %50
 %447 = getelementptr i32, i8* %446, i64 0
 store i32 %445, i32* %447
 br label %448
448:
 br label %449
449:
 %450 = load i64, i64* %58
 %451 = shl i64 %450, 1
 %452 = add i64 %451, 1
 store i64 %452, i64* %57
 %453 = load i32, i32* %52
 %454 = zext i32 %453 to i64
 %455 = icmp uge i64 %452, %454
 br i1 %455, label %456, label %457
456:
 br label %781
457:
 %458 = load i64, i64* %57
 %459 = add i64 %458, 1
 %460 = load i32, i32* %52
 %461 = zext i32 %460 to i64
 %462 = icmp ult i64 %459, %461
 br i1 %462, label %463, label %610
463:
 %464 = load i8*, i8** %49
 %465 = load i8*, i8** %48
 %466 = load i8*, i8** %50
 %467 = load i64, i64* %57
 %468 = getelementptr i32, i8* %466, i64 %467
 %469 = load i32, i32* %468
 %470 = load i8*, i8** %50
 %471 = load i64, i64* %57
 %472 = add i64 %471, 1
 %473 = getelementptr i32, i8* %470, i64 %472
 %474 = load i32, i32* %473
 store i8* %464, i8** %24
 store i8* %465, i8** %25
 store i32 %469, i32* %26
 store i32 %474, i32* %27
 %475 = load i8*, i8** %24
 %476 = load i8*, i8** %475
 %477 = load i8*, i8** %25
 %478 = load i8*, i8** %477
 %479 = load i32, i32* %26
 %480 = zext i32 %479 to i64
 %481 = getelementptr i32, i8* %478, i64 %480
 %482 = load i32, i32* %481
 %483 = zext i32 %482 to i64
 %484 = getelementptr i8, i8* %476, i64 %483
 store i8* %484, i8** %28
 %485 = load i8*, i8** %24
 %486 = load i8*, i8** %485
 %487 = load i8*, i8** %25
 %488 = load i8*, i8** %487
 %489 = load i32, i32* %27
 %490 = zext i32 %489 to i64
 %491 = getelementptr i32, i8* %488, i64 %490
 %492 = load i32, i32* %491
 %493 = zext i32 %492 to i64
 %494 = getelementptr i8, i8* %486, i64 %493
 store i8* %494, i8** %30
 %495 = load i8*, i8** %28
 %496 = getelementptr i8, i8* %495, i64 28
 %497 = load i8, i8* %496
 %498 = zext i8 %497 to i32
 %499 = load i8*, i8** %28
 %500 = getelementptr i8, i8* %499, i64 28
 %501 = getelementptr i8, i8* %500, i64 1
 %502 = load i8, i8* %501
 %503 = zext i8 %502 to i32
 %504 = shl i32 %503, 8
 %505 = or i32 %498, %504
 store i32 %505, i32* %31
 %506 = load i8*, i8** %30
 %507 = getelementptr i8, i8* %506, i64 28
 %508 = load i8, i8* %507
 %509 = zext i8 %508 to i32
 %510 = load i8*, i8** %30
 %511 = getelementptr i8, i8* %510, i64 28
 %512 = getelementptr i8, i8* %511, i64 1
 %513 = load i8, i8* %512
 %514 = zext i8 %513 to i32
 %515 = shl i32 %514, 8
 %516 = or i32 %509, %515
 store i32 %516, i32* %32
 store i8 0, i8* %33
 store i8 0, i8* %34
 %517 = load i8*, i8** %28
 %518 = getelementptr i8, i8* %517, i64 46
 store i8* %518, i8** %28
 %519 = load i8*, i8** %30
 %520 = getelementptr i8, i8* %519, i64 46
 store i8* %520, i8** %30
 %521 = load i8*, i8** %28
 %522 = load i32, i32* %31
 %523 = load i32, i32* %32
 %524 = icmp ult i32 %522, %523
 br i1 %524, label %525, label %527
525:
 %526 = load i32, i32* %31
 br label %529
527:
 %528 = load i32, i32* %32
 br label %529
529:
 %530 = phi i32 [%526, %525], [%528, %527]
 %531 = zext i32 %530 to i64
 %532 = getelementptr i8, i8* %521, i64 %531
 store i8* %532, i8** %29
 br label %533
533:
 %534 = load i8*, i8** %28
 %535 = load i8*, i8** %29
 %536 = icmp ult i8* %534, %535
 br i1 %536, label %537, label %591
537:
 %538 = load i8*, i8** %28
 %539 = load i8, i8* %538
 %540 = zext i8 %539 to i32
 %541 = icmp sge i32 %540, 65
 br i1 %541, label %542, label %553
542:
 %543 = load i8*, i8** %28
 %544 = load i8, i8* %543
 %545 = zext i8 %544 to i32
 %546 = icmp sle i32 %545, 90
 br i1 %546, label %547, label %553
547:
 %548 = load i8*, i8** %28
 %549 = load i8, i8* %548
 %550 = zext i8 %549 to i32
 %551 = sub i32 %550, 65
 %552 = add i32 %551, 97
 br label %557
553:
 %554 = load i8*, i8** %28
 %555 = load i8, i8* %554
 %556 = zext i8 %555 to i32
 br label %557
557:
 %558 = phi i32 [%552, %547], [%556, %553]
 %559 = trunc i32 %558 to i8
 store i8 %559, i8* %33
 %560 = zext i8 %559 to i32
 %561 = load i8*, i8** %30
 %562 = load i8, i8* %561
 %563 = zext i8 %562 to i32
 %564 = icmp sge i32 %563, 65
 br i1 %564, label %565, label %576
565:
 %566 = load i8*, i8** %30
 %567 = load i8, i8* %566
 %568 = zext i8 %567 to i32
 %569 = icmp sle i32 %568, 90
 br i1 %569, label %570, label %576
570:
 %571 = load i8*, i8** %30
 %572 = load i8, i8* %571
 %573 = zext i8 %572 to i32
 %574 = sub i32 %573, 65
 %575 = add i32 %574, 97
 br label %580
576:
 %577 = load i8*, i8** %30
 %578 = load i8, i8* %577
 %579 = zext i8 %578 to i32
 br label %580
580:
 %581 = phi i32 [%575, %570], [%579, %576]
 %582 = trunc i32 %581 to i8
 store i8 %582, i8* %34
 %583 = zext i8 %582 to i32
 %584 = icmp ne i32 %560, %583
 br i1 %584, label %585, label %586
585:
 br label %591
586:
 %587 = load i8*, i8** %28
 %588 = getelementptr i8, i8* %587, i32 1
 store i8* %588, i8** %28
 %589 = load i8*, i8** %30
 %590 = getelementptr i8, i8* %589, i32 1
 store i8* %590, i8** %30
 br label %533
591:
 %592 = load i8*, i8** %28
 %593 = load i8*, i8** %29
 %594 = icmp eq i8* %592, %593
 br i1 %594, label %595, label %600
595:
 %596 = load i32, i32* %31
 %597 = load i32, i32* %32
 %598 = icmp ult i32 %596, %597
 %599 = zext i1 %598 to i32
 br label %607
600:
 %601 = load i8, i8* %33
 %602 = zext i8 %601 to i32
 %603 = load i8, i8* %34
 %604 = zext i8 %603 to i32
 %605 = icmp slt i32 %602, %604
 %606 = zext i1 %605 to i32
 br label %607
607:
 %608 = phi i32 [%599, %595], [%606, %600]
 %609 = icmp ne i32 %608, 0
 br label %610
610:
 %611 = phi i1 [0, %457], [%609, %607]
 %612 = zext i1 %611 to i32
 %613 = sext i32 %612 to i64
 %614 = load i64, i64* %57
 %615 = add i64 %614, %613
 store i64 %615, i64* %57
 %616 = load i8*, i8** %49
 %617 = load i8*, i8** %48
 %618 = load i8*, i8** %50
 %619 = load i64, i64* %58
 %620 = getelementptr i32, i8* %618, i64 %619
 %621 = load i32, i32* %620
 %622 = load i8*, i8** %50
 %623 = load i64, i64* %57
 %624 = getelementptr i32, i8* %622, i64 %623
 %625 = load i32, i32* %624
 store i8* %616, i8** %35
 store i8* %617, i8** %36
 store i32 %621, i32* %37
 store i32 %625, i32* %38
 %626 = load i8*, i8** %35
 %627 = load i8*, i8** %626
 %628 = load i8*, i8** %36
 %629 = load i8*, i8** %628
 %630 = load i32, i32* %37
 %631 = zext i32 %630 to i64
 %632 = getelementptr i32, i8* %629, i64 %631
 %633 = load i32, i32* %632
 %634 = zext i32 %633 to i64
 %635 = getelementptr i8, i8* %627, i64 %634
 store i8* %635, i8** %39
 %636 = load i8*, i8** %35
 %637 = load i8*, i8** %636
 %638 = load i8*, i8** %36
 %639 = load i8*, i8** %638
 %640 = load i32, i32* %38
 %641 = zext i32 %640 to i64
 %642 = getelementptr i32, i8* %639, i64 %641
 %643 = load i32, i32* %642
 %644 = zext i32 %643 to i64
 %645 = getelementptr i8, i8* %637, i64 %644
 store i8* %645, i8** %41
 %646 = load i8*, i8** %39
 %647 = getelementptr i8, i8* %646, i64 28
 %648 = load i8, i8* %647
 %649 = zext i8 %648 to i32
 %650 = load i8*, i8** %39
 %651 = getelementptr i8, i8* %650, i64 28
 %652 = getelementptr i8, i8* %651, i64 1
 %653 = load i8, i8* %652
 %654 = zext i8 %653 to i32
 %655 = shl i32 %654, 8
 %656 = or i32 %649, %655
 store i32 %656, i32* %42
 %657 = load i8*, i8** %41
 %658 = getelementptr i8, i8* %657, i64 28
 %659 = load i8, i8* %658
 %660 = zext i8 %659 to i32
 %661 = load i8*, i8** %41
 %662 = getelementptr i8, i8* %661, i64 28
 %663 = getelementptr i8, i8* %662, i64 1
 %664 = load i8, i8* %663
 %665 = zext i8 %664 to i32
 %666 = shl i32 %665, 8
 %667 = or i32 %660, %666
 store i32 %667, i32* %43
 store i8 0, i8* %44
 store i8 0, i8* %45
 %668 = load i8*, i8** %39
 %669 = getelementptr i8, i8* %668, i64 46
 store i8* %669, i8** %39
 %670 = load i8*, i8** %41
 %671 = getelementptr i8, i8* %670, i64 46
 store i8* %671, i8** %41
 %672 = load i8*, i8** %39
 %673 = load i32, i32* %42
 %674 = load i32, i32* %43
 %675 = icmp ult i32 %673, %674
 br i1 %675, label %676, label %678
676:
 %677 = load i32, i32* %42
 br label %680
678:
 %679 = load i32, i32* %43
 br label %680
680:
 %681 = phi i32 [%677, %676], [%679, %678]
 %682 = zext i32 %681 to i64
 %683 = getelementptr i8, i8* %672, i64 %682
 store i8* %683, i8** %40
 br label %684
684:
 %685 = load i8*, i8** %39
 %686 = load i8*, i8** %40
 %687 = icmp ult i8* %685, %686
 br i1 %687, label %688, label %742
688:
 %689 = load i8*, i8** %39
 %690 = load i8, i8* %689
 %691 = zext i8 %690 to i32
 %692 = icmp sge i32 %691, 65
 br i1 %692, label %693, label %704
693:
 %694 = load i8*, i8** %39
 %695 = load i8, i8* %694
 %696 = zext i8 %695 to i32
 %697 = icmp sle i32 %696, 90
 br i1 %697, label %698, label %704
698:
 %699 = load i8*, i8** %39
 %700 = load i8, i8* %699
 %701 = zext i8 %700 to i32
 %702 = sub i32 %701, 65
 %703 = add i32 %702, 97
 br label %708
704:
 %705 = load i8*, i8** %39
 %706 = load i8, i8* %705
 %707 = zext i8 %706 to i32
 br label %708
708:
 %709 = phi i32 [%703, %698], [%707, %704]
 %710 = trunc i32 %709 to i8
 store i8 %710, i8* %44
 %711 = zext i8 %710 to i32
 %712 = load i8*, i8** %41
 %713 = load i8, i8* %712
 %714 = zext i8 %713 to i32
 %715 = icmp sge i32 %714, 65
 br i1 %715, label %716, label %727
716:
 %717 = load i8*, i8** %41
 %718 = load i8, i8* %717
 %719 = zext i8 %718 to i32
 %720 = icmp sle i32 %719, 90
 br i1 %720, label %721, label %727
721:
 %722 = load i8*, i8** %41
 %723 = load i8, i8* %722
 %724 = zext i8 %723 to i32
 %725 = sub i32 %724, 65
 %726 = add i32 %725, 97
 br label %731
727:
 %728 = load i8*, i8** %41
 %729 = load i8, i8* %728
 %730 = zext i8 %729 to i32
 br label %731
731:
 %732 = phi i32 [%726, %721], [%730, %727]
 %733 = trunc i32 %732 to i8
 store i8 %733, i8* %45
 %734 = zext i8 %733 to i32
 %735 = icmp ne i32 %711, %734
 br i1 %735, label %736, label %737
736:
 br label %742
737:
 %738 = load i8*, i8** %39
 %739 = getelementptr i8, i8* %738, i32 1
 store i8* %739, i8** %39
 %740 = load i8*, i8** %41
 %741 = getelementptr i8, i8* %740, i32 1
 store i8* %741, i8** %41
 br label %684
742:
 %743 = load i8*, i8** %39
 %744 = load i8*, i8** %40
 %745 = icmp eq i8* %743, %744
 br i1 %745, label %746, label %751
746:
 %747 = load i32, i32* %42
 %748 = load i32, i32* %43
 %749 = icmp ult i32 %747, %748
 %750 = zext i1 %749 to i32
 br label %758
751:
 %752 = load i8, i8* %44
 %753 = zext i8 %752 to i32
 %754 = load i8, i8* %45
 %755 = zext i8 %754 to i32
 %756 = icmp slt i32 %753, %755
 %757 = zext i1 %756 to i32
 br label %758
758:
 %759 = phi i32 [%750, %746], [%757, %751]
 %760 = icmp ne i32 %759, 0
 br i1 %760, label %762, label %761
761:
 br label %781
762:
 br label %763
763:
 %764 = load i8*, i8** %50
 %765 = load i64, i64* %58
 %766 = getelementptr i32, i8* %764, i64 %765
 %767 = load i32, i32* %766
 store i32 %767, i32* %60
 %768 = load i8*, i8** %50
 %769 = load i64, i64* %57
 %770 = getelementptr i32, i8* %768, i64 %769
 %771 = load i32, i32* %770
 %772 = load i8*, i8** %50
 %773 = load i64, i64* %58
 %774 = getelementptr i32, i8* %772, i64 %773
 store i32 %771, i32* %774
 %775 = load i32, i32* %60
 %776 = load i8*, i8** %50
 %777 = load i64, i64* %57
 %778 = getelementptr i32, i8* %776, i64 %777
 store i32 %775, i32* %778
 br label %779
779:
 %780 = load i64, i64* %57
 store i64 %780, i64* %58
 br label %449
781:
 %782 = load i32, i32* %52
 %783 = add i32 %782, -1
 store i32 %783, i32* %52
 br label %428
784:
 ret void
}

define i64 @mz_zip_dos_to_time_t (i32 %0, i32 %1) {
 %3 = alloca i32
 %4 = alloca i32
 %5 = alloca %struct.tm
 store i32 %0, i32* %3
 store i32 %1, i32* %4
 call void @memset (i8* %5, i8 0, i64 56, i1 0)
 %6 = getelementptr %struct.tm, i8* %5, i32 0, i32 8
 store i32 -1, i32* %6
 %7 = load i32, i32* %4
 %8 = ashr i32 %7, 9
 %9 = and i32 %8, 127
 %10 = add i32 %9, 1980
 %11 = sub i32 %10, 1900
 %12 = getelementptr %struct.tm, i8* %5, i32 0, i32 5
 store i32 %11, i32* %12
 %13 = load i32, i32* %4
 %14 = ashr i32 %13, 5
 %15 = and i32 %14, 15
 %16 = sub i32 %15, 1
 %17 = getelementptr %struct.tm, i8* %5, i32 0, i32 4
 store i32 %16, i32* %17
 %18 = load i32, i32* %4
 %19 = and i32 %18, 31
 %20 = getelementptr %struct.tm, i8* %5, i32 0, i32 3
 store i32 %19, i32* %20
 %21 = load i32, i32* %3
 %22 = ashr i32 %21, 11
 %23 = and i32 %22, 31
 %24 = getelementptr %struct.tm, i8* %5, i32 0, i32 2
 store i32 %23, i32* %24
 %25 = load i32, i32* %3
 %26 = ashr i32 %25, 5
 %27 = and i32 %26, 63
 %28 = getelementptr %struct.tm, i8* %5, i32 0, i32 1
 store i32 %27, i32* %28
 %29 = load i32, i32* %3
 %30 = shl i32 %29, 1
 %31 = and i32 %30, 62
 %32 = getelementptr %struct.tm, i8* %5, i32 0, i32 0
 store i32 %31, i32* %32
 %33 = call i64 @mktime (i8* %5)
 ret i64 %33
}

define i32 @mz_zip_array_ensure_capacity (i8* %0, i8* %1, i64 %2, i32 %3) {
 %5 = alloca i32
 %6 = alloca i8*
 %7 = alloca i8*
 %8 = alloca i64
 %9 = alloca i32
 %10 = alloca i8*
 %11 = alloca i64
 store i8* %0, i8** %6
 store i8* %1, i8** %7
 store i64 %2, i64* %8
 store i32 %3, i32* %9
 %12 = load i64, i64* %8
 store i64 %12, i64* %11
 %13 = load i8*, i8** %7
 %14 = getelementptr %struct.mz_zip_array, i8* %13, i32 0, i32 3
 %15 = load i32, i32* %14
 %16 = icmp ne i32 %15, 0
 %17 = xor i1 %16, 1
 %18 = zext i1 %17 to i32
 %19 = sext i32 %18 to i64
 %20 = icmp ne i64 %19, 0
 br i1 %20, label %21, label %23
21:
 call void @__assert_rtn (i8* @__func__.mz_zip_array_ensure_capacity, i8* @.str.11, i32 4785, i8* @.str.78)
 unreachable
22:
 br label %24
23:
 br label %24
24:
 %25 = load i8*, i8** %7
 %26 = getelementptr %struct.mz_zip_array, i8* %25, i32 0, i32 2
 %27 = load i64, i64* %26
 %28 = load i64, i64* %8
 %29 = icmp uge i64 %27, %28
 br i1 %29, label %30, label %31
30:
 store i32 1, i32* %5
 br label %79
31:
 %32 = load i32, i32* %9
 %33 = icmp ne i32 %32, 0
 br i1 %33, label %34, label %54
34:
 %35 = load i8*, i8** %7
 %36 = getelementptr %struct.mz_zip_array, i8* %35, i32 0, i32 2
 %37 = load i64, i64* %36
 %38 = icmp ugt i64 1, %37
 br i1 %38, label %39, label %40
39:
 br label %44
40:
 %41 = load i8*, i8** %7
 %42 = getelementptr %struct.mz_zip_array, i8* %41, i32 0, i32 2
 %43 = load i64, i64* %42
 br label %44
44:
 %45 = phi i64 [1, %39], [%43, %40]
 store i64 %45, i64* %11
 br label %46
46:
 %47 = load i64, i64* %11
 %48 = load i64, i64* %8
 %49 = icmp ult i64 %47, %48
 br i1 %49, label %50, label %53
50:
 %51 = load i64, i64* %11
 %52 = mul i64 %51, 2
 store i64 %52, i64* %11
 br label %46
53:
 br label %54
54:
 %55 = load i8*, i8** %6
 %56 = getelementptr %struct.mz_zip_archive, i8* %55, i32 0, i32 9
 %57 = load i8*, i8** %56
 %58 = load i8*, i8** %6
 %59 = getelementptr %struct.mz_zip_archive, i8* %58, i32 0, i32 10
 %60 = load i8*, i8** %59
 %61 = load i8*, i8** %7
 %62 = getelementptr %struct.mz_zip_array, i8* %61, i32 0, i32 0
 %63 = load i8*, i8** %62
 %64 = load i8*, i8** %7
 %65 = getelementptr %struct.mz_zip_array, i8* %64, i32 0, i32 3
 %66 = load i32, i32* %65
 %67 = zext i32 %66 to i64
 %68 = load i64, i64* %11
 %69 = call i8* %57 (i8* %60, i8* %63, i64 %67, i64 %68)
 store i8* %69, i8** %10
 %70 = icmp eq i8* null, %69
 br i1 %70, label %71, label %72
71:
 store i32 0, i32* %5
 br label %79
72:
 %73 = load i8*, i8** %10
 %74 = load i8*, i8** %7
 %75 = getelementptr %struct.mz_zip_array, i8* %74, i32 0, i32 0
 store i8* %73, i8** %75
 %76 = load i64, i64* %11
 %77 = load i8*, i8** %7
 %78 = getelementptr %struct.mz_zip_array, i8* %77, i32 0, i32 2
 store i64 %76, i64* %78
 store i32 1, i32* %5
 br label %79
79:
 %80 = load i32, i32* %5
 ret i32 %80
}

define i32 @mz_zip_writer_create_central_dir_header (i8* %0, i8* %1, i16 %2, i16 %3, i16 %4, i64 %5, i64 %6, i32 %7, i16 %8, i16 %9, i16 %10, i16 %11, i64 %12, i32 %13) {
 %15 = alloca i8*
 %16 = alloca i16
 %17 = alloca i8*
 %18 = alloca i16
 %19 = alloca i8*
 %20 = alloca i16
 %21 = alloca i8*
 %22 = alloca i16
 %23 = alloca i8*
 %24 = alloca i16
 %25 = alloca i8*
 %26 = alloca i16
 %27 = alloca i8*
 %28 = alloca i16
 %29 = alloca i8*
 %30 = alloca i16
 %31 = alloca i8*
 %32 = alloca i32
 %33 = alloca i8*
 %34 = alloca i32
 %35 = alloca i8*
 %36 = alloca i32
 %37 = alloca i8*
 %38 = alloca i32
 %39 = alloca i8*
 %40 = alloca i32
 %41 = alloca i8*
 %42 = alloca i32
 %43 = alloca i8*
 %44 = alloca i8*
 %45 = alloca i16
 %46 = alloca i16
 %47 = alloca i16
 %48 = alloca i64
 %49 = alloca i64
 %50 = alloca i32
 %51 = alloca i16
 %52 = alloca i16
 %53 = alloca i16
 %54 = alloca i16
 %55 = alloca i64
 %56 = alloca i32
 store i8* %0, i8** %43
 store i8* %1, i8** %44
 store i16 %2, i16* %45
 store i16 %3, i16* %46
 store i16 %4, i16* %47
 store i64 %5, i64* %48
 store i64 %6, i64* %49
 store i32 %7, i32* %50
 store i16 %8, i16* %51
 store i16 %9, i16* %52
 store i16 %10, i16* %53
 store i16 %11, i16* %54
 store i64 %12, i64* %55
 store i32 %13, i32* %56
 %57 = load i8*, i8** %43
 %58 = load i8*, i8** %44
 %59 = load i8*, i8** %44
 %60 = call i64 @llvm.objectsize.i64.p0 (i8* %59, i1 0, i1 1, i1 0)
 %61 = call i8* @__memset_chk (i8* %58, i32 0, i64 46, i64 %60)
 %62 = load i8*, i8** %44
 %63 = getelementptr i8, i8* %62, i64 0
 store i8* %63, i8** %31
 store i32 33639248, i32* %32
 %64 = load i32, i32* %32
 %65 = trunc i32 %64 to i8
 %66 = load i8*, i8** %31
 store i8 %65, i8* %66
 %67 = load i32, i32* %32
 %68 = lshr i32 %67, 8
 %69 = trunc i32 %68 to i8
 %70 = load i8*, i8** %31
 %71 = getelementptr i8, i8* %70, i64 1
 store i8 %69, i8* %71
 %72 = load i32, i32* %32
 %73 = lshr i32 %72, 16
 %74 = trunc i32 %73 to i8
 %75 = load i8*, i8** %31
 %76 = getelementptr i8, i8* %75, i64 2
 store i8 %74, i8* %76
 %77 = load i32, i32* %32
 %78 = lshr i32 %77, 24
 %79 = trunc i32 %78 to i8
 %80 = load i8*, i8** %31
 %81 = getelementptr i8, i8* %80, i64 3
 store i8 %79, i8* %81
 %82 = load i8*, i8** %44
 %83 = getelementptr i8, i8* %82, i64 6
 %84 = load i16, i16* %51
 %85 = zext i16 %84 to i32
 %86 = icmp ne i32 %85, 0
 %87 = zext i1 %86 to i64
 %88 = select i1 %86, i32 20, i32 0
 %89 = trunc i32 %88 to i16
 store i8* %83, i8** %15
 store i16 %89, i16* %16
 %90 = load i16, i16* %16
 %91 = trunc i16 %90 to i8
 %92 = load i8*, i8** %15
 store i8 %91, i8* %92
 %93 = load i16, i16* %16
 %94 = zext i16 %93 to i32
 %95 = ashr i32 %94, 8
 %96 = trunc i32 %95 to i8
 %97 = load i8*, i8** %15
 %98 = getelementptr i8, i8* %97, i64 1
 store i8 %96, i8* %98
 %99 = load i8*, i8** %44
 %100 = getelementptr i8, i8* %99, i64 8
 %101 = load i16, i16* %52
 store i8* %100, i8** %17
 store i16 %101, i16* %18
 %102 = load i16, i16* %18
 %103 = trunc i16 %102 to i8
 %104 = load i8*, i8** %17
 store i8 %103, i8* %104
 %105 = load i16, i16* %18
 %106 = zext i16 %105 to i32
 %107 = ashr i32 %106, 8
 %108 = trunc i32 %107 to i8
 %109 = load i8*, i8** %17
 %110 = getelementptr i8, i8* %109, i64 1
 store i8 %108, i8* %110
 %111 = load i8*, i8** %44
 %112 = getelementptr i8, i8* %111, i64 10
 %113 = load i16, i16* %51
 store i8* %112, i8** %19
 store i16 %113, i16* %20
 %114 = load i16, i16* %20
 %115 = trunc i16 %114 to i8
 %116 = load i8*, i8** %19
 store i8 %115, i8* %116
 %117 = load i16, i16* %20
 %118 = zext i16 %117 to i32
 %119 = ashr i32 %118, 8
 %120 = trunc i32 %119 to i8
 %121 = load i8*, i8** %19
 %122 = getelementptr i8, i8* %121, i64 1
 store i8 %120, i8* %122
 %123 = load i8*, i8** %44
 %124 = getelementptr i8, i8* %123, i64 12
 %125 = load i16, i16* %53
 store i8* %124, i8** %21
 store i16 %125, i16* %22
 %126 = load i16, i16* %22
 %127 = trunc i16 %126 to i8
 %128 = load i8*, i8** %21
 store i8 %127, i8* %128
 %129 = load i16, i16* %22
 %130 = zext i16 %129 to i32
 %131 = ashr i32 %130, 8
 %132 = trunc i32 %131 to i8
 %133 = load i8*, i8** %21
 %134 = getelementptr i8, i8* %133, i64 1
 store i8 %132, i8* %134
 %135 = load i8*, i8** %44
 %136 = getelementptr i8, i8* %135, i64 14
 %137 = load i16, i16* %54
 store i8* %136, i8** %23
 store i16 %137, i16* %24
 %138 = load i16, i16* %24
 %139 = trunc i16 %138 to i8
 %140 = load i8*, i8** %23
 store i8 %139, i8* %140
 %141 = load i16, i16* %24
 %142 = zext i16 %141 to i32
 %143 = ashr i32 %142, 8
 %144 = trunc i32 %143 to i8
 %145 = load i8*, i8** %23
 %146 = getelementptr i8, i8* %145, i64 1
 store i8 %144, i8* %146
 %147 = load i8*, i8** %44
 %148 = getelementptr i8, i8* %147, i64 16
 %149 = load i32, i32* %50
 store i8* %148, i8** %33
 store i32 %149, i32* %34
 %150 = load i32, i32* %34
 %151 = trunc i32 %150 to i8
 %152 = load i8*, i8** %33
 store i8 %151, i8* %152
 %153 = load i32, i32* %34
 %154 = lshr i32 %153, 8
 %155 = trunc i32 %154 to i8
 %156 = load i8*, i8** %33
 %157 = getelementptr i8, i8* %156, i64 1
 store i8 %155, i8* %157
 %158 = load i32, i32* %34
 %159 = lshr i32 %158, 16
 %160 = trunc i32 %159 to i8
 %161 = load i8*, i8** %33
 %162 = getelementptr i8, i8* %161, i64 2
 store i8 %160, i8* %162
 %163 = load i32, i32* %34
 %164 = lshr i32 %163, 24
 %165 = trunc i32 %164 to i8
 %166 = load i8*, i8** %33
 %167 = getelementptr i8, i8* %166, i64 3
 store i8 %165, i8* %167
 %168 = load i8*, i8** %44
 %169 = getelementptr i8, i8* %168, i64 20
 %170 = load i64, i64* %49
 %171 = icmp ult i64 %170, 4294967295
 br i1 %171, label %172, label %174
172:
 %173 = load i64, i64* %49
 br label %175
174:
 br label %175
175:
 %176 = phi i64 [%173, %172], [4294967295, %174]
 %177 = trunc i64 %176 to i32
 store i8* %169, i8** %35
 store i32 %177, i32* %36
 %178 = load i32, i32* %36
 %179 = trunc i32 %178 to i8
 %180 = load i8*, i8** %35
 store i8 %179, i8* %180
 %181 = load i32, i32* %36
 %182 = lshr i32 %181, 8
 %183 = trunc i32 %182 to i8
 %184 = load i8*, i8** %35
 %185 = getelementptr i8, i8* %184, i64 1
 store i8 %183, i8* %185
 %186 = load i32, i32* %36
 %187 = lshr i32 %186, 16
 %188 = trunc i32 %187 to i8
 %189 = load i8*, i8** %35
 %190 = getelementptr i8, i8* %189, i64 2
 store i8 %188, i8* %190
 %191 = load i32, i32* %36
 %192 = lshr i32 %191, 24
 %193 = trunc i32 %192 to i8
 %194 = load i8*, i8** %35
 %195 = getelementptr i8, i8* %194, i64 3
 store i8 %193, i8* %195
 %196 = load i8*, i8** %44
 %197 = getelementptr i8, i8* %196, i64 24
 %198 = load i64, i64* %48
 %199 = icmp ult i64 %198, 4294967295
 br i1 %199, label %200, label %202
200:
 %201 = load i64, i64* %48
 br label %203
202:
 br label %203
203:
 %204 = phi i64 [%201, %200], [4294967295, %202]
 %205 = trunc i64 %204 to i32
 store i8* %197, i8** %37
 store i32 %205, i32* %38
 %206 = load i32, i32* %38
 %207 = trunc i32 %206 to i8
 %208 = load i8*, i8** %37
 store i8 %207, i8* %208
 %209 = load i32, i32* %38
 %210 = lshr i32 %209, 8
 %211 = trunc i32 %210 to i8
 %212 = load i8*, i8** %37
 %213 = getelementptr i8, i8* %212, i64 1
 store i8 %211, i8* %213
 %214 = load i32, i32* %38
 %215 = lshr i32 %214, 16
 %216 = trunc i32 %215 to i8
 %217 = load i8*, i8** %37
 %218 = getelementptr i8, i8* %217, i64 2
 store i8 %216, i8* %218
 %219 = load i32, i32* %38
 %220 = lshr i32 %219, 24
 %221 = trunc i32 %220 to i8
 %222 = load i8*, i8** %37
 %223 = getelementptr i8, i8* %222, i64 3
 store i8 %221, i8* %223
 %224 = load i8*, i8** %44
 %225 = getelementptr i8, i8* %224, i64 28
 %226 = load i16, i16* %45
 store i8* %225, i8** %25
 store i16 %226, i16* %26
 %227 = load i16, i16* %26
 %228 = trunc i16 %227 to i8
 %229 = load i8*, i8** %25
 store i8 %228, i8* %229
 %230 = load i16, i16* %26
 %231 = zext i16 %230 to i32
 %232 = ashr i32 %231, 8
 %233 = trunc i32 %232 to i8
 %234 = load i8*, i8** %25
 %235 = getelementptr i8, i8* %234, i64 1
 store i8 %233, i8* %235
 %236 = load i8*, i8** %44
 %237 = getelementptr i8, i8* %236, i64 30
 %238 = load i16, i16* %46
 store i8* %237, i8** %27
 store i16 %238, i16* %28
 %239 = load i16, i16* %28
 %240 = trunc i16 %239 to i8
 %241 = load i8*, i8** %27
 store i8 %240, i8* %241
 %242 = load i16, i16* %28
 %243 = zext i16 %242 to i32
 %244 = ashr i32 %243, 8
 %245 = trunc i32 %244 to i8
 %246 = load i8*, i8** %27
 %247 = getelementptr i8, i8* %246, i64 1
 store i8 %245, i8* %247
 %248 = load i8*, i8** %44
 %249 = getelementptr i8, i8* %248, i64 32
 %250 = load i16, i16* %47
 store i8* %249, i8** %29
 store i16 %250, i16* %30
 %251 = load i16, i16* %30
 %252 = trunc i16 %251 to i8
 %253 = load i8*, i8** %29
 store i8 %252, i8* %253
 %254 = load i16, i16* %30
 %255 = zext i16 %254 to i32
 %256 = ashr i32 %255, 8
 %257 = trunc i32 %256 to i8
 %258 = load i8*, i8** %29
 %259 = getelementptr i8, i8* %258, i64 1
 store i8 %257, i8* %259
 %260 = load i8*, i8** %44
 %261 = getelementptr i8, i8* %260, i64 38
 %262 = load i32, i32* %56
 store i8* %261, i8** %39
 store i32 %262, i32* %40
 %263 = load i32, i32* %40
 %264 = trunc i32 %263 to i8
 %265 = load i8*, i8** %39
 store i8 %264, i8* %265
 %266 = load i32, i32* %40
 %267 = lshr i32 %266, 8
 %268 = trunc i32 %267 to i8
 %269 = load i8*, i8** %39
 %270 = getelementptr i8, i8* %269, i64 1
 store i8 %268, i8* %270
 %271 = load i32, i32* %40
 %272 = lshr i32 %271, 16
 %273 = trunc i32 %272 to i8
 %274 = load i8*, i8** %39
 %275 = getelementptr i8, i8* %274, i64 2
 store i8 %273, i8* %275
 %276 = load i32, i32* %40
 %277 = lshr i32 %276, 24
 %278 = trunc i32 %277 to i8
 %279 = load i8*, i8** %39
 %280 = getelementptr i8, i8* %279, i64 3
 store i8 %278, i8* %280
 %281 = load i8*, i8** %44
 %282 = getelementptr i8, i8* %281, i64 42
 %283 = load i64, i64* %55
 %284 = icmp ult i64 %283, 4294967295
 br i1 %284, label %285, label %287
285:
 %286 = load i64, i64* %55
 br label %288
287:
 br label %288
288:
 %289 = phi i64 [%286, %285], [4294967295, %287]
 %290 = trunc i64 %289 to i32
 store i8* %282, i8** %41
 store i32 %290, i32* %42
 %291 = load i32, i32* %42
 %292 = trunc i32 %291 to i8
 %293 = load i8*, i8** %41
 store i8 %292, i8* %293
 %294 = load i32, i32* %42
 %295 = lshr i32 %294, 8
 %296 = trunc i32 %295 to i8
 %297 = load i8*, i8** %41
 %298 = getelementptr i8, i8* %297, i64 1
 store i8 %296, i8* %298
 %299 = load i32, i32* %42
 %300 = lshr i32 %299, 16
 %301 = trunc i32 %300 to i8
 %302 = load i8*, i8** %41
 %303 = getelementptr i8, i8* %302, i64 2
 store i8 %301, i8* %303
 %304 = load i32, i32* %42
 %305 = lshr i32 %304, 24
 %306 = trunc i32 %305 to i8
 %307 = load i8*, i8** %41
 %308 = getelementptr i8, i8* %307, i64 3
 store i8 %306, i8* %308
 ret i32 1
}
