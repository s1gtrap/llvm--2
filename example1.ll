; ModuleID = 'example1.c'
source_filename = "example1.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-macosx14.0.0"

%struct.anon = type { i32, ptr }
%struct.mz_stream_s = type { ptr, i32, i64, ptr, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i64, i64 }
%struct.tdefl_compressor = type { ptr, ptr, i32, [2 x i32], i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, i32, ptr, i64, i64, [33025 x i8], [3 x [288 x i16]], [3 x [288 x i16]], [3 x [288 x i8]], [65536 x i8], [32768 x i16], [32768 x i16], [85196 x i8] }
%struct.inflate_state = type { %struct.tinfl_decompressor_tag, i32, i32, i32, i32, i32, [32768 x i8], i32 }
%struct.tinfl_decompressor_tag = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i64, i64, [3 x [1024 x i16]], [576 x i16], [64 x i16], [38 x i16], [288 x i8], [32 x i8], [19 x i8], [4 x i8], [457 x i8] }
%struct.tdefl_output_buffer = type { i64, i64, ptr, i32 }
%struct.mz_zip_archive = type { i64, i64, i32, i32, i32, i32, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mz_zip_internal_state_tag = type { %struct.mz_zip_array, %struct.mz_zip_array, %struct.mz_zip_array, i32, i32, i32, ptr, i64, ptr, i64, i64 }
%struct.mz_zip_array = type { ptr, i64, i64, i32 }
%struct.mz_zip_archive_file_stat = type { i32, i64, i16, i16, i16, i16, i32, i64, i64, i16, i32, i64, i32, i32, i32, i32, [512 x i8], [512 x i8], i64 }
%struct.mz_zip_reader_extract_iter_state = type { ptr, i32, i32, i64, i64, i64, i64, i64, i64, %struct.mz_zip_archive_file_stat, ptr, ptr, i64, %struct.tinfl_decompressor_tag, i32 }
%struct.utimbuf = type { i64, i64 }
%struct.mz_zip_writer_add_state = type { ptr, i64, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, ptr }
%struct.stat = type { i32, i16, i16, i64, i32, i32, i32, %struct.timespec, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64, i32, i32, i32, i32, [2 x i64] }
%struct.timespec = type { i64, i64 }
%struct.tdefl_sym_freq = type { i16, i16 }

@mz_crc32.s_crc_table = internal constant [256 x i32] [i32 0, i32 1996959894, i32 -301047508, i32 -1727442502, i32 124634137, i32 1886057615, i32 -379345611, i32 -1637575261, i32 249268274, i32 2044508324, i32 -522852066, i32 -1747789432, i32 162941995, i32 2125561021, i32 -407360249, i32 -1866523247, i32 498536548, i32 1789927666, i32 -205950648, i32 -2067906082, i32 450548861, i32 1843258603, i32 -187386543, i32 -2083289657, i32 325883990, i32 1684777152, i32 -43845254, i32 -1973040660, i32 335633487, i32 1661365465, i32 -99664541, i32 -1928851979, i32 997073096, i32 1281953886, i32 -715111964, i32 -1570279054, i32 1006888145, i32 1258607687, i32 -770865667, i32 -1526024853, i32 901097722, i32 1119000684, i32 -608450090, i32 -1396901568, i32 853044451, i32 1172266101, i32 -589951537, i32 -1412350631, i32 651767980, i32 1373503546, i32 -925412992, i32 -1076862698, i32 565507253, i32 1454621731, i32 -809855591, i32 -1195530993, i32 671266974, i32 1594198024, i32 -972236366, i32 -1324619484, i32 795835527, i32 1483230225, i32 -1050600021, i32 -1234817731, i32 1994146192, i32 31158534, i32 -1731059524, i32 -271249366, i32 1907459465, i32 112637215, i32 -1614814043, i32 -390540237, i32 2013776290, i32 251722036, i32 -1777751922, i32 -519137256, i32 2137656763, i32 141376813, i32 -1855689577, i32 -429695999, i32 1802195444, i32 476864866, i32 -2056965928, i32 -228458418, i32 1812370925, i32 453092731, i32 -2113342271, i32 -183516073, i32 1706088902, i32 314042704, i32 -1950435094, i32 -54949764, i32 1658658271, i32 366619977, i32 -1932296973, i32 -69972891, i32 1303535960, i32 984961486, i32 -1547960204, i32 -725929758, i32 1256170817, i32 1037604311, i32 -1529756563, i32 -740887301, i32 1131014506, i32 879679996, i32 -1385723834, i32 -631195440, i32 1141124467, i32 855842277, i32 -1442165665, i32 -586318647, i32 1342533948, i32 654459306, i32 -1106571248, i32 -921952122, i32 1466479909, i32 544179635, i32 -1184443383, i32 -832445281, i32 1591671054, i32 702138776, i32 -1328506846, i32 -942167884, i32 1504918807, i32 783551873, i32 -1212326853, i32 -1061524307, i32 -306674912, i32 -1698712650, i32 62317068, i32 1957810842, i32 -355121351, i32 -1647151185, i32 81470997, i32 1943803523, i32 -480048366, i32 -1805370492, i32 225274430, i32 2053790376, i32 -468791541, i32 -1828061283, i32 167816743, i32 2097651377, i32 -267414716, i32 -2029476910, i32 503444072, i32 1762050814, i32 -144550051, i32 -2140837941, i32 426522225, i32 1852507879, i32 -19653770, i32 -1982649376, i32 282753626, i32 1742555852, i32 -105259153, i32 -1900089351, i32 397917763, i32 1622183637, i32 -690576408, i32 -1580100738, i32 953729732, i32 1340076626, i32 -776247311, i32 -1497606297, i32 1068828381, i32 1219638859, i32 -670225446, i32 -1358292148, i32 906185462, i32 1090812512, i32 -547295293, i32 -1469587627, i32 829329135, i32 1181335161, i32 -882789492, i32 -1134132454, i32 628085408, i32 1382605366, i32 -871598187, i32 -1156888829, i32 570562233, i32 1426400815, i32 -977650754, i32 -1296233688, i32 733239954, i32 1555261956, i32 -1026031705, i32 -1244606671, i32 752459403, i32 1541320221, i32 -1687895376, i32 -328994266, i32 1969922972, i32 40735498, i32 -1677130071, i32 -351390145, i32 1913087877, i32 83908371, i32 -1782625662, i32 -491226604, i32 2075208622, i32 213261112, i32 -1831694693, i32 -438977011, i32 2094854071, i32 198958881, i32 -2032938284, i32 -237706686, i32 1759359992, i32 534414190, i32 -2118248755, i32 -155638181, i32 1873836001, i32 414664567, i32 -2012718362, i32 -15766928, i32 1711684554, i32 285281116, i32 -1889165569, i32 -127750551, i32 1634467795, i32 376229701, i32 -1609899400, i32 -686959890, i32 1308918612, i32 956543938, i32 -1486412191, i32 -799009033, i32 1231636301, i32 1047427035, i32 -1362007478, i32 -640263460, i32 1088359270, i32 936918000, i32 -1447252397, i32 -558129467, i32 1202900863, i32 817233897, i32 -1111625188, i32 -893730166, i32 1404277552, i32 615818150, i32 -1160759803, i32 -841546093, i32 1423857449, i32 601450431, i32 -1285129682, i32 -1000256840, i32 1567103746, i32 711928724, i32 -1274298825, i32 -1022587231, i32 1510334235, i32 755167117], align 16
@.str = private unnamed_addr constant [7 x i8] c"11.0.2\00", align 1
@mz_error.s_error_descs = internal global [10 x %struct.anon] [%struct.anon { i32 0, ptr @.str.1 }, %struct.anon { i32 1, ptr @.str.2 }, %struct.anon { i32 2, ptr @.str.3 }, %struct.anon { i32 -1, ptr @.str.4 }, %struct.anon { i32 -2, ptr @.str.5 }, %struct.anon { i32 -3, ptr @.str.6 }, %struct.anon { i32 -4, ptr @.str.7 }, %struct.anon { i32 -5, ptr @.str.8 }, %struct.anon { i32 -6, ptr @.str.9 }, %struct.anon { i32 -10000, ptr @.str.10 }], align 16
@.str.1 = private unnamed_addr constant [1 x i8] c"\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"stream end\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"need dictionary\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"file error\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"stream error\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"data error\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"buf error\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"version error\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"parameter error\00", align 1
@__func__.tdefl_compress_buffer = private unnamed_addr constant [22 x i8] c"tdefl_compress_buffer\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"example1.c\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"d->m_pPut_buf_func\00", align 1
@s_tdefl_num_probes = internal constant [11 x i32] [i32 0, i32 1, i32 6, i32 32, i32 16, i32 32, i32 128, i32 256, i32 512, i32 768, i32 1500], align 16
@tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes = internal constant [11 x i32] [i32 0, i32 1, i32 6, i32 32, i32 16, i32 32, i32 128, i32 256, i32 512, i32 768, i32 1500], align 16
@tdefl_write_image_to_png_file_in_memory_ex.chans = internal constant [5 x i8] c"\00\00\04\02\06", align 1
@__const.tdefl_write_image_to_png_file_in_memory_ex.pnghdr = private unnamed_addr constant [41 x i8] c"\89PNG\0D\0A\1A\0A\00\00\00\0DIHDR\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\00IDAT", align 16
@.str.13 = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00IEND\AEB`\82\00", align 1
@tinfl_decompress.s_length_base = internal constant [31 x i16] [i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 13, i16 15, i16 17, i16 19, i16 23, i16 27, i16 31, i16 35, i16 43, i16 51, i16 59, i16 67, i16 83, i16 99, i16 115, i16 131, i16 163, i16 195, i16 227, i16 258, i16 0, i16 0], align 16
@tinfl_decompress.s_length_extra = internal constant [31 x i8] c"\00\00\00\00\00\00\00\00\01\01\01\01\02\02\02\02\03\03\03\03\04\04\04\04\05\05\05\05\00\00\00", align 16
@tinfl_decompress.s_dist_base = internal constant [32 x i16] [i16 1, i16 2, i16 3, i16 4, i16 5, i16 7, i16 9, i16 13, i16 17, i16 25, i16 33, i16 49, i16 65, i16 97, i16 129, i16 193, i16 257, i16 385, i16 513, i16 769, i16 1025, i16 1537, i16 2049, i16 3073, i16 4097, i16 6145, i16 8193, i16 12289, i16 16385, i16 24577, i16 0, i16 0], align 16
@tinfl_decompress.s_dist_extra = internal constant [32 x i8] c"\00\00\00\00\01\01\02\02\03\03\04\04\05\05\06\06\07\07\08\08\09\09\0A\0A\0B\0B\0C\0C\0D\0D\00\00", align 16
@tinfl_decompress.s_length_dezigzag = internal constant [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F", align 16
@tinfl_decompress.s_min_table_sizes = internal constant [3 x i16] [i16 257, i16 1, i16 4], align 2
@.str.14 = private unnamed_addr constant [4 x i8] c"\05\05\04\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"\02\03\07\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"\03\03\0B\00", align 1
@__func__.tinfl_decompress = private unnamed_addr constant [17 x i8] c"tinfl_decompress\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"!num_bits\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"w+b\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"r+b\00", align 1
@__func__.mz_zip_writer_add_mem_ex_v2 = private unnamed_addr constant [28 x i8] c"mz_zip_writer_add_mem_ex_v2\00", align 1
@.str.22 = private unnamed_addr constant [66 x i8] c"(local_dir_header_ofs & (pZip->m_file_offset_alignment - 1)) == 0\00", align 1
@.str.23 = private unnamed_addr constant [44 x i8] c"bit_flags & MZ_ZIP_LDH_BIT_FLAG_HAS_LOCATOR\00", align 1
@__func__.mz_zip_writer_add_read_buf_callback = private unnamed_addr constant [36 x i8] c"mz_zip_writer_add_read_buf_callback\00", align 1
@.str.24 = private unnamed_addr constant [66 x i8] c"(cur_archive_file_ofs & (pZip->m_file_offset_alignment - 1)) == 0\00", align 1
@__func__.mz_zip_writer_add_from_zip_reader = private unnamed_addr constant [34 x i8] c"mz_zip_writer_add_from_zip_reader\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"no error\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"undefined error\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"too many files\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"file too large\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"unsupported method\00", align 1
@.str.30 = private unnamed_addr constant [23 x i8] c"unsupported encryption\00", align 1
@.str.31 = private unnamed_addr constant [20 x i8] c"unsupported feature\00", align 1
@.str.32 = private unnamed_addr constant [33 x i8] c"failed finding central directory\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"not a ZIP archive\00", align 1
@.str.34 = private unnamed_addr constant [39 x i8] c"invalid header or archive is corrupted\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"unsupported multidisk archive\00", align 1
@.str.36 = private unnamed_addr constant [45 x i8] c"decompression failed or archive is corrupted\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"compression failed\00", align 1
@.str.38 = private unnamed_addr constant [29 x i8] c"unexpected decompressed size\00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c"CRC-32 check failed\00", align 1
@.str.40 = private unnamed_addr constant [35 x i8] c"unsupported central directory size\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"allocation failed\00", align 1
@.str.42 = private unnamed_addr constant [17 x i8] c"file open failed\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"file create failed\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"file write failed\00", align 1
@.str.45 = private unnamed_addr constant [17 x i8] c"file read failed\00", align 1
@.str.46 = private unnamed_addr constant [18 x i8] c"file close failed\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"file seek failed\00", align 1
@.str.48 = private unnamed_addr constant [17 x i8] c"file stat failed\00", align 1
@.str.49 = private unnamed_addr constant [18 x i8] c"invalid parameter\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"invalid filename\00", align 1
@.str.51 = private unnamed_addr constant [17 x i8] c"buffer too small\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"internal error\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"file not found\00", align 1
@.str.54 = private unnamed_addr constant [21 x i8] c"archive is too large\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"validation failed\00", align 1
@.str.56 = private unnamed_addr constant [22 x i8] c"write callback failed\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"total errors\00", align 1
@.str.58 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@s_pStr = internal global ptr @.str.79, align 8
@.str.59 = private unnamed_addr constant [21 x i8] c"miniz.c version: %s\0A\00", align 1
@.str.60 = private unnamed_addr constant [16 x i8] c"Out of memory!\0A\00", align 1
@.str.61 = private unnamed_addr constant [20 x i8] c"compress() failed!\0A\00", align 1
@.str.62 = private unnamed_addr constant [32 x i8] c"Compressed from %u to %u bytes\0A\00", align 1
@.str.63 = private unnamed_addr constant [48 x i8] c"Simple fuzzy test: step %u total_succeeded: %u\0A\00", align 1
@.str.64 = private unnamed_addr constant [20 x i8] c"uncompress failed!\0A\00", align 1
@.str.65 = private unnamed_addr constant [34 x i8] c"Decompressed from %u to %u bytes\0A\00", align 1
@.str.66 = private unnamed_addr constant [23 x i8] c"Decompression failed!\0A\00", align 1
@.str.67 = private unnamed_addr constant [10 x i8] c"Success.\0A\00", align 1
@__func__.tdefl_compress_normal = private unnamed_addr constant [22 x i8] c"tdefl_compress_normal\00", align 1
@.str.68 = private unnamed_addr constant [35 x i8] c"d->m_lookahead_size >= len_to_move\00", align 1
@__func__.tdefl_find_match = private unnamed_addr constant [17 x i8] c"tdefl_find_match\00", align 1
@.str.69 = private unnamed_addr constant [37 x i8] c"max_match_len <= TDEFL_MAX_MATCH_LEN\00", align 1
@__func__.tdefl_record_match = private unnamed_addr constant [19 x i8] c"tdefl_record_match\00", align 1
@.str.70 = private unnamed_addr constant [94 x i8] c"(match_len >= TDEFL_MIN_MATCH_LEN) && (match_dist >= 1) && (match_dist <= TDEFL_LZ_DICT_SIZE)\00", align 1
@s_tdefl_small_dist_sym = internal constant [512 x i8] c"\00\01\02\03\04\04\05\05\06\06\06\06\07\07\07\07\08\08\08\08\08\08\08\08\09\09\09\09\09\09\09\09\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11", align 16
@s_tdefl_large_dist_sym = internal constant [128 x i8] c"\00\00\12\13\14\14\15\15\16\16\16\16\17\17\17\17\18\18\18\18\18\18\18\18\19\19\19\19\19\19\19\19\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D", align 16
@s_tdefl_len_sym = internal constant [256 x i16] [i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 265, i16 266, i16 266, i16 267, i16 267, i16 268, i16 268, i16 269, i16 269, i16 269, i16 269, i16 270, i16 270, i16 270, i16 270, i16 271, i16 271, i16 271, i16 271, i16 272, i16 272, i16 272, i16 272, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 285], align 16
@__func__.tdefl_flush_block = private unnamed_addr constant [18 x i8] c"tdefl_flush_block\00", align 1
@.str.71 = private unnamed_addr constant [29 x i8] c"!d->m_output_flush_remaining\00", align 1
@.str.72 = private unnamed_addr constant [27 x i8] c"bits <= ((1U << len) - 1U)\00", align 1
@.str.73 = private unnamed_addr constant [40 x i8] c"d->m_pOutput_buf < d->m_pOutput_buf_end\00", align 1
@__func__.tdefl_start_static_block = private unnamed_addr constant [25 x i8] c"tdefl_start_static_block\00", align 1
@__func__.tdefl_start_dynamic_block = private unnamed_addr constant [26 x i8] c"tdefl_start_dynamic_block\00", align 1
@s_tdefl_packed_code_size_syms_swizzle = internal constant [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F", align 16
@.str.74 = private unnamed_addr constant [32 x i8] c"code < TDEFL_MAX_HUFF_SYMBOLS_2\00", align 1
@__func__.tdefl_compress_lz_codes = private unnamed_addr constant [24 x i8] c"tdefl_compress_lz_codes\00", align 1
@.str.75 = private unnamed_addr constant [52 x i8] c"d->m_huff_code_sizes[0][s_tdefl_len_sym[match_len]]\00", align 1
@mz_bitmasks = internal constant [17 x i32] [i32 0, i32 1, i32 3, i32 7, i32 15, i32 31, i32 63, i32 127, i32 255, i32 511, i32 1023, i32 2047, i32 4095, i32 8191, i32 16383, i32 32767, i32 65535], align 16
@s_tdefl_len_extra = internal constant [256 x i8] calign 16
@s_tdefl_small_dist_extra = internal constant [512 x i8] calign 16
@s_tdefl_large_dist_extra = internal constant [128 x i8] c"\00\00\08\08\09\09\09\09\0A\0A\0A\0A\0A\0A\0A\0A\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D", align 16
@.str.76 = private unnamed_addr constant [29 x i8] c"d->m_huff_code_sizes[1][sym]\00", align 1
@.str.77 = private unnamed_addr constant [29 x i8] c"d->m_huff_code_sizes[0][lit]\00", align 1
@__func__.mz_zip_array_ensure_capacity = private unnamed_addr constant [29 x i8] c"mz_zip_array_ensure_capacity\00", align 1
@.str.78 = private unnamed_addr constant [23 x i8] c"pArray->m_element_size\00", align 1
@.str.79 = private unnamed_addr constant [491 x i8] c"Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.\00", align 1

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @mz_adler32(i64 noundef %0, ptr noundef %1, i64 noundef %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  store i64 %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store i64 %2, ptr %7, align 8
  %12 = load i64, ptr %5, align 8
  %13 = and i64 %12, 65535
  %14 = trunc i64 %13 to i32
  store i32 %14, ptr %9, align 4
  %15 = load i64, ptr %5, align 8
  %16 = lshr i64 %15, 16
  %17 = trunc i64 %16 to i32
  store i32 %17, ptr %10, align 4
  %18 = load i64, ptr %7, align 8
  %19 = urem i64 %18, 5552
  store i64 %19, ptr %11, align 8
  %20 = load ptr, ptr %6, align 8
  %21 = icmp ne ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %3
  store i64 1, ptr %4, align 8
  br label %145

23:                                               ; preds = %3
  br label %24

24:                                               ; preds = %131, %23
  %25 = load i64, ptr %7, align 8
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %139

27:                                               ; preds = %24
  store i32 0, ptr %8, align 4
  br label %28

28:                                               ; preds = %107, %27
  %29 = load i32, ptr %8, align 4
  %30 = add i32 %29, 7
  %31 = zext i32 %30 to i64
  %32 = load i64, ptr %11, align 8
  %33 = icmp ult i64 %31, %32
  br i1 %33, label %34, label %112

34:                                               ; preds = %28
  %35 = load ptr, ptr %6, align 8
  %36 = getelementptr inbounds i8, ptr %35, i64 0
  %37 = load i8, ptr %36, align 1
  %38 = zext i8 %37 to i32
  %39 = load i32, ptr %9, align 4
  %40 = add i32 %39, %38
  store i32 %40, ptr %9, align 4
  %41 = load i32, ptr %9, align 4
  %42 = load i32, ptr %10, align 4
  %43 = add i32 %42, %41
  store i32 %43, ptr %10, align 4
  %44 = load ptr, ptr %6, align 8
  %45 = getelementptr inbounds i8, ptr %44, i64 1
  %46 = load i8, ptr %45, align 1
  %47 = zext i8 %46 to i32
  %48 = load i32, ptr %9, align 4
  %49 = add i32 %48, %47
  store i32 %49, ptr %9, align 4
  %50 = load i32, ptr %9, align 4
  %51 = load i32, ptr %10, align 4
  %52 = add i32 %51, %50
  store i32 %52, ptr %10, align 4
  %53 = load ptr, ptr %6, align 8
  %54 = getelementptr inbounds i8, ptr %53, i64 2
  %55 = load i8, ptr %54, align 1
  %56 = zext i8 %55 to i32
  %57 = load i32, ptr %9, align 4
  %58 = add i32 %57, %56
  store i32 %58, ptr %9, align 4
  %59 = load i32, ptr %9, align 4
  %60 = load i32, ptr %10, align 4
  %61 = add i32 %60, %59
  store i32 %61, ptr %10, align 4
  %62 = load ptr, ptr %6, align 8
  %63 = getelementptr inbounds i8, ptr %62, i64 3
  %64 = load i8, ptr %63, align 1
  %65 = zext i8 %64 to i32
  %66 = load i32, ptr %9, align 4
  %67 = add i32 %66, %65
  store i32 %67, ptr %9, align 4
  %68 = load i32, ptr %9, align 4
  %69 = load i32, ptr %10, align 4
  %70 = add i32 %69, %68
  store i32 %70, ptr %10, align 4
  %71 = load ptr, ptr %6, align 8
  %72 = getelementptr inbounds i8, ptr %71, i64 4
  %73 = load i8, ptr %72, align 1
  %74 = zext i8 %73 to i32
  %75 = load i32, ptr %9, align 4
  %76 = add i32 %75, %74
  store i32 %76, ptr %9, align 4
  %77 = load i32, ptr %9, align 4
  %78 = load i32, ptr %10, align 4
  %79 = add i32 %78, %77
  store i32 %79, ptr %10, align 4
  %80 = load ptr, ptr %6, align 8
  %81 = getelementptr inbounds i8, ptr %80, i64 5
  %82 = load i8, ptr %81, align 1
  %83 = zext i8 %82 to i32
  %84 = load i32, ptr %9, align 4
  %85 = add i32 %84, %83
  store i32 %85, ptr %9, align 4
  %86 = load i32, ptr %9, align 4
  %87 = load i32, ptr %10, align 4
  %88 = add i32 %87, %86
  store i32 %88, ptr %10, align 4
  %89 = load ptr, ptr %6, align 8
  %90 = getelementptr inbounds i8, ptr %89, i64 6
  %91 = load i8, ptr %90, align 1
  %92 = zext i8 %91 to i32
  %93 = load i32, ptr %9, align 4
  %94 = add i32 %93, %92
  store i32 %94, ptr %9, align 4
  %95 = load i32, ptr %9, align 4
  %96 = load i32, ptr %10, align 4
  %97 = add i32 %96, %95
  store i32 %97, ptr %10, align 4
  %98 = load ptr, ptr %6, align 8
  %99 = getelementptr inbounds i8, ptr %98, i64 7
  %100 = load i8, ptr %99, align 1
  %101 = zext i8 %100 to i32
  %102 = load i32, ptr %9, align 4
  %103 = add i32 %102, %101
  store i32 %103, ptr %9, align 4
  %104 = load i32, ptr %9, align 4
  %105 = load i32, ptr %10, align 4
  %106 = add i32 %105, %104
  store i32 %106, ptr %10, align 4
  br label %107

107:                                              ; preds = %34
  %108 = load i32, ptr %8, align 4
  %109 = add i32 %108, 8
  store i32 %109, ptr %8, align 4
  %110 = load ptr, ptr %6, align 8
  %111 = getelementptr inbounds i8, ptr %110, i64 8
  store ptr %111, ptr %6, align 8
  br label %28, !llvm.loop !5

112:                                              ; preds = %28
  br label %113

113:                                              ; preds = %128, %112
  %114 = load i32, ptr %8, align 4
  %115 = zext i32 %114 to i64
  %116 = load i64, ptr %11, align 8
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %118, label %131

118:                                              ; preds = %113
  %119 = load ptr, ptr %6, align 8
  %120 = getelementptr inbounds i8, ptr %119, i32 1
  store ptr %120, ptr %6, align 8
  %121 = load i8, ptr %119, align 1
  %122 = zext i8 %121 to i32
  %123 = load i32, ptr %9, align 4
  %124 = add i32 %123, %122
  store i32 %124, ptr %9, align 4
  %125 = load i32, ptr %9, align 4
  %126 = load i32, ptr %10, align 4
  %127 = add i32 %126, %125
  store i32 %127, ptr %10, align 4
  br label %128

128:                                              ; preds = %118
  %129 = load i32, ptr %8, align 4
  %130 = add i32 %129, 1
  store i32 %130, ptr %8, align 4
  br label %113, !llvm.loop !7

131:                                              ; preds = %113
  %132 = load i32, ptr %9, align 4
  %133 = urem i32 %132, 65521
  store i32 %133, ptr %9, align 4
  %134 = load i32, ptr %10, align 4
  %135 = urem i32 %134, 65521
  store i32 %135, ptr %10, align 4
  %136 = load i64, ptr %11, align 8
  %137 = load i64, ptr %7, align 8
  %138 = sub i64 %137, %136
  store i64 %138, ptr %7, align 8
  store i64 5552, ptr %11, align 8
  br label %24, !llvm.loop !8

139:                                              ; preds = %24
  %140 = load i32, ptr %10, align 4
  %141 = shl i32 %140, 16
  %142 = load i32, ptr %9, align 4
  %143 = add i32 %141, %142
  %144 = zext i32 %143 to i64
  store i64 %144, ptr %4, align 8
  br label %145

145:                                              ; preds = %139, %22
  %146 = load i64, ptr %4, align 8
  ret i64 %146
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @mz_crc32(i64 noundef %0, ptr noundef %1, i64 noundef %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  store i64 %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  store i64 %2, ptr %6, align 8
  %9 = load i64, ptr %4, align 8
  %10 = trunc i64 %9 to i32
  %11 = xor i32 %10, -1
  store i32 %11, ptr %7, align 4
  %12 = load ptr, ptr %5, align 8
  store ptr %12, ptr %8, align 8
  br label %13

13:                                               ; preds = %16, %3
  %14 = load i64, ptr %6, align 8
  %15 = icmp uge i64 %14, 4
  br i1 %15, label %16, label %73

16:                                               ; preds = %13
  %17 = load i32, ptr %7, align 4
  %18 = lshr i32 %17, 8
  %19 = load i32, ptr %7, align 4
  %20 = load ptr, ptr %8, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 0
  %22 = load i8, ptr %21, align 1
  %23 = zext i8 %22 to i32
  %24 = xor i32 %19, %23
  %25 = and i32 %24, 255
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %26
  %28 = load i32, ptr %27, align 4
  %29 = xor i32 %18, %28
  store i32 %29, ptr %7, align 4
  %30 = load i32, ptr %7, align 4
  %31 = lshr i32 %30, 8
  %32 = load i32, ptr %7, align 4
  %33 = load ptr, ptr %8, align 8
  %34 = getelementptr inbounds i8, ptr %33, i64 1
  %35 = load i8, ptr %34, align 1
  %36 = zext i8 %35 to i32
  %37 = xor i32 %32, %36
  %38 = and i32 %37, 255
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %39
  %41 = load i32, ptr %40, align 4
  %42 = xor i32 %31, %41
  store i32 %42, ptr %7, align 4
  %43 = load i32, ptr %7, align 4
  %44 = lshr i32 %43, 8
  %45 = load i32, ptr %7, align 4
  %46 = load ptr, ptr %8, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 2
  %48 = load i8, ptr %47, align 1
  %49 = zext i8 %48 to i32
  %50 = xor i32 %45, %49
  %51 = and i32 %50, 255
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %52
  %54 = load i32, ptr %53, align 4
  %55 = xor i32 %44, %54
  store i32 %55, ptr %7, align 4
  %56 = load i32, ptr %7, align 4
  %57 = lshr i32 %56, 8
  %58 = load i32, ptr %7, align 4
  %59 = load ptr, ptr %8, align 8
  %60 = getelementptr inbounds i8, ptr %59, i64 3
  %61 = load i8, ptr %60, align 1
  %62 = zext i8 %61 to i32
  %63 = xor i32 %58, %62
  %64 = and i32 %63, 255
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %65
  %67 = load i32, ptr %66, align 4
  %68 = xor i32 %57, %67
  store i32 %68, ptr %7, align 4
  %69 = load ptr, ptr %8, align 8
  %70 = getelementptr inbounds i8, ptr %69, i64 4
  store ptr %70, ptr %8, align 8
  %71 = load i64, ptr %6, align 8
  %72 = sub i64 %71, 4
  store i64 %72, ptr %6, align 8
  br label %13, !llvm.loop !9

73:                                               ; preds = %13
  br label %74

74:                                               ; preds = %77, %73
  %75 = load i64, ptr %6, align 8
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %95

77:                                               ; preds = %74
  %78 = load i32, ptr %7, align 4
  %79 = lshr i32 %78, 8
  %80 = load i32, ptr %7, align 4
  %81 = load ptr, ptr %8, align 8
  %82 = getelementptr inbounds i8, ptr %81, i64 0
  %83 = load i8, ptr %82, align 1
  %84 = zext i8 %83 to i32
  %85 = xor i32 %80, %84
  %86 = and i32 %85, 255
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %87
  %89 = load i32, ptr %88, align 4
  %90 = xor i32 %79, %89
  store i32 %90, ptr %7, align 4
  %91 = load ptr, ptr %8, align 8
  %92 = getelementptr inbounds i8, ptr %91, i32 1
  store ptr %92, ptr %8, align 8
  %93 = load i64, ptr %6, align 8
  %94 = add i64 %93, -1
  store i64 %94, ptr %6, align 8
  br label %74, !llvm.loop !10

95:                                               ; preds = %74
  %96 = load i32, ptr %7, align 4
  %97 = xor i32 %96, -1
  %98 = zext i32 %97 to i64
  ret i64 %98
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @mz_free(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  call void @free(ptr noundef %3)
  ret void
}

declare void @free(ptr noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @miniz_def_alloc_func(ptr noundef %0, i64 noundef %1, i64 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store ptr %0, ptr %4, align 8
  store i64 %1, ptr %5, align 8
  store i64 %2, ptr %6, align 8
  %7 = load ptr, ptr %4, align 8
  %8 = load i64, ptr %5, align 8
  %9 = load i64, ptr %6, align 8
  %10 = load i64, ptr %5, align 8
  %11 = load i64, ptr %6, align 8
  %12 = mul i64 %10, %11
  %13 = call ptr @malloc(i64 noundef %12) #9
  ret ptr %13
}

; Function Attrs: allocsize(0)
declare ptr @malloc(i64 noundef) #2

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @miniz_def_free_func(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load ptr, ptr %4, align 8
  %7 = load ptr, ptr %4, align 8
  call void @free(ptr noundef %7)
  ret void
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @miniz_def_realloc_func(ptr noundef %0, ptr noundef %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store i64 %2, ptr %7, align 8
  store i64 %3, ptr %8, align 8
  %9 = load ptr, ptr %5, align 8
  %10 = load ptr, ptr %6, align 8
  %11 = load i64, ptr %7, align 8
  %12 = load i64, ptr %8, align 8
  %13 = load ptr, ptr %6, align 8
  %14 = load i64, ptr %7, align 8
  %15 = load i64, ptr %8, align 8
  %16 = mul i64 %14, %15
  %17 = call ptr @realloc(ptr noundef %13, i64 noundef %16) #10
  ret ptr %17
}

; Function Attrs: allocsize(1)
declare ptr @realloc(ptr noundef, i64 noundef) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @mz_version() #0 {
  ret ptr @.str
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_deflateInit(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store i32 %1, ptr %4, align 4
  %5 = load ptr, ptr %3, align 8
  %6 = load i32, ptr %4, align 4
  %7 = call i32 @mz_deflateInit2(ptr noundef %5, i32 noundef %6, i32 noundef 8, i32 noundef 15, i32 noundef 9, i32 noundef 0)
  ret i32 %7
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_deflateInit2(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  store ptr %0, ptr %8, align 8
  store i32 %1, ptr %9, align 4
  store i32 %2, ptr %10, align 4
  store i32 %3, ptr %11, align 4
  store i32 %4, ptr %12, align 4
  store i32 %5, ptr %13, align 4
  %16 = load i32, ptr %9, align 4
  %17 = load i32, ptr %11, align 4
  %18 = load i32, ptr %13, align 4
  %19 = call i32 @tdefl_create_comp_flags_from_zip_params(i32 noundef %16, i32 noundef %17, i32 noundef %18)
  %20 = or i32 8192, %19
  store i32 %20, ptr %15, align 4
  %21 = load ptr, ptr %8, align 8
  %22 = icmp ne ptr %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %6
  store i32 -2, ptr %7, align 4
  br label %92

24:                                               ; preds = %6
  %25 = load i32, ptr %10, align 4
  %26 = icmp ne i32 %25, 8
  br i1 %26, label %40, label %27

27:                                               ; preds = %24
  %28 = load i32, ptr %12, align 4
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = load i32, ptr %12, align 4
  %32 = icmp sgt i32 %31, 9
  br i1 %32, label %40, label %33

33:                                               ; preds = %30
  %34 = load i32, ptr %11, align 4
  %35 = icmp ne i32 %34, 15
  br i1 %35, label %36, label %41

36:                                               ; preds = %33
  %37 = load i32, ptr %11, align 4
  %38 = sub nsw i32 0, %37
  %39 = icmp ne i32 %38, 15
  br i1 %39, label %40, label %41

40:                                               ; preds = %36, %30, %27, %24
  store i32 -10000, ptr %7, align 4
  br label %92

41:                                               ; preds = %36, %33
  %42 = load ptr, ptr %8, align 8
  %43 = getelementptr inbounds %struct.mz_stream_s, ptr %42, i32 0, i32 11
  store i32 0, ptr %43, align 8
  %44 = load ptr, ptr %8, align 8
  %45 = getelementptr inbounds %struct.mz_stream_s, ptr %44, i32 0, i32 12
  store i64 1, ptr %45, align 8
  %46 = load ptr, ptr %8, align 8
  %47 = getelementptr inbounds %struct.mz_stream_s, ptr %46, i32 0, i32 6
  store ptr null, ptr %47, align 8
  %48 = load ptr, ptr %8, align 8
  %49 = getelementptr inbounds %struct.mz_stream_s, ptr %48, i32 0, i32 13
  store i64 0, ptr %49, align 8
  %50 = load ptr, ptr %8, align 8
  %51 = getelementptr inbounds %struct.mz_stream_s, ptr %50, i32 0, i32 2
  store i64 0, ptr %51, align 8
  %52 = load ptr, ptr %8, align 8
  %53 = getelementptr inbounds %struct.mz_stream_s, ptr %52, i32 0, i32 5
  store i64 0, ptr %53, align 8
  %54 = load ptr, ptr %8, align 8
  %55 = getelementptr inbounds %struct.mz_stream_s, ptr %54, i32 0, i32 8
  %56 = load ptr, ptr %55, align 8
  %57 = icmp ne ptr %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %41
  %59 = load ptr, ptr %8, align 8
  %60 = getelementptr inbounds %struct.mz_stream_s, ptr %59, i32 0, i32 8
  store ptr @miniz_def_alloc_func, ptr %60, align 8
  br label %61

61:                                               ; preds = %58, %41
  %62 = load ptr, ptr %8, align 8
  %63 = getelementptr inbounds %struct.mz_stream_s, ptr %62, i32 0, i32 9
  %64 = load ptr, ptr %63, align 8
  %65 = icmp ne ptr %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %61
  %67 = load ptr, ptr %8, align 8
  %68 = getelementptr inbounds %struct.mz_stream_s, ptr %67, i32 0, i32 9
  store ptr @miniz_def_free_func, ptr %68, align 8
  br label %69

69:                                               ; preds = %66, %61
  %70 = load ptr, ptr %8, align 8
  %71 = getelementptr inbounds %struct.mz_stream_s, ptr %70, i32 0, i32 8
  %72 = load ptr, ptr %71, align 8
  %73 = load ptr, ptr %8, align 8
  %74 = getelementptr inbounds %struct.mz_stream_s, ptr %73, i32 0, i32 10
  %75 = load ptr, ptr %74, align 8
  %76 = call ptr %72(ptr noundef %75, i64 noundef 1, i64 noundef 319352)
  store ptr %76, ptr %14, align 8
  %77 = load ptr, ptr %14, align 8
  %78 = icmp ne ptr %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %69
  store i32 -4, ptr %7, align 4
  br label %92

80:                                               ; preds = %69
  %81 = load ptr, ptr %14, align 8
  %82 = load ptr, ptr %8, align 8
  %83 = getelementptr inbounds %struct.mz_stream_s, ptr %82, i32 0, i32 7
  store ptr %81, ptr %83, align 8
  %84 = load ptr, ptr %14, align 8
  %85 = load i32, ptr %15, align 4
  %86 = call i32 @tdefl_init(ptr noundef %84, ptr noundef null, ptr noundef null, i32 noundef %85)
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %80
  %89 = load ptr, ptr %8, align 8
  %90 = call i32 @mz_deflateEnd(ptr noundef %89)
  store i32 -10000, ptr %7, align 4
  br label %92

91:                                               ; preds = %80
  store i32 0, ptr %7, align 4
  br label %92

92:                                               ; preds = %91, %88, %79, %40, %23
  %93 = load i32, ptr %7, align 4
  ret i32 %93
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @tdefl_create_comp_flags_from_zip_params(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, ptr %4, align 4
  store i32 %1, ptr %5, align 4
  store i32 %2, ptr %6, align 4
  %8 = load i32, ptr %4, align 4
  %9 = icmp sge i32 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = load i32, ptr %4, align 4
  %12 = icmp slt i32 10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %10
  br label %16

14:                                               ; preds = %10
  %15 = load i32, ptr %4, align 4
  br label %16

16:                                               ; preds = %14, %13
  %17 = phi i32 [ 10, %13 ], [ %15, %14 ]
  br label %19

18:                                               ; preds = %3
  br label %19

19:                                               ; preds = %18, %16
  %20 = phi i32 [ %17, %16 ], [ 6, %18 ]
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [11 x i32], ptr @s_tdefl_num_probes, i64 0, i64 %21
  %23 = load i32, ptr %22, align 4
  %24 = load i32, ptr %4, align 4
  %25 = icmp sle i32 %24, 3
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i32 16384, i32 0
  %28 = or i32 %23, %27
  store i32 %28, ptr %7, align 4
  %29 = load i32, ptr %5, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %19
  %32 = load i32, ptr %7, align 4
  %33 = or i32 %32, 4096
  store i32 %33, ptr %7, align 4
  br label %34

34:                                               ; preds = %31, %19
  %35 = load i32, ptr %4, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = load i32, ptr %7, align 4
  %39 = or i32 %38, 524288
  store i32 %39, ptr %7, align 4
  br label %68

40:                                               ; preds = %34
  %41 = load i32, ptr %6, align 4
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  %44 = load i32, ptr %7, align 4
  %45 = or i32 %44, 131072
  store i32 %45, ptr %7, align 4
  br label %67

46:                                               ; preds = %40
  %47 = load i32, ptr %6, align 4
  %48 = icmp eq i32 %47, 2
  br i1 %48, label %49, label %52

49:                                               ; preds = %46
  %50 = load i32, ptr %7, align 4
  %51 = and i32 %50, -4096
  store i32 %51, ptr %7, align 4
  br label %66

52:                                               ; preds = %46
  %53 = load i32, ptr %6, align 4
  %54 = icmp eq i32 %53, 4
  br i1 %54, label %55, label %58

55:                                               ; preds = %52
  %56 = load i32, ptr %7, align 4
  %57 = or i32 %56, 262144
  store i32 %57, ptr %7, align 4
  br label %65

58:                                               ; preds = %52
  %59 = load i32, ptr %6, align 4
  %60 = icmp eq i32 %59, 3
  br i1 %60, label %61, label %64

61:                                               ; preds = %58
  %62 = load i32, ptr %7, align 4
  %63 = or i32 %62, 65536
  store i32 %63, ptr %7, align 4
  br label %64

64:                                               ; preds = %61, %58
  br label %65

65:                                               ; preds = %64, %55
  br label %66

66:                                               ; preds = %65, %49
  br label %67

67:                                               ; preds = %66, %43
  br label %68

68:                                               ; preds = %67, %37
  %69 = load i32, ptr %7, align 4
  ret i32 %69
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @tdefl_init(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store ptr %2, ptr %7, align 8
  store i32 %3, ptr %8, align 4
  %9 = load ptr, ptr %6, align 8
  %10 = load ptr, ptr %5, align 8
  %11 = getelementptr inbounds %struct.tdefl_compressor, ptr %10, i32 0, i32 0
  store ptr %9, ptr %11, align 8
  %12 = load ptr, ptr %7, align 8
  %13 = load ptr, ptr %5, align 8
  %14 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i32 0, i32 1
  store ptr %12, ptr %14, align 8
  %15 = load i32, ptr %8, align 4
  %16 = load ptr, ptr %5, align 8
  %17 = getelementptr inbounds %struct.tdefl_compressor, ptr %16, i32 0, i32 2
  store i32 %15, ptr %17, align 8
  %18 = load i32, ptr %8, align 4
  %19 = and i32 %18, 4095
  %20 = add nsw i32 %19, 2
  %21 = sdiv i32 %20, 3
  %22 = add nsw i32 1, %21
  %23 = load ptr, ptr %5, align 8
  %24 = getelementptr inbounds %struct.tdefl_compressor, ptr %23, i32 0, i32 3
  %25 = getelementptr inbounds [2 x i32], ptr %24, i64 0, i64 0
  store i32 %22, ptr %25, align 4
  %26 = load i32, ptr %8, align 4
  %27 = and i32 %26, 16384
  %28 = icmp ne i32 %27, 0
  %29 = zext i1 %28 to i32
  %30 = load ptr, ptr %5, align 8
  %31 = getelementptr inbounds %struct.tdefl_compressor, ptr %30, i32 0, i32 4
  store i32 %29, ptr %31, align 4
  %32 = load i32, ptr %8, align 4
  %33 = and i32 %32, 4095
  %34 = ashr i32 %33, 2
  %35 = add nsw i32 %34, 2
  %36 = sdiv i32 %35, 3
  %37 = add nsw i32 1, %36
  %38 = load ptr, ptr %5, align 8
  %39 = getelementptr inbounds %struct.tdefl_compressor, ptr %38, i32 0, i32 3
  %40 = getelementptr inbounds [2 x i32], ptr %39, i64 0, i64 1
  store i32 %37, ptr %40, align 4
  %41 = load i32, ptr %8, align 4
  %42 = and i32 %41, 32768
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %53, label %44

44:                                               ; preds = %4
  %45 = load ptr, ptr %5, align 8
  %46 = getelementptr inbounds %struct.tdefl_compressor, ptr %45, i32 0, i32 41
  %47 = getelementptr inbounds [32768 x i16], ptr %46, i64 0, i64 0
  %48 = load ptr, ptr %5, align 8
  %49 = getelementptr inbounds %struct.tdefl_compressor, ptr %48, i32 0, i32 41
  %50 = getelementptr inbounds [32768 x i16], ptr %49, i64 0, i64 0
  %51 = call i64 @llvm.objectsize.i64.p0(ptr %50, i1 false, i1 true, i1 false)
  %52 = call ptr @__memset_chk(ptr noundef %47, i32 noundef 0, i64 noundef 65536, i64 noundef %51) #11
  br label %53

53:                                               ; preds = %44, %4
  %54 = load ptr, ptr %5, align 8
  %55 = getelementptr inbounds %struct.tdefl_compressor, ptr %54, i32 0, i32 16
  store i32 0, ptr %55, align 4
  %56 = load ptr, ptr %5, align 8
  %57 = getelementptr inbounds %struct.tdefl_compressor, ptr %56, i32 0, i32 15
  store i32 0, ptr %57, align 8
  %58 = load ptr, ptr %5, align 8
  %59 = getelementptr inbounds %struct.tdefl_compressor, ptr %58, i32 0, i32 14
  store i32 0, ptr %59, align 4
  %60 = load ptr, ptr %5, align 8
  %61 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i32 0, i32 8
  store i32 0, ptr %61, align 4
  %62 = load ptr, ptr %5, align 8
  %63 = getelementptr inbounds %struct.tdefl_compressor, ptr %62, i32 0, i32 7
  store i32 0, ptr %63, align 8
  %64 = load ptr, ptr %5, align 8
  %65 = getelementptr inbounds %struct.tdefl_compressor, ptr %64, i32 0, i32 6
  store i32 0, ptr %65, align 4
  %66 = load ptr, ptr %5, align 8
  %67 = getelementptr inbounds %struct.tdefl_compressor, ptr %66, i32 0, i32 25
  store i32 0, ptr %67, align 8
  %68 = load ptr, ptr %5, align 8
  %69 = getelementptr inbounds %struct.tdefl_compressor, ptr %68, i32 0, i32 17
  store i32 0, ptr %69, align 8
  %70 = load ptr, ptr %5, align 8
  %71 = getelementptr inbounds %struct.tdefl_compressor, ptr %70, i32 0, i32 24
  store i32 0, ptr %71, align 4
  %72 = load ptr, ptr %5, align 8
  %73 = getelementptr inbounds %struct.tdefl_compressor, ptr %72, i32 0, i32 23
  store i32 0, ptr %73, align 8
  %74 = load ptr, ptr %5, align 8
  %75 = getelementptr inbounds %struct.tdefl_compressor, ptr %74, i32 0, i32 22
  store i32 0, ptr %75, align 4
  %76 = load ptr, ptr %5, align 8
  %77 = getelementptr inbounds %struct.tdefl_compressor, ptr %76, i32 0, i32 21
  store i32 0, ptr %77, align 8
  %78 = load ptr, ptr %5, align 8
  %79 = getelementptr inbounds %struct.tdefl_compressor, ptr %78, i32 0, i32 39
  %80 = getelementptr inbounds [65536 x i8], ptr %79, i64 0, i64 0
  %81 = getelementptr inbounds i8, ptr %80, i64 1
  %82 = load ptr, ptr %5, align 8
  %83 = getelementptr inbounds %struct.tdefl_compressor, ptr %82, i32 0, i32 9
  store ptr %81, ptr %83, align 8
  %84 = load ptr, ptr %5, align 8
  %85 = getelementptr inbounds %struct.tdefl_compressor, ptr %84, i32 0, i32 39
  %86 = getelementptr inbounds [65536 x i8], ptr %85, i64 0, i64 0
  %87 = load ptr, ptr %5, align 8
  %88 = getelementptr inbounds %struct.tdefl_compressor, ptr %87, i32 0, i32 10
  store ptr %86, ptr %88, align 8
  %89 = load ptr, ptr %5, align 8
  %90 = getelementptr inbounds %struct.tdefl_compressor, ptr %89, i32 0, i32 10
  %91 = load ptr, ptr %90, align 8
  store i8 0, ptr %91, align 1
  %92 = load ptr, ptr %5, align 8
  %93 = getelementptr inbounds %struct.tdefl_compressor, ptr %92, i32 0, i32 13
  store i32 8, ptr %93, align 8
  %94 = load ptr, ptr %5, align 8
  %95 = getelementptr inbounds %struct.tdefl_compressor, ptr %94, i32 0, i32 42
  %96 = getelementptr inbounds [85196 x i8], ptr %95, i64 0, i64 0
  %97 = load ptr, ptr %5, align 8
  %98 = getelementptr inbounds %struct.tdefl_compressor, ptr %97, i32 0, i32 11
  store ptr %96, ptr %98, align 8
  %99 = load ptr, ptr %5, align 8
  %100 = getelementptr inbounds %struct.tdefl_compressor, ptr %99, i32 0, i32 42
  %101 = getelementptr inbounds [85196 x i8], ptr %100, i64 0, i64 0
  %102 = load ptr, ptr %5, align 8
  %103 = getelementptr inbounds %struct.tdefl_compressor, ptr %102, i32 0, i32 12
  store ptr %101, ptr %103, align 8
  %104 = load ptr, ptr %5, align 8
  %105 = getelementptr inbounds %struct.tdefl_compressor, ptr %104, i32 0, i32 26
  store i32 0, ptr %105, align 4
  %106 = load ptr, ptr %5, align 8
  %107 = getelementptr inbounds %struct.tdefl_compressor, ptr %106, i32 0, i32 20
  store i32 0, ptr %107, align 4
  %108 = load ptr, ptr %5, align 8
  %109 = getelementptr inbounds %struct.tdefl_compressor, ptr %108, i32 0, i32 19
  store i32 0, ptr %109, align 8
  %110 = load ptr, ptr %5, align 8
  %111 = getelementptr inbounds %struct.tdefl_compressor, ptr %110, i32 0, i32 18
  store i32 0, ptr %111, align 4
  %112 = load ptr, ptr %5, align 8
  %113 = getelementptr inbounds %struct.tdefl_compressor, ptr %112, i32 0, i32 5
  store i32 1, ptr %113, align 8
  %114 = load ptr, ptr %5, align 8
  %115 = getelementptr inbounds %struct.tdefl_compressor, ptr %114, i32 0, i32 27
  store ptr null, ptr %115, align 8
  %116 = load ptr, ptr %5, align 8
  %117 = getelementptr inbounds %struct.tdefl_compressor, ptr %116, i32 0, i32 28
  store ptr null, ptr %117, align 8
  %118 = load ptr, ptr %5, align 8
  %119 = getelementptr inbounds %struct.tdefl_compressor, ptr %118, i32 0, i32 29
  store ptr null, ptr %119, align 8
  %120 = load ptr, ptr %5, align 8
  %121 = getelementptr inbounds %struct.tdefl_compressor, ptr %120, i32 0, i32 30
  store ptr null, ptr %121, align 8
  %122 = load ptr, ptr %5, align 8
  %123 = getelementptr inbounds %struct.tdefl_compressor, ptr %122, i32 0, i32 31
  store i32 0, ptr %123, align 8
  %124 = load ptr, ptr %5, align 8
  %125 = getelementptr inbounds %struct.tdefl_compressor, ptr %124, i32 0, i32 32
  store ptr null, ptr %125, align 8
  %126 = load ptr, ptr %5, align 8
  %127 = getelementptr inbounds %struct.tdefl_compressor, ptr %126, i32 0, i32 33
  store i64 0, ptr %127, align 8
  %128 = load ptr, ptr %5, align 8
  %129 = getelementptr inbounds %struct.tdefl_compressor, ptr %128, i32 0, i32 34
  store i64 0, ptr %129, align 8
  %130 = load i32, ptr %8, align 4
  %131 = and i32 %130, 32768
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %142, label %133

133:                                              ; preds = %53
  %134 = load ptr, ptr %5, align 8
  %135 = getelementptr inbounds %struct.tdefl_compressor, ptr %134, i32 0, i32 35
  %136 = getelementptr inbounds [33025 x i8], ptr %135, i64 0, i64 0
  %137 = load ptr, ptr %5, align 8
  %138 = getelementptr inbounds %struct.tdefl_compressor, ptr %137, i32 0, i32 35
  %139 = getelementptr inbounds [33025 x i8], ptr %138, i64 0, i64 0
  %140 = call i64 @llvm.objectsize.i64.p0(ptr %139, i1 false, i1 true, i1 false)
  %141 = call ptr @__memset_chk(ptr noundef %136, i32 noundef 0, i64 noundef 33025, i64 noundef %140) #11
  br label %142

142:                                              ; preds = %133, %53
  %143 = load ptr, ptr %5, align 8
  %144 = getelementptr inbounds %struct.tdefl_compressor, ptr %143, i32 0, i32 36
  %145 = getelementptr inbounds [3 x [288 x i16]], ptr %144, i64 0, i64 0
  %146 = getelementptr inbounds [288 x i16], ptr %145, i64 0, i64 0
  %147 = load ptr, ptr %5, align 8
  %148 = getelementptr inbounds %struct.tdefl_compressor, ptr %147, i32 0, i32 36
  %149 = getelementptr inbounds [3 x [288 x i16]], ptr %148, i64 0, i64 0
  %150 = getelementptr inbounds [288 x i16], ptr %149, i64 0, i64 0
  %151 = call i64 @llvm.objectsize.i64.p0(ptr %150, i1 false, i1 true, i1 false)
  %152 = call ptr @__memset_chk(ptr noundef %146, i32 noundef 0, i64 noundef 576, i64 noundef %151) #11
  %153 = load ptr, ptr %5, align 8
  %154 = getelementptr inbounds %struct.tdefl_compressor, ptr %153, i32 0, i32 36
  %155 = getelementptr inbounds [3 x [288 x i16]], ptr %154, i64 0, i64 1
  %156 = getelementptr inbounds [288 x i16], ptr %155, i64 0, i64 0
  %157 = load ptr, ptr %5, align 8
  %158 = getelementptr inbounds %struct.tdefl_compressor, ptr %157, i32 0, i32 36
  %159 = getelementptr inbounds [3 x [288 x i16]], ptr %158, i64 0, i64 1
  %160 = getelementptr inbounds [288 x i16], ptr %159, i64 0, i64 0
  %161 = call i64 @llvm.objectsize.i64.p0(ptr %160, i1 false, i1 true, i1 false)
  %162 = call ptr @__memset_chk(ptr noundef %156, i32 noundef 0, i64 noundef 64, i64 noundef %161) #11
  ret i32 0
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_deflateEnd(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = icmp ne ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store i32 -2, ptr %2, align 4
  br label %25

7:                                                ; preds = %1
  %8 = load ptr, ptr %3, align 8
  %9 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i32 0, i32 7
  %10 = load ptr, ptr %9, align 8
  %11 = icmp ne ptr %10, null
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = load ptr, ptr %3, align 8
  %14 = getelementptr inbounds %struct.mz_stream_s, ptr %13, i32 0, i32 9
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr %3, align 8
  %17 = getelementptr inbounds %struct.mz_stream_s, ptr %16, i32 0, i32 10
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr %3, align 8
  %20 = getelementptr inbounds %struct.mz_stream_s, ptr %19, i32 0, i32 7
  %21 = load ptr, ptr %20, align 8
  call void %15(ptr noundef %18, ptr noundef %21)
  %22 = load ptr, ptr %3, align 8
  %23 = getelementptr inbounds %struct.mz_stream_s, ptr %22, i32 0, i32 7
  store ptr null, ptr %23, align 8
  br label %24

24:                                               ; preds = %12, %7
  store i32 0, ptr %2, align 4
  br label %25

25:                                               ; preds = %24, %6
  %26 = load i32, ptr %2, align 4
  ret i32 %26
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_deflateReset(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = icmp ne ptr %4, null
  br i1 %5, label %6, label %21

6:                                                ; preds = %1
  %7 = load ptr, ptr %3, align 8
  %8 = getelementptr inbounds %struct.mz_stream_s, ptr %7, i32 0, i32 7
  %9 = load ptr, ptr %8, align 8
  %10 = icmp ne ptr %9, null
  br i1 %10, label %11, label %21

11:                                               ; preds = %6
  %12 = load ptr, ptr %3, align 8
  %13 = getelementptr inbounds %struct.mz_stream_s, ptr %12, i32 0, i32 8
  %14 = load ptr, ptr %13, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %16, label %21

16:                                               ; preds = %11
  %17 = load ptr, ptr %3, align 8
  %18 = getelementptr inbounds %struct.mz_stream_s, ptr %17, i32 0, i32 9
  %19 = load ptr, ptr %18, align 8
  %20 = icmp ne ptr %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %16, %11, %6, %1
  store i32 -2, ptr %2, align 4
  br label %36

22:                                               ; preds = %16
  %23 = load ptr, ptr %3, align 8
  %24 = getelementptr inbounds %struct.mz_stream_s, ptr %23, i32 0, i32 5
  store i64 0, ptr %24, align 8
  %25 = load ptr, ptr %3, align 8
  %26 = getelementptr inbounds %struct.mz_stream_s, ptr %25, i32 0, i32 2
  store i64 0, ptr %26, align 8
  %27 = load ptr, ptr %3, align 8
  %28 = getelementptr inbounds %struct.mz_stream_s, ptr %27, i32 0, i32 7
  %29 = load ptr, ptr %28, align 8
  %30 = load ptr, ptr %3, align 8
  %31 = getelementptr inbounds %struct.mz_stream_s, ptr %30, i32 0, i32 7
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr inbounds %struct.tdefl_compressor, ptr %32, i32 0, i32 2
  %34 = load i32, ptr %33, align 8
  %35 = call i32 @tdefl_init(ptr noundef %29, ptr noundef null, ptr noundef null, i32 noundef %34)
  store i32 0, ptr %2, align 4
  br label %36

36:                                               ; preds = %22, %21
  %37 = load i32, ptr %2, align 4
  ret i32 %37
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_deflate(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store i32 %1, ptr %5, align 4
  store i32 0, ptr %10, align 4
  %12 = load ptr, ptr %4, align 8
  %13 = icmp ne ptr %12, null
  br i1 %13, label %14, label %30

14:                                               ; preds = %2
  %15 = load ptr, ptr %4, align 8
  %16 = getelementptr inbounds %struct.mz_stream_s, ptr %15, i32 0, i32 7
  %17 = load ptr, ptr %16, align 8
  %18 = icmp ne ptr %17, null
  br i1 %18, label %19, label %30

19:                                               ; preds = %14
  %20 = load i32, ptr %5, align 4
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %19
  %23 = load i32, ptr %5, align 4
  %24 = icmp sgt i32 %23, 4
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %4, align 8
  %27 = getelementptr inbounds %struct.mz_stream_s, ptr %26, i32 0, i32 3
  %28 = load ptr, ptr %27, align 8
  %29 = icmp ne ptr %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %25, %22, %19, %14, %2
  store i32 -2, ptr %3, align 4
  br label %171

31:                                               ; preds = %25
  %32 = load ptr, ptr %4, align 8
  %33 = getelementptr inbounds %struct.mz_stream_s, ptr %32, i32 0, i32 4
  %34 = load i32, ptr %33, align 8
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  store i32 -5, ptr %3, align 4
  br label %171

37:                                               ; preds = %31
  %38 = load i32, ptr %5, align 4
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  store i32 2, ptr %5, align 4
  br label %41

41:                                               ; preds = %40, %37
  %42 = load ptr, ptr %4, align 8
  %43 = getelementptr inbounds %struct.mz_stream_s, ptr %42, i32 0, i32 7
  %44 = load ptr, ptr %43, align 8
  %45 = getelementptr inbounds %struct.tdefl_compressor, ptr %44, i32 0, i32 26
  %46 = load i32, ptr %45, align 4
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %53

48:                                               ; preds = %41
  %49 = load i32, ptr %5, align 4
  %50 = icmp eq i32 %49, 4
  %51 = zext i1 %50 to i64
  %52 = select i1 %50, i32 1, i32 -5
  store i32 %52, ptr %3, align 4
  br label %171

53:                                               ; preds = %41
  %54 = load ptr, ptr %4, align 8
  %55 = getelementptr inbounds %struct.mz_stream_s, ptr %54, i32 0, i32 2
  %56 = load i64, ptr %55, align 8
  store i64 %56, ptr %8, align 8
  %57 = load ptr, ptr %4, align 8
  %58 = getelementptr inbounds %struct.mz_stream_s, ptr %57, i32 0, i32 5
  %59 = load i64, ptr %58, align 8
  store i64 %59, ptr %9, align 8
  br label %60

60:                                               ; preds = %168, %53
  %61 = load ptr, ptr %4, align 8
  %62 = getelementptr inbounds %struct.mz_stream_s, ptr %61, i32 0, i32 1
  %63 = load i32, ptr %62, align 8
  %64 = zext i32 %63 to i64
  store i64 %64, ptr %6, align 8
  %65 = load ptr, ptr %4, align 8
  %66 = getelementptr inbounds %struct.mz_stream_s, ptr %65, i32 0, i32 4
  %67 = load i32, ptr %66, align 8
  %68 = zext i32 %67 to i64
  store i64 %68, ptr %7, align 8
  %69 = load ptr, ptr %4, align 8
  %70 = getelementptr inbounds %struct.mz_stream_s, ptr %69, i32 0, i32 7
  %71 = load ptr, ptr %70, align 8
  %72 = load ptr, ptr %4, align 8
  %73 = getelementptr inbounds %struct.mz_stream_s, ptr %72, i32 0, i32 0
  %74 = load ptr, ptr %73, align 8
  %75 = load ptr, ptr %4, align 8
  %76 = getelementptr inbounds %struct.mz_stream_s, ptr %75, i32 0, i32 3
  %77 = load ptr, ptr %76, align 8
  %78 = load i32, ptr %5, align 4
  %79 = call i32 @tdefl_compress(ptr noundef %71, ptr noundef %74, ptr noundef %6, ptr noundef %77, ptr noundef %7, i32 noundef %78)
  store i32 %79, ptr %11, align 4
  %80 = load i64, ptr %6, align 8
  %81 = trunc i64 %80 to i32
  %82 = load ptr, ptr %4, align 8
  %83 = getelementptr inbounds %struct.mz_stream_s, ptr %82, i32 0, i32 0
  %84 = load ptr, ptr %83, align 8
  %85 = zext i32 %81 to i64
  %86 = getelementptr inbounds i8, ptr %84, i64 %85
  store ptr %86, ptr %83, align 8
  %87 = load i64, ptr %6, align 8
  %88 = trunc i64 %87 to i32
  %89 = load ptr, ptr %4, align 8
  %90 = getelementptr inbounds %struct.mz_stream_s, ptr %89, i32 0, i32 1
  %91 = load i32, ptr %90, align 8
  %92 = sub i32 %91, %88
  store i32 %92, ptr %90, align 8
  %93 = load i64, ptr %6, align 8
  %94 = trunc i64 %93 to i32
  %95 = zext i32 %94 to i64
  %96 = load ptr, ptr %4, align 8
  %97 = getelementptr inbounds %struct.mz_stream_s, ptr %96, i32 0, i32 2
  %98 = load i64, ptr %97, align 8
  %99 = add i64 %98, %95
  store i64 %99, ptr %97, align 8
  %100 = load ptr, ptr %4, align 8
  %101 = getelementptr inbounds %struct.mz_stream_s, ptr %100, i32 0, i32 7
  %102 = load ptr, ptr %101, align 8
  %103 = call i32 @tdefl_get_adler32(ptr noundef %102)
  %104 = zext i32 %103 to i64
  %105 = load ptr, ptr %4, align 8
  %106 = getelementptr inbounds %struct.mz_stream_s, ptr %105, i32 0, i32 12
  store i64 %104, ptr %106, align 8
  %107 = load i64, ptr %7, align 8
  %108 = trunc i64 %107 to i32
  %109 = load ptr, ptr %4, align 8
  %110 = getelementptr inbounds %struct.mz_stream_s, ptr %109, i32 0, i32 3
  %111 = load ptr, ptr %110, align 8
  %112 = zext i32 %108 to i64
  %113 = getelementptr inbounds i8, ptr %111, i64 %112
  store ptr %113, ptr %110, align 8
  %114 = load i64, ptr %7, align 8
  %115 = trunc i64 %114 to i32
  %116 = load ptr, ptr %4, align 8
  %117 = getelementptr inbounds %struct.mz_stream_s, ptr %116, i32 0, i32 4
  %118 = load i32, ptr %117, align 8
  %119 = sub i32 %118, %115
  store i32 %119, ptr %117, align 8
  %120 = load i64, ptr %7, align 8
  %121 = trunc i64 %120 to i32
  %122 = zext i32 %121 to i64
  %123 = load ptr, ptr %4, align 8
  %124 = getelementptr inbounds %struct.mz_stream_s, ptr %123, i32 0, i32 5
  %125 = load i64, ptr %124, align 8
  %126 = add i64 %125, %122
  store i64 %126, ptr %124, align 8
  %127 = load i32, ptr %11, align 4
  %128 = icmp slt i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %60
  store i32 -2, ptr %10, align 4
  br label %169

130:                                              ; preds = %60
  %131 = load i32, ptr %11, align 4
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  store i32 1, ptr %10, align 4
  br label %169

134:                                              ; preds = %130
  %135 = load ptr, ptr %4, align 8
  %136 = getelementptr inbounds %struct.mz_stream_s, ptr %135, i32 0, i32 4
  %137 = load i32, ptr %136, align 8
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %140, label %139

139:                                              ; preds = %134
  br label %169

140:                                              ; preds = %134
  %141 = load ptr, ptr %4, align 8
  %142 = getelementptr inbounds %struct.mz_stream_s, ptr %141, i32 0, i32 1
  %143 = load i32, ptr %142, align 8
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %165, label %145

145:                                              ; preds = %140
  %146 = load i32, ptr %5, align 4
  %147 = icmp ne i32 %146, 4
  br i1 %147, label %148, label %165

148:                                              ; preds = %145
  %149 = load i32, ptr %5, align 4
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %163, label %151

151:                                              ; preds = %148
  %152 = load ptr, ptr %4, align 8
  %153 = getelementptr inbounds %struct.mz_stream_s, ptr %152, i32 0, i32 2
  %154 = load i64, ptr %153, align 8
  %155 = load i64, ptr %8, align 8
  %156 = icmp ne i64 %154, %155
  br i1 %156, label %163, label %157

157:                                              ; preds = %151
  %158 = load ptr, ptr %4, align 8
  %159 = getelementptr inbounds %struct.mz_stream_s, ptr %158, i32 0, i32 5
  %160 = load i64, ptr %159, align 8
  %161 = load i64, ptr %9, align 8
  %162 = icmp ne i64 %160, %161
  br i1 %162, label %163, label %164

163:                                              ; preds = %157, %151, %148
  br label %169

164:                                              ; preds = %157
  store i32 -5, ptr %3, align 4
  br label %171

165:                                              ; preds = %145, %140
  br label %166

166:                                              ; preds = %165
  br label %167

167:                                              ; preds = %166
  br label %168

168:                                              ; preds = %167
  br label %60

169:                                              ; preds = %163, %139, %133, %129
  %170 = load i32, ptr %10, align 4
  store i32 %170, ptr %3, align 4
  br label %171

171:                                              ; preds = %169, %164, %48, %36, %30
  %172 = load i32, ptr %3, align 4
  ret i32 %172
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @tdefl_compress(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  store ptr %0, ptr %8, align 8
  store ptr %1, ptr %9, align 8
  store ptr %2, ptr %10, align 8
  store ptr %3, ptr %11, align 8
  store ptr %4, ptr %12, align 8
  store i32 %5, ptr %13, align 4
  %14 = load ptr, ptr %8, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = load ptr, ptr %10, align 8
  %18 = icmp ne ptr %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = load ptr, ptr %10, align 8
  store i64 0, ptr %20, align 8
  br label %21

21:                                               ; preds = %19, %16
  %22 = load ptr, ptr %12, align 8
  %23 = icmp ne ptr %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = load ptr, ptr %12, align 8
  store i64 0, ptr %25, align 8
  br label %26

26:                                               ; preds = %24, %21
  store i32 -2, ptr %7, align 4
  br label %234

27:                                               ; preds = %6
  %28 = load ptr, ptr %9, align 8
  %29 = load ptr, ptr %8, align 8
  %30 = getelementptr inbounds %struct.tdefl_compressor, ptr %29, i32 0, i32 27
  store ptr %28, ptr %30, align 8
  %31 = load ptr, ptr %10, align 8
  %32 = load ptr, ptr %8, align 8
  %33 = getelementptr inbounds %struct.tdefl_compressor, ptr %32, i32 0, i32 29
  store ptr %31, ptr %33, align 8
  %34 = load ptr, ptr %11, align 8
  %35 = load ptr, ptr %8, align 8
  %36 = getelementptr inbounds %struct.tdefl_compressor, ptr %35, i32 0, i32 28
  store ptr %34, ptr %36, align 8
  %37 = load ptr, ptr %12, align 8
  %38 = load ptr, ptr %8, align 8
  %39 = getelementptr inbounds %struct.tdefl_compressor, ptr %38, i32 0, i32 30
  store ptr %37, ptr %39, align 8
  %40 = load ptr, ptr %9, align 8
  %41 = load ptr, ptr %8, align 8
  %42 = getelementptr inbounds %struct.tdefl_compressor, ptr %41, i32 0, i32 32
  store ptr %40, ptr %42, align 8
  %43 = load ptr, ptr %10, align 8
  %44 = icmp ne ptr %43, null
  br i1 %44, label %45, label %48

45:                                               ; preds = %27
  %46 = load ptr, ptr %10, align 8
  %47 = load i64, ptr %46, align 8
  br label %49

48:                                               ; preds = %27
  br label %49

49:                                               ; preds = %48, %45
  %50 = phi i64 [ %47, %45 ], [ 0, %48 ]
  %51 = load ptr, ptr %8, align 8
  %52 = getelementptr inbounds %struct.tdefl_compressor, ptr %51, i32 0, i32 33
  store i64 %50, ptr %52, align 8
  %53 = load ptr, ptr %8, align 8
  %54 = getelementptr inbounds %struct.tdefl_compressor, ptr %53, i32 0, i32 34
  store i64 0, ptr %54, align 8
  %55 = load i32, ptr %13, align 4
  %56 = load ptr, ptr %8, align 8
  %57 = getelementptr inbounds %struct.tdefl_compressor, ptr %56, i32 0, i32 31
  store i32 %55, ptr %57, align 8
  %58 = load ptr, ptr %8, align 8
  %59 = getelementptr inbounds %struct.tdefl_compressor, ptr %58, i32 0, i32 0
  %60 = load ptr, ptr %59, align 8
  %61 = icmp ne ptr %60, null
  %62 = zext i1 %61 to i32
  %63 = load ptr, ptr %11, align 8
  %64 = icmp ne ptr %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %49
  %66 = load ptr, ptr %12, align 8
  %67 = icmp ne ptr %66, null
  br label %68

68:                                               ; preds = %65, %49
  %69 = phi i1 [ true, %49 ], [ %67, %65 ]
  %70 = zext i1 %69 to i32
  %71 = icmp eq i32 %62, %70
  br i1 %71, label %105, label %72

72:                                               ; preds = %68
  %73 = load ptr, ptr %8, align 8
  %74 = getelementptr inbounds %struct.tdefl_compressor, ptr %73, i32 0, i32 26
  %75 = load i32, ptr %74, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %105, label %77

77:                                               ; preds = %72
  %78 = load ptr, ptr %8, align 8
  %79 = getelementptr inbounds %struct.tdefl_compressor, ptr %78, i32 0, i32 25
  %80 = load i32, ptr %79, align 8
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = load i32, ptr %13, align 4
  %84 = icmp ne i32 %83, 4
  br i1 %84, label %105, label %85

85:                                               ; preds = %82, %77
  %86 = load ptr, ptr %10, align 8
  %87 = icmp ne ptr %86, null
  br i1 %87, label %88, label %95

88:                                               ; preds = %85
  %89 = load ptr, ptr %10, align 8
  %90 = load i64, ptr %89, align 8
  %91 = icmp ne i64 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %88
  %93 = load ptr, ptr %9, align 8
  %94 = icmp ne ptr %93, null
  br i1 %94, label %95, label %105

95:                                               ; preds = %92, %88, %85
  %96 = load ptr, ptr %12, align 8
  %97 = icmp ne ptr %96, null
  br i1 %97, label %98, label %118

98:                                               ; preds = %95
  %99 = load ptr, ptr %12, align 8
  %100 = load i64, ptr %99, align 8
  %101 = icmp ne i64 %100, 0
  br i1 %101, label %102, label %118

102:                                              ; preds = %98
  %103 = load ptr, ptr %11, align 8
  %104 = icmp ne ptr %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102, %92, %82, %72, %68
  %106 = load ptr, ptr %10, align 8
  %107 = icmp ne ptr %106, null
  br i1 %107, label %108, label %110

108:                                              ; preds = %105
  %109 = load ptr, ptr %10, align 8
  store i64 0, ptr %109, align 8
  br label %110

110:                                              ; preds = %108, %105
  %111 = load ptr, ptr %12, align 8
  %112 = icmp ne ptr %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %110
  %114 = load ptr, ptr %12, align 8
  store i64 0, ptr %114, align 8
  br label %115

115:                                              ; preds = %113, %110
  %116 = load ptr, ptr %8, align 8
  %117 = getelementptr inbounds %struct.tdefl_compressor, ptr %116, i32 0, i32 26
  store i32 -2, ptr %117, align 4
  store i32 -2, ptr %7, align 4
  br label %234

118:                                              ; preds = %102, %98, %95
  %119 = load i32, ptr %13, align 4
  %120 = icmp eq i32 %119, 4
  %121 = zext i1 %120 to i32
  %122 = load ptr, ptr %8, align 8
  %123 = getelementptr inbounds %struct.tdefl_compressor, ptr %122, i32 0, i32 25
  %124 = load i32, ptr %123, align 8
  %125 = or i32 %124, %121
  store i32 %125, ptr %123, align 8
  %126 = load ptr, ptr %8, align 8
  %127 = getelementptr inbounds %struct.tdefl_compressor, ptr %126, i32 0, i32 22
  %128 = load i32, ptr %127, align 4
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %118
  %131 = load ptr, ptr %8, align 8
  %132 = getelementptr inbounds %struct.tdefl_compressor, ptr %131, i32 0, i32 23
  %133 = load i32, ptr %132, align 8
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %130, %118
  %136 = load ptr, ptr %8, align 8
  %137 = call i32 @tdefl_flush_output_buffer(ptr noundef %136)
  %138 = load ptr, ptr %8, align 8
  %139 = getelementptr inbounds %struct.tdefl_compressor, ptr %138, i32 0, i32 26
  store i32 %137, ptr %139, align 4
  store i32 %137, ptr %7, align 4
  br label %234

140:                                              ; preds = %130
  %141 = load ptr, ptr %8, align 8
  %142 = call i32 @tdefl_compress_normal(ptr noundef %141)
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %148, label %144

144:                                              ; preds = %140
  %145 = load ptr, ptr %8, align 8
  %146 = getelementptr inbounds %struct.tdefl_compressor, ptr %145, i32 0, i32 26
  %147 = load i32, ptr %146, align 4
  store i32 %147, ptr %7, align 4
  br label %234

148:                                              ; preds = %140
  %149 = load ptr, ptr %8, align 8
  %150 = getelementptr inbounds %struct.tdefl_compressor, ptr %149, i32 0, i32 2
  %151 = load i32, ptr %150, align 8
  %152 = and i32 %151, 12288
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %174

154:                                              ; preds = %148
  %155 = load ptr, ptr %9, align 8
  %156 = icmp ne ptr %155, null
  br i1 %156, label %157, label %174

157:                                              ; preds = %154
  %158 = load ptr, ptr %8, align 8
  %159 = getelementptr inbounds %struct.tdefl_compressor, ptr %158, i32 0, i32 5
  %160 = load i32, ptr %159, align 8
  %161 = zext i32 %160 to i64
  %162 = load ptr, ptr %9, align 8
  %163 = load ptr, ptr %8, align 8
  %164 = getelementptr inbounds %struct.tdefl_compressor, ptr %163, i32 0, i32 32
  %165 = load ptr, ptr %164, align 8
  %166 = load ptr, ptr %9, align 8
  %167 = ptrtoint ptr %165 to i64
  %168 = ptrtoint ptr %166 to i64
  %169 = sub i64 %167, %168
  %170 = call i64 @mz_adler32(i64 noundef %161, ptr noundef %162, i64 noundef %169)
  %171 = trunc i64 %170 to i32
  %172 = load ptr, ptr %8, align 8
  %173 = getelementptr inbounds %struct.tdefl_compressor, ptr %172, i32 0, i32 5
  store i32 %171, ptr %173, align 8
  br label %174

174:                                              ; preds = %157, %154, %148
  %175 = load i32, ptr %13, align 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %177, label %229

177:                                              ; preds = %174
  %178 = load ptr, ptr %8, align 8
  %179 = getelementptr inbounds %struct.tdefl_compressor, ptr %178, i32 0, i32 7
  %180 = load i32, ptr %179, align 8
  %181 = icmp ne i32 %180, 0
  br i1 %181, label %229, label %182

182:                                              ; preds = %177
  %183 = load ptr, ptr %8, align 8
  %184 = getelementptr inbounds %struct.tdefl_compressor, ptr %183, i32 0, i32 33
  %185 = load i64, ptr %184, align 8
  %186 = icmp ne i64 %185, 0
  br i1 %186, label %229, label %187

187:                                              ; preds = %182
  %188 = load ptr, ptr %8, align 8
  %189 = getelementptr inbounds %struct.tdefl_compressor, ptr %188, i32 0, i32 22
  %190 = load i32, ptr %189, align 4
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %229, label %192

192:                                              ; preds = %187
  %193 = load ptr, ptr %8, align 8
  %194 = load i32, ptr %13, align 4
  %195 = call i32 @tdefl_flush_block(ptr noundef %193, i32 noundef %194)
  %196 = icmp slt i32 %195, 0
  br i1 %196, label %197, label %201

197:                                              ; preds = %192
  %198 = load ptr, ptr %8, align 8
  %199 = getelementptr inbounds %struct.tdefl_compressor, ptr %198, i32 0, i32 26
  %200 = load i32, ptr %199, align 4
  store i32 %200, ptr %7, align 4
  br label %234

201:                                              ; preds = %192
  %202 = load i32, ptr %13, align 4
  %203 = icmp eq i32 %202, 4
  %204 = zext i1 %203 to i32
  %205 = load ptr, ptr %8, align 8
  %206 = getelementptr inbounds %struct.tdefl_compressor, ptr %205, i32 0, i32 23
  store i32 %204, ptr %206, align 8
  %207 = load i32, ptr %13, align 4
  %208 = icmp eq i32 %207, 3
  br i1 %208, label %209, label %228

209:                                              ; preds = %201
  %210 = load ptr, ptr %8, align 8
  %211 = getelementptr inbounds %struct.tdefl_compressor, ptr %210, i32 0, i32 41
  %212 = getelementptr inbounds [32768 x i16], ptr %211, i64 0, i64 0
  %213 = load ptr, ptr %8, align 8
  %214 = getelementptr inbounds %struct.tdefl_compressor, ptr %213, i32 0, i32 41
  %215 = getelementptr inbounds [32768 x i16], ptr %214, i64 0, i64 0
  %216 = call i64 @llvm.objectsize.i64.p0(ptr %215, i1 false, i1 true, i1 false)
  %217 = call ptr @__memset_chk(ptr noundef %212, i32 noundef 0, i64 noundef 65536, i64 noundef %216) #11
  %218 = load ptr, ptr %8, align 8
  %219 = getelementptr inbounds %struct.tdefl_compressor, ptr %218, i32 0, i32 40
  %220 = getelementptr inbounds [32768 x i16], ptr %219, i64 0, i64 0
  %221 = load ptr, ptr %8, align 8
  %222 = getelementptr inbounds %struct.tdefl_compressor, ptr %221, i32 0, i32 40
  %223 = getelementptr inbounds [32768 x i16], ptr %222, i64 0, i64 0
  %224 = call i64 @llvm.objectsize.i64.p0(ptr %223, i1 false, i1 true, i1 false)
  %225 = call ptr @__memset_chk(ptr noundef %220, i32 noundef 0, i64 noundef 65536, i64 noundef %224) #11
  %226 = load ptr, ptr %8, align 8
  %227 = getelementptr inbounds %struct.tdefl_compressor, ptr %226, i32 0, i32 8
  store i32 0, ptr %227, align 4
  br label %228

228:                                              ; preds = %209, %201
  br label %229

229:                                              ; preds = %228, %187, %182, %177, %174
  %230 = load ptr, ptr %8, align 8
  %231 = call i32 @tdefl_flush_output_buffer(ptr noundef %230)
  %232 = load ptr, ptr %8, align 8
  %233 = getelementptr inbounds %struct.tdefl_compressor, ptr %232, i32 0, i32 26
  store i32 %231, ptr %233, align 4
  store i32 %231, ptr %7, align 4
  br label %234

234:                                              ; preds = %229, %197, %144, %135, %115, %26
  %235 = load i32, ptr %7, align 4
  ret i32 %235
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @tdefl_get_adler32(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.tdefl_compressor, ptr %3, i32 0, i32 5
  %5 = load i32, ptr %4, align 8
  ret i32 %5
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @mz_deflateBound(ptr noundef %0, i64 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  store i64 %1, ptr %4, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load i64, ptr %4, align 8
  %7 = mul i64 %6, 110
  %8 = udiv i64 %7, 100
  %9 = add i64 128, %8
  %10 = load i64, ptr %4, align 8
  %11 = add i64 128, %10
  %12 = load i64, ptr %4, align 8
  %13 = udiv i64 %12, 31744
  %14 = add i64 %13, 1
  %15 = mul i64 %14, 5
  %16 = add i64 %11, %15
  %17 = icmp ugt i64 %9, %16
  br i1 %17, label %18, label %23

18:                                               ; preds = %2
  %19 = load i64, ptr %4, align 8
  %20 = mul i64 %19, 110
  %21 = udiv i64 %20, 100
  %22 = add i64 128, %21
  br label %31

23:                                               ; preds = %2
  %24 = load i64, ptr %4, align 8
  %25 = add i64 128, %24
  %26 = load i64, ptr %4, align 8
  %27 = udiv i64 %26, 31744
  %28 = add i64 %27, 1
  %29 = mul i64 %28, 5
  %30 = add i64 %25, %29
  br label %31

31:                                               ; preds = %23, %18
  %32 = phi i64 [ %22, %18 ], [ %30, %23 ]
  ret i64 %32
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_compress2(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.mz_stream_s, align 8
  store ptr %0, ptr %7, align 8
  store ptr %1, ptr %8, align 8
  store ptr %2, ptr %9, align 8
  store i64 %3, ptr %10, align 8
  store i32 %4, ptr %11, align 4
  call void @llvm.memset.p0.i64(ptr align 8 %13, i8 0, i64 112, i1 false)
  %14 = load i64, ptr %10, align 8
  %15 = load ptr, ptr %8, align 8
  %16 = load i64, ptr %15, align 8
  %17 = or i64 %14, %16
  %18 = icmp ugt i64 %17, 4294967295
  br i1 %18, label %19, label %20

19:                                               ; preds = %5
  store i32 -10000, ptr %6, align 4
  br label %56

20:                                               ; preds = %5
  %21 = load ptr, ptr %9, align 8
  %22 = getelementptr inbounds %struct.mz_stream_s, ptr %13, i32 0, i32 0
  store ptr %21, ptr %22, align 8
  %23 = load i64, ptr %10, align 8
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %struct.mz_stream_s, ptr %13, i32 0, i32 1
  store i32 %24, ptr %25, align 8
  %26 = load ptr, ptr %7, align 8
  %27 = getelementptr inbounds %struct.mz_stream_s, ptr %13, i32 0, i32 3
  store ptr %26, ptr %27, align 8
  %28 = load ptr, ptr %8, align 8
  %29 = load i64, ptr %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds %struct.mz_stream_s, ptr %13, i32 0, i32 4
  store i32 %30, ptr %31, align 8
  %32 = load i32, ptr %11, align 4
  %33 = call i32 @mz_deflateInit(ptr noundef %13, i32 noundef %32)
  store i32 %33, ptr %12, align 4
  %34 = load i32, ptr %12, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %20
  %37 = load i32, ptr %12, align 4
  store i32 %37, ptr %6, align 4
  br label %56

38:                                               ; preds = %20
  %39 = call i32 @mz_deflate(ptr noundef %13, i32 noundef 4)
  store i32 %39, ptr %12, align 4
  %40 = load i32, ptr %12, align 4
  %41 = icmp ne i32 %40, 1
  br i1 %41, label %42, label %51

42:                                               ; preds = %38
  %43 = call i32 @mz_deflateEnd(ptr noundef %13)
  %44 = load i32, ptr %12, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  br label %49

47:                                               ; preds = %42
  %48 = load i32, ptr %12, align 4
  br label %49

49:                                               ; preds = %47, %46
  %50 = phi i32 [ -5, %46 ], [ %48, %47 ]
  store i32 %50, ptr %6, align 4
  br label %56

51:                                               ; preds = %38
  %52 = getelementptr inbounds %struct.mz_stream_s, ptr %13, i32 0, i32 5
  %53 = load i64, ptr %52, align 8
  %54 = load ptr, ptr %8, align 8
  store i64 %53, ptr %54, align 8
  %55 = call i32 @mz_deflateEnd(ptr noundef %13)
  store i32 %55, ptr %6, align 4
  br label %56

56:                                               ; preds = %51, %49, %36, %19
  %57 = load i32, ptr %6, align 4
  ret i32 %57
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_compress(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store ptr %2, ptr %7, align 8
  store i64 %3, ptr %8, align 8
  %9 = load ptr, ptr %5, align 8
  %10 = load ptr, ptr %6, align 8
  %11 = load ptr, ptr %7, align 8
  %12 = load i64, ptr %8, align 8
  %13 = call i32 @mz_compress2(ptr noundef %9, ptr noundef %10, ptr noundef %11, i64 noundef %12, i32 noundef -1)
  ret i32 %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @mz_compressBound(i64 noundef %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, ptr %2, align 8
  %3 = load i64, ptr %2, align 8
  %4 = call i64 @mz_deflateBound(ptr noundef null, i64 noundef %3)
  ret i64 %4
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_inflateInit2(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  store i32 %1, ptr %5, align 4
  %7 = load ptr, ptr %4, align 8
  %8 = icmp ne ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  store i32 -2, ptr %3, align 4
  br label %79

10:                                               ; preds = %2
  %11 = load i32, ptr %5, align 4
  %12 = icmp ne i32 %11, 15
  br i1 %12, label %13, label %18

13:                                               ; preds = %10
  %14 = load i32, ptr %5, align 4
  %15 = sub nsw i32 0, %14
  %16 = icmp ne i32 %15, 15
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  store i32 -10000, ptr %3, align 4
  br label %79

18:                                               ; preds = %13, %10
  %19 = load ptr, ptr %4, align 8
  %20 = getelementptr inbounds %struct.mz_stream_s, ptr %19, i32 0, i32 11
  store i32 0, ptr %20, align 8
  %21 = load ptr, ptr %4, align 8
  %22 = getelementptr inbounds %struct.mz_stream_s, ptr %21, i32 0, i32 12
  store i64 0, ptr %22, align 8
  %23 = load ptr, ptr %4, align 8
  %24 = getelementptr inbounds %struct.mz_stream_s, ptr %23, i32 0, i32 6
  store ptr null, ptr %24, align 8
  %25 = load ptr, ptr %4, align 8
  %26 = getelementptr inbounds %struct.mz_stream_s, ptr %25, i32 0, i32 2
  store i64 0, ptr %26, align 8
  %27 = load ptr, ptr %4, align 8
  %28 = getelementptr inbounds %struct.mz_stream_s, ptr %27, i32 0, i32 5
  store i64 0, ptr %28, align 8
  %29 = load ptr, ptr %4, align 8
  %30 = getelementptr inbounds %struct.mz_stream_s, ptr %29, i32 0, i32 13
  store i64 0, ptr %30, align 8
  %31 = load ptr, ptr %4, align 8
  %32 = getelementptr inbounds %struct.mz_stream_s, ptr %31, i32 0, i32 8
  %33 = load ptr, ptr %32, align 8
  %34 = icmp ne ptr %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %18
  %36 = load ptr, ptr %4, align 8
  %37 = getelementptr inbounds %struct.mz_stream_s, ptr %36, i32 0, i32 8
  store ptr @miniz_def_alloc_func, ptr %37, align 8
  br label %38

38:                                               ; preds = %35, %18
  %39 = load ptr, ptr %4, align 8
  %40 = getelementptr inbounds %struct.mz_stream_s, ptr %39, i32 0, i32 9
  %41 = load ptr, ptr %40, align 8
  %42 = icmp ne ptr %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = load ptr, ptr %4, align 8
  %45 = getelementptr inbounds %struct.mz_stream_s, ptr %44, i32 0, i32 9
  store ptr @miniz_def_free_func, ptr %45, align 8
  br label %46

46:                                               ; preds = %43, %38
  %47 = load ptr, ptr %4, align 8
  %48 = getelementptr inbounds %struct.mz_stream_s, ptr %47, i32 0, i32 8
  %49 = load ptr, ptr %48, align 8
  %50 = load ptr, ptr %4, align 8
  %51 = getelementptr inbounds %struct.mz_stream_s, ptr %50, i32 0, i32 10
  %52 = load ptr, ptr %51, align 8
  %53 = call ptr %49(ptr noundef %52, i64 noundef 1, i64 noundef 41168)
  store ptr %53, ptr %6, align 8
  %54 = load ptr, ptr %6, align 8
  %55 = icmp ne ptr %54, null
  br i1 %55, label %57, label %56

56:                                               ; preds = %46
  store i32 -4, ptr %3, align 4
  br label %79

57:                                               ; preds = %46
  %58 = load ptr, ptr %6, align 8
  %59 = load ptr, ptr %4, align 8
  %60 = getelementptr inbounds %struct.mz_stream_s, ptr %59, i32 0, i32 7
  store ptr %58, ptr %60, align 8
  br label %61

61:                                               ; preds = %57
  %62 = load ptr, ptr %6, align 8
  %63 = getelementptr inbounds %struct.inflate_state, ptr %62, i32 0, i32 0
  %64 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %63, i32 0, i32 0
  store i32 0, ptr %64, align 8
  br label %65

65:                                               ; preds = %61
  %66 = load ptr, ptr %6, align 8
  %67 = getelementptr inbounds %struct.inflate_state, ptr %66, i32 0, i32 1
  store i32 0, ptr %67, align 8
  %68 = load ptr, ptr %6, align 8
  %69 = getelementptr inbounds %struct.inflate_state, ptr %68, i32 0, i32 2
  store i32 0, ptr %69, align 4
  %70 = load ptr, ptr %6, align 8
  %71 = getelementptr inbounds %struct.inflate_state, ptr %70, i32 0, i32 7
  store i32 1, ptr %71, align 4
  %72 = load ptr, ptr %6, align 8
  %73 = getelementptr inbounds %struct.inflate_state, ptr %72, i32 0, i32 3
  store i32 1, ptr %73, align 8
  %74 = load ptr, ptr %6, align 8
  %75 = getelementptr inbounds %struct.inflate_state, ptr %74, i32 0, i32 4
  store i32 0, ptr %75, align 4
  %76 = load i32, ptr %5, align 4
  %77 = load ptr, ptr %6, align 8
  %78 = getelementptr inbounds %struct.inflate_state, ptr %77, i32 0, i32 5
  store i32 %76, ptr %78, align 8
  store i32 0, ptr %3, align 4
  br label %79

79:                                               ; preds = %65, %56, %17, %9
  %80 = load i32, ptr %3, align 4
  ret i32 %80
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_inflateInit(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = call i32 @mz_inflateInit2(ptr noundef %3, i32 noundef 15)
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_inflateReset(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = icmp ne ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  store i32 -2, ptr %2, align 4
  br label %39

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8
  %10 = getelementptr inbounds %struct.mz_stream_s, ptr %9, i32 0, i32 11
  store i32 0, ptr %10, align 8
  %11 = load ptr, ptr %3, align 8
  %12 = getelementptr inbounds %struct.mz_stream_s, ptr %11, i32 0, i32 12
  store i64 0, ptr %12, align 8
  %13 = load ptr, ptr %3, align 8
  %14 = getelementptr inbounds %struct.mz_stream_s, ptr %13, i32 0, i32 6
  store ptr null, ptr %14, align 8
  %15 = load ptr, ptr %3, align 8
  %16 = getelementptr inbounds %struct.mz_stream_s, ptr %15, i32 0, i32 2
  store i64 0, ptr %16, align 8
  %17 = load ptr, ptr %3, align 8
  %18 = getelementptr inbounds %struct.mz_stream_s, ptr %17, i32 0, i32 5
  store i64 0, ptr %18, align 8
  %19 = load ptr, ptr %3, align 8
  %20 = getelementptr inbounds %struct.mz_stream_s, ptr %19, i32 0, i32 13
  store i64 0, ptr %20, align 8
  %21 = load ptr, ptr %3, align 8
  %22 = getelementptr inbounds %struct.mz_stream_s, ptr %21, i32 0, i32 7
  %23 = load ptr, ptr %22, align 8
  store ptr %23, ptr %4, align 8
  br label %24

24:                                               ; preds = %8
  %25 = load ptr, ptr %4, align 8
  %26 = getelementptr inbounds %struct.inflate_state, ptr %25, i32 0, i32 0
  %27 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %26, i32 0, i32 0
  store i32 0, ptr %27, align 8
  br label %28

28:                                               ; preds = %24
  %29 = load ptr, ptr %4, align 8
  %30 = getelementptr inbounds %struct.inflate_state, ptr %29, i32 0, i32 1
  store i32 0, ptr %30, align 8
  %31 = load ptr, ptr %4, align 8
  %32 = getelementptr inbounds %struct.inflate_state, ptr %31, i32 0, i32 2
  store i32 0, ptr %32, align 4
  %33 = load ptr, ptr %4, align 8
  %34 = getelementptr inbounds %struct.inflate_state, ptr %33, i32 0, i32 7
  store i32 1, ptr %34, align 4
  %35 = load ptr, ptr %4, align 8
  %36 = getelementptr inbounds %struct.inflate_state, ptr %35, i32 0, i32 3
  store i32 1, ptr %36, align 8
  %37 = load ptr, ptr %4, align 8
  %38 = getelementptr inbounds %struct.inflate_state, ptr %37, i32 0, i32 4
  store i32 0, ptr %38, align 4
  store i32 0, ptr %2, align 4
  br label %39

39:                                               ; preds = %28, %7
  %40 = load i32, ptr %2, align 4
  ret i32 %40
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_inflate(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store i32 %1, ptr %5, align 4
  store i32 8, ptr %9, align 4
  %14 = load ptr, ptr %4, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = load ptr, ptr %4, align 8
  %18 = getelementptr inbounds %struct.mz_stream_s, ptr %17, i32 0, i32 7
  %19 = load ptr, ptr %18, align 8
  %20 = icmp ne ptr %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %16, %2
  store i32 -2, ptr %3, align 4
  br label %455

22:                                               ; preds = %16
  %23 = load i32, ptr %5, align 4
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  store i32 2, ptr %5, align 4
  br label %26

26:                                               ; preds = %25, %22
  %27 = load i32, ptr %5, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %26
  %30 = load i32, ptr %5, align 4
  %31 = icmp ne i32 %30, 2
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = load i32, ptr %5, align 4
  %34 = icmp ne i32 %33, 4
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  store i32 -2, ptr %3, align 4
  br label %455

36:                                               ; preds = %32, %29, %26
  %37 = load ptr, ptr %4, align 8
  %38 = getelementptr inbounds %struct.mz_stream_s, ptr %37, i32 0, i32 7
  %39 = load ptr, ptr %38, align 8
  store ptr %39, ptr %6, align 8
  %40 = load ptr, ptr %6, align 8
  %41 = getelementptr inbounds %struct.inflate_state, ptr %40, i32 0, i32 5
  %42 = load i32, ptr %41, align 8
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %36
  %45 = load i32, ptr %9, align 4
  %46 = or i32 %45, 1
  store i32 %46, ptr %9, align 4
  br label %47

47:                                               ; preds = %44, %36
  %48 = load ptr, ptr %4, align 8
  %49 = getelementptr inbounds %struct.mz_stream_s, ptr %48, i32 0, i32 1
  %50 = load i32, ptr %49, align 8
  %51 = zext i32 %50 to i64
  store i64 %51, ptr %12, align 8
  %52 = load ptr, ptr %6, align 8
  %53 = getelementptr inbounds %struct.inflate_state, ptr %52, i32 0, i32 3
  %54 = load i32, ptr %53, align 8
  store i32 %54, ptr %8, align 4
  %55 = load ptr, ptr %6, align 8
  %56 = getelementptr inbounds %struct.inflate_state, ptr %55, i32 0, i32 3
  store i32 0, ptr %56, align 8
  %57 = load ptr, ptr %6, align 8
  %58 = getelementptr inbounds %struct.inflate_state, ptr %57, i32 0, i32 7
  %59 = load i32, ptr %58, align 4
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %47
  store i32 -3, ptr %3, align 4
  br label %455

62:                                               ; preds = %47
  %63 = load ptr, ptr %6, align 8
  %64 = getelementptr inbounds %struct.inflate_state, ptr %63, i32 0, i32 4
  %65 = load i32, ptr %64, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %62
  %68 = load i32, ptr %5, align 4
  %69 = icmp ne i32 %68, 4
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  store i32 -2, ptr %3, align 4
  br label %455

71:                                               ; preds = %67, %62
  %72 = load i32, ptr %5, align 4
  %73 = icmp eq i32 %72, 4
  %74 = zext i1 %73 to i32
  %75 = load ptr, ptr %6, align 8
  %76 = getelementptr inbounds %struct.inflate_state, ptr %75, i32 0, i32 4
  %77 = load i32, ptr %76, align 4
  %78 = or i32 %77, %74
  store i32 %78, ptr %76, align 4
  %79 = load i32, ptr %5, align 4
  %80 = icmp eq i32 %79, 4
  br i1 %80, label %81, label %169

81:                                               ; preds = %71
  %82 = load i32, ptr %8, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %169

84:                                               ; preds = %81
  %85 = load i32, ptr %9, align 4
  %86 = or i32 %85, 4
  store i32 %86, ptr %9, align 4
  %87 = load ptr, ptr %4, align 8
  %88 = getelementptr inbounds %struct.mz_stream_s, ptr %87, i32 0, i32 1
  %89 = load i32, ptr %88, align 8
  %90 = zext i32 %89 to i64
  store i64 %90, ptr %10, align 8
  %91 = load ptr, ptr %4, align 8
  %92 = getelementptr inbounds %struct.mz_stream_s, ptr %91, i32 0, i32 4
  %93 = load i32, ptr %92, align 8
  %94 = zext i32 %93 to i64
  store i64 %94, ptr %11, align 8
  %95 = load ptr, ptr %6, align 8
  %96 = getelementptr inbounds %struct.inflate_state, ptr %95, i32 0, i32 0
  %97 = load ptr, ptr %4, align 8
  %98 = getelementptr inbounds %struct.mz_stream_s, ptr %97, i32 0, i32 0
  %99 = load ptr, ptr %98, align 8
  %100 = load ptr, ptr %4, align 8
  %101 = getelementptr inbounds %struct.mz_stream_s, ptr %100, i32 0, i32 3
  %102 = load ptr, ptr %101, align 8
  %103 = load ptr, ptr %4, align 8
  %104 = getelementptr inbounds %struct.mz_stream_s, ptr %103, i32 0, i32 3
  %105 = load ptr, ptr %104, align 8
  %106 = load i32, ptr %9, align 4
  %107 = call i32 @tinfl_decompress(ptr noundef %96, ptr noundef %99, ptr noundef %10, ptr noundef %102, ptr noundef %105, ptr noundef %11, i32 noundef %106)
  store i32 %107, ptr %13, align 4
  %108 = load i32, ptr %13, align 4
  %109 = load ptr, ptr %6, align 8
  %110 = getelementptr inbounds %struct.inflate_state, ptr %109, i32 0, i32 7
  store i32 %108, ptr %110, align 4
  %111 = load i64, ptr %10, align 8
  %112 = trunc i64 %111 to i32
  %113 = load ptr, ptr %4, align 8
  %114 = getelementptr inbounds %struct.mz_stream_s, ptr %113, i32 0, i32 0
  %115 = load ptr, ptr %114, align 8
  %116 = zext i32 %112 to i64
  %117 = getelementptr inbounds i8, ptr %115, i64 %116
  store ptr %117, ptr %114, align 8
  %118 = load i64, ptr %10, align 8
  %119 = trunc i64 %118 to i32
  %120 = load ptr, ptr %4, align 8
  %121 = getelementptr inbounds %struct.mz_stream_s, ptr %120, i32 0, i32 1
  %122 = load i32, ptr %121, align 8
  %123 = sub i32 %122, %119
  store i32 %123, ptr %121, align 8
  %124 = load i64, ptr %10, align 8
  %125 = trunc i64 %124 to i32
  %126 = zext i32 %125 to i64
  %127 = load ptr, ptr %4, align 8
  %128 = getelementptr inbounds %struct.mz_stream_s, ptr %127, i32 0, i32 2
  %129 = load i64, ptr %128, align 8
  %130 = add i64 %129, %126
  store i64 %130, ptr %128, align 8
  %131 = load ptr, ptr %6, align 8
  %132 = getelementptr inbounds %struct.inflate_state, ptr %131, i32 0, i32 0
  %133 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %132, i32 0, i32 7
  %134 = load i32, ptr %133, align 4
  %135 = zext i32 %134 to i64
  %136 = load ptr, ptr %4, align 8
  %137 = getelementptr inbounds %struct.mz_stream_s, ptr %136, i32 0, i32 12
  store i64 %135, ptr %137, align 8
  %138 = load i64, ptr %11, align 8
  %139 = trunc i64 %138 to i32
  %140 = load ptr, ptr %4, align 8
  %141 = getelementptr inbounds %struct.mz_stream_s, ptr %140, i32 0, i32 3
  %142 = load ptr, ptr %141, align 8
  %143 = zext i32 %139 to i64
  %144 = getelementptr inbounds i8, ptr %142, i64 %143
  store ptr %144, ptr %141, align 8
  %145 = load i64, ptr %11, align 8
  %146 = trunc i64 %145 to i32
  %147 = load ptr, ptr %4, align 8
  %148 = getelementptr inbounds %struct.mz_stream_s, ptr %147, i32 0, i32 4
  %149 = load i32, ptr %148, align 8
  %150 = sub i32 %149, %146
  store i32 %150, ptr %148, align 8
  %151 = load i64, ptr %11, align 8
  %152 = trunc i64 %151 to i32
  %153 = zext i32 %152 to i64
  %154 = load ptr, ptr %4, align 8
  %155 = getelementptr inbounds %struct.mz_stream_s, ptr %154, i32 0, i32 5
  %156 = load i64, ptr %155, align 8
  %157 = add i64 %156, %153
  store i64 %157, ptr %155, align 8
  %158 = load i32, ptr %13, align 4
  %159 = icmp slt i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %84
  store i32 -3, ptr %3, align 4
  br label %455

161:                                              ; preds = %84
  %162 = load i32, ptr %13, align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %161
  %165 = load ptr, ptr %6, align 8
  %166 = getelementptr inbounds %struct.inflate_state, ptr %165, i32 0, i32 7
  store i32 -1, ptr %166, align 4
  store i32 -5, ptr %3, align 4
  br label %455

167:                                              ; preds = %161
  br label %168

168:                                              ; preds = %167
  store i32 1, ptr %3, align 4
  br label %455

169:                                              ; preds = %81, %71
  %170 = load i32, ptr %5, align 4
  %171 = icmp ne i32 %170, 4
  br i1 %171, label %172, label %175

172:                                              ; preds = %169
  %173 = load i32, ptr %9, align 4
  %174 = or i32 %173, 2
  store i32 %174, ptr %9, align 4
  br label %175

175:                                              ; preds = %172, %169
  %176 = load ptr, ptr %6, align 8
  %177 = getelementptr inbounds %struct.inflate_state, ptr %176, i32 0, i32 2
  %178 = load i32, ptr %177, align 4
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %180, label %260

180:                                              ; preds = %175
  %181 = load ptr, ptr %6, align 8
  %182 = getelementptr inbounds %struct.inflate_state, ptr %181, i32 0, i32 2
  %183 = load i32, ptr %182, align 4
  %184 = load ptr, ptr %4, align 8
  %185 = getelementptr inbounds %struct.mz_stream_s, ptr %184, i32 0, i32 4
  %186 = load i32, ptr %185, align 8
  %187 = icmp ult i32 %183, %186
  br i1 %187, label %188, label %192

188:                                              ; preds = %180
  %189 = load ptr, ptr %6, align 8
  %190 = getelementptr inbounds %struct.inflate_state, ptr %189, i32 0, i32 2
  %191 = load i32, ptr %190, align 4
  br label %196

192:                                              ; preds = %180
  %193 = load ptr, ptr %4, align 8
  %194 = getelementptr inbounds %struct.mz_stream_s, ptr %193, i32 0, i32 4
  %195 = load i32, ptr %194, align 8
  br label %196

196:                                              ; preds = %192, %188
  %197 = phi i32 [ %191, %188 ], [ %195, %192 ]
  store i32 %197, ptr %7, align 4
  %198 = load ptr, ptr %4, align 8
  %199 = getelementptr inbounds %struct.mz_stream_s, ptr %198, i32 0, i32 3
  %200 = load ptr, ptr %199, align 8
  %201 = load ptr, ptr %6, align 8
  %202 = getelementptr inbounds %struct.inflate_state, ptr %201, i32 0, i32 6
  %203 = getelementptr inbounds [32768 x i8], ptr %202, i64 0, i64 0
  %204 = load ptr, ptr %6, align 8
  %205 = getelementptr inbounds %struct.inflate_state, ptr %204, i32 0, i32 1
  %206 = load i32, ptr %205, align 8
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds i8, ptr %203, i64 %207
  %209 = load i32, ptr %7, align 4
  %210 = zext i32 %209 to i64
  %211 = load ptr, ptr %4, align 8
  %212 = getelementptr inbounds %struct.mz_stream_s, ptr %211, i32 0, i32 3
  %213 = load ptr, ptr %212, align 8
  %214 = call i64 @llvm.objectsize.i64.p0(ptr %213, i1 false, i1 true, i1 false)
  %215 = call ptr @__memcpy_chk(ptr noundef %200, ptr noundef %208, i64 noundef %210, i64 noundef %214) #11
  %216 = load i32, ptr %7, align 4
  %217 = load ptr, ptr %4, align 8
  %218 = getelementptr inbounds %struct.mz_stream_s, ptr %217, i32 0, i32 3
  %219 = load ptr, ptr %218, align 8
  %220 = zext i32 %216 to i64
  %221 = getelementptr inbounds i8, ptr %219, i64 %220
  store ptr %221, ptr %218, align 8
  %222 = load i32, ptr %7, align 4
  %223 = load ptr, ptr %4, align 8
  %224 = getelementptr inbounds %struct.mz_stream_s, ptr %223, i32 0, i32 4
  %225 = load i32, ptr %224, align 8
  %226 = sub i32 %225, %222
  store i32 %226, ptr %224, align 8
  %227 = load i32, ptr %7, align 4
  %228 = zext i32 %227 to i64
  %229 = load ptr, ptr %4, align 8
  %230 = getelementptr inbounds %struct.mz_stream_s, ptr %229, i32 0, i32 5
  %231 = load i64, ptr %230, align 8
  %232 = add i64 %231, %228
  store i64 %232, ptr %230, align 8
  %233 = load i32, ptr %7, align 4
  %234 = load ptr, ptr %6, align 8
  %235 = getelementptr inbounds %struct.inflate_state, ptr %234, i32 0, i32 2
  %236 = load i32, ptr %235, align 4
  %237 = sub i32 %236, %233
  store i32 %237, ptr %235, align 4
  %238 = load ptr, ptr %6, align 8
  %239 = getelementptr inbounds %struct.inflate_state, ptr %238, i32 0, i32 1
  %240 = load i32, ptr %239, align 8
  %241 = load i32, ptr %7, align 4
  %242 = add i32 %240, %241
  %243 = and i32 %242, 32767
  %244 = load ptr, ptr %6, align 8
  %245 = getelementptr inbounds %struct.inflate_state, ptr %244, i32 0, i32 1
  store i32 %243, ptr %245, align 8
  %246 = load ptr, ptr %6, align 8
  %247 = getelementptr inbounds %struct.inflate_state, ptr %246, i32 0, i32 7
  %248 = load i32, ptr %247, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %256

250:                                              ; preds = %196
  %251 = load ptr, ptr %6, align 8
  %252 = getelementptr inbounds %struct.inflate_state, ptr %251, i32 0, i32 2
  %253 = load i32, ptr %252, align 4
  %254 = icmp ne i32 %253, 0
  %255 = xor i1 %254, true
  br label %256

256:                                              ; preds = %250, %196
  %257 = phi i1 [ false, %196 ], [ %255, %250 ]
  %258 = zext i1 %257 to i64
  %259 = select i1 %257, i32 1, i32 0
  store i32 %259, ptr %3, align 4
  br label %455

260:                                              ; preds = %175
  br label %261

261:                                              ; preds = %441, %260
  %262 = load ptr, ptr %4, align 8
  %263 = getelementptr inbounds %struct.mz_stream_s, ptr %262, i32 0, i32 1
  %264 = load i32, ptr %263, align 8
  %265 = zext i32 %264 to i64
  store i64 %265, ptr %10, align 8
  %266 = load ptr, ptr %6, align 8
  %267 = getelementptr inbounds %struct.inflate_state, ptr %266, i32 0, i32 1
  %268 = load i32, ptr %267, align 8
  %269 = sub i32 32768, %268
  %270 = zext i32 %269 to i64
  store i64 %270, ptr %11, align 8
  %271 = load ptr, ptr %6, align 8
  %272 = getelementptr inbounds %struct.inflate_state, ptr %271, i32 0, i32 0
  %273 = load ptr, ptr %4, align 8
  %274 = getelementptr inbounds %struct.mz_stream_s, ptr %273, i32 0, i32 0
  %275 = load ptr, ptr %274, align 8
  %276 = load ptr, ptr %6, align 8
  %277 = getelementptr inbounds %struct.inflate_state, ptr %276, i32 0, i32 6
  %278 = getelementptr inbounds [32768 x i8], ptr %277, i64 0, i64 0
  %279 = load ptr, ptr %6, align 8
  %280 = getelementptr inbounds %struct.inflate_state, ptr %279, i32 0, i32 6
  %281 = getelementptr inbounds [32768 x i8], ptr %280, i64 0, i64 0
  %282 = load ptr, ptr %6, align 8
  %283 = getelementptr inbounds %struct.inflate_state, ptr %282, i32 0, i32 1
  %284 = load i32, ptr %283, align 8
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds i8, ptr %281, i64 %285
  %287 = load i32, ptr %9, align 4
  %288 = call i32 @tinfl_decompress(ptr noundef %272, ptr noundef %275, ptr noundef %10, ptr noundef %278, ptr noundef %286, ptr noundef %11, i32 noundef %287)
  store i32 %288, ptr %13, align 4
  %289 = load i32, ptr %13, align 4
  %290 = load ptr, ptr %6, align 8
  %291 = getelementptr inbounds %struct.inflate_state, ptr %290, i32 0, i32 7
  store i32 %289, ptr %291, align 4
  %292 = load i64, ptr %10, align 8
  %293 = trunc i64 %292 to i32
  %294 = load ptr, ptr %4, align 8
  %295 = getelementptr inbounds %struct.mz_stream_s, ptr %294, i32 0, i32 0
  %296 = load ptr, ptr %295, align 8
  %297 = zext i32 %293 to i64
  %298 = getelementptr inbounds i8, ptr %296, i64 %297
  store ptr %298, ptr %295, align 8
  %299 = load i64, ptr %10, align 8
  %300 = trunc i64 %299 to i32
  %301 = load ptr, ptr %4, align 8
  %302 = getelementptr inbounds %struct.mz_stream_s, ptr %301, i32 0, i32 1
  %303 = load i32, ptr %302, align 8
  %304 = sub i32 %303, %300
  store i32 %304, ptr %302, align 8
  %305 = load i64, ptr %10, align 8
  %306 = trunc i64 %305 to i32
  %307 = zext i32 %306 to i64
  %308 = load ptr, ptr %4, align 8
  %309 = getelementptr inbounds %struct.mz_stream_s, ptr %308, i32 0, i32 2
  %310 = load i64, ptr %309, align 8
  %311 = add i64 %310, %307
  store i64 %311, ptr %309, align 8
  %312 = load ptr, ptr %6, align 8
  %313 = getelementptr inbounds %struct.inflate_state, ptr %312, i32 0, i32 0
  %314 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %313, i32 0, i32 7
  %315 = load i32, ptr %314, align 4
  %316 = zext i32 %315 to i64
  %317 = load ptr, ptr %4, align 8
  %318 = getelementptr inbounds %struct.mz_stream_s, ptr %317, i32 0, i32 12
  store i64 %316, ptr %318, align 8
  %319 = load i64, ptr %11, align 8
  %320 = trunc i64 %319 to i32
  %321 = load ptr, ptr %6, align 8
  %322 = getelementptr inbounds %struct.inflate_state, ptr %321, i32 0, i32 2
  store i32 %320, ptr %322, align 4
  %323 = load ptr, ptr %6, align 8
  %324 = getelementptr inbounds %struct.inflate_state, ptr %323, i32 0, i32 2
  %325 = load i32, ptr %324, align 4
  %326 = load ptr, ptr %4, align 8
  %327 = getelementptr inbounds %struct.mz_stream_s, ptr %326, i32 0, i32 4
  %328 = load i32, ptr %327, align 8
  %329 = icmp ult i32 %325, %328
  br i1 %329, label %330, label %334

330:                                              ; preds = %261
  %331 = load ptr, ptr %6, align 8
  %332 = getelementptr inbounds %struct.inflate_state, ptr %331, i32 0, i32 2
  %333 = load i32, ptr %332, align 4
  br label %338

334:                                              ; preds = %261
  %335 = load ptr, ptr %4, align 8
  %336 = getelementptr inbounds %struct.mz_stream_s, ptr %335, i32 0, i32 4
  %337 = load i32, ptr %336, align 8
  br label %338

338:                                              ; preds = %334, %330
  %339 = phi i32 [ %333, %330 ], [ %337, %334 ]
  store i32 %339, ptr %7, align 4
  %340 = load ptr, ptr %4, align 8
  %341 = getelementptr inbounds %struct.mz_stream_s, ptr %340, i32 0, i32 3
  %342 = load ptr, ptr %341, align 8
  %343 = load ptr, ptr %6, align 8
  %344 = getelementptr inbounds %struct.inflate_state, ptr %343, i32 0, i32 6
  %345 = getelementptr inbounds [32768 x i8], ptr %344, i64 0, i64 0
  %346 = load ptr, ptr %6, align 8
  %347 = getelementptr inbounds %struct.inflate_state, ptr %346, i32 0, i32 1
  %348 = load i32, ptr %347, align 8
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds i8, ptr %345, i64 %349
  %351 = load i32, ptr %7, align 4
  %352 = zext i32 %351 to i64
  %353 = load ptr, ptr %4, align 8
  %354 = getelementptr inbounds %struct.mz_stream_s, ptr %353, i32 0, i32 3
  %355 = load ptr, ptr %354, align 8
  %356 = call i64 @llvm.objectsize.i64.p0(ptr %355, i1 false, i1 true, i1 false)
  %357 = call ptr @__memcpy_chk(ptr noundef %342, ptr noundef %350, i64 noundef %352, i64 noundef %356) #11
  %358 = load i32, ptr %7, align 4
  %359 = load ptr, ptr %4, align 8
  %360 = getelementptr inbounds %struct.mz_stream_s, ptr %359, i32 0, i32 3
  %361 = load ptr, ptr %360, align 8
  %362 = zext i32 %358 to i64
  %363 = getelementptr inbounds i8, ptr %361, i64 %362
  store ptr %363, ptr %360, align 8
  %364 = load i32, ptr %7, align 4
  %365 = load ptr, ptr %4, align 8
  %366 = getelementptr inbounds %struct.mz_stream_s, ptr %365, i32 0, i32 4
  %367 = load i32, ptr %366, align 8
  %368 = sub i32 %367, %364
  store i32 %368, ptr %366, align 8
  %369 = load i32, ptr %7, align 4
  %370 = zext i32 %369 to i64
  %371 = load ptr, ptr %4, align 8
  %372 = getelementptr inbounds %struct.mz_stream_s, ptr %371, i32 0, i32 5
  %373 = load i64, ptr %372, align 8
  %374 = add i64 %373, %370
  store i64 %374, ptr %372, align 8
  %375 = load i32, ptr %7, align 4
  %376 = load ptr, ptr %6, align 8
  %377 = getelementptr inbounds %struct.inflate_state, ptr %376, i32 0, i32 2
  %378 = load i32, ptr %377, align 4
  %379 = sub i32 %378, %375
  store i32 %379, ptr %377, align 4
  %380 = load ptr, ptr %6, align 8
  %381 = getelementptr inbounds %struct.inflate_state, ptr %380, i32 0, i32 1
  %382 = load i32, ptr %381, align 8
  %383 = load i32, ptr %7, align 4
  %384 = add i32 %382, %383
  %385 = and i32 %384, 32767
  %386 = load ptr, ptr %6, align 8
  %387 = getelementptr inbounds %struct.inflate_state, ptr %386, i32 0, i32 1
  store i32 %385, ptr %387, align 8
  %388 = load i32, ptr %13, align 4
  %389 = icmp slt i32 %388, 0
  br i1 %389, label %390, label %391

390:                                              ; preds = %338
  store i32 -3, ptr %3, align 4
  br label %455

391:                                              ; preds = %338
  %392 = load i32, ptr %13, align 4
  %393 = icmp eq i32 %392, 1
  br i1 %393, label %394, label %398

394:                                              ; preds = %391
  %395 = load i64, ptr %12, align 8
  %396 = icmp ne i64 %395, 0
  br i1 %396, label %398, label %397

397:                                              ; preds = %394
  store i32 -5, ptr %3, align 4
  br label %455

398:                                              ; preds = %394, %391
  %399 = load i32, ptr %5, align 4
  %400 = icmp eq i32 %399, 4
  br i1 %400, label %401, label %419

401:                                              ; preds = %398
  %402 = load i32, ptr %13, align 4
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %411

404:                                              ; preds = %401
  %405 = load ptr, ptr %6, align 8
  %406 = getelementptr inbounds %struct.inflate_state, ptr %405, i32 0, i32 2
  %407 = load i32, ptr %406, align 4
  %408 = icmp ne i32 %407, 0
  %409 = zext i1 %408 to i64
  %410 = select i1 %408, i32 -5, i32 1
  store i32 %410, ptr %3, align 4
  br label %455

411:                                              ; preds = %401
  %412 = load ptr, ptr %4, align 8
  %413 = getelementptr inbounds %struct.mz_stream_s, ptr %412, i32 0, i32 4
  %414 = load i32, ptr %413, align 8
  %415 = icmp ne i32 %414, 0
  br i1 %415, label %417, label %416

416:                                              ; preds = %411
  store i32 -5, ptr %3, align 4
  br label %455

417:                                              ; preds = %411
  br label %418

418:                                              ; preds = %417
  br label %439

419:                                              ; preds = %398
  %420 = load i32, ptr %13, align 4
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %437, label %422

422:                                              ; preds = %419
  %423 = load ptr, ptr %4, align 8
  %424 = getelementptr inbounds %struct.mz_stream_s, ptr %423, i32 0, i32 1
  %425 = load i32, ptr %424, align 8
  %426 = icmp ne i32 %425, 0
  br i1 %426, label %427, label %437

427:                                              ; preds = %422
  %428 = load ptr, ptr %4, align 8
  %429 = getelementptr inbounds %struct.mz_stream_s, ptr %428, i32 0, i32 4
  %430 = load i32, ptr %429, align 8
  %431 = icmp ne i32 %430, 0
  br i1 %431, label %432, label %437

432:                                              ; preds = %427
  %433 = load ptr, ptr %6, align 8
  %434 = getelementptr inbounds %struct.inflate_state, ptr %433, i32 0, i32 2
  %435 = load i32, ptr %434, align 4
  %436 = icmp ne i32 %435, 0
  br i1 %436, label %437, label %438

437:                                              ; preds = %432, %427, %422, %419
  br label %442

438:                                              ; preds = %432
  br label %439

439:                                              ; preds = %438, %418
  br label %440

440:                                              ; preds = %439
  br label %441

441:                                              ; preds = %440
  br label %261

442:                                              ; preds = %437
  %443 = load i32, ptr %13, align 4
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %451

445:                                              ; preds = %442
  %446 = load ptr, ptr %6, align 8
  %447 = getelementptr inbounds %struct.inflate_state, ptr %446, i32 0, i32 2
  %448 = load i32, ptr %447, align 4
  %449 = icmp ne i32 %448, 0
  %450 = xor i1 %449, true
  br label %451

451:                                              ; preds = %445, %442
  %452 = phi i1 [ false, %442 ], [ %450, %445 ]
  %453 = zext i1 %452 to i64
  %454 = select i1 %452, i32 1, i32 0
  store i32 %454, ptr %3, align 4
  br label %455

455:                                              ; preds = %451, %416, %404, %397, %390, %256, %168, %164, %160, %70, %61, %35, %21
  %456 = load i32, ptr %3, align 4
  ret i32 %456
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @tinfl_decompress(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, i32 noundef %6) #0 {
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca [3 x ptr], align 16
  %17 = alloca [3 x ptr], align 16
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i64, align 8
  %24 = alloca ptr, align 8
  %25 = alloca ptr, align 8
  %26 = alloca ptr, align 8
  %27 = alloca ptr, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i64, align 8
  %35 = alloca ptr, align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca ptr, align 8
  %43 = alloca ptr, align 8
  %44 = alloca ptr, align 8
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca [17 x i32], align 16
  %51 = alloca [16 x i32], align 16
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i16, align 2
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca ptr, align 8
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  %69 = alloca i32, align 4
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  %72 = alloca i32, align 4
  %73 = alloca i32, align 4
  %74 = alloca i32, align 4
  %75 = alloca i32, align 4
  %76 = alloca i32, align 4
  %77 = alloca i32, align 4
  %78 = alloca ptr, align 8
  %79 = alloca i64, align 8
  %80 = alloca i32, align 4
  %81 = alloca i32, align 4
  %82 = alloca i32, align 4
  %83 = alloca i64, align 8
  store ptr %0, ptr %9, align 8
  store ptr %1, ptr %10, align 8
  store ptr %2, ptr %11, align 8
  store ptr %3, ptr %12, align 8
  store ptr %4, ptr %13, align 8
  store ptr %5, ptr %14, align 8
  store i32 %6, ptr %15, align 4
  store i32 -1, ptr %18, align 4
  %84 = load ptr, ptr %10, align 8
  store ptr %84, ptr %24, align 8
  %85 = load ptr, ptr %10, align 8
  %86 = load ptr, ptr %11, align 8
  %87 = load i64, ptr %86, align 8
  %88 = getelementptr inbounds i8, ptr %85, i64 %87
  store ptr %88, ptr %25, align 8
  %89 = load ptr, ptr %13, align 8
  store ptr %89, ptr %26, align 8
  %90 = load ptr, ptr %13, align 8
  %91 = icmp ne ptr %90, null
  br i1 %91, label %92, label %97

92:                                               ; preds = %7
  %93 = load ptr, ptr %13, align 8
  %94 = load ptr, ptr %14, align 8
  %95 = load i64, ptr %94, align 8
  %96 = getelementptr inbounds i8, ptr %93, i64 %95
  br label %98

97:                                               ; preds = %7
  br label %98

98:                                               ; preds = %97, %92
  %99 = phi ptr [ %96, %92 ], [ null, %97 ]
  store ptr %99, ptr %27, align 8
  %100 = load i32, ptr %15, align 4
  %101 = and i32 %100, 4
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %98
  br label %114

104:                                              ; preds = %98
  %105 = load ptr, ptr %13, align 8
  %106 = load ptr, ptr %12, align 8
  %107 = ptrtoint ptr %105 to i64
  %108 = ptrtoint ptr %106 to i64
  %109 = sub i64 %107, %108
  %110 = load ptr, ptr %14, align 8
  %111 = load i64, ptr %110, align 8
  %112 = add i64 %109, %111
  %113 = sub i64 %112, 1
  br label %114

114:                                              ; preds = %104, %103
  %115 = phi i64 [ -1, %103 ], [ %113, %104 ]
  store i64 %115, ptr %28, align 8
  %116 = load i64, ptr %28, align 8
  %117 = add i64 %116, 1
  %118 = load i64, ptr %28, align 8
  %119 = and i64 %117, %118
  %120 = icmp ne i64 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %114
  %122 = load ptr, ptr %13, align 8
  %123 = load ptr, ptr %12, align 8
  %124 = icmp ult ptr %122, %123
  br i1 %124, label %125, label %128

125:                                              ; preds = %121, %114
  %126 = load ptr, ptr %14, align 8
  store i64 0, ptr %126, align 8
  %127 = load ptr, ptr %11, align 8
  store i64 0, ptr %127, align 8
  store i32 -3, ptr %8, align 4
  br label %2874

128:                                              ; preds = %121
  %129 = load ptr, ptr %9, align 8
  %130 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %129, i32 0, i32 15
  %131 = getelementptr inbounds [576 x i16], ptr %130, i64 0, i64 0
  %132 = getelementptr inbounds [3 x ptr], ptr %16, i64 0, i64 0
  store ptr %131, ptr %132, align 16
  %133 = load ptr, ptr %9, align 8
  %134 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %133, i32 0, i32 16
  %135 = getelementptr inbounds [64 x i16], ptr %134, i64 0, i64 0
  %136 = getelementptr inbounds [3 x ptr], ptr %16, i64 0, i64 1
  store ptr %135, ptr %136, align 8
  %137 = load ptr, ptr %9, align 8
  %138 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %137, i32 0, i32 17
  %139 = getelementptr inbounds [38 x i16], ptr %138, i64 0, i64 0
  %140 = getelementptr inbounds [3 x ptr], ptr %16, i64 0, i64 2
  store ptr %139, ptr %140, align 16
  %141 = load ptr, ptr %9, align 8
  %142 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %141, i32 0, i32 18
  %143 = getelementptr inbounds [288 x i8], ptr %142, i64 0, i64 0
  %144 = getelementptr inbounds [3 x ptr], ptr %17, i64 0, i64 0
  store ptr %143, ptr %144, align 16
  %145 = load ptr, ptr %9, align 8
  %146 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %145, i32 0, i32 19
  %147 = getelementptr inbounds [32 x i8], ptr %146, i64 0, i64 0
  %148 = getelementptr inbounds [3 x ptr], ptr %17, i64 0, i64 1
  store ptr %147, ptr %148, align 8
  %149 = load ptr, ptr %9, align 8
  %150 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %149, i32 0, i32 20
  %151 = getelementptr inbounds [19 x i8], ptr %150, i64 0, i64 0
  %152 = getelementptr inbounds [3 x ptr], ptr %17, i64 0, i64 2
  store ptr %151, ptr %152, align 16
  %153 = load ptr, ptr %9, align 8
  %154 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %153, i32 0, i32 1
  %155 = load i32, ptr %154, align 4
  store i32 %155, ptr %19, align 4
  %156 = load ptr, ptr %9, align 8
  %157 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %156, i32 0, i32 12
  %158 = load i64, ptr %157, align 8
  store i64 %158, ptr %23, align 8
  %159 = load ptr, ptr %9, align 8
  %160 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %159, i32 0, i32 8
  %161 = load i32, ptr %160, align 8
  store i32 %161, ptr %20, align 4
  %162 = load ptr, ptr %9, align 8
  %163 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %162, i32 0, i32 9
  %164 = load i32, ptr %163, align 4
  store i32 %164, ptr %21, align 4
  %165 = load ptr, ptr %9, align 8
  %166 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %165, i32 0, i32 10
  %167 = load i32, ptr %166, align 8
  store i32 %167, ptr %22, align 4
  %168 = load ptr, ptr %9, align 8
  %169 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %168, i32 0, i32 13
  %170 = load i64, ptr %169, align 8
  store i64 %170, ptr %29, align 8
  %171 = load ptr, ptr %9, align 8
  %172 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %171, i32 0, i32 0
  %173 = load i32, ptr %172, align 8
  switch i32 %173, label %2655 [
    i32 0, label %174
    i32 1, label %201
    i32 2, label %225
    i32 36, label %296
    i32 3, label %321
    i32 5, label %385
    i32 6, label %445
    i32 7, label %495
    i32 39, label %544
    i32 51, label %576
    i32 52, label %614
    i32 9, label %636
    i32 38, label %652
    i32 10, label %742
    i32 11, label %837
    i32 14, label %947
    i32 35, label %1090
    i32 16, label %1345
    i32 17, label %1459
    i32 18, label %1489
    i32 21, label %1586
    i32 23, label %1735
    i32 24, label %1838
    i32 25, label %2030
    i32 26, label %2156
    i32 27, label %2280
    i32 37, label %2347
    i32 53, label %2387
    i32 32, label %2484
    i32 41, label %2580
    i32 42, label %2625
    i32 34, label %2652
  ]

174:                                              ; preds = %128
  %175 = load ptr, ptr %9, align 8
  %176 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %175, i32 0, i32 3
  store i32 0, ptr %176, align 4
  %177 = load ptr, ptr %9, align 8
  %178 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %177, i32 0, i32 2
  store i32 0, ptr %178, align 8
  store i32 0, ptr %22, align 4
  store i32 0, ptr %21, align 4
  store i32 0, ptr %20, align 4
  store i32 0, ptr %19, align 4
  store i64 0, ptr %23, align 8
  %179 = load ptr, ptr %9, align 8
  %180 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %179, i32 0, i32 7
  store i32 1, ptr %180, align 4
  %181 = load ptr, ptr %9, align 8
  %182 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %181, i32 0, i32 4
  store i32 1, ptr %182, align 8
  %183 = load i32, ptr %15, align 4
  %184 = and i32 %183, 1
  %185 = icmp ne i32 %184, 0
  br i1 %185, label %186, label %300

186:                                              ; preds = %174
  br label %187

187:                                              ; preds = %186
  br label %188

188:                                              ; preds = %202, %187
  %189 = load ptr, ptr %24, align 8
  %190 = load ptr, ptr %25, align 8
  %191 = icmp uge ptr %189, %190
  br i1 %191, label %192, label %203

192:                                              ; preds = %188
  br label %193

193:                                              ; preds = %192
  %194 = load i32, ptr %15, align 4
  %195 = and i32 %194, 2
  %196 = icmp ne i32 %195, 0
  %197 = zext i1 %196 to i64
  %198 = select i1 %196, i32 1, i32 -4
  store i32 %198, ptr %18, align 4
  %199 = load ptr, ptr %9, align 8
  %200 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %199, i32 0, i32 0
  store i32 1, ptr %200, align 8
  br label %2656

201:                                              ; preds = %128
  br label %202

202:                                              ; preds = %201
  br label %188, !llvm.loop !11

203:                                              ; preds = %188
  %204 = load ptr, ptr %24, align 8
  %205 = getelementptr inbounds i8, ptr %204, i32 1
  store ptr %205, ptr %24, align 8
  %206 = load i8, ptr %204, align 1
  %207 = zext i8 %206 to i32
  %208 = load ptr, ptr %9, align 8
  %209 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %208, i32 0, i32 2
  store i32 %207, ptr %209, align 8
  br label %210

210:                                              ; preds = %203
  br label %211

211:                                              ; preds = %210
  br label %212

212:                                              ; preds = %226, %211
  %213 = load ptr, ptr %24, align 8
  %214 = load ptr, ptr %25, align 8
  %215 = icmp uge ptr %213, %214
  br i1 %215, label %216, label %227

216:                                              ; preds = %212
  br label %217

217:                                              ; preds = %216
  %218 = load i32, ptr %15, align 4
  %219 = and i32 %218, 2
  %220 = icmp ne i32 %219, 0
  %221 = zext i1 %220 to i64
  %222 = select i1 %220, i32 1, i32 -4
  store i32 %222, ptr %18, align 4
  %223 = load ptr, ptr %9, align 8
  %224 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %223, i32 0, i32 0
  store i32 2, ptr %224, align 8
  br label %2656

225:                                              ; preds = %128
  br label %226

226:                                              ; preds = %225
  br label %212, !llvm.loop !12

227:                                              ; preds = %212
  %228 = load ptr, ptr %24, align 8
  %229 = getelementptr inbounds i8, ptr %228, i32 1
  store ptr %229, ptr %24, align 8
  %230 = load i8, ptr %228, align 1
  %231 = zext i8 %230 to i32
  %232 = load ptr, ptr %9, align 8
  %233 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %232, i32 0, i32 3
  store i32 %231, ptr %233, align 4
  br label %234

234:                                              ; preds = %227
  %235 = load ptr, ptr %9, align 8
  %236 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %235, i32 0, i32 2
  %237 = load i32, ptr %236, align 8
  %238 = mul i32 %237, 256
  %239 = load ptr, ptr %9, align 8
  %240 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %239, i32 0, i32 3
  %241 = load i32, ptr %240, align 4
  %242 = add i32 %238, %241
  %243 = urem i32 %242, 31
  %244 = icmp ne i32 %243, 0
  br i1 %244, label %257, label %245

245:                                              ; preds = %234
  %246 = load ptr, ptr %9, align 8
  %247 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %246, i32 0, i32 3
  %248 = load i32, ptr %247, align 4
  %249 = and i32 %248, 32
  %250 = icmp ne i32 %249, 0
  br i1 %250, label %257, label %251

251:                                              ; preds = %245
  %252 = load ptr, ptr %9, align 8
  %253 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %252, i32 0, i32 2
  %254 = load i32, ptr %253, align 8
  %255 = and i32 %254, 15
  %256 = icmp ne i32 %255, 8
  br label %257

257:                                              ; preds = %251, %245, %234
  %258 = phi i1 [ true, %245 ], [ true, %234 ], [ %256, %251 ]
  %259 = zext i1 %258 to i32
  store i32 %259, ptr %21, align 4
  %260 = load i32, ptr %15, align 4
  %261 = and i32 %260, 4
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %287, label %263

263:                                              ; preds = %257
  %264 = load ptr, ptr %9, align 8
  %265 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %264, i32 0, i32 2
  %266 = load i32, ptr %265, align 8
  %267 = lshr i32 %266, 4
  %268 = add i32 8, %267
  %269 = shl i32 1, %268
  %270 = icmp ugt i32 %269, 32768
  br i1 %270, label %282, label %271

271:                                              ; preds = %263
  %272 = load i64, ptr %28, align 8
  %273 = add i64 %272, 1
  %274 = load ptr, ptr %9, align 8
  %275 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %274, i32 0, i32 2
  %276 = load i32, ptr %275, align 8
  %277 = lshr i32 %276, 4
  %278 = add i32 8, %277
  %279 = zext i32 %278 to i64
  %280 = shl i64 1, %279
  %281 = icmp ult i64 %273, %280
  br label %282

282:                                              ; preds = %271, %263
  %283 = phi i1 [ true, %263 ], [ %281, %271 ]
  %284 = zext i1 %283 to i32
  %285 = load i32, ptr %21, align 4
  %286 = or i32 %285, %284
  store i32 %286, ptr %21, align 4
  br label %287

287:                                              ; preds = %282, %257
  %288 = load i32, ptr %21, align 4
  %289 = icmp ne i32 %288, 0
  br i1 %289, label %290, label %299

290:                                              ; preds = %287
  br label %291

291:                                              ; preds = %290
  br label %292

292:                                              ; preds = %297, %291
  br label %293

293:                                              ; preds = %292
  store i32 -1, ptr %18, align 4
  %294 = load ptr, ptr %9, align 8
  %295 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %294, i32 0, i32 0
  store i32 36, ptr %295, align 8
  br label %2656

296:                                              ; preds = %128
  br label %297

297:                                              ; preds = %296
  br label %292

298:                                              ; No predecessors!
  br label %299

299:                                              ; preds = %298, %287
  br label %300

300:                                              ; preds = %299, %174
  br label %301

301:                                              ; preds = %2455, %300
  br label %302

302:                                              ; preds = %301
  %303 = load i32, ptr %19, align 4
  %304 = icmp ult i32 %303, 3
  br i1 %304, label %305, label %342

305:                                              ; preds = %302
  br label %306

306:                                              ; preds = %338, %305
  br label %307

307:                                              ; preds = %306
  br label %308

308:                                              ; preds = %322, %307
  %309 = load ptr, ptr %24, align 8
  %310 = load ptr, ptr %25, align 8
  %311 = icmp uge ptr %309, %310
  br i1 %311, label %312, label %323

312:                                              ; preds = %308
  br label %313

313:                                              ; preds = %312
  %314 = load i32, ptr %15, align 4
  %315 = and i32 %314, 2
  %316 = icmp ne i32 %315, 0
  %317 = zext i1 %316 to i64
  %318 = select i1 %316, i32 1, i32 -4
  store i32 %318, ptr %18, align 4
  %319 = load ptr, ptr %9, align 8
  %320 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %319, i32 0, i32 0
  store i32 3, ptr %320, align 8
  br label %2656

321:                                              ; preds = %128
  br label %322

322:                                              ; preds = %321
  br label %308, !llvm.loop !13

323:                                              ; preds = %308
  %324 = load ptr, ptr %24, align 8
  %325 = getelementptr inbounds i8, ptr %324, i32 1
  store ptr %325, ptr %24, align 8
  %326 = load i8, ptr %324, align 1
  %327 = zext i8 %326 to i32
  store i32 %327, ptr %30, align 4
  br label %328

328:                                              ; preds = %323
  %329 = load i32, ptr %30, align 4
  %330 = zext i32 %329 to i64
  %331 = load i32, ptr %19, align 4
  %332 = zext i32 %331 to i64
  %333 = shl i64 %330, %332
  %334 = load i64, ptr %23, align 8
  %335 = or i64 %334, %333
  store i64 %335, ptr %23, align 8
  %336 = load i32, ptr %19, align 4
  %337 = add i32 %336, 8
  store i32 %337, ptr %19, align 4
  br label %338

338:                                              ; preds = %328
  %339 = load i32, ptr %19, align 4
  %340 = icmp ult i32 %339, 3
  br i1 %340, label %306, label %341, !llvm.loop !14

341:                                              ; preds = %338
  br label %342

342:                                              ; preds = %341, %302
  %343 = load i64, ptr %23, align 8
  %344 = and i64 %343, 7
  %345 = trunc i64 %344 to i32
  %346 = load ptr, ptr %9, align 8
  %347 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %346, i32 0, i32 5
  store i32 %345, ptr %347, align 4
  %348 = load i64, ptr %23, align 8
  %349 = lshr i64 %348, 3
  store i64 %349, ptr %23, align 8
  %350 = load i32, ptr %19, align 4
  %351 = sub i32 %350, 3
  store i32 %351, ptr %19, align 4
  br label %352

352:                                              ; preds = %342
  %353 = load ptr, ptr %9, align 8
  %354 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %353, i32 0, i32 5
  %355 = load i32, ptr %354, align 4
  %356 = lshr i32 %355, 1
  %357 = load ptr, ptr %9, align 8
  %358 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %357, i32 0, i32 6
  store i32 %356, ptr %358, align 8
  %359 = load ptr, ptr %9, align 8
  %360 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %359, i32 0, i32 6
  %361 = load i32, ptr %360, align 8
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %731

363:                                              ; preds = %352
  br label %364

364:                                              ; preds = %363
  %365 = load i32, ptr %19, align 4
  %366 = load i32, ptr %19, align 4
  %367 = and i32 %366, 7
  %368 = icmp ult i32 %365, %367
  br i1 %368, label %369, label %408

369:                                              ; preds = %364
  br label %370

370:                                              ; preds = %402, %369
  br label %371

371:                                              ; preds = %370
  br label %372

372:                                              ; preds = %386, %371
  %373 = load ptr, ptr %24, align 8
  %374 = load ptr, ptr %25, align 8
  %375 = icmp uge ptr %373, %374
  br i1 %375, label %376, label %387

376:                                              ; preds = %372
  br label %377

377:                                              ; preds = %376
  %378 = load i32, ptr %15, align 4
  %379 = and i32 %378, 2
  %380 = icmp ne i32 %379, 0
  %381 = zext i1 %380 to i64
  %382 = select i1 %380, i32 1, i32 -4
  store i32 %382, ptr %18, align 4
  %383 = load ptr, ptr %9, align 8
  %384 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %383, i32 0, i32 0
  store i32 5, ptr %384, align 8
  br label %2656

385:                                              ; preds = %128
  br label %386

386:                                              ; preds = %385
  br label %372, !llvm.loop !15

387:                                              ; preds = %372
  %388 = load ptr, ptr %24, align 8
  %389 = getelementptr inbounds i8, ptr %388, i32 1
  store ptr %389, ptr %24, align 8
  %390 = load i8, ptr %388, align 1
  %391 = zext i8 %390 to i32
  store i32 %391, ptr %31, align 4
  br label %392

392:                                              ; preds = %387
  %393 = load i32, ptr %31, align 4
  %394 = zext i32 %393 to i64
  %395 = load i32, ptr %19, align 4
  %396 = zext i32 %395 to i64
  %397 = shl i64 %394, %396
  %398 = load i64, ptr %23, align 8
  %399 = or i64 %398, %397
  store i64 %399, ptr %23, align 8
  %400 = load i32, ptr %19, align 4
  %401 = add i32 %400, 8
  store i32 %401, ptr %19, align 4
  br label %402

402:                                              ; preds = %392
  %403 = load i32, ptr %19, align 4
  %404 = load i32, ptr %19, align 4
  %405 = and i32 %404, 7
  %406 = icmp ult i32 %403, %405
  br i1 %406, label %370, label %407, !llvm.loop !16

407:                                              ; preds = %402
  br label %408

408:                                              ; preds = %407, %364
  %409 = load i32, ptr %19, align 4
  %410 = and i32 %409, 7
  %411 = load i64, ptr %23, align 8
  %412 = zext i32 %410 to i64
  %413 = lshr i64 %411, %412
  store i64 %413, ptr %23, align 8
  %414 = load i32, ptr %19, align 4
  %415 = and i32 %414, 7
  %416 = load i32, ptr %19, align 4
  %417 = sub i32 %416, %415
  store i32 %417, ptr %19, align 4
  br label %418

418:                                              ; preds = %408
  store i32 0, ptr %21, align 4
  br label %419

419:                                              ; preds = %508, %418
  %420 = load i32, ptr %21, align 4
  %421 = icmp ult i32 %420, 4
  br i1 %421, label %422, label %511

422:                                              ; preds = %419
  %423 = load i32, ptr %19, align 4
  %424 = icmp ne i32 %423, 0
  br i1 %424, label %425, label %480

425:                                              ; preds = %422
  br label %426

426:                                              ; preds = %425
  %427 = load i32, ptr %19, align 4
  %428 = icmp ult i32 %427, 8
  br i1 %428, label %429, label %466

429:                                              ; preds = %426
  br label %430

430:                                              ; preds = %462, %429
  br label %431

431:                                              ; preds = %430
  br label %432

432:                                              ; preds = %446, %431
  %433 = load ptr, ptr %24, align 8
  %434 = load ptr, ptr %25, align 8
  %435 = icmp uge ptr %433, %434
  br i1 %435, label %436, label %447

436:                                              ; preds = %432
  br label %437

437:                                              ; preds = %436
  %438 = load i32, ptr %15, align 4
  %439 = and i32 %438, 2
  %440 = icmp ne i32 %439, 0
  %441 = zext i1 %440 to i64
  %442 = select i1 %440, i32 1, i32 -4
  store i32 %442, ptr %18, align 4
  %443 = load ptr, ptr %9, align 8
  %444 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %443, i32 0, i32 0
  store i32 6, ptr %444, align 8
  br label %2656

445:                                              ; preds = %128
  br label %446

446:                                              ; preds = %445
  br label %432, !llvm.loop !17

447:                                              ; preds = %432
  %448 = load ptr, ptr %24, align 8
  %449 = getelementptr inbounds i8, ptr %448, i32 1
  store ptr %449, ptr %24, align 8
  %450 = load i8, ptr %448, align 1
  %451 = zext i8 %450 to i32
  store i32 %451, ptr %32, align 4
  br label %452

452:                                              ; preds = %447
  %453 = load i32, ptr %32, align 4
  %454 = zext i32 %453 to i64
  %455 = load i32, ptr %19, align 4
  %456 = zext i32 %455 to i64
  %457 = shl i64 %454, %456
  %458 = load i64, ptr %23, align 8
  %459 = or i64 %458, %457
  store i64 %459, ptr %23, align 8
  %460 = load i32, ptr %19, align 4
  %461 = add i32 %460, 8
  store i32 %461, ptr %19, align 4
  br label %462

462:                                              ; preds = %452
  %463 = load i32, ptr %19, align 4
  %464 = icmp ult i32 %463, 8
  br i1 %464, label %430, label %465, !llvm.loop !18

465:                                              ; preds = %462
  br label %466

466:                                              ; preds = %465, %426
  %467 = load i64, ptr %23, align 8
  %468 = and i64 %467, 255
  %469 = trunc i64 %468 to i8
  %470 = load ptr, ptr %9, align 8
  %471 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %470, i32 0, i32 21
  %472 = load i32, ptr %21, align 4
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds [4 x i8], ptr %471, i64 0, i64 %473
  store i8 %469, ptr %474, align 1
  %475 = load i64, ptr %23, align 8
  %476 = lshr i64 %475, 8
  store i64 %476, ptr %23, align 8
  %477 = load i32, ptr %19, align 4
  %478 = sub i32 %477, 8
  store i32 %478, ptr %19, align 4
  br label %479

479:                                              ; preds = %466
  br label %507

480:                                              ; preds = %422
  br label %481

481:                                              ; preds = %480
  br label %482

482:                                              ; preds = %496, %481
  %483 = load ptr, ptr %24, align 8
  %484 = load ptr, ptr %25, align 8
  %485 = icmp uge ptr %483, %484
  br i1 %485, label %486, label %497

486:                                              ; preds = %482
  br label %487

487:                                              ; preds = %486
  %488 = load i32, ptr %15, align 4
  %489 = and i32 %488, 2
  %490 = icmp ne i32 %489, 0
  %491 = zext i1 %490 to i64
  %492 = select i1 %490, i32 1, i32 -4
  store i32 %492, ptr %18, align 4
  %493 = load ptr, ptr %9, align 8
  %494 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %493, i32 0, i32 0
  store i32 7, ptr %494, align 8
  br label %2656

495:                                              ; preds = %128
  br label %496

496:                                              ; preds = %495
  br label %482, !llvm.loop !19

497:                                              ; preds = %482
  %498 = load ptr, ptr %24, align 8
  %499 = getelementptr inbounds i8, ptr %498, i32 1
  store ptr %499, ptr %24, align 8
  %500 = load i8, ptr %498, align 1
  %501 = load ptr, ptr %9, align 8
  %502 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %501, i32 0, i32 21
  %503 = load i32, ptr %21, align 4
  %504 = zext i32 %503 to i64
  %505 = getelementptr inbounds [4 x i8], ptr %502, i64 0, i64 %504
  store i8 %500, ptr %505, align 1
  br label %506

506:                                              ; preds = %497
  br label %507

507:                                              ; preds = %506, %479
  br label %508

508:                                              ; preds = %507
  %509 = load i32, ptr %21, align 4
  %510 = add i32 %509, 1
  store i32 %510, ptr %21, align 4
  br label %419, !llvm.loop !20

511:                                              ; preds = %419
  %512 = load ptr, ptr %9, align 8
  %513 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %512, i32 0, i32 21
  %514 = getelementptr inbounds [4 x i8], ptr %513, i64 0, i64 0
  %515 = load i8, ptr %514, align 1
  %516 = zext i8 %515 to i32
  %517 = load ptr, ptr %9, align 8
  %518 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %517, i32 0, i32 21
  %519 = getelementptr inbounds [4 x i8], ptr %518, i64 0, i64 1
  %520 = load i8, ptr %519, align 1
  %521 = zext i8 %520 to i32
  %522 = shl i32 %521, 8
  %523 = or i32 %516, %522
  store i32 %523, ptr %21, align 4
  %524 = load ptr, ptr %9, align 8
  %525 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %524, i32 0, i32 21
  %526 = getelementptr inbounds [4 x i8], ptr %525, i64 0, i64 2
  %527 = load i8, ptr %526, align 1
  %528 = zext i8 %527 to i32
  %529 = load ptr, ptr %9, align 8
  %530 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %529, i32 0, i32 21
  %531 = getelementptr inbounds [4 x i8], ptr %530, i64 0, i64 3
  %532 = load i8, ptr %531, align 1
  %533 = zext i8 %532 to i32
  %534 = shl i32 %533, 8
  %535 = or i32 %528, %534
  %536 = xor i32 65535, %535
  %537 = icmp ne i32 %523, %536
  br i1 %537, label %538, label %547

538:                                              ; preds = %511
  br label %539

539:                                              ; preds = %538
  br label %540

540:                                              ; preds = %545, %539
  br label %541

541:                                              ; preds = %540
  store i32 -1, ptr %18, align 4
  %542 = load ptr, ptr %9, align 8
  %543 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %542, i32 0, i32 0
  store i32 39, ptr %543, align 8
  br label %2656

544:                                              ; preds = %128
  br label %545

545:                                              ; preds = %544
  br label %540

546:                                              ; No predecessors!
  br label %547

547:                                              ; preds = %546, %511
  br label %548

548:                                              ; preds = %616, %547
  %549 = load i32, ptr %21, align 4
  %550 = icmp ne i32 %549, 0
  br i1 %550, label %551, label %554

551:                                              ; preds = %548
  %552 = load i32, ptr %19, align 4
  %553 = icmp ne i32 %552, 0
  br label %554

554:                                              ; preds = %551, %548
  %555 = phi i1 [ false, %548 ], [ %553, %551 ]
  br i1 %555, label %556, label %623

556:                                              ; preds = %554
  br label %557

557:                                              ; preds = %556
  %558 = load i32, ptr %19, align 4
  %559 = icmp ult i32 %558, 8
  br i1 %559, label %560, label %597

560:                                              ; preds = %557
  br label %561

561:                                              ; preds = %593, %560
  br label %562

562:                                              ; preds = %561
  br label %563

563:                                              ; preds = %577, %562
  %564 = load ptr, ptr %24, align 8
  %565 = load ptr, ptr %25, align 8
  %566 = icmp uge ptr %564, %565
  br i1 %566, label %567, label %578

567:                                              ; preds = %563
  br label %568

568:                                              ; preds = %567
  %569 = load i32, ptr %15, align 4
  %570 = and i32 %569, 2
  %571 = icmp ne i32 %570, 0
  %572 = zext i1 %571 to i64
  %573 = select i1 %571, i32 1, i32 -4
  store i32 %573, ptr %18, align 4
  %574 = load ptr, ptr %9, align 8
  %575 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %574, i32 0, i32 0
  store i32 51, ptr %575, align 8
  br label %2656

576:                                              ; preds = %128
  br label %577

577:                                              ; preds = %576
  br label %563, !llvm.loop !21

578:                                              ; preds = %563
  %579 = load ptr, ptr %24, align 8
  %580 = getelementptr inbounds i8, ptr %579, i32 1
  store ptr %580, ptr %24, align 8
  %581 = load i8, ptr %579, align 1
  %582 = zext i8 %581 to i32
  store i32 %582, ptr %33, align 4
  br label %583

583:                                              ; preds = %578
  %584 = load i32, ptr %33, align 4
  %585 = zext i32 %584 to i64
  %586 = load i32, ptr %19, align 4
  %587 = zext i32 %586 to i64
  %588 = shl i64 %585, %587
  %589 = load i64, ptr %23, align 8
  %590 = or i64 %589, %588
  store i64 %590, ptr %23, align 8
  %591 = load i32, ptr %19, align 4
  %592 = add i32 %591, 8
  store i32 %592, ptr %19, align 4
  br label %593

593:                                              ; preds = %583
  %594 = load i32, ptr %19, align 4
  %595 = icmp ult i32 %594, 8
  br i1 %595, label %561, label %596, !llvm.loop !22

596:                                              ; preds = %593
  br label %597

597:                                              ; preds = %596, %557
  %598 = load i64, ptr %23, align 8
  %599 = and i64 %598, 255
  %600 = trunc i64 %599 to i32
  store i32 %600, ptr %20, align 4
  %601 = load i64, ptr %23, align 8
  %602 = lshr i64 %601, 8
  store i64 %602, ptr %23, align 8
  %603 = load i32, ptr %19, align 4
  %604 = sub i32 %603, 8
  store i32 %604, ptr %19, align 4
  br label %605

605:                                              ; preds = %597
  br label %606

606:                                              ; preds = %615, %605
  %607 = load ptr, ptr %26, align 8
  %608 = load ptr, ptr %27, align 8
  %609 = icmp uge ptr %607, %608
  br i1 %609, label %610, label %616

610:                                              ; preds = %606
  br label %611

611:                                              ; preds = %610
  store i32 2, ptr %18, align 4
  %612 = load ptr, ptr %9, align 8
  %613 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %612, i32 0, i32 0
  store i32 52, ptr %613, align 8
  br label %2656

614:                                              ; preds = %128
  br label %615

615:                                              ; preds = %614
  br label %606, !llvm.loop !23

616:                                              ; preds = %606
  %617 = load i32, ptr %20, align 4
  %618 = trunc i32 %617 to i8
  %619 = load ptr, ptr %26, align 8
  %620 = getelementptr inbounds i8, ptr %619, i32 1
  store ptr %620, ptr %26, align 8
  store i8 %618, ptr %619, align 1
  %621 = load i32, ptr %21, align 4
  %622 = add i32 %621, -1
  store i32 %622, ptr %21, align 4
  br label %548, !llvm.loop !24

623:                                              ; preds = %554
  br label %624

624:                                              ; preds = %712, %623
  %625 = load i32, ptr %21, align 4
  %626 = icmp ne i32 %625, 0
  br i1 %626, label %627, label %730

627:                                              ; preds = %624
  br label %628

628:                                              ; preds = %637, %627
  %629 = load ptr, ptr %26, align 8
  %630 = load ptr, ptr %27, align 8
  %631 = icmp uge ptr %629, %630
  br i1 %631, label %632, label %638

632:                                              ; preds = %628
  br label %633

633:                                              ; preds = %632
  store i32 2, ptr %18, align 4
  %634 = load ptr, ptr %9, align 8
  %635 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %634, i32 0, i32 0
  store i32 9, ptr %635, align 8
  br label %2656

636:                                              ; preds = %128
  br label %637

637:                                              ; preds = %636
  br label %628, !llvm.loop !25

638:                                              ; preds = %628
  br label %639

639:                                              ; preds = %653, %638
  %640 = load ptr, ptr %24, align 8
  %641 = load ptr, ptr %25, align 8
  %642 = icmp uge ptr %640, %641
  br i1 %642, label %643, label %654

643:                                              ; preds = %639
  br label %644

644:                                              ; preds = %643
  %645 = load i32, ptr %15, align 4
  %646 = and i32 %645, 2
  %647 = icmp ne i32 %646, 0
  %648 = zext i1 %647 to i64
  %649 = select i1 %647, i32 1, i32 -4
  store i32 %649, ptr %18, align 4
  %650 = load ptr, ptr %9, align 8
  %651 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %650, i32 0, i32 0
  store i32 38, ptr %651, align 8
  br label %2656

652:                                              ; preds = %128
  br label %653

653:                                              ; preds = %652
  br label %639, !llvm.loop !26

654:                                              ; preds = %639
  %655 = load ptr, ptr %27, align 8
  %656 = load ptr, ptr %26, align 8
  %657 = ptrtoint ptr %655 to i64
  %658 = ptrtoint ptr %656 to i64
  %659 = sub i64 %657, %658
  %660 = load ptr, ptr %25, align 8
  %661 = load ptr, ptr %24, align 8
  %662 = ptrtoint ptr %660 to i64
  %663 = ptrtoint ptr %661 to i64
  %664 = sub i64 %662, %663
  %665 = icmp ult i64 %659, %664
  br i1 %665, label %666, label %672

666:                                              ; preds = %654
  %667 = load ptr, ptr %27, align 8
  %668 = load ptr, ptr %26, align 8
  %669 = ptrtoint ptr %667 to i64
  %670 = ptrtoint ptr %668 to i64
  %671 = sub i64 %669, %670
  br label %678

672:                                              ; preds = %654
  %673 = load ptr, ptr %25, align 8
  %674 = load ptr, ptr %24, align 8
  %675 = ptrtoint ptr %673 to i64
  %676 = ptrtoint ptr %674 to i64
  %677 = sub i64 %675, %676
  br label %678

678:                                              ; preds = %672, %666
  %679 = phi i64 [ %671, %666 ], [ %677, %672 ]
  %680 = load i32, ptr %21, align 4
  %681 = zext i32 %680 to i64
  %682 = icmp ult i64 %679, %681
  br i1 %682, label %683, label %709

683:                                              ; preds = %678
  %684 = load ptr, ptr %27, align 8
  %685 = load ptr, ptr %26, align 8
  %686 = ptrtoint ptr %684 to i64
  %687 = ptrtoint ptr %685 to i64
  %688 = sub i64 %686, %687
  %689 = load ptr, ptr %25, align 8
  %690 = load ptr, ptr %24, align 8
  %691 = ptrtoint ptr %689 to i64
  %692 = ptrtoint ptr %690 to i64
  %693 = sub i64 %691, %692
  %694 = icmp ult i64 %688, %693
  br i1 %694, label %695, label %701

695:                                              ; preds = %683
  %696 = load ptr, ptr %27, align 8
  %697 = load ptr, ptr %26, align 8
  %698 = ptrtoint ptr %696 to i64
  %699 = ptrtoint ptr %697 to i64
  %700 = sub i64 %698, %699
  br label %707

701:                                              ; preds = %683
  %702 = load ptr, ptr %25, align 8
  %703 = load ptr, ptr %24, align 8
  %704 = ptrtoint ptr %702 to i64
  %705 = ptrtoint ptr %703 to i64
  %706 = sub i64 %704, %705
  br label %707

707:                                              ; preds = %701, %695
  %708 = phi i64 [ %700, %695 ], [ %706, %701 ]
  br label %712

709:                                              ; preds = %678
  %710 = load i32, ptr %21, align 4
  %711 = zext i32 %710 to i64
  br label %712

712:                                              ; preds = %709, %707
  %713 = phi i64 [ %708, %707 ], [ %711, %709 ]
  store i64 %713, ptr %34, align 8
  %714 = load ptr, ptr %26, align 8
  %715 = load ptr, ptr %24, align 8
  %716 = load i64, ptr %34, align 8
  %717 = load ptr, ptr %26, align 8
  %718 = call i64 @llvm.objectsize.i64.p0(ptr %717, i1 false, i1 true, i1 false)
  %719 = call ptr @__memcpy_chk(ptr noundef %714, ptr noundef %715, i64 noundef %716, i64 noundef %718) #11
  %720 = load i64, ptr %34, align 8
  %721 = load ptr, ptr %24, align 8
  %722 = getelementptr inbounds i8, ptr %721, i64 %720
  store ptr %722, ptr %24, align 8
  %723 = load i64, ptr %34, align 8
  %724 = load ptr, ptr %26, align 8
  %725 = getelementptr inbounds i8, ptr %724, i64 %723
  store ptr %725, ptr %26, align 8
  %726 = load i64, ptr %34, align 8
  %727 = trunc i64 %726 to i32
  %728 = load i32, ptr %21, align 4
  %729 = sub i32 %728, %727
  store i32 %729, ptr %21, align 4
  br label %624, !llvm.loop !27

730:                                              ; preds = %624
  br label %2454

731:                                              ; preds = %352
  %732 = load ptr, ptr %9, align 8
  %733 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %732, i32 0, i32 6
  %734 = load i32, ptr %733, align 8
  %735 = icmp eq i32 %734, 3
  br i1 %735, label %736, label %745

736:                                              ; preds = %731
  br label %737

737:                                              ; preds = %736
  br label %738

738:                                              ; preds = %743, %737
  br label %739

739:                                              ; preds = %738
  store i32 -1, ptr %18, align 4
  %740 = load ptr, ptr %9, align 8
  %741 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %740, i32 0, i32 0
  store i32 10, ptr %741, align 8
  br label %2656

742:                                              ; preds = %128
  br label %743

743:                                              ; preds = %742
  br label %738

744:                                              ; No predecessors!
  br label %2453

745:                                              ; preds = %731
  %746 = load ptr, ptr %9, align 8
  %747 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %746, i32 0, i32 6
  %748 = load i32, ptr %747, align 8
  %749 = icmp eq i32 %748, 1
  br i1 %749, label %750, label %808

750:                                              ; preds = %745
  %751 = load ptr, ptr %9, align 8
  %752 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %751, i32 0, i32 18
  %753 = getelementptr inbounds [288 x i8], ptr %752, i64 0, i64 0
  store ptr %753, ptr %35, align 8
  %754 = load ptr, ptr %9, align 8
  %755 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %754, i32 0, i32 11
  %756 = getelementptr inbounds [3 x i32], ptr %755, i64 0, i64 0
  store i32 288, ptr %756, align 4
  %757 = load ptr, ptr %9, align 8
  %758 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %757, i32 0, i32 11
  %759 = getelementptr inbounds [3 x i32], ptr %758, i64 0, i64 1
  store i32 32, ptr %759, align 4
  %760 = load ptr, ptr %9, align 8
  %761 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %760, i32 0, i32 19
  %762 = getelementptr inbounds [32 x i8], ptr %761, i64 0, i64 0
  %763 = load ptr, ptr %9, align 8
  %764 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %763, i32 0, i32 19
  %765 = getelementptr inbounds [32 x i8], ptr %764, i64 0, i64 0
  %766 = call i64 @llvm.objectsize.i64.p0(ptr %765, i1 false, i1 true, i1 false)
  %767 = call ptr @__memset_chk(ptr noundef %762, i32 noundef 5, i64 noundef 32, i64 noundef %766) #11
  store i32 0, ptr %36, align 4
  br label %768

768:                                              ; preds = %774, %750
  %769 = load i32, ptr %36, align 4
  %770 = icmp ule i32 %769, 143
  br i1 %770, label %771, label %777

771:                                              ; preds = %768
  %772 = load ptr, ptr %35, align 8
  %773 = getelementptr inbounds i8, ptr %772, i32 1
  store ptr %773, ptr %35, align 8
  store i8 8, ptr %772, align 1
  br label %774

774:                                              ; preds = %771
  %775 = load i32, ptr %36, align 4
  %776 = add i32 %775, 1
  store i32 %776, ptr %36, align 4
  br label %768, !llvm.loop !28

777:                                              ; preds = %768
  br label %778

778:                                              ; preds = %784, %777
  %779 = load i32, ptr %36, align 4
  %780 = icmp ule i32 %779, 255
  br i1 %780, label %781, label %787

781:                                              ; preds = %778
  %782 = load ptr, ptr %35, align 8
  %783 = getelementptr inbounds i8, ptr %782, i32 1
  store ptr %783, ptr %35, align 8
  store i8 9, ptr %782, align 1
  br label %784

784:                                              ; preds = %781
  %785 = load i32, ptr %36, align 4
  %786 = add i32 %785, 1
  store i32 %786, ptr %36, align 4
  br label %778, !llvm.loop !29

787:                                              ; preds = %778
  br label %788

788:                                              ; preds = %794, %787
  %789 = load i32, ptr %36, align 4
  %790 = icmp ule i32 %789, 279
  br i1 %790, label %791, label %797

791:                                              ; preds = %788
  %792 = load ptr, ptr %35, align 8
  %793 = getelementptr inbounds i8, ptr %792, i32 1
  store ptr %793, ptr %35, align 8
  store i8 7, ptr %792, align 1
  br label %794

794:                                              ; preds = %791
  %795 = load i32, ptr %36, align 4
  %796 = add i32 %795, 1
  store i32 %796, ptr %36, align 4
  br label %788, !llvm.loop !30

797:                                              ; preds = %788
  br label %798

798:                                              ; preds = %804, %797
  %799 = load i32, ptr %36, align 4
  %800 = icmp ule i32 %799, 287
  br i1 %800, label %801, label %807

801:                                              ; preds = %798
  %802 = load ptr, ptr %35, align 8
  %803 = getelementptr inbounds i8, ptr %802, i32 1
  store ptr %803, ptr %35, align 8
  store i8 8, ptr %802, align 1
  br label %804

804:                                              ; preds = %801
  %805 = load i32, ptr %36, align 4
  %806 = add i32 %805, 1
  store i32 %806, ptr %36, align 4
  br label %798, !llvm.loop !31

807:                                              ; preds = %798
  br label %994

808:                                              ; preds = %745
  store i32 0, ptr %21, align 4
  br label %809

809:                                              ; preds = %908, %808
  %810 = load i32, ptr %21, align 4
  %811 = icmp ult i32 %810, 3
  br i1 %811, label %812, label %911

812:                                              ; preds = %809
  br label %813

813:                                              ; preds = %812
  %814 = load i32, ptr %19, align 4
  %815 = load i32, ptr %21, align 4
  %816 = zext i32 %815 to i64
  %817 = getelementptr inbounds [4 x i8], ptr @.str.14, i64 0, i64 %816
  %818 = load i8, ptr %817, align 1
  %819 = sext i8 %818 to i32
  %820 = icmp ult i32 %814, %819
  br i1 %820, label %821, label %863

821:                                              ; preds = %813
  br label %822

822:                                              ; preds = %854, %821
  br label %823

823:                                              ; preds = %822
  br label %824

824:                                              ; preds = %838, %823
  %825 = load ptr, ptr %24, align 8
  %826 = load ptr, ptr %25, align 8
  %827 = icmp uge ptr %825, %826
  br i1 %827, label %828, label %839

828:                                              ; preds = %824
  br label %829

829:                                              ; preds = %828
  %830 = load i32, ptr %15, align 4
  %831 = and i32 %830, 2
  %832 = icmp ne i32 %831, 0
  %833 = zext i1 %832 to i64
  %834 = select i1 %832, i32 1, i32 -4
  store i32 %834, ptr %18, align 4
  %835 = load ptr, ptr %9, align 8
  %836 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %835, i32 0, i32 0
  store i32 11, ptr %836, align 8
  br label %2656

837:                                              ; preds = %128
  br label %838

838:                                              ; preds = %837
  br label %824, !llvm.loop !32

839:                                              ; preds = %824
  %840 = load ptr, ptr %24, align 8
  %841 = getelementptr inbounds i8, ptr %840, i32 1
  store ptr %841, ptr %24, align 8
  %842 = load i8, ptr %840, align 1
  %843 = zext i8 %842 to i32
  store i32 %843, ptr %37, align 4
  br label %844

844:                                              ; preds = %839
  %845 = load i32, ptr %37, align 4
  %846 = zext i32 %845 to i64
  %847 = load i32, ptr %19, align 4
  %848 = zext i32 %847 to i64
  %849 = shl i64 %846, %848
  %850 = load i64, ptr %23, align 8
  %851 = or i64 %850, %849
  store i64 %851, ptr %23, align 8
  %852 = load i32, ptr %19, align 4
  %853 = add i32 %852, 8
  store i32 %853, ptr %19, align 4
  br label %854

854:                                              ; preds = %844
  %855 = load i32, ptr %19, align 4
  %856 = load i32, ptr %21, align 4
  %857 = zext i32 %856 to i64
  %858 = getelementptr inbounds [4 x i8], ptr @.str.14, i64 0, i64 %857
  %859 = load i8, ptr %858, align 1
  %860 = sext i8 %859 to i32
  %861 = icmp ult i32 %855, %860
  br i1 %861, label %822, label %862, !llvm.loop !33

862:                                              ; preds = %854
  br label %863

863:                                              ; preds = %862, %813
  %864 = load i64, ptr %23, align 8
  %865 = load i32, ptr %21, align 4
  %866 = zext i32 %865 to i64
  %867 = getelementptr inbounds [4 x i8], ptr @.str.14, i64 0, i64 %866
  %868 = load i8, ptr %867, align 1
  %869 = sext i8 %868 to i32
  %870 = shl i32 1, %869
  %871 = sub nsw i32 %870, 1
  %872 = sext i32 %871 to i64
  %873 = and i64 %864, %872
  %874 = trunc i64 %873 to i32
  %875 = load ptr, ptr %9, align 8
  %876 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %875, i32 0, i32 11
  %877 = load i32, ptr %21, align 4
  %878 = zext i32 %877 to i64
  %879 = getelementptr inbounds [3 x i32], ptr %876, i64 0, i64 %878
  store i32 %874, ptr %879, align 4
  %880 = load i32, ptr %21, align 4
  %881 = zext i32 %880 to i64
  %882 = getelementptr inbounds [4 x i8], ptr @.str.14, i64 0, i64 %881
  %883 = load i8, ptr %882, align 1
  %884 = sext i8 %883 to i32
  %885 = load i64, ptr %23, align 8
  %886 = zext i32 %884 to i64
  %887 = lshr i64 %885, %886
  store i64 %887, ptr %23, align 8
  %888 = load i32, ptr %21, align 4
  %889 = zext i32 %888 to i64
  %890 = getelementptr inbounds [4 x i8], ptr @.str.14, i64 0, i64 %889
  %891 = load i8, ptr %890, align 1
  %892 = sext i8 %891 to i32
  %893 = load i32, ptr %19, align 4
  %894 = sub i32 %893, %892
  store i32 %894, ptr %19, align 4
  br label %895

895:                                              ; preds = %863
  %896 = load i32, ptr %21, align 4
  %897 = zext i32 %896 to i64
  %898 = getelementptr inbounds [3 x i16], ptr @tinfl_decompress.s_min_table_sizes, i64 0, i64 %897
  %899 = load i16, ptr %898, align 2
  %900 = zext i16 %899 to i32
  %901 = load ptr, ptr %9, align 8
  %902 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %901, i32 0, i32 11
  %903 = load i32, ptr %21, align 4
  %904 = zext i32 %903 to i64
  %905 = getelementptr inbounds [3 x i32], ptr %902, i64 0, i64 %904
  %906 = load i32, ptr %905, align 4
  %907 = add i32 %906, %900
  store i32 %907, ptr %905, align 4
  br label %908

908:                                              ; preds = %895
  %909 = load i32, ptr %21, align 4
  %910 = add i32 %909, 1
  store i32 %910, ptr %21, align 4
  br label %809, !llvm.loop !34

911:                                              ; preds = %809
  %912 = load ptr, ptr %9, align 8
  %913 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %912, i32 0, i32 20
  %914 = getelementptr inbounds [19 x i8], ptr %913, i64 0, i64 0
  %915 = load ptr, ptr %9, align 8
  %916 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %915, i32 0, i32 20
  %917 = getelementptr inbounds [19 x i8], ptr %916, i64 0, i64 0
  %918 = call i64 @llvm.objectsize.i64.p0(ptr %917, i1 false, i1 true, i1 false)
  %919 = call ptr @__memset_chk(ptr noundef %914, i32 noundef 0, i64 noundef 19, i64 noundef %918) #11
  store i32 0, ptr %21, align 4
  br label %920

920:                                              ; preds = %987, %911
  %921 = load i32, ptr %21, align 4
  %922 = load ptr, ptr %9, align 8
  %923 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %922, i32 0, i32 11
  %924 = getelementptr inbounds [3 x i32], ptr %923, i64 0, i64 2
  %925 = load i32, ptr %924, align 4
  %926 = icmp ult i32 %921, %925
  br i1 %926, label %927, label %990

927:                                              ; preds = %920
  br label %928

928:                                              ; preds = %927
  %929 = load i32, ptr %19, align 4
  %930 = icmp ult i32 %929, 3
  br i1 %930, label %931, label %968

931:                                              ; preds = %928
  br label %932

932:                                              ; preds = %964, %931
  br label %933

933:                                              ; preds = %932
  br label %934

934:                                              ; preds = %948, %933
  %935 = load ptr, ptr %24, align 8
  %936 = load ptr, ptr %25, align 8
  %937 = icmp uge ptr %935, %936
  br i1 %937, label %938, label %949

938:                                              ; preds = %934
  br label %939

939:                                              ; preds = %938
  %940 = load i32, ptr %15, align 4
  %941 = and i32 %940, 2
  %942 = icmp ne i32 %941, 0
  %943 = zext i1 %942 to i64
  %944 = select i1 %942, i32 1, i32 -4
  store i32 %944, ptr %18, align 4
  %945 = load ptr, ptr %9, align 8
  %946 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %945, i32 0, i32 0
  store i32 14, ptr %946, align 8
  br label %2656

947:                                              ; preds = %128
  br label %948

948:                                              ; preds = %947
  br label %934, !llvm.loop !35

949:                                              ; preds = %934
  %950 = load ptr, ptr %24, align 8
  %951 = getelementptr inbounds i8, ptr %950, i32 1
  store ptr %951, ptr %24, align 8
  %952 = load i8, ptr %950, align 1
  %953 = zext i8 %952 to i32
  store i32 %953, ptr %39, align 4
  br label %954

954:                                              ; preds = %949
  %955 = load i32, ptr %39, align 4
  %956 = zext i32 %955 to i64
  %957 = load i32, ptr %19, align 4
  %958 = zext i32 %957 to i64
  %959 = shl i64 %956, %958
  %960 = load i64, ptr %23, align 8
  %961 = or i64 %960, %959
  store i64 %961, ptr %23, align 8
  %962 = load i32, ptr %19, align 4
  %963 = add i32 %962, 8
  store i32 %963, ptr %19, align 4
  br label %964

964:                                              ; preds = %954
  %965 = load i32, ptr %19, align 4
  %966 = icmp ult i32 %965, 3
  br i1 %966, label %932, label %967, !llvm.loop !36

967:                                              ; preds = %964
  br label %968

968:                                              ; preds = %967, %928
  %969 = load i64, ptr %23, align 8
  %970 = and i64 %969, 7
  %971 = trunc i64 %970 to i32
  store i32 %971, ptr %38, align 4
  %972 = load i64, ptr %23, align 8
  %973 = lshr i64 %972, 3
  store i64 %973, ptr %23, align 8
  %974 = load i32, ptr %19, align 4
  %975 = sub i32 %974, 3
  store i32 %975, ptr %19, align 4
  br label %976

976:                                              ; preds = %968
  %977 = load i32, ptr %38, align 4
  %978 = trunc i32 %977 to i8
  %979 = load ptr, ptr %9, align 8
  %980 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %979, i32 0, i32 20
  %981 = load i32, ptr %21, align 4
  %982 = zext i32 %981 to i64
  %983 = getelementptr inbounds [19 x i8], ptr @tinfl_decompress.s_length_dezigzag, i64 0, i64 %982
  %984 = load i8, ptr %983, align 1
  %985 = zext i8 %984 to i64
  %986 = getelementptr inbounds [19 x i8], ptr %980, i64 0, i64 %985
  store i8 %978, ptr %986, align 1
  br label %987

987:                                              ; preds = %976
  %988 = load i32, ptr %21, align 4
  %989 = add i32 %988, 1
  store i32 %989, ptr %21, align 4
  br label %920, !llvm.loop !37

990:                                              ; preds = %920
  %991 = load ptr, ptr %9, align 8
  %992 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %991, i32 0, i32 11
  %993 = getelementptr inbounds [3 x i32], ptr %992, i64 0, i64 2
  store i32 19, ptr %993, align 4
  br label %994

994:                                              ; preds = %990, %807
  br label %995

995:                                              ; preds = %1629, %994
  %996 = load ptr, ptr %9, align 8
  %997 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %996, i32 0, i32 6
  %998 = load i32, ptr %997, align 8
  %999 = icmp sge i32 %998, 0
  br i1 %999, label %1000, label %1634

1000:                                             ; preds = %995
  %1001 = load ptr, ptr %9, align 8
  %1002 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1001, i32 0, i32 14
  %1003 = load ptr, ptr %9, align 8
  %1004 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1003, i32 0, i32 6
  %1005 = load i32, ptr %1004, align 8
  %1006 = zext i32 %1005 to i64
  %1007 = getelementptr inbounds [3 x [1024 x i16]], ptr %1002, i64 0, i64 %1006
  %1008 = getelementptr inbounds [1024 x i16], ptr %1007, i64 0, i64 0
  store ptr %1008, ptr %42, align 8
  %1009 = load ptr, ptr %9, align 8
  %1010 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1009, i32 0, i32 6
  %1011 = load i32, ptr %1010, align 8
  %1012 = zext i32 %1011 to i64
  %1013 = getelementptr inbounds [3 x ptr], ptr %16, i64 0, i64 %1012
  %1014 = load ptr, ptr %1013, align 8
  store ptr %1014, ptr %43, align 8
  %1015 = load ptr, ptr %9, align 8
  %1016 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1015, i32 0, i32 6
  %1017 = load i32, ptr %1016, align 8
  %1018 = zext i32 %1017 to i64
  %1019 = getelementptr inbounds [3 x ptr], ptr %17, i64 0, i64 %1018
  %1020 = load ptr, ptr %1019, align 8
  store ptr %1020, ptr %44, align 8
  %1021 = getelementptr inbounds [16 x i32], ptr %51, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 16 %1021, i8 0, i64 64, i1 false)
  %1022 = load ptr, ptr %42, align 8
  %1023 = load ptr, ptr %42, align 8
  %1024 = call i64 @llvm.objectsize.i64.p0(ptr %1023, i1 false, i1 true, i1 false)
  %1025 = call ptr @__memset_chk(ptr noundef %1022, i32 noundef 0, i64 noundef 2048, i64 noundef %1024) #11
  %1026 = load ptr, ptr %9, align 8
  call void @tinfl_clear_tree(ptr noundef %1026)
  store i32 0, ptr %45, align 4
  br label %1027

1027:                                             ; preds = %1048, %1000
  %1028 = load i32, ptr %45, align 4
  %1029 = load ptr, ptr %9, align 8
  %1030 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1029, i32 0, i32 11
  %1031 = load ptr, ptr %9, align 8
  %1032 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1031, i32 0, i32 6
  %1033 = load i32, ptr %1032, align 8
  %1034 = zext i32 %1033 to i64
  %1035 = getelementptr inbounds [3 x i32], ptr %1030, i64 0, i64 %1034
  %1036 = load i32, ptr %1035, align 4
  %1037 = icmp ult i32 %1028, %1036
  br i1 %1037, label %1038, label %1051

1038:                                             ; preds = %1027
  %1039 = load ptr, ptr %44, align 8
  %1040 = load i32, ptr %45, align 4
  %1041 = zext i32 %1040 to i64
  %1042 = getelementptr inbounds i8, ptr %1039, i64 %1041
  %1043 = load i8, ptr %1042, align 1
  %1044 = zext i8 %1043 to i64
  %1045 = getelementptr inbounds [16 x i32], ptr %51, i64 0, i64 %1044
  %1046 = load i32, ptr %1045, align 4
  %1047 = add i32 %1046, 1
  store i32 %1047, ptr %1045, align 4
  br label %1048

1048:                                             ; preds = %1038
  %1049 = load i32, ptr %45, align 4
  %1050 = add i32 %1049, 1
  store i32 %1050, ptr %45, align 4
  br label %1027, !llvm.loop !38

1051:                                             ; preds = %1027
  store i32 0, ptr %47, align 4
  store i32 0, ptr %48, align 4
  %1052 = getelementptr inbounds [17 x i32], ptr %50, i64 0, i64 1
  store i32 0, ptr %1052, align 4
  %1053 = getelementptr inbounds [17 x i32], ptr %50, i64 0, i64 0
  store i32 0, ptr %1053, align 16
  store i32 1, ptr %45, align 4
  br label %1054

1054:                                             ; preds = %1075, %1051
  %1055 = load i32, ptr %45, align 4
  %1056 = icmp ule i32 %1055, 15
  br i1 %1056, label %1057, label %1078

1057:                                             ; preds = %1054
  %1058 = load i32, ptr %45, align 4
  %1059 = zext i32 %1058 to i64
  %1060 = getelementptr inbounds [16 x i32], ptr %51, i64 0, i64 %1059
  %1061 = load i32, ptr %1060, align 4
  %1062 = load i32, ptr %47, align 4
  %1063 = add i32 %1062, %1061
  store i32 %1063, ptr %47, align 4
  %1064 = load i32, ptr %48, align 4
  %1065 = load i32, ptr %45, align 4
  %1066 = zext i32 %1065 to i64
  %1067 = getelementptr inbounds [16 x i32], ptr %51, i64 0, i64 %1066
  %1068 = load i32, ptr %1067, align 4
  %1069 = add i32 %1064, %1068
  %1070 = shl i32 %1069, 1
  store i32 %1070, ptr %48, align 4
  %1071 = load i32, ptr %45, align 4
  %1072 = add i32 %1071, 1
  %1073 = zext i32 %1072 to i64
  %1074 = getelementptr inbounds [17 x i32], ptr %50, i64 0, i64 %1073
  store i32 %1070, ptr %1074, align 4
  br label %1075

1075:                                             ; preds = %1057
  %1076 = load i32, ptr %45, align 4
  %1077 = add i32 %1076, 1
  store i32 %1077, ptr %45, align 4
  br label %1054, !llvm.loop !39

1078:                                             ; preds = %1054
  %1079 = load i32, ptr %48, align 4
  %1080 = icmp ne i32 65536, %1079
  br i1 %1080, label %1081, label %1093

1081:                                             ; preds = %1078
  %1082 = load i32, ptr %47, align 4
  %1083 = icmp ugt i32 %1082, 1
  br i1 %1083, label %1084, label %1093

1084:                                             ; preds = %1081
  br label %1085

1085:                                             ; preds = %1084
  br label %1086

1086:                                             ; preds = %1091, %1085
  br label %1087

1087:                                             ; preds = %1086
  store i32 -1, ptr %18, align 4
  %1088 = load ptr, ptr %9, align 8
  %1089 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1088, i32 0, i32 0
  store i32 35, ptr %1089, align 8
  br label %2656

1090:                                             ; preds = %128
  br label %1091

1091:                                             ; preds = %1090
  br label %1086

1092:                                             ; No predecessors!
  br label %1093

1093:                                             ; preds = %1092, %1081, %1078
  store i32 -1, ptr %40, align 4
  store i32 0, ptr %49, align 4
  br label %1094

1094:                                             ; preds = %1239, %1093
  %1095 = load i32, ptr %49, align 4
  %1096 = load ptr, ptr %9, align 8
  %1097 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1096, i32 0, i32 11
  %1098 = load ptr, ptr %9, align 8
  %1099 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1098, i32 0, i32 6
  %1100 = load i32, ptr %1099, align 8
  %1101 = zext i32 %1100 to i64
  %1102 = getelementptr inbounds [3 x i32], ptr %1097, i64 0, i64 %1101
  %1103 = load i32, ptr %1102, align 4
  %1104 = icmp ult i32 %1095, %1103
  br i1 %1104, label %1105, label %1242

1105:                                             ; preds = %1094
  store i32 0, ptr %52, align 4
  %1106 = load ptr, ptr %44, align 8
  %1107 = load i32, ptr %49, align 4
  %1108 = zext i32 %1107 to i64
  %1109 = getelementptr inbounds i8, ptr %1106, i64 %1108
  %1110 = load i8, ptr %1109, align 1
  %1111 = zext i8 %1110 to i32
  store i32 %1111, ptr %55, align 4
  %1112 = load i32, ptr %55, align 4
  %1113 = icmp ne i32 %1112, 0
  br i1 %1113, label %1115, label %1114

1114:                                             ; preds = %1105
  br label %1239

1115:                                             ; preds = %1105
  %1116 = load i32, ptr %55, align 4
  %1117 = zext i32 %1116 to i64
  %1118 = getelementptr inbounds [17 x i32], ptr %50, i64 0, i64 %1117
  %1119 = load i32, ptr %1118, align 4
  %1120 = add i32 %1119, 1
  store i32 %1120, ptr %1118, align 4
  store i32 %1119, ptr %54, align 4
  %1121 = load i32, ptr %55, align 4
  store i32 %1121, ptr %53, align 4
  br label %1122

1122:                                             ; preds = %1131, %1115
  %1123 = load i32, ptr %53, align 4
  %1124 = icmp ugt i32 %1123, 0
  br i1 %1124, label %1125, label %1136

1125:                                             ; preds = %1122
  %1126 = load i32, ptr %52, align 4
  %1127 = shl i32 %1126, 1
  %1128 = load i32, ptr %54, align 4
  %1129 = and i32 %1128, 1
  %1130 = or i32 %1127, %1129
  store i32 %1130, ptr %52, align 4
  br label %1131

1131:                                             ; preds = %1125
  %1132 = load i32, ptr %53, align 4
  %1133 = add i32 %1132, -1
  store i32 %1133, ptr %53, align 4
  %1134 = load i32, ptr %54, align 4
  %1135 = lshr i32 %1134, 1
  store i32 %1135, ptr %54, align 4
  br label %1122, !llvm.loop !40

1136:                                             ; preds = %1122
  %1137 = load i32, ptr %55, align 4
  %1138 = icmp ule i32 %1137, 10
  br i1 %1138, label %1139, label %1159

1139:                                             ; preds = %1136
  %1140 = load i32, ptr %55, align 4
  %1141 = shl i32 %1140, 9
  %1142 = load i32, ptr %49, align 4
  %1143 = or i32 %1141, %1142
  %1144 = trunc i32 %1143 to i16
  store i16 %1144, ptr %56, align 2
  br label %1145

1145:                                             ; preds = %1148, %1139
  %1146 = load i32, ptr %52, align 4
  %1147 = icmp ult i32 %1146, 1024
  br i1 %1147, label %1148, label %1158

1148:                                             ; preds = %1145
  %1149 = load i16, ptr %56, align 2
  %1150 = load ptr, ptr %42, align 8
  %1151 = load i32, ptr %52, align 4
  %1152 = zext i32 %1151 to i64
  %1153 = getelementptr inbounds i16, ptr %1150, i64 %1152
  store i16 %1149, ptr %1153, align 2
  %1154 = load i32, ptr %55, align 4
  %1155 = shl i32 1, %1154
  %1156 = load i32, ptr %52, align 4
  %1157 = add i32 %1156, %1155
  store i32 %1157, ptr %52, align 4
  br label %1145, !llvm.loop !41

1158:                                             ; preds = %1145
  br label %1239

1159:                                             ; preds = %1136
  %1160 = load ptr, ptr %42, align 8
  %1161 = load i32, ptr %52, align 4
  %1162 = and i32 %1161, 1023
  %1163 = zext i32 %1162 to i64
  %1164 = getelementptr inbounds i16, ptr %1160, i64 %1163
  %1165 = load i16, ptr %1164, align 2
  %1166 = sext i16 %1165 to i32
  store i32 %1166, ptr %41, align 4
  %1167 = icmp eq i32 0, %1166
  br i1 %1167, label %1168, label %1179

1168:                                             ; preds = %1159
  %1169 = load i32, ptr %40, align 4
  %1170 = trunc i32 %1169 to i16
  %1171 = load ptr, ptr %42, align 8
  %1172 = load i32, ptr %52, align 4
  %1173 = and i32 %1172, 1023
  %1174 = zext i32 %1173 to i64
  %1175 = getelementptr inbounds i16, ptr %1171, i64 %1174
  store i16 %1170, ptr %1175, align 2
  %1176 = load i32, ptr %40, align 4
  store i32 %1176, ptr %41, align 4
  %1177 = load i32, ptr %40, align 4
  %1178 = sub nsw i32 %1177, 2
  store i32 %1178, ptr %40, align 4
  br label %1179

1179:                                             ; preds = %1168, %1159
  %1180 = load i32, ptr %52, align 4
  %1181 = lshr i32 %1180, 9
  store i32 %1181, ptr %52, align 4
  %1182 = load i32, ptr %55, align 4
  store i32 %1182, ptr %46, align 4
  br label %1183

1183:                                             ; preds = %1222, %1179
  %1184 = load i32, ptr %46, align 4
  %1185 = icmp ugt i32 %1184, 11
  br i1 %1185, label %1186, label %1225

1186:                                             ; preds = %1183
  %1187 = load i32, ptr %52, align 4
  %1188 = lshr i32 %1187, 1
  store i32 %1188, ptr %52, align 4
  %1189 = and i32 %1188, 1
  %1190 = load i32, ptr %41, align 4
  %1191 = sub i32 %1190, %1189
  store i32 %1191, ptr %41, align 4
  %1192 = load ptr, ptr %43, align 8
  %1193 = load i32, ptr %41, align 4
  %1194 = sub nsw i32 0, %1193
  %1195 = sub nsw i32 %1194, 1
  %1196 = sext i32 %1195 to i64
  %1197 = getelementptr inbounds i16, ptr %1192, i64 %1196
  %1198 = load i16, ptr %1197, align 2
  %1199 = icmp ne i16 %1198, 0
  br i1 %1199, label %1212, label %1200

1200:                                             ; preds = %1186
  %1201 = load i32, ptr %40, align 4
  %1202 = trunc i32 %1201 to i16
  %1203 = load ptr, ptr %43, align 8
  %1204 = load i32, ptr %41, align 4
  %1205 = sub nsw i32 0, %1204
  %1206 = sub nsw i32 %1205, 1
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds i16, ptr %1203, i64 %1207
  store i16 %1202, ptr %1208, align 2
  %1209 = load i32, ptr %40, align 4
  store i32 %1209, ptr %41, align 4
  %1210 = load i32, ptr %40, align 4
  %1211 = sub nsw i32 %1210, 2
  store i32 %1211, ptr %40, align 4
  br label %1221

1212:                                             ; preds = %1186
  %1213 = load ptr, ptr %43, align 8
  %1214 = load i32, ptr %41, align 4
  %1215 = sub nsw i32 0, %1214
  %1216 = sub nsw i32 %1215, 1
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds i16, ptr %1213, i64 %1217
  %1219 = load i16, ptr %1218, align 2
  %1220 = sext i16 %1219 to i32
  store i32 %1220, ptr %41, align 4
  br label %1221

1221:                                             ; preds = %1212, %1200
  br label %1222

1222:                                             ; preds = %1221
  %1223 = load i32, ptr %46, align 4
  %1224 = add i32 %1223, -1
  store i32 %1224, ptr %46, align 4
  br label %1183, !llvm.loop !42

1225:                                             ; preds = %1183
  %1226 = load i32, ptr %52, align 4
  %1227 = lshr i32 %1226, 1
  store i32 %1227, ptr %52, align 4
  %1228 = and i32 %1227, 1
  %1229 = load i32, ptr %41, align 4
  %1230 = sub i32 %1229, %1228
  store i32 %1230, ptr %41, align 4
  %1231 = load i32, ptr %49, align 4
  %1232 = trunc i32 %1231 to i16
  %1233 = load ptr, ptr %43, align 8
  %1234 = load i32, ptr %41, align 4
  %1235 = sub nsw i32 0, %1234
  %1236 = sub nsw i32 %1235, 1
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds i16, ptr %1233, i64 %1237
  store i16 %1232, ptr %1238, align 2
  br label %1239

1239:                                             ; preds = %1225, %1158, %1114
  %1240 = load i32, ptr %49, align 4
  %1241 = add i32 %1240, 1
  store i32 %1241, ptr %49, align 4
  br label %1094, !llvm.loop !43

1242:                                             ; preds = %1094
  %1243 = load ptr, ptr %9, align 8
  %1244 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1243, i32 0, i32 6
  %1245 = load i32, ptr %1244, align 8
  %1246 = icmp eq i32 %1245, 2
  br i1 %1246, label %1247, label %1628

1247:                                             ; preds = %1242
  store i32 0, ptr %21, align 4
  br label %1248

1248:                                             ; preds = %1553, %1438, %1247
  %1249 = load i32, ptr %21, align 4
  %1250 = load ptr, ptr %9, align 8
  %1251 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1250, i32 0, i32 11
  %1252 = getelementptr inbounds [3 x i32], ptr %1251, i64 0, i64 0
  %1253 = load i32, ptr %1252, align 4
  %1254 = load ptr, ptr %9, align 8
  %1255 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1254, i32 0, i32 11
  %1256 = getelementptr inbounds [3 x i32], ptr %1255, i64 0, i64 1
  %1257 = load i32, ptr %1256, align 4
  %1258 = add i32 %1253, %1257
  %1259 = icmp ult i32 %1249, %1258
  br i1 %1259, label %1260, label %1568

1260:                                             ; preds = %1248
  br label %1261

1261:                                             ; preds = %1260
  %1262 = load i32, ptr %19, align 4
  %1263 = icmp ult i32 %1262, 15
  br i1 %1263, label %1264, label %1390

1264:                                             ; preds = %1261
  %1265 = load ptr, ptr %25, align 8
  %1266 = load ptr, ptr %24, align 8
  %1267 = ptrtoint ptr %1265 to i64
  %1268 = ptrtoint ptr %1266 to i64
  %1269 = sub i64 %1267, %1268
  %1270 = icmp slt i64 %1269, 2
  br i1 %1270, label %1271, label %1366

1271:                                             ; preds = %1264
  br label %1272

1272:                                             ; preds = %1362, %1271
  %1273 = load ptr, ptr %9, align 8
  %1274 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1273, i32 0, i32 14
  %1275 = getelementptr inbounds [3 x [1024 x i16]], ptr %1274, i64 0, i64 2
  %1276 = load i64, ptr %23, align 8
  %1277 = and i64 %1276, 1023
  %1278 = getelementptr inbounds [1024 x i16], ptr %1275, i64 0, i64 %1277
  %1279 = load i16, ptr %1278, align 2
  %1280 = sext i16 %1279 to i32
  store i32 %1280, ptr %58, align 4
  %1281 = load i32, ptr %58, align 4
  %1282 = icmp sge i32 %1281, 0
  br i1 %1282, label %1283, label %1294

1283:                                             ; preds = %1272
  %1284 = load i32, ptr %58, align 4
  %1285 = ashr i32 %1284, 9
  store i32 %1285, ptr %59, align 4
  %1286 = load i32, ptr %59, align 4
  %1287 = icmp ne i32 %1286, 0
  br i1 %1287, label %1288, label %1293

1288:                                             ; preds = %1283
  %1289 = load i32, ptr %19, align 4
  %1290 = load i32, ptr %59, align 4
  %1291 = icmp uge i32 %1289, %1290
  br i1 %1291, label %1292, label %1293

1292:                                             ; preds = %1288
  br label %1365

1293:                                             ; preds = %1288, %1283
  br label %1330

1294:                                             ; preds = %1272
  %1295 = load i32, ptr %19, align 4
  %1296 = icmp ugt i32 %1295, 10
  br i1 %1296, label %1297, label %1329

1297:                                             ; preds = %1294
  store i32 10, ptr %59, align 4
  br label %1298

1298:                                             ; preds = %1322, %1297
  %1299 = load ptr, ptr %9, align 8
  %1300 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1299, i32 0, i32 17
  %1301 = load i32, ptr %58, align 4
  %1302 = xor i32 %1301, -1
  %1303 = sext i32 %1302 to i64
  %1304 = load i64, ptr %23, align 8
  %1305 = load i32, ptr %59, align 4
  %1306 = add i32 %1305, 1
  store i32 %1306, ptr %59, align 4
  %1307 = zext i32 %1305 to i64
  %1308 = lshr i64 %1304, %1307
  %1309 = and i64 %1308, 1
  %1310 = add i64 %1303, %1309
  %1311 = getelementptr inbounds [38 x i16], ptr %1300, i64 0, i64 %1310
  %1312 = load i16, ptr %1311, align 2
  %1313 = sext i16 %1312 to i32
  store i32 %1313, ptr %58, align 4
  br label %1314

1314:                                             ; preds = %1298
  %1315 = load i32, ptr %58, align 4
  %1316 = icmp slt i32 %1315, 0
  br i1 %1316, label %1317, label %1322

1317:                                             ; preds = %1314
  %1318 = load i32, ptr %19, align 4
  %1319 = load i32, ptr %59, align 4
  %1320 = add i32 %1319, 1
  %1321 = icmp uge i32 %1318, %1320
  br label %1322

1322:                                             ; preds = %1317, %1314
  %1323 = phi i1 [ false, %1314 ], [ %1321, %1317 ]
  br i1 %1323, label %1298, label %1324, !llvm.loop !44

1324:                                             ; preds = %1322
  %1325 = load i32, ptr %58, align 4
  %1326 = icmp sge i32 %1325, 0
  br i1 %1326, label %1327, label %1328

1327:                                             ; preds = %1324
  br label %1365

1328:                                             ; preds = %1324
  br label %1329

1329:                                             ; preds = %1328, %1294
  br label %1330

1330:                                             ; preds = %1329, %1293
  br label %1331

1331:                                             ; preds = %1330
  br label %1332

1332:                                             ; preds = %1346, %1331
  %1333 = load ptr, ptr %24, align 8
  %1334 = load ptr, ptr %25, align 8
  %1335 = icmp uge ptr %1333, %1334
  br i1 %1335, label %1336, label %1347

1336:                                             ; preds = %1332
  br label %1337

1337:                                             ; preds = %1336
  %1338 = load i32, ptr %15, align 4
  %1339 = and i32 %1338, 2
  %1340 = icmp ne i32 %1339, 0
  %1341 = zext i1 %1340 to i64
  %1342 = select i1 %1340, i32 1, i32 -4
  store i32 %1342, ptr %18, align 4
  %1343 = load ptr, ptr %9, align 8
  %1344 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1343, i32 0, i32 0
  store i32 16, ptr %1344, align 8
  br label %2656

1345:                                             ; preds = %128
  br label %1346

1346:                                             ; preds = %1345
  br label %1332, !llvm.loop !45

1347:                                             ; preds = %1332
  %1348 = load ptr, ptr %24, align 8
  %1349 = getelementptr inbounds i8, ptr %1348, i32 1
  store ptr %1349, ptr %24, align 8
  %1350 = load i8, ptr %1348, align 1
  %1351 = zext i8 %1350 to i32
  store i32 %1351, ptr %60, align 4
  br label %1352

1352:                                             ; preds = %1347
  %1353 = load i32, ptr %60, align 4
  %1354 = zext i32 %1353 to i64
  %1355 = load i32, ptr %19, align 4
  %1356 = zext i32 %1355 to i64
  %1357 = shl i64 %1354, %1356
  %1358 = load i64, ptr %23, align 8
  %1359 = or i64 %1358, %1357
  store i64 %1359, ptr %23, align 8
  %1360 = load i32, ptr %19, align 4
  %1361 = add i32 %1360, 8
  store i32 %1361, ptr %19, align 4
  br label %1362

1362:                                             ; preds = %1352
  %1363 = load i32, ptr %19, align 4
  %1364 = icmp ult i32 %1363, 15
  br i1 %1364, label %1272, label %1365, !llvm.loop !46

1365:                                             ; preds = %1362, %1327, %1292
  br label %1389

1366:                                             ; preds = %1264
  %1367 = load ptr, ptr %24, align 8
  %1368 = getelementptr inbounds i8, ptr %1367, i64 0
  %1369 = load i8, ptr %1368, align 1
  %1370 = zext i8 %1369 to i64
  %1371 = load i32, ptr %19, align 4
  %1372 = zext i32 %1371 to i64
  %1373 = shl i64 %1370, %1372
  %1374 = load ptr, ptr %24, align 8
  %1375 = getelementptr inbounds i8, ptr %1374, i64 1
  %1376 = load i8, ptr %1375, align 1
  %1377 = zext i8 %1376 to i64
  %1378 = load i32, ptr %19, align 4
  %1379 = add i32 %1378, 8
  %1380 = zext i32 %1379 to i64
  %1381 = shl i64 %1377, %1380
  %1382 = or i64 %1373, %1381
  %1383 = load i64, ptr %23, align 8
  %1384 = or i64 %1383, %1382
  store i64 %1384, ptr %23, align 8
  %1385 = load ptr, ptr %24, align 8
  %1386 = getelementptr inbounds i8, ptr %1385, i64 2
  store ptr %1386, ptr %24, align 8
  %1387 = load i32, ptr %19, align 4
  %1388 = add i32 %1387, 16
  store i32 %1388, ptr %19, align 4
  br label %1389

1389:                                             ; preds = %1366, %1365
  br label %1390

1390:                                             ; preds = %1389, %1261
  %1391 = load ptr, ptr %9, align 8
  %1392 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1391, i32 0, i32 14
  %1393 = getelementptr inbounds [3 x [1024 x i16]], ptr %1392, i64 0, i64 2
  %1394 = load i64, ptr %23, align 8
  %1395 = and i64 %1394, 1023
  %1396 = getelementptr inbounds [1024 x i16], ptr %1393, i64 0, i64 %1395
  %1397 = load i16, ptr %1396, align 2
  %1398 = sext i16 %1397 to i32
  store i32 %1398, ptr %58, align 4
  %1399 = icmp sge i32 %1398, 0
  br i1 %1399, label %1400, label %1405

1400:                                             ; preds = %1390
  %1401 = load i32, ptr %58, align 4
  %1402 = ashr i32 %1401, 9
  store i32 %1402, ptr %59, align 4
  %1403 = load i32, ptr %58, align 4
  %1404 = and i32 %1403, 511
  store i32 %1404, ptr %58, align 4
  br label %1426

1405:                                             ; preds = %1390
  store i32 10, ptr %59, align 4
  br label %1406

1406:                                             ; preds = %1422, %1405
  %1407 = load ptr, ptr %9, align 8
  %1408 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1407, i32 0, i32 17
  %1409 = load i32, ptr %58, align 4
  %1410 = xor i32 %1409, -1
  %1411 = sext i32 %1410 to i64
  %1412 = load i64, ptr %23, align 8
  %1413 = load i32, ptr %59, align 4
  %1414 = add i32 %1413, 1
  store i32 %1414, ptr %59, align 4
  %1415 = zext i32 %1413 to i64
  %1416 = lshr i64 %1412, %1415
  %1417 = and i64 %1416, 1
  %1418 = add i64 %1411, %1417
  %1419 = getelementptr inbounds [38 x i16], ptr %1408, i64 0, i64 %1418
  %1420 = load i16, ptr %1419, align 2
  %1421 = sext i16 %1420 to i32
  store i32 %1421, ptr %58, align 4
  br label %1422

1422:                                             ; preds = %1406
  %1423 = load i32, ptr %58, align 4
  %1424 = icmp slt i32 %1423, 0
  br i1 %1424, label %1406, label %1425, !llvm.loop !47

1425:                                             ; preds = %1422
  br label %1426

1426:                                             ; preds = %1425, %1400
  %1427 = load i32, ptr %58, align 4
  store i32 %1427, ptr %20, align 4
  %1428 = load i32, ptr %59, align 4
  %1429 = load i64, ptr %23, align 8
  %1430 = zext i32 %1428 to i64
  %1431 = lshr i64 %1429, %1430
  store i64 %1431, ptr %23, align 8
  %1432 = load i32, ptr %59, align 4
  %1433 = load i32, ptr %19, align 4
  %1434 = sub i32 %1433, %1432
  store i32 %1434, ptr %19, align 4
  br label %1435

1435:                                             ; preds = %1426
  %1436 = load i32, ptr %20, align 4
  %1437 = icmp ult i32 %1436, 16
  br i1 %1437, label %1438, label %1447

1438:                                             ; preds = %1435
  %1439 = load i32, ptr %20, align 4
  %1440 = trunc i32 %1439 to i8
  %1441 = load ptr, ptr %9, align 8
  %1442 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1441, i32 0, i32 22
  %1443 = load i32, ptr %21, align 4
  %1444 = add i32 %1443, 1
  store i32 %1444, ptr %21, align 4
  %1445 = zext i32 %1443 to i64
  %1446 = getelementptr inbounds [457 x i8], ptr %1442, i64 0, i64 %1445
  store i8 %1440, ptr %1446, align 1
  br label %1248, !llvm.loop !48

1447:                                             ; preds = %1435
  %1448 = load i32, ptr %20, align 4
  %1449 = icmp eq i32 %1448, 16
  br i1 %1449, label %1450, label %1462

1450:                                             ; preds = %1447
  %1451 = load i32, ptr %21, align 4
  %1452 = icmp ne i32 %1451, 0
  br i1 %1452, label %1462, label %1453

1453:                                             ; preds = %1450
  br label %1454

1454:                                             ; preds = %1453
  br label %1455

1455:                                             ; preds = %1460, %1454
  br label %1456

1456:                                             ; preds = %1455
  store i32 -1, ptr %18, align 4
  %1457 = load ptr, ptr %9, align 8
  %1458 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1457, i32 0, i32 0
  store i32 17, ptr %1458, align 8
  br label %2656

1459:                                             ; preds = %128
  br label %1460

1460:                                             ; preds = %1459
  br label %1455

1461:                                             ; No predecessors!
  br label %1462

1462:                                             ; preds = %1461, %1450, %1447
  %1463 = load i32, ptr %20, align 4
  %1464 = sub i32 %1463, 16
  %1465 = zext i32 %1464 to i64
  %1466 = getelementptr inbounds [4 x i8], ptr @.str.15, i64 0, i64 %1465
  %1467 = load i8, ptr %1466, align 1
  %1468 = sext i8 %1467 to i32
  store i32 %1468, ptr %22, align 4
  br label %1469

1469:                                             ; preds = %1462
  %1470 = load i32, ptr %19, align 4
  %1471 = load i32, ptr %22, align 4
  %1472 = icmp ult i32 %1470, %1471
  br i1 %1472, label %1473, label %1511

1473:                                             ; preds = %1469
  br label %1474

1474:                                             ; preds = %1506, %1473
  br label %1475

1475:                                             ; preds = %1474
  br label %1476

1476:                                             ; preds = %1490, %1475
  %1477 = load ptr, ptr %24, align 8
  %1478 = load ptr, ptr %25, align 8
  %1479 = icmp uge ptr %1477, %1478
  br i1 %1479, label %1480, label %1491

1480:                                             ; preds = %1476
  br label %1481

1481:                                             ; preds = %1480
  %1482 = load i32, ptr %15, align 4
  %1483 = and i32 %1482, 2
  %1484 = icmp ne i32 %1483, 0
  %1485 = zext i1 %1484 to i64
  %1486 = select i1 %1484, i32 1, i32 -4
  store i32 %1486, ptr %18, align 4
  %1487 = load ptr, ptr %9, align 8
  %1488 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1487, i32 0, i32 0
  store i32 18, ptr %1488, align 8
  br label %2656

1489:                                             ; preds = %128
  br label %1490

1490:                                             ; preds = %1489
  br label %1476, !llvm.loop !49

1491:                                             ; preds = %1476
  %1492 = load ptr, ptr %24, align 8
  %1493 = getelementptr inbounds i8, ptr %1492, i32 1
  store ptr %1493, ptr %24, align 8
  %1494 = load i8, ptr %1492, align 1
  %1495 = zext i8 %1494 to i32
  store i32 %1495, ptr %61, align 4
  br label %1496

1496:                                             ; preds = %1491
  %1497 = load i32, ptr %61, align 4
  %1498 = zext i32 %1497 to i64
  %1499 = load i32, ptr %19, align 4
  %1500 = zext i32 %1499 to i64
  %1501 = shl i64 %1498, %1500
  %1502 = load i64, ptr %23, align 8
  %1503 = or i64 %1502, %1501
  store i64 %1503, ptr %23, align 8
  %1504 = load i32, ptr %19, align 4
  %1505 = add i32 %1504, 8
  store i32 %1505, ptr %19, align 4
  br label %1506

1506:                                             ; preds = %1496
  %1507 = load i32, ptr %19, align 4
  %1508 = load i32, ptr %22, align 4
  %1509 = icmp ult i32 %1507, %1508
  br i1 %1509, label %1474, label %1510, !llvm.loop !50

1510:                                             ; preds = %1506
  br label %1511

1511:                                             ; preds = %1510, %1469
  %1512 = load i64, ptr %23, align 8
  %1513 = load i32, ptr %22, align 4
  %1514 = shl i32 1, %1513
  %1515 = sub nsw i32 %1514, 1
  %1516 = sext i32 %1515 to i64
  %1517 = and i64 %1512, %1516
  %1518 = trunc i64 %1517 to i32
  store i32 %1518, ptr %57, align 4
  %1519 = load i32, ptr %22, align 4
  %1520 = load i64, ptr %23, align 8
  %1521 = zext i32 %1519 to i64
  %1522 = lshr i64 %1520, %1521
  store i64 %1522, ptr %23, align 8
  %1523 = load i32, ptr %22, align 4
  %1524 = load i32, ptr %19, align 4
  %1525 = sub i32 %1524, %1523
  store i32 %1525, ptr %19, align 4
  br label %1526

1526:                                             ; preds = %1511
  %1527 = load i32, ptr %20, align 4
  %1528 = sub i32 %1527, 16
  %1529 = zext i32 %1528 to i64
  %1530 = getelementptr inbounds [4 x i8], ptr @.str.16, i64 0, i64 %1529
  %1531 = load i8, ptr %1530, align 1
  %1532 = sext i8 %1531 to i32
  %1533 = load i32, ptr %57, align 4
  %1534 = add i32 %1533, %1532
  store i32 %1534, ptr %57, align 4
  %1535 = load ptr, ptr %9, align 8
  %1536 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1535, i32 0, i32 22
  %1537 = getelementptr inbounds [457 x i8], ptr %1536, i64 0, i64 0
  %1538 = load i32, ptr %21, align 4
  %1539 = zext i32 %1538 to i64
  %1540 = getelementptr inbounds i8, ptr %1537, i64 %1539
  %1541 = load i32, ptr %20, align 4
  %1542 = icmp eq i32 %1541, 16
  br i1 %1542, label %1543, label %1552

1543:                                             ; preds = %1526
  %1544 = load ptr, ptr %9, align 8
  %1545 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1544, i32 0, i32 22
  %1546 = load i32, ptr %21, align 4
  %1547 = sub i32 %1546, 1
  %1548 = zext i32 %1547 to i64
  %1549 = getelementptr inbounds [457 x i8], ptr %1545, i64 0, i64 %1548
  %1550 = load i8, ptr %1549, align 1
  %1551 = zext i8 %1550 to i32
  br label %1553

1552:                                             ; preds = %1526
  br label %1553

1553:                                             ; preds = %1552, %1543
  %1554 = phi i32 [ %1551, %1543 ], [ 0, %1552 ]
  %1555 = load i32, ptr %57, align 4
  %1556 = zext i32 %1555 to i64
  %1557 = load ptr, ptr %9, align 8
  %1558 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1557, i32 0, i32 22
  %1559 = getelementptr inbounds [457 x i8], ptr %1558, i64 0, i64 0
  %1560 = load i32, ptr %21, align 4
  %1561 = zext i32 %1560 to i64
  %1562 = getelementptr inbounds i8, ptr %1559, i64 %1561
  %1563 = call i64 @llvm.objectsize.i64.p0(ptr %1562, i1 false, i1 true, i1 false)
  %1564 = call ptr @__memset_chk(ptr noundef %1540, i32 noundef %1554, i64 noundef %1556, i64 noundef %1563) #11
  %1565 = load i32, ptr %57, align 4
  %1566 = load i32, ptr %21, align 4
  %1567 = add i32 %1566, %1565
  store i32 %1567, ptr %21, align 4
  br label %1248, !llvm.loop !48

1568:                                             ; preds = %1248
  %1569 = load ptr, ptr %9, align 8
  %1570 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1569, i32 0, i32 11
  %1571 = getelementptr inbounds [3 x i32], ptr %1570, i64 0, i64 0
  %1572 = load i32, ptr %1571, align 4
  %1573 = load ptr, ptr %9, align 8
  %1574 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1573, i32 0, i32 11
  %1575 = getelementptr inbounds [3 x i32], ptr %1574, i64 0, i64 1
  %1576 = load i32, ptr %1575, align 4
  %1577 = add i32 %1572, %1576
  %1578 = load i32, ptr %21, align 4
  %1579 = icmp ne i32 %1577, %1578
  br i1 %1579, label %1580, label %1589

1580:                                             ; preds = %1568
  br label %1581

1581:                                             ; preds = %1580
  br label %1582

1582:                                             ; preds = %1587, %1581
  br label %1583

1583:                                             ; preds = %1582
  store i32 -1, ptr %18, align 4
  %1584 = load ptr, ptr %9, align 8
  %1585 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1584, i32 0, i32 0
  store i32 21, ptr %1585, align 8
  br label %2656

1586:                                             ; preds = %128
  br label %1587

1587:                                             ; preds = %1586
  br label %1582

1588:                                             ; No predecessors!
  br label %1589

1589:                                             ; preds = %1588, %1568
  %1590 = load ptr, ptr %9, align 8
  %1591 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1590, i32 0, i32 18
  %1592 = getelementptr inbounds [288 x i8], ptr %1591, i64 0, i64 0
  %1593 = load ptr, ptr %9, align 8
  %1594 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1593, i32 0, i32 22
  %1595 = getelementptr inbounds [457 x i8], ptr %1594, i64 0, i64 0
  %1596 = load ptr, ptr %9, align 8
  %1597 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1596, i32 0, i32 11
  %1598 = getelementptr inbounds [3 x i32], ptr %1597, i64 0, i64 0
  %1599 = load i32, ptr %1598, align 4
  %1600 = zext i32 %1599 to i64
  %1601 = load ptr, ptr %9, align 8
  %1602 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1601, i32 0, i32 18
  %1603 = getelementptr inbounds [288 x i8], ptr %1602, i64 0, i64 0
  %1604 = call i64 @llvm.objectsize.i64.p0(ptr %1603, i1 false, i1 true, i1 false)
  %1605 = call ptr @__memcpy_chk(ptr noundef %1592, ptr noundef %1595, i64 noundef %1600, i64 noundef %1604) #11
  %1606 = load ptr, ptr %9, align 8
  %1607 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1606, i32 0, i32 19
  %1608 = getelementptr inbounds [32 x i8], ptr %1607, i64 0, i64 0
  %1609 = load ptr, ptr %9, align 8
  %1610 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1609, i32 0, i32 22
  %1611 = getelementptr inbounds [457 x i8], ptr %1610, i64 0, i64 0
  %1612 = load ptr, ptr %9, align 8
  %1613 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1612, i32 0, i32 11
  %1614 = getelementptr inbounds [3 x i32], ptr %1613, i64 0, i64 0
  %1615 = load i32, ptr %1614, align 4
  %1616 = zext i32 %1615 to i64
  %1617 = getelementptr inbounds i8, ptr %1611, i64 %1616
  %1618 = load ptr, ptr %9, align 8
  %1619 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1618, i32 0, i32 11
  %1620 = getelementptr inbounds [3 x i32], ptr %1619, i64 0, i64 1
  %1621 = load i32, ptr %1620, align 4
  %1622 = zext i32 %1621 to i64
  %1623 = load ptr, ptr %9, align 8
  %1624 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1623, i32 0, i32 19
  %1625 = getelementptr inbounds [32 x i8], ptr %1624, i64 0, i64 0
  %1626 = call i64 @llvm.objectsize.i64.p0(ptr %1625, i1 false, i1 true, i1 false)
  %1627 = call ptr @__memcpy_chk(ptr noundef %1608, ptr noundef %1617, i64 noundef %1622, i64 noundef %1626) #11
  br label %1628

1628:                                             ; preds = %1589, %1242
  br label %1629

1629:                                             ; preds = %1628
  %1630 = load ptr, ptr %9, align 8
  %1631 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1630, i32 0, i32 6
  %1632 = load i32, ptr %1631, align 8
  %1633 = add i32 %1632, -1
  store i32 %1633, ptr %1631, align 8
  br label %995, !llvm.loop !51

1634:                                             ; preds = %995
  br label %1635

1635:                                             ; preds = %2451, %2402, %1634
  br label %1636

1636:                                             ; preds = %1988, %1635
  %1637 = load ptr, ptr %25, align 8
  %1638 = load ptr, ptr %24, align 8
  %1639 = ptrtoint ptr %1637 to i64
  %1640 = ptrtoint ptr %1638 to i64
  %1641 = sub i64 %1639, %1640
  %1642 = icmp slt i64 %1641, 4
  br i1 %1642, label %1650, label %1643

1643:                                             ; preds = %1636
  %1644 = load ptr, ptr %27, align 8
  %1645 = load ptr, ptr %26, align 8
  %1646 = ptrtoint ptr %1644 to i64
  %1647 = ptrtoint ptr %1645 to i64
  %1648 = sub i64 %1646, %1647
  %1649 = icmp slt i64 %1648, 2
  br i1 %1649, label %1650, label %1845

1650:                                             ; preds = %1643, %1636
  br label %1651

1651:                                             ; preds = %1650
  %1652 = load i32, ptr %19, align 4
  %1653 = icmp ult i32 %1652, 15
  br i1 %1653, label %1654, label %1780

1654:                                             ; preds = %1651
  %1655 = load ptr, ptr %25, align 8
  %1656 = load ptr, ptr %24, align 8
  %1657 = ptrtoint ptr %1655 to i64
  %1658 = ptrtoint ptr %1656 to i64
  %1659 = sub i64 %1657, %1658
  %1660 = icmp slt i64 %1659, 2
  br i1 %1660, label %1661, label %1756

1661:                                             ; preds = %1654
  br label %1662

1662:                                             ; preds = %1752, %1661
  %1663 = load ptr, ptr %9, align 8
  %1664 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1663, i32 0, i32 14
  %1665 = getelementptr inbounds [3 x [1024 x i16]], ptr %1664, i64 0, i64 0
  %1666 = load i64, ptr %23, align 8
  %1667 = and i64 %1666, 1023
  %1668 = getelementptr inbounds [1024 x i16], ptr %1665, i64 0, i64 %1667
  %1669 = load i16, ptr %1668, align 2
  %1670 = sext i16 %1669 to i32
  store i32 %1670, ptr %63, align 4
  %1671 = load i32, ptr %63, align 4
  %1672 = icmp sge i32 %1671, 0
  br i1 %1672, label %1673, label %1684

1673:                                             ; preds = %1662
  %1674 = load i32, ptr %63, align 4
  %1675 = ashr i32 %1674, 9
  store i32 %1675, ptr %64, align 4
  %1676 = load i32, ptr %64, align 4
  %1677 = icmp ne i32 %1676, 0
  br i1 %1677, label %1678, label %1683

1678:                                             ; preds = %1673
  %1679 = load i32, ptr %19, align 4
  %1680 = load i32, ptr %64, align 4
  %1681 = icmp uge i32 %1679, %1680
  br i1 %1681, label %1682, label %1683

1682:                                             ; preds = %1678
  br label %1755

1683:                                             ; preds = %1678, %1673
  br label %1720

1684:                                             ; preds = %1662
  %1685 = load i32, ptr %19, align 4
  %1686 = icmp ugt i32 %1685, 10
  br i1 %1686, label %1687, label %1719

1687:                                             ; preds = %1684
  store i32 10, ptr %64, align 4
  br label %1688

1688:                                             ; preds = %1712, %1687
  %1689 = load ptr, ptr %9, align 8
  %1690 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1689, i32 0, i32 15
  %1691 = load i32, ptr %63, align 4
  %1692 = xor i32 %1691, -1
  %1693 = sext i32 %1692 to i64
  %1694 = load i64, ptr %23, align 8
  %1695 = load i32, ptr %64, align 4
  %1696 = add i32 %1695, 1
  store i32 %1696, ptr %64, align 4
  %1697 = zext i32 %1695 to i64
  %1698 = lshr i64 %1694, %1697
  %1699 = and i64 %1698, 1
  %1700 = add i64 %1693, %1699
  %1701 = getelementptr inbounds [576 x i16], ptr %1690, i64 0, i64 %1700
  %1702 = load i16, ptr %1701, align 2
  %1703 = sext i16 %1702 to i32
  store i32 %1703, ptr %63, align 4
  br label %1704

1704:                                             ; preds = %1688
  %1705 = load i32, ptr %63, align 4
  %1706 = icmp slt i32 %1705, 0
  br i1 %1706, label %1707, label %1712

1707:                                             ; preds = %1704
  %1708 = load i32, ptr %19, align 4
  %1709 = load i32, ptr %64, align 4
  %1710 = add i32 %1709, 1
  %1711 = icmp uge i32 %1708, %1710
  br label %1712

1712:                                             ; preds = %1707, %1704
  %1713 = phi i1 [ false, %1704 ], [ %1711, %1707 ]
  br i1 %1713, label %1688, label %1714, !llvm.loop !52

1714:                                             ; preds = %1712
  %1715 = load i32, ptr %63, align 4
  %1716 = icmp sge i32 %1715, 0
  br i1 %1716, label %1717, label %1718

1717:                                             ; preds = %1714
  br label %1755

1718:                                             ; preds = %1714
  br label %1719

1719:                                             ; preds = %1718, %1684
  br label %1720

1720:                                             ; preds = %1719, %1683
  br label %1721

1721:                                             ; preds = %1720
  br label %1722

1722:                                             ; preds = %1736, %1721
  %1723 = load ptr, ptr %24, align 8
  %1724 = load ptr, ptr %25, align 8
  %1725 = icmp uge ptr %1723, %1724
  br i1 %1725, label %1726, label %1737

1726:                                             ; preds = %1722
  br label %1727

1727:                                             ; preds = %1726
  %1728 = load i32, ptr %15, align 4
  %1729 = and i32 %1728, 2
  %1730 = icmp ne i32 %1729, 0
  %1731 = zext i1 %1730 to i64
  %1732 = select i1 %1730, i32 1, i32 -4
  store i32 %1732, ptr %18, align 4
  %1733 = load ptr, ptr %9, align 8
  %1734 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1733, i32 0, i32 0
  store i32 23, ptr %1734, align 8
  br label %2656

1735:                                             ; preds = %128
  br label %1736

1736:                                             ; preds = %1735
  br label %1722, !llvm.loop !53

1737:                                             ; preds = %1722
  %1738 = load ptr, ptr %24, align 8
  %1739 = getelementptr inbounds i8, ptr %1738, i32 1
  store ptr %1739, ptr %24, align 8
  %1740 = load i8, ptr %1738, align 1
  %1741 = zext i8 %1740 to i32
  store i32 %1741, ptr %65, align 4
  br label %1742

1742:                                             ; preds = %1737
  %1743 = load i32, ptr %65, align 4
  %1744 = zext i32 %1743 to i64
  %1745 = load i32, ptr %19, align 4
  %1746 = zext i32 %1745 to i64
  %1747 = shl i64 %1744, %1746
  %1748 = load i64, ptr %23, align 8
  %1749 = or i64 %1748, %1747
  store i64 %1749, ptr %23, align 8
  %1750 = load i32, ptr %19, align 4
  %1751 = add i32 %1750, 8
  store i32 %1751, ptr %19, align 4
  br label %1752

1752:                                             ; preds = %1742
  %1753 = load i32, ptr %19, align 4
  %1754 = icmp ult i32 %1753, 15
  br i1 %1754, label %1662, label %1755, !llvm.loop !54

1755:                                             ; preds = %1752, %1717, %1682
  br label %1779

1756:                                             ; preds = %1654
  %1757 = load ptr, ptr %24, align 8
  %1758 = getelementptr inbounds i8, ptr %1757, i64 0
  %1759 = load i8, ptr %1758, align 1
  %1760 = zext i8 %1759 to i64
  %1761 = load i32, ptr %19, align 4
  %1762 = zext i32 %1761 to i64
  %1763 = shl i64 %1760, %1762
  %1764 = load ptr, ptr %24, align 8
  %1765 = getelementptr inbounds i8, ptr %1764, i64 1
  %1766 = load i8, ptr %1765, align 1
  %1767 = zext i8 %1766 to i64
  %1768 = load i32, ptr %19, align 4
  %1769 = add i32 %1768, 8
  %1770 = zext i32 %1769 to i64
  %1771 = shl i64 %1767, %1770
  %1772 = or i64 %1763, %1771
  %1773 = load i64, ptr %23, align 8
  %1774 = or i64 %1773, %1772
  store i64 %1774, ptr %23, align 8
  %1775 = load ptr, ptr %24, align 8
  %1776 = getelementptr inbounds i8, ptr %1775, i64 2
  store ptr %1776, ptr %24, align 8
  %1777 = load i32, ptr %19, align 4
  %1778 = add i32 %1777, 16
  store i32 %1778, ptr %19, align 4
  br label %1779

1779:                                             ; preds = %1756, %1755
  br label %1780

1780:                                             ; preds = %1779, %1651
  %1781 = load ptr, ptr %9, align 8
  %1782 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1781, i32 0, i32 14
  %1783 = getelementptr inbounds [3 x [1024 x i16]], ptr %1782, i64 0, i64 0
  %1784 = load i64, ptr %23, align 8
  %1785 = and i64 %1784, 1023
  %1786 = getelementptr inbounds [1024 x i16], ptr %1783, i64 0, i64 %1785
  %1787 = load i16, ptr %1786, align 2
  %1788 = sext i16 %1787 to i32
  store i32 %1788, ptr %63, align 4
  %1789 = icmp sge i32 %1788, 0
  br i1 %1789, label %1790, label %1795

1790:                                             ; preds = %1780
  %1791 = load i32, ptr %63, align 4
  %1792 = ashr i32 %1791, 9
  store i32 %1792, ptr %64, align 4
  %1793 = load i32, ptr %63, align 4
  %1794 = and i32 %1793, 511
  store i32 %1794, ptr %63, align 4
  br label %1816

1795:                                             ; preds = %1780
  store i32 10, ptr %64, align 4
  br label %1796

1796:                                             ; preds = %1812, %1795
  %1797 = load ptr, ptr %9, align 8
  %1798 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1797, i32 0, i32 15
  %1799 = load i32, ptr %63, align 4
  %1800 = xor i32 %1799, -1
  %1801 = sext i32 %1800 to i64
  %1802 = load i64, ptr %23, align 8
  %1803 = load i32, ptr %64, align 4
  %1804 = add i32 %1803, 1
  store i32 %1804, ptr %64, align 4
  %1805 = zext i32 %1803 to i64
  %1806 = lshr i64 %1802, %1805
  %1807 = and i64 %1806, 1
  %1808 = add i64 %1801, %1807
  %1809 = getelementptr inbounds [576 x i16], ptr %1798, i64 0, i64 %1808
  %1810 = load i16, ptr %1809, align 2
  %1811 = sext i16 %1810 to i32
  store i32 %1811, ptr %63, align 4
  br label %1812

1812:                                             ; preds = %1796
  %1813 = load i32, ptr %63, align 4
  %1814 = icmp slt i32 %1813, 0
  br i1 %1814, label %1796, label %1815, !llvm.loop !55

1815:                                             ; preds = %1812
  br label %1816

1816:                                             ; preds = %1815, %1790
  %1817 = load i32, ptr %63, align 4
  store i32 %1817, ptr %21, align 4
  %1818 = load i32, ptr %64, align 4
  %1819 = load i64, ptr %23, align 8
  %1820 = zext i32 %1818 to i64
  %1821 = lshr i64 %1819, %1820
  store i64 %1821, ptr %23, align 8
  %1822 = load i32, ptr %64, align 4
  %1823 = load i32, ptr %19, align 4
  %1824 = sub i32 %1823, %1822
  store i32 %1824, ptr %19, align 4
  br label %1825

1825:                                             ; preds = %1816
  %1826 = load i32, ptr %21, align 4
  %1827 = icmp uge i32 %1826, 256
  br i1 %1827, label %1828, label %1829

1828:                                             ; preds = %1825
  br label %1989

1829:                                             ; preds = %1825
  br label %1830

1830:                                             ; preds = %1839, %1829
  %1831 = load ptr, ptr %26, align 8
  %1832 = load ptr, ptr %27, align 8
  %1833 = icmp uge ptr %1831, %1832
  br i1 %1833, label %1834, label %1840

1834:                                             ; preds = %1830
  br label %1835

1835:                                             ; preds = %1834
  store i32 2, ptr %18, align 4
  %1836 = load ptr, ptr %9, align 8
  %1837 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1836, i32 0, i32 0
  store i32 24, ptr %1837, align 8
  br label %2656

1838:                                             ; preds = %128
  br label %1839

1839:                                             ; preds = %1838
  br label %1830, !llvm.loop !56

1840:                                             ; preds = %1830
  %1841 = load i32, ptr %21, align 4
  %1842 = trunc i32 %1841 to i8
  %1843 = load ptr, ptr %26, align 8
  %1844 = getelementptr inbounds i8, ptr %1843, i32 1
  store ptr %1844, ptr %26, align 8
  store i8 %1842, ptr %1843, align 1
  br label %1988

1845:                                             ; preds = %1643
  %1846 = load i32, ptr %19, align 4
  %1847 = icmp ult i32 %1846, 30
  br i1 %1847, label %1848, label %1881

1848:                                             ; preds = %1845
  %1849 = load ptr, ptr %24, align 8
  %1850 = getelementptr inbounds i8, ptr %1849, i64 0
  %1851 = load i8, ptr %1850, align 1
  %1852 = zext i8 %1851 to i32
  %1853 = load ptr, ptr %24, align 8
  %1854 = getelementptr inbounds i8, ptr %1853, i64 1
  %1855 = load i8, ptr %1854, align 1
  %1856 = zext i8 %1855 to i32
  %1857 = shl i32 %1856, 8
  %1858 = or i32 %1852, %1857
  %1859 = load ptr, ptr %24, align 8
  %1860 = getelementptr inbounds i8, ptr %1859, i64 2
  %1861 = load i8, ptr %1860, align 1
  %1862 = zext i8 %1861 to i32
  %1863 = shl i32 %1862, 16
  %1864 = or i32 %1858, %1863
  %1865 = load ptr, ptr %24, align 8
  %1866 = getelementptr inbounds i8, ptr %1865, i64 3
  %1867 = load i8, ptr %1866, align 1
  %1868 = zext i8 %1867 to i32
  %1869 = shl i32 %1868, 24
  %1870 = or i32 %1864, %1869
  %1871 = zext i32 %1870 to i64
  %1872 = load i32, ptr %19, align 4
  %1873 = zext i32 %1872 to i64
  %1874 = shl i64 %1871, %1873
  %1875 = load i64, ptr %23, align 8
  %1876 = or i64 %1875, %1874
  store i64 %1876, ptr %23, align 8
  %1877 = load ptr, ptr %24, align 8
  %1878 = getelementptr inbounds i8, ptr %1877, i64 4
  store ptr %1878, ptr %24, align 8
  %1879 = load i32, ptr %19, align 4
  %1880 = add i32 %1879, 32
  store i32 %1880, ptr %19, align 4
  br label %1881

1881:                                             ; preds = %1848, %1845
  %1882 = load ptr, ptr %9, align 8
  %1883 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1882, i32 0, i32 14
  %1884 = getelementptr inbounds [3 x [1024 x i16]], ptr %1883, i64 0, i64 0
  %1885 = load i64, ptr %23, align 8
  %1886 = and i64 %1885, 1023
  %1887 = getelementptr inbounds [1024 x i16], ptr %1884, i64 0, i64 %1886
  %1888 = load i16, ptr %1887, align 2
  %1889 = sext i16 %1888 to i32
  store i32 %1889, ptr %66, align 4
  %1890 = icmp sge i32 %1889, 0
  br i1 %1890, label %1891, label %1894

1891:                                             ; preds = %1881
  %1892 = load i32, ptr %66, align 4
  %1893 = ashr i32 %1892, 9
  store i32 %1893, ptr %67, align 4
  br label %1915

1894:                                             ; preds = %1881
  store i32 10, ptr %67, align 4
  br label %1895

1895:                                             ; preds = %1911, %1894
  %1896 = load ptr, ptr %9, align 8
  %1897 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1896, i32 0, i32 15
  %1898 = load i32, ptr %66, align 4
  %1899 = xor i32 %1898, -1
  %1900 = sext i32 %1899 to i64
  %1901 = load i64, ptr %23, align 8
  %1902 = load i32, ptr %67, align 4
  %1903 = add i32 %1902, 1
  store i32 %1903, ptr %67, align 4
  %1904 = zext i32 %1902 to i64
  %1905 = lshr i64 %1901, %1904
  %1906 = and i64 %1905, 1
  %1907 = add i64 %1900, %1906
  %1908 = getelementptr inbounds [576 x i16], ptr %1897, i64 0, i64 %1907
  %1909 = load i16, ptr %1908, align 2
  %1910 = sext i16 %1909 to i32
  store i32 %1910, ptr %66, align 4
  br label %1911

1911:                                             ; preds = %1895
  %1912 = load i32, ptr %66, align 4
  %1913 = icmp slt i32 %1912, 0
  br i1 %1913, label %1895, label %1914, !llvm.loop !57

1914:                                             ; preds = %1911
  br label %1915

1915:                                             ; preds = %1914, %1891
  %1916 = load i32, ptr %66, align 4
  store i32 %1916, ptr %21, align 4
  %1917 = load i32, ptr %67, align 4
  %1918 = load i64, ptr %23, align 8
  %1919 = zext i32 %1917 to i64
  %1920 = lshr i64 %1918, %1919
  store i64 %1920, ptr %23, align 8
  %1921 = load i32, ptr %67, align 4
  %1922 = load i32, ptr %19, align 4
  %1923 = sub i32 %1922, %1921
  store i32 %1923, ptr %19, align 4
  %1924 = load i32, ptr %21, align 4
  %1925 = and i32 %1924, 256
  %1926 = icmp ne i32 %1925, 0
  br i1 %1926, label %1927, label %1928

1927:                                             ; preds = %1915
  br label %1989

1928:                                             ; preds = %1915
  %1929 = load ptr, ptr %9, align 8
  %1930 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1929, i32 0, i32 14
  %1931 = getelementptr inbounds [3 x [1024 x i16]], ptr %1930, i64 0, i64 0
  %1932 = load i64, ptr %23, align 8
  %1933 = and i64 %1932, 1023
  %1934 = getelementptr inbounds [1024 x i16], ptr %1931, i64 0, i64 %1933
  %1935 = load i16, ptr %1934, align 2
  %1936 = sext i16 %1935 to i32
  store i32 %1936, ptr %66, align 4
  %1937 = icmp sge i32 %1936, 0
  br i1 %1937, label %1938, label %1941

1938:                                             ; preds = %1928
  %1939 = load i32, ptr %66, align 4
  %1940 = ashr i32 %1939, 9
  store i32 %1940, ptr %67, align 4
  br label %1962

1941:                                             ; preds = %1928
  store i32 10, ptr %67, align 4
  br label %1942

1942:                                             ; preds = %1958, %1941
  %1943 = load ptr, ptr %9, align 8
  %1944 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %1943, i32 0, i32 15
  %1945 = load i32, ptr %66, align 4
  %1946 = xor i32 %1945, -1
  %1947 = sext i32 %1946 to i64
  %1948 = load i64, ptr %23, align 8
  %1949 = load i32, ptr %67, align 4
  %1950 = add i32 %1949, 1
  store i32 %1950, ptr %67, align 4
  %1951 = zext i32 %1949 to i64
  %1952 = lshr i64 %1948, %1951
  %1953 = and i64 %1952, 1
  %1954 = add i64 %1947, %1953
  %1955 = getelementptr inbounds [576 x i16], ptr %1944, i64 0, i64 %1954
  %1956 = load i16, ptr %1955, align 2
  %1957 = sext i16 %1956 to i32
  store i32 %1957, ptr %66, align 4
  br label %1958

1958:                                             ; preds = %1942
  %1959 = load i32, ptr %66, align 4
  %1960 = icmp slt i32 %1959, 0
  br i1 %1960, label %1942, label %1961, !llvm.loop !58

1961:                                             ; preds = %1958
  br label %1962

1962:                                             ; preds = %1961, %1938
  %1963 = load i32, ptr %67, align 4
  %1964 = load i64, ptr %23, align 8
  %1965 = zext i32 %1963 to i64
  %1966 = lshr i64 %1964, %1965
  store i64 %1966, ptr %23, align 8
  %1967 = load i32, ptr %67, align 4
  %1968 = load i32, ptr %19, align 4
  %1969 = sub i32 %1968, %1967
  store i32 %1969, ptr %19, align 4
  %1970 = load i32, ptr %21, align 4
  %1971 = trunc i32 %1970 to i8
  %1972 = load ptr, ptr %26, align 8
  %1973 = getelementptr inbounds i8, ptr %1972, i64 0
  store i8 %1971, ptr %1973, align 1
  %1974 = load i32, ptr %66, align 4
  %1975 = and i32 %1974, 256
  %1976 = icmp ne i32 %1975, 0
  br i1 %1976, label %1977, label %1981

1977:                                             ; preds = %1962
  %1978 = load ptr, ptr %26, align 8
  %1979 = getelementptr inbounds i8, ptr %1978, i32 1
  store ptr %1979, ptr %26, align 8
  %1980 = load i32, ptr %66, align 4
  store i32 %1980, ptr %21, align 4
  br label %1989

1981:                                             ; preds = %1962
  %1982 = load i32, ptr %66, align 4
  %1983 = trunc i32 %1982 to i8
  %1984 = load ptr, ptr %26, align 8
  %1985 = getelementptr inbounds i8, ptr %1984, i64 1
  store i8 %1983, ptr %1985, align 1
  %1986 = load ptr, ptr %26, align 8
  %1987 = getelementptr inbounds i8, ptr %1986, i64 2
  store ptr %1987, ptr %26, align 8
  br label %1988

1988:                                             ; preds = %1981, %1840
  br label %1636

1989:                                             ; preds = %1977, %1927, %1828
  %1990 = load i32, ptr %21, align 4
  %1991 = and i32 %1990, 511
  store i32 %1991, ptr %21, align 4
  %1992 = icmp eq i32 %1991, 256
  br i1 %1992, label %1993, label %1994

1993:                                             ; preds = %1989
  br label %2452

1994:                                             ; preds = %1989
  %1995 = load i32, ptr %21, align 4
  %1996 = sub i32 %1995, 257
  %1997 = zext i32 %1996 to i64
  %1998 = getelementptr inbounds [31 x i8], ptr @tinfl_decompress.s_length_extra, i64 0, i64 %1997
  %1999 = load i8, ptr %1998, align 1
  %2000 = zext i8 %1999 to i32
  store i32 %2000, ptr %22, align 4
  %2001 = load i32, ptr %21, align 4
  %2002 = sub i32 %2001, 257
  %2003 = zext i32 %2002 to i64
  %2004 = getelementptr inbounds [31 x i16], ptr @tinfl_decompress.s_length_base, i64 0, i64 %2003
  %2005 = load i16, ptr %2004, align 2
  %2006 = zext i16 %2005 to i32
  store i32 %2006, ptr %21, align 4
  %2007 = load i32, ptr %22, align 4
  %2008 = icmp ne i32 %2007, 0
  br i1 %2008, label %2009, label %2071

2009:                                             ; preds = %1994
  br label %2010

2010:                                             ; preds = %2009
  %2011 = load i32, ptr %19, align 4
  %2012 = load i32, ptr %22, align 4
  %2013 = icmp ult i32 %2011, %2012
  br i1 %2013, label %2014, label %2052

2014:                                             ; preds = %2010
  br label %2015

2015:                                             ; preds = %2047, %2014
  br label %2016

2016:                                             ; preds = %2015
  br label %2017

2017:                                             ; preds = %2031, %2016
  %2018 = load ptr, ptr %24, align 8
  %2019 = load ptr, ptr %25, align 8
  %2020 = icmp uge ptr %2018, %2019
  br i1 %2020, label %2021, label %2032

2021:                                             ; preds = %2017
  br label %2022

2022:                                             ; preds = %2021
  %2023 = load i32, ptr %15, align 4
  %2024 = and i32 %2023, 2
  %2025 = icmp ne i32 %2024, 0
  %2026 = zext i1 %2025 to i64
  %2027 = select i1 %2025, i32 1, i32 -4
  store i32 %2027, ptr %18, align 4
  %2028 = load ptr, ptr %9, align 8
  %2029 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2028, i32 0, i32 0
  store i32 25, ptr %2029, align 8
  br label %2656

2030:                                             ; preds = %128
  br label %2031

2031:                                             ; preds = %2030
  br label %2017, !llvm.loop !59

2032:                                             ; preds = %2017
  %2033 = load ptr, ptr %24, align 8
  %2034 = getelementptr inbounds i8, ptr %2033, i32 1
  store ptr %2034, ptr %24, align 8
  %2035 = load i8, ptr %2033, align 1
  %2036 = zext i8 %2035 to i32
  store i32 %2036, ptr %69, align 4
  br label %2037

2037:                                             ; preds = %2032
  %2038 = load i32, ptr %69, align 4
  %2039 = zext i32 %2038 to i64
  %2040 = load i32, ptr %19, align 4
  %2041 = zext i32 %2040 to i64
  %2042 = shl i64 %2039, %2041
  %2043 = load i64, ptr %23, align 8
  %2044 = or i64 %2043, %2042
  store i64 %2044, ptr %23, align 8
  %2045 = load i32, ptr %19, align 4
  %2046 = add i32 %2045, 8
  store i32 %2046, ptr %19, align 4
  br label %2047

2047:                                             ; preds = %2037
  %2048 = load i32, ptr %19, align 4
  %2049 = load i32, ptr %22, align 4
  %2050 = icmp ult i32 %2048, %2049
  br i1 %2050, label %2015, label %2051, !llvm.loop !60

2051:                                             ; preds = %2047
  br label %2052

2052:                                             ; preds = %2051, %2010
  %2053 = load i64, ptr %23, align 8
  %2054 = load i32, ptr %22, align 4
  %2055 = shl i32 1, %2054
  %2056 = sub nsw i32 %2055, 1
  %2057 = sext i32 %2056 to i64
  %2058 = and i64 %2053, %2057
  %2059 = trunc i64 %2058 to i32
  store i32 %2059, ptr %68, align 4
  %2060 = load i32, ptr %22, align 4
  %2061 = load i64, ptr %23, align 8
  %2062 = zext i32 %2060 to i64
  %2063 = lshr i64 %2061, %2062
  store i64 %2063, ptr %23, align 8
  %2064 = load i32, ptr %22, align 4
  %2065 = load i32, ptr %19, align 4
  %2066 = sub i32 %2065, %2064
  store i32 %2066, ptr %19, align 4
  br label %2067

2067:                                             ; preds = %2052
  %2068 = load i32, ptr %68, align 4
  %2069 = load i32, ptr %21, align 4
  %2070 = add i32 %2069, %2068
  store i32 %2070, ptr %21, align 4
  br label %2071

2071:                                             ; preds = %2067, %1994
  br label %2072

2072:                                             ; preds = %2071
  %2073 = load i32, ptr %19, align 4
  %2074 = icmp ult i32 %2073, 15
  br i1 %2074, label %2075, label %2201

2075:                                             ; preds = %2072
  %2076 = load ptr, ptr %25, align 8
  %2077 = load ptr, ptr %24, align 8
  %2078 = ptrtoint ptr %2076 to i64
  %2079 = ptrtoint ptr %2077 to i64
  %2080 = sub i64 %2078, %2079
  %2081 = icmp slt i64 %2080, 2
  br i1 %2081, label %2082, label %2177

2082:                                             ; preds = %2075
  br label %2083

2083:                                             ; preds = %2173, %2082
  %2084 = load ptr, ptr %9, align 8
  %2085 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2084, i32 0, i32 14
  %2086 = getelementptr inbounds [3 x [1024 x i16]], ptr %2085, i64 0, i64 1
  %2087 = load i64, ptr %23, align 8
  %2088 = and i64 %2087, 1023
  %2089 = getelementptr inbounds [1024 x i16], ptr %2086, i64 0, i64 %2088
  %2090 = load i16, ptr %2089, align 2
  %2091 = sext i16 %2090 to i32
  store i32 %2091, ptr %70, align 4
  %2092 = load i32, ptr %70, align 4
  %2093 = icmp sge i32 %2092, 0
  br i1 %2093, label %2094, label %2105

2094:                                             ; preds = %2083
  %2095 = load i32, ptr %70, align 4
  %2096 = ashr i32 %2095, 9
  store i32 %2096, ptr %71, align 4
  %2097 = load i32, ptr %71, align 4
  %2098 = icmp ne i32 %2097, 0
  br i1 %2098, label %2099, label %2104

2099:                                             ; preds = %2094
  %2100 = load i32, ptr %19, align 4
  %2101 = load i32, ptr %71, align 4
  %2102 = icmp uge i32 %2100, %2101
  br i1 %2102, label %2103, label %2104

2103:                                             ; preds = %2099
  br label %2176

2104:                                             ; preds = %2099, %2094
  br label %2141

2105:                                             ; preds = %2083
  %2106 = load i32, ptr %19, align 4
  %2107 = icmp ugt i32 %2106, 10
  br i1 %2107, label %2108, label %2140

2108:                                             ; preds = %2105
  store i32 10, ptr %71, align 4
  br label %2109

2109:                                             ; preds = %2133, %2108
  %2110 = load ptr, ptr %9, align 8
  %2111 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2110, i32 0, i32 16
  %2112 = load i32, ptr %70, align 4
  %2113 = xor i32 %2112, -1
  %2114 = sext i32 %2113 to i64
  %2115 = load i64, ptr %23, align 8
  %2116 = load i32, ptr %71, align 4
  %2117 = add i32 %2116, 1
  store i32 %2117, ptr %71, align 4
  %2118 = zext i32 %2116 to i64
  %2119 = lshr i64 %2115, %2118
  %2120 = and i64 %2119, 1
  %2121 = add i64 %2114, %2120
  %2122 = getelementptr inbounds [64 x i16], ptr %2111, i64 0, i64 %2121
  %2123 = load i16, ptr %2122, align 2
  %2124 = sext i16 %2123 to i32
  store i32 %2124, ptr %70, align 4
  br label %2125

2125:                                             ; preds = %2109
  %2126 = load i32, ptr %70, align 4
  %2127 = icmp slt i32 %2126, 0
  br i1 %2127, label %2128, label %2133

2128:                                             ; preds = %2125
  %2129 = load i32, ptr %19, align 4
  %2130 = load i32, ptr %71, align 4
  %2131 = add i32 %2130, 1
  %2132 = icmp uge i32 %2129, %2131
  br label %2133

2133:                                             ; preds = %2128, %2125
  %2134 = phi i1 [ false, %2125 ], [ %2132, %2128 ]
  br i1 %2134, label %2109, label %2135, !llvm.loop !61

2135:                                             ; preds = %2133
  %2136 = load i32, ptr %70, align 4
  %2137 = icmp sge i32 %2136, 0
  br i1 %2137, label %2138, label %2139

2138:                                             ; preds = %2135
  br label %2176

2139:                                             ; preds = %2135
  br label %2140

2140:                                             ; preds = %2139, %2105
  br label %2141

2141:                                             ; preds = %2140, %2104
  br label %2142

2142:                                             ; preds = %2141
  br label %2143

2143:                                             ; preds = %2157, %2142
  %2144 = load ptr, ptr %24, align 8
  %2145 = load ptr, ptr %25, align 8
  %2146 = icmp uge ptr %2144, %2145
  br i1 %2146, label %2147, label %2158

2147:                                             ; preds = %2143
  br label %2148

2148:                                             ; preds = %2147
  %2149 = load i32, ptr %15, align 4
  %2150 = and i32 %2149, 2
  %2151 = icmp ne i32 %2150, 0
  %2152 = zext i1 %2151 to i64
  %2153 = select i1 %2151, i32 1, i32 -4
  store i32 %2153, ptr %18, align 4
  %2154 = load ptr, ptr %9, align 8
  %2155 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2154, i32 0, i32 0
  store i32 26, ptr %2155, align 8
  br label %2656

2156:                                             ; preds = %128
  br label %2157

2157:                                             ; preds = %2156
  br label %2143, !llvm.loop !62

2158:                                             ; preds = %2143
  %2159 = load ptr, ptr %24, align 8
  %2160 = getelementptr inbounds i8, ptr %2159, i32 1
  store ptr %2160, ptr %24, align 8
  %2161 = load i8, ptr %2159, align 1
  %2162 = zext i8 %2161 to i32
  store i32 %2162, ptr %72, align 4
  br label %2163

2163:                                             ; preds = %2158
  %2164 = load i32, ptr %72, align 4
  %2165 = zext i32 %2164 to i64
  %2166 = load i32, ptr %19, align 4
  %2167 = zext i32 %2166 to i64
  %2168 = shl i64 %2165, %2167
  %2169 = load i64, ptr %23, align 8
  %2170 = or i64 %2169, %2168
  store i64 %2170, ptr %23, align 8
  %2171 = load i32, ptr %19, align 4
  %2172 = add i32 %2171, 8
  store i32 %2172, ptr %19, align 4
  br label %2173

2173:                                             ; preds = %2163
  %2174 = load i32, ptr %19, align 4
  %2175 = icmp ult i32 %2174, 15
  br i1 %2175, label %2083, label %2176, !llvm.loop !63

2176:                                             ; preds = %2173, %2138, %2103
  br label %2200

2177:                                             ; preds = %2075
  %2178 = load ptr, ptr %24, align 8
  %2179 = getelementptr inbounds i8, ptr %2178, i64 0
  %2180 = load i8, ptr %2179, align 1
  %2181 = zext i8 %2180 to i64
  %2182 = load i32, ptr %19, align 4
  %2183 = zext i32 %2182 to i64
  %2184 = shl i64 %2181, %2183
  %2185 = load ptr, ptr %24, align 8
  %2186 = getelementptr inbounds i8, ptr %2185, i64 1
  %2187 = load i8, ptr %2186, align 1
  %2188 = zext i8 %2187 to i64
  %2189 = load i32, ptr %19, align 4
  %2190 = add i32 %2189, 8
  %2191 = zext i32 %2190 to i64
  %2192 = shl i64 %2188, %2191
  %2193 = or i64 %2184, %2192
  %2194 = load i64, ptr %23, align 8
  %2195 = or i64 %2194, %2193
  store i64 %2195, ptr %23, align 8
  %2196 = load ptr, ptr %24, align 8
  %2197 = getelementptr inbounds i8, ptr %2196, i64 2
  store ptr %2197, ptr %24, align 8
  %2198 = load i32, ptr %19, align 4
  %2199 = add i32 %2198, 16
  store i32 %2199, ptr %19, align 4
  br label %2200

2200:                                             ; preds = %2177, %2176
  br label %2201

2201:                                             ; preds = %2200, %2072
  %2202 = load ptr, ptr %9, align 8
  %2203 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2202, i32 0, i32 14
  %2204 = getelementptr inbounds [3 x [1024 x i16]], ptr %2203, i64 0, i64 1
  %2205 = load i64, ptr %23, align 8
  %2206 = and i64 %2205, 1023
  %2207 = getelementptr inbounds [1024 x i16], ptr %2204, i64 0, i64 %2206
  %2208 = load i16, ptr %2207, align 2
  %2209 = sext i16 %2208 to i32
  store i32 %2209, ptr %70, align 4
  %2210 = icmp sge i32 %2209, 0
  br i1 %2210, label %2211, label %2216

2211:                                             ; preds = %2201
  %2212 = load i32, ptr %70, align 4
  %2213 = ashr i32 %2212, 9
  store i32 %2213, ptr %71, align 4
  %2214 = load i32, ptr %70, align 4
  %2215 = and i32 %2214, 511
  store i32 %2215, ptr %70, align 4
  br label %2237

2216:                                             ; preds = %2201
  store i32 10, ptr %71, align 4
  br label %2217

2217:                                             ; preds = %2233, %2216
  %2218 = load ptr, ptr %9, align 8
  %2219 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2218, i32 0, i32 16
  %2220 = load i32, ptr %70, align 4
  %2221 = xor i32 %2220, -1
  %2222 = sext i32 %2221 to i64
  %2223 = load i64, ptr %23, align 8
  %2224 = load i32, ptr %71, align 4
  %2225 = add i32 %2224, 1
  store i32 %2225, ptr %71, align 4
  %2226 = zext i32 %2224 to i64
  %2227 = lshr i64 %2223, %2226
  %2228 = and i64 %2227, 1
  %2229 = add i64 %2222, %2228
  %2230 = getelementptr inbounds [64 x i16], ptr %2219, i64 0, i64 %2229
  %2231 = load i16, ptr %2230, align 2
  %2232 = sext i16 %2231 to i32
  store i32 %2232, ptr %70, align 4
  br label %2233

2233:                                             ; preds = %2217
  %2234 = load i32, ptr %70, align 4
  %2235 = icmp slt i32 %2234, 0
  br i1 %2235, label %2217, label %2236, !llvm.loop !64

2236:                                             ; preds = %2233
  br label %2237

2237:                                             ; preds = %2236, %2211
  %2238 = load i32, ptr %70, align 4
  store i32 %2238, ptr %20, align 4
  %2239 = load i32, ptr %71, align 4
  %2240 = load i64, ptr %23, align 8
  %2241 = zext i32 %2239 to i64
  %2242 = lshr i64 %2240, %2241
  store i64 %2242, ptr %23, align 8
  %2243 = load i32, ptr %71, align 4
  %2244 = load i32, ptr %19, align 4
  %2245 = sub i32 %2244, %2243
  store i32 %2245, ptr %19, align 4
  br label %2246

2246:                                             ; preds = %2237
  %2247 = load i32, ptr %20, align 4
  %2248 = zext i32 %2247 to i64
  %2249 = getelementptr inbounds [32 x i8], ptr @tinfl_decompress.s_dist_extra, i64 0, i64 %2248
  %2250 = load i8, ptr %2249, align 1
  %2251 = zext i8 %2250 to i32
  store i32 %2251, ptr %22, align 4
  %2252 = load i32, ptr %20, align 4
  %2253 = zext i32 %2252 to i64
  %2254 = getelementptr inbounds [32 x i16], ptr @tinfl_decompress.s_dist_base, i64 0, i64 %2253
  %2255 = load i16, ptr %2254, align 2
  %2256 = zext i16 %2255 to i32
  store i32 %2256, ptr %20, align 4
  %2257 = load i32, ptr %22, align 4
  %2258 = icmp ne i32 %2257, 0
  br i1 %2258, label %2259, label %2321

2259:                                             ; preds = %2246
  br label %2260

2260:                                             ; preds = %2259
  %2261 = load i32, ptr %19, align 4
  %2262 = load i32, ptr %22, align 4
  %2263 = icmp ult i32 %2261, %2262
  br i1 %2263, label %2264, label %2302

2264:                                             ; preds = %2260
  br label %2265

2265:                                             ; preds = %2297, %2264
  br label %2266

2266:                                             ; preds = %2265
  br label %2267

2267:                                             ; preds = %2281, %2266
  %2268 = load ptr, ptr %24, align 8
  %2269 = load ptr, ptr %25, align 8
  %2270 = icmp uge ptr %2268, %2269
  br i1 %2270, label %2271, label %2282

2271:                                             ; preds = %2267
  br label %2272

2272:                                             ; preds = %2271
  %2273 = load i32, ptr %15, align 4
  %2274 = and i32 %2273, 2
  %2275 = icmp ne i32 %2274, 0
  %2276 = zext i1 %2275 to i64
  %2277 = select i1 %2275, i32 1, i32 -4
  store i32 %2277, ptr %18, align 4
  %2278 = load ptr, ptr %9, align 8
  %2279 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2278, i32 0, i32 0
  store i32 27, ptr %2279, align 8
  br label %2656

2280:                                             ; preds = %128
  br label %2281

2281:                                             ; preds = %2280
  br label %2267, !llvm.loop !65

2282:                                             ; preds = %2267
  %2283 = load ptr, ptr %24, align 8
  %2284 = getelementptr inbounds i8, ptr %2283, i32 1
  store ptr %2284, ptr %24, align 8
  %2285 = load i8, ptr %2283, align 1
  %2286 = zext i8 %2285 to i32
  store i32 %2286, ptr %74, align 4
  br label %2287

2287:                                             ; preds = %2282
  %2288 = load i32, ptr %74, align 4
  %2289 = zext i32 %2288 to i64
  %2290 = load i32, ptr %19, align 4
  %2291 = zext i32 %2290 to i64
  %2292 = shl i64 %2289, %2291
  %2293 = load i64, ptr %23, align 8
  %2294 = or i64 %2293, %2292
  store i64 %2294, ptr %23, align 8
  %2295 = load i32, ptr %19, align 4
  %2296 = add i32 %2295, 8
  store i32 %2296, ptr %19, align 4
  br label %2297

2297:                                             ; preds = %2287
  %2298 = load i32, ptr %19, align 4
  %2299 = load i32, ptr %22, align 4
  %2300 = icmp ult i32 %2298, %2299
  br i1 %2300, label %2265, label %2301, !llvm.loop !66

2301:                                             ; preds = %2297
  br label %2302

2302:                                             ; preds = %2301, %2260
  %2303 = load i64, ptr %23, align 8
  %2304 = load i32, ptr %22, align 4
  %2305 = shl i32 1, %2304
  %2306 = sub nsw i32 %2305, 1
  %2307 = sext i32 %2306 to i64
  %2308 = and i64 %2303, %2307
  %2309 = trunc i64 %2308 to i32
  store i32 %2309, ptr %73, align 4
  %2310 = load i32, ptr %22, align 4
  %2311 = load i64, ptr %23, align 8
  %2312 = zext i32 %2310 to i64
  %2313 = lshr i64 %2311, %2312
  store i64 %2313, ptr %23, align 8
  %2314 = load i32, ptr %22, align 4
  %2315 = load i32, ptr %19, align 4
  %2316 = sub i32 %2315, %2314
  store i32 %2316, ptr %19, align 4
  br label %2317

2317:                                             ; preds = %2302
  %2318 = load i32, ptr %73, align 4
  %2319 = load i32, ptr %20, align 4
  %2320 = add i32 %2319, %2318
  store i32 %2320, ptr %20, align 4
  br label %2321

2321:                                             ; preds = %2317, %2246
  %2322 = load ptr, ptr %26, align 8
  %2323 = load ptr, ptr %12, align 8
  %2324 = ptrtoint ptr %2322 to i64
  %2325 = ptrtoint ptr %2323 to i64
  %2326 = sub i64 %2324, %2325
  store i64 %2326, ptr %29, align 8
  %2327 = load i32, ptr %20, align 4
  %2328 = icmp eq i32 %2327, 0
  br i1 %2328, label %2337, label %2329

2329:                                             ; preds = %2321
  %2330 = load i32, ptr %20, align 4
  %2331 = zext i32 %2330 to i64
  %2332 = load i64, ptr %29, align 8
  %2333 = icmp ugt i64 %2331, %2332
  br i1 %2333, label %2337, label %2334

2334:                                             ; preds = %2329
  %2335 = load i64, ptr %29, align 8
  %2336 = icmp eq i64 %2335, 0
  br i1 %2336, label %2337, label %2350

2337:                                             ; preds = %2334, %2329, %2321
  %2338 = load i32, ptr %15, align 4
  %2339 = and i32 %2338, 4
  %2340 = icmp ne i32 %2339, 0
  br i1 %2340, label %2341, label %2350

2341:                                             ; preds = %2337
  br label %2342

2342:                                             ; preds = %2341
  br label %2343

2343:                                             ; preds = %2348, %2342
  br label %2344

2344:                                             ; preds = %2343
  store i32 -1, ptr %18, align 4
  %2345 = load ptr, ptr %9, align 8
  %2346 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2345, i32 0, i32 0
  store i32 37, ptr %2346, align 8
  br label %2656

2347:                                             ; preds = %128
  br label %2348

2348:                                             ; preds = %2347
  br label %2343

2349:                                             ; No predecessors!
  br label %2350

2350:                                             ; preds = %2349, %2337, %2334
  %2351 = load ptr, ptr %12, align 8
  %2352 = load i64, ptr %29, align 8
  %2353 = load i32, ptr %20, align 4
  %2354 = zext i32 %2353 to i64
  %2355 = sub i64 %2352, %2354
  %2356 = load i64, ptr %28, align 8
  %2357 = and i64 %2355, %2356
  %2358 = getelementptr inbounds i8, ptr %2351, i64 %2357
  store ptr %2358, ptr %62, align 8
  %2359 = load ptr, ptr %26, align 8
  %2360 = load ptr, ptr %62, align 8
  %2361 = icmp ugt ptr %2359, %2360
  br i1 %2361, label %2362, label %2364

2362:                                             ; preds = %2350
  %2363 = load ptr, ptr %26, align 8
  br label %2366

2364:                                             ; preds = %2350
  %2365 = load ptr, ptr %62, align 8
  br label %2366

2366:                                             ; preds = %2364, %2362
  %2367 = phi ptr [ %2363, %2362 ], [ %2365, %2364 ]
  %2368 = load i32, ptr %21, align 4
  %2369 = zext i32 %2368 to i64
  %2370 = getelementptr inbounds i8, ptr %2367, i64 %2369
  %2371 = load ptr, ptr %27, align 8
  %2372 = icmp ugt ptr %2370, %2371
  br i1 %2372, label %2373, label %2403

2373:                                             ; preds = %2366
  br label %2374

2374:                                             ; preds = %2389, %2373
  %2375 = load i32, ptr %21, align 4
  %2376 = add i32 %2375, -1
  store i32 %2376, ptr %21, align 4
  %2377 = icmp ne i32 %2375, 0
  br i1 %2377, label %2378, label %2402

2378:                                             ; preds = %2374
  br label %2379

2379:                                             ; preds = %2388, %2378
  %2380 = load ptr, ptr %26, align 8
  %2381 = load ptr, ptr %27, align 8
  %2382 = icmp uge ptr %2380, %2381
  br i1 %2382, label %2383, label %2389

2383:                                             ; preds = %2379
  br label %2384

2384:                                             ; preds = %2383
  store i32 2, ptr %18, align 4
  %2385 = load ptr, ptr %9, align 8
  %2386 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2385, i32 0, i32 0
  store i32 53, ptr %2386, align 8
  br label %2656

2387:                                             ; preds = %128
  br label %2388

2388:                                             ; preds = %2387
  br label %2379, !llvm.loop !67

2389:                                             ; preds = %2379
  %2390 = load ptr, ptr %12, align 8
  %2391 = load i64, ptr %29, align 8
  %2392 = add i64 %2391, 1
  store i64 %2392, ptr %29, align 8
  %2393 = load i32, ptr %20, align 4
  %2394 = zext i32 %2393 to i64
  %2395 = sub i64 %2391, %2394
  %2396 = load i64, ptr %28, align 8
  %2397 = and i64 %2395, %2396
  %2398 = getelementptr inbounds i8, ptr %2390, i64 %2397
  %2399 = load i8, ptr %2398, align 1
  %2400 = load ptr, ptr %26, align 8
  %2401 = getelementptr inbounds i8, ptr %2400, i32 1
  store ptr %2401, ptr %26, align 8
  store i8 %2399, ptr %2400, align 1
  br label %2374, !llvm.loop !68

2402:                                             ; preds = %2374
  br label %1635

2403:                                             ; preds = %2366
  br label %2404

2404:                                             ; preds = %2407, %2403
  %2405 = load i32, ptr %21, align 4
  %2406 = icmp ugt i32 %2405, 2
  br i1 %2406, label %2407, label %2429

2407:                                             ; preds = %2404
  %2408 = load ptr, ptr %62, align 8
  %2409 = getelementptr inbounds i8, ptr %2408, i64 0
  %2410 = load i8, ptr %2409, align 1
  %2411 = load ptr, ptr %26, align 8
  %2412 = getelementptr inbounds i8, ptr %2411, i64 0
  store i8 %2410, ptr %2412, align 1
  %2413 = load ptr, ptr %62, align 8
  %2414 = getelementptr inbounds i8, ptr %2413, i64 1
  %2415 = load i8, ptr %2414, align 1
  %2416 = load ptr, ptr %26, align 8
  %2417 = getelementptr inbounds i8, ptr %2416, i64 1
  store i8 %2415, ptr %2417, align 1
  %2418 = load ptr, ptr %62, align 8
  %2419 = getelementptr inbounds i8, ptr %2418, i64 2
  %2420 = load i8, ptr %2419, align 1
  %2421 = load ptr, ptr %26, align 8
  %2422 = getelementptr inbounds i8, ptr %2421, i64 2
  store i8 %2420, ptr %2422, align 1
  %2423 = load ptr, ptr %26, align 8
  %2424 = getelementptr inbounds i8, ptr %2423, i64 3
  store ptr %2424, ptr %26, align 8
  %2425 = load ptr, ptr %62, align 8
  %2426 = getelementptr inbounds i8, ptr %2425, i64 3
  store ptr %2426, ptr %62, align 8
  %2427 = load i32, ptr %21, align 4
  %2428 = sub i32 %2427, 3
  store i32 %2428, ptr %21, align 4
  br label %2404, !llvm.loop !69

2429:                                             ; preds = %2404
  %2430 = load i32, ptr %21, align 4
  %2431 = icmp ugt i32 %2430, 0
  br i1 %2431, label %2432, label %2451

2432:                                             ; preds = %2429
  %2433 = load ptr, ptr %62, align 8
  %2434 = getelementptr inbounds i8, ptr %2433, i64 0
  %2435 = load i8, ptr %2434, align 1
  %2436 = load ptr, ptr %26, align 8
  %2437 = getelementptr inbounds i8, ptr %2436, i64 0
  store i8 %2435, ptr %2437, align 1
  %2438 = load i32, ptr %21, align 4
  %2439 = icmp ugt i32 %2438, 1
  br i1 %2439, label %2440, label %2446

2440:                                             ; preds = %2432
  %2441 = load ptr, ptr %62, align 8
  %2442 = getelementptr inbounds i8, ptr %2441, i64 1
  %2443 = load i8, ptr %2442, align 1
  %2444 = load ptr, ptr %26, align 8
  %2445 = getelementptr inbounds i8, ptr %2444, i64 1
  store i8 %2443, ptr %2445, align 1
  br label %2446

2446:                                             ; preds = %2440, %2432
  %2447 = load i32, ptr %21, align 4
  %2448 = load ptr, ptr %26, align 8
  %2449 = zext i32 %2447 to i64
  %2450 = getelementptr inbounds i8, ptr %2448, i64 %2449
  store ptr %2450, ptr %26, align 8
  br label %2451

2451:                                             ; preds = %2446, %2429
  br label %1635

2452:                                             ; preds = %1993
  br label %2453

2453:                                             ; preds = %2452, %744
  br label %2454

2454:                                             ; preds = %2453, %730
  br label %2455

2455:                                             ; preds = %2454
  %2456 = load ptr, ptr %9, align 8
  %2457 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2456, i32 0, i32 5
  %2458 = load i32, ptr %2457, align 4
  %2459 = and i32 %2458, 1
  %2460 = icmp ne i32 %2459, 0
  %2461 = xor i1 %2460, true
  br i1 %2461, label %301, label %2462, !llvm.loop !70

2462:                                             ; preds = %2455
  br label %2463

2463:                                             ; preds = %2462
  %2464 = load i32, ptr %19, align 4
  %2465 = load i32, ptr %19, align 4
  %2466 = and i32 %2465, 7
  %2467 = icmp ult i32 %2464, %2466
  br i1 %2467, label %2468, label %2507

2468:                                             ; preds = %2463
  br label %2469

2469:                                             ; preds = %2501, %2468
  br label %2470

2470:                                             ; preds = %2469
  br label %2471

2471:                                             ; preds = %2485, %2470
  %2472 = load ptr, ptr %24, align 8
  %2473 = load ptr, ptr %25, align 8
  %2474 = icmp uge ptr %2472, %2473
  br i1 %2474, label %2475, label %2486

2475:                                             ; preds = %2471
  br label %2476

2476:                                             ; preds = %2475
  %2477 = load i32, ptr %15, align 4
  %2478 = and i32 %2477, 2
  %2479 = icmp ne i32 %2478, 0
  %2480 = zext i1 %2479 to i64
  %2481 = select i1 %2479, i32 1, i32 -4
  store i32 %2481, ptr %18, align 4
  %2482 = load ptr, ptr %9, align 8
  %2483 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2482, i32 0, i32 0
  store i32 32, ptr %2483, align 8
  br label %2656

2484:                                             ; preds = %128
  br label %2485

2485:                                             ; preds = %2484
  br label %2471, !llvm.loop !71

2486:                                             ; preds = %2471
  %2487 = load ptr, ptr %24, align 8
  %2488 = getelementptr inbounds i8, ptr %2487, i32 1
  store ptr %2488, ptr %24, align 8
  %2489 = load i8, ptr %2487, align 1
  %2490 = zext i8 %2489 to i32
  store i32 %2490, ptr %75, align 4
  br label %2491

2491:                                             ; preds = %2486
  %2492 = load i32, ptr %75, align 4
  %2493 = zext i32 %2492 to i64
  %2494 = load i32, ptr %19, align 4
  %2495 = zext i32 %2494 to i64
  %2496 = shl i64 %2493, %2495
  %2497 = load i64, ptr %23, align 8
  %2498 = or i64 %2497, %2496
  store i64 %2498, ptr %23, align 8
  %2499 = load i32, ptr %19, align 4
  %2500 = add i32 %2499, 8
  store i32 %2500, ptr %19, align 4
  br label %2501

2501:                                             ; preds = %2491
  %2502 = load i32, ptr %19, align 4
  %2503 = load i32, ptr %19, align 4
  %2504 = and i32 %2503, 7
  %2505 = icmp ult i32 %2502, %2504
  br i1 %2505, label %2469, label %2506, !llvm.loop !72

2506:                                             ; preds = %2501
  br label %2507

2507:                                             ; preds = %2506, %2463
  %2508 = load i32, ptr %19, align 4
  %2509 = and i32 %2508, 7
  %2510 = load i64, ptr %23, align 8
  %2511 = zext i32 %2509 to i64
  %2512 = lshr i64 %2510, %2511
  store i64 %2512, ptr %23, align 8
  %2513 = load i32, ptr %19, align 4
  %2514 = and i32 %2513, 7
  %2515 = load i32, ptr %19, align 4
  %2516 = sub i32 %2515, %2514
  store i32 %2516, ptr %19, align 4
  br label %2517

2517:                                             ; preds = %2507
  br label %2518

2518:                                             ; preds = %2527, %2517
  %2519 = load ptr, ptr %24, align 8
  %2520 = load ptr, ptr %10, align 8
  %2521 = icmp ugt ptr %2519, %2520
  br i1 %2521, label %2522, label %2525

2522:                                             ; preds = %2518
  %2523 = load i32, ptr %19, align 4
  %2524 = icmp uge i32 %2523, 8
  br label %2525

2525:                                             ; preds = %2522, %2518
  %2526 = phi i1 [ false, %2518 ], [ %2524, %2522 ]
  br i1 %2526, label %2527, label %2532

2527:                                             ; preds = %2525
  %2528 = load ptr, ptr %24, align 8
  %2529 = getelementptr inbounds i8, ptr %2528, i32 -1
  store ptr %2529, ptr %24, align 8
  %2530 = load i32, ptr %19, align 4
  %2531 = sub i32 %2530, 8
  store i32 %2531, ptr %19, align 4
  br label %2518, !llvm.loop !73

2532:                                             ; preds = %2525
  %2533 = load i32, ptr %19, align 4
  %2534 = zext i32 %2533 to i64
  %2535 = shl i64 -1, %2534
  %2536 = xor i64 %2535, -1
  %2537 = load i64, ptr %23, align 8
  %2538 = and i64 %2537, %2536
  store i64 %2538, ptr %23, align 8
  %2539 = load i32, ptr %19, align 4
  %2540 = icmp ne i32 %2539, 0
  %2541 = xor i1 %2540, true
  %2542 = xor i1 %2541, true
  %2543 = zext i1 %2542 to i32
  %2544 = sext i32 %2543 to i64
  %2545 = icmp ne i64 %2544, 0
  br i1 %2545, label %2546, label %2548

2546:                                             ; preds = %2532
  call void @__assert_rtn(ptr noundef @__func__.tinfl_decompress, ptr noundef @.str.11, i32 noundef 4278, ptr noundef @.str.17) #12
  unreachable

2547:                                             ; No predecessors!
  br label %2549

2548:                                             ; preds = %2532
  br label %2549

2549:                                             ; preds = %2548, %2547
  %2550 = load i32, ptr %15, align 4
  %2551 = and i32 %2550, 1
  %2552 = icmp ne i32 %2551, 0
  br i1 %2552, label %2553, label %2646

2553:                                             ; preds = %2549
  store i32 0, ptr %21, align 4
  br label %2554

2554:                                             ; preds = %2642, %2553
  %2555 = load i32, ptr %21, align 4
  %2556 = icmp ult i32 %2555, 4
  br i1 %2556, label %2557, label %2645

2557:                                             ; preds = %2554
  %2558 = load i32, ptr %19, align 4
  %2559 = icmp ne i32 %2558, 0
  br i1 %2559, label %2560, label %2610

2560:                                             ; preds = %2557
  br label %2561

2561:                                             ; preds = %2560
  %2562 = load i32, ptr %19, align 4
  %2563 = icmp ult i32 %2562, 8
  br i1 %2563, label %2564, label %2601

2564:                                             ; preds = %2561
  br label %2565

2565:                                             ; preds = %2597, %2564
  br label %2566

2566:                                             ; preds = %2565
  br label %2567

2567:                                             ; preds = %2581, %2566
  %2568 = load ptr, ptr %24, align 8
  %2569 = load ptr, ptr %25, align 8
  %2570 = icmp uge ptr %2568, %2569
  br i1 %2570, label %2571, label %2582

2571:                                             ; preds = %2567
  br label %2572

2572:                                             ; preds = %2571
  %2573 = load i32, ptr %15, align 4
  %2574 = and i32 %2573, 2
  %2575 = icmp ne i32 %2574, 0
  %2576 = zext i1 %2575 to i64
  %2577 = select i1 %2575, i32 1, i32 -4
  store i32 %2577, ptr %18, align 4
  %2578 = load ptr, ptr %9, align 8
  %2579 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2578, i32 0, i32 0
  store i32 41, ptr %2579, align 8
  br label %2656

2580:                                             ; preds = %128
  br label %2581

2581:                                             ; preds = %2580
  br label %2567, !llvm.loop !74

2582:                                             ; preds = %2567
  %2583 = load ptr, ptr %24, align 8
  %2584 = getelementptr inbounds i8, ptr %2583, i32 1
  store ptr %2584, ptr %24, align 8
  %2585 = load i8, ptr %2583, align 1
  %2586 = zext i8 %2585 to i32
  store i32 %2586, ptr %77, align 4
  br label %2587

2587:                                             ; preds = %2582
  %2588 = load i32, ptr %77, align 4
  %2589 = zext i32 %2588 to i64
  %2590 = load i32, ptr %19, align 4
  %2591 = zext i32 %2590 to i64
  %2592 = shl i64 %2589, %2591
  %2593 = load i64, ptr %23, align 8
  %2594 = or i64 %2593, %2592
  store i64 %2594, ptr %23, align 8
  %2595 = load i32, ptr %19, align 4
  %2596 = add i32 %2595, 8
  store i32 %2596, ptr %19, align 4
  br label %2597

2597:                                             ; preds = %2587
  %2598 = load i32, ptr %19, align 4
  %2599 = icmp ult i32 %2598, 8
  br i1 %2599, label %2565, label %2600, !llvm.loop !75

2600:                                             ; preds = %2597
  br label %2601

2601:                                             ; preds = %2600, %2561
  %2602 = load i64, ptr %23, align 8
  %2603 = and i64 %2602, 255
  %2604 = trunc i64 %2603 to i32
  store i32 %2604, ptr %76, align 4
  %2605 = load i64, ptr %23, align 8
  %2606 = lshr i64 %2605, 8
  store i64 %2606, ptr %23, align 8
  %2607 = load i32, ptr %19, align 4
  %2608 = sub i32 %2607, 8
  store i32 %2608, ptr %19, align 4
  br label %2609

2609:                                             ; preds = %2601
  br label %2633

2610:                                             ; preds = %2557
  br label %2611

2611:                                             ; preds = %2610
  br label %2612

2612:                                             ; preds = %2626, %2611
  %2613 = load ptr, ptr %24, align 8
  %2614 = load ptr, ptr %25, align 8
  %2615 = icmp uge ptr %2613, %2614
  br i1 %2615, label %2616, label %2627

2616:                                             ; preds = %2612
  br label %2617

2617:                                             ; preds = %2616
  %2618 = load i32, ptr %15, align 4
  %2619 = and i32 %2618, 2
  %2620 = icmp ne i32 %2619, 0
  %2621 = zext i1 %2620 to i64
  %2622 = select i1 %2620, i32 1, i32 -4
  store i32 %2622, ptr %18, align 4
  %2623 = load ptr, ptr %9, align 8
  %2624 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2623, i32 0, i32 0
  store i32 42, ptr %2624, align 8
  br label %2656

2625:                                             ; preds = %128
  br label %2626

2626:                                             ; preds = %2625
  br label %2612, !llvm.loop !76

2627:                                             ; preds = %2612
  %2628 = load ptr, ptr %24, align 8
  %2629 = getelementptr inbounds i8, ptr %2628, i32 1
  store ptr %2629, ptr %24, align 8
  %2630 = load i8, ptr %2628, align 1
  %2631 = zext i8 %2630 to i32
  store i32 %2631, ptr %76, align 4
  br label %2632

2632:                                             ; preds = %2627
  br label %2633

2633:                                             ; preds = %2632, %2609
  %2634 = load ptr, ptr %9, align 8
  %2635 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2634, i32 0, i32 4
  %2636 = load i32, ptr %2635, align 8
  %2637 = shl i32 %2636, 8
  %2638 = load i32, ptr %76, align 4
  %2639 = or i32 %2637, %2638
  %2640 = load ptr, ptr %9, align 8
  %2641 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2640, i32 0, i32 4
  store i32 %2639, ptr %2641, align 8
  br label %2642

2642:                                             ; preds = %2633
  %2643 = load i32, ptr %21, align 4
  %2644 = add i32 %2643, 1
  store i32 %2644, ptr %21, align 4
  br label %2554, !llvm.loop !77

2645:                                             ; preds = %2554
  br label %2646

2646:                                             ; preds = %2645, %2549
  br label %2647

2647:                                             ; preds = %2646
  br label %2648

2648:                                             ; preds = %2653, %2647
  br label %2649

2649:                                             ; preds = %2648
  store i32 0, ptr %18, align 4
  %2650 = load ptr, ptr %9, align 8
  %2651 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2650, i32 0, i32 0
  store i32 34, ptr %2651, align 8
  br label %2656

2652:                                             ; preds = %128
  br label %2653

2653:                                             ; preds = %2652
  br label %2648

2654:                                             ; No predecessors!
  br label %2655

2655:                                             ; preds = %2654, %128
  br label %2656

2656:                                             ; preds = %2655, %2649, %2617, %2572, %2476, %2384, %2344, %2272, %2148, %2022, %1835, %1727, %1583, %1481, %1456, %1337, %1087, %939, %829, %739, %644, %633, %611, %568, %541, %487, %437, %377, %313, %293, %217, %193
  %2657 = load i32, ptr %18, align 4
  %2658 = icmp ne i32 %2657, 1
  br i1 %2658, label %2659, label %2678

2659:                                             ; preds = %2656
  %2660 = load i32, ptr %18, align 4
  %2661 = icmp ne i32 %2660, -4
  br i1 %2661, label %2662, label %2678

2662:                                             ; preds = %2659
  br label %2663

2663:                                             ; preds = %2672, %2662
  %2664 = load ptr, ptr %24, align 8
  %2665 = load ptr, ptr %10, align 8
  %2666 = icmp ugt ptr %2664, %2665
  br i1 %2666, label %2667, label %2670

2667:                                             ; preds = %2663
  %2668 = load i32, ptr %19, align 4
  %2669 = icmp uge i32 %2668, 8
  br label %2670

2670:                                             ; preds = %2667, %2663
  %2671 = phi i1 [ false, %2663 ], [ %2669, %2667 ]
  br i1 %2671, label %2672, label %2677

2672:                                             ; preds = %2670
  %2673 = load ptr, ptr %24, align 8
  %2674 = getelementptr inbounds i8, ptr %2673, i32 -1
  store ptr %2674, ptr %24, align 8
  %2675 = load i32, ptr %19, align 4
  %2676 = sub i32 %2675, 8
  store i32 %2676, ptr %19, align 4
  br label %2663, !llvm.loop !78

2677:                                             ; preds = %2670
  br label %2678

2678:                                             ; preds = %2677, %2659, %2656
  %2679 = load i32, ptr %19, align 4
  %2680 = load ptr, ptr %9, align 8
  %2681 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2680, i32 0, i32 1
  store i32 %2679, ptr %2681, align 4
  %2682 = load i64, ptr %23, align 8
  %2683 = load i32, ptr %19, align 4
  %2684 = zext i32 %2683 to i64
  %2685 = shl i64 -1, %2684
  %2686 = xor i64 %2685, -1
  %2687 = and i64 %2682, %2686
  %2688 = load ptr, ptr %9, align 8
  %2689 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2688, i32 0, i32 12
  store i64 %2687, ptr %2689, align 8
  %2690 = load i32, ptr %20, align 4
  %2691 = load ptr, ptr %9, align 8
  %2692 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2691, i32 0, i32 8
  store i32 %2690, ptr %2692, align 8
  %2693 = load i32, ptr %21, align 4
  %2694 = load ptr, ptr %9, align 8
  %2695 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2694, i32 0, i32 9
  store i32 %2693, ptr %2695, align 4
  %2696 = load i32, ptr %22, align 4
  %2697 = load ptr, ptr %9, align 8
  %2698 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2697, i32 0, i32 10
  store i32 %2696, ptr %2698, align 8
  %2699 = load i64, ptr %29, align 8
  %2700 = load ptr, ptr %9, align 8
  %2701 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2700, i32 0, i32 13
  store i64 %2699, ptr %2701, align 8
  %2702 = load ptr, ptr %24, align 8
  %2703 = load ptr, ptr %10, align 8
  %2704 = ptrtoint ptr %2702 to i64
  %2705 = ptrtoint ptr %2703 to i64
  %2706 = sub i64 %2704, %2705
  %2707 = load ptr, ptr %11, align 8
  store i64 %2706, ptr %2707, align 8
  %2708 = load ptr, ptr %26, align 8
  %2709 = load ptr, ptr %13, align 8
  %2710 = ptrtoint ptr %2708 to i64
  %2711 = ptrtoint ptr %2709 to i64
  %2712 = sub i64 %2710, %2711
  %2713 = load ptr, ptr %14, align 8
  store i64 %2712, ptr %2713, align 8
  %2714 = load i32, ptr %15, align 4
  %2715 = and i32 %2714, 9
  %2716 = icmp ne i32 %2715, 0
  br i1 %2716, label %2717, label %2872

2717:                                             ; preds = %2678
  %2718 = load i32, ptr %18, align 4
  %2719 = icmp sge i32 %2718, 0
  br i1 %2719, label %2720, label %2872

2720:                                             ; preds = %2717
  %2721 = load ptr, ptr %13, align 8
  store ptr %2721, ptr %78, align 8
  %2722 = load ptr, ptr %14, align 8
  %2723 = load i64, ptr %2722, align 8
  store i64 %2723, ptr %79, align 8
  %2724 = load ptr, ptr %9, align 8
  %2725 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2724, i32 0, i32 7
  %2726 = load i32, ptr %2725, align 4
  %2727 = and i32 %2726, 65535
  store i32 %2727, ptr %81, align 4
  %2728 = load ptr, ptr %9, align 8
  %2729 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2728, i32 0, i32 7
  %2730 = load i32, ptr %2729, align 4
  %2731 = lshr i32 %2730, 16
  store i32 %2731, ptr %82, align 4
  %2732 = load i64, ptr %79, align 8
  %2733 = urem i64 %2732, 5552
  store i64 %2733, ptr %83, align 8
  br label %2734

2734:                                             ; preds = %2841, %2720
  %2735 = load i64, ptr %79, align 8
  %2736 = icmp ne i64 %2735, 0
  br i1 %2736, label %2737, label %2849

2737:                                             ; preds = %2734
  store i32 0, ptr %80, align 4
  br label %2738

2738:                                             ; preds = %2817, %2737
  %2739 = load i32, ptr %80, align 4
  %2740 = add i32 %2739, 7
  %2741 = zext i32 %2740 to i64
  %2742 = load i64, ptr %83, align 8
  %2743 = icmp ult i64 %2741, %2742
  br i1 %2743, label %2744, label %2822

2744:                                             ; preds = %2738
  %2745 = load ptr, ptr %78, align 8
  %2746 = getelementptr inbounds i8, ptr %2745, i64 0
  %2747 = load i8, ptr %2746, align 1
  %2748 = zext i8 %2747 to i32
  %2749 = load i32, ptr %81, align 4
  %2750 = add i32 %2749, %2748
  store i32 %2750, ptr %81, align 4
  %2751 = load i32, ptr %81, align 4
  %2752 = load i32, ptr %82, align 4
  %2753 = add i32 %2752, %2751
  store i32 %2753, ptr %82, align 4
  %2754 = load ptr, ptr %78, align 8
  %2755 = getelementptr inbounds i8, ptr %2754, i64 1
  %2756 = load i8, ptr %2755, align 1
  %2757 = zext i8 %2756 to i32
  %2758 = load i32, ptr %81, align 4
  %2759 = add i32 %2758, %2757
  store i32 %2759, ptr %81, align 4
  %2760 = load i32, ptr %81, align 4
  %2761 = load i32, ptr %82, align 4
  %2762 = add i32 %2761, %2760
  store i32 %2762, ptr %82, align 4
  %2763 = load ptr, ptr %78, align 8
  %2764 = getelementptr inbounds i8, ptr %2763, i64 2
  %2765 = load i8, ptr %2764, align 1
  %2766 = zext i8 %2765 to i32
  %2767 = load i32, ptr %81, align 4
  %2768 = add i32 %2767, %2766
  store i32 %2768, ptr %81, align 4
  %2769 = load i32, ptr %81, align 4
  %2770 = load i32, ptr %82, align 4
  %2771 = add i32 %2770, %2769
  store i32 %2771, ptr %82, align 4
  %2772 = load ptr, ptr %78, align 8
  %2773 = getelementptr inbounds i8, ptr %2772, i64 3
  %2774 = load i8, ptr %2773, align 1
  %2775 = zext i8 %2774 to i32
  %2776 = load i32, ptr %81, align 4
  %2777 = add i32 %2776, %2775
  store i32 %2777, ptr %81, align 4
  %2778 = load i32, ptr %81, align 4
  %2779 = load i32, ptr %82, align 4
  %2780 = add i32 %2779, %2778
  store i32 %2780, ptr %82, align 4
  %2781 = load ptr, ptr %78, align 8
  %2782 = getelementptr inbounds i8, ptr %2781, i64 4
  %2783 = load i8, ptr %2782, align 1
  %2784 = zext i8 %2783 to i32
  %2785 = load i32, ptr %81, align 4
  %2786 = add i32 %2785, %2784
  store i32 %2786, ptr %81, align 4
  %2787 = load i32, ptr %81, align 4
  %2788 = load i32, ptr %82, align 4
  %2789 = add i32 %2788, %2787
  store i32 %2789, ptr %82, align 4
  %2790 = load ptr, ptr %78, align 8
  %2791 = getelementptr inbounds i8, ptr %2790, i64 5
  %2792 = load i8, ptr %2791, align 1
  %2793 = zext i8 %2792 to i32
  %2794 = load i32, ptr %81, align 4
  %2795 = add i32 %2794, %2793
  store i32 %2795, ptr %81, align 4
  %2796 = load i32, ptr %81, align 4
  %2797 = load i32, ptr %82, align 4
  %2798 = add i32 %2797, %2796
  store i32 %2798, ptr %82, align 4
  %2799 = load ptr, ptr %78, align 8
  %2800 = getelementptr inbounds i8, ptr %2799, i64 6
  %2801 = load i8, ptr %2800, align 1
  %2802 = zext i8 %2801 to i32
  %2803 = load i32, ptr %81, align 4
  %2804 = add i32 %2803, %2802
  store i32 %2804, ptr %81, align 4
  %2805 = load i32, ptr %81, align 4
  %2806 = load i32, ptr %82, align 4
  %2807 = add i32 %2806, %2805
  store i32 %2807, ptr %82, align 4
  %2808 = load ptr, ptr %78, align 8
  %2809 = getelementptr inbounds i8, ptr %2808, i64 7
  %2810 = load i8, ptr %2809, align 1
  %2811 = zext i8 %2810 to i32
  %2812 = load i32, ptr %81, align 4
  %2813 = add i32 %2812, %2811
  store i32 %2813, ptr %81, align 4
  %2814 = load i32, ptr %81, align 4
  %2815 = load i32, ptr %82, align 4
  %2816 = add i32 %2815, %2814
  store i32 %2816, ptr %82, align 4
  br label %2817

2817:                                             ; preds = %2744
  %2818 = load i32, ptr %80, align 4
  %2819 = add i32 %2818, 8
  store i32 %2819, ptr %80, align 4
  %2820 = load ptr, ptr %78, align 8
  %2821 = getelementptr inbounds i8, ptr %2820, i64 8
  store ptr %2821, ptr %78, align 8
  br label %2738, !llvm.loop !79

2822:                                             ; preds = %2738
  br label %2823

2823:                                             ; preds = %2838, %2822
  %2824 = load i32, ptr %80, align 4
  %2825 = zext i32 %2824 to i64
  %2826 = load i64, ptr %83, align 8
  %2827 = icmp ult i64 %2825, %2826
  br i1 %2827, label %2828, label %2841

2828:                                             ; preds = %2823
  %2829 = load ptr, ptr %78, align 8
  %2830 = getelementptr inbounds i8, ptr %2829, i32 1
  store ptr %2830, ptr %78, align 8
  %2831 = load i8, ptr %2829, align 1
  %2832 = zext i8 %2831 to i32
  %2833 = load i32, ptr %81, align 4
  %2834 = add i32 %2833, %2832
  store i32 %2834, ptr %81, align 4
  %2835 = load i32, ptr %81, align 4
  %2836 = load i32, ptr %82, align 4
  %2837 = add i32 %2836, %2835
  store i32 %2837, ptr %82, align 4
  br label %2838

2838:                                             ; preds = %2828
  %2839 = load i32, ptr %80, align 4
  %2840 = add i32 %2839, 1
  store i32 %2840, ptr %80, align 4
  br label %2823, !llvm.loop !80

2841:                                             ; preds = %2823
  %2842 = load i32, ptr %81, align 4
  %2843 = urem i32 %2842, 65521
  store i32 %2843, ptr %81, align 4
  %2844 = load i32, ptr %82, align 4
  %2845 = urem i32 %2844, 65521
  store i32 %2845, ptr %82, align 4
  %2846 = load i64, ptr %83, align 8
  %2847 = load i64, ptr %79, align 8
  %2848 = sub i64 %2847, %2846
  store i64 %2848, ptr %79, align 8
  store i64 5552, ptr %83, align 8
  br label %2734, !llvm.loop !81

2849:                                             ; preds = %2734
  %2850 = load i32, ptr %82, align 4
  %2851 = shl i32 %2850, 16
  %2852 = load i32, ptr %81, align 4
  %2853 = add i32 %2851, %2852
  %2854 = load ptr, ptr %9, align 8
  %2855 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2854, i32 0, i32 7
  store i32 %2853, ptr %2855, align 4
  %2856 = load i32, ptr %18, align 4
  %2857 = icmp eq i32 %2856, 0
  br i1 %2857, label %2858, label %2871

2858:                                             ; preds = %2849
  %2859 = load i32, ptr %15, align 4
  %2860 = and i32 %2859, 1
  %2861 = icmp ne i32 %2860, 0
  br i1 %2861, label %2862, label %2871

2862:                                             ; preds = %2858
  %2863 = load ptr, ptr %9, align 8
  %2864 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2863, i32 0, i32 7
  %2865 = load i32, ptr %2864, align 4
  %2866 = load ptr, ptr %9, align 8
  %2867 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %2866, i32 0, i32 4
  %2868 = load i32, ptr %2867, align 8
  %2869 = icmp ne i32 %2865, %2868
  br i1 %2869, label %2870, label %2871

2870:                                             ; preds = %2862
  store i32 -2, ptr %18, align 4
  br label %2871

2871:                                             ; preds = %2870, %2862, %2858, %2849
  br label %2872

2872:                                             ; preds = %2871, %2717, %2678
  %2873 = load i32, ptr %18, align 4
  store i32 %2873, ptr %8, align 4
  br label %2874

2874:                                             ; preds = %2872, %125
  %2875 = load i32, ptr %8, align 4
  ret i32 %2875
}

; Function Attrs: nounwind
declare ptr @__memcpy_chk(ptr noundef, ptr noundef, i64 noundef, i64 noundef) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.objectsize.i64.p0(ptr, i1 immarg, i1 immarg, i1 immarg) #6

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_inflateEnd(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = icmp ne ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store i32 -2, ptr %2, align 4
  br label %25

7:                                                ; preds = %1
  %8 = load ptr, ptr %3, align 8
  %9 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i32 0, i32 7
  %10 = load ptr, ptr %9, align 8
  %11 = icmp ne ptr %10, null
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = load ptr, ptr %3, align 8
  %14 = getelementptr inbounds %struct.mz_stream_s, ptr %13, i32 0, i32 9
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr %3, align 8
  %17 = getelementptr inbounds %struct.mz_stream_s, ptr %16, i32 0, i32 10
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr %3, align 8
  %20 = getelementptr inbounds %struct.mz_stream_s, ptr %19, i32 0, i32 7
  %21 = load ptr, ptr %20, align 8
  call void %15(ptr noundef %18, ptr noundef %21)
  %22 = load ptr, ptr %3, align 8
  %23 = getelementptr inbounds %struct.mz_stream_s, ptr %22, i32 0, i32 7
  store ptr null, ptr %23, align 8
  br label %24

24:                                               ; preds = %12, %7
  store i32 0, ptr %2, align 4
  br label %25

25:                                               ; preds = %24, %6
  %26 = load i32, ptr %2, align 4
  ret i32 %26
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_uncompress2(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca %struct.mz_stream_s, align 8
  %11 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store ptr %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store ptr %3, ptr %9, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %10, i8 0, i64 112, i1 false)
  %12 = load ptr, ptr %9, align 8
  %13 = load i64, ptr %12, align 8
  %14 = load ptr, ptr %7, align 8
  %15 = load i64, ptr %14, align 8
  %16 = or i64 %13, %15
  %17 = icmp ugt i64 %16, 4294967295
  br i1 %17, label %18, label %19

18:                                               ; preds = %4
  store i32 -10000, ptr %5, align 4
  br label %66

19:                                               ; preds = %4
  %20 = load ptr, ptr %8, align 8
  %21 = getelementptr inbounds %struct.mz_stream_s, ptr %10, i32 0, i32 0
  store ptr %20, ptr %21, align 8
  %22 = load ptr, ptr %9, align 8
  %23 = load i64, ptr %22, align 8
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %struct.mz_stream_s, ptr %10, i32 0, i32 1
  store i32 %24, ptr %25, align 8
  %26 = load ptr, ptr %6, align 8
  %27 = getelementptr inbounds %struct.mz_stream_s, ptr %10, i32 0, i32 3
  store ptr %26, ptr %27, align 8
  %28 = load ptr, ptr %7, align 8
  %29 = load i64, ptr %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds %struct.mz_stream_s, ptr %10, i32 0, i32 4
  store i32 %30, ptr %31, align 8
  %32 = call i32 @mz_inflateInit(ptr noundef %10)
  store i32 %32, ptr %11, align 4
  %33 = load i32, ptr %11, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %19
  %36 = load i32, ptr %11, align 4
  store i32 %36, ptr %5, align 4
  br label %66

37:                                               ; preds = %19
  %38 = call i32 @mz_inflate(ptr noundef %10, i32 noundef 4)
  store i32 %38, ptr %11, align 4
  %39 = load ptr, ptr %9, align 8
  %40 = load i64, ptr %39, align 8
  %41 = getelementptr inbounds %struct.mz_stream_s, ptr %10, i32 0, i32 1
  %42 = load i32, ptr %41, align 8
  %43 = zext i32 %42 to i64
  %44 = sub i64 %40, %43
  %45 = load ptr, ptr %9, align 8
  store i64 %44, ptr %45, align 8
  %46 = load i32, ptr %11, align 4
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %61

48:                                               ; preds = %37
  %49 = call i32 @mz_inflateEnd(ptr noundef %10)
  %50 = load i32, ptr %11, align 4
  %51 = icmp eq i32 %50, -5
  br i1 %51, label %52, label %57

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.mz_stream_s, ptr %10, i32 0, i32 1
  %54 = load i32, ptr %53, align 8
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %52
  br label %59

57:                                               ; preds = %52, %48
  %58 = load i32, ptr %11, align 4
  br label %59

59:                                               ; preds = %57, %56
  %60 = phi i32 [ -3, %56 ], [ %58, %57 ]
  store i32 %60, ptr %5, align 4
  br label %66

61:                                               ; preds = %37
  %62 = getelementptr inbounds %struct.mz_stream_s, ptr %10, i32 0, i32 5
  %63 = load i64, ptr %62, align 8
  %64 = load ptr, ptr %7, align 8
  store i64 %63, ptr %64, align 8
  %65 = call i32 @mz_inflateEnd(ptr noundef %10)
  store i32 %65, ptr %5, align 4
  br label %66

66:                                               ; preds = %61, %59, %35, %18
  %67 = load i32, ptr %5, align 4
  ret i32 %67
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_uncompress(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store ptr %2, ptr %7, align 8
  store i64 %3, ptr %8, align 8
  %9 = load ptr, ptr %5, align 8
  %10 = load ptr, ptr %6, align 8
  %11 = load ptr, ptr %7, align 8
  %12 = call i32 @mz_uncompress2(ptr noundef %9, ptr noundef %10, ptr noundef %11, ptr noundef %8)
  ret i32 %12
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @mz_error(i32 noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  store i32 0, ptr %4, align 4
  br label %5

5:                                                ; preds = %24, %1
  %6 = load i32, ptr %4, align 4
  %7 = zext i32 %6 to i64
  %8 = icmp ult i64 %7, 10
  br i1 %8, label %9, label %27

9:                                                ; preds = %5
  %10 = load i32, ptr %4, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds [10 x %struct.anon], ptr @mz_error.s_error_descs, i64 0, i64 %11
  %13 = getelementptr inbounds %struct.anon, ptr %12, i32 0, i32 0
  %14 = load i32, ptr %13, align 16
  %15 = load i32, ptr %3, align 4
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %9
  %18 = load i32, ptr %4, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [10 x %struct.anon], ptr @mz_error.s_error_descs, i64 0, i64 %19
  %21 = getelementptr inbounds %struct.anon, ptr %20, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  store ptr %22, ptr %2, align 8
  br label %28

23:                                               ; preds = %9
  br label %24

24:                                               ; preds = %23
  %25 = load i32, ptr %4, align 4
  %26 = add i32 %25, 1
  store i32 %26, ptr %4, align 4
  br label %5, !llvm.loop !82

27:                                               ; preds = %5
  store ptr null, ptr %2, align 8
  br label %28

28:                                               ; preds = %27, %17
  %29 = load ptr, ptr %2, align 8
  ret ptr %29
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @tdefl_flush_output_buffer(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  store ptr %0, ptr %2, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = getelementptr inbounds %struct.tdefl_compressor, ptr %4, i32 0, i32 29
  %6 = load ptr, ptr %5, align 8
  %7 = icmp ne ptr %6, null
  br i1 %7, label %8, label %21

8:                                                ; preds = %1
  %9 = load ptr, ptr %2, align 8
  %10 = getelementptr inbounds %struct.tdefl_compressor, ptr %9, i32 0, i32 32
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %2, align 8
  %13 = getelementptr inbounds %struct.tdefl_compressor, ptr %12, i32 0, i32 27
  %14 = load ptr, ptr %13, align 8
  %15 = ptrtoint ptr %11 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = load ptr, ptr %2, align 8
  %19 = getelementptr inbounds %struct.tdefl_compressor, ptr %18, i32 0, i32 29
  %20 = load ptr, ptr %19, align 8
  store i64 %17, ptr %20, align 8
  br label %21

21:                                               ; preds = %8, %1
  %22 = load ptr, ptr %2, align 8
  %23 = getelementptr inbounds %struct.tdefl_compressor, ptr %22, i32 0, i32 30
  %24 = load ptr, ptr %23, align 8
  %25 = icmp ne ptr %24, null
  br i1 %25, label %26, label %104

26:                                               ; preds = %21
  %27 = load ptr, ptr %2, align 8
  %28 = getelementptr inbounds %struct.tdefl_compressor, ptr %27, i32 0, i32 30
  %29 = load ptr, ptr %28, align 8
  %30 = load i64, ptr %29, align 8
  %31 = load ptr, ptr %2, align 8
  %32 = getelementptr inbounds %struct.tdefl_compressor, ptr %31, i32 0, i32 34
  %33 = load i64, ptr %32, align 8
  %34 = sub i64 %30, %33
  %35 = load ptr, ptr %2, align 8
  %36 = getelementptr inbounds %struct.tdefl_compressor, ptr %35, i32 0, i32 22
  %37 = load i32, ptr %36, align 4
  %38 = zext i32 %37 to i64
  %39 = icmp ult i64 %34, %38
  br i1 %39, label %40, label %49

40:                                               ; preds = %26
  %41 = load ptr, ptr %2, align 8
  %42 = getelementptr inbounds %struct.tdefl_compressor, ptr %41, i32 0, i32 30
  %43 = load ptr, ptr %42, align 8
  %44 = load i64, ptr %43, align 8
  %45 = load ptr, ptr %2, align 8
  %46 = getelementptr inbounds %struct.tdefl_compressor, ptr %45, i32 0, i32 34
  %47 = load i64, ptr %46, align 8
  %48 = sub i64 %44, %47
  br label %54

49:                                               ; preds = %26
  %50 = load ptr, ptr %2, align 8
  %51 = getelementptr inbounds %struct.tdefl_compressor, ptr %50, i32 0, i32 22
  %52 = load i32, ptr %51, align 4
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %49, %40
  %55 = phi i64 [ %48, %40 ], [ %53, %49 ]
  store i64 %55, ptr %3, align 8
  %56 = load ptr, ptr %2, align 8
  %57 = getelementptr inbounds %struct.tdefl_compressor, ptr %56, i32 0, i32 28
  %58 = load ptr, ptr %57, align 8
  %59 = load ptr, ptr %2, align 8
  %60 = getelementptr inbounds %struct.tdefl_compressor, ptr %59, i32 0, i32 34
  %61 = load i64, ptr %60, align 8
  %62 = getelementptr inbounds i8, ptr %58, i64 %61
  %63 = load ptr, ptr %2, align 8
  %64 = getelementptr inbounds %struct.tdefl_compressor, ptr %63, i32 0, i32 42
  %65 = getelementptr inbounds [85196 x i8], ptr %64, i64 0, i64 0
  %66 = load ptr, ptr %2, align 8
  %67 = getelementptr inbounds %struct.tdefl_compressor, ptr %66, i32 0, i32 21
  %68 = load i32, ptr %67, align 8
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i8, ptr %65, i64 %69
  %71 = load i64, ptr %3, align 8
  %72 = load ptr, ptr %2, align 8
  %73 = getelementptr inbounds %struct.tdefl_compressor, ptr %72, i32 0, i32 28
  %74 = load ptr, ptr %73, align 8
  %75 = load ptr, ptr %2, align 8
  %76 = getelementptr inbounds %struct.tdefl_compressor, ptr %75, i32 0, i32 34
  %77 = load i64, ptr %76, align 8
  %78 = getelementptr inbounds i8, ptr %74, i64 %77
  %79 = call i64 @llvm.objectsize.i64.p0(ptr %78, i1 false, i1 true, i1 false)
  %80 = call ptr @__memcpy_chk(ptr noundef %62, ptr noundef %70, i64 noundef %71, i64 noundef %79) #11
  %81 = load i64, ptr %3, align 8
  %82 = trunc i64 %81 to i32
  %83 = load ptr, ptr %2, align 8
  %84 = getelementptr inbounds %struct.tdefl_compressor, ptr %83, i32 0, i32 21
  %85 = load i32, ptr %84, align 8
  %86 = add i32 %85, %82
  store i32 %86, ptr %84, align 8
  %87 = load i64, ptr %3, align 8
  %88 = trunc i64 %87 to i32
  %89 = load ptr, ptr %2, align 8
  %90 = getelementptr inbounds %struct.tdefl_compressor, ptr %89, i32 0, i32 22
  %91 = load i32, ptr %90, align 4
  %92 = sub i32 %91, %88
  store i32 %92, ptr %90, align 4
  %93 = load i64, ptr %3, align 8
  %94 = load ptr, ptr %2, align 8
  %95 = getelementptr inbounds %struct.tdefl_compressor, ptr %94, i32 0, i32 34
  %96 = load i64, ptr %95, align 8
  %97 = add i64 %96, %93
  store i64 %97, ptr %95, align 8
  %98 = load ptr, ptr %2, align 8
  %99 = getelementptr inbounds %struct.tdefl_compressor, ptr %98, i32 0, i32 34
  %100 = load i64, ptr %99, align 8
  %101 = load ptr, ptr %2, align 8
  %102 = getelementptr inbounds %struct.tdefl_compressor, ptr %101, i32 0, i32 30
  %103 = load ptr, ptr %102, align 8
  store i64 %100, ptr %103, align 8
  br label %104

104:                                              ; preds = %54, %21
  %105 = load ptr, ptr %2, align 8
  %106 = getelementptr inbounds %struct.tdefl_compressor, ptr %105, i32 0, i32 23
  %107 = load i32, ptr %106, align 8
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %115

109:                                              ; preds = %104
  %110 = load ptr, ptr %2, align 8
  %111 = getelementptr inbounds %struct.tdefl_compressor, ptr %110, i32 0, i32 22
  %112 = load i32, ptr %111, align 4
  %113 = icmp ne i32 %112, 0
  %114 = xor i1 %113, true
  br label %115

115:                                              ; preds = %109, %104
  %116 = phi i1 [ false, %104 ], [ %114, %109 ]
  %117 = zext i1 %116 to i64
  %118 = select i1 %116, i32 1, i32 0
  ret i32 %118
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @tdefl_compress_normal(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca ptr, align 8
  %18 = alloca i8, align 1
  %19 = alloca ptr, align 8
  %20 = alloca i8, align 1
  %21 = alloca ptr, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca ptr, align 8
  %26 = alloca ptr, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca ptr, align 8
  %35 = alloca ptr, align 8
  %36 = alloca ptr, align 8
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i32, align 4
  %40 = alloca ptr, align 8
  %41 = alloca ptr, align 8
  %42 = alloca i64, align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca ptr, align 8
  %53 = alloca i8, align 1
  %54 = alloca i8, align 1
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i8, align 1
  %59 = alloca i32, align 4
  store ptr %0, ptr %40, align 8
  %60 = load ptr, ptr %40, align 8
  %61 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i32 0, i32 32
  %62 = load ptr, ptr %61, align 8
  store ptr %62, ptr %41, align 8
  %63 = load ptr, ptr %40, align 8
  %64 = getelementptr inbounds %struct.tdefl_compressor, ptr %63, i32 0, i32 33
  %65 = load i64, ptr %64, align 8
  store i64 %65, ptr %42, align 8
  %66 = load ptr, ptr %40, align 8
  %67 = getelementptr inbounds %struct.tdefl_compressor, ptr %66, i32 0, i32 31
  %68 = load i32, ptr %67, align 8
  store i32 %68, ptr %43, align 4
  br label %69

69:                                               ; preds = %1349, %1
  %70 = load i64, ptr %42, align 8
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %69
  %73 = load i32, ptr %43, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %72
  %76 = load ptr, ptr %40, align 8
  %77 = getelementptr inbounds %struct.tdefl_compressor, ptr %76, i32 0, i32 7
  %78 = load i32, ptr %77, align 8
  %79 = icmp ne i32 %78, 0
  br label %80

80:                                               ; preds = %75, %72
  %81 = phi i1 [ false, %72 ], [ %79, %75 ]
  br label %82

82:                                               ; preds = %80, %69
  %83 = phi i1 [ true, %69 ], [ %81, %80 ]
  br i1 %83, label %84, label %1350

84:                                               ; preds = %82
  %85 = load ptr, ptr %40, align 8
  %86 = getelementptr inbounds %struct.tdefl_compressor, ptr %85, i32 0, i32 7
  %87 = load i32, ptr %86, align 8
  %88 = load ptr, ptr %40, align 8
  %89 = getelementptr inbounds %struct.tdefl_compressor, ptr %88, i32 0, i32 8
  %90 = load i32, ptr %89, align 4
  %91 = add i32 %87, %90
  %92 = icmp uge i32 %91, 2
  br i1 %92, label %93, label %222

93:                                               ; preds = %84
  %94 = load ptr, ptr %40, align 8
  %95 = getelementptr inbounds %struct.tdefl_compressor, ptr %94, i32 0, i32 6
  %96 = load i32, ptr %95, align 4
  %97 = load ptr, ptr %40, align 8
  %98 = getelementptr inbounds %struct.tdefl_compressor, ptr %97, i32 0, i32 7
  %99 = load i32, ptr %98, align 8
  %100 = add i32 %96, %99
  %101 = and i32 %100, 32767
  store i32 %101, ptr %48, align 4
  %102 = load ptr, ptr %40, align 8
  %103 = getelementptr inbounds %struct.tdefl_compressor, ptr %102, i32 0, i32 6
  %104 = load i32, ptr %103, align 4
  %105 = load ptr, ptr %40, align 8
  %106 = getelementptr inbounds %struct.tdefl_compressor, ptr %105, i32 0, i32 7
  %107 = load i32, ptr %106, align 8
  %108 = add i32 %104, %107
  %109 = sub i32 %108, 2
  store i32 %109, ptr %49, align 4
  %110 = load ptr, ptr %40, align 8
  %111 = getelementptr inbounds %struct.tdefl_compressor, ptr %110, i32 0, i32 35
  %112 = load i32, ptr %49, align 4
  %113 = and i32 %112, 32767
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds [33025 x i8], ptr %111, i64 0, i64 %114
  %116 = load i8, ptr %115, align 1
  %117 = zext i8 %116 to i32
  %118 = shl i32 %117, 5
  %119 = load ptr, ptr %40, align 8
  %120 = getelementptr inbounds %struct.tdefl_compressor, ptr %119, i32 0, i32 35
  %121 = load i32, ptr %49, align 4
  %122 = add i32 %121, 1
  %123 = and i32 %122, 32767
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds [33025 x i8], ptr %120, i64 0, i64 %124
  %126 = load i8, ptr %125, align 1
  %127 = zext i8 %126 to i32
  %128 = xor i32 %118, %127
  store i32 %128, ptr %50, align 4
  %129 = load i64, ptr %42, align 8
  %130 = load ptr, ptr %40, align 8
  %131 = getelementptr inbounds %struct.tdefl_compressor, ptr %130, i32 0, i32 7
  %132 = load i32, ptr %131, align 8
  %133 = sub i32 258, %132
  %134 = zext i32 %133 to i64
  %135 = icmp ult i64 %129, %134
  br i1 %135, label %136, label %138

136:                                              ; preds = %93
  %137 = load i64, ptr %42, align 8
  br label %144

138:                                              ; preds = %93
  %139 = load ptr, ptr %40, align 8
  %140 = getelementptr inbounds %struct.tdefl_compressor, ptr %139, i32 0, i32 7
  %141 = load i32, ptr %140, align 8
  %142 = sub i32 258, %141
  %143 = zext i32 %142 to i64
  br label %144

144:                                              ; preds = %138, %136
  %145 = phi i64 [ %137, %136 ], [ %143, %138 ]
  %146 = trunc i64 %145 to i32
  store i32 %146, ptr %51, align 4
  %147 = load ptr, ptr %41, align 8
  %148 = icmp ne ptr %147, null
  br i1 %148, label %149, label %154

149:                                              ; preds = %144
  %150 = load ptr, ptr %41, align 8
  %151 = load i32, ptr %51, align 4
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds i8, ptr %150, i64 %152
  br label %155

154:                                              ; preds = %144
  br label %155

155:                                              ; preds = %154, %149
  %156 = phi ptr [ %153, %149 ], [ null, %154 ]
  store ptr %156, ptr %52, align 8
  %157 = load i32, ptr %51, align 4
  %158 = zext i32 %157 to i64
  %159 = load i64, ptr %42, align 8
  %160 = sub i64 %159, %158
  store i64 %160, ptr %42, align 8
  %161 = load i32, ptr %51, align 4
  %162 = load ptr, ptr %40, align 8
  %163 = getelementptr inbounds %struct.tdefl_compressor, ptr %162, i32 0, i32 7
  %164 = load i32, ptr %163, align 8
  %165 = add i32 %164, %161
  store i32 %165, ptr %163, align 8
  br label %166

166:                                              ; preds = %190, %155
  %167 = load ptr, ptr %41, align 8
  %168 = load ptr, ptr %52, align 8
  %169 = icmp ne ptr %167, %168
  br i1 %169, label %170, label %221

170:                                              ; preds = %166
  %171 = load ptr, ptr %41, align 8
  %172 = getelementptr inbounds i8, ptr %171, i32 1
  store ptr %172, ptr %41, align 8
  %173 = load i8, ptr %171, align 1
  store i8 %173, ptr %53, align 1
  %174 = load i8, ptr %53, align 1
  %175 = load ptr, ptr %40, align 8
  %176 = getelementptr inbounds %struct.tdefl_compressor, ptr %175, i32 0, i32 35
  %177 = load i32, ptr %48, align 4
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds [33025 x i8], ptr %176, i64 0, i64 %178
  store i8 %174, ptr %179, align 1
  %180 = load i32, ptr %48, align 4
  %181 = icmp ult i32 %180, 257
  br i1 %181, label %182, label %190

182:                                              ; preds = %170
  %183 = load i8, ptr %53, align 1
  %184 = load ptr, ptr %40, align 8
  %185 = getelementptr inbounds %struct.tdefl_compressor, ptr %184, i32 0, i32 35
  %186 = load i32, ptr %48, align 4
  %187 = add i32 32768, %186
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds [33025 x i8], ptr %185, i64 0, i64 %188
  store i8 %183, ptr %189, align 1
  br label %190

190:                                              ; preds = %182, %170
  %191 = load i32, ptr %50, align 4
  %192 = shl i32 %191, 5
  %193 = load i8, ptr %53, align 1
  %194 = zext i8 %193 to i32
  %195 = xor i32 %192, %194
  %196 = and i32 %195, 32767
  store i32 %196, ptr %50, align 4
  %197 = load ptr, ptr %40, align 8
  %198 = getelementptr inbounds %struct.tdefl_compressor, ptr %197, i32 0, i32 41
  %199 = load i32, ptr %50, align 4
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds [32768 x i16], ptr %198, i64 0, i64 %200
  %202 = load i16, ptr %201, align 2
  %203 = load ptr, ptr %40, align 8
  %204 = getelementptr inbounds %struct.tdefl_compressor, ptr %203, i32 0, i32 40
  %205 = load i32, ptr %49, align 4
  %206 = and i32 %205, 32767
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds [32768 x i16], ptr %204, i64 0, i64 %207
  store i16 %202, ptr %208, align 2
  %209 = load i32, ptr %49, align 4
  %210 = trunc i32 %209 to i16
  %211 = load ptr, ptr %40, align 8
  %212 = getelementptr inbounds %struct.tdefl_compressor, ptr %211, i32 0, i32 41
  %213 = load i32, ptr %50, align 4
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds [32768 x i16], ptr %212, i64 0, i64 %214
  store i16 %210, ptr %215, align 2
  %216 = load i32, ptr %48, align 4
  %217 = add i32 %216, 1
  %218 = and i32 %217, 32767
  store i32 %218, ptr %48, align 4
  %219 = load i32, ptr %49, align 4
  %220 = add i32 %219, 1
  store i32 %220, ptr %49, align 4
  br label %166, !llvm.loop !83

221:                                              ; preds = %166
  br label %328

222:                                              ; preds = %84
  br label %223

223:                                              ; preds = %326, %222
  %224 = load i64, ptr %42, align 8
  %225 = icmp ne i64 %224, 0
  br i1 %225, label %226, label %231

226:                                              ; preds = %223
  %227 = load ptr, ptr %40, align 8
  %228 = getelementptr inbounds %struct.tdefl_compressor, ptr %227, i32 0, i32 7
  %229 = load i32, ptr %228, align 8
  %230 = icmp ult i32 %229, 258
  br label %231

231:                                              ; preds = %226, %223
  %232 = phi i1 [ false, %223 ], [ %230, %226 ]
  br i1 %232, label %233, label %327

233:                                              ; preds = %231
  %234 = load ptr, ptr %41, align 8
  %235 = getelementptr inbounds i8, ptr %234, i32 1
  store ptr %235, ptr %41, align 8
  %236 = load i8, ptr %234, align 1
  store i8 %236, ptr %54, align 1
  %237 = load ptr, ptr %40, align 8
  %238 = getelementptr inbounds %struct.tdefl_compressor, ptr %237, i32 0, i32 6
  %239 = load i32, ptr %238, align 4
  %240 = load ptr, ptr %40, align 8
  %241 = getelementptr inbounds %struct.tdefl_compressor, ptr %240, i32 0, i32 7
  %242 = load i32, ptr %241, align 8
  %243 = add i32 %239, %242
  %244 = and i32 %243, 32767
  store i32 %244, ptr %55, align 4
  %245 = load i64, ptr %42, align 8
  %246 = add i64 %245, -1
  store i64 %246, ptr %42, align 8
  %247 = load i8, ptr %54, align 1
  %248 = load ptr, ptr %40, align 8
  %249 = getelementptr inbounds %struct.tdefl_compressor, ptr %248, i32 0, i32 35
  %250 = load i32, ptr %55, align 4
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds [33025 x i8], ptr %249, i64 0, i64 %251
  store i8 %247, ptr %252, align 1
  %253 = load i32, ptr %55, align 4
  %254 = icmp ult i32 %253, 257
  br i1 %254, label %255, label %263

255:                                              ; preds = %233
  %256 = load i8, ptr %54, align 1
  %257 = load ptr, ptr %40, align 8
  %258 = getelementptr inbounds %struct.tdefl_compressor, ptr %257, i32 0, i32 35
  %259 = load i32, ptr %55, align 4
  %260 = add i32 32768, %259
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds [33025 x i8], ptr %258, i64 0, i64 %261
  store i8 %256, ptr %262, align 1
  br label %263

263:                                              ; preds = %255, %233
  %264 = load ptr, ptr %40, align 8
  %265 = getelementptr inbounds %struct.tdefl_compressor, ptr %264, i32 0, i32 7
  %266 = load i32, ptr %265, align 8
  %267 = add i32 %266, 1
  store i32 %267, ptr %265, align 8
  %268 = load ptr, ptr %40, align 8
  %269 = getelementptr inbounds %struct.tdefl_compressor, ptr %268, i32 0, i32 8
  %270 = load i32, ptr %269, align 4
  %271 = add i32 %267, %270
  %272 = icmp uge i32 %271, 3
  br i1 %272, label %273, label %326

273:                                              ; preds = %263
  %274 = load ptr, ptr %40, align 8
  %275 = getelementptr inbounds %struct.tdefl_compressor, ptr %274, i32 0, i32 6
  %276 = load i32, ptr %275, align 4
  %277 = load ptr, ptr %40, align 8
  %278 = getelementptr inbounds %struct.tdefl_compressor, ptr %277, i32 0, i32 7
  %279 = load i32, ptr %278, align 8
  %280 = sub i32 %279, 1
  %281 = add i32 %276, %280
  %282 = sub i32 %281, 2
  store i32 %282, ptr %56, align 4
  %283 = load ptr, ptr %40, align 8
  %284 = getelementptr inbounds %struct.tdefl_compressor, ptr %283, i32 0, i32 35
  %285 = load i32, ptr %56, align 4
  %286 = and i32 %285, 32767
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds [33025 x i8], ptr %284, i64 0, i64 %287
  %289 = load i8, ptr %288, align 1
  %290 = zext i8 %289 to i32
  %291 = shl i32 %290, 10
  %292 = load ptr, ptr %40, align 8
  %293 = getelementptr inbounds %struct.tdefl_compressor, ptr %292, i32 0, i32 35
  %294 = load i32, ptr %56, align 4
  %295 = add i32 %294, 1
  %296 = and i32 %295, 32767
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds [33025 x i8], ptr %293, i64 0, i64 %297
  %299 = load i8, ptr %298, align 1
  %300 = zext i8 %299 to i32
  %301 = shl i32 %300, 5
  %302 = xor i32 %291, %301
  %303 = load i8, ptr %54, align 1
  %304 = zext i8 %303 to i32
  %305 = xor i32 %302, %304
  %306 = and i32 %305, 32767
  store i32 %306, ptr %57, align 4
  %307 = load ptr, ptr %40, align 8
  %308 = getelementptr inbounds %struct.tdefl_compressor, ptr %307, i32 0, i32 41
  %309 = load i32, ptr %57, align 4
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds [32768 x i16], ptr %308, i64 0, i64 %310
  %312 = load i16, ptr %311, align 2
  %313 = load ptr, ptr %40, align 8
  %314 = getelementptr inbounds %struct.tdefl_compressor, ptr %313, i32 0, i32 40
  %315 = load i32, ptr %56, align 4
  %316 = and i32 %315, 32767
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds [32768 x i16], ptr %314, i64 0, i64 %317
  store i16 %312, ptr %318, align 2
  %319 = load i32, ptr %56, align 4
  %320 = trunc i32 %319 to i16
  %321 = load ptr, ptr %40, align 8
  %322 = getelementptr inbounds %struct.tdefl_compressor, ptr %321, i32 0, i32 41
  %323 = load i32, ptr %57, align 4
  %324 = zext i32 %323 to i64
  %325 = getelementptr inbounds [32768 x i16], ptr %322, i64 0, i64 %324
  store i16 %320, ptr %325, align 2
  br label %326

326:                                              ; preds = %273, %263
  br label %223, !llvm.loop !84

327:                                              ; preds = %231
  br label %328

328:                                              ; preds = %327, %221
  %329 = load ptr, ptr %40, align 8
  %330 = getelementptr inbounds %struct.tdefl_compressor, ptr %329, i32 0, i32 7
  %331 = load i32, ptr %330, align 8
  %332 = sub i32 32768, %331
  %333 = load ptr, ptr %40, align 8
  %334 = getelementptr inbounds %struct.tdefl_compressor, ptr %333, i32 0, i32 8
  %335 = load i32, ptr %334, align 4
  %336 = icmp ult i32 %332, %335
  br i1 %336, label %337, label %342

337:                                              ; preds = %328
  %338 = load ptr, ptr %40, align 8
  %339 = getelementptr inbounds %struct.tdefl_compressor, ptr %338, i32 0, i32 7
  %340 = load i32, ptr %339, align 8
  %341 = sub i32 32768, %340
  br label %346

342:                                              ; preds = %328
  %343 = load ptr, ptr %40, align 8
  %344 = getelementptr inbounds %struct.tdefl_compressor, ptr %343, i32 0, i32 8
  %345 = load i32, ptr %344, align 4
  br label %346

346:                                              ; preds = %342, %337
  %347 = phi i32 [ %341, %337 ], [ %345, %342 ]
  %348 = load ptr, ptr %40, align 8
  %349 = getelementptr inbounds %struct.tdefl_compressor, ptr %348, i32 0, i32 8
  store i32 %347, ptr %349, align 4
  %350 = load i32, ptr %43, align 4
  %351 = icmp ne i32 %350, 0
  br i1 %351, label %358, label %352

352:                                              ; preds = %346
  %353 = load ptr, ptr %40, align 8
  %354 = getelementptr inbounds %struct.tdefl_compressor, ptr %353, i32 0, i32 7
  %355 = load i32, ptr %354, align 8
  %356 = icmp ult i32 %355, 258
  br i1 %356, label %357, label %358

357:                                              ; preds = %352
  br label %1350

358:                                              ; preds = %352, %346
  store i32 1, ptr %44, align 4
  store i32 0, ptr %45, align 4
  %359 = load ptr, ptr %40, align 8
  %360 = getelementptr inbounds %struct.tdefl_compressor, ptr %359, i32 0, i32 19
  %361 = load i32, ptr %360, align 8
  %362 = icmp ne i32 %361, 0
  br i1 %362, label %363, label %367

363:                                              ; preds = %358
  %364 = load ptr, ptr %40, align 8
  %365 = getelementptr inbounds %struct.tdefl_compressor, ptr %364, i32 0, i32 19
  %366 = load i32, ptr %365, align 8
  br label %368

367:                                              ; preds = %358
  br label %368

368:                                              ; preds = %367, %363
  %369 = phi i32 [ %366, %363 ], [ 2, %367 ]
  store i32 %369, ptr %46, align 4
  %370 = load ptr, ptr %40, align 8
  %371 = getelementptr inbounds %struct.tdefl_compressor, ptr %370, i32 0, i32 6
  %372 = load i32, ptr %371, align 4
  %373 = and i32 %372, 32767
  store i32 %373, ptr %47, align 4
  %374 = load ptr, ptr %40, align 8
  %375 = getelementptr inbounds %struct.tdefl_compressor, ptr %374, i32 0, i32 2
  %376 = load i32, ptr %375, align 8
  %377 = and i32 %376, 589824
  %378 = icmp ne i32 %377, 0
  br i1 %378, label %379, label %429

379:                                              ; preds = %368
  %380 = load ptr, ptr %40, align 8
  %381 = getelementptr inbounds %struct.tdefl_compressor, ptr %380, i32 0, i32 8
  %382 = load i32, ptr %381, align 4
  %383 = icmp ne i32 %382, 0
  br i1 %383, label %384, label %428

384:                                              ; preds = %379
  %385 = load ptr, ptr %40, align 8
  %386 = getelementptr inbounds %struct.tdefl_compressor, ptr %385, i32 0, i32 2
  %387 = load i32, ptr %386, align 8
  %388 = and i32 %387, 524288
  %389 = icmp ne i32 %388, 0
  br i1 %389, label %428, label %390

390:                                              ; preds = %384
  %391 = load ptr, ptr %40, align 8
  %392 = getelementptr inbounds %struct.tdefl_compressor, ptr %391, i32 0, i32 35
  %393 = load i32, ptr %47, align 4
  %394 = sub i32 %393, 1
  %395 = and i32 %394, 32767
  %396 = zext i32 %395 to i64
  %397 = getelementptr inbounds [33025 x i8], ptr %392, i64 0, i64 %396
  %398 = load i8, ptr %397, align 1
  store i8 %398, ptr %58, align 1
  store i32 0, ptr %46, align 4
  br label %399

399:                                              ; preds = %419, %390
  %400 = load i32, ptr %46, align 4
  %401 = load ptr, ptr %40, align 8
  %402 = getelementptr inbounds %struct.tdefl_compressor, ptr %401, i32 0, i32 7
  %403 = load i32, ptr %402, align 8
  %404 = icmp ult i32 %400, %403
  br i1 %404, label %405, label %422

405:                                              ; preds = %399
  %406 = load ptr, ptr %40, align 8
  %407 = getelementptr inbounds %struct.tdefl_compressor, ptr %406, i32 0, i32 35
  %408 = load i32, ptr %47, align 4
  %409 = load i32, ptr %46, align 4
  %410 = add i32 %408, %409
  %411 = zext i32 %410 to i64
  %412 = getelementptr inbounds [33025 x i8], ptr %407, i64 0, i64 %411
  %413 = load i8, ptr %412, align 1
  %414 = zext i8 %413 to i32
  %415 = load i8, ptr %58, align 1
  %416 = zext i8 %415 to i32
  %417 = icmp ne i32 %414, %416
  br i1 %417, label %418, label %419

418:                                              ; preds = %405
  br label %422

419:                                              ; preds = %405
  %420 = load i32, ptr %46, align 4
  %421 = add i32 %420, 1
  store i32 %421, ptr %46, align 4
  br label %399, !llvm.loop !85

422:                                              ; preds = %418, %399
  %423 = load i32, ptr %46, align 4
  %424 = icmp ult i32 %423, 3
  br i1 %424, label %425, label %426

425:                                              ; preds = %422
  store i32 0, ptr %46, align 4
  br label %427

426:                                              ; preds = %422
  store i32 1, ptr %45, align 4
  br label %427

427:                                              ; preds = %426, %425
  br label %428

428:                                              ; preds = %427, %384, %379
  br label %702

429:                                              ; preds = %368
  %430 = load ptr, ptr %40, align 8
  %431 = load ptr, ptr %40, align 8
  %432 = getelementptr inbounds %struct.tdefl_compressor, ptr %431, i32 0, i32 6
  %433 = load i32, ptr %432, align 4
  %434 = load ptr, ptr %40, align 8
  %435 = getelementptr inbounds %struct.tdefl_compressor, ptr %434, i32 0, i32 8
  %436 = load i32, ptr %435, align 4
  %437 = load ptr, ptr %40, align 8
  %438 = getelementptr inbounds %struct.tdefl_compressor, ptr %437, i32 0, i32 7
  %439 = load i32, ptr %438, align 8
  store ptr %430, ptr %21, align 8
  store i32 %433, ptr %22, align 4
  store i32 %436, ptr %23, align 4
  store i32 %439, ptr %24, align 4
  store ptr %45, ptr %25, align 8
  store ptr %46, ptr %26, align 8
  %440 = load i32, ptr %22, align 4
  %441 = and i32 %440, 32767
  store i32 %441, ptr %28, align 4
  %442 = load ptr, ptr %26, align 8
  %443 = load i32, ptr %442, align 4
  store i32 %443, ptr %29, align 4
  %444 = load i32, ptr %28, align 4
  store i32 %444, ptr %30, align 4
  %445 = load ptr, ptr %21, align 8
  %446 = getelementptr inbounds %struct.tdefl_compressor, ptr %445, i32 0, i32 3
  %447 = load i32, ptr %29, align 4
  %448 = icmp uge i32 %447, 32
  %449 = zext i1 %448 to i32
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds [2 x i32], ptr %446, i64 0, i64 %450
  %452 = load i32, ptr %451, align 4
  store i32 %452, ptr %33, align 4
  %453 = load ptr, ptr %21, align 8
  %454 = getelementptr inbounds %struct.tdefl_compressor, ptr %453, i32 0, i32 35
  %455 = load i32, ptr %28, align 4
  %456 = zext i32 %455 to i64
  %457 = getelementptr inbounds i8, ptr %454, i64 %456
  store ptr %457, ptr %34, align 8
  %458 = load ptr, ptr %21, align 8
  %459 = getelementptr inbounds %struct.tdefl_compressor, ptr %458, i32 0, i32 35
  %460 = load i32, ptr %28, align 4
  %461 = load i32, ptr %29, align 4
  %462 = add i32 %460, %461
  %463 = zext i32 %462 to i64
  %464 = getelementptr inbounds [33025 x i8], ptr %459, i64 0, i64 %463
  %465 = load i8, ptr %464, align 1
  store i8 %465, ptr %37, align 1
  %466 = load ptr, ptr %21, align 8
  %467 = getelementptr inbounds %struct.tdefl_compressor, ptr %466, i32 0, i32 35
  %468 = load i32, ptr %28, align 4
  %469 = load i32, ptr %29, align 4
  %470 = add i32 %468, %469
  %471 = sub i32 %470, 1
  %472 = zext i32 %471 to i64
  %473 = getelementptr inbounds [33025 x i8], ptr %467, i64 0, i64 %472
  %474 = load i8, ptr %473, align 1
  store i8 %474, ptr %38, align 1
  %475 = load i32, ptr %24, align 4
  %476 = icmp ule i32 %475, 258
  %477 = xor i1 %476, true
  %478 = zext i1 %477 to i32
  %479 = sext i32 %478 to i64
  br i1 %477, label %480, label %481

480:                                              ; preds = %429
  call void @__assert_rtn(ptr noundef @__func__.tdefl_find_match, ptr noundef @.str.11, i32 noundef 2912, ptr noundef @.str.69) #13
  unreachable

481:                                              ; preds = %429
  %482 = load i32, ptr %24, align 4
  %483 = load i32, ptr %29, align 4
  %484 = icmp ule i32 %482, %483
  br i1 %484, label %485, label %486

485:                                              ; preds = %481
  br label %701

486:                                              ; preds = %481
  br label %487

487:                                              ; preds = %700, %486
  br label %488

488:                                              ; preds = %640, %487
  %489 = load i32, ptr %33, align 4
  %490 = add i32 %489, -1
  store i32 %490, ptr %33, align 4
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %492, label %493

492:                                              ; preds = %488
  br label %701

493:                                              ; preds = %488
  %494 = load ptr, ptr %21, align 8
  %495 = getelementptr inbounds %struct.tdefl_compressor, ptr %494, i32 0, i32 40
  %496 = load i32, ptr %30, align 4
  %497 = zext i32 %496 to i64
  %498 = getelementptr inbounds [32768 x i16], ptr %495, i64 0, i64 %497
  %499 = load i16, ptr %498, align 2
  %500 = zext i16 %499 to i32
  store i32 %500, ptr %31, align 4
  %501 = load i32, ptr %31, align 4
  %502 = icmp ne i32 %501, 0
  br i1 %502, label %503, label %511

503:                                              ; preds = %493
  %504 = load i32, ptr %22, align 4
  %505 = load i32, ptr %31, align 4
  %506 = sub i32 %504, %505
  %507 = trunc i32 %506 to i16
  %508 = zext i16 %507 to i32
  store i32 %508, ptr %27, align 4
  %509 = load i32, ptr %23, align 4
  %510 = icmp ugt i32 %508, %509
  br i1 %510, label %511, label %512

511:                                              ; preds = %503, %493
  br label %701

512:                                              ; preds = %503
  %513 = load i32, ptr %31, align 4
  %514 = and i32 %513, 32767
  store i32 %514, ptr %30, align 4
  %515 = load ptr, ptr %21, align 8
  %516 = getelementptr inbounds %struct.tdefl_compressor, ptr %515, i32 0, i32 35
  %517 = load i32, ptr %30, align 4
  %518 = load i32, ptr %29, align 4
  %519 = add i32 %517, %518
  %520 = zext i32 %519 to i64
  %521 = getelementptr inbounds [33025 x i8], ptr %516, i64 0, i64 %520
  %522 = load i8, ptr %521, align 1
  %523 = zext i8 %522 to i32
  %524 = load i8, ptr %37, align 1
  %525 = zext i8 %524 to i32
  %526 = icmp eq i32 %523, %525
  br i1 %526, label %527, label %542

527:                                              ; preds = %512
  %528 = load ptr, ptr %21, align 8
  %529 = getelementptr inbounds %struct.tdefl_compressor, ptr %528, i32 0, i32 35
  %530 = load i32, ptr %30, align 4
  %531 = load i32, ptr %29, align 4
  %532 = add i32 %530, %531
  %533 = sub i32 %532, 1
  %534 = zext i32 %533 to i64
  %535 = getelementptr inbounds [33025 x i8], ptr %529, i64 0, i64 %534
  %536 = load i8, ptr %535, align 1
  %537 = zext i8 %536 to i32
  %538 = load i8, ptr %38, align 1
  %539 = zext i8 %538 to i32
  %540 = icmp eq i32 %537, %539
  br i1 %540, label %541, label %542

541:                                              ; preds = %527
  br label %641

542:                                              ; preds = %527, %512
  %543 = load ptr, ptr %21, align 8
  %544 = getelementptr inbounds %struct.tdefl_compressor, ptr %543, i32 0, i32 40
  %545 = load i32, ptr %30, align 4
  %546 = zext i32 %545 to i64
  %547 = getelementptr inbounds [32768 x i16], ptr %544, i64 0, i64 %546
  %548 = load i16, ptr %547, align 2
  %549 = zext i16 %548 to i32
  store i32 %549, ptr %31, align 4
  %550 = load i32, ptr %31, align 4
  %551 = icmp ne i32 %550, 0
  br i1 %551, label %552, label %560

552:                                              ; preds = %542
  %553 = load i32, ptr %22, align 4
  %554 = load i32, ptr %31, align 4
  %555 = sub i32 %553, %554
  %556 = trunc i32 %555 to i16
  %557 = zext i16 %556 to i32
  store i32 %557, ptr %27, align 4
  %558 = load i32, ptr %23, align 4
  %559 = icmp ugt i32 %557, %558
  br i1 %559, label %560, label %561

560:                                              ; preds = %552, %542
  br label %701

561:                                              ; preds = %552
  %562 = load i32, ptr %31, align 4
  %563 = and i32 %562, 32767
  store i32 %563, ptr %30, align 4
  %564 = load ptr, ptr %21, align 8
  %565 = getelementptr inbounds %struct.tdefl_compressor, ptr %564, i32 0, i32 35
  %566 = load i32, ptr %30, align 4
  %567 = load i32, ptr %29, align 4
  %568 = add i32 %566, %567
  %569 = zext i32 %568 to i64
  %570 = getelementptr inbounds [33025 x i8], ptr %565, i64 0, i64 %569
  %571 = load i8, ptr %570, align 1
  %572 = zext i8 %571 to i32
  %573 = load i8, ptr %37, align 1
  %574 = zext i8 %573 to i32
  %575 = icmp eq i32 %572, %574
  br i1 %575, label %576, label %591

576:                                              ; preds = %561
  %577 = load ptr, ptr %21, align 8
  %578 = getelementptr inbounds %struct.tdefl_compressor, ptr %577, i32 0, i32 35
  %579 = load i32, ptr %30, align 4
  %580 = load i32, ptr %29, align 4
  %581 = add i32 %579, %580
  %582 = sub i32 %581, 1
  %583 = zext i32 %582 to i64
  %584 = getelementptr inbounds [33025 x i8], ptr %578, i64 0, i64 %583
  %585 = load i8, ptr %584, align 1
  %586 = zext i8 %585 to i32
  %587 = load i8, ptr %38, align 1
  %588 = zext i8 %587 to i32
  %589 = icmp eq i32 %586, %588
  br i1 %589, label %590, label %591

590:                                              ; preds = %576
  br label %641

591:                                              ; preds = %576, %561
  %592 = load ptr, ptr %21, align 8
  %593 = getelementptr inbounds %struct.tdefl_compressor, ptr %592, i32 0, i32 40
  %594 = load i32, ptr %30, align 4
  %595 = zext i32 %594 to i64
  %596 = getelementptr inbounds [32768 x i16], ptr %593, i64 0, i64 %595
  %597 = load i16, ptr %596, align 2
  %598 = zext i16 %597 to i32
  store i32 %598, ptr %31, align 4
  %599 = load i32, ptr %31, align 4
  %600 = icmp ne i32 %599, 0
  br i1 %600, label %601, label %609

601:                                              ; preds = %591
  %602 = load i32, ptr %22, align 4
  %603 = load i32, ptr %31, align 4
  %604 = sub i32 %602, %603
  %605 = trunc i32 %604 to i16
  %606 = zext i16 %605 to i32
  store i32 %606, ptr %27, align 4
  %607 = load i32, ptr %23, align 4
  %608 = icmp ugt i32 %606, %607
  br i1 %608, label %609, label %610

609:                                              ; preds = %601, %591
  br label %701

610:                                              ; preds = %601
  %611 = load i32, ptr %31, align 4
  %612 = and i32 %611, 32767
  store i32 %612, ptr %30, align 4
  %613 = load ptr, ptr %21, align 8
  %614 = getelementptr inbounds %struct.tdefl_compressor, ptr %613, i32 0, i32 35
  %615 = load i32, ptr %30, align 4
  %616 = load i32, ptr %29, align 4
  %617 = add i32 %615, %616
  %618 = zext i32 %617 to i64
  %619 = getelementptr inbounds [33025 x i8], ptr %614, i64 0, i64 %618
  %620 = load i8, ptr %619, align 1
  %621 = zext i8 %620 to i32
  %622 = load i8, ptr %37, align 1
  %623 = zext i8 %622 to i32
  %624 = icmp eq i32 %621, %623
  br i1 %624, label %625, label %640

625:                                              ; preds = %610
  %626 = load ptr, ptr %21, align 8
  %627 = getelementptr inbounds %struct.tdefl_compressor, ptr %626, i32 0, i32 35
  %628 = load i32, ptr %30, align 4
  %629 = load i32, ptr %29, align 4
  %630 = add i32 %628, %629
  %631 = sub i32 %630, 1
  %632 = zext i32 %631 to i64
  %633 = getelementptr inbounds [33025 x i8], ptr %627, i64 0, i64 %632
  %634 = load i8, ptr %633, align 1
  %635 = zext i8 %634 to i32
  %636 = load i8, ptr %38, align 1
  %637 = zext i8 %636 to i32
  %638 = icmp eq i32 %635, %637
  br i1 %638, label %639, label %640

639:                                              ; preds = %625
  br label %641

640:                                              ; preds = %625, %610
  br label %488

641:                                              ; preds = %639, %590, %541
  %642 = load i32, ptr %27, align 4
  %643 = icmp ne i32 %642, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %641
  br label %701

645:                                              ; preds = %641
  %646 = load ptr, ptr %34, align 8
  store ptr %646, ptr %35, align 8
  %647 = load ptr, ptr %21, align 8
  %648 = getelementptr inbounds %struct.tdefl_compressor, ptr %647, i32 0, i32 35
  %649 = load i32, ptr %30, align 4
  %650 = zext i32 %649 to i64
  %651 = getelementptr inbounds i8, ptr %648, i64 %650
  store ptr %651, ptr %36, align 8
  store i32 0, ptr %32, align 4
  br label %652

652:                                              ; preds = %667, %645
  %653 = load i32, ptr %32, align 4
  %654 = load i32, ptr %24, align 4
  %655 = icmp ult i32 %653, %654
  br i1 %655, label %656, label %670

656:                                              ; preds = %652
  %657 = load ptr, ptr %35, align 8
  %658 = getelementptr inbounds i8, ptr %657, i32 1
  store ptr %658, ptr %35, align 8
  %659 = load i8, ptr %657, align 1
  %660 = zext i8 %659 to i32
  %661 = load ptr, ptr %36, align 8
  %662 = getelementptr inbounds i8, ptr %661, i32 1
  store ptr %662, ptr %36, align 8
  %663 = load i8, ptr %661, align 1
  %664 = zext i8 %663 to i32
  %665 = icmp ne i32 %660, %664
  br i1 %665, label %666, label %667

666:                                              ; preds = %656
  br label %670

667:                                              ; preds = %656
  %668 = load i32, ptr %32, align 4
  %669 = add i32 %668, 1
  store i32 %669, ptr %32, align 4
  br label %652, !llvm.loop !86

670:                                              ; preds = %666, %652
  %671 = load i32, ptr %32, align 4
  %672 = load i32, ptr %29, align 4
  %673 = icmp ugt i32 %671, %672
  br i1 %673, label %674, label %700

674:                                              ; preds = %670
  %675 = load i32, ptr %27, align 4
  %676 = load ptr, ptr %25, align 8
  store i32 %675, ptr %676, align 4
  %677 = load i32, ptr %32, align 4
  store i32 %677, ptr %29, align 4
  %678 = load ptr, ptr %26, align 8
  store i32 %677, ptr %678, align 4
  %679 = load i32, ptr %24, align 4
  %680 = icmp eq i32 %677, %679
  br i1 %680, label %681, label %682

681:                                              ; preds = %674
  br label %701

682:                                              ; preds = %674
  %683 = load ptr, ptr %21, align 8
  %684 = getelementptr inbounds %struct.tdefl_compressor, ptr %683, i32 0, i32 35
  %685 = load i32, ptr %28, align 4
  %686 = load i32, ptr %29, align 4
  %687 = add i32 %685, %686
  %688 = zext i32 %687 to i64
  %689 = getelementptr inbounds [33025 x i8], ptr %684, i64 0, i64 %688
  %690 = load i8, ptr %689, align 1
  store i8 %690, ptr %37, align 1
  %691 = load ptr, ptr %21, align 8
  %692 = getelementptr inbounds %struct.tdefl_compressor, ptr %691, i32 0, i32 35
  %693 = load i32, ptr %28, align 4
  %694 = load i32, ptr %29, align 4
  %695 = add i32 %693, %694
  %696 = sub i32 %695, 1
  %697 = zext i32 %696 to i64
  %698 = getelementptr inbounds [33025 x i8], ptr %692, i64 0, i64 %697
  %699 = load i8, ptr %698, align 1
  store i8 %699, ptr %38, align 1
  br label %700

700:                                              ; preds = %682, %670
  br label %487

701:                                              ; preds = %485, %492, %511, %560, %609, %644, %681
  br label %702

702:                                              ; preds = %701, %428
  %703 = load i32, ptr %46, align 4
  %704 = icmp eq i32 %703, 3
  br i1 %704, label %705, label %708

705:                                              ; preds = %702
  %706 = load i32, ptr %45, align 4
  %707 = icmp uge i32 %706, 8192
  br i1 %707, label %721, label %708

708:                                              ; preds = %705, %702
  %709 = load i32, ptr %47, align 4
  %710 = load i32, ptr %45, align 4
  %711 = icmp eq i32 %709, %710
  br i1 %711, label %721, label %712

712:                                              ; preds = %708
  %713 = load ptr, ptr %40, align 8
  %714 = getelementptr inbounds %struct.tdefl_compressor, ptr %713, i32 0, i32 2
  %715 = load i32, ptr %714, align 8
  %716 = and i32 %715, 131072
  %717 = icmp ne i32 %716, 0
  br i1 %717, label %718, label %722

718:                                              ; preds = %712
  %719 = load i32, ptr %46, align 4
  %720 = icmp ule i32 %719, 5
  br i1 %720, label %721, label %722

721:                                              ; preds = %718, %708, %705
  store i32 0, ptr %46, align 4
  store i32 0, ptr %45, align 4
  br label %722

722:                                              ; preds = %721, %718, %712
  %723 = load ptr, ptr %40, align 8
  %724 = getelementptr inbounds %struct.tdefl_compressor, ptr %723, i32 0, i32 19
  %725 = load i32, ptr %724, align 8
  %726 = icmp ne i32 %725, 0
  br i1 %726, label %727, label %1043

727:                                              ; preds = %722
  %728 = load i32, ptr %46, align 4
  %729 = load ptr, ptr %40, align 8
  %730 = getelementptr inbounds %struct.tdefl_compressor, ptr %729, i32 0, i32 19
  %731 = load i32, ptr %730, align 8
  %732 = icmp ugt i32 %728, %731
  br i1 %732, label %733, label %917

733:                                              ; preds = %727
  %734 = load ptr, ptr %40, align 8
  %735 = load ptr, ptr %40, align 8
  %736 = getelementptr inbounds %struct.tdefl_compressor, ptr %735, i32 0, i32 20
  %737 = load i32, ptr %736, align 4
  %738 = trunc i32 %737 to i8
  store ptr %734, ptr %17, align 8
  store i8 %738, ptr %18, align 1
  %739 = load ptr, ptr %17, align 8
  %740 = getelementptr inbounds %struct.tdefl_compressor, ptr %739, i32 0, i32 14
  %741 = load i32, ptr %740, align 4
  %742 = add i32 %741, 1
  store i32 %742, ptr %740, align 4
  %743 = load i8, ptr %18, align 1
  %744 = load ptr, ptr %17, align 8
  %745 = getelementptr inbounds %struct.tdefl_compressor, ptr %744, i32 0, i32 9
  %746 = load ptr, ptr %745, align 8
  %747 = getelementptr inbounds i8, ptr %746, i32 1
  store ptr %747, ptr %745, align 8
  store i8 %743, ptr %746, align 1
  %748 = load ptr, ptr %17, align 8
  %749 = getelementptr inbounds %struct.tdefl_compressor, ptr %748, i32 0, i32 10
  %750 = load ptr, ptr %749, align 8
  %751 = load i8, ptr %750, align 1
  %752 = zext i8 %751 to i32
  %753 = ashr i32 %752, 1
  %754 = trunc i32 %753 to i8
  %755 = load ptr, ptr %17, align 8
  %756 = getelementptr inbounds %struct.tdefl_compressor, ptr %755, i32 0, i32 10
  %757 = load ptr, ptr %756, align 8
  store i8 %754, ptr %757, align 1
  %758 = load ptr, ptr %17, align 8
  %759 = getelementptr inbounds %struct.tdefl_compressor, ptr %758, i32 0, i32 13
  %760 = load i32, ptr %759, align 8
  %761 = add i32 %760, -1
  store i32 %761, ptr %759, align 8
  %762 = icmp eq i32 %761, 0
  br i1 %762, label %763, label %772

763:                                              ; preds = %733
  %764 = load ptr, ptr %17, align 8
  %765 = getelementptr inbounds %struct.tdefl_compressor, ptr %764, i32 0, i32 13
  store i32 8, ptr %765, align 8
  %766 = load ptr, ptr %17, align 8
  %767 = getelementptr inbounds %struct.tdefl_compressor, ptr %766, i32 0, i32 9
  %768 = load ptr, ptr %767, align 8
  %769 = getelementptr inbounds i8, ptr %768, i32 1
  store ptr %769, ptr %767, align 8
  %770 = load ptr, ptr %17, align 8
  %771 = getelementptr inbounds %struct.tdefl_compressor, ptr %770, i32 0, i32 10
  store ptr %768, ptr %771, align 8
  br label %772

772:                                              ; preds = %733, %763
  %773 = load ptr, ptr %17, align 8
  %774 = getelementptr inbounds %struct.tdefl_compressor, ptr %773, i32 0, i32 36
  %775 = load i8, ptr %18, align 1
  %776 = zext i8 %775 to i64
  %777 = getelementptr inbounds [288 x i16], ptr %774, i64 0, i64 %776
  %778 = load i16, ptr %777, align 2
  %779 = add i16 %778, 1
  store i16 %779, ptr %777, align 2
  %780 = load i32, ptr %46, align 4
  %781 = icmp uge i32 %780, 128
  br i1 %781, label %782, label %900

782:                                              ; preds = %772
  %783 = load ptr, ptr %40, align 8
  %784 = load i32, ptr %46, align 4
  %785 = load i32, ptr %45, align 4
  store ptr %783, ptr %2, align 8
  store i32 %784, ptr %3, align 4
  store i32 %785, ptr %4, align 4
  %786 = load i32, ptr %3, align 4
  %787 = icmp uge i32 %786, 3
  br i1 %787, label %788, label %794

788:                                              ; preds = %782
  %789 = load i32, ptr %4, align 4
  %790 = icmp uge i32 %789, 1
  br i1 %790, label %791, label %794

791:                                              ; preds = %788
  %792 = load i32, ptr %4, align 4
  %793 = icmp ule i32 %792, 32768
  br label %794

794:                                              ; preds = %791, %788, %782
  %795 = phi i1 [ false, %788 ], [ false, %782 ], [ %793, %791 ]
  %796 = xor i1 %795, true
  %797 = zext i1 %796 to i32
  %798 = sext i32 %797 to i64
  br i1 %796, label %799, label %800

799:                                              ; preds = %794
  call void @__assert_rtn(ptr noundef @__func__.tdefl_record_match, ptr noundef @.str.11, i32 noundef 3153, ptr noundef @.str.70) #13
  unreachable

800:                                              ; preds = %794
  %801 = load i32, ptr %3, align 4
  %802 = load ptr, ptr %2, align 8
  %803 = getelementptr inbounds %struct.tdefl_compressor, ptr %802, i32 0, i32 14
  %804 = load i32, ptr %803, align 4
  %805 = add i32 %804, %801
  store i32 %805, ptr %803, align 4
  %806 = load i32, ptr %3, align 4
  %807 = sub i32 %806, 3
  %808 = trunc i32 %807 to i8
  %809 = load ptr, ptr %2, align 8
  %810 = getelementptr inbounds %struct.tdefl_compressor, ptr %809, i32 0, i32 9
  %811 = load ptr, ptr %810, align 8
  store i8 %808, ptr %811, align 1
  %812 = load i32, ptr %4, align 4
  %813 = sub i32 %812, 1
  store i32 %813, ptr %4, align 4
  %814 = load i32, ptr %4, align 4
  %815 = and i32 %814, 255
  %816 = trunc i32 %815 to i8
  %817 = load ptr, ptr %2, align 8
  %818 = getelementptr inbounds %struct.tdefl_compressor, ptr %817, i32 0, i32 9
  %819 = load ptr, ptr %818, align 8
  %820 = getelementptr inbounds i8, ptr %819, i64 1
  store i8 %816, ptr %820, align 1
  %821 = load i32, ptr %4, align 4
  %822 = lshr i32 %821, 8
  %823 = trunc i32 %822 to i8
  %824 = load ptr, ptr %2, align 8
  %825 = getelementptr inbounds %struct.tdefl_compressor, ptr %824, i32 0, i32 9
  %826 = load ptr, ptr %825, align 8
  %827 = getelementptr inbounds i8, ptr %826, i64 2
  store i8 %823, ptr %827, align 1
  %828 = load ptr, ptr %2, align 8
  %829 = getelementptr inbounds %struct.tdefl_compressor, ptr %828, i32 0, i32 9
  %830 = load ptr, ptr %829, align 8
  %831 = getelementptr inbounds i8, ptr %830, i64 3
  store ptr %831, ptr %829, align 8
  %832 = load ptr, ptr %2, align 8
  %833 = getelementptr inbounds %struct.tdefl_compressor, ptr %832, i32 0, i32 10
  %834 = load ptr, ptr %833, align 8
  %835 = load i8, ptr %834, align 1
  %836 = zext i8 %835 to i32
  %837 = ashr i32 %836, 1
  %838 = or i32 %837, 128
  %839 = trunc i32 %838 to i8
  %840 = load ptr, ptr %2, align 8
  %841 = getelementptr inbounds %struct.tdefl_compressor, ptr %840, i32 0, i32 10
  %842 = load ptr, ptr %841, align 8
  store i8 %839, ptr %842, align 1
  %843 = load ptr, ptr %2, align 8
  %844 = getelementptr inbounds %struct.tdefl_compressor, ptr %843, i32 0, i32 13
  %845 = load i32, ptr %844, align 8
  %846 = add i32 %845, -1
  store i32 %846, ptr %844, align 8
  %847 = icmp eq i32 %846, 0
  br i1 %847, label %848, label %857

848:                                              ; preds = %800
  %849 = load ptr, ptr %2, align 8
  %850 = getelementptr inbounds %struct.tdefl_compressor, ptr %849, i32 0, i32 13
  store i32 8, ptr %850, align 8
  %851 = load ptr, ptr %2, align 8
  %852 = getelementptr inbounds %struct.tdefl_compressor, ptr %851, i32 0, i32 9
  %853 = load ptr, ptr %852, align 8
  %854 = getelementptr inbounds i8, ptr %853, i32 1
  store ptr %854, ptr %852, align 8
  %855 = load ptr, ptr %2, align 8
  %856 = getelementptr inbounds %struct.tdefl_compressor, ptr %855, i32 0, i32 10
  store ptr %853, ptr %856, align 8
  br label %857

857:                                              ; preds = %848, %800
  %858 = load i32, ptr %4, align 4
  %859 = and i32 %858, 511
  %860 = zext i32 %859 to i64
  %861 = getelementptr inbounds [512 x i8], ptr @s_tdefl_small_dist_sym, i64 0, i64 %860
  %862 = load i8, ptr %861, align 1
  %863 = zext i8 %862 to i32
  store i32 %863, ptr %5, align 4
  %864 = load i32, ptr %4, align 4
  %865 = lshr i32 %864, 8
  %866 = and i32 %865, 127
  %867 = zext i32 %866 to i64
  %868 = getelementptr inbounds [128 x i8], ptr @s_tdefl_large_dist_sym, i64 0, i64 %867
  %869 = load i8, ptr %868, align 1
  %870 = zext i8 %869 to i32
  store i32 %870, ptr %6, align 4
  %871 = load ptr, ptr %2, align 8
  %872 = getelementptr inbounds %struct.tdefl_compressor, ptr %871, i32 0, i32 36
  %873 = getelementptr inbounds [3 x [288 x i16]], ptr %872, i64 0, i64 1
  %874 = load i32, ptr %4, align 4
  %875 = icmp ult i32 %874, 512
  br i1 %875, label %876, label %878

876:                                              ; preds = %857
  %877 = load i32, ptr %5, align 4
  br label %880

878:                                              ; preds = %857
  %879 = load i32, ptr %6, align 4
  br label %880

880:                                              ; preds = %876, %878
  %881 = phi i32 [ %877, %876 ], [ %879, %878 ]
  %882 = zext i32 %881 to i64
  %883 = getelementptr inbounds [288 x i16], ptr %873, i64 0, i64 %882
  %884 = load i16, ptr %883, align 2
  %885 = add i16 %884, 1
  store i16 %885, ptr %883, align 2
  %886 = load ptr, ptr %2, align 8
  %887 = getelementptr inbounds %struct.tdefl_compressor, ptr %886, i32 0, i32 36
  %888 = load i32, ptr %3, align 4
  %889 = sub i32 %888, 3
  %890 = zext i32 %889 to i64
  %891 = getelementptr inbounds [256 x i16], ptr @s_tdefl_len_sym, i64 0, i64 %890
  %892 = load i16, ptr %891, align 2
  %893 = zext i16 %892 to i64
  %894 = getelementptr inbounds [288 x i16], ptr %887, i64 0, i64 %893
  %895 = load i16, ptr %894, align 2
  %896 = add i16 %895, 1
  store i16 %896, ptr %894, align 2
  %897 = load ptr, ptr %40, align 8
  %898 = getelementptr inbounds %struct.tdefl_compressor, ptr %897, i32 0, i32 19
  store i32 0, ptr %898, align 8
  %899 = load i32, ptr %46, align 4
  store i32 %899, ptr %44, align 4
  br label %916

900:                                              ; preds = %772
  %901 = load ptr, ptr %40, align 8
  %902 = getelementptr inbounds %struct.tdefl_compressor, ptr %901, i32 0, i32 35
  %903 = load i32, ptr %47, align 4
  %904 = zext i32 %903 to i64
  %905 = getelementptr inbounds [33025 x i8], ptr %902, i64 0, i64 %904
  %906 = load i8, ptr %905, align 1
  %907 = zext i8 %906 to i32
  %908 = load ptr, ptr %40, align 8
  %909 = getelementptr inbounds %struct.tdefl_compressor, ptr %908, i32 0, i32 20
  store i32 %907, ptr %909, align 4
  %910 = load i32, ptr %45, align 4
  %911 = load ptr, ptr %40, align 8
  %912 = getelementptr inbounds %struct.tdefl_compressor, ptr %911, i32 0, i32 18
  store i32 %910, ptr %912, align 4
  %913 = load i32, ptr %46, align 4
  %914 = load ptr, ptr %40, align 8
  %915 = getelementptr inbounds %struct.tdefl_compressor, ptr %914, i32 0, i32 19
  store i32 %913, ptr %915, align 8
  br label %916

916:                                              ; preds = %900, %880
  br label %1042

917:                                              ; preds = %727
  %918 = load ptr, ptr %40, align 8
  %919 = load ptr, ptr %40, align 8
  %920 = getelementptr inbounds %struct.tdefl_compressor, ptr %919, i32 0, i32 19
  %921 = load i32, ptr %920, align 8
  %922 = load ptr, ptr %40, align 8
  %923 = getelementptr inbounds %struct.tdefl_compressor, ptr %922, i32 0, i32 18
  %924 = load i32, ptr %923, align 4
  store ptr %918, ptr %7, align 8
  store i32 %921, ptr %8, align 4
  store i32 %924, ptr %9, align 4
  %925 = load i32, ptr %8, align 4
  %926 = icmp uge i32 %925, 3
  br i1 %926, label %927, label %933

927:                                              ; preds = %917
  %928 = load i32, ptr %9, align 4
  %929 = icmp uge i32 %928, 1
  br i1 %929, label %930, label %933

930:                                              ; preds = %927
  %931 = load i32, ptr %9, align 4
  %932 = icmp ule i32 %931, 32768
  br label %933

933:                                              ; preds = %930, %927, %917
  %934 = phi i1 [ false, %927 ], [ false, %917 ], [ %932, %930 ]
  %935 = xor i1 %934, true
  %936 = zext i1 %935 to i32
  %937 = sext i32 %936 to i64
  br i1 %935, label %938, label %939

938:                                              ; preds = %933
  call void @__assert_rtn(ptr noundef @__func__.tdefl_record_match, ptr noundef @.str.11, i32 noundef 3153, ptr noundef @.str.70) #13
  unreachable

939:                                              ; preds = %933
  %940 = load i32, ptr %8, align 4
  %941 = load ptr, ptr %7, align 8
  %942 = getelementptr inbounds %struct.tdefl_compressor, ptr %941, i32 0, i32 14
  %943 = load i32, ptr %942, align 4
  %944 = add i32 %943, %940
  store i32 %944, ptr %942, align 4
  %945 = load i32, ptr %8, align 4
  %946 = sub i32 %945, 3
  %947 = trunc i32 %946 to i8
  %948 = load ptr, ptr %7, align 8
  %949 = getelementptr inbounds %struct.tdefl_compressor, ptr %948, i32 0, i32 9
  %950 = load ptr, ptr %949, align 8
  store i8 %947, ptr %950, align 1
  %951 = load i32, ptr %9, align 4
  %952 = sub i32 %951, 1
  store i32 %952, ptr %9, align 4
  %953 = load i32, ptr %9, align 4
  %954 = and i32 %953, 255
  %955 = trunc i32 %954 to i8
  %956 = load ptr, ptr %7, align 8
  %957 = getelementptr inbounds %struct.tdefl_compressor, ptr %956, i32 0, i32 9
  %958 = load ptr, ptr %957, align 8
  %959 = getelementptr inbounds i8, ptr %958, i64 1
  store i8 %955, ptr %959, align 1
  %960 = load i32, ptr %9, align 4
  %961 = lshr i32 %960, 8
  %962 = trunc i32 %961 to i8
  %963 = load ptr, ptr %7, align 8
  %964 = getelementptr inbounds %struct.tdefl_compressor, ptr %963, i32 0, i32 9
  %965 = load ptr, ptr %964, align 8
  %966 = getelementptr inbounds i8, ptr %965, i64 2
  store i8 %962, ptr %966, align 1
  %967 = load ptr, ptr %7, align 8
  %968 = getelementptr inbounds %struct.tdefl_compressor, ptr %967, i32 0, i32 9
  %969 = load ptr, ptr %968, align 8
  %970 = getelementptr inbounds i8, ptr %969, i64 3
  store ptr %970, ptr %968, align 8
  %971 = load ptr, ptr %7, align 8
  %972 = getelementptr inbounds %struct.tdefl_compressor, ptr %971, i32 0, i32 10
  %973 = load ptr, ptr %972, align 8
  %974 = load i8, ptr %973, align 1
  %975 = zext i8 %974 to i32
  %976 = ashr i32 %975, 1
  %977 = or i32 %976, 128
  %978 = trunc i32 %977 to i8
  %979 = load ptr, ptr %7, align 8
  %980 = getelementptr inbounds %struct.tdefl_compressor, ptr %979, i32 0, i32 10
  %981 = load ptr, ptr %980, align 8
  store i8 %978, ptr %981, align 1
  %982 = load ptr, ptr %7, align 8
  %983 = getelementptr inbounds %struct.tdefl_compressor, ptr %982, i32 0, i32 13
  %984 = load i32, ptr %983, align 8
  %985 = add i32 %984, -1
  store i32 %985, ptr %983, align 8
  %986 = icmp eq i32 %985, 0
  br i1 %986, label %987, label %996

987:                                              ; preds = %939
  %988 = load ptr, ptr %7, align 8
  %989 = getelementptr inbounds %struct.tdefl_compressor, ptr %988, i32 0, i32 13
  store i32 8, ptr %989, align 8
  %990 = load ptr, ptr %7, align 8
  %991 = getelementptr inbounds %struct.tdefl_compressor, ptr %990, i32 0, i32 9
  %992 = load ptr, ptr %991, align 8
  %993 = getelementptr inbounds i8, ptr %992, i32 1
  store ptr %993, ptr %991, align 8
  %994 = load ptr, ptr %7, align 8
  %995 = getelementptr inbounds %struct.tdefl_compressor, ptr %994, i32 0, i32 10
  store ptr %992, ptr %995, align 8
  br label %996

996:                                              ; preds = %987, %939
  %997 = load i32, ptr %9, align 4
  %998 = and i32 %997, 511
  %999 = zext i32 %998 to i64
  %1000 = getelementptr inbounds [512 x i8], ptr @s_tdefl_small_dist_sym, i64 0, i64 %999
  %1001 = load i8, ptr %1000, align 1
  %1002 = zext i8 %1001 to i32
  store i32 %1002, ptr %10, align 4
  %1003 = load i32, ptr %9, align 4
  %1004 = lshr i32 %1003, 8
  %1005 = and i32 %1004, 127
  %1006 = zext i32 %1005 to i64
  %1007 = getelementptr inbounds [128 x i8], ptr @s_tdefl_large_dist_sym, i64 0, i64 %1006
  %1008 = load i8, ptr %1007, align 1
  %1009 = zext i8 %1008 to i32
  store i32 %1009, ptr %11, align 4
  %1010 = load ptr, ptr %7, align 8
  %1011 = getelementptr inbounds %struct.tdefl_compressor, ptr %1010, i32 0, i32 36
  %1012 = getelementptr inbounds [3 x [288 x i16]], ptr %1011, i64 0, i64 1
  %1013 = load i32, ptr %9, align 4
  %1014 = icmp ult i32 %1013, 512
  br i1 %1014, label %1015, label %1017

1015:                                             ; preds = %996
  %1016 = load i32, ptr %10, align 4
  br label %1019

1017:                                             ; preds = %996
  %1018 = load i32, ptr %11, align 4
  br label %1019

1019:                                             ; preds = %1015, %1017
  %1020 = phi i32 [ %1016, %1015 ], [ %1018, %1017 ]
  %1021 = zext i32 %1020 to i64
  %1022 = getelementptr inbounds [288 x i16], ptr %1012, i64 0, i64 %1021
  %1023 = load i16, ptr %1022, align 2
  %1024 = add i16 %1023, 1
  store i16 %1024, ptr %1022, align 2
  %1025 = load ptr, ptr %7, align 8
  %1026 = getelementptr inbounds %struct.tdefl_compressor, ptr %1025, i32 0, i32 36
  %1027 = load i32, ptr %8, align 4
  %1028 = sub i32 %1027, 3
  %1029 = zext i32 %1028 to i64
  %1030 = getelementptr inbounds [256 x i16], ptr @s_tdefl_len_sym, i64 0, i64 %1029
  %1031 = load i16, ptr %1030, align 2
  %1032 = zext i16 %1031 to i64
  %1033 = getelementptr inbounds [288 x i16], ptr %1026, i64 0, i64 %1032
  %1034 = load i16, ptr %1033, align 2
  %1035 = add i16 %1034, 1
  store i16 %1035, ptr %1033, align 2
  %1036 = load ptr, ptr %40, align 8
  %1037 = getelementptr inbounds %struct.tdefl_compressor, ptr %1036, i32 0, i32 19
  %1038 = load i32, ptr %1037, align 8
  %1039 = sub i32 %1038, 1
  store i32 %1039, ptr %44, align 4
  %1040 = load ptr, ptr %40, align 8
  %1041 = getelementptr inbounds %struct.tdefl_compressor, ptr %1040, i32 0, i32 19
  store i32 0, ptr %1041, align 8
  br label %1042

1042:                                             ; preds = %1019, %916
  br label %1257

1043:                                             ; preds = %722
  %1044 = load i32, ptr %45, align 4
  %1045 = icmp ne i32 %1044, 0
  br i1 %1045, label %1102, label %1046

1046:                                             ; preds = %1043
  %1047 = load ptr, ptr %40, align 8
  %1048 = load ptr, ptr %40, align 8
  %1049 = getelementptr inbounds %struct.tdefl_compressor, ptr %1048, i32 0, i32 35
  %1050 = load i32, ptr %47, align 4
  %1051 = zext i32 %1050 to i64
  %1052 = icmp ult i64 %1051, 33024
  br i1 %1052, label %1053, label %1056

1053:                                             ; preds = %1046
  %1054 = load i32, ptr %47, align 4
  %1055 = zext i32 %1054 to i64
  br label %1057

1056:                                             ; preds = %1046
  br label %1057

1057:                                             ; preds = %1056, %1053
  %1058 = phi i64 [ %1055, %1053 ], [ 33024, %1056 ]
  %1059 = getelementptr inbounds [33025 x i8], ptr %1049, i64 0, i64 %1058
  %1060 = load i8, ptr %1059, align 1
  store ptr %1047, ptr %19, align 8
  store i8 %1060, ptr %20, align 1
  %1061 = load ptr, ptr %19, align 8
  %1062 = getelementptr inbounds %struct.tdefl_compressor, ptr %1061, i32 0, i32 14
  %1063 = load i32, ptr %1062, align 4
  %1064 = add i32 %1063, 1
  store i32 %1064, ptr %1062, align 4
  %1065 = load i8, ptr %20, align 1
  %1066 = load ptr, ptr %19, align 8
  %1067 = getelementptr inbounds %struct.tdefl_compressor, ptr %1066, i32 0, i32 9
  %1068 = load ptr, ptr %1067, align 8
  %1069 = getelementptr inbounds i8, ptr %1068, i32 1
  store ptr %1069, ptr %1067, align 8
  store i8 %1065, ptr %1068, align 1
  %1070 = load ptr, ptr %19, align 8
  %1071 = getelementptr inbounds %struct.tdefl_compressor, ptr %1070, i32 0, i32 10
  %1072 = load ptr, ptr %1071, align 8
  %1073 = load i8, ptr %1072, align 1
  %1074 = zext i8 %1073 to i32
  %1075 = ashr i32 %1074, 1
  %1076 = trunc i32 %1075 to i8
  %1077 = load ptr, ptr %19, align 8
  %1078 = getelementptr inbounds %struct.tdefl_compressor, ptr %1077, i32 0, i32 10
  %1079 = load ptr, ptr %1078, align 8
  store i8 %1076, ptr %1079, align 1
  %1080 = load ptr, ptr %19, align 8
  %1081 = getelementptr inbounds %struct.tdefl_compressor, ptr %1080, i32 0, i32 13
  %1082 = load i32, ptr %1081, align 8
  %1083 = add i32 %1082, -1
  store i32 %1083, ptr %1081, align 8
  %1084 = icmp eq i32 %1083, 0
  br i1 %1084, label %1085, label %1094

1085:                                             ; preds = %1057
  %1086 = load ptr, ptr %19, align 8
  %1087 = getelementptr inbounds %struct.tdefl_compressor, ptr %1086, i32 0, i32 13
  store i32 8, ptr %1087, align 8
  %1088 = load ptr, ptr %19, align 8
  %1089 = getelementptr inbounds %struct.tdefl_compressor, ptr %1088, i32 0, i32 9
  %1090 = load ptr, ptr %1089, align 8
  %1091 = getelementptr inbounds i8, ptr %1090, i32 1
  store ptr %1091, ptr %1089, align 8
  %1092 = load ptr, ptr %19, align 8
  %1093 = getelementptr inbounds %struct.tdefl_compressor, ptr %1092, i32 0, i32 10
  store ptr %1090, ptr %1093, align 8
  br label %1094

1094:                                             ; preds = %1057, %1085
  %1095 = load ptr, ptr %19, align 8
  %1096 = getelementptr inbounds %struct.tdefl_compressor, ptr %1095, i32 0, i32 36
  %1097 = load i8, ptr %20, align 1
  %1098 = zext i8 %1097 to i64
  %1099 = getelementptr inbounds [288 x i16], ptr %1096, i64 0, i64 %1098
  %1100 = load i16, ptr %1099, align 2
  %1101 = add i16 %1100, 1
  store i16 %1101, ptr %1099, align 2
  br label %1256

1102:                                             ; preds = %1043
  %1103 = load ptr, ptr %40, align 8
  %1104 = getelementptr inbounds %struct.tdefl_compressor, ptr %1103, i32 0, i32 4
  %1105 = load i32, ptr %1104, align 4
  %1106 = icmp ne i32 %1105, 0
  br i1 %1106, label %1116, label %1107

1107:                                             ; preds = %1102
  %1108 = load ptr, ptr %40, align 8
  %1109 = getelementptr inbounds %struct.tdefl_compressor, ptr %1108, i32 0, i32 2
  %1110 = load i32, ptr %1109, align 8
  %1111 = and i32 %1110, 65536
  %1112 = icmp ne i32 %1111, 0
  br i1 %1112, label %1116, label %1113

1113:                                             ; preds = %1107
  %1114 = load i32, ptr %46, align 4
  %1115 = icmp uge i32 %1114, 128
  br i1 %1115, label %1116, label %1232

1116:                                             ; preds = %1113, %1107, %1102
  %1117 = load ptr, ptr %40, align 8
  %1118 = load i32, ptr %46, align 4
  %1119 = load i32, ptr %45, align 4
  store ptr %1117, ptr %12, align 8
  store i32 %1118, ptr %13, align 4
  store i32 %1119, ptr %14, align 4
  %1120 = load i32, ptr %13, align 4
  %1121 = icmp uge i32 %1120, 3
  br i1 %1121, label %1122, label %1128

1122:                                             ; preds = %1116
  %1123 = load i32, ptr %14, align 4
  %1124 = icmp uge i32 %1123, 1
  br i1 %1124, label %1125, label %1128

1125:                                             ; preds = %1122
  %1126 = load i32, ptr %14, align 4
  %1127 = icmp ule i32 %1126, 32768
  br label %1128

1128:                                             ; preds = %1125, %1122, %1116
  %1129 = phi i1 [ false, %1122 ], [ false, %1116 ], [ %1127, %1125 ]
  %1130 = xor i1 %1129, true
  %1131 = zext i1 %1130 to i32
  %1132 = sext i32 %1131 to i64
  br i1 %1130, label %1133, label %1134

1133:                                             ; preds = %1128
  call void @__assert_rtn(ptr noundef @__func__.tdefl_record_match, ptr noundef @.str.11, i32 noundef 3153, ptr noundef @.str.70) #13
  unreachable

1134:                                             ; preds = %1128
  %1135 = load i32, ptr %13, align 4
  %1136 = load ptr, ptr %12, align 8
  %1137 = getelementptr inbounds %struct.tdefl_compressor, ptr %1136, i32 0, i32 14
  %1138 = load i32, ptr %1137, align 4
  %1139 = add i32 %1138, %1135
  store i32 %1139, ptr %1137, align 4
  %1140 = load i32, ptr %13, align 4
  %1141 = sub i32 %1140, 3
  %1142 = trunc i32 %1141 to i8
  %1143 = load ptr, ptr %12, align 8
  %1144 = getelementptr inbounds %struct.tdefl_compressor, ptr %1143, i32 0, i32 9
  %1145 = load ptr, ptr %1144, align 8
  store i8 %1142, ptr %1145, align 1
  %1146 = load i32, ptr %14, align 4
  %1147 = sub i32 %1146, 1
  store i32 %1147, ptr %14, align 4
  %1148 = load i32, ptr %14, align 4
  %1149 = and i32 %1148, 255
  %1150 = trunc i32 %1149 to i8
  %1151 = load ptr, ptr %12, align 8
  %1152 = getelementptr inbounds %struct.tdefl_compressor, ptr %1151, i32 0, i32 9
  %1153 = load ptr, ptr %1152, align 8
  %1154 = getelementptr inbounds i8, ptr %1153, i64 1
  store i8 %1150, ptr %1154, align 1
  %1155 = load i32, ptr %14, align 4
  %1156 = lshr i32 %1155, 8
  %1157 = trunc i32 %1156 to i8
  %1158 = load ptr, ptr %12, align 8
  %1159 = getelementptr inbounds %struct.tdefl_compressor, ptr %1158, i32 0, i32 9
  %1160 = load ptr, ptr %1159, align 8
  %1161 = getelementptr inbounds i8, ptr %1160, i64 2
  store i8 %1157, ptr %1161, align 1
  %1162 = load ptr, ptr %12, align 8
  %1163 = getelementptr inbounds %struct.tdefl_compressor, ptr %1162, i32 0, i32 9
  %1164 = load ptr, ptr %1163, align 8
  %1165 = getelementptr inbounds i8, ptr %1164, i64 3
  store ptr %1165, ptr %1163, align 8
  %1166 = load ptr, ptr %12, align 8
  %1167 = getelementptr inbounds %struct.tdefl_compressor, ptr %1166, i32 0, i32 10
  %1168 = load ptr, ptr %1167, align 8
  %1169 = load i8, ptr %1168, align 1
  %1170 = zext i8 %1169 to i32
  %1171 = ashr i32 %1170, 1
  %1172 = or i32 %1171, 128
  %1173 = trunc i32 %1172 to i8
  %1174 = load ptr, ptr %12, align 8
  %1175 = getelementptr inbounds %struct.tdefl_compressor, ptr %1174, i32 0, i32 10
  %1176 = load ptr, ptr %1175, align 8
  store i8 %1173, ptr %1176, align 1
  %1177 = load ptr, ptr %12, align 8
  %1178 = getelementptr inbounds %struct.tdefl_compressor, ptr %1177, i32 0, i32 13
  %1179 = load i32, ptr %1178, align 8
  %1180 = add i32 %1179, -1
  store i32 %1180, ptr %1178, align 8
  %1181 = icmp eq i32 %1180, 0
  br i1 %1181, label %1182, label %1191

1182:                                             ; preds = %1134
  %1183 = load ptr, ptr %12, align 8
  %1184 = getelementptr inbounds %struct.tdefl_compressor, ptr %1183, i32 0, i32 13
  store i32 8, ptr %1184, align 8
  %1185 = load ptr, ptr %12, align 8
  %1186 = getelementptr inbounds %struct.tdefl_compressor, ptr %1185, i32 0, i32 9
  %1187 = load ptr, ptr %1186, align 8
  %1188 = getelementptr inbounds i8, ptr %1187, i32 1
  store ptr %1188, ptr %1186, align 8
  %1189 = load ptr, ptr %12, align 8
  %1190 = getelementptr inbounds %struct.tdefl_compressor, ptr %1189, i32 0, i32 10
  store ptr %1187, ptr %1190, align 8
  br label %1191

1191:                                             ; preds = %1182, %1134
  %1192 = load i32, ptr %14, align 4
  %1193 = and i32 %1192, 511
  %1194 = zext i32 %1193 to i64
  %1195 = getelementptr inbounds [512 x i8], ptr @s_tdefl_small_dist_sym, i64 0, i64 %1194
  %1196 = load i8, ptr %1195, align 1
  %1197 = zext i8 %1196 to i32
  store i32 %1197, ptr %15, align 4
  %1198 = load i32, ptr %14, align 4
  %1199 = lshr i32 %1198, 8
  %1200 = and i32 %1199, 127
  %1201 = zext i32 %1200 to i64
  %1202 = getelementptr inbounds [128 x i8], ptr @s_tdefl_large_dist_sym, i64 0, i64 %1201
  %1203 = load i8, ptr %1202, align 1
  %1204 = zext i8 %1203 to i32
  store i32 %1204, ptr %16, align 4
  %1205 = load ptr, ptr %12, align 8
  %1206 = getelementptr inbounds %struct.tdefl_compressor, ptr %1205, i32 0, i32 36
  %1207 = getelementptr inbounds [3 x [288 x i16]], ptr %1206, i64 0, i64 1
  %1208 = load i32, ptr %14, align 4
  %1209 = icmp ult i32 %1208, 512
  br i1 %1209, label %1210, label %1212

1210:                                             ; preds = %1191
  %1211 = load i32, ptr %15, align 4
  br label %1214

1212:                                             ; preds = %1191
  %1213 = load i32, ptr %16, align 4
  br label %1214

1214:                                             ; preds = %1210, %1212
  %1215 = phi i32 [ %1211, %1210 ], [ %1213, %1212 ]
  %1216 = zext i32 %1215 to i64
  %1217 = getelementptr inbounds [288 x i16], ptr %1207, i64 0, i64 %1216
  %1218 = load i16, ptr %1217, align 2
  %1219 = add i16 %1218, 1
  store i16 %1219, ptr %1217, align 2
  %1220 = load ptr, ptr %12, align 8
  %1221 = getelementptr inbounds %struct.tdefl_compressor, ptr %1220, i32 0, i32 36
  %1222 = load i32, ptr %13, align 4
  %1223 = sub i32 %1222, 3
  %1224 = zext i32 %1223 to i64
  %1225 = getelementptr inbounds [256 x i16], ptr @s_tdefl_len_sym, i64 0, i64 %1224
  %1226 = load i16, ptr %1225, align 2
  %1227 = zext i16 %1226 to i64
  %1228 = getelementptr inbounds [288 x i16], ptr %1221, i64 0, i64 %1227
  %1229 = load i16, ptr %1228, align 2
  %1230 = add i16 %1229, 1
  store i16 %1230, ptr %1228, align 2
  %1231 = load i32, ptr %46, align 4
  store i32 %1231, ptr %44, align 4
  br label %1255

1232:                                             ; preds = %1113
  %1233 = load ptr, ptr %40, align 8
  %1234 = getelementptr inbounds %struct.tdefl_compressor, ptr %1233, i32 0, i32 35
  %1235 = load i32, ptr %47, align 4
  %1236 = zext i32 %1235 to i64
  %1237 = icmp ult i64 %1236, 33024
  br i1 %1237, label %1238, label %1241

1238:                                             ; preds = %1232
  %1239 = load i32, ptr %47, align 4
  %1240 = zext i32 %1239 to i64
  br label %1242

1241:                                             ; preds = %1232
  br label %1242

1242:                                             ; preds = %1241, %1238
  %1243 = phi i64 [ %1240, %1238 ], [ 33024, %1241 ]
  %1244 = getelementptr inbounds [33025 x i8], ptr %1234, i64 0, i64 %1243
  %1245 = load i8, ptr %1244, align 1
  %1246 = zext i8 %1245 to i32
  %1247 = load ptr, ptr %40, align 8
  %1248 = getelementptr inbounds %struct.tdefl_compressor, ptr %1247, i32 0, i32 20
  store i32 %1246, ptr %1248, align 4
  %1249 = load i32, ptr %45, align 4
  %1250 = load ptr, ptr %40, align 8
  %1251 = getelementptr inbounds %struct.tdefl_compressor, ptr %1250, i32 0, i32 18
  store i32 %1249, ptr %1251, align 4
  %1252 = load i32, ptr %46, align 4
  %1253 = load ptr, ptr %40, align 8
  %1254 = getelementptr inbounds %struct.tdefl_compressor, ptr %1253, i32 0, i32 19
  store i32 %1252, ptr %1254, align 8
  br label %1255

1255:                                             ; preds = %1242, %1214
  br label %1256

1256:                                             ; preds = %1255, %1094
  br label %1257

1257:                                             ; preds = %1256, %1042
  %1258 = load i32, ptr %44, align 4
  %1259 = load ptr, ptr %40, align 8
  %1260 = getelementptr inbounds %struct.tdefl_compressor, ptr %1259, i32 0, i32 6
  %1261 = load i32, ptr %1260, align 4
  %1262 = add i32 %1261, %1258
  store i32 %1262, ptr %1260, align 4
  %1263 = load ptr, ptr %40, align 8
  %1264 = getelementptr inbounds %struct.tdefl_compressor, ptr %1263, i32 0, i32 7
  %1265 = load i32, ptr %1264, align 8
  %1266 = load i32, ptr %44, align 4
  %1267 = icmp uge i32 %1265, %1266
  %1268 = xor i1 %1267, true
  %1269 = zext i1 %1268 to i32
  %1270 = sext i32 %1269 to i64
  %1271 = icmp ne i64 %1270, 0
  br i1 %1271, label %1272, label %1274

1272:                                             ; preds = %1257
  call void @__assert_rtn(ptr noundef @__func__.tdefl_compress_normal, ptr noundef @.str.11, i32 noundef 3302, ptr noundef @.str.68) #12
  unreachable

1273:                                             ; No predecessors!
  br label %1275

1274:                                             ; preds = %1257
  br label %1275

1275:                                             ; preds = %1274, %1273
  %1276 = load i32, ptr %44, align 4
  %1277 = load ptr, ptr %40, align 8
  %1278 = getelementptr inbounds %struct.tdefl_compressor, ptr %1277, i32 0, i32 7
  %1279 = load i32, ptr %1278, align 8
  %1280 = sub i32 %1279, %1276
  store i32 %1280, ptr %1278, align 8
  %1281 = load ptr, ptr %40, align 8
  %1282 = getelementptr inbounds %struct.tdefl_compressor, ptr %1281, i32 0, i32 8
  %1283 = load i32, ptr %1282, align 4
  %1284 = load i32, ptr %44, align 4
  %1285 = add i32 %1283, %1284
  %1286 = icmp ult i32 %1285, 32768
  br i1 %1286, label %1287, label %1293

1287:                                             ; preds = %1275
  %1288 = load ptr, ptr %40, align 8
  %1289 = getelementptr inbounds %struct.tdefl_compressor, ptr %1288, i32 0, i32 8
  %1290 = load i32, ptr %1289, align 4
  %1291 = load i32, ptr %44, align 4
  %1292 = add i32 %1290, %1291
  br label %1294

1293:                                             ; preds = %1275
  br label %1294

1294:                                             ; preds = %1293, %1287
  %1295 = phi i32 [ %1292, %1287 ], [ 32768, %1293 ]
  %1296 = load ptr, ptr %40, align 8
  %1297 = getelementptr inbounds %struct.tdefl_compressor, ptr %1296, i32 0, i32 8
  store i32 %1295, ptr %1297, align 4
  %1298 = load ptr, ptr %40, align 8
  %1299 = getelementptr inbounds %struct.tdefl_compressor, ptr %1298, i32 0, i32 9
  %1300 = load ptr, ptr %1299, align 8
  %1301 = load ptr, ptr %40, align 8
  %1302 = getelementptr inbounds %struct.tdefl_compressor, ptr %1301, i32 0, i32 39
  %1303 = getelementptr inbounds [65536 x i8], ptr %1302, i64 0, i64 65528
  %1304 = icmp ugt ptr %1300, %1303
  br i1 %1304, label %1333, label %1305

1305:                                             ; preds = %1294
  %1306 = load ptr, ptr %40, align 8
  %1307 = getelementptr inbounds %struct.tdefl_compressor, ptr %1306, i32 0, i32 14
  %1308 = load i32, ptr %1307, align 4
  %1309 = icmp ugt i32 %1308, 31744
  br i1 %1309, label %1310, label %1349

1310:                                             ; preds = %1305
  %1311 = load ptr, ptr %40, align 8
  %1312 = getelementptr inbounds %struct.tdefl_compressor, ptr %1311, i32 0, i32 9
  %1313 = load ptr, ptr %1312, align 8
  %1314 = load ptr, ptr %40, align 8
  %1315 = getelementptr inbounds %struct.tdefl_compressor, ptr %1314, i32 0, i32 39
  %1316 = getelementptr inbounds [65536 x i8], ptr %1315, i64 0, i64 0
  %1317 = ptrtoint ptr %1313 to i64
  %1318 = ptrtoint ptr %1316 to i64
  %1319 = sub i64 %1317, %1318
  %1320 = trunc i64 %1319 to i32
  %1321 = mul i32 %1320, 115
  %1322 = lshr i32 %1321, 7
  %1323 = load ptr, ptr %40, align 8
  %1324 = getelementptr inbounds %struct.tdefl_compressor, ptr %1323, i32 0, i32 14
  %1325 = load i32, ptr %1324, align 4
  %1326 = icmp uge i32 %1322, %1325
  br i1 %1326, label %1333, label %1327

1327:                                             ; preds = %1310
  %1328 = load ptr, ptr %40, align 8
  %1329 = getelementptr inbounds %struct.tdefl_compressor, ptr %1328, i32 0, i32 2
  %1330 = load i32, ptr %1329, align 8
  %1331 = and i32 %1330, 524288
  %1332 = icmp ne i32 %1331, 0
  br i1 %1332, label %1333, label %1349

1333:                                             ; preds = %1327, %1310, %1294
  %1334 = load ptr, ptr %41, align 8
  %1335 = load ptr, ptr %40, align 8
  %1336 = getelementptr inbounds %struct.tdefl_compressor, ptr %1335, i32 0, i32 32
  store ptr %1334, ptr %1336, align 8
  %1337 = load i64, ptr %42, align 8
  %1338 = load ptr, ptr %40, align 8
  %1339 = getelementptr inbounds %struct.tdefl_compressor, ptr %1338, i32 0, i32 33
  store i64 %1337, ptr %1339, align 8
  %1340 = load ptr, ptr %40, align 8
  %1341 = call i32 @tdefl_flush_block(ptr noundef %1340, i32 noundef 0)
  store i32 %1341, ptr %59, align 4
  %1342 = icmp ne i32 %1341, 0
  br i1 %1342, label %1343, label %1348

1343:                                             ; preds = %1333
  %1344 = load i32, ptr %59, align 4
  %1345 = icmp slt i32 %1344, 0
  %1346 = zext i1 %1345 to i64
  %1347 = select i1 %1345, i32 0, i32 1
  store i32 %1347, ptr %39, align 4
  br label %1357

1348:                                             ; preds = %1333
  br label %1349

1349:                                             ; preds = %1348, %1327, %1305
  br label %69, !llvm.loop !87

1350:                                             ; preds = %357, %82
  %1351 = load ptr, ptr %41, align 8
  %1352 = load ptr, ptr %40, align 8
  %1353 = getelementptr inbounds %struct.tdefl_compressor, ptr %1352, i32 0, i32 32
  store ptr %1351, ptr %1353, align 8
  %1354 = load i64, ptr %42, align 8
  %1355 = load ptr, ptr %40, align 8
  %1356 = getelementptr inbounds %struct.tdefl_compressor, ptr %1355, i32 0, i32 33
  store i64 %1354, ptr %1356, align 8
  store i32 1, ptr %39, align 4
  br label %1357

1357:                                             ; preds = %1350, %1343
  %1358 = load i32, ptr %39, align 4
  ret i32 %1358
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @tdefl_flush_block(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store i32 %1, ptr %5, align 4
  store i32 0, ptr %9, align 4
  %49 = load ptr, ptr %4, align 8
  %50 = getelementptr inbounds %struct.tdefl_compressor, ptr %49, i32 0, i32 2
  %51 = load i32, ptr %50, align 8
  %52 = and i32 %51, 524288
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %2
  %55 = load ptr, ptr %4, align 8
  %56 = getelementptr inbounds %struct.tdefl_compressor, ptr %55, i32 0, i32 6
  %57 = load i32, ptr %56, align 4
  %58 = load ptr, ptr %4, align 8
  %59 = getelementptr inbounds %struct.tdefl_compressor, ptr %58, i32 0, i32 15
  %60 = load i32, ptr %59, align 8
  %61 = sub i32 %57, %60
  %62 = load ptr, ptr %4, align 8
  %63 = getelementptr inbounds %struct.tdefl_compressor, ptr %62, i32 0, i32 8
  %64 = load i32, ptr %63, align 4
  %65 = icmp ule i32 %61, %64
  br label %66

66:                                               ; preds = %54, %2
  %67 = phi i1 [ false, %2 ], [ %65, %54 ]
  %68 = zext i1 %67 to i32
  store i32 %68, ptr %11, align 4
  %69 = load ptr, ptr %4, align 8
  %70 = getelementptr inbounds %struct.tdefl_compressor, ptr %69, i32 0, i32 0
  %71 = load ptr, ptr %70, align 8
  %72 = icmp eq ptr %71, null
  br i1 %72, label %73, label %91

73:                                               ; preds = %66
  %74 = load ptr, ptr %4, align 8
  %75 = getelementptr inbounds %struct.tdefl_compressor, ptr %74, i32 0, i32 30
  %76 = load ptr, ptr %75, align 8
  %77 = load i64, ptr %76, align 8
  %78 = load ptr, ptr %4, align 8
  %79 = getelementptr inbounds %struct.tdefl_compressor, ptr %78, i32 0, i32 34
  %80 = load i64, ptr %79, align 8
  %81 = sub i64 %77, %80
  %82 = icmp uge i64 %81, 85196
  br i1 %82, label %83, label %91

83:                                               ; preds = %73
  %84 = load ptr, ptr %4, align 8
  %85 = getelementptr inbounds %struct.tdefl_compressor, ptr %84, i32 0, i32 28
  %86 = load ptr, ptr %85, align 8
  %87 = load ptr, ptr %4, align 8
  %88 = getelementptr inbounds %struct.tdefl_compressor, ptr %87, i32 0, i32 34
  %89 = load i64, ptr %88, align 8
  %90 = getelementptr inbounds i8, ptr %86, i64 %89
  br label %95

91:                                               ; preds = %73, %66
  %92 = load ptr, ptr %4, align 8
  %93 = getelementptr inbounds %struct.tdefl_compressor, ptr %92, i32 0, i32 42
  %94 = getelementptr inbounds [85196 x i8], ptr %93, i64 0, i64 0
  br label %95

95:                                               ; preds = %91, %83
  %96 = phi ptr [ %90, %83 ], [ %94, %91 ]
  store ptr %96, ptr %12, align 8
  %97 = load ptr, ptr %12, align 8
  %98 = load ptr, ptr %4, align 8
  %99 = getelementptr inbounds %struct.tdefl_compressor, ptr %98, i32 0, i32 11
  store ptr %97, ptr %99, align 8
  %100 = load ptr, ptr %4, align 8
  %101 = getelementptr inbounds %struct.tdefl_compressor, ptr %100, i32 0, i32 11
  %102 = load ptr, ptr %101, align 8
  %103 = getelementptr inbounds i8, ptr %102, i64 85196
  %104 = getelementptr inbounds i8, ptr %103, i64 -16
  %105 = load ptr, ptr %4, align 8
  %106 = getelementptr inbounds %struct.tdefl_compressor, ptr %105, i32 0, i32 12
  store ptr %104, ptr %106, align 8
  %107 = load ptr, ptr %4, align 8
  %108 = getelementptr inbounds %struct.tdefl_compressor, ptr %107, i32 0, i32 22
  %109 = load i32, ptr %108, align 4
  %110 = icmp ne i32 %109, 0
  %111 = xor i1 %110, true
  %112 = xor i1 %111, true
  %113 = zext i1 %112 to i32
  %114 = sext i32 %113 to i64
  %115 = icmp ne i64 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %95
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2692, ptr noundef @.str.71) #12
  unreachable

117:                                              ; No predecessors!
  br label %119

118:                                              ; preds = %95
  br label %119

119:                                              ; preds = %118, %117
  %120 = load ptr, ptr %4, align 8
  %121 = getelementptr inbounds %struct.tdefl_compressor, ptr %120, i32 0, i32 21
  store i32 0, ptr %121, align 8
  %122 = load ptr, ptr %4, align 8
  %123 = getelementptr inbounds %struct.tdefl_compressor, ptr %122, i32 0, i32 22
  store i32 0, ptr %123, align 4
  %124 = load ptr, ptr %4, align 8
  %125 = getelementptr inbounds %struct.tdefl_compressor, ptr %124, i32 0, i32 10
  %126 = load ptr, ptr %125, align 8
  %127 = load i8, ptr %126, align 1
  %128 = zext i8 %127 to i32
  %129 = load ptr, ptr %4, align 8
  %130 = getelementptr inbounds %struct.tdefl_compressor, ptr %129, i32 0, i32 13
  %131 = load i32, ptr %130, align 8
  %132 = ashr i32 %128, %131
  %133 = trunc i32 %132 to i8
  %134 = load ptr, ptr %4, align 8
  %135 = getelementptr inbounds %struct.tdefl_compressor, ptr %134, i32 0, i32 10
  %136 = load ptr, ptr %135, align 8
  store i8 %133, ptr %136, align 1
  %137 = load ptr, ptr %4, align 8
  %138 = getelementptr inbounds %struct.tdefl_compressor, ptr %137, i32 0, i32 13
  %139 = load i32, ptr %138, align 8
  %140 = icmp eq i32 %139, 8
  %141 = zext i1 %140 to i32
  %142 = load ptr, ptr %4, align 8
  %143 = getelementptr inbounds %struct.tdefl_compressor, ptr %142, i32 0, i32 9
  %144 = load ptr, ptr %143, align 8
  %145 = sext i32 %141 to i64
  %146 = sub i64 0, %145
  %147 = getelementptr inbounds i8, ptr %144, i64 %146
  store ptr %147, ptr %143, align 8
  %148 = load ptr, ptr %4, align 8
  %149 = getelementptr inbounds %struct.tdefl_compressor, ptr %148, i32 0, i32 2
  %150 = load i32, ptr %149, align 8
  %151 = and i32 %150, 4096
  %152 = icmp ne i32 %151, 0
  br i1 %152, label %153, label %329

153:                                              ; preds = %119
  %154 = load ptr, ptr %4, align 8
  %155 = getelementptr inbounds %struct.tdefl_compressor, ptr %154, i32 0, i32 24
  %156 = load i32, ptr %155, align 4
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %329, label %158

158:                                              ; preds = %153
  store i8 120, ptr %13, align 1
  store i8 3, ptr %15, align 1
  store i32 11, ptr %18, align 4
  store i32 0, ptr %17, align 4
  br label %159

159:                                              ; preds = %175, %158
  %160 = load i32, ptr %17, align 4
  %161 = load i32, ptr %18, align 4
  %162 = icmp ult i32 %160, %161
  br i1 %162, label %163, label %178

163:                                              ; preds = %159
  %164 = load i32, ptr %17, align 4
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds [11 x i32], ptr @s_tdefl_num_probes, i64 0, i64 %165
  %167 = load i32, ptr %166, align 4
  %168 = load ptr, ptr %4, align 8
  %169 = getelementptr inbounds %struct.tdefl_compressor, ptr %168, i32 0, i32 2
  %170 = load i32, ptr %169, align 8
  %171 = and i32 %170, 4095
  %172 = icmp eq i32 %167, %171
  br i1 %172, label %173, label %174

173:                                              ; preds = %163
  br label %178

174:                                              ; preds = %163
  br label %175

175:                                              ; preds = %174
  %176 = load i32, ptr %17, align 4
  %177 = add i32 %176, 1
  store i32 %177, ptr %17, align 4
  br label %159, !llvm.loop !88

178:                                              ; preds = %173, %159
  %179 = load i32, ptr %17, align 4
  %180 = icmp ult i32 %179, 2
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  store i8 0, ptr %15, align 1
  br label %192

182:                                              ; preds = %178
  %183 = load i32, ptr %17, align 4
  %184 = icmp ult i32 %183, 6
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  store i8 1, ptr %15, align 1
  br label %191

186:                                              ; preds = %182
  %187 = load i32, ptr %17, align 4
  %188 = icmp eq i32 %187, 6
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  store i8 2, ptr %15, align 1
  br label %190

190:                                              ; preds = %189, %186
  br label %191

191:                                              ; preds = %190, %185
  br label %192

192:                                              ; preds = %191, %181
  %193 = load i8, ptr %15, align 1
  %194 = zext i8 %193 to i32
  %195 = shl i32 %194, 6
  %196 = or i32 30720, %195
  store i32 %196, ptr %16, align 4
  %197 = load i32, ptr %16, align 4
  %198 = urem i32 %197, 31
  %199 = sub i32 31, %198
  %200 = load i32, ptr %16, align 4
  %201 = add i32 %200, %199
  store i32 %201, ptr %16, align 4
  %202 = load i32, ptr %16, align 4
  %203 = and i32 %202, 255
  %204 = trunc i32 %203 to i8
  store i8 %204, ptr %14, align 1
  br label %205

205:                                              ; preds = %192
  store i32 120, ptr %19, align 4
  store i32 8, ptr %20, align 4
  %206 = load i32, ptr %19, align 4
  %207 = load i32, ptr %20, align 4
  %208 = shl i32 1, %207
  %209 = sub i32 %208, 1
  %210 = icmp ule i32 %206, %209
  %211 = xor i1 %210, true
  %212 = zext i1 %211 to i32
  %213 = sext i32 %212 to i64
  %214 = icmp ne i64 %213, 0
  br i1 %214, label %215, label %217

215:                                              ; preds = %205
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2720, ptr noundef @.str.72) #12
  unreachable

216:                                              ; No predecessors!
  br label %218

217:                                              ; preds = %205
  br label %218

218:                                              ; preds = %217, %216
  %219 = load i32, ptr %19, align 4
  %220 = load ptr, ptr %4, align 8
  %221 = getelementptr inbounds %struct.tdefl_compressor, ptr %220, i32 0, i32 16
  %222 = load i32, ptr %221, align 4
  %223 = shl i32 %219, %222
  %224 = load ptr, ptr %4, align 8
  %225 = getelementptr inbounds %struct.tdefl_compressor, ptr %224, i32 0, i32 17
  %226 = load i32, ptr %225, align 8
  %227 = or i32 %226, %223
  store i32 %227, ptr %225, align 8
  %228 = load i32, ptr %20, align 4
  %229 = load ptr, ptr %4, align 8
  %230 = getelementptr inbounds %struct.tdefl_compressor, ptr %229, i32 0, i32 16
  %231 = load i32, ptr %230, align 4
  %232 = add i32 %231, %228
  store i32 %232, ptr %230, align 4
  br label %233

233:                                              ; preds = %255, %218
  %234 = load ptr, ptr %4, align 8
  %235 = getelementptr inbounds %struct.tdefl_compressor, ptr %234, i32 0, i32 16
  %236 = load i32, ptr %235, align 4
  %237 = icmp uge i32 %236, 8
  br i1 %237, label %238, label %264

238:                                              ; preds = %233
  %239 = load ptr, ptr %4, align 8
  %240 = getelementptr inbounds %struct.tdefl_compressor, ptr %239, i32 0, i32 11
  %241 = load ptr, ptr %240, align 8
  %242 = load ptr, ptr %4, align 8
  %243 = getelementptr inbounds %struct.tdefl_compressor, ptr %242, i32 0, i32 12
  %244 = load ptr, ptr %243, align 8
  %245 = icmp ult ptr %241, %244
  br i1 %245, label %246, label %255

246:                                              ; preds = %238
  %247 = load ptr, ptr %4, align 8
  %248 = getelementptr inbounds %struct.tdefl_compressor, ptr %247, i32 0, i32 17
  %249 = load i32, ptr %248, align 8
  %250 = trunc i32 %249 to i8
  %251 = load ptr, ptr %4, align 8
  %252 = getelementptr inbounds %struct.tdefl_compressor, ptr %251, i32 0, i32 11
  %253 = load ptr, ptr %252, align 8
  %254 = getelementptr inbounds i8, ptr %253, i32 1
  store ptr %254, ptr %252, align 8
  store i8 %250, ptr %253, align 1
  br label %255

255:                                              ; preds = %246, %238
  %256 = load ptr, ptr %4, align 8
  %257 = getelementptr inbounds %struct.tdefl_compressor, ptr %256, i32 0, i32 17
  %258 = load i32, ptr %257, align 8
  %259 = lshr i32 %258, 8
  store i32 %259, ptr %257, align 8
  %260 = load ptr, ptr %4, align 8
  %261 = getelementptr inbounds %struct.tdefl_compressor, ptr %260, i32 0, i32 16
  %262 = load i32, ptr %261, align 4
  %263 = sub i32 %262, 8
  store i32 %263, ptr %261, align 4
  br label %233, !llvm.loop !89

264:                                              ; preds = %233
  br label %265

265:                                              ; preds = %264
  br label %266

266:                                              ; preds = %265
  %267 = load i8, ptr %14, align 1
  %268 = zext i8 %267 to i32
  store i32 %268, ptr %21, align 4
  store i32 8, ptr %22, align 4
  %269 = load i32, ptr %21, align 4
  %270 = load i32, ptr %22, align 4
  %271 = shl i32 1, %270
  %272 = sub i32 %271, 1
  %273 = icmp ule i32 %269, %272
  %274 = xor i1 %273, true
  %275 = zext i1 %274 to i32
  %276 = sext i32 %275 to i64
  %277 = icmp ne i64 %276, 0
  br i1 %277, label %278, label %280

278:                                              ; preds = %266
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2721, ptr noundef @.str.72) #12
  unreachable

279:                                              ; No predecessors!
  br label %281

280:                                              ; preds = %266
  br label %281

281:                                              ; preds = %280, %279
  %282 = load i32, ptr %21, align 4
  %283 = load ptr, ptr %4, align 8
  %284 = getelementptr inbounds %struct.tdefl_compressor, ptr %283, i32 0, i32 16
  %285 = load i32, ptr %284, align 4
  %286 = shl i32 %282, %285
  %287 = load ptr, ptr %4, align 8
  %288 = getelementptr inbounds %struct.tdefl_compressor, ptr %287, i32 0, i32 17
  %289 = load i32, ptr %288, align 8
  %290 = or i32 %289, %286
  store i32 %290, ptr %288, align 8
  %291 = load i32, ptr %22, align 4
  %292 = load ptr, ptr %4, align 8
  %293 = getelementptr inbounds %struct.tdefl_compressor, ptr %292, i32 0, i32 16
  %294 = load i32, ptr %293, align 4
  %295 = add i32 %294, %291
  store i32 %295, ptr %293, align 4
  br label %296

296:                                              ; preds = %318, %281
  %297 = load ptr, ptr %4, align 8
  %298 = getelementptr inbounds %struct.tdefl_compressor, ptr %297, i32 0, i32 16
  %299 = load i32, ptr %298, align 4
  %300 = icmp uge i32 %299, 8
  br i1 %300, label %301, label %327

301:                                              ; preds = %296
  %302 = load ptr, ptr %4, align 8
  %303 = getelementptr inbounds %struct.tdefl_compressor, ptr %302, i32 0, i32 11
  %304 = load ptr, ptr %303, align 8
  %305 = load ptr, ptr %4, align 8
  %306 = getelementptr inbounds %struct.tdefl_compressor, ptr %305, i32 0, i32 12
  %307 = load ptr, ptr %306, align 8
  %308 = icmp ult ptr %304, %307
  br i1 %308, label %309, label %318

309:                                              ; preds = %301
  %310 = load ptr, ptr %4, align 8
  %311 = getelementptr inbounds %struct.tdefl_compressor, ptr %310, i32 0, i32 17
  %312 = load i32, ptr %311, align 8
  %313 = trunc i32 %312 to i8
  %314 = load ptr, ptr %4, align 8
  %315 = getelementptr inbounds %struct.tdefl_compressor, ptr %314, i32 0, i32 11
  %316 = load ptr, ptr %315, align 8
  %317 = getelementptr inbounds i8, ptr %316, i32 1
  store ptr %317, ptr %315, align 8
  store i8 %313, ptr %316, align 1
  br label %318

318:                                              ; preds = %309, %301
  %319 = load ptr, ptr %4, align 8
  %320 = getelementptr inbounds %struct.tdefl_compressor, ptr %319, i32 0, i32 17
  %321 = load i32, ptr %320, align 8
  %322 = lshr i32 %321, 8
  store i32 %322, ptr %320, align 8
  %323 = load ptr, ptr %4, align 8
  %324 = getelementptr inbounds %struct.tdefl_compressor, ptr %323, i32 0, i32 16
  %325 = load i32, ptr %324, align 4
  %326 = sub i32 %325, 8
  store i32 %326, ptr %324, align 4
  br label %296, !llvm.loop !90

327:                                              ; preds = %296
  br label %328

328:                                              ; preds = %327
  br label %329

329:                                              ; preds = %328, %153, %119
  br label %330

330:                                              ; preds = %329
  %331 = load i32, ptr %5, align 4
  %332 = icmp eq i32 %331, 4
  %333 = zext i1 %332 to i32
  store i32 %333, ptr %23, align 4
  store i32 1, ptr %24, align 4
  %334 = load i32, ptr %23, align 4
  %335 = load i32, ptr %24, align 4
  %336 = shl i32 1, %335
  %337 = sub i32 %336, 1
  %338 = icmp ule i32 %334, %337
  %339 = xor i1 %338, true
  %340 = zext i1 %339 to i32
  %341 = sext i32 %340 to i64
  %342 = icmp ne i64 %341, 0
  br i1 %342, label %343, label %345

343:                                              ; preds = %330
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2724, ptr noundef @.str.72) #12
  unreachable

344:                                              ; No predecessors!
  br label %346

345:                                              ; preds = %330
  br label %346

346:                                              ; preds = %345, %344
  %347 = load i32, ptr %23, align 4
  %348 = load ptr, ptr %4, align 8
  %349 = getelementptr inbounds %struct.tdefl_compressor, ptr %348, i32 0, i32 16
  %350 = load i32, ptr %349, align 4
  %351 = shl i32 %347, %350
  %352 = load ptr, ptr %4, align 8
  %353 = getelementptr inbounds %struct.tdefl_compressor, ptr %352, i32 0, i32 17
  %354 = load i32, ptr %353, align 8
  %355 = or i32 %354, %351
  store i32 %355, ptr %353, align 8
  %356 = load i32, ptr %24, align 4
  %357 = load ptr, ptr %4, align 8
  %358 = getelementptr inbounds %struct.tdefl_compressor, ptr %357, i32 0, i32 16
  %359 = load i32, ptr %358, align 4
  %360 = add i32 %359, %356
  store i32 %360, ptr %358, align 4
  br label %361

361:                                              ; preds = %383, %346
  %362 = load ptr, ptr %4, align 8
  %363 = getelementptr inbounds %struct.tdefl_compressor, ptr %362, i32 0, i32 16
  %364 = load i32, ptr %363, align 4
  %365 = icmp uge i32 %364, 8
  br i1 %365, label %366, label %392

366:                                              ; preds = %361
  %367 = load ptr, ptr %4, align 8
  %368 = getelementptr inbounds %struct.tdefl_compressor, ptr %367, i32 0, i32 11
  %369 = load ptr, ptr %368, align 8
  %370 = load ptr, ptr %4, align 8
  %371 = getelementptr inbounds %struct.tdefl_compressor, ptr %370, i32 0, i32 12
  %372 = load ptr, ptr %371, align 8
  %373 = icmp ult ptr %369, %372
  br i1 %373, label %374, label %383

374:                                              ; preds = %366
  %375 = load ptr, ptr %4, align 8
  %376 = getelementptr inbounds %struct.tdefl_compressor, ptr %375, i32 0, i32 17
  %377 = load i32, ptr %376, align 8
  %378 = trunc i32 %377 to i8
  %379 = load ptr, ptr %4, align 8
  %380 = getelementptr inbounds %struct.tdefl_compressor, ptr %379, i32 0, i32 11
  %381 = load ptr, ptr %380, align 8
  %382 = getelementptr inbounds i8, ptr %381, i32 1
  store ptr %382, ptr %380, align 8
  store i8 %378, ptr %381, align 1
  br label %383

383:                                              ; preds = %374, %366
  %384 = load ptr, ptr %4, align 8
  %385 = getelementptr inbounds %struct.tdefl_compressor, ptr %384, i32 0, i32 17
  %386 = load i32, ptr %385, align 8
  %387 = lshr i32 %386, 8
  store i32 %387, ptr %385, align 8
  %388 = load ptr, ptr %4, align 8
  %389 = getelementptr inbounds %struct.tdefl_compressor, ptr %388, i32 0, i32 16
  %390 = load i32, ptr %389, align 4
  %391 = sub i32 %390, 8
  store i32 %391, ptr %389, align 4
  br label %361, !llvm.loop !91

392:                                              ; preds = %361
  br label %393

393:                                              ; preds = %392
  %394 = load ptr, ptr %4, align 8
  %395 = getelementptr inbounds %struct.tdefl_compressor, ptr %394, i32 0, i32 11
  %396 = load ptr, ptr %395, align 8
  store ptr %396, ptr %8, align 8
  %397 = load ptr, ptr %4, align 8
  %398 = getelementptr inbounds %struct.tdefl_compressor, ptr %397, i32 0, i32 17
  %399 = load i32, ptr %398, align 8
  store i32 %399, ptr %6, align 4
  %400 = load ptr, ptr %4, align 8
  %401 = getelementptr inbounds %struct.tdefl_compressor, ptr %400, i32 0, i32 16
  %402 = load i32, ptr %401, align 4
  store i32 %402, ptr %7, align 4
  %403 = load i32, ptr %11, align 4
  %404 = icmp ne i32 %403, 0
  br i1 %404, label %421, label %405

405:                                              ; preds = %393
  %406 = load ptr, ptr %4, align 8
  %407 = load ptr, ptr %4, align 8
  %408 = getelementptr inbounds %struct.tdefl_compressor, ptr %407, i32 0, i32 2
  %409 = load i32, ptr %408, align 8
  %410 = and i32 %409, 262144
  %411 = icmp ne i32 %410, 0
  br i1 %411, label %417, label %412

412:                                              ; preds = %405
  %413 = load ptr, ptr %4, align 8
  %414 = getelementptr inbounds %struct.tdefl_compressor, ptr %413, i32 0, i32 14
  %415 = load i32, ptr %414, align 4
  %416 = icmp ult i32 %415, 48
  br label %417

417:                                              ; preds = %412, %405
  %418 = phi i1 [ true, %405 ], [ %416, %412 ]
  %419 = zext i1 %418 to i32
  %420 = call i32 @tdefl_compress_block(ptr noundef %406, i32 noundef %419)
  store i32 %420, ptr %9, align 4
  br label %421

421:                                              ; preds = %417, %393
  %422 = load i32, ptr %11, align 4
  %423 = icmp ne i32 %422, 0
  br i1 %423, label %443, label %424

424:                                              ; preds = %421
  %425 = load ptr, ptr %4, align 8
  %426 = getelementptr inbounds %struct.tdefl_compressor, ptr %425, i32 0, i32 14
  %427 = load i32, ptr %426, align 4
  %428 = icmp ne i32 %427, 0
  br i1 %428, label %429, label %758

429:                                              ; preds = %424
  %430 = load ptr, ptr %4, align 8
  %431 = getelementptr inbounds %struct.tdefl_compressor, ptr %430, i32 0, i32 11
  %432 = load ptr, ptr %431, align 8
  %433 = load ptr, ptr %8, align 8
  %434 = ptrtoint ptr %432 to i64
  %435 = ptrtoint ptr %433 to i64
  %436 = sub i64 %434, %435
  %437 = add nsw i64 %436, 1
  %438 = load ptr, ptr %4, align 8
  %439 = getelementptr inbounds %struct.tdefl_compressor, ptr %438, i32 0, i32 14
  %440 = load i32, ptr %439, align 4
  %441 = zext i32 %440 to i64
  %442 = icmp sge i64 %437, %441
  br i1 %442, label %443, label %758

443:                                              ; preds = %429, %421
  %444 = load ptr, ptr %4, align 8
  %445 = getelementptr inbounds %struct.tdefl_compressor, ptr %444, i32 0, i32 6
  %446 = load i32, ptr %445, align 4
  %447 = load ptr, ptr %4, align 8
  %448 = getelementptr inbounds %struct.tdefl_compressor, ptr %447, i32 0, i32 15
  %449 = load i32, ptr %448, align 8
  %450 = sub i32 %446, %449
  %451 = load ptr, ptr %4, align 8
  %452 = getelementptr inbounds %struct.tdefl_compressor, ptr %451, i32 0, i32 8
  %453 = load i32, ptr %452, align 4
  %454 = icmp ule i32 %450, %453
  br i1 %454, label %455, label %758

455:                                              ; preds = %443
  %456 = load ptr, ptr %8, align 8
  %457 = load ptr, ptr %4, align 8
  %458 = getelementptr inbounds %struct.tdefl_compressor, ptr %457, i32 0, i32 11
  store ptr %456, ptr %458, align 8
  %459 = load i32, ptr %6, align 4
  %460 = load ptr, ptr %4, align 8
  %461 = getelementptr inbounds %struct.tdefl_compressor, ptr %460, i32 0, i32 17
  store i32 %459, ptr %461, align 8
  %462 = load i32, ptr %7, align 4
  %463 = load ptr, ptr %4, align 8
  %464 = getelementptr inbounds %struct.tdefl_compressor, ptr %463, i32 0, i32 16
  store i32 %462, ptr %464, align 4
  br label %465

465:                                              ; preds = %455
  store i32 0, ptr %26, align 4
  store i32 2, ptr %27, align 4
  %466 = load i32, ptr %26, align 4
  %467 = load i32, ptr %27, align 4
  %468 = shl i32 1, %467
  %469 = sub i32 %468, 1
  %470 = icmp ule i32 %466, %469
  %471 = xor i1 %470, true
  %472 = zext i1 %471 to i32
  %473 = sext i32 %472 to i64
  %474 = icmp ne i64 %473, 0
  br i1 %474, label %475, label %477

475:                                              ; preds = %465
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2740, ptr noundef @.str.72) #12
  unreachable

476:                                              ; No predecessors!
  br label %478

477:                                              ; preds = %465
  br label %478

478:                                              ; preds = %477, %476
  %479 = load i32, ptr %26, align 4
  %480 = load ptr, ptr %4, align 8
  %481 = getelementptr inbounds %struct.tdefl_compressor, ptr %480, i32 0, i32 16
  %482 = load i32, ptr %481, align 4
  %483 = shl i32 %479, %482
  %484 = load ptr, ptr %4, align 8
  %485 = getelementptr inbounds %struct.tdefl_compressor, ptr %484, i32 0, i32 17
  %486 = load i32, ptr %485, align 8
  %487 = or i32 %486, %483
  store i32 %487, ptr %485, align 8
  %488 = load i32, ptr %27, align 4
  %489 = load ptr, ptr %4, align 8
  %490 = getelementptr inbounds %struct.tdefl_compressor, ptr %489, i32 0, i32 16
  %491 = load i32, ptr %490, align 4
  %492 = add i32 %491, %488
  store i32 %492, ptr %490, align 4
  br label %493

493:                                              ; preds = %515, %478
  %494 = load ptr, ptr %4, align 8
  %495 = getelementptr inbounds %struct.tdefl_compressor, ptr %494, i32 0, i32 16
  %496 = load i32, ptr %495, align 4
  %497 = icmp uge i32 %496, 8
  br i1 %497, label %498, label %524

498:                                              ; preds = %493
  %499 = load ptr, ptr %4, align 8
  %500 = getelementptr inbounds %struct.tdefl_compressor, ptr %499, i32 0, i32 11
  %501 = load ptr, ptr %500, align 8
  %502 = load ptr, ptr %4, align 8
  %503 = getelementptr inbounds %struct.tdefl_compressor, ptr %502, i32 0, i32 12
  %504 = load ptr, ptr %503, align 8
  %505 = icmp ult ptr %501, %504
  br i1 %505, label %506, label %515

506:                                              ; preds = %498
  %507 = load ptr, ptr %4, align 8
  %508 = getelementptr inbounds %struct.tdefl_compressor, ptr %507, i32 0, i32 17
  %509 = load i32, ptr %508, align 8
  %510 = trunc i32 %509 to i8
  %511 = load ptr, ptr %4, align 8
  %512 = getelementptr inbounds %struct.tdefl_compressor, ptr %511, i32 0, i32 11
  %513 = load ptr, ptr %512, align 8
  %514 = getelementptr inbounds i8, ptr %513, i32 1
  store ptr %514, ptr %512, align 8
  store i8 %510, ptr %513, align 1
  br label %515

515:                                              ; preds = %506, %498
  %516 = load ptr, ptr %4, align 8
  %517 = getelementptr inbounds %struct.tdefl_compressor, ptr %516, i32 0, i32 17
  %518 = load i32, ptr %517, align 8
  %519 = lshr i32 %518, 8
  store i32 %519, ptr %517, align 8
  %520 = load ptr, ptr %4, align 8
  %521 = getelementptr inbounds %struct.tdefl_compressor, ptr %520, i32 0, i32 16
  %522 = load i32, ptr %521, align 4
  %523 = sub i32 %522, 8
  store i32 %523, ptr %521, align 4
  br label %493, !llvm.loop !92

524:                                              ; preds = %493
  br label %525

525:                                              ; preds = %524
  %526 = load ptr, ptr %4, align 8
  %527 = getelementptr inbounds %struct.tdefl_compressor, ptr %526, i32 0, i32 16
  %528 = load i32, ptr %527, align 4
  %529 = icmp ne i32 %528, 0
  br i1 %529, label %530, label %596

530:                                              ; preds = %525
  br label %531

531:                                              ; preds = %530
  store i32 0, ptr %28, align 4
  %532 = load ptr, ptr %4, align 8
  %533 = getelementptr inbounds %struct.tdefl_compressor, ptr %532, i32 0, i32 16
  %534 = load i32, ptr %533, align 4
  %535 = sub i32 8, %534
  store i32 %535, ptr %29, align 4
  %536 = load i32, ptr %28, align 4
  %537 = load i32, ptr %29, align 4
  %538 = shl i32 1, %537
  %539 = sub i32 %538, 1
  %540 = icmp ule i32 %536, %539
  %541 = xor i1 %540, true
  %542 = zext i1 %541 to i32
  %543 = sext i32 %542 to i64
  %544 = icmp ne i64 %543, 0
  br i1 %544, label %545, label %547

545:                                              ; preds = %531
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2743, ptr noundef @.str.72) #12
  unreachable

546:                                              ; No predecessors!
  br label %548

547:                                              ; preds = %531
  br label %548

548:                                              ; preds = %547, %546
  %549 = load i32, ptr %28, align 4
  %550 = load ptr, ptr %4, align 8
  %551 = getelementptr inbounds %struct.tdefl_compressor, ptr %550, i32 0, i32 16
  %552 = load i32, ptr %551, align 4
  %553 = shl i32 %549, %552
  %554 = load ptr, ptr %4, align 8
  %555 = getelementptr inbounds %struct.tdefl_compressor, ptr %554, i32 0, i32 17
  %556 = load i32, ptr %555, align 8
  %557 = or i32 %556, %553
  store i32 %557, ptr %555, align 8
  %558 = load i32, ptr %29, align 4
  %559 = load ptr, ptr %4, align 8
  %560 = getelementptr inbounds %struct.tdefl_compressor, ptr %559, i32 0, i32 16
  %561 = load i32, ptr %560, align 4
  %562 = add i32 %561, %558
  store i32 %562, ptr %560, align 4
  br label %563

563:                                              ; preds = %585, %548
  %564 = load ptr, ptr %4, align 8
  %565 = getelementptr inbounds %struct.tdefl_compressor, ptr %564, i32 0, i32 16
  %566 = load i32, ptr %565, align 4
  %567 = icmp uge i32 %566, 8
  br i1 %567, label %568, label %594

568:                                              ; preds = %563
  %569 = load ptr, ptr %4, align 8
  %570 = getelementptr inbounds %struct.tdefl_compressor, ptr %569, i32 0, i32 11
  %571 = load ptr, ptr %570, align 8
  %572 = load ptr, ptr %4, align 8
  %573 = getelementptr inbounds %struct.tdefl_compressor, ptr %572, i32 0, i32 12
  %574 = load ptr, ptr %573, align 8
  %575 = icmp ult ptr %571, %574
  br i1 %575, label %576, label %585

576:                                              ; preds = %568
  %577 = load ptr, ptr %4, align 8
  %578 = getelementptr inbounds %struct.tdefl_compressor, ptr %577, i32 0, i32 17
  %579 = load i32, ptr %578, align 8
  %580 = trunc i32 %579 to i8
  %581 = load ptr, ptr %4, align 8
  %582 = getelementptr inbounds %struct.tdefl_compressor, ptr %581, i32 0, i32 11
  %583 = load ptr, ptr %582, align 8
  %584 = getelementptr inbounds i8, ptr %583, i32 1
  store ptr %584, ptr %582, align 8
  store i8 %580, ptr %583, align 1
  br label %585

585:                                              ; preds = %576, %568
  %586 = load ptr, ptr %4, align 8
  %587 = getelementptr inbounds %struct.tdefl_compressor, ptr %586, i32 0, i32 17
  %588 = load i32, ptr %587, align 8
  %589 = lshr i32 %588, 8
  store i32 %589, ptr %587, align 8
  %590 = load ptr, ptr %4, align 8
  %591 = getelementptr inbounds %struct.tdefl_compressor, ptr %590, i32 0, i32 16
  %592 = load i32, ptr %591, align 4
  %593 = sub i32 %592, 8
  store i32 %593, ptr %591, align 4
  br label %563, !llvm.loop !93

594:                                              ; preds = %563
  br label %595

595:                                              ; preds = %594
  br label %596

596:                                              ; preds = %595, %525
  store i32 2, ptr %25, align 4
  br label %597

597:                                              ; preds = %666, %596
  %598 = load i32, ptr %25, align 4
  %599 = icmp ne i32 %598, 0
  br i1 %599, label %600, label %673

600:                                              ; preds = %597
  br label %601

601:                                              ; preds = %600
  %602 = load ptr, ptr %4, align 8
  %603 = getelementptr inbounds %struct.tdefl_compressor, ptr %602, i32 0, i32 14
  %604 = load i32, ptr %603, align 4
  %605 = and i32 %604, 65535
  store i32 %605, ptr %30, align 4
  store i32 16, ptr %31, align 4
  %606 = load i32, ptr %30, align 4
  %607 = load i32, ptr %31, align 4
  %608 = shl i32 1, %607
  %609 = sub i32 %608, 1
  %610 = icmp ule i32 %606, %609
  %611 = xor i1 %610, true
  %612 = zext i1 %611 to i32
  %613 = sext i32 %612 to i64
  %614 = icmp ne i64 %613, 0
  br i1 %614, label %615, label %617

615:                                              ; preds = %601
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2747, ptr noundef @.str.72) #12
  unreachable

616:                                              ; No predecessors!
  br label %618

617:                                              ; preds = %601
  br label %618

618:                                              ; preds = %617, %616
  %619 = load i32, ptr %30, align 4
  %620 = load ptr, ptr %4, align 8
  %621 = getelementptr inbounds %struct.tdefl_compressor, ptr %620, i32 0, i32 16
  %622 = load i32, ptr %621, align 4
  %623 = shl i32 %619, %622
  %624 = load ptr, ptr %4, align 8
  %625 = getelementptr inbounds %struct.tdefl_compressor, ptr %624, i32 0, i32 17
  %626 = load i32, ptr %625, align 8
  %627 = or i32 %626, %623
  store i32 %627, ptr %625, align 8
  %628 = load i32, ptr %31, align 4
  %629 = load ptr, ptr %4, align 8
  %630 = getelementptr inbounds %struct.tdefl_compressor, ptr %629, i32 0, i32 16
  %631 = load i32, ptr %630, align 4
  %632 = add i32 %631, %628
  store i32 %632, ptr %630, align 4
  br label %633

633:                                              ; preds = %655, %618
  %634 = load ptr, ptr %4, align 8
  %635 = getelementptr inbounds %struct.tdefl_compressor, ptr %634, i32 0, i32 16
  %636 = load i32, ptr %635, align 4
  %637 = icmp uge i32 %636, 8
  br i1 %637, label %638, label %664

638:                                              ; preds = %633
  %639 = load ptr, ptr %4, align 8
  %640 = getelementptr inbounds %struct.tdefl_compressor, ptr %639, i32 0, i32 11
  %641 = load ptr, ptr %640, align 8
  %642 = load ptr, ptr %4, align 8
  %643 = getelementptr inbounds %struct.tdefl_compressor, ptr %642, i32 0, i32 12
  %644 = load ptr, ptr %643, align 8
  %645 = icmp ult ptr %641, %644
  br i1 %645, label %646, label %655

646:                                              ; preds = %638
  %647 = load ptr, ptr %4, align 8
  %648 = getelementptr inbounds %struct.tdefl_compressor, ptr %647, i32 0, i32 17
  %649 = load i32, ptr %648, align 8
  %650 = trunc i32 %649 to i8
  %651 = load ptr, ptr %4, align 8
  %652 = getelementptr inbounds %struct.tdefl_compressor, ptr %651, i32 0, i32 11
  %653 = load ptr, ptr %652, align 8
  %654 = getelementptr inbounds i8, ptr %653, i32 1
  store ptr %654, ptr %652, align 8
  store i8 %650, ptr %653, align 1
  br label %655

655:                                              ; preds = %646, %638
  %656 = load ptr, ptr %4, align 8
  %657 = getelementptr inbounds %struct.tdefl_compressor, ptr %656, i32 0, i32 17
  %658 = load i32, ptr %657, align 8
  %659 = lshr i32 %658, 8
  store i32 %659, ptr %657, align 8
  %660 = load ptr, ptr %4, align 8
  %661 = getelementptr inbounds %struct.tdefl_compressor, ptr %660, i32 0, i32 16
  %662 = load i32, ptr %661, align 4
  %663 = sub i32 %662, 8
  store i32 %663, ptr %661, align 4
  br label %633, !llvm.loop !94

664:                                              ; preds = %633
  br label %665

665:                                              ; preds = %664
  br label %666

666:                                              ; preds = %665
  %667 = load i32, ptr %25, align 4
  %668 = add i32 %667, -1
  store i32 %668, ptr %25, align 4
  %669 = load ptr, ptr %4, align 8
  %670 = getelementptr inbounds %struct.tdefl_compressor, ptr %669, i32 0, i32 14
  %671 = load i32, ptr %670, align 4
  %672 = xor i32 %671, 65535
  store i32 %672, ptr %670, align 4
  br label %597, !llvm.loop !95

673:                                              ; preds = %597
  store i32 0, ptr %25, align 4
  br label %674

674:                                              ; preds = %754, %673
  %675 = load i32, ptr %25, align 4
  %676 = load ptr, ptr %4, align 8
  %677 = getelementptr inbounds %struct.tdefl_compressor, ptr %676, i32 0, i32 14
  %678 = load i32, ptr %677, align 4
  %679 = icmp ult i32 %675, %678
  br i1 %679, label %680, label %757

680:                                              ; preds = %674
  br label %681

681:                                              ; preds = %680
  %682 = load ptr, ptr %4, align 8
  %683 = getelementptr inbounds %struct.tdefl_compressor, ptr %682, i32 0, i32 35
  %684 = load ptr, ptr %4, align 8
  %685 = getelementptr inbounds %struct.tdefl_compressor, ptr %684, i32 0, i32 15
  %686 = load i32, ptr %685, align 8
  %687 = load i32, ptr %25, align 4
  %688 = add i32 %686, %687
  %689 = and i32 %688, 32767
  %690 = zext i32 %689 to i64
  %691 = getelementptr inbounds [33025 x i8], ptr %683, i64 0, i64 %690
  %692 = load i8, ptr %691, align 1
  %693 = zext i8 %692 to i32
  store i32 %693, ptr %32, align 4
  store i32 8, ptr %33, align 4
  %694 = load i32, ptr %32, align 4
  %695 = load i32, ptr %33, align 4
  %696 = shl i32 1, %695
  %697 = sub i32 %696, 1
  %698 = icmp ule i32 %694, %697
  %699 = xor i1 %698, true
  %700 = zext i1 %699 to i32
  %701 = sext i32 %700 to i64
  %702 = icmp ne i64 %701, 0
  br i1 %702, label %703, label %705

703:                                              ; preds = %681
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2751, ptr noundef @.str.72) #12
  unreachable

704:                                              ; No predecessors!
  br label %706

705:                                              ; preds = %681
  br label %706

706:                                              ; preds = %705, %704
  %707 = load i32, ptr %32, align 4
  %708 = load ptr, ptr %4, align 8
  %709 = getelementptr inbounds %struct.tdefl_compressor, ptr %708, i32 0, i32 16
  %710 = load i32, ptr %709, align 4
  %711 = shl i32 %707, %710
  %712 = load ptr, ptr %4, align 8
  %713 = getelementptr inbounds %struct.tdefl_compressor, ptr %712, i32 0, i32 17
  %714 = load i32, ptr %713, align 8
  %715 = or i32 %714, %711
  store i32 %715, ptr %713, align 8
  %716 = load i32, ptr %33, align 4
  %717 = load ptr, ptr %4, align 8
  %718 = getelementptr inbounds %struct.tdefl_compressor, ptr %717, i32 0, i32 16
  %719 = load i32, ptr %718, align 4
  %720 = add i32 %719, %716
  store i32 %720, ptr %718, align 4
  br label %721

721:                                              ; preds = %743, %706
  %722 = load ptr, ptr %4, align 8
  %723 = getelementptr inbounds %struct.tdefl_compressor, ptr %722, i32 0, i32 16
  %724 = load i32, ptr %723, align 4
  %725 = icmp uge i32 %724, 8
  br i1 %725, label %726, label %752

726:                                              ; preds = %721
  %727 = load ptr, ptr %4, align 8
  %728 = getelementptr inbounds %struct.tdefl_compressor, ptr %727, i32 0, i32 11
  %729 = load ptr, ptr %728, align 8
  %730 = load ptr, ptr %4, align 8
  %731 = getelementptr inbounds %struct.tdefl_compressor, ptr %730, i32 0, i32 12
  %732 = load ptr, ptr %731, align 8
  %733 = icmp ult ptr %729, %732
  br i1 %733, label %734, label %743

734:                                              ; preds = %726
  %735 = load ptr, ptr %4, align 8
  %736 = getelementptr inbounds %struct.tdefl_compressor, ptr %735, i32 0, i32 17
  %737 = load i32, ptr %736, align 8
  %738 = trunc i32 %737 to i8
  %739 = load ptr, ptr %4, align 8
  %740 = getelementptr inbounds %struct.tdefl_compressor, ptr %739, i32 0, i32 11
  %741 = load ptr, ptr %740, align 8
  %742 = getelementptr inbounds i8, ptr %741, i32 1
  store ptr %742, ptr %740, align 8
  store i8 %738, ptr %741, align 1
  br label %743

743:                                              ; preds = %734, %726
  %744 = load ptr, ptr %4, align 8
  %745 = getelementptr inbounds %struct.tdefl_compressor, ptr %744, i32 0, i32 17
  %746 = load i32, ptr %745, align 8
  %747 = lshr i32 %746, 8
  store i32 %747, ptr %745, align 8
  %748 = load ptr, ptr %4, align 8
  %749 = getelementptr inbounds %struct.tdefl_compressor, ptr %748, i32 0, i32 16
  %750 = load i32, ptr %749, align 4
  %751 = sub i32 %750, 8
  store i32 %751, ptr %749, align 4
  br label %721, !llvm.loop !96

752:                                              ; preds = %721
  br label %753

753:                                              ; preds = %752
  br label %754

754:                                              ; preds = %753
  %755 = load i32, ptr %25, align 4
  %756 = add i32 %755, 1
  store i32 %756, ptr %25, align 4
  br label %674, !llvm.loop !97

757:                                              ; preds = %674
  br label %774

758:                                              ; preds = %443, %429, %424
  %759 = load i32, ptr %9, align 4
  %760 = icmp ne i32 %759, 0
  br i1 %760, label %773, label %761

761:                                              ; preds = %758
  %762 = load ptr, ptr %8, align 8
  %763 = load ptr, ptr %4, align 8
  %764 = getelementptr inbounds %struct.tdefl_compressor, ptr %763, i32 0, i32 11
  store ptr %762, ptr %764, align 8
  %765 = load i32, ptr %6, align 4
  %766 = load ptr, ptr %4, align 8
  %767 = getelementptr inbounds %struct.tdefl_compressor, ptr %766, i32 0, i32 17
  store i32 %765, ptr %767, align 8
  %768 = load i32, ptr %7, align 4
  %769 = load ptr, ptr %4, align 8
  %770 = getelementptr inbounds %struct.tdefl_compressor, ptr %769, i32 0, i32 16
  store i32 %768, ptr %770, align 4
  %771 = load ptr, ptr %4, align 8
  %772 = call i32 @tdefl_compress_block(ptr noundef %771, i32 noundef 1)
  br label %773

773:                                              ; preds = %761, %758
  br label %774

774:                                              ; preds = %773, %757
  %775 = load i32, ptr %5, align 4
  %776 = icmp ne i32 %775, 0
  br i1 %776, label %777, label %1143

777:                                              ; preds = %774
  %778 = load i32, ptr %5, align 4
  %779 = icmp eq i32 %778, 4
  br i1 %779, label %780, label %936

780:                                              ; preds = %777
  %781 = load ptr, ptr %4, align 8
  %782 = getelementptr inbounds %struct.tdefl_compressor, ptr %781, i32 0, i32 16
  %783 = load i32, ptr %782, align 4
  %784 = icmp ne i32 %783, 0
  br i1 %784, label %785, label %851

785:                                              ; preds = %780
  br label %786

786:                                              ; preds = %785
  store i32 0, ptr %34, align 4
  %787 = load ptr, ptr %4, align 8
  %788 = getelementptr inbounds %struct.tdefl_compressor, ptr %787, i32 0, i32 16
  %789 = load i32, ptr %788, align 4
  %790 = sub i32 8, %789
  store i32 %790, ptr %35, align 4
  %791 = load i32, ptr %34, align 4
  %792 = load i32, ptr %35, align 4
  %793 = shl i32 1, %792
  %794 = sub i32 %793, 1
  %795 = icmp ule i32 %791, %794
  %796 = xor i1 %795, true
  %797 = zext i1 %796 to i32
  %798 = sext i32 %797 to i64
  %799 = icmp ne i64 %798, 0
  br i1 %799, label %800, label %802

800:                                              ; preds = %786
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2768, ptr noundef @.str.72) #12
  unreachable

801:                                              ; No predecessors!
  br label %803

802:                                              ; preds = %786
  br label %803

803:                                              ; preds = %802, %801
  %804 = load i32, ptr %34, align 4
  %805 = load ptr, ptr %4, align 8
  %806 = getelementptr inbounds %struct.tdefl_compressor, ptr %805, i32 0, i32 16
  %807 = load i32, ptr %806, align 4
  %808 = shl i32 %804, %807
  %809 = load ptr, ptr %4, align 8
  %810 = getelementptr inbounds %struct.tdefl_compressor, ptr %809, i32 0, i32 17
  %811 = load i32, ptr %810, align 8
  %812 = or i32 %811, %808
  store i32 %812, ptr %810, align 8
  %813 = load i32, ptr %35, align 4
  %814 = load ptr, ptr %4, align 8
  %815 = getelementptr inbounds %struct.tdefl_compressor, ptr %814, i32 0, i32 16
  %816 = load i32, ptr %815, align 4
  %817 = add i32 %816, %813
  store i32 %817, ptr %815, align 4
  br label %818

818:                                              ; preds = %840, %803
  %819 = load ptr, ptr %4, align 8
  %820 = getelementptr inbounds %struct.tdefl_compressor, ptr %819, i32 0, i32 16
  %821 = load i32, ptr %820, align 4
  %822 = icmp uge i32 %821, 8
  br i1 %822, label %823, label %849

823:                                              ; preds = %818
  %824 = load ptr, ptr %4, align 8
  %825 = getelementptr inbounds %struct.tdefl_compressor, ptr %824, i32 0, i32 11
  %826 = load ptr, ptr %825, align 8
  %827 = load ptr, ptr %4, align 8
  %828 = getelementptr inbounds %struct.tdefl_compressor, ptr %827, i32 0, i32 12
  %829 = load ptr, ptr %828, align 8
  %830 = icmp ult ptr %826, %829
  br i1 %830, label %831, label %840

831:                                              ; preds = %823
  %832 = load ptr, ptr %4, align 8
  %833 = getelementptr inbounds %struct.tdefl_compressor, ptr %832, i32 0, i32 17
  %834 = load i32, ptr %833, align 8
  %835 = trunc i32 %834 to i8
  %836 = load ptr, ptr %4, align 8
  %837 = getelementptr inbounds %struct.tdefl_compressor, ptr %836, i32 0, i32 11
  %838 = load ptr, ptr %837, align 8
  %839 = getelementptr inbounds i8, ptr %838, i32 1
  store ptr %839, ptr %837, align 8
  store i8 %835, ptr %838, align 1
  br label %840

840:                                              ; preds = %831, %823
  %841 = load ptr, ptr %4, align 8
  %842 = getelementptr inbounds %struct.tdefl_compressor, ptr %841, i32 0, i32 17
  %843 = load i32, ptr %842, align 8
  %844 = lshr i32 %843, 8
  store i32 %844, ptr %842, align 8
  %845 = load ptr, ptr %4, align 8
  %846 = getelementptr inbounds %struct.tdefl_compressor, ptr %845, i32 0, i32 16
  %847 = load i32, ptr %846, align 4
  %848 = sub i32 %847, 8
  store i32 %848, ptr %846, align 4
  br label %818, !llvm.loop !98

849:                                              ; preds = %818
  br label %850

850:                                              ; preds = %849
  br label %851

851:                                              ; preds = %850, %780
  %852 = load ptr, ptr %4, align 8
  %853 = getelementptr inbounds %struct.tdefl_compressor, ptr %852, i32 0, i32 2
  %854 = load i32, ptr %853, align 8
  %855 = and i32 %854, 4096
  %856 = icmp ne i32 %855, 0
  br i1 %856, label %857, label %935

857:                                              ; preds = %851
  %858 = load ptr, ptr %4, align 8
  %859 = getelementptr inbounds %struct.tdefl_compressor, ptr %858, i32 0, i32 5
  %860 = load i32, ptr %859, align 8
  store i32 %860, ptr %37, align 4
  store i32 0, ptr %36, align 4
  br label %861

861:                                              ; preds = %931, %857
  %862 = load i32, ptr %36, align 4
  %863 = icmp ult i32 %862, 4
  br i1 %863, label %864, label %934

864:                                              ; preds = %861
  br label %865

865:                                              ; preds = %864
  %866 = load i32, ptr %37, align 4
  %867 = lshr i32 %866, 24
  %868 = and i32 %867, 255
  store i32 %868, ptr %38, align 4
  store i32 8, ptr %39, align 4
  %869 = load i32, ptr %38, align 4
  %870 = load i32, ptr %39, align 4
  %871 = shl i32 1, %870
  %872 = sub i32 %871, 1
  %873 = icmp ule i32 %869, %872
  %874 = xor i1 %873, true
  %875 = zext i1 %874 to i32
  %876 = sext i32 %875 to i64
  %877 = icmp ne i64 %876, 0
  br i1 %877, label %878, label %880

878:                                              ; preds = %865
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2775, ptr noundef @.str.72) #12
  unreachable

879:                                              ; No predecessors!
  br label %881

880:                                              ; preds = %865
  br label %881

881:                                              ; preds = %880, %879
  %882 = load i32, ptr %38, align 4
  %883 = load ptr, ptr %4, align 8
  %884 = getelementptr inbounds %struct.tdefl_compressor, ptr %883, i32 0, i32 16
  %885 = load i32, ptr %884, align 4
  %886 = shl i32 %882, %885
  %887 = load ptr, ptr %4, align 8
  %888 = getelementptr inbounds %struct.tdefl_compressor, ptr %887, i32 0, i32 17
  %889 = load i32, ptr %888, align 8
  %890 = or i32 %889, %886
  store i32 %890, ptr %888, align 8
  %891 = load i32, ptr %39, align 4
  %892 = load ptr, ptr %4, align 8
  %893 = getelementptr inbounds %struct.tdefl_compressor, ptr %892, i32 0, i32 16
  %894 = load i32, ptr %893, align 4
  %895 = add i32 %894, %891
  store i32 %895, ptr %893, align 4
  br label %896

896:                                              ; preds = %918, %881
  %897 = load ptr, ptr %4, align 8
  %898 = getelementptr inbounds %struct.tdefl_compressor, ptr %897, i32 0, i32 16
  %899 = load i32, ptr %898, align 4
  %900 = icmp uge i32 %899, 8
  br i1 %900, label %901, label %927

901:                                              ; preds = %896
  %902 = load ptr, ptr %4, align 8
  %903 = getelementptr inbounds %struct.tdefl_compressor, ptr %902, i32 0, i32 11
  %904 = load ptr, ptr %903, align 8
  %905 = load ptr, ptr %4, align 8
  %906 = getelementptr inbounds %struct.tdefl_compressor, ptr %905, i32 0, i32 12
  %907 = load ptr, ptr %906, align 8
  %908 = icmp ult ptr %904, %907
  br i1 %908, label %909, label %918

909:                                              ; preds = %901
  %910 = load ptr, ptr %4, align 8
  %911 = getelementptr inbounds %struct.tdefl_compressor, ptr %910, i32 0, i32 17
  %912 = load i32, ptr %911, align 8
  %913 = trunc i32 %912 to i8
  %914 = load ptr, ptr %4, align 8
  %915 = getelementptr inbounds %struct.tdefl_compressor, ptr %914, i32 0, i32 11
  %916 = load ptr, ptr %915, align 8
  %917 = getelementptr inbounds i8, ptr %916, i32 1
  store ptr %917, ptr %915, align 8
  store i8 %913, ptr %916, align 1
  br label %918

918:                                              ; preds = %909, %901
  %919 = load ptr, ptr %4, align 8
  %920 = getelementptr inbounds %struct.tdefl_compressor, ptr %919, i32 0, i32 17
  %921 = load i32, ptr %920, align 8
  %922 = lshr i32 %921, 8
  store i32 %922, ptr %920, align 8
  %923 = load ptr, ptr %4, align 8
  %924 = getelementptr inbounds %struct.tdefl_compressor, ptr %923, i32 0, i32 16
  %925 = load i32, ptr %924, align 4
  %926 = sub i32 %925, 8
  store i32 %926, ptr %924, align 4
  br label %896, !llvm.loop !99

927:                                              ; preds = %896
  br label %928

928:                                              ; preds = %927
  %929 = load i32, ptr %37, align 4
  %930 = shl i32 %929, 8
  store i32 %930, ptr %37, align 4
  br label %931

931:                                              ; preds = %928
  %932 = load i32, ptr %36, align 4
  %933 = add i32 %932, 1
  store i32 %933, ptr %36, align 4
  br label %861, !llvm.loop !100

934:                                              ; preds = %861
  br label %935

935:                                              ; preds = %934, %851
  br label %1142

936:                                              ; preds = %777
  store i32 0, ptr %41, align 4
  br label %937

937:                                              ; preds = %936
  store i32 0, ptr %42, align 4
  store i32 3, ptr %43, align 4
  %938 = load i32, ptr %42, align 4
  %939 = load i32, ptr %43, align 4
  %940 = shl i32 1, %939
  %941 = sub i32 %940, 1
  %942 = icmp ule i32 %938, %941
  %943 = xor i1 %942, true
  %944 = zext i1 %943 to i32
  %945 = sext i32 %944 to i64
  %946 = icmp ne i64 %945, 0
  br i1 %946, label %947, label %949

947:                                              ; preds = %937
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2783, ptr noundef @.str.72) #12
  unreachable

948:                                              ; No predecessors!
  br label %950

949:                                              ; preds = %937
  br label %950

950:                                              ; preds = %949, %948
  %951 = load i32, ptr %42, align 4
  %952 = load ptr, ptr %4, align 8
  %953 = getelementptr inbounds %struct.tdefl_compressor, ptr %952, i32 0, i32 16
  %954 = load i32, ptr %953, align 4
  %955 = shl i32 %951, %954
  %956 = load ptr, ptr %4, align 8
  %957 = getelementptr inbounds %struct.tdefl_compressor, ptr %956, i32 0, i32 17
  %958 = load i32, ptr %957, align 8
  %959 = or i32 %958, %955
  store i32 %959, ptr %957, align 8
  %960 = load i32, ptr %43, align 4
  %961 = load ptr, ptr %4, align 8
  %962 = getelementptr inbounds %struct.tdefl_compressor, ptr %961, i32 0, i32 16
  %963 = load i32, ptr %962, align 4
  %964 = add i32 %963, %960
  store i32 %964, ptr %962, align 4
  br label %965

965:                                              ; preds = %987, %950
  %966 = load ptr, ptr %4, align 8
  %967 = getelementptr inbounds %struct.tdefl_compressor, ptr %966, i32 0, i32 16
  %968 = load i32, ptr %967, align 4
  %969 = icmp uge i32 %968, 8
  br i1 %969, label %970, label %996

970:                                              ; preds = %965
  %971 = load ptr, ptr %4, align 8
  %972 = getelementptr inbounds %struct.tdefl_compressor, ptr %971, i32 0, i32 11
  %973 = load ptr, ptr %972, align 8
  %974 = load ptr, ptr %4, align 8
  %975 = getelementptr inbounds %struct.tdefl_compressor, ptr %974, i32 0, i32 12
  %976 = load ptr, ptr %975, align 8
  %977 = icmp ult ptr %973, %976
  br i1 %977, label %978, label %987

978:                                              ; preds = %970
  %979 = load ptr, ptr %4, align 8
  %980 = getelementptr inbounds %struct.tdefl_compressor, ptr %979, i32 0, i32 17
  %981 = load i32, ptr %980, align 8
  %982 = trunc i32 %981 to i8
  %983 = load ptr, ptr %4, align 8
  %984 = getelementptr inbounds %struct.tdefl_compressor, ptr %983, i32 0, i32 11
  %985 = load ptr, ptr %984, align 8
  %986 = getelementptr inbounds i8, ptr %985, i32 1
  store ptr %986, ptr %984, align 8
  store i8 %982, ptr %985, align 1
  br label %987

987:                                              ; preds = %978, %970
  %988 = load ptr, ptr %4, align 8
  %989 = getelementptr inbounds %struct.tdefl_compressor, ptr %988, i32 0, i32 17
  %990 = load i32, ptr %989, align 8
  %991 = lshr i32 %990, 8
  store i32 %991, ptr %989, align 8
  %992 = load ptr, ptr %4, align 8
  %993 = getelementptr inbounds %struct.tdefl_compressor, ptr %992, i32 0, i32 16
  %994 = load i32, ptr %993, align 4
  %995 = sub i32 %994, 8
  store i32 %995, ptr %993, align 4
  br label %965, !llvm.loop !101

996:                                              ; preds = %965
  br label %997

997:                                              ; preds = %996
  %998 = load ptr, ptr %4, align 8
  %999 = getelementptr inbounds %struct.tdefl_compressor, ptr %998, i32 0, i32 16
  %1000 = load i32, ptr %999, align 4
  %1001 = icmp ne i32 %1000, 0
  br i1 %1001, label %1002, label %1068

1002:                                             ; preds = %997
  br label %1003

1003:                                             ; preds = %1002
  store i32 0, ptr %44, align 4
  %1004 = load ptr, ptr %4, align 8
  %1005 = getelementptr inbounds %struct.tdefl_compressor, ptr %1004, i32 0, i32 16
  %1006 = load i32, ptr %1005, align 4
  %1007 = sub i32 8, %1006
  store i32 %1007, ptr %45, align 4
  %1008 = load i32, ptr %44, align 4
  %1009 = load i32, ptr %45, align 4
  %1010 = shl i32 1, %1009
  %1011 = sub i32 %1010, 1
  %1012 = icmp ule i32 %1008, %1011
  %1013 = xor i1 %1012, true
  %1014 = zext i1 %1013 to i32
  %1015 = sext i32 %1014 to i64
  %1016 = icmp ne i64 %1015, 0
  br i1 %1016, label %1017, label %1019

1017:                                             ; preds = %1003
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2786, ptr noundef @.str.72) #12
  unreachable

1018:                                             ; No predecessors!
  br label %1020

1019:                                             ; preds = %1003
  br label %1020

1020:                                             ; preds = %1019, %1018
  %1021 = load i32, ptr %44, align 4
  %1022 = load ptr, ptr %4, align 8
  %1023 = getelementptr inbounds %struct.tdefl_compressor, ptr %1022, i32 0, i32 16
  %1024 = load i32, ptr %1023, align 4
  %1025 = shl i32 %1021, %1024
  %1026 = load ptr, ptr %4, align 8
  %1027 = getelementptr inbounds %struct.tdefl_compressor, ptr %1026, i32 0, i32 17
  %1028 = load i32, ptr %1027, align 8
  %1029 = or i32 %1028, %1025
  store i32 %1029, ptr %1027, align 8
  %1030 = load i32, ptr %45, align 4
  %1031 = load ptr, ptr %4, align 8
  %1032 = getelementptr inbounds %struct.tdefl_compressor, ptr %1031, i32 0, i32 16
  %1033 = load i32, ptr %1032, align 4
  %1034 = add i32 %1033, %1030
  store i32 %1034, ptr %1032, align 4
  br label %1035

1035:                                             ; preds = %1057, %1020
  %1036 = load ptr, ptr %4, align 8
  %1037 = getelementptr inbounds %struct.tdefl_compressor, ptr %1036, i32 0, i32 16
  %1038 = load i32, ptr %1037, align 4
  %1039 = icmp uge i32 %1038, 8
  br i1 %1039, label %1040, label %1066

1040:                                             ; preds = %1035
  %1041 = load ptr, ptr %4, align 8
  %1042 = getelementptr inbounds %struct.tdefl_compressor, ptr %1041, i32 0, i32 11
  %1043 = load ptr, ptr %1042, align 8
  %1044 = load ptr, ptr %4, align 8
  %1045 = getelementptr inbounds %struct.tdefl_compressor, ptr %1044, i32 0, i32 12
  %1046 = load ptr, ptr %1045, align 8
  %1047 = icmp ult ptr %1043, %1046
  br i1 %1047, label %1048, label %1057

1048:                                             ; preds = %1040
  %1049 = load ptr, ptr %4, align 8
  %1050 = getelementptr inbounds %struct.tdefl_compressor, ptr %1049, i32 0, i32 17
  %1051 = load i32, ptr %1050, align 8
  %1052 = trunc i32 %1051 to i8
  %1053 = load ptr, ptr %4, align 8
  %1054 = getelementptr inbounds %struct.tdefl_compressor, ptr %1053, i32 0, i32 11
  %1055 = load ptr, ptr %1054, align 8
  %1056 = getelementptr inbounds i8, ptr %1055, i32 1
  store ptr %1056, ptr %1054, align 8
  store i8 %1052, ptr %1055, align 1
  br label %1057

1057:                                             ; preds = %1048, %1040
  %1058 = load ptr, ptr %4, align 8
  %1059 = getelementptr inbounds %struct.tdefl_compressor, ptr %1058, i32 0, i32 17
  %1060 = load i32, ptr %1059, align 8
  %1061 = lshr i32 %1060, 8
  store i32 %1061, ptr %1059, align 8
  %1062 = load ptr, ptr %4, align 8
  %1063 = getelementptr inbounds %struct.tdefl_compressor, ptr %1062, i32 0, i32 16
  %1064 = load i32, ptr %1063, align 4
  %1065 = sub i32 %1064, 8
  store i32 %1065, ptr %1063, align 4
  br label %1035, !llvm.loop !102

1066:                                             ; preds = %1035
  br label %1067

1067:                                             ; preds = %1066
  br label %1068

1068:                                             ; preds = %1067, %997
  store i32 2, ptr %40, align 4
  br label %1069

1069:                                             ; preds = %1136, %1068
  %1070 = load i32, ptr %40, align 4
  %1071 = icmp ne i32 %1070, 0
  br i1 %1071, label %1072, label %1141

1072:                                             ; preds = %1069
  br label %1073

1073:                                             ; preds = %1072
  %1074 = load i32, ptr %41, align 4
  %1075 = and i32 %1074, 65535
  store i32 %1075, ptr %46, align 4
  store i32 16, ptr %47, align 4
  %1076 = load i32, ptr %46, align 4
  %1077 = load i32, ptr %47, align 4
  %1078 = shl i32 1, %1077
  %1079 = sub i32 %1078, 1
  %1080 = icmp ule i32 %1076, %1079
  %1081 = xor i1 %1080, true
  %1082 = zext i1 %1081 to i32
  %1083 = sext i32 %1082 to i64
  %1084 = icmp ne i64 %1083, 0
  br i1 %1084, label %1085, label %1087

1085:                                             ; preds = %1073
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2790, ptr noundef @.str.72) #12
  unreachable

1086:                                             ; No predecessors!
  br label %1088

1087:                                             ; preds = %1073
  br label %1088

1088:                                             ; preds = %1087, %1086
  %1089 = load i32, ptr %46, align 4
  %1090 = load ptr, ptr %4, align 8
  %1091 = getelementptr inbounds %struct.tdefl_compressor, ptr %1090, i32 0, i32 16
  %1092 = load i32, ptr %1091, align 4
  %1093 = shl i32 %1089, %1092
  %1094 = load ptr, ptr %4, align 8
  %1095 = getelementptr inbounds %struct.tdefl_compressor, ptr %1094, i32 0, i32 17
  %1096 = load i32, ptr %1095, align 8
  %1097 = or i32 %1096, %1093
  store i32 %1097, ptr %1095, align 8
  %1098 = load i32, ptr %47, align 4
  %1099 = load ptr, ptr %4, align 8
  %1100 = getelementptr inbounds %struct.tdefl_compressor, ptr %1099, i32 0, i32 16
  %1101 = load i32, ptr %1100, align 4
  %1102 = add i32 %1101, %1098
  store i32 %1102, ptr %1100, align 4
  br label %1103

1103:                                             ; preds = %1125, %1088
  %1104 = load ptr, ptr %4, align 8
  %1105 = getelementptr inbounds %struct.tdefl_compressor, ptr %1104, i32 0, i32 16
  %1106 = load i32, ptr %1105, align 4
  %1107 = icmp uge i32 %1106, 8
  br i1 %1107, label %1108, label %1134

1108:                                             ; preds = %1103
  %1109 = load ptr, ptr %4, align 8
  %1110 = getelementptr inbounds %struct.tdefl_compressor, ptr %1109, i32 0, i32 11
  %1111 = load ptr, ptr %1110, align 8
  %1112 = load ptr, ptr %4, align 8
  %1113 = getelementptr inbounds %struct.tdefl_compressor, ptr %1112, i32 0, i32 12
  %1114 = load ptr, ptr %1113, align 8
  %1115 = icmp ult ptr %1111, %1114
  br i1 %1115, label %1116, label %1125

1116:                                             ; preds = %1108
  %1117 = load ptr, ptr %4, align 8
  %1118 = getelementptr inbounds %struct.tdefl_compressor, ptr %1117, i32 0, i32 17
  %1119 = load i32, ptr %1118, align 8
  %1120 = trunc i32 %1119 to i8
  %1121 = load ptr, ptr %4, align 8
  %1122 = getelementptr inbounds %struct.tdefl_compressor, ptr %1121, i32 0, i32 11
  %1123 = load ptr, ptr %1122, align 8
  %1124 = getelementptr inbounds i8, ptr %1123, i32 1
  store ptr %1124, ptr %1122, align 8
  store i8 %1120, ptr %1123, align 1
  br label %1125

1125:                                             ; preds = %1116, %1108
  %1126 = load ptr, ptr %4, align 8
  %1127 = getelementptr inbounds %struct.tdefl_compressor, ptr %1126, i32 0, i32 17
  %1128 = load i32, ptr %1127, align 8
  %1129 = lshr i32 %1128, 8
  store i32 %1129, ptr %1127, align 8
  %1130 = load ptr, ptr %4, align 8
  %1131 = getelementptr inbounds %struct.tdefl_compressor, ptr %1130, i32 0, i32 16
  %1132 = load i32, ptr %1131, align 4
  %1133 = sub i32 %1132, 8
  store i32 %1133, ptr %1131, align 4
  br label %1103, !llvm.loop !103

1134:                                             ; preds = %1103
  br label %1135

1135:                                             ; preds = %1134
  br label %1136

1136:                                             ; preds = %1135
  %1137 = load i32, ptr %40, align 4
  %1138 = add i32 %1137, -1
  store i32 %1138, ptr %40, align 4
  %1139 = load i32, ptr %41, align 4
  %1140 = xor i32 %1139, 65535
  store i32 %1140, ptr %41, align 4
  br label %1069, !llvm.loop !104

1141:                                             ; preds = %1069
  br label %1142

1142:                                             ; preds = %1141, %935
  br label %1143

1143:                                             ; preds = %1142, %774
  %1144 = load ptr, ptr %4, align 8
  %1145 = getelementptr inbounds %struct.tdefl_compressor, ptr %1144, i32 0, i32 11
  %1146 = load ptr, ptr %1145, align 8
  %1147 = load ptr, ptr %4, align 8
  %1148 = getelementptr inbounds %struct.tdefl_compressor, ptr %1147, i32 0, i32 12
  %1149 = load ptr, ptr %1148, align 8
  %1150 = icmp ult ptr %1146, %1149
  %1151 = xor i1 %1150, true
  %1152 = zext i1 %1151 to i32
  %1153 = sext i32 %1152 to i64
  %1154 = icmp ne i64 %1153, 0
  br i1 %1154, label %1155, label %1157

1155:                                             ; preds = %1143
  call void @__assert_rtn(ptr noundef @__func__.tdefl_flush_block, ptr noundef @.str.11, i32 noundef 2795, ptr noundef @.str.73) #12
  unreachable

1156:                                             ; No predecessors!
  br label %1158

1157:                                             ; preds = %1143
  br label %1158

1158:                                             ; preds = %1157, %1156
  %1159 = load ptr, ptr %4, align 8
  %1160 = getelementptr inbounds %struct.tdefl_compressor, ptr %1159, i32 0, i32 36
  %1161 = getelementptr inbounds [3 x [288 x i16]], ptr %1160, i64 0, i64 0
  %1162 = getelementptr inbounds [288 x i16], ptr %1161, i64 0, i64 0
  %1163 = load ptr, ptr %4, align 8
  %1164 = getelementptr inbounds %struct.tdefl_compressor, ptr %1163, i32 0, i32 36
  %1165 = getelementptr inbounds [3 x [288 x i16]], ptr %1164, i64 0, i64 0
  %1166 = getelementptr inbounds [288 x i16], ptr %1165, i64 0, i64 0
  %1167 = call i64 @llvm.objectsize.i64.p0(ptr %1166, i1 false, i1 true, i1 false)
  %1168 = call ptr @__memset_chk(ptr noundef %1162, i32 noundef 0, i64 noundef 576, i64 noundef %1167) #11
  %1169 = load ptr, ptr %4, align 8
  %1170 = getelementptr inbounds %struct.tdefl_compressor, ptr %1169, i32 0, i32 36
  %1171 = getelementptr inbounds [3 x [288 x i16]], ptr %1170, i64 0, i64 1
  %1172 = getelementptr inbounds [288 x i16], ptr %1171, i64 0, i64 0
  %1173 = load ptr, ptr %4, align 8
  %1174 = getelementptr inbounds %struct.tdefl_compressor, ptr %1173, i32 0, i32 36
  %1175 = getelementptr inbounds [3 x [288 x i16]], ptr %1174, i64 0, i64 1
  %1176 = getelementptr inbounds [288 x i16], ptr %1175, i64 0, i64 0
  %1177 = call i64 @llvm.objectsize.i64.p0(ptr %1176, i1 false, i1 true, i1 false)
  %1178 = call ptr @__memset_chk(ptr noundef %1172, i32 noundef 0, i64 noundef 64, i64 noundef %1177) #11
  %1179 = load ptr, ptr %4, align 8
  %1180 = getelementptr inbounds %struct.tdefl_compressor, ptr %1179, i32 0, i32 39
  %1181 = getelementptr inbounds [65536 x i8], ptr %1180, i64 0, i64 0
  %1182 = getelementptr inbounds i8, ptr %1181, i64 1
  %1183 = load ptr, ptr %4, align 8
  %1184 = getelementptr inbounds %struct.tdefl_compressor, ptr %1183, i32 0, i32 9
  store ptr %1182, ptr %1184, align 8
  %1185 = load ptr, ptr %4, align 8
  %1186 = getelementptr inbounds %struct.tdefl_compressor, ptr %1185, i32 0, i32 39
  %1187 = getelementptr inbounds [65536 x i8], ptr %1186, i64 0, i64 0
  %1188 = load ptr, ptr %4, align 8
  %1189 = getelementptr inbounds %struct.tdefl_compressor, ptr %1188, i32 0, i32 10
  store ptr %1187, ptr %1189, align 8
  %1190 = load ptr, ptr %4, align 8
  %1191 = getelementptr inbounds %struct.tdefl_compressor, ptr %1190, i32 0, i32 13
  store i32 8, ptr %1191, align 8
  %1192 = load ptr, ptr %4, align 8
  %1193 = getelementptr inbounds %struct.tdefl_compressor, ptr %1192, i32 0, i32 14
  %1194 = load i32, ptr %1193, align 4
  %1195 = load ptr, ptr %4, align 8
  %1196 = getelementptr inbounds %struct.tdefl_compressor, ptr %1195, i32 0, i32 15
  %1197 = load i32, ptr %1196, align 8
  %1198 = add i32 %1197, %1194
  store i32 %1198, ptr %1196, align 8
  %1199 = load ptr, ptr %4, align 8
  %1200 = getelementptr inbounds %struct.tdefl_compressor, ptr %1199, i32 0, i32 14
  store i32 0, ptr %1200, align 4
  %1201 = load ptr, ptr %4, align 8
  %1202 = getelementptr inbounds %struct.tdefl_compressor, ptr %1201, i32 0, i32 24
  %1203 = load i32, ptr %1202, align 4
  %1204 = add i32 %1203, 1
  store i32 %1204, ptr %1202, align 4
  %1205 = load ptr, ptr %4, align 8
  %1206 = getelementptr inbounds %struct.tdefl_compressor, ptr %1205, i32 0, i32 11
  %1207 = load ptr, ptr %1206, align 8
  %1208 = load ptr, ptr %12, align 8
  %1209 = ptrtoint ptr %1207 to i64
  %1210 = ptrtoint ptr %1208 to i64
  %1211 = sub i64 %1209, %1210
  %1212 = trunc i64 %1211 to i32
  store i32 %1212, ptr %10, align 4
  %1213 = icmp ne i32 %1212, 0
  br i1 %1213, label %1214, label %1329

1214:                                             ; preds = %1158
  %1215 = load ptr, ptr %4, align 8
  %1216 = getelementptr inbounds %struct.tdefl_compressor, ptr %1215, i32 0, i32 0
  %1217 = load ptr, ptr %1216, align 8
  %1218 = icmp ne ptr %1217, null
  br i1 %1218, label %1219, label %1248

1219:                                             ; preds = %1214
  %1220 = load ptr, ptr %4, align 8
  %1221 = getelementptr inbounds %struct.tdefl_compressor, ptr %1220, i32 0, i32 32
  %1222 = load ptr, ptr %1221, align 8
  %1223 = load ptr, ptr %4, align 8
  %1224 = getelementptr inbounds %struct.tdefl_compressor, ptr %1223, i32 0, i32 27
  %1225 = load ptr, ptr %1224, align 8
  %1226 = ptrtoint ptr %1222 to i64
  %1227 = ptrtoint ptr %1225 to i64
  %1228 = sub i64 %1226, %1227
  %1229 = load ptr, ptr %4, align 8
  %1230 = getelementptr inbounds %struct.tdefl_compressor, ptr %1229, i32 0, i32 29
  %1231 = load ptr, ptr %1230, align 8
  store i64 %1228, ptr %1231, align 8
  %1232 = load ptr, ptr %4, align 8
  %1233 = getelementptr inbounds %struct.tdefl_compressor, ptr %1232, i32 0, i32 0
  %1234 = load ptr, ptr %1233, align 8
  %1235 = load ptr, ptr %4, align 8
  %1236 = getelementptr inbounds %struct.tdefl_compressor, ptr %1235, i32 0, i32 42
  %1237 = getelementptr inbounds [85196 x i8], ptr %1236, i64 0, i64 0
  %1238 = load i32, ptr %10, align 4
  %1239 = load ptr, ptr %4, align 8
  %1240 = getelementptr inbounds %struct.tdefl_compressor, ptr %1239, i32 0, i32 1
  %1241 = load ptr, ptr %1240, align 8
  %1242 = call i32 %1234(ptr noundef %1237, i32 noundef %1238, ptr noundef %1241)
  %1243 = icmp ne i32 %1242, 0
  br i1 %1243, label %1247, label %1244

1244:                                             ; preds = %1219
  %1245 = load ptr, ptr %4, align 8
  %1246 = getelementptr inbounds %struct.tdefl_compressor, ptr %1245, i32 0, i32 26
  store i32 -1, ptr %1246, align 4
  store i32 -1, ptr %3, align 4
  br label %1333

1247:                                             ; preds = %1219
  br label %1328

1248:                                             ; preds = %1214
  %1249 = load ptr, ptr %12, align 8
  %1250 = load ptr, ptr %4, align 8
  %1251 = getelementptr inbounds %struct.tdefl_compressor, ptr %1250, i32 0, i32 42
  %1252 = getelementptr inbounds [85196 x i8], ptr %1251, i64 0, i64 0
  %1253 = icmp eq ptr %1249, %1252
  br i1 %1253, label %1254, label %1320

1254:                                             ; preds = %1248
  %1255 = load i32, ptr %10, align 4
  %1256 = sext i32 %1255 to i64
  %1257 = load ptr, ptr %4, align 8
  %1258 = getelementptr inbounds %struct.tdefl_compressor, ptr %1257, i32 0, i32 30
  %1259 = load ptr, ptr %1258, align 8
  %1260 = load i64, ptr %1259, align 8
  %1261 = load ptr, ptr %4, align 8
  %1262 = getelementptr inbounds %struct.tdefl_compressor, ptr %1261, i32 0, i32 34
  %1263 = load i64, ptr %1262, align 8
  %1264 = sub i64 %1260, %1263
  %1265 = icmp ult i64 %1256, %1264
  br i1 %1265, label %1266, label %1269

1266:                                             ; preds = %1254
  %1267 = load i32, ptr %10, align 4
  %1268 = sext i32 %1267 to i64
  br label %1278

1269:                                             ; preds = %1254
  %1270 = load ptr, ptr %4, align 8
  %1271 = getelementptr inbounds %struct.tdefl_compressor, ptr %1270, i32 0, i32 30
  %1272 = load ptr, ptr %1271, align 8
  %1273 = load i64, ptr %1272, align 8
  %1274 = load ptr, ptr %4, align 8
  %1275 = getelementptr inbounds %struct.tdefl_compressor, ptr %1274, i32 0, i32 34
  %1276 = load i64, ptr %1275, align 8
  %1277 = sub i64 %1273, %1276
  br label %1278

1278:                                             ; preds = %1269, %1266
  %1279 = phi i64 [ %1268, %1266 ], [ %1277, %1269 ]
  %1280 = trunc i64 %1279 to i32
  store i32 %1280, ptr %48, align 4
  %1281 = load ptr, ptr %4, align 8
  %1282 = getelementptr inbounds %struct.tdefl_compressor, ptr %1281, i32 0, i32 28
  %1283 = load ptr, ptr %1282, align 8
  %1284 = load ptr, ptr %4, align 8
  %1285 = getelementptr inbounds %struct.tdefl_compressor, ptr %1284, i32 0, i32 34
  %1286 = load i64, ptr %1285, align 8
  %1287 = getelementptr inbounds i8, ptr %1283, i64 %1286
  %1288 = load ptr, ptr %4, align 8
  %1289 = getelementptr inbounds %struct.tdefl_compressor, ptr %1288, i32 0, i32 42
  %1290 = getelementptr inbounds [85196 x i8], ptr %1289, i64 0, i64 0
  %1291 = load i32, ptr %48, align 4
  %1292 = sext i32 %1291 to i64
  %1293 = load ptr, ptr %4, align 8
  %1294 = getelementptr inbounds %struct.tdefl_compressor, ptr %1293, i32 0, i32 28
  %1295 = load ptr, ptr %1294, align 8
  %1296 = load ptr, ptr %4, align 8
  %1297 = getelementptr inbounds %struct.tdefl_compressor, ptr %1296, i32 0, i32 34
  %1298 = load i64, ptr %1297, align 8
  %1299 = getelementptr inbounds i8, ptr %1295, i64 %1298
  %1300 = call i64 @llvm.objectsize.i64.p0(ptr %1299, i1 false, i1 true, i1 false)
  %1301 = call ptr @__memcpy_chk(ptr noundef %1287, ptr noundef %1290, i64 noundef %1292, i64 noundef %1300) #11
  %1302 = load i32, ptr %48, align 4
  %1303 = sext i32 %1302 to i64
  %1304 = load ptr, ptr %4, align 8
  %1305 = getelementptr inbounds %struct.tdefl_compressor, ptr %1304, i32 0, i32 34
  %1306 = load i64, ptr %1305, align 8
  %1307 = add i64 %1306, %1303
  store i64 %1307, ptr %1305, align 8
  %1308 = load i32, ptr %48, align 4
  %1309 = load i32, ptr %10, align 4
  %1310 = sub nsw i32 %1309, %1308
  store i32 %1310, ptr %10, align 4
  %1311 = icmp ne i32 %1310, 0
  br i1 %1311, label %1312, label %1319

1312:                                             ; preds = %1278
  %1313 = load i32, ptr %48, align 4
  %1314 = load ptr, ptr %4, align 8
  %1315 = getelementptr inbounds %struct.tdefl_compressor, ptr %1314, i32 0, i32 21
  store i32 %1313, ptr %1315, align 8
  %1316 = load i32, ptr %10, align 4
  %1317 = load ptr, ptr %4, align 8
  %1318 = getelementptr inbounds %struct.tdefl_compressor, ptr %1317, i32 0, i32 22
  store i32 %1316, ptr %1318, align 4
  br label %1319

1319:                                             ; preds = %1312, %1278
  br label %1327

1320:                                             ; preds = %1248
  %1321 = load i32, ptr %10, align 4
  %1322 = sext i32 %1321 to i64
  %1323 = load ptr, ptr %4, align 8
  %1324 = getelementptr inbounds %struct.tdefl_compressor, ptr %1323, i32 0, i32 34
  %1325 = load i64, ptr %1324, align 8
  %1326 = add i64 %1325, %1322
  store i64 %1326, ptr %1324, align 8
  br label %1327

1327:                                             ; preds = %1320, %1319
  br label %1328

1328:                                             ; preds = %1327, %1247
  br label %1329

1329:                                             ; preds = %1328, %1158
  %1330 = load ptr, ptr %4, align 8
  %1331 = getelementptr inbounds %struct.tdefl_compressor, ptr %1330, i32 0, i32 22
  %1332 = load i32, ptr %1331, align 4
  store i32 %1332, ptr %3, align 4
  br label %1333

1333:                                             ; preds = %1329, %1244
  %1334 = load i32, ptr %3, align 4
  ret i32 %1334
}

; Function Attrs: nounwind
declare ptr @__memset_chk(ptr noundef, i32 noundef, i64 noundef, i64 noundef) #5

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @tdefl_compress_buffer(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store i64 %2, ptr %7, align 8
  store i32 %3, ptr %8, align 4
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds %struct.tdefl_compressor, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = icmp ne ptr %11, null
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %4
  call void @__assert_rtn(ptr noundef @__func__.tdefl_compress_buffer, ptr noundef @.str.11, i32 noundef 3413, ptr noundef @.str.12) #12
  unreachable

18:                                               ; No predecessors!
  br label %20

19:                                               ; preds = %4
  br label %20

20:                                               ; preds = %19, %18
  %21 = load ptr, ptr %5, align 8
  %22 = load ptr, ptr %6, align 8
  %23 = load i32, ptr %8, align 4
  %24 = call i32 @tdefl_compress(ptr noundef %21, ptr noundef %22, ptr noundef %7, ptr noundef null, ptr noundef null, i32 noundef %23)
  ret i32 %24
}

; Function Attrs: cold noreturn
declare void @__assert_rtn(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #7

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @tdefl_get_prev_return_status(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.tdefl_compressor, ptr %3, i32 0, i32 26
  %5 = load i32, ptr %4, align 4
  ret i32 %5
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @tdefl_compress_mem_to_output(ptr noundef %0, i64 noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  store ptr %0, ptr %7, align 8
  store i64 %1, ptr %8, align 8
  store ptr %2, ptr %9, align 8
  store ptr %3, ptr %10, align 8
  store i32 %4, ptr %11, align 4
  %14 = load i64, ptr %8, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %5
  %17 = load ptr, ptr %7, align 8
  %18 = icmp ne ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %16, %5
  %20 = load ptr, ptr %9, align 8
  %21 = icmp ne ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %19, %16
  store i32 0, ptr %6, align 4
  br label %49

23:                                               ; preds = %19
  %24 = call ptr @malloc(i64 noundef 319352) #9
  store ptr %24, ptr %12, align 8
  %25 = load ptr, ptr %12, align 8
  %26 = icmp ne ptr %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  store i32 0, ptr %6, align 4
  br label %49

28:                                               ; preds = %23
  %29 = load ptr, ptr %12, align 8
  %30 = load ptr, ptr %9, align 8
  %31 = load ptr, ptr %10, align 8
  %32 = load i32, ptr %11, align 4
  %33 = call i32 @tdefl_init(ptr noundef %29, ptr noundef %30, ptr noundef %31, i32 noundef %32)
  %34 = icmp eq i32 %33, 0
  %35 = zext i1 %34 to i32
  store i32 %35, ptr %13, align 4
  %36 = load i32, ptr %13, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %28
  %39 = load ptr, ptr %12, align 8
  %40 = load ptr, ptr %7, align 8
  %41 = load i64, ptr %8, align 8
  %42 = call i32 @tdefl_compress_buffer(ptr noundef %39, ptr noundef %40, i64 noundef %41, i32 noundef 4)
  %43 = icmp eq i32 %42, 1
  br label %44

44:                                               ; preds = %38, %28
  %45 = phi i1 [ false, %28 ], [ %43, %38 ]
  %46 = zext i1 %45 to i32
  store i32 %46, ptr %13, align 4
  %47 = load ptr, ptr %12, align 8
  call void @free(ptr noundef %47)
  %48 = load i32, ptr %13, align 4
  store i32 %48, ptr %6, align 4
  br label %49

49:                                               ; preds = %44, %27, %22
  %50 = load i32, ptr %6, align 4
  ret i32 %50
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @tdefl_compress_mem_to_heap(ptr noundef %0, i64 noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.tdefl_output_buffer, align 8
  store ptr %0, ptr %6, align 8
  store i64 %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store i32 %3, ptr %9, align 4
  call void @llvm.memset.p0.i64(ptr align 8 %10, i8 0, i64 32, i1 false)
  %11 = load ptr, ptr %8, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %4
  store ptr null, ptr %5, align 8
  br label %30

14:                                               ; preds = %4
  %15 = load ptr, ptr %8, align 8
  store i64 0, ptr %15, align 8
  br label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %10, i32 0, i32 3
  store i32 1, ptr %17, align 8
  %18 = load ptr, ptr %6, align 8
  %19 = load i64, ptr %7, align 8
  %20 = load i32, ptr %9, align 4
  %21 = call i32 @tdefl_compress_mem_to_output(ptr noundef %18, i64 noundef %19, ptr noundef @tdefl_output_buffer_putter, ptr noundef %10, i32 noundef %20)
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %16
  store ptr null, ptr %5, align 8
  br label %30

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %10, i32 0, i32 0
  %26 = load i64, ptr %25, align 8
  %27 = load ptr, ptr %8, align 8
  store i64 %26, ptr %27, align 8
  %28 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %10, i32 0, i32 2
  %29 = load ptr, ptr %28, align 8
  store ptr %29, ptr %5, align 8
  br label %30

30:                                               ; preds = %24, %23, %13
  %31 = load ptr, ptr %5, align 8
  ret ptr %31
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @tdefl_output_buffer_putter(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  store i32 %1, ptr %6, align 4
  store ptr %2, ptr %7, align 8
  %12 = load ptr, ptr %7, align 8
  store ptr %12, ptr %8, align 8
  %13 = load ptr, ptr %8, align 8
  %14 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %13, i32 0, i32 0
  %15 = load i64, ptr %14, align 8
  %16 = load i32, ptr %6, align 4
  %17 = sext i32 %16 to i64
  %18 = add i64 %15, %17
  store i64 %18, ptr %9, align 8
  %19 = load i64, ptr %9, align 8
  %20 = load ptr, ptr %8, align 8
  %21 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %20, i32 0, i32 1
  %22 = load i64, ptr %21, align 8
  %23 = icmp ugt i64 %19, %22
  br i1 %23, label %24, label %64

24:                                               ; preds = %3
  %25 = load ptr, ptr %8, align 8
  %26 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %25, i32 0, i32 1
  %27 = load i64, ptr %26, align 8
  store i64 %27, ptr %10, align 8
  %28 = load ptr, ptr %8, align 8
  %29 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %28, i32 0, i32 3
  %30 = load i32, ptr %29, align 8
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %24
  store i32 0, ptr %4, align 4
  br label %87

33:                                               ; preds = %24
  br label %34

34:                                               ; preds = %44, %33
  %35 = load i64, ptr %10, align 8
  %36 = shl i64 %35, 1
  %37 = icmp ugt i64 128, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  br label %42

39:                                               ; preds = %34
  %40 = load i64, ptr %10, align 8
  %41 = shl i64 %40, 1
  br label %42

42:                                               ; preds = %39, %38
  %43 = phi i64 [ 128, %38 ], [ %41, %39 ]
  store i64 %43, ptr %10, align 8
  br label %44

44:                                               ; preds = %42
  %45 = load i64, ptr %9, align 8
  %46 = load i64, ptr %10, align 8
  %47 = icmp ugt i64 %45, %46
  br i1 %47, label %34, label %48, !llvm.loop !105

48:                                               ; preds = %44
  %49 = load ptr, ptr %8, align 8
  %50 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %49, i32 0, i32 2
  %51 = load ptr, ptr %50, align 8
  %52 = load i64, ptr %10, align 8
  %53 = call ptr @realloc(ptr noundef %51, i64 noundef %52) #10
  store ptr %53, ptr %11, align 8
  %54 = load ptr, ptr %11, align 8
  %55 = icmp ne ptr %54, null
  br i1 %55, label %57, label %56

56:                                               ; preds = %48
  store i32 0, ptr %4, align 4
  br label %87

57:                                               ; preds = %48
  %58 = load ptr, ptr %11, align 8
  %59 = load ptr, ptr %8, align 8
  %60 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %59, i32 0, i32 2
  store ptr %58, ptr %60, align 8
  %61 = load i64, ptr %10, align 8
  %62 = load ptr, ptr %8, align 8
  %63 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %62, i32 0, i32 1
  store i64 %61, ptr %63, align 8
  br label %64

64:                                               ; preds = %57, %3
  %65 = load ptr, ptr %8, align 8
  %66 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %65, i32 0, i32 2
  %67 = load ptr, ptr %66, align 8
  %68 = load ptr, ptr %8, align 8
  %69 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %68, i32 0, i32 0
  %70 = load i64, ptr %69, align 8
  %71 = getelementptr inbounds i8, ptr %67, i64 %70
  %72 = load ptr, ptr %5, align 8
  %73 = load i32, ptr %6, align 4
  %74 = sext i32 %73 to i64
  %75 = load ptr, ptr %8, align 8
  %76 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %75, i32 0, i32 2
  %77 = load ptr, ptr %76, align 8
  %78 = load ptr, ptr %8, align 8
  %79 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %78, i32 0, i32 0
  %80 = load i64, ptr %79, align 8
  %81 = getelementptr inbounds i8, ptr %77, i64 %80
  %82 = call i64 @llvm.objectsize.i64.p0(ptr %81, i1 false, i1 true, i1 false)
  %83 = call ptr @__memcpy_chk(ptr noundef %71, ptr noundef %72, i64 noundef %74, i64 noundef %82) #11
  %84 = load i64, ptr %9, align 8
  %85 = load ptr, ptr %8, align 8
  %86 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %85, i32 0, i32 0
  store i64 %84, ptr %86, align 8
  store i32 1, ptr %4, align 4
  br label %87

87:                                               ; preds = %64, %56, %32
  %88 = load i32, ptr %4, align 4
  ret i32 %88
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @tdefl_compress_mem_to_mem(ptr noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.tdefl_output_buffer, align 8
  store ptr %0, ptr %7, align 8
  store i64 %1, ptr %8, align 8
  store ptr %2, ptr %9, align 8
  store i64 %3, ptr %10, align 8
  store i32 %4, ptr %11, align 4
  call void @llvm.memset.p0.i64(ptr align 8 %12, i8 0, i64 32, i1 false)
  %13 = load ptr, ptr %7, align 8
  %14 = icmp ne ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %5
  store i64 0, ptr %6, align 8
  br label %30

16:                                               ; preds = %5
  %17 = load ptr, ptr %7, align 8
  %18 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %12, i32 0, i32 2
  store ptr %17, ptr %18, align 8
  %19 = load i64, ptr %8, align 8
  %20 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %12, i32 0, i32 1
  store i64 %19, ptr %20, align 8
  %21 = load ptr, ptr %9, align 8
  %22 = load i64, ptr %10, align 8
  %23 = load i32, ptr %11, align 4
  %24 = call i32 @tdefl_compress_mem_to_output(ptr noundef %21, i64 noundef %22, ptr noundef @tdefl_output_buffer_putter, ptr noundef %12, i32 noundef %23)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %16
  store i64 0, ptr %6, align 8
  br label %30

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %12, i32 0, i32 0
  %29 = load i64, ptr %28, align 8
  store i64 %29, ptr %6, align 8
  br label %30

30:                                               ; preds = %27, %26, %15
  %31 = load i64, ptr %6, align 8
  ret i64 %31
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @tdefl_write_image_to_png_file_in_memory_ex(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef %5, i32 noundef %6) #0 {
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca %struct.tdefl_output_buffer, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca [41 x i8], align 16
  store ptr %0, ptr %9, align 8
  store i32 %1, ptr %10, align 4
  store i32 %2, ptr %11, align 4
  store i32 %3, ptr %12, align 4
  store ptr %4, ptr %13, align 8
  store i32 %5, ptr %14, align 4
  store i32 %6, ptr %15, align 4
  %24 = call ptr @malloc(i64 noundef 319352) #9
  store ptr %24, ptr %16, align 8
  %25 = load i32, ptr %10, align 4
  %26 = load i32, ptr %12, align 4
  %27 = mul nsw i32 %25, %26
  store i32 %27, ptr %19, align 4
  %28 = load ptr, ptr %13, align 8
  store i64 0, ptr %28, align 8
  %29 = load ptr, ptr %16, align 8
  %30 = icmp ne ptr %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %7
  store ptr null, ptr %8, align 8
  br label %235

32:                                               ; preds = %7
  call void @llvm.memset.p0.i64(ptr align 8 %17, i8 0, i64 32, i1 false)
  %33 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %17, i32 0, i32 3
  store i32 1, ptr %33, align 8
  %34 = load i32, ptr %19, align 4
  %35 = add nsw i32 1, %34
  %36 = load i32, ptr %11, align 4
  %37 = mul nsw i32 %35, %36
  %38 = icmp sgt i32 64, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %32
  br label %45

40:                                               ; preds = %32
  %41 = load i32, ptr %19, align 4
  %42 = add nsw i32 1, %41
  %43 = load i32, ptr %11, align 4
  %44 = mul nsw i32 %42, %43
  br label %45

45:                                               ; preds = %40, %39
  %46 = phi i32 [ 64, %39 ], [ %44, %40 ]
  %47 = add nsw i32 57, %46
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %17, i32 0, i32 1
  store i64 %48, ptr %49, align 8
  %50 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %17, i32 0, i32 1
  %51 = load i64, ptr %50, align 8
  %52 = call ptr @malloc(i64 noundef %51) #9
  %53 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %17, i32 0, i32 2
  store ptr %52, ptr %53, align 8
  %54 = icmp eq ptr null, %52
  br i1 %54, label %55, label %57

55:                                               ; preds = %45
  %56 = load ptr, ptr %16, align 8
  call void @free(ptr noundef %56)
  store ptr null, ptr %8, align 8
  br label %235

57:                                               ; preds = %45
  store i32 41, ptr %21, align 4
  br label %58

58:                                               ; preds = %63, %57
  %59 = load i32, ptr %21, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %58
  %62 = call i32 @tdefl_output_buffer_putter(ptr noundef %21, i32 noundef 1, ptr noundef %17)
  br label %63

63:                                               ; preds = %61
  %64 = load i32, ptr %21, align 4
  %65 = add nsw i32 %64, -1
  store i32 %65, ptr %21, align 4
  br label %58, !llvm.loop !106

66:                                               ; preds = %58
  %67 = load ptr, ptr %16, align 8
  %68 = load i32, ptr %14, align 4
  %69 = icmp ult i32 10, %68
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  br label %73

71:                                               ; preds = %66
  %72 = load i32, ptr %14, align 4
  br label %73

73:                                               ; preds = %71, %70
  %74 = phi i32 [ 10, %70 ], [ %72, %71 ]
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds [11 x i32], ptr @tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes, i64 0, i64 %75
  %77 = load i32, ptr %76, align 4
  %78 = or i32 %77, 4096
  %79 = call i32 @tdefl_init(ptr noundef %67, ptr noundef @tdefl_output_buffer_putter, ptr noundef %17, i32 noundef %78)
  store i32 0, ptr %20, align 4
  br label %80

80:                                               ; preds = %107, %73
  %81 = load i32, ptr %20, align 4
  %82 = load i32, ptr %11, align 4
  %83 = icmp slt i32 %81, %82
  br i1 %83, label %84, label %110

84:                                               ; preds = %80
  %85 = load ptr, ptr %16, align 8
  %86 = call i32 @tdefl_compress_buffer(ptr noundef %85, ptr noundef %21, i64 noundef 1, i32 noundef 0)
  %87 = load ptr, ptr %16, align 8
  %88 = load ptr, ptr %9, align 8
  %89 = load i32, ptr %15, align 4
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %96

91:                                               ; preds = %84
  %92 = load i32, ptr %11, align 4
  %93 = sub nsw i32 %92, 1
  %94 = load i32, ptr %20, align 4
  %95 = sub nsw i32 %93, %94
  br label %98

96:                                               ; preds = %84
  %97 = load i32, ptr %20, align 4
  br label %98

98:                                               ; preds = %96, %91
  %99 = phi i32 [ %95, %91 ], [ %97, %96 ]
  %100 = load i32, ptr %19, align 4
  %101 = mul nsw i32 %99, %100
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, ptr %88, i64 %102
  %104 = load i32, ptr %19, align 4
  %105 = sext i32 %104 to i64
  %106 = call i32 @tdefl_compress_buffer(ptr noundef %87, ptr noundef %103, i64 noundef %105, i32 noundef 0)
  br label %107

107:                                              ; preds = %98
  %108 = load i32, ptr %20, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, ptr %20, align 4
  br label %80, !llvm.loop !107

110:                                              ; preds = %80
  %111 = load ptr, ptr %16, align 8
  %112 = call i32 @tdefl_compress_buffer(ptr noundef %111, ptr noundef null, i64 noundef 0, i32 noundef 4)
  %113 = icmp ne i32 %112, 1
  br i1 %113, label %114, label %118

114:                                              ; preds = %110
  %115 = load ptr, ptr %16, align 8
  call void @free(ptr noundef %115)
  %116 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %17, i32 0, i32 2
  %117 = load ptr, ptr %116, align 8
  call void @free(ptr noundef %117)
  store ptr null, ptr %8, align 8
  br label %235

118:                                              ; preds = %110
  %119 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %17, i32 0, i32 0
  %120 = load i64, ptr %119, align 8
  %121 = sub i64 %120, 41
  %122 = load ptr, ptr %13, align 8
  store i64 %121, ptr %122, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %23, ptr align 16 @__const.tdefl_write_image_to_png_file_in_memory_ex.pnghdr, i64 41, i1 false)
  %123 = load i32, ptr %10, align 4
  %124 = ashr i32 %123, 8
  %125 = trunc i32 %124 to i8
  %126 = getelementptr inbounds [41 x i8], ptr %23, i64 0, i64 18
  store i8 %125, ptr %126, align 2
  %127 = load i32, ptr %10, align 4
  %128 = trunc i32 %127 to i8
  %129 = getelementptr inbounds [41 x i8], ptr %23, i64 0, i64 19
  store i8 %128, ptr %129, align 1
  %130 = load i32, ptr %11, align 4
  %131 = ashr i32 %130, 8
  %132 = trunc i32 %131 to i8
  %133 = getelementptr inbounds [41 x i8], ptr %23, i64 0, i64 22
  store i8 %132, ptr %133, align 2
  %134 = load i32, ptr %11, align 4
  %135 = trunc i32 %134 to i8
  %136 = getelementptr inbounds [41 x i8], ptr %23, i64 0, i64 23
  store i8 %135, ptr %136, align 1
  %137 = load i32, ptr %12, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [5 x i8], ptr @tdefl_write_image_to_png_file_in_memory_ex.chans, i64 0, i64 %138
  %140 = load i8, ptr %139, align 1
  %141 = getelementptr inbounds [41 x i8], ptr %23, i64 0, i64 25
  store i8 %140, ptr %141, align 1
  %142 = load ptr, ptr %13, align 8
  %143 = load i64, ptr %142, align 8
  %144 = lshr i64 %143, 24
  %145 = trunc i64 %144 to i8
  %146 = getelementptr inbounds [41 x i8], ptr %23, i64 0, i64 33
  store i8 %145, ptr %146, align 1
  %147 = load ptr, ptr %13, align 8
  %148 = load i64, ptr %147, align 8
  %149 = lshr i64 %148, 16
  %150 = trunc i64 %149 to i8
  %151 = getelementptr inbounds [41 x i8], ptr %23, i64 0, i64 34
  store i8 %150, ptr %151, align 2
  %152 = load ptr, ptr %13, align 8
  %153 = load i64, ptr %152, align 8
  %154 = lshr i64 %153, 8
  %155 = trunc i64 %154 to i8
  %156 = getelementptr inbounds [41 x i8], ptr %23, i64 0, i64 35
  store i8 %155, ptr %156, align 1
  %157 = load ptr, ptr %13, align 8
  %158 = load i64, ptr %157, align 8
  %159 = trunc i64 %158 to i8
  %160 = getelementptr inbounds [41 x i8], ptr %23, i64 0, i64 36
  store i8 %159, ptr %160, align 4
  %161 = getelementptr inbounds [41 x i8], ptr %23, i64 0, i64 0
  %162 = getelementptr inbounds i8, ptr %161, i64 12
  %163 = call i64 @mz_crc32(i64 noundef 0, ptr noundef %162, i64 noundef 17)
  %164 = trunc i64 %163 to i32
  store i32 %164, ptr %22, align 4
  store i32 0, ptr %18, align 4
  br label %165

165:                                              ; preds = %177, %118
  %166 = load i32, ptr %18, align 4
  %167 = icmp slt i32 %166, 4
  br i1 %167, label %168, label %182

168:                                              ; preds = %165
  %169 = load i32, ptr %22, align 4
  %170 = lshr i32 %169, 24
  %171 = trunc i32 %170 to i8
  %172 = getelementptr inbounds [41 x i8], ptr %23, i64 0, i64 0
  %173 = getelementptr inbounds i8, ptr %172, i64 29
  %174 = load i32, ptr %18, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i8, ptr %173, i64 %175
  store i8 %171, ptr %176, align 1
  br label %177

177:                                              ; preds = %168
  %178 = load i32, ptr %18, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, ptr %18, align 4
  %180 = load i32, ptr %22, align 4
  %181 = shl i32 %180, 8
  store i32 %181, ptr %22, align 4
  br label %165, !llvm.loop !108

182:                                              ; preds = %165
  %183 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %17, i32 0, i32 2
  %184 = load ptr, ptr %183, align 8
  %185 = getelementptr inbounds [41 x i8], ptr %23, i64 0, i64 0
  %186 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %17, i32 0, i32 2
  %187 = load ptr, ptr %186, align 8
  %188 = call i64 @llvm.objectsize.i64.p0(ptr %187, i1 false, i1 true, i1 false)
  %189 = call ptr @__memcpy_chk(ptr noundef %184, ptr noundef %185, i64 noundef 41, i64 noundef %188) #11
  %190 = call i32 @tdefl_output_buffer_putter(ptr noundef @.str.13, i32 noundef 16, ptr noundef %17)
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %197, label %192

192:                                              ; preds = %182
  %193 = load ptr, ptr %13, align 8
  store i64 0, ptr %193, align 8
  %194 = load ptr, ptr %16, align 8
  call void @free(ptr noundef %194)
  %195 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %17, i32 0, i32 2
  %196 = load ptr, ptr %195, align 8
  call void @free(ptr noundef %196)
  store ptr null, ptr %8, align 8
  br label %235

197:                                              ; preds = %182
  %198 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %17, i32 0, i32 2
  %199 = load ptr, ptr %198, align 8
  %200 = getelementptr inbounds i8, ptr %199, i64 41
  %201 = getelementptr inbounds i8, ptr %200, i64 -4
  %202 = load ptr, ptr %13, align 8
  %203 = load i64, ptr %202, align 8
  %204 = add i64 %203, 4
  %205 = call i64 @mz_crc32(i64 noundef 0, ptr noundef %201, i64 noundef %204)
  %206 = trunc i64 %205 to i32
  store i32 %206, ptr %22, align 4
  store i32 0, ptr %18, align 4
  br label %207

207:                                              ; preds = %223, %197
  %208 = load i32, ptr %18, align 4
  %209 = icmp slt i32 %208, 4
  br i1 %209, label %210, label %228

210:                                              ; preds = %207
  %211 = load i32, ptr %22, align 4
  %212 = lshr i32 %211, 24
  %213 = trunc i32 %212 to i8
  %214 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %17, i32 0, i32 2
  %215 = load ptr, ptr %214, align 8
  %216 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %17, i32 0, i32 0
  %217 = load i64, ptr %216, align 8
  %218 = getelementptr inbounds i8, ptr %215, i64 %217
  %219 = getelementptr inbounds i8, ptr %218, i64 -16
  %220 = load i32, ptr %18, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds i8, ptr %219, i64 %221
  store i8 %213, ptr %222, align 1
  br label %223

223:                                              ; preds = %210
  %224 = load i32, ptr %18, align 4
  %225 = add nsw i32 %224, 1
  store i32 %225, ptr %18, align 4
  %226 = load i32, ptr %22, align 4
  %227 = shl i32 %226, 8
  store i32 %227, ptr %22, align 4
  br label %207, !llvm.loop !109

228:                                              ; preds = %207
  %229 = load ptr, ptr %13, align 8
  %230 = load i64, ptr %229, align 8
  %231 = add i64 %230, 57
  store i64 %231, ptr %229, align 8
  %232 = load ptr, ptr %16, align 8
  call void @free(ptr noundef %232)
  %233 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %17, i32 0, i32 2
  %234 = load ptr, ptr %233, align 8
  store ptr %234, ptr %8, align 8
  br label %235

235:                                              ; preds = %228, %192, %114, %55, %31
  %236 = load ptr, ptr %8, align 8
  ret ptr %236
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @tdefl_write_image_to_png_file_in_memory(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  store i32 %1, ptr %7, align 4
  store i32 %2, ptr %8, align 4
  store i32 %3, ptr %9, align 4
  store ptr %4, ptr %10, align 8
  %11 = load ptr, ptr %6, align 8
  %12 = load i32, ptr %7, align 4
  %13 = load i32, ptr %8, align 4
  %14 = load i32, ptr %9, align 4
  %15 = load ptr, ptr %10, align 8
  %16 = call ptr @tdefl_write_image_to_png_file_in_memory_ex(ptr noundef %11, i32 noundef %12, i32 noundef %13, i32 noundef %14, ptr noundef %15, i32 noundef 6, i32 noundef 0)
  ret ptr %16
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @tdefl_compressor_alloc() #0 {
  %1 = call ptr @malloc(i64 noundef 319352) #9
  ret ptr %1
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @tdefl_compressor_free(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  call void @free(ptr noundef %3)
  ret void
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @tinfl_clear_tree(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %3, i32 0, i32 6
  %5 = load i32, ptr %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %1
  %8 = load ptr, ptr %2, align 8
  %9 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %8, i32 0, i32 15
  %10 = getelementptr inbounds [576 x i16], ptr %9, i64 0, i64 0
  %11 = load ptr, ptr %2, align 8
  %12 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %11, i32 0, i32 15
  %13 = getelementptr inbounds [576 x i16], ptr %12, i64 0, i64 0
  %14 = call i64 @llvm.objectsize.i64.p0(ptr %13, i1 false, i1 true, i1 false)
  %15 = call ptr @__memset_chk(ptr noundef %10, i32 noundef 0, i64 noundef 1152, i64 noundef %14) #11
  br label %40

16:                                               ; preds = %1
  %17 = load ptr, ptr %2, align 8
  %18 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %17, i32 0, i32 6
  %19 = load i32, ptr %18, align 8
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %30

21:                                               ; preds = %16
  %22 = load ptr, ptr %2, align 8
  %23 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %22, i32 0, i32 16
  %24 = getelementptr inbounds [64 x i16], ptr %23, i64 0, i64 0
  %25 = load ptr, ptr %2, align 8
  %26 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %25, i32 0, i32 16
  %27 = getelementptr inbounds [64 x i16], ptr %26, i64 0, i64 0
  %28 = call i64 @llvm.objectsize.i64.p0(ptr %27, i1 false, i1 true, i1 false)
  %29 = call ptr @__memset_chk(ptr noundef %24, i32 noundef 0, i64 noundef 128, i64 noundef %28) #11
  br label %39

30:                                               ; preds = %16
  %31 = load ptr, ptr %2, align 8
  %32 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %31, i32 0, i32 17
  %33 = getelementptr inbounds [38 x i16], ptr %32, i64 0, i64 0
  %34 = load ptr, ptr %2, align 8
  %35 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %34, i32 0, i32 17
  %36 = getelementptr inbounds [38 x i16], ptr %35, i64 0, i64 0
  %37 = call i64 @llvm.objectsize.i64.p0(ptr %36, i1 false, i1 true, i1 false)
  %38 = call ptr @__memset_chk(ptr noundef %33, i32 noundef 0, i64 noundef 76, i64 noundef %37) #11
  br label %39

39:                                               ; preds = %30, %21
  br label %40

40:                                               ; preds = %39, %7
  ret void
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @tinfl_decompress_mem_to_heap(ptr noundef %0, i64 noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.tinfl_decompressor_tag, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store i64 %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store i32 %3, ptr %9, align 4
  store ptr null, ptr %11, align 8
  store i64 0, ptr %13, align 8
  store i64 0, ptr %14, align 8
  %19 = load ptr, ptr %8, align 8
  store i64 0, ptr %19, align 8
  br label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %10, i32 0, i32 0
  store i32 0, ptr %21, align 8
  br label %22

22:                                               ; preds = %20
  br label %23

23:                                               ; preds = %83, %22
  %24 = load i64, ptr %7, align 8
  %25 = load i64, ptr %13, align 8
  %26 = sub i64 %24, %25
  store i64 %26, ptr %15, align 8
  %27 = load i64, ptr %14, align 8
  %28 = load ptr, ptr %8, align 8
  %29 = load i64, ptr %28, align 8
  %30 = sub i64 %27, %29
  store i64 %30, ptr %16, align 8
  %31 = load ptr, ptr %6, align 8
  %32 = load i64, ptr %13, align 8
  %33 = getelementptr inbounds i8, ptr %31, i64 %32
  %34 = load ptr, ptr %11, align 8
  %35 = load ptr, ptr %11, align 8
  %36 = icmp ne ptr %35, null
  br i1 %36, label %37, label %42

37:                                               ; preds = %23
  %38 = load ptr, ptr %11, align 8
  %39 = load ptr, ptr %8, align 8
  %40 = load i64, ptr %39, align 8
  %41 = getelementptr inbounds i8, ptr %38, i64 %40
  br label %43

42:                                               ; preds = %23
  br label %43

43:                                               ; preds = %42, %37
  %44 = phi ptr [ %41, %37 ], [ null, %42 ]
  %45 = load i32, ptr %9, align 4
  %46 = and i32 %45, -3
  %47 = or i32 %46, 4
  %48 = call i32 @tinfl_decompress(ptr noundef %10, ptr noundef %33, ptr noundef %15, ptr noundef %34, ptr noundef %44, ptr noundef %16, i32 noundef %47)
  store i32 %48, ptr %18, align 4
  %49 = load i32, ptr %18, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %43
  %52 = load i32, ptr %18, align 4
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %57

54:                                               ; preds = %51, %43
  %55 = load ptr, ptr %11, align 8
  call void @free(ptr noundef %55)
  %56 = load ptr, ptr %8, align 8
  store i64 0, ptr %56, align 8
  store ptr null, ptr %5, align 8
  br label %88

57:                                               ; preds = %51
  %58 = load i64, ptr %15, align 8
  %59 = load i64, ptr %13, align 8
  %60 = add i64 %59, %58
  store i64 %60, ptr %13, align 8
  %61 = load i64, ptr %16, align 8
  %62 = load ptr, ptr %8, align 8
  %63 = load i64, ptr %62, align 8
  %64 = add i64 %63, %61
  store i64 %64, ptr %62, align 8
  %65 = load i32, ptr %18, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %57
  br label %86

68:                                               ; preds = %57
  %69 = load i64, ptr %14, align 8
  %70 = mul i64 %69, 2
  store i64 %70, ptr %17, align 8
  %71 = load i64, ptr %17, align 8
  %72 = icmp ult i64 %71, 128
  br i1 %72, label %73, label %74

73:                                               ; preds = %68
  store i64 128, ptr %17, align 8
  br label %74

74:                                               ; preds = %73, %68
  %75 = load ptr, ptr %11, align 8
  %76 = load i64, ptr %17, align 8
  %77 = call ptr @realloc(ptr noundef %75, i64 noundef %76) #10
  store ptr %77, ptr %12, align 8
  %78 = load ptr, ptr %12, align 8
  %79 = icmp ne ptr %78, null
  br i1 %79, label %83, label %80

80:                                               ; preds = %74
  %81 = load ptr, ptr %11, align 8
  call void @free(ptr noundef %81)
  %82 = load ptr, ptr %8, align 8
  store i64 0, ptr %82, align 8
  store ptr null, ptr %5, align 8
  br label %88

83:                                               ; preds = %74
  %84 = load ptr, ptr %12, align 8
  store ptr %84, ptr %11, align 8
  %85 = load i64, ptr %17, align 8
  store i64 %85, ptr %14, align 8
  br label %23

86:                                               ; preds = %67
  %87 = load ptr, ptr %11, align 8
  store ptr %87, ptr %5, align 8
  br label %88

88:                                               ; preds = %86, %80, %54
  %89 = load ptr, ptr %5, align 8
  ret ptr %89
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @tinfl_decompress_mem_to_mem(ptr noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.tinfl_decompressor_tag, align 8
  %12 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store i64 %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store i64 %3, ptr %9, align 8
  store i32 %4, ptr %10, align 4
  br label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %11, i32 0, i32 0
  store i32 0, ptr %14, align 8
  br label %15

15:                                               ; preds = %13
  %16 = load ptr, ptr %8, align 8
  %17 = load ptr, ptr %6, align 8
  %18 = load ptr, ptr %6, align 8
  %19 = load i32, ptr %10, align 4
  %20 = and i32 %19, -3
  %21 = or i32 %20, 4
  %22 = call i32 @tinfl_decompress(ptr noundef %11, ptr noundef %16, ptr noundef %9, ptr noundef %17, ptr noundef %18, ptr noundef %7, i32 noundef %21)
  store i32 %22, ptr %12, align 4
  %23 = load i32, ptr %12, align 4
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %15
  br label %28

26:                                               ; preds = %15
  %27 = load i64, ptr %7, align 8
  br label %28

28:                                               ; preds = %26, %25
  %29 = phi i64 [ -1, %25 ], [ %27, %26 ]
  ret i64 %29
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @tinfl_decompress_mem_to_callback(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.tinfl_decompressor_tag, align 8
  %14 = alloca ptr, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  store ptr %0, ptr %7, align 8
  store ptr %1, ptr %8, align 8
  store ptr %2, ptr %9, align 8
  store ptr %3, ptr %10, align 8
  store i32 %4, ptr %11, align 4
  store i32 0, ptr %12, align 4
  %20 = call ptr @malloc(i64 noundef 32768) #9
  store ptr %20, ptr %14, align 8
  store i64 0, ptr %15, align 8
  store i64 0, ptr %16, align 8
  %21 = load ptr, ptr %14, align 8
  %22 = icmp ne ptr %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %5
  store i32 -1, ptr %6, align 4
  br label %82

24:                                               ; preds = %5
  %25 = load ptr, ptr %14, align 8
  %26 = load ptr, ptr %14, align 8
  %27 = call i64 @llvm.objectsize.i64.p0(ptr %26, i1 false, i1 true, i1 false)
  %28 = call ptr @__memset_chk(ptr noundef %25, i32 noundef 0, i64 noundef 32768, i64 noundef %27) #11
  br label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %13, i32 0, i32 0
  store i32 0, ptr %30, align 8
  br label %31

31:                                               ; preds = %29
  br label %32

32:                                               ; preds = %72, %31
  %33 = load ptr, ptr %8, align 8
  %34 = load i64, ptr %33, align 8
  %35 = load i64, ptr %15, align 8
  %36 = sub i64 %34, %35
  store i64 %36, ptr %17, align 8
  %37 = load i64, ptr %16, align 8
  %38 = sub i64 32768, %37
  store i64 %38, ptr %18, align 8
  %39 = load ptr, ptr %7, align 8
  %40 = load i64, ptr %15, align 8
  %41 = getelementptr inbounds i8, ptr %39, i64 %40
  %42 = load ptr, ptr %14, align 8
  %43 = load ptr, ptr %14, align 8
  %44 = load i64, ptr %16, align 8
  %45 = getelementptr inbounds i8, ptr %43, i64 %44
  %46 = load i32, ptr %11, align 4
  %47 = and i32 %46, -7
  %48 = call i32 @tinfl_decompress(ptr noundef %13, ptr noundef %41, ptr noundef %17, ptr noundef %42, ptr noundef %45, ptr noundef %18, i32 noundef %47)
  store i32 %48, ptr %19, align 4
  %49 = load i64, ptr %17, align 8
  %50 = load i64, ptr %15, align 8
  %51 = add i64 %50, %49
  store i64 %51, ptr %15, align 8
  %52 = load i64, ptr %18, align 8
  %53 = icmp ne i64 %52, 0
  br i1 %53, label %54, label %65

54:                                               ; preds = %32
  %55 = load ptr, ptr %9, align 8
  %56 = load ptr, ptr %14, align 8
  %57 = load i64, ptr %16, align 8
  %58 = getelementptr inbounds i8, ptr %56, i64 %57
  %59 = load i64, ptr %18, align 8
  %60 = trunc i64 %59 to i32
  %61 = load ptr, ptr %10, align 8
  %62 = call i32 %55(ptr noundef %58, i32 noundef %60, ptr noundef %61)
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %54
  br label %77

65:                                               ; preds = %54, %32
  %66 = load i32, ptr %19, align 4
  %67 = icmp ne i32 %66, 2
  br i1 %67, label %68, label %72

68:                                               ; preds = %65
  %69 = load i32, ptr %19, align 4
  %70 = icmp eq i32 %69, 0
  %71 = zext i1 %70 to i32
  store i32 %71, ptr %12, align 4
  br label %77

72:                                               ; preds = %65
  %73 = load i64, ptr %16, align 8
  %74 = load i64, ptr %18, align 8
  %75 = add i64 %73, %74
  %76 = and i64 %75, 32767
  store i64 %76, ptr %16, align 8
  br label %32

77:                                               ; preds = %68, %64
  %78 = load ptr, ptr %14, align 8
  call void @free(ptr noundef %78)
  %79 = load i64, ptr %15, align 8
  %80 = load ptr, ptr %8, align 8
  store i64 %79, ptr %80, align 8
  %81 = load i32, ptr %12, align 4
  store i32 %81, ptr %6, align 4
  br label %82

82:                                               ; preds = %77, %23
  %83 = load i32, ptr %6, align 4
  ret i32 %83
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @tinfl_decompressor_alloc() #0 {
  %1 = alloca ptr, align 8
  %2 = call ptr @malloc(i64 noundef 8376) #9
  store ptr %2, ptr %1, align 8
  %3 = load ptr, ptr %1, align 8
  %4 = icmp ne ptr %3, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %0
  br label %6

6:                                                ; preds = %5
  %7 = load ptr, ptr %1, align 8
  %8 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %7, i32 0, i32 0
  store i32 0, ptr %8, align 8
  br label %9

9:                                                ; preds = %6
  br label %10

10:                                               ; preds = %9, %0
  %11 = load ptr, ptr %1, align 8
  ret ptr %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @tinfl_decompressor_free(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  call void @free(ptr noundef %3)
  ret void
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @mz_zip_zero_struct(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = icmp ne ptr %3, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = load ptr, ptr %2, align 8
  %7 = load ptr, ptr %2, align 8
  %8 = call i64 @llvm.objectsize.i64.p0(ptr %7, i1 false, i1 true, i1 false)
  %9 = call ptr @__memset_chk(ptr noundef %6, i32 noundef 0, i64 noundef 112, i64 noundef %8) #11
  br label %10

10:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_end(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = call i32 @mz_zip_reader_end_internal(ptr noundef %3, i32 noundef 1)
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_reader_end_internal(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  store ptr %0, ptr %10, align 8
  store i32 %1, ptr %11, align 4
  store i32 1, ptr %12, align 4
  %14 = load ptr, ptr %10, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  store i32 0, ptr %9, align 4
  br label %138

17:                                               ; preds = %2
  %18 = load ptr, ptr %10, align 8
  %19 = getelementptr inbounds %struct.mz_zip_archive, ptr %18, i32 0, i32 15
  %20 = load ptr, ptr %19, align 8
  %21 = icmp ne ptr %20, null
  br i1 %21, label %22, label %37

22:                                               ; preds = %17
  %23 = load ptr, ptr %10, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %23, i32 0, i32 7
  %25 = load ptr, ptr %24, align 8
  %26 = icmp ne ptr %25, null
  br i1 %26, label %27, label %37

27:                                               ; preds = %22
  %28 = load ptr, ptr %10, align 8
  %29 = getelementptr inbounds %struct.mz_zip_archive, ptr %28, i32 0, i32 8
  %30 = load ptr, ptr %29, align 8
  %31 = icmp ne ptr %30, null
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = load ptr, ptr %10, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %33, i32 0, i32 3
  %35 = load i32, ptr %34, align 4
  %36 = icmp ne i32 %35, 1
  br i1 %36, label %37, label %44

37:                                               ; preds = %32, %27, %22, %17
  %38 = load i32, ptr %11, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = load ptr, ptr %10, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive, ptr %41, i32 0, i32 5
  store i32 24, ptr %42, align 4
  br label %43

43:                                               ; preds = %40, %37
  store i32 0, ptr %9, align 4
  br label %138

44:                                               ; preds = %32
  %45 = load ptr, ptr %10, align 8
  %46 = getelementptr inbounds %struct.mz_zip_archive, ptr %45, i32 0, i32 15
  %47 = load ptr, ptr %46, align 8
  %48 = icmp ne ptr %47, null
  br i1 %48, label %49, label %134

49:                                               ; preds = %44
  %50 = load ptr, ptr %10, align 8
  %51 = getelementptr inbounds %struct.mz_zip_archive, ptr %50, i32 0, i32 15
  %52 = load ptr, ptr %51, align 8
  store ptr %52, ptr %13, align 8
  %53 = load ptr, ptr %10, align 8
  %54 = getelementptr inbounds %struct.mz_zip_archive, ptr %53, i32 0, i32 15
  store ptr null, ptr %54, align 8
  %55 = load ptr, ptr %10, align 8
  %56 = load ptr, ptr %13, align 8
  %57 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %56, i32 0, i32 0
  store ptr %55, ptr %3, align 8
  store ptr %57, ptr %4, align 8
  %58 = load ptr, ptr %3, align 8
  %59 = getelementptr inbounds %struct.mz_zip_archive, ptr %58, i32 0, i32 8
  %60 = load ptr, ptr %59, align 8
  %61 = load ptr, ptr %3, align 8
  %62 = getelementptr inbounds %struct.mz_zip_archive, ptr %61, i32 0, i32 10
  %63 = load ptr, ptr %62, align 8
  %64 = load ptr, ptr %4, align 8
  %65 = load ptr, ptr %64, align 8
  call void %60(ptr noundef %63, ptr noundef %65) #11
  %66 = load ptr, ptr %4, align 8
  %67 = load ptr, ptr %4, align 8
  %68 = call i64 @llvm.objectsize.i64.p0(ptr %67, i1 false, i1 true, i1 false)
  %69 = call ptr @__memset_chk(ptr noundef %66, i32 noundef 0, i64 noundef 32, i64 noundef %68) #11
  %70 = load ptr, ptr %10, align 8
  %71 = load ptr, ptr %13, align 8
  %72 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %71, i32 0, i32 1
  store ptr %70, ptr %5, align 8
  store ptr %72, ptr %6, align 8
  %73 = load ptr, ptr %5, align 8
  %74 = getelementptr inbounds %struct.mz_zip_archive, ptr %73, i32 0, i32 8
  %75 = load ptr, ptr %74, align 8
  %76 = load ptr, ptr %5, align 8
  %77 = getelementptr inbounds %struct.mz_zip_archive, ptr %76, i32 0, i32 10
  %78 = load ptr, ptr %77, align 8
  %79 = load ptr, ptr %6, align 8
  %80 = load ptr, ptr %79, align 8
  call void %75(ptr noundef %78, ptr noundef %80) #11
  %81 = load ptr, ptr %6, align 8
  %82 = load ptr, ptr %6, align 8
  %83 = call i64 @llvm.objectsize.i64.p0(ptr %82, i1 false, i1 true, i1 false)
  %84 = call ptr @__memset_chk(ptr noundef %81, i32 noundef 0, i64 noundef 32, i64 noundef %83) #11
  %85 = load ptr, ptr %10, align 8
  %86 = load ptr, ptr %13, align 8
  %87 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %86, i32 0, i32 2
  store ptr %85, ptr %7, align 8
  store ptr %87, ptr %8, align 8
  %88 = load ptr, ptr %7, align 8
  %89 = getelementptr inbounds %struct.mz_zip_archive, ptr %88, i32 0, i32 8
  %90 = load ptr, ptr %89, align 8
  %91 = load ptr, ptr %7, align 8
  %92 = getelementptr inbounds %struct.mz_zip_archive, ptr %91, i32 0, i32 10
  %93 = load ptr, ptr %92, align 8
  %94 = load ptr, ptr %8, align 8
  %95 = load ptr, ptr %94, align 8
  call void %90(ptr noundef %93, ptr noundef %95) #11
  %96 = load ptr, ptr %8, align 8
  %97 = load ptr, ptr %8, align 8
  %98 = call i64 @llvm.objectsize.i64.p0(ptr %97, i1 false, i1 true, i1 false)
  %99 = call ptr @__memset_chk(ptr noundef %96, i32 noundef 0, i64 noundef 32, i64 noundef %98) #11
  %100 = load ptr, ptr %13, align 8
  %101 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %100, i32 0, i32 6
  %102 = load ptr, ptr %101, align 8
  %103 = icmp ne ptr %102, null
  br i1 %103, label %104, label %126

104:                                              ; preds = %49
  %105 = load ptr, ptr %10, align 8
  %106 = getelementptr inbounds %struct.mz_zip_archive, ptr %105, i32 0, i32 4
  %107 = load i32, ptr %106, align 8
  %108 = icmp eq i32 %107, 4
  br i1 %108, label %109, label %123

109:                                              ; preds = %104
  %110 = load ptr, ptr %13, align 8
  %111 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %110, i32 0, i32 6
  %112 = load ptr, ptr %111, align 8
  %113 = call i32 @fclose(ptr noundef %112)
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %115, label %122

115:                                              ; preds = %109
  %116 = load i32, ptr %11, align 4
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %115
  %119 = load ptr, ptr %10, align 8
  %120 = getelementptr inbounds %struct.mz_zip_archive, ptr %119, i32 0, i32 5
  store i32 21, ptr %120, align 4
  br label %121

121:                                              ; preds = %118, %115
  store i32 0, ptr %12, align 4
  br label %122

122:                                              ; preds = %121, %109
  br label %123

123:                                              ; preds = %122, %104
  %124 = load ptr, ptr %13, align 8
  %125 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %124, i32 0, i32 6
  store ptr null, ptr %125, align 8
  br label %126

126:                                              ; preds = %123, %49
  %127 = load ptr, ptr %10, align 8
  %128 = getelementptr inbounds %struct.mz_zip_archive, ptr %127, i32 0, i32 8
  %129 = load ptr, ptr %128, align 8
  %130 = load ptr, ptr %10, align 8
  %131 = getelementptr inbounds %struct.mz_zip_archive, ptr %130, i32 0, i32 10
  %132 = load ptr, ptr %131, align 8
  %133 = load ptr, ptr %13, align 8
  call void %129(ptr noundef %132, ptr noundef %133)
  br label %134

134:                                              ; preds = %126, %44
  %135 = load ptr, ptr %10, align 8
  %136 = getelementptr inbounds %struct.mz_zip_archive, ptr %135, i32 0, i32 3
  store i32 0, ptr %136, align 4
  %137 = load i32, ptr %12, align 4
  store i32 %137, ptr %9, align 4
  br label %138

138:                                              ; preds = %134, %43, %16
  %139 = load i32, ptr %9, align 4
  ret i32 %139
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_init(ptr noundef %0, i64 noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  store ptr %0, ptr %7, align 8
  store i64 %1, ptr %8, align 8
  store i32 %2, ptr %9, align 4
  %10 = load ptr, ptr %7, align 8
  %11 = icmp ne ptr %10, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %3
  %13 = load ptr, ptr %7, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %13, i32 0, i32 11
  %15 = load ptr, ptr %14, align 8
  %16 = icmp ne ptr %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %12, %3
  %18 = load ptr, ptr %7, align 8
  store ptr %18, ptr %4, align 8
  store i32 24, ptr %5, align 4
  %19 = load ptr, ptr %4, align 8
  %20 = icmp ne ptr %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = load i32, ptr %5, align 4
  %23 = load ptr, ptr %4, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %23, i32 0, i32 5
  store i32 %22, ptr %24, align 4
  br label %25

25:                                               ; preds = %17, %21
  store i32 0, ptr %6, align 4
  br label %46

26:                                               ; preds = %12
  %27 = load ptr, ptr %7, align 8
  %28 = load i32, ptr %9, align 4
  %29 = call i32 @mz_zip_reader_init_internal(ptr noundef %27, i32 noundef %28)
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  store i32 0, ptr %6, align 4
  br label %46

32:                                               ; preds = %26
  %33 = load ptr, ptr %7, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %33, i32 0, i32 4
  store i32 1, ptr %34, align 8
  %35 = load i64, ptr %8, align 8
  %36 = load ptr, ptr %7, align 8
  %37 = getelementptr inbounds %struct.mz_zip_archive, ptr %36, i32 0, i32 0
  store i64 %35, ptr %37, align 8
  %38 = load ptr, ptr %7, align 8
  %39 = load i32, ptr %9, align 4
  %40 = call i32 @mz_zip_reader_read_central_dir(ptr noundef %38, i32 noundef %39)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %32
  %43 = load ptr, ptr %7, align 8
  %44 = call i32 @mz_zip_reader_end_internal(ptr noundef %43, i32 noundef 0)
  store i32 0, ptr %6, align 4
  br label %46

45:                                               ; preds = %32
  store i32 1, ptr %6, align 4
  br label %46

46:                                               ; preds = %45, %42, %31, %25
  %47 = load i32, ptr %6, align 4
  ret i32 %47
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_reader_init_internal(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  store ptr %0, ptr %8, align 8
  store i32 %1, ptr %9, align 4
  %10 = load i32, ptr %9, align 4
  %11 = load ptr, ptr %8, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %13, label %23

13:                                               ; preds = %2
  %14 = load ptr, ptr %8, align 8
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %14, i32 0, i32 15
  %16 = load ptr, ptr %15, align 8
  %17 = icmp ne ptr %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = load ptr, ptr %8, align 8
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %19, i32 0, i32 3
  %21 = load i32, ptr %20, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %32

23:                                               ; preds = %18, %13, %2
  %24 = load ptr, ptr %8, align 8
  store ptr %24, ptr %3, align 8
  store i32 24, ptr %4, align 4
  %25 = load ptr, ptr %3, align 8
  %26 = icmp ne ptr %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = load i32, ptr %4, align 4
  %29 = load ptr, ptr %3, align 8
  %30 = getelementptr inbounds %struct.mz_zip_archive, ptr %29, i32 0, i32 5
  store i32 %28, ptr %30, align 4
  br label %31

31:                                               ; preds = %23, %27
  store i32 0, ptr %7, align 4
  br label %123

32:                                               ; preds = %18
  %33 = load ptr, ptr %8, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %33, i32 0, i32 7
  %35 = load ptr, ptr %34, align 8
  %36 = icmp ne ptr %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = load ptr, ptr %8, align 8
  %39 = getelementptr inbounds %struct.mz_zip_archive, ptr %38, i32 0, i32 7
  store ptr @miniz_def_alloc_func, ptr %39, align 8
  br label %40

40:                                               ; preds = %37, %32
  %41 = load ptr, ptr %8, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive, ptr %41, i32 0, i32 8
  %43 = load ptr, ptr %42, align 8
  %44 = icmp ne ptr %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %40
  %46 = load ptr, ptr %8, align 8
  %47 = getelementptr inbounds %struct.mz_zip_archive, ptr %46, i32 0, i32 8
  store ptr @miniz_def_free_func, ptr %47, align 8
  br label %48

48:                                               ; preds = %45, %40
  %49 = load ptr, ptr %8, align 8
  %50 = getelementptr inbounds %struct.mz_zip_archive, ptr %49, i32 0, i32 9
  %51 = load ptr, ptr %50, align 8
  %52 = icmp ne ptr %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = load ptr, ptr %8, align 8
  %55 = getelementptr inbounds %struct.mz_zip_archive, ptr %54, i32 0, i32 9
  store ptr @miniz_def_realloc_func, ptr %55, align 8
  br label %56

56:                                               ; preds = %53, %48
  %57 = load ptr, ptr %8, align 8
  %58 = getelementptr inbounds %struct.mz_zip_archive, ptr %57, i32 0, i32 0
  store i64 0, ptr %58, align 8
  %59 = load ptr, ptr %8, align 8
  %60 = getelementptr inbounds %struct.mz_zip_archive, ptr %59, i32 0, i32 1
  store i64 0, ptr %60, align 8
  %61 = load ptr, ptr %8, align 8
  %62 = getelementptr inbounds %struct.mz_zip_archive, ptr %61, i32 0, i32 2
  store i32 0, ptr %62, align 8
  %63 = load ptr, ptr %8, align 8
  %64 = getelementptr inbounds %struct.mz_zip_archive, ptr %63, i32 0, i32 5
  store i32 0, ptr %64, align 4
  %65 = load ptr, ptr %8, align 8
  %66 = getelementptr inbounds %struct.mz_zip_archive, ptr %65, i32 0, i32 7
  %67 = load ptr, ptr %66, align 8
  %68 = load ptr, ptr %8, align 8
  %69 = getelementptr inbounds %struct.mz_zip_archive, ptr %68, i32 0, i32 10
  %70 = load ptr, ptr %69, align 8
  %71 = call ptr %67(ptr noundef %70, i64 noundef 1, i64 noundef 152)
  %72 = load ptr, ptr %8, align 8
  %73 = getelementptr inbounds %struct.mz_zip_archive, ptr %72, i32 0, i32 15
  store ptr %71, ptr %73, align 8
  %74 = icmp eq ptr null, %71
  br i1 %74, label %75, label %84

75:                                               ; preds = %56
  %76 = load ptr, ptr %8, align 8
  store ptr %76, ptr %5, align 8
  store i32 16, ptr %6, align 4
  %77 = load ptr, ptr %5, align 8
  %78 = icmp ne ptr %77, null
  br i1 %78, label %79, label %83

79:                                               ; preds = %75
  %80 = load i32, ptr %6, align 4
  %81 = load ptr, ptr %5, align 8
  %82 = getelementptr inbounds %struct.mz_zip_archive, ptr %81, i32 0, i32 5
  store i32 %80, ptr %82, align 4
  br label %83

83:                                               ; preds = %75, %79
  store i32 0, ptr %7, align 4
  br label %123

84:                                               ; preds = %56
  %85 = load ptr, ptr %8, align 8
  %86 = getelementptr inbounds %struct.mz_zip_archive, ptr %85, i32 0, i32 15
  %87 = load ptr, ptr %86, align 8
  %88 = load ptr, ptr %8, align 8
  %89 = getelementptr inbounds %struct.mz_zip_archive, ptr %88, i32 0, i32 15
  %90 = load ptr, ptr %89, align 8
  %91 = call i64 @llvm.objectsize.i64.p0(ptr %90, i1 false, i1 true, i1 false)
  %92 = call ptr @__memset_chk(ptr noundef %87, i32 noundef 0, i64 noundef 152, i64 noundef %91) #11
  %93 = load ptr, ptr %8, align 8
  %94 = getelementptr inbounds %struct.mz_zip_archive, ptr %93, i32 0, i32 15
  %95 = load ptr, ptr %94, align 8
  %96 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %95, i32 0, i32 0
  %97 = getelementptr inbounds %struct.mz_zip_array, ptr %96, i32 0, i32 3
  store i32 1, ptr %97, align 8
  %98 = load ptr, ptr %8, align 8
  %99 = getelementptr inbounds %struct.mz_zip_archive, ptr %98, i32 0, i32 15
  %100 = load ptr, ptr %99, align 8
  %101 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %100, i32 0, i32 1
  %102 = getelementptr inbounds %struct.mz_zip_array, ptr %101, i32 0, i32 3
  store i32 4, ptr %102, align 8
  %103 = load ptr, ptr %8, align 8
  %104 = getelementptr inbounds %struct.mz_zip_archive, ptr %103, i32 0, i32 15
  %105 = load ptr, ptr %104, align 8
  %106 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %105, i32 0, i32 2
  %107 = getelementptr inbounds %struct.mz_zip_array, ptr %106, i32 0, i32 3
  store i32 4, ptr %107, align 8
  %108 = load i32, ptr %9, align 4
  %109 = load ptr, ptr %8, align 8
  %110 = getelementptr inbounds %struct.mz_zip_archive, ptr %109, i32 0, i32 15
  %111 = load ptr, ptr %110, align 8
  %112 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %111, i32 0, i32 3
  store i32 %108, ptr %112, align 8
  %113 = load ptr, ptr %8, align 8
  %114 = getelementptr inbounds %struct.mz_zip_archive, ptr %113, i32 0, i32 15
  %115 = load ptr, ptr %114, align 8
  %116 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %115, i32 0, i32 4
  store i32 0, ptr %116, align 4
  %117 = load ptr, ptr %8, align 8
  %118 = getelementptr inbounds %struct.mz_zip_archive, ptr %117, i32 0, i32 15
  %119 = load ptr, ptr %118, align 8
  %120 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %119, i32 0, i32 5
  store i32 0, ptr %120, align 8
  %121 = load ptr, ptr %8, align 8
  %122 = getelementptr inbounds %struct.mz_zip_archive, ptr %121, i32 0, i32 3
  store i32 1, ptr %122, align 4
  store i32 1, ptr %7, align 4
  br label %123

123:                                              ; preds = %84, %83, %31
  %124 = load i32, ptr %7, align 4
  ret i32 %124
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_reader_read_central_dir(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca ptr, align 8
  %19 = alloca i32, align 4
  %20 = alloca ptr, align 8
  %21 = alloca i32, align 4
  %22 = alloca ptr, align 8
  %23 = alloca i32, align 4
  %24 = alloca ptr, align 8
  %25 = alloca i32, align 4
  %26 = alloca ptr, align 8
  %27 = alloca i32, align 4
  %28 = alloca ptr, align 8
  %29 = alloca i32, align 4
  %30 = alloca ptr, align 8
  %31 = alloca i32, align 4
  %32 = alloca ptr, align 8
  %33 = alloca i32, align 4
  %34 = alloca ptr, align 8
  %35 = alloca i32, align 4
  %36 = alloca ptr, align 8
  %37 = alloca i32, align 4
  %38 = alloca ptr, align 8
  %39 = alloca i32, align 4
  %40 = alloca ptr, align 8
  %41 = alloca i32, align 4
  %42 = alloca ptr, align 8
  %43 = alloca i32, align 4
  %44 = alloca ptr, align 8
  %45 = alloca i32, align 4
  %46 = alloca ptr, align 8
  %47 = alloca i32, align 4
  %48 = alloca ptr, align 8
  %49 = alloca i32, align 4
  %50 = alloca ptr, align 8
  %51 = alloca i32, align 4
  %52 = alloca ptr, align 8
  %53 = alloca i32, align 4
  %54 = alloca ptr, align 8
  %55 = alloca i32, align 4
  %56 = alloca ptr, align 8
  %57 = alloca i32, align 4
  %58 = alloca ptr, align 8
  %59 = alloca i32, align 4
  %60 = alloca ptr, align 8
  %61 = alloca i32, align 4
  %62 = alloca ptr, align 8
  %63 = alloca i32, align 4
  %64 = alloca ptr, align 8
  %65 = alloca i32, align 4
  %66 = alloca ptr, align 8
  %67 = alloca i32, align 4
  %68 = alloca ptr, align 8
  %69 = alloca i32, align 4
  %70 = alloca ptr, align 8
  %71 = alloca i32, align 4
  %72 = alloca i32, align 4
  %73 = alloca ptr, align 8
  %74 = alloca i32, align 4
  %75 = alloca i32, align 4
  %76 = alloca i32, align 4
  %77 = alloca i32, align 4
  %78 = alloca i32, align 4
  %79 = alloca i64, align 8
  %80 = alloca i64, align 8
  %81 = alloca ptr, align 8
  %82 = alloca [1024 x i32], align 16
  %83 = alloca ptr, align 8
  %84 = alloca i32, align 4
  %85 = alloca [5 x i32], align 16
  %86 = alloca ptr, align 8
  %87 = alloca [14 x i32], align 16
  %88 = alloca ptr, align 8
  %89 = alloca i64, align 8
  %90 = alloca i32, align 4
  %91 = alloca i64, align 8
  %92 = alloca i64, align 8
  %93 = alloca i64, align 8
  %94 = alloca i64, align 8
  %95 = alloca i32, align 4
  %96 = alloca i32, align 4
  %97 = alloca i32, align 4
  %98 = alloca i32, align 4
  %99 = alloca i32, align 4
  %100 = alloca i32, align 4
  %101 = alloca i32, align 4
  %102 = alloca i64, align 8
  %103 = alloca i64, align 8
  %104 = alloca i64, align 8
  %105 = alloca i32, align 4
  %106 = alloca ptr, align 8
  %107 = alloca ptr, align 8
  %108 = alloca i32, align 4
  %109 = alloca i32, align 4
  store ptr %0, ptr %73, align 8
  store i32 %1, ptr %74, align 4
  store i32 0, ptr %75, align 4
  store i32 0, ptr %76, align 4
  store i32 0, ptr %77, align 4
  store i32 0, ptr %78, align 4
  store i64 0, ptr %79, align 8
  store i64 0, ptr %80, align 8
  %110 = getelementptr inbounds [1024 x i32], ptr %82, i64 0, i64 0
  store ptr %110, ptr %83, align 8
  %111 = load i32, ptr %74, align 4
  %112 = and i32 %111, 2048
  %113 = icmp eq i32 %112, 0
  %114 = zext i1 %113 to i32
  store i32 %114, ptr %84, align 4
  %115 = getelementptr inbounds [5 x i32], ptr %85, i64 0, i64 0
  store ptr %115, ptr %86, align 8
  %116 = getelementptr inbounds [14 x i32], ptr %87, i64 0, i64 0
  store ptr %116, ptr %88, align 8
  store i64 0, ptr %89, align 8
  %117 = load ptr, ptr %73, align 8
  %118 = getelementptr inbounds %struct.mz_zip_archive, ptr %117, i32 0, i32 0
  %119 = load i64, ptr %118, align 8
  %120 = icmp ult i64 %119, 22
  br i1 %120, label %121, label %130

121:                                              ; preds = %2
  %122 = load ptr, ptr %73, align 8
  store ptr %122, ptr %18, align 8
  store i32 8, ptr %19, align 4
  %123 = load ptr, ptr %18, align 8
  %124 = icmp ne ptr %123, null
  br i1 %124, label %125, label %129

125:                                              ; preds = %121
  %126 = load i32, ptr %19, align 4
  %127 = load ptr, ptr %18, align 8
  %128 = getelementptr inbounds %struct.mz_zip_archive, ptr %127, i32 0, i32 5
  store i32 %126, ptr %128, align 4
  br label %129

129:                                              ; preds = %121, %125
  store i32 0, ptr %72, align 4
  br label %1746

130:                                              ; preds = %2
  %131 = load ptr, ptr %73, align 8
  %132 = call i32 @mz_zip_reader_locate_header_sig(ptr noundef %131, i32 noundef 101010256, i32 noundef 22, ptr noundef %80)
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %143, label %134

134:                                              ; preds = %130
  %135 = load ptr, ptr %73, align 8
  store ptr %135, ptr %20, align 8
  store i32 7, ptr %21, align 4
  %136 = load ptr, ptr %20, align 8
  %137 = icmp ne ptr %136, null
  br i1 %137, label %138, label %142

138:                                              ; preds = %134
  %139 = load i32, ptr %21, align 4
  %140 = load ptr, ptr %20, align 8
  %141 = getelementptr inbounds %struct.mz_zip_archive, ptr %140, i32 0, i32 5
  store i32 %139, ptr %141, align 4
  br label %142

142:                                              ; preds = %134, %138
  store i32 0, ptr %72, align 4
  br label %1746

143:                                              ; preds = %130
  %144 = load ptr, ptr %73, align 8
  %145 = getelementptr inbounds %struct.mz_zip_archive, ptr %144, i32 0, i32 11
  %146 = load ptr, ptr %145, align 8
  %147 = load ptr, ptr %73, align 8
  %148 = getelementptr inbounds %struct.mz_zip_archive, ptr %147, i32 0, i32 14
  %149 = load ptr, ptr %148, align 8
  %150 = load i64, ptr %80, align 8
  %151 = load ptr, ptr %83, align 8
  %152 = call i64 %146(ptr noundef %149, i64 noundef %150, ptr noundef %151, i64 noundef 22)
  %153 = icmp ne i64 %152, 22
  br i1 %153, label %154, label %163

154:                                              ; preds = %143
  %155 = load ptr, ptr %73, align 8
  store ptr %155, ptr %22, align 8
  store i32 20, ptr %23, align 4
  %156 = load ptr, ptr %22, align 8
  %157 = icmp ne ptr %156, null
  br i1 %157, label %158, label %162

158:                                              ; preds = %154
  %159 = load i32, ptr %23, align 4
  %160 = load ptr, ptr %22, align 8
  %161 = getelementptr inbounds %struct.mz_zip_archive, ptr %160, i32 0, i32 5
  store i32 %159, ptr %161, align 4
  br label %162

162:                                              ; preds = %154, %158
  store i32 0, ptr %72, align 4
  br label %1746

163:                                              ; preds = %143
  %164 = load ptr, ptr %83, align 8
  %165 = getelementptr inbounds i8, ptr %164, i64 0
  %166 = getelementptr inbounds i8, ptr %165, i64 0
  %167 = load i8, ptr %166, align 1
  %168 = zext i8 %167 to i32
  %169 = load ptr, ptr %83, align 8
  %170 = getelementptr inbounds i8, ptr %169, i64 0
  %171 = getelementptr inbounds i8, ptr %170, i64 1
  %172 = load i8, ptr %171, align 1
  %173 = zext i8 %172 to i32
  %174 = shl i32 %173, 8
  %175 = or i32 %168, %174
  %176 = load ptr, ptr %83, align 8
  %177 = getelementptr inbounds i8, ptr %176, i64 0
  %178 = getelementptr inbounds i8, ptr %177, i64 2
  %179 = load i8, ptr %178, align 1
  %180 = zext i8 %179 to i32
  %181 = shl i32 %180, 16
  %182 = or i32 %175, %181
  %183 = load ptr, ptr %83, align 8
  %184 = getelementptr inbounds i8, ptr %183, i64 0
  %185 = getelementptr inbounds i8, ptr %184, i64 3
  %186 = load i8, ptr %185, align 1
  %187 = zext i8 %186 to i32
  %188 = shl i32 %187, 24
  %189 = or i32 %182, %188
  %190 = icmp ne i32 %189, 101010256
  br i1 %190, label %191, label %200

191:                                              ; preds = %163
  %192 = load ptr, ptr %73, align 8
  store ptr %192, ptr %24, align 8
  store i32 8, ptr %25, align 4
  %193 = load ptr, ptr %24, align 8
  %194 = icmp ne ptr %193, null
  br i1 %194, label %195, label %199

195:                                              ; preds = %191
  %196 = load i32, ptr %25, align 4
  %197 = load ptr, ptr %24, align 8
  %198 = getelementptr inbounds %struct.mz_zip_archive, ptr %197, i32 0, i32 5
  store i32 %196, ptr %198, align 4
  br label %199

199:                                              ; preds = %191, %195
  store i32 0, ptr %72, align 4
  br label %1746

200:                                              ; preds = %163
  %201 = load i64, ptr %80, align 8
  %202 = icmp sge i64 %201, 76
  br i1 %202, label %203, label %367

203:                                              ; preds = %200
  %204 = load ptr, ptr %73, align 8
  %205 = getelementptr inbounds %struct.mz_zip_archive, ptr %204, i32 0, i32 11
  %206 = load ptr, ptr %205, align 8
  %207 = load ptr, ptr %73, align 8
  %208 = getelementptr inbounds %struct.mz_zip_archive, ptr %207, i32 0, i32 14
  %209 = load ptr, ptr %208, align 8
  %210 = load i64, ptr %80, align 8
  %211 = sub nsw i64 %210, 20
  %212 = load ptr, ptr %86, align 8
  %213 = call i64 %206(ptr noundef %209, i64 noundef %211, ptr noundef %212, i64 noundef 20)
  %214 = icmp eq i64 %213, 20
  br i1 %214, label %215, label %366

215:                                              ; preds = %203
  %216 = load ptr, ptr %86, align 8
  %217 = getelementptr inbounds i8, ptr %216, i64 0
  %218 = getelementptr inbounds i8, ptr %217, i64 0
  %219 = load i8, ptr %218, align 1
  %220 = zext i8 %219 to i32
  %221 = load ptr, ptr %86, align 8
  %222 = getelementptr inbounds i8, ptr %221, i64 0
  %223 = getelementptr inbounds i8, ptr %222, i64 1
  %224 = load i8, ptr %223, align 1
  %225 = zext i8 %224 to i32
  %226 = shl i32 %225, 8
  %227 = or i32 %220, %226
  %228 = load ptr, ptr %86, align 8
  %229 = getelementptr inbounds i8, ptr %228, i64 0
  %230 = getelementptr inbounds i8, ptr %229, i64 2
  %231 = load i8, ptr %230, align 1
  %232 = zext i8 %231 to i32
  %233 = shl i32 %232, 16
  %234 = or i32 %227, %233
  %235 = load ptr, ptr %86, align 8
  %236 = getelementptr inbounds i8, ptr %235, i64 0
  %237 = getelementptr inbounds i8, ptr %236, i64 3
  %238 = load i8, ptr %237, align 1
  %239 = zext i8 %238 to i32
  %240 = shl i32 %239, 24
  %241 = or i32 %234, %240
  %242 = icmp eq i32 %241, 117853008
  br i1 %242, label %243, label %365

243:                                              ; preds = %215
  %244 = load ptr, ptr %86, align 8
  %245 = getelementptr inbounds i8, ptr %244, i64 8
  %246 = getelementptr inbounds i8, ptr %245, i64 0
  %247 = load i8, ptr %246, align 1
  %248 = zext i8 %247 to i32
  %249 = load ptr, ptr %86, align 8
  %250 = getelementptr inbounds i8, ptr %249, i64 8
  %251 = getelementptr inbounds i8, ptr %250, i64 1
  %252 = load i8, ptr %251, align 1
  %253 = zext i8 %252 to i32
  %254 = shl i32 %253, 8
  %255 = or i32 %248, %254
  %256 = load ptr, ptr %86, align 8
  %257 = getelementptr inbounds i8, ptr %256, i64 8
  %258 = getelementptr inbounds i8, ptr %257, i64 2
  %259 = load i8, ptr %258, align 1
  %260 = zext i8 %259 to i32
  %261 = shl i32 %260, 16
  %262 = or i32 %255, %261
  %263 = load ptr, ptr %86, align 8
  %264 = getelementptr inbounds i8, ptr %263, i64 8
  %265 = getelementptr inbounds i8, ptr %264, i64 3
  %266 = load i8, ptr %265, align 1
  %267 = zext i8 %266 to i32
  %268 = shl i32 %267, 24
  %269 = or i32 %262, %268
  %270 = zext i32 %269 to i64
  %271 = load ptr, ptr %86, align 8
  %272 = getelementptr inbounds i8, ptr %271, i64 8
  %273 = getelementptr inbounds i8, ptr %272, i64 4
  %274 = getelementptr inbounds i8, ptr %273, i64 0
  %275 = load i8, ptr %274, align 1
  %276 = zext i8 %275 to i32
  %277 = load ptr, ptr %86, align 8
  %278 = getelementptr inbounds i8, ptr %277, i64 8
  %279 = getelementptr inbounds i8, ptr %278, i64 4
  %280 = getelementptr inbounds i8, ptr %279, i64 1
  %281 = load i8, ptr %280, align 1
  %282 = zext i8 %281 to i32
  %283 = shl i32 %282, 8
  %284 = or i32 %276, %283
  %285 = load ptr, ptr %86, align 8
  %286 = getelementptr inbounds i8, ptr %285, i64 8
  %287 = getelementptr inbounds i8, ptr %286, i64 4
  %288 = getelementptr inbounds i8, ptr %287, i64 2
  %289 = load i8, ptr %288, align 1
  %290 = zext i8 %289 to i32
  %291 = shl i32 %290, 16
  %292 = or i32 %284, %291
  %293 = load ptr, ptr %86, align 8
  %294 = getelementptr inbounds i8, ptr %293, i64 8
  %295 = getelementptr inbounds i8, ptr %294, i64 4
  %296 = getelementptr inbounds i8, ptr %295, i64 3
  %297 = load i8, ptr %296, align 1
  %298 = zext i8 %297 to i32
  %299 = shl i32 %298, 24
  %300 = or i32 %292, %299
  %301 = zext i32 %300 to i64
  %302 = shl i64 %301, 32
  %303 = or i64 %270, %302
  store i64 %303, ptr %89, align 8
  %304 = load i64, ptr %89, align 8
  %305 = load ptr, ptr %73, align 8
  %306 = getelementptr inbounds %struct.mz_zip_archive, ptr %305, i32 0, i32 0
  %307 = load i64, ptr %306, align 8
  %308 = sub i64 %307, 56
  %309 = icmp ugt i64 %304, %308
  br i1 %309, label %310, label %319

310:                                              ; preds = %243
  %311 = load ptr, ptr %73, align 8
  store ptr %311, ptr %26, align 8
  store i32 8, ptr %27, align 4
  %312 = load ptr, ptr %26, align 8
  %313 = icmp ne ptr %312, null
  br i1 %313, label %314, label %318

314:                                              ; preds = %310
  %315 = load i32, ptr %27, align 4
  %316 = load ptr, ptr %26, align 8
  %317 = getelementptr inbounds %struct.mz_zip_archive, ptr %316, i32 0, i32 5
  store i32 %315, ptr %317, align 4
  br label %318

318:                                              ; preds = %310, %314
  store i32 0, ptr %72, align 4
  br label %1746

319:                                              ; preds = %243
  %320 = load ptr, ptr %73, align 8
  %321 = getelementptr inbounds %struct.mz_zip_archive, ptr %320, i32 0, i32 11
  %322 = load ptr, ptr %321, align 8
  %323 = load ptr, ptr %73, align 8
  %324 = getelementptr inbounds %struct.mz_zip_archive, ptr %323, i32 0, i32 14
  %325 = load ptr, ptr %324, align 8
  %326 = load i64, ptr %89, align 8
  %327 = load ptr, ptr %88, align 8
  %328 = call i64 %322(ptr noundef %325, i64 noundef %326, ptr noundef %327, i64 noundef 56)
  %329 = icmp eq i64 %328, 56
  br i1 %329, label %330, label %364

330:                                              ; preds = %319
  %331 = load ptr, ptr %88, align 8
  %332 = getelementptr inbounds i8, ptr %331, i64 0
  %333 = getelementptr inbounds i8, ptr %332, i64 0
  %334 = load i8, ptr %333, align 1
  %335 = zext i8 %334 to i32
  %336 = load ptr, ptr %88, align 8
  %337 = getelementptr inbounds i8, ptr %336, i64 0
  %338 = getelementptr inbounds i8, ptr %337, i64 1
  %339 = load i8, ptr %338, align 1
  %340 = zext i8 %339 to i32
  %341 = shl i32 %340, 8
  %342 = or i32 %335, %341
  %343 = load ptr, ptr %88, align 8
  %344 = getelementptr inbounds i8, ptr %343, i64 0
  %345 = getelementptr inbounds i8, ptr %344, i64 2
  %346 = load i8, ptr %345, align 1
  %347 = zext i8 %346 to i32
  %348 = shl i32 %347, 16
  %349 = or i32 %342, %348
  %350 = load ptr, ptr %88, align 8
  %351 = getelementptr inbounds i8, ptr %350, i64 0
  %352 = getelementptr inbounds i8, ptr %351, i64 3
  %353 = load i8, ptr %352, align 1
  %354 = zext i8 %353 to i32
  %355 = shl i32 %354, 24
  %356 = or i32 %349, %355
  %357 = icmp eq i32 %356, 101075792
  br i1 %357, label %358, label %363

358:                                              ; preds = %330
  %359 = load ptr, ptr %73, align 8
  %360 = getelementptr inbounds %struct.mz_zip_archive, ptr %359, i32 0, i32 15
  %361 = load ptr, ptr %360, align 8
  %362 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %361, i32 0, i32 4
  store i32 1, ptr %362, align 4
  br label %363

363:                                              ; preds = %358, %330
  br label %364

364:                                              ; preds = %363, %319
  br label %365

365:                                              ; preds = %364, %215
  br label %366

366:                                              ; preds = %365, %203
  br label %367

367:                                              ; preds = %366, %200
  %368 = load ptr, ptr %83, align 8
  %369 = getelementptr inbounds i8, ptr %368, i64 10
  %370 = getelementptr inbounds i8, ptr %369, i64 0
  %371 = load i8, ptr %370, align 1
  %372 = zext i8 %371 to i32
  %373 = load ptr, ptr %83, align 8
  %374 = getelementptr inbounds i8, ptr %373, i64 10
  %375 = getelementptr inbounds i8, ptr %374, i64 1
  %376 = load i8, ptr %375, align 1
  %377 = zext i8 %376 to i32
  %378 = shl i32 %377, 8
  %379 = or i32 %372, %378
  %380 = load ptr, ptr %73, align 8
  %381 = getelementptr inbounds %struct.mz_zip_archive, ptr %380, i32 0, i32 2
  store i32 %379, ptr %381, align 8
  %382 = load ptr, ptr %83, align 8
  %383 = getelementptr inbounds i8, ptr %382, i64 8
  %384 = getelementptr inbounds i8, ptr %383, i64 0
  %385 = load i8, ptr %384, align 1
  %386 = zext i8 %385 to i32
  %387 = load ptr, ptr %83, align 8
  %388 = getelementptr inbounds i8, ptr %387, i64 8
  %389 = getelementptr inbounds i8, ptr %388, i64 1
  %390 = load i8, ptr %389, align 1
  %391 = zext i8 %390 to i32
  %392 = shl i32 %391, 8
  %393 = or i32 %386, %392
  store i32 %393, ptr %76, align 4
  %394 = load ptr, ptr %83, align 8
  %395 = getelementptr inbounds i8, ptr %394, i64 4
  %396 = getelementptr inbounds i8, ptr %395, i64 0
  %397 = load i8, ptr %396, align 1
  %398 = zext i8 %397 to i32
  %399 = load ptr, ptr %83, align 8
  %400 = getelementptr inbounds i8, ptr %399, i64 4
  %401 = getelementptr inbounds i8, ptr %400, i64 1
  %402 = load i8, ptr %401, align 1
  %403 = zext i8 %402 to i32
  %404 = shl i32 %403, 8
  %405 = or i32 %398, %404
  store i32 %405, ptr %77, align 4
  %406 = load ptr, ptr %83, align 8
  %407 = getelementptr inbounds i8, ptr %406, i64 6
  %408 = getelementptr inbounds i8, ptr %407, i64 0
  %409 = load i8, ptr %408, align 1
  %410 = zext i8 %409 to i32
  %411 = load ptr, ptr %83, align 8
  %412 = getelementptr inbounds i8, ptr %411, i64 6
  %413 = getelementptr inbounds i8, ptr %412, i64 1
  %414 = load i8, ptr %413, align 1
  %415 = zext i8 %414 to i32
  %416 = shl i32 %415, 8
  %417 = or i32 %410, %416
  store i32 %417, ptr %78, align 4
  %418 = load ptr, ptr %83, align 8
  %419 = getelementptr inbounds i8, ptr %418, i64 12
  %420 = getelementptr inbounds i8, ptr %419, i64 0
  %421 = load i8, ptr %420, align 1
  %422 = zext i8 %421 to i32
  %423 = load ptr, ptr %83, align 8
  %424 = getelementptr inbounds i8, ptr %423, i64 12
  %425 = getelementptr inbounds i8, ptr %424, i64 1
  %426 = load i8, ptr %425, align 1
  %427 = zext i8 %426 to i32
  %428 = shl i32 %427, 8
  %429 = or i32 %422, %428
  %430 = load ptr, ptr %83, align 8
  %431 = getelementptr inbounds i8, ptr %430, i64 12
  %432 = getelementptr inbounds i8, ptr %431, i64 2
  %433 = load i8, ptr %432, align 1
  %434 = zext i8 %433 to i32
  %435 = shl i32 %434, 16
  %436 = or i32 %429, %435
  %437 = load ptr, ptr %83, align 8
  %438 = getelementptr inbounds i8, ptr %437, i64 12
  %439 = getelementptr inbounds i8, ptr %438, i64 3
  %440 = load i8, ptr %439, align 1
  %441 = zext i8 %440 to i32
  %442 = shl i32 %441, 24
  %443 = or i32 %436, %442
  store i32 %443, ptr %75, align 4
  %444 = load ptr, ptr %83, align 8
  %445 = getelementptr inbounds i8, ptr %444, i64 16
  %446 = getelementptr inbounds i8, ptr %445, i64 0
  %447 = load i8, ptr %446, align 1
  %448 = zext i8 %447 to i32
  %449 = load ptr, ptr %83, align 8
  %450 = getelementptr inbounds i8, ptr %449, i64 16
  %451 = getelementptr inbounds i8, ptr %450, i64 1
  %452 = load i8, ptr %451, align 1
  %453 = zext i8 %452 to i32
  %454 = shl i32 %453, 8
  %455 = or i32 %448, %454
  %456 = load ptr, ptr %83, align 8
  %457 = getelementptr inbounds i8, ptr %456, i64 16
  %458 = getelementptr inbounds i8, ptr %457, i64 2
  %459 = load i8, ptr %458, align 1
  %460 = zext i8 %459 to i32
  %461 = shl i32 %460, 16
  %462 = or i32 %455, %461
  %463 = load ptr, ptr %83, align 8
  %464 = getelementptr inbounds i8, ptr %463, i64 16
  %465 = getelementptr inbounds i8, ptr %464, i64 3
  %466 = load i8, ptr %465, align 1
  %467 = zext i8 %466 to i32
  %468 = shl i32 %467, 24
  %469 = or i32 %462, %468
  %470 = zext i32 %469 to i64
  store i64 %470, ptr %79, align 8
  %471 = load ptr, ptr %73, align 8
  %472 = getelementptr inbounds %struct.mz_zip_archive, ptr %471, i32 0, i32 15
  %473 = load ptr, ptr %472, align 8
  %474 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %473, i32 0, i32 4
  %475 = load i32, ptr %474, align 4
  %476 = icmp ne i32 %475, 0
  br i1 %476, label %477, label %924

477:                                              ; preds = %367
  %478 = load ptr, ptr %86, align 8
  %479 = getelementptr inbounds i8, ptr %478, i64 16
  %480 = getelementptr inbounds i8, ptr %479, i64 0
  %481 = load i8, ptr %480, align 1
  %482 = zext i8 %481 to i32
  %483 = load ptr, ptr %86, align 8
  %484 = getelementptr inbounds i8, ptr %483, i64 16
  %485 = getelementptr inbounds i8, ptr %484, i64 1
  %486 = load i8, ptr %485, align 1
  %487 = zext i8 %486 to i32
  %488 = shl i32 %487, 8
  %489 = or i32 %482, %488
  %490 = load ptr, ptr %86, align 8
  %491 = getelementptr inbounds i8, ptr %490, i64 16
  %492 = getelementptr inbounds i8, ptr %491, i64 2
  %493 = load i8, ptr %492, align 1
  %494 = zext i8 %493 to i32
  %495 = shl i32 %494, 16
  %496 = or i32 %489, %495
  %497 = load ptr, ptr %86, align 8
  %498 = getelementptr inbounds i8, ptr %497, i64 16
  %499 = getelementptr inbounds i8, ptr %498, i64 3
  %500 = load i8, ptr %499, align 1
  %501 = zext i8 %500 to i32
  %502 = shl i32 %501, 24
  %503 = or i32 %496, %502
  store i32 %503, ptr %90, align 4
  %504 = load ptr, ptr %88, align 8
  %505 = getelementptr inbounds i8, ptr %504, i64 32
  %506 = getelementptr inbounds i8, ptr %505, i64 0
  %507 = load i8, ptr %506, align 1
  %508 = zext i8 %507 to i32
  %509 = load ptr, ptr %88, align 8
  %510 = getelementptr inbounds i8, ptr %509, i64 32
  %511 = getelementptr inbounds i8, ptr %510, i64 1
  %512 = load i8, ptr %511, align 1
  %513 = zext i8 %512 to i32
  %514 = shl i32 %513, 8
  %515 = or i32 %508, %514
  %516 = load ptr, ptr %88, align 8
  %517 = getelementptr inbounds i8, ptr %516, i64 32
  %518 = getelementptr inbounds i8, ptr %517, i64 2
  %519 = load i8, ptr %518, align 1
  %520 = zext i8 %519 to i32
  %521 = shl i32 %520, 16
  %522 = or i32 %515, %521
  %523 = load ptr, ptr %88, align 8
  %524 = getelementptr inbounds i8, ptr %523, i64 32
  %525 = getelementptr inbounds i8, ptr %524, i64 3
  %526 = load i8, ptr %525, align 1
  %527 = zext i8 %526 to i32
  %528 = shl i32 %527, 24
  %529 = or i32 %522, %528
  %530 = zext i32 %529 to i64
  %531 = load ptr, ptr %88, align 8
  %532 = getelementptr inbounds i8, ptr %531, i64 32
  %533 = getelementptr inbounds i8, ptr %532, i64 4
  %534 = getelementptr inbounds i8, ptr %533, i64 0
  %535 = load i8, ptr %534, align 1
  %536 = zext i8 %535 to i32
  %537 = load ptr, ptr %88, align 8
  %538 = getelementptr inbounds i8, ptr %537, i64 32
  %539 = getelementptr inbounds i8, ptr %538, i64 4
  %540 = getelementptr inbounds i8, ptr %539, i64 1
  %541 = load i8, ptr %540, align 1
  %542 = zext i8 %541 to i32
  %543 = shl i32 %542, 8
  %544 = or i32 %536, %543
  %545 = load ptr, ptr %88, align 8
  %546 = getelementptr inbounds i8, ptr %545, i64 32
  %547 = getelementptr inbounds i8, ptr %546, i64 4
  %548 = getelementptr inbounds i8, ptr %547, i64 2
  %549 = load i8, ptr %548, align 1
  %550 = zext i8 %549 to i32
  %551 = shl i32 %550, 16
  %552 = or i32 %544, %551
  %553 = load ptr, ptr %88, align 8
  %554 = getelementptr inbounds i8, ptr %553, i64 32
  %555 = getelementptr inbounds i8, ptr %554, i64 4
  %556 = getelementptr inbounds i8, ptr %555, i64 3
  %557 = load i8, ptr %556, align 1
  %558 = zext i8 %557 to i32
  %559 = shl i32 %558, 24
  %560 = or i32 %552, %559
  %561 = zext i32 %560 to i64
  %562 = shl i64 %561, 32
  %563 = or i64 %530, %562
  store i64 %563, ptr %91, align 8
  %564 = load ptr, ptr %88, align 8
  %565 = getelementptr inbounds i8, ptr %564, i64 24
  %566 = getelementptr inbounds i8, ptr %565, i64 0
  %567 = load i8, ptr %566, align 1
  %568 = zext i8 %567 to i32
  %569 = load ptr, ptr %88, align 8
  %570 = getelementptr inbounds i8, ptr %569, i64 24
  %571 = getelementptr inbounds i8, ptr %570, i64 1
  %572 = load i8, ptr %571, align 1
  %573 = zext i8 %572 to i32
  %574 = shl i32 %573, 8
  %575 = or i32 %568, %574
  %576 = load ptr, ptr %88, align 8
  %577 = getelementptr inbounds i8, ptr %576, i64 24
  %578 = getelementptr inbounds i8, ptr %577, i64 2
  %579 = load i8, ptr %578, align 1
  %580 = zext i8 %579 to i32
  %581 = shl i32 %580, 16
  %582 = or i32 %575, %581
  %583 = load ptr, ptr %88, align 8
  %584 = getelementptr inbounds i8, ptr %583, i64 24
  %585 = getelementptr inbounds i8, ptr %584, i64 3
  %586 = load i8, ptr %585, align 1
  %587 = zext i8 %586 to i32
  %588 = shl i32 %587, 24
  %589 = or i32 %582, %588
  %590 = zext i32 %589 to i64
  %591 = load ptr, ptr %88, align 8
  %592 = getelementptr inbounds i8, ptr %591, i64 24
  %593 = getelementptr inbounds i8, ptr %592, i64 4
  %594 = getelementptr inbounds i8, ptr %593, i64 0
  %595 = load i8, ptr %594, align 1
  %596 = zext i8 %595 to i32
  %597 = load ptr, ptr %88, align 8
  %598 = getelementptr inbounds i8, ptr %597, i64 24
  %599 = getelementptr inbounds i8, ptr %598, i64 4
  %600 = getelementptr inbounds i8, ptr %599, i64 1
  %601 = load i8, ptr %600, align 1
  %602 = zext i8 %601 to i32
  %603 = shl i32 %602, 8
  %604 = or i32 %596, %603
  %605 = load ptr, ptr %88, align 8
  %606 = getelementptr inbounds i8, ptr %605, i64 24
  %607 = getelementptr inbounds i8, ptr %606, i64 4
  %608 = getelementptr inbounds i8, ptr %607, i64 2
  %609 = load i8, ptr %608, align 1
  %610 = zext i8 %609 to i32
  %611 = shl i32 %610, 16
  %612 = or i32 %604, %611
  %613 = load ptr, ptr %88, align 8
  %614 = getelementptr inbounds i8, ptr %613, i64 24
  %615 = getelementptr inbounds i8, ptr %614, i64 4
  %616 = getelementptr inbounds i8, ptr %615, i64 3
  %617 = load i8, ptr %616, align 1
  %618 = zext i8 %617 to i32
  %619 = shl i32 %618, 24
  %620 = or i32 %612, %619
  %621 = zext i32 %620 to i64
  %622 = shl i64 %621, 32
  %623 = or i64 %590, %622
  store i64 %623, ptr %92, align 8
  %624 = load ptr, ptr %88, align 8
  %625 = getelementptr inbounds i8, ptr %624, i64 4
  %626 = getelementptr inbounds i8, ptr %625, i64 0
  %627 = load i8, ptr %626, align 1
  %628 = zext i8 %627 to i32
  %629 = load ptr, ptr %88, align 8
  %630 = getelementptr inbounds i8, ptr %629, i64 4
  %631 = getelementptr inbounds i8, ptr %630, i64 1
  %632 = load i8, ptr %631, align 1
  %633 = zext i8 %632 to i32
  %634 = shl i32 %633, 8
  %635 = or i32 %628, %634
  %636 = load ptr, ptr %88, align 8
  %637 = getelementptr inbounds i8, ptr %636, i64 4
  %638 = getelementptr inbounds i8, ptr %637, i64 2
  %639 = load i8, ptr %638, align 1
  %640 = zext i8 %639 to i32
  %641 = shl i32 %640, 16
  %642 = or i32 %635, %641
  %643 = load ptr, ptr %88, align 8
  %644 = getelementptr inbounds i8, ptr %643, i64 4
  %645 = getelementptr inbounds i8, ptr %644, i64 3
  %646 = load i8, ptr %645, align 1
  %647 = zext i8 %646 to i32
  %648 = shl i32 %647, 24
  %649 = or i32 %642, %648
  %650 = zext i32 %649 to i64
  %651 = load ptr, ptr %88, align 8
  %652 = getelementptr inbounds i8, ptr %651, i64 4
  %653 = getelementptr inbounds i8, ptr %652, i64 4
  %654 = getelementptr inbounds i8, ptr %653, i64 0
  %655 = load i8, ptr %654, align 1
  %656 = zext i8 %655 to i32
  %657 = load ptr, ptr %88, align 8
  %658 = getelementptr inbounds i8, ptr %657, i64 4
  %659 = getelementptr inbounds i8, ptr %658, i64 4
  %660 = getelementptr inbounds i8, ptr %659, i64 1
  %661 = load i8, ptr %660, align 1
  %662 = zext i8 %661 to i32
  %663 = shl i32 %662, 8
  %664 = or i32 %656, %663
  %665 = load ptr, ptr %88, align 8
  %666 = getelementptr inbounds i8, ptr %665, i64 4
  %667 = getelementptr inbounds i8, ptr %666, i64 4
  %668 = getelementptr inbounds i8, ptr %667, i64 2
  %669 = load i8, ptr %668, align 1
  %670 = zext i8 %669 to i32
  %671 = shl i32 %670, 16
  %672 = or i32 %664, %671
  %673 = load ptr, ptr %88, align 8
  %674 = getelementptr inbounds i8, ptr %673, i64 4
  %675 = getelementptr inbounds i8, ptr %674, i64 4
  %676 = getelementptr inbounds i8, ptr %675, i64 3
  %677 = load i8, ptr %676, align 1
  %678 = zext i8 %677 to i32
  %679 = shl i32 %678, 24
  %680 = or i32 %672, %679
  %681 = zext i32 %680 to i64
  %682 = shl i64 %681, 32
  %683 = or i64 %650, %682
  store i64 %683, ptr %93, align 8
  %684 = load ptr, ptr %88, align 8
  %685 = getelementptr inbounds i8, ptr %684, i64 40
  %686 = getelementptr inbounds i8, ptr %685, i64 0
  %687 = load i8, ptr %686, align 1
  %688 = zext i8 %687 to i32
  %689 = load ptr, ptr %88, align 8
  %690 = getelementptr inbounds i8, ptr %689, i64 40
  %691 = getelementptr inbounds i8, ptr %690, i64 1
  %692 = load i8, ptr %691, align 1
  %693 = zext i8 %692 to i32
  %694 = shl i32 %693, 8
  %695 = or i32 %688, %694
  %696 = load ptr, ptr %88, align 8
  %697 = getelementptr inbounds i8, ptr %696, i64 40
  %698 = getelementptr inbounds i8, ptr %697, i64 2
  %699 = load i8, ptr %698, align 1
  %700 = zext i8 %699 to i32
  %701 = shl i32 %700, 16
  %702 = or i32 %695, %701
  %703 = load ptr, ptr %88, align 8
  %704 = getelementptr inbounds i8, ptr %703, i64 40
  %705 = getelementptr inbounds i8, ptr %704, i64 3
  %706 = load i8, ptr %705, align 1
  %707 = zext i8 %706 to i32
  %708 = shl i32 %707, 24
  %709 = or i32 %702, %708
  %710 = zext i32 %709 to i64
  %711 = load ptr, ptr %88, align 8
  %712 = getelementptr inbounds i8, ptr %711, i64 40
  %713 = getelementptr inbounds i8, ptr %712, i64 4
  %714 = getelementptr inbounds i8, ptr %713, i64 0
  %715 = load i8, ptr %714, align 1
  %716 = zext i8 %715 to i32
  %717 = load ptr, ptr %88, align 8
  %718 = getelementptr inbounds i8, ptr %717, i64 40
  %719 = getelementptr inbounds i8, ptr %718, i64 4
  %720 = getelementptr inbounds i8, ptr %719, i64 1
  %721 = load i8, ptr %720, align 1
  %722 = zext i8 %721 to i32
  %723 = shl i32 %722, 8
  %724 = or i32 %716, %723
  %725 = load ptr, ptr %88, align 8
  %726 = getelementptr inbounds i8, ptr %725, i64 40
  %727 = getelementptr inbounds i8, ptr %726, i64 4
  %728 = getelementptr inbounds i8, ptr %727, i64 2
  %729 = load i8, ptr %728, align 1
  %730 = zext i8 %729 to i32
  %731 = shl i32 %730, 16
  %732 = or i32 %724, %731
  %733 = load ptr, ptr %88, align 8
  %734 = getelementptr inbounds i8, ptr %733, i64 40
  %735 = getelementptr inbounds i8, ptr %734, i64 4
  %736 = getelementptr inbounds i8, ptr %735, i64 3
  %737 = load i8, ptr %736, align 1
  %738 = zext i8 %737 to i32
  %739 = shl i32 %738, 24
  %740 = or i32 %732, %739
  %741 = zext i32 %740 to i64
  %742 = shl i64 %741, 32
  %743 = or i64 %710, %742
  store i64 %743, ptr %94, align 8
  %744 = load i64, ptr %93, align 8
  %745 = icmp ult i64 %744, 44
  br i1 %745, label %746, label %755

746:                                              ; preds = %477
  %747 = load ptr, ptr %73, align 8
  store ptr %747, ptr %28, align 8
  store i32 9, ptr %29, align 4
  %748 = load ptr, ptr %28, align 8
  %749 = icmp ne ptr %748, null
  br i1 %749, label %750, label %754

750:                                              ; preds = %746
  %751 = load i32, ptr %29, align 4
  %752 = load ptr, ptr %28, align 8
  %753 = getelementptr inbounds %struct.mz_zip_archive, ptr %752, i32 0, i32 5
  store i32 %751, ptr %753, align 4
  br label %754

754:                                              ; preds = %746, %750
  store i32 0, ptr %72, align 4
  br label %1746

755:                                              ; preds = %477
  %756 = load i32, ptr %90, align 4
  %757 = icmp ne i32 %756, 1
  br i1 %757, label %758, label %767

758:                                              ; preds = %755
  %759 = load ptr, ptr %73, align 8
  store ptr %759, ptr %30, align 8
  store i32 10, ptr %31, align 4
  %760 = load ptr, ptr %30, align 8
  %761 = icmp ne ptr %760, null
  br i1 %761, label %762, label %766

762:                                              ; preds = %758
  %763 = load i32, ptr %31, align 4
  %764 = load ptr, ptr %30, align 8
  %765 = getelementptr inbounds %struct.mz_zip_archive, ptr %764, i32 0, i32 5
  store i32 %763, ptr %765, align 4
  br label %766

766:                                              ; preds = %758, %762
  store i32 0, ptr %72, align 4
  br label %1746

767:                                              ; preds = %755
  %768 = load i64, ptr %91, align 8
  %769 = icmp ugt i64 %768, 4294967295
  br i1 %769, label %770, label %779

770:                                              ; preds = %767
  %771 = load ptr, ptr %73, align 8
  store ptr %771, ptr %32, align 8
  store i32 2, ptr %33, align 4
  %772 = load ptr, ptr %32, align 8
  %773 = icmp ne ptr %772, null
  br i1 %773, label %774, label %778

774:                                              ; preds = %770
  %775 = load i32, ptr %33, align 4
  %776 = load ptr, ptr %32, align 8
  %777 = getelementptr inbounds %struct.mz_zip_archive, ptr %776, i32 0, i32 5
  store i32 %775, ptr %777, align 4
  br label %778

778:                                              ; preds = %770, %774
  store i32 0, ptr %72, align 4
  br label %1746

779:                                              ; preds = %767
  %780 = load i64, ptr %91, align 8
  %781 = trunc i64 %780 to i32
  %782 = load ptr, ptr %73, align 8
  %783 = getelementptr inbounds %struct.mz_zip_archive, ptr %782, i32 0, i32 2
  store i32 %781, ptr %783, align 8
  %784 = load i64, ptr %92, align 8
  %785 = icmp ugt i64 %784, 4294967295
  br i1 %785, label %786, label %795

786:                                              ; preds = %779
  %787 = load ptr, ptr %73, align 8
  store ptr %787, ptr %34, align 8
  store i32 2, ptr %35, align 4
  %788 = load ptr, ptr %34, align 8
  %789 = icmp ne ptr %788, null
  br i1 %789, label %790, label %794

790:                                              ; preds = %786
  %791 = load i32, ptr %35, align 4
  %792 = load ptr, ptr %34, align 8
  %793 = getelementptr inbounds %struct.mz_zip_archive, ptr %792, i32 0, i32 5
  store i32 %791, ptr %793, align 4
  br label %794

794:                                              ; preds = %786, %790
  store i32 0, ptr %72, align 4
  br label %1746

795:                                              ; preds = %779
  %796 = load i64, ptr %92, align 8
  %797 = trunc i64 %796 to i32
  store i32 %797, ptr %76, align 4
  %798 = load i64, ptr %94, align 8
  %799 = icmp ugt i64 %798, 4294967295
  br i1 %799, label %800, label %809

800:                                              ; preds = %795
  %801 = load ptr, ptr %73, align 8
  store ptr %801, ptr %36, align 8
  store i32 15, ptr %37, align 4
  %802 = load ptr, ptr %36, align 8
  %803 = icmp ne ptr %802, null
  br i1 %803, label %804, label %808

804:                                              ; preds = %800
  %805 = load i32, ptr %37, align 4
  %806 = load ptr, ptr %36, align 8
  %807 = getelementptr inbounds %struct.mz_zip_archive, ptr %806, i32 0, i32 5
  store i32 %805, ptr %807, align 4
  br label %808

808:                                              ; preds = %800, %804
  store i32 0, ptr %72, align 4
  br label %1746

809:                                              ; preds = %795
  %810 = load i64, ptr %94, align 8
  %811 = trunc i64 %810 to i32
  store i32 %811, ptr %75, align 4
  %812 = load ptr, ptr %88, align 8
  %813 = getelementptr inbounds i8, ptr %812, i64 16
  %814 = getelementptr inbounds i8, ptr %813, i64 0
  %815 = load i8, ptr %814, align 1
  %816 = zext i8 %815 to i32
  %817 = load ptr, ptr %88, align 8
  %818 = getelementptr inbounds i8, ptr %817, i64 16
  %819 = getelementptr inbounds i8, ptr %818, i64 1
  %820 = load i8, ptr %819, align 1
  %821 = zext i8 %820 to i32
  %822 = shl i32 %821, 8
  %823 = or i32 %816, %822
  %824 = load ptr, ptr %88, align 8
  %825 = getelementptr inbounds i8, ptr %824, i64 16
  %826 = getelementptr inbounds i8, ptr %825, i64 2
  %827 = load i8, ptr %826, align 1
  %828 = zext i8 %827 to i32
  %829 = shl i32 %828, 16
  %830 = or i32 %823, %829
  %831 = load ptr, ptr %88, align 8
  %832 = getelementptr inbounds i8, ptr %831, i64 16
  %833 = getelementptr inbounds i8, ptr %832, i64 3
  %834 = load i8, ptr %833, align 1
  %835 = zext i8 %834 to i32
  %836 = shl i32 %835, 24
  %837 = or i32 %830, %836
  store i32 %837, ptr %77, align 4
  %838 = load ptr, ptr %88, align 8
  %839 = getelementptr inbounds i8, ptr %838, i64 20
  %840 = getelementptr inbounds i8, ptr %839, i64 0
  %841 = load i8, ptr %840, align 1
  %842 = zext i8 %841 to i32
  %843 = load ptr, ptr %88, align 8
  %844 = getelementptr inbounds i8, ptr %843, i64 20
  %845 = getelementptr inbounds i8, ptr %844, i64 1
  %846 = load i8, ptr %845, align 1
  %847 = zext i8 %846 to i32
  %848 = shl i32 %847, 8
  %849 = or i32 %842, %848
  %850 = load ptr, ptr %88, align 8
  %851 = getelementptr inbounds i8, ptr %850, i64 20
  %852 = getelementptr inbounds i8, ptr %851, i64 2
  %853 = load i8, ptr %852, align 1
  %854 = zext i8 %853 to i32
  %855 = shl i32 %854, 16
  %856 = or i32 %849, %855
  %857 = load ptr, ptr %88, align 8
  %858 = getelementptr inbounds i8, ptr %857, i64 20
  %859 = getelementptr inbounds i8, ptr %858, i64 3
  %860 = load i8, ptr %859, align 1
  %861 = zext i8 %860 to i32
  %862 = shl i32 %861, 24
  %863 = or i32 %856, %862
  store i32 %863, ptr %78, align 4
  %864 = load ptr, ptr %88, align 8
  %865 = getelementptr inbounds i8, ptr %864, i64 48
  %866 = getelementptr inbounds i8, ptr %865, i64 0
  %867 = load i8, ptr %866, align 1
  %868 = zext i8 %867 to i32
  %869 = load ptr, ptr %88, align 8
  %870 = getelementptr inbounds i8, ptr %869, i64 48
  %871 = getelementptr inbounds i8, ptr %870, i64 1
  %872 = load i8, ptr %871, align 1
  %873 = zext i8 %872 to i32
  %874 = shl i32 %873, 8
  %875 = or i32 %868, %874
  %876 = load ptr, ptr %88, align 8
  %877 = getelementptr inbounds i8, ptr %876, i64 48
  %878 = getelementptr inbounds i8, ptr %877, i64 2
  %879 = load i8, ptr %878, align 1
  %880 = zext i8 %879 to i32
  %881 = shl i32 %880, 16
  %882 = or i32 %875, %881
  %883 = load ptr, ptr %88, align 8
  %884 = getelementptr inbounds i8, ptr %883, i64 48
  %885 = getelementptr inbounds i8, ptr %884, i64 3
  %886 = load i8, ptr %885, align 1
  %887 = zext i8 %886 to i32
  %888 = shl i32 %887, 24
  %889 = or i32 %882, %888
  %890 = zext i32 %889 to i64
  %891 = load ptr, ptr %88, align 8
  %892 = getelementptr inbounds i8, ptr %891, i64 48
  %893 = getelementptr inbounds i8, ptr %892, i64 4
  %894 = getelementptr inbounds i8, ptr %893, i64 0
  %895 = load i8, ptr %894, align 1
  %896 = zext i8 %895 to i32
  %897 = load ptr, ptr %88, align 8
  %898 = getelementptr inbounds i8, ptr %897, i64 48
  %899 = getelementptr inbounds i8, ptr %898, i64 4
  %900 = getelementptr inbounds i8, ptr %899, i64 1
  %901 = load i8, ptr %900, align 1
  %902 = zext i8 %901 to i32
  %903 = shl i32 %902, 8
  %904 = or i32 %896, %903
  %905 = load ptr, ptr %88, align 8
  %906 = getelementptr inbounds i8, ptr %905, i64 48
  %907 = getelementptr inbounds i8, ptr %906, i64 4
  %908 = getelementptr inbounds i8, ptr %907, i64 2
  %909 = load i8, ptr %908, align 1
  %910 = zext i8 %909 to i32
  %911 = shl i32 %910, 16
  %912 = or i32 %904, %911
  %913 = load ptr, ptr %88, align 8
  %914 = getelementptr inbounds i8, ptr %913, i64 48
  %915 = getelementptr inbounds i8, ptr %914, i64 4
  %916 = getelementptr inbounds i8, ptr %915, i64 3
  %917 = load i8, ptr %916, align 1
  %918 = zext i8 %917 to i32
  %919 = shl i32 %918, 24
  %920 = or i32 %912, %919
  %921 = zext i32 %920 to i64
  %922 = shl i64 %921, 32
  %923 = or i64 %890, %922
  store i64 %923, ptr %79, align 8
  br label %924

924:                                              ; preds = %809, %367
  %925 = load ptr, ptr %73, align 8
  %926 = getelementptr inbounds %struct.mz_zip_archive, ptr %925, i32 0, i32 2
  %927 = load i32, ptr %926, align 8
  %928 = load i32, ptr %76, align 4
  %929 = icmp ne i32 %927, %928
  br i1 %929, label %930, label %939

930:                                              ; preds = %924
  %931 = load ptr, ptr %73, align 8
  store ptr %931, ptr %38, align 8
  store i32 10, ptr %39, align 4
  %932 = load ptr, ptr %38, align 8
  %933 = icmp ne ptr %932, null
  br i1 %933, label %934, label %938

934:                                              ; preds = %930
  %935 = load i32, ptr %39, align 4
  %936 = load ptr, ptr %38, align 8
  %937 = getelementptr inbounds %struct.mz_zip_archive, ptr %936, i32 0, i32 5
  store i32 %935, ptr %937, align 4
  br label %938

938:                                              ; preds = %930, %934
  store i32 0, ptr %72, align 4
  br label %1746

939:                                              ; preds = %924
  %940 = load i32, ptr %77, align 4
  %941 = load i32, ptr %78, align 4
  %942 = or i32 %940, %941
  %943 = icmp ne i32 %942, 0
  br i1 %943, label %944, label %959

944:                                              ; preds = %939
  %945 = load i32, ptr %77, align 4
  %946 = icmp ne i32 %945, 1
  br i1 %946, label %950, label %947

947:                                              ; preds = %944
  %948 = load i32, ptr %78, align 4
  %949 = icmp ne i32 %948, 1
  br i1 %949, label %950, label %959

950:                                              ; preds = %947, %944
  %951 = load ptr, ptr %73, align 8
  store ptr %951, ptr %40, align 8
  store i32 10, ptr %41, align 4
  %952 = load ptr, ptr %40, align 8
  %953 = icmp ne ptr %952, null
  br i1 %953, label %954, label %958

954:                                              ; preds = %950
  %955 = load i32, ptr %41, align 4
  %956 = load ptr, ptr %40, align 8
  %957 = getelementptr inbounds %struct.mz_zip_archive, ptr %956, i32 0, i32 5
  store i32 %955, ptr %957, align 4
  br label %958

958:                                              ; preds = %950, %954
  store i32 0, ptr %72, align 4
  br label %1746

959:                                              ; preds = %947, %939
  %960 = load i32, ptr %75, align 4
  %961 = zext i32 %960 to i64
  %962 = load ptr, ptr %73, align 8
  %963 = getelementptr inbounds %struct.mz_zip_archive, ptr %962, i32 0, i32 2
  %964 = load i32, ptr %963, align 8
  %965 = zext i32 %964 to i64
  %966 = mul i64 %965, 46
  %967 = icmp ult i64 %961, %966
  br i1 %967, label %968, label %977

968:                                              ; preds = %959
  %969 = load ptr, ptr %73, align 8
  store ptr %969, ptr %42, align 8
  store i32 9, ptr %43, align 4
  %970 = load ptr, ptr %42, align 8
  %971 = icmp ne ptr %970, null
  br i1 %971, label %972, label %976

972:                                              ; preds = %968
  %973 = load i32, ptr %43, align 4
  %974 = load ptr, ptr %42, align 8
  %975 = getelementptr inbounds %struct.mz_zip_archive, ptr %974, i32 0, i32 5
  store i32 %973, ptr %975, align 4
  br label %976

976:                                              ; preds = %968, %972
  store i32 0, ptr %72, align 4
  br label %1746

977:                                              ; preds = %959
  %978 = load i64, ptr %79, align 8
  %979 = load i32, ptr %75, align 4
  %980 = zext i32 %979 to i64
  %981 = add i64 %978, %980
  %982 = load ptr, ptr %73, align 8
  %983 = getelementptr inbounds %struct.mz_zip_archive, ptr %982, i32 0, i32 0
  %984 = load i64, ptr %983, align 8
  %985 = icmp ugt i64 %981, %984
  br i1 %985, label %986, label %995

986:                                              ; preds = %977
  %987 = load ptr, ptr %73, align 8
  store ptr %987, ptr %44, align 8
  store i32 9, ptr %45, align 4
  %988 = load ptr, ptr %44, align 8
  %989 = icmp ne ptr %988, null
  br i1 %989, label %990, label %994

990:                                              ; preds = %986
  %991 = load i32, ptr %45, align 4
  %992 = load ptr, ptr %44, align 8
  %993 = getelementptr inbounds %struct.mz_zip_archive, ptr %992, i32 0, i32 5
  store i32 %991, ptr %993, align 4
  br label %994

994:                                              ; preds = %986, %990
  store i32 0, ptr %72, align 4
  br label %1746

995:                                              ; preds = %977
  %996 = load i64, ptr %79, align 8
  %997 = load ptr, ptr %73, align 8
  %998 = getelementptr inbounds %struct.mz_zip_archive, ptr %997, i32 0, i32 1
  store i64 %996, ptr %998, align 8
  %999 = load ptr, ptr %73, align 8
  %1000 = getelementptr inbounds %struct.mz_zip_archive, ptr %999, i32 0, i32 2
  %1001 = load i32, ptr %1000, align 8
  %1002 = icmp ne i32 %1001, 0
  br i1 %1002, label %1003, label %1740

1003:                                             ; preds = %995
  %1004 = load ptr, ptr %73, align 8
  %1005 = load ptr, ptr %73, align 8
  %1006 = getelementptr inbounds %struct.mz_zip_archive, ptr %1005, i32 0, i32 15
  %1007 = load ptr, ptr %1006, align 8
  %1008 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1007, i32 0, i32 0
  %1009 = load i32, ptr %75, align 4
  %1010 = zext i32 %1009 to i64
  store ptr %1004, ptr %4, align 8
  store ptr %1008, ptr %5, align 8
  store i64 %1010, ptr %6, align 8
  store i32 0, ptr %7, align 4
  %1011 = load i64, ptr %6, align 8
  %1012 = load ptr, ptr %5, align 8
  %1013 = getelementptr inbounds %struct.mz_zip_array, ptr %1012, i32 0, i32 2
  %1014 = load i64, ptr %1013, align 8
  %1015 = icmp ugt i64 %1011, %1014
  br i1 %1015, label %1016, label %1025

1016:                                             ; preds = %1003
  %1017 = load ptr, ptr %4, align 8
  %1018 = load ptr, ptr %5, align 8
  %1019 = load i64, ptr %6, align 8
  %1020 = load i32, ptr %7, align 4
  %1021 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %1017, ptr noundef %1018, i64 noundef %1019, i32 noundef %1020)
  %1022 = icmp ne i32 %1021, 0
  br i1 %1022, label %1024, label %1023

1023:                                             ; preds = %1016
  store i32 0, ptr %3, align 4
  br label %1029

1024:                                             ; preds = %1016
  br label %1025

1025:                                             ; preds = %1024, %1003
  %1026 = load i64, ptr %6, align 8
  %1027 = load ptr, ptr %5, align 8
  %1028 = getelementptr inbounds %struct.mz_zip_array, ptr %1027, i32 0, i32 1
  store i64 %1026, ptr %1028, align 8
  store i32 1, ptr %3, align 4
  br label %1029

1029:                                             ; preds = %1023, %1025
  %1030 = load i32, ptr %3, align 4
  %1031 = icmp ne i32 %1030, 0
  br i1 %1031, label %1032, label %1063

1032:                                             ; preds = %1029
  %1033 = load ptr, ptr %73, align 8
  %1034 = load ptr, ptr %73, align 8
  %1035 = getelementptr inbounds %struct.mz_zip_archive, ptr %1034, i32 0, i32 15
  %1036 = load ptr, ptr %1035, align 8
  %1037 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1036, i32 0, i32 1
  %1038 = load ptr, ptr %73, align 8
  %1039 = getelementptr inbounds %struct.mz_zip_archive, ptr %1038, i32 0, i32 2
  %1040 = load i32, ptr %1039, align 8
  %1041 = zext i32 %1040 to i64
  store ptr %1033, ptr %9, align 8
  store ptr %1037, ptr %10, align 8
  store i64 %1041, ptr %11, align 8
  store i32 0, ptr %12, align 4
  %1042 = load i64, ptr %11, align 8
  %1043 = load ptr, ptr %10, align 8
  %1044 = getelementptr inbounds %struct.mz_zip_array, ptr %1043, i32 0, i32 2
  %1045 = load i64, ptr %1044, align 8
  %1046 = icmp ugt i64 %1042, %1045
  br i1 %1046, label %1047, label %1056

1047:                                             ; preds = %1032
  %1048 = load ptr, ptr %9, align 8
  %1049 = load ptr, ptr %10, align 8
  %1050 = load i64, ptr %11, align 8
  %1051 = load i32, ptr %12, align 4
  %1052 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %1048, ptr noundef %1049, i64 noundef %1050, i32 noundef %1051)
  %1053 = icmp ne i32 %1052, 0
  br i1 %1053, label %1055, label %1054

1054:                                             ; preds = %1047
  store i32 0, ptr %8, align 4
  br label %1060

1055:                                             ; preds = %1047
  br label %1056

1056:                                             ; preds = %1055, %1032
  %1057 = load i64, ptr %11, align 8
  %1058 = load ptr, ptr %10, align 8
  %1059 = getelementptr inbounds %struct.mz_zip_array, ptr %1058, i32 0, i32 1
  store i64 %1057, ptr %1059, align 8
  store i32 1, ptr %8, align 4
  br label %1060

1060:                                             ; preds = %1054, %1056
  %1061 = load i32, ptr %8, align 4
  %1062 = icmp ne i32 %1061, 0
  br i1 %1062, label %1072, label %1063

1063:                                             ; preds = %1060, %1029
  %1064 = load ptr, ptr %73, align 8
  store ptr %1064, ptr %46, align 8
  store i32 16, ptr %47, align 4
  %1065 = load ptr, ptr %46, align 8
  %1066 = icmp ne ptr %1065, null
  br i1 %1066, label %1067, label %1071

1067:                                             ; preds = %1063
  %1068 = load i32, ptr %47, align 4
  %1069 = load ptr, ptr %46, align 8
  %1070 = getelementptr inbounds %struct.mz_zip_archive, ptr %1069, i32 0, i32 5
  store i32 %1068, ptr %1070, align 4
  br label %1071

1071:                                             ; preds = %1063, %1067
  store i32 0, ptr %72, align 4
  br label %1746

1072:                                             ; preds = %1060
  %1073 = load i32, ptr %84, align 4
  %1074 = icmp ne i32 %1073, 0
  br i1 %1074, label %1075, label %1116

1075:                                             ; preds = %1072
  %1076 = load ptr, ptr %73, align 8
  %1077 = load ptr, ptr %73, align 8
  %1078 = getelementptr inbounds %struct.mz_zip_archive, ptr %1077, i32 0, i32 15
  %1079 = load ptr, ptr %1078, align 8
  %1080 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1079, i32 0, i32 2
  %1081 = load ptr, ptr %73, align 8
  %1082 = getelementptr inbounds %struct.mz_zip_archive, ptr %1081, i32 0, i32 2
  %1083 = load i32, ptr %1082, align 8
  %1084 = zext i32 %1083 to i64
  store ptr %1076, ptr %14, align 8
  store ptr %1080, ptr %15, align 8
  store i64 %1084, ptr %16, align 8
  store i32 0, ptr %17, align 4
  %1085 = load i64, ptr %16, align 8
  %1086 = load ptr, ptr %15, align 8
  %1087 = getelementptr inbounds %struct.mz_zip_array, ptr %1086, i32 0, i32 2
  %1088 = load i64, ptr %1087, align 8
  %1089 = icmp ugt i64 %1085, %1088
  br i1 %1089, label %1090, label %1099

1090:                                             ; preds = %1075
  %1091 = load ptr, ptr %14, align 8
  %1092 = load ptr, ptr %15, align 8
  %1093 = load i64, ptr %16, align 8
  %1094 = load i32, ptr %17, align 4
  %1095 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %1091, ptr noundef %1092, i64 noundef %1093, i32 noundef %1094)
  %1096 = icmp ne i32 %1095, 0
  br i1 %1096, label %1098, label %1097

1097:                                             ; preds = %1090
  store i32 0, ptr %13, align 4
  br label %1103

1098:                                             ; preds = %1090
  br label %1099

1099:                                             ; preds = %1098, %1075
  %1100 = load i64, ptr %16, align 8
  %1101 = load ptr, ptr %15, align 8
  %1102 = getelementptr inbounds %struct.mz_zip_array, ptr %1101, i32 0, i32 1
  store i64 %1100, ptr %1102, align 8
  store i32 1, ptr %13, align 4
  br label %1103

1103:                                             ; preds = %1097, %1099
  %1104 = load i32, ptr %13, align 4
  %1105 = icmp ne i32 %1104, 0
  br i1 %1105, label %1115, label %1106

1106:                                             ; preds = %1103
  %1107 = load ptr, ptr %73, align 8
  store ptr %1107, ptr %48, align 8
  store i32 16, ptr %49, align 4
  %1108 = load ptr, ptr %48, align 8
  %1109 = icmp ne ptr %1108, null
  br i1 %1109, label %1110, label %1114

1110:                                             ; preds = %1106
  %1111 = load i32, ptr %49, align 4
  %1112 = load ptr, ptr %48, align 8
  %1113 = getelementptr inbounds %struct.mz_zip_archive, ptr %1112, i32 0, i32 5
  store i32 %1111, ptr %1113, align 4
  br label %1114

1114:                                             ; preds = %1106, %1110
  store i32 0, ptr %72, align 4
  br label %1746

1115:                                             ; preds = %1103
  br label %1116

1116:                                             ; preds = %1115, %1072
  %1117 = load ptr, ptr %73, align 8
  %1118 = getelementptr inbounds %struct.mz_zip_archive, ptr %1117, i32 0, i32 11
  %1119 = load ptr, ptr %1118, align 8
  %1120 = load ptr, ptr %73, align 8
  %1121 = getelementptr inbounds %struct.mz_zip_archive, ptr %1120, i32 0, i32 14
  %1122 = load ptr, ptr %1121, align 8
  %1123 = load i64, ptr %79, align 8
  %1124 = load ptr, ptr %73, align 8
  %1125 = getelementptr inbounds %struct.mz_zip_archive, ptr %1124, i32 0, i32 15
  %1126 = load ptr, ptr %1125, align 8
  %1127 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1126, i32 0, i32 0
  %1128 = getelementptr inbounds %struct.mz_zip_array, ptr %1127, i32 0, i32 0
  %1129 = load ptr, ptr %1128, align 8
  %1130 = load i32, ptr %75, align 4
  %1131 = zext i32 %1130 to i64
  %1132 = call i64 %1119(ptr noundef %1122, i64 noundef %1123, ptr noundef %1129, i64 noundef %1131)
  %1133 = load i32, ptr %75, align 4
  %1134 = zext i32 %1133 to i64
  %1135 = icmp ne i64 %1132, %1134
  br i1 %1135, label %1136, label %1145

1136:                                             ; preds = %1116
  %1137 = load ptr, ptr %73, align 8
  store ptr %1137, ptr %50, align 8
  store i32 20, ptr %51, align 4
  %1138 = load ptr, ptr %50, align 8
  %1139 = icmp ne ptr %1138, null
  br i1 %1139, label %1140, label %1144

1140:                                             ; preds = %1136
  %1141 = load i32, ptr %51, align 4
  %1142 = load ptr, ptr %50, align 8
  %1143 = getelementptr inbounds %struct.mz_zip_archive, ptr %1142, i32 0, i32 5
  store i32 %1141, ptr %1143, align 4
  br label %1144

1144:                                             ; preds = %1136, %1140
  store i32 0, ptr %72, align 4
  br label %1746

1145:                                             ; preds = %1116
  %1146 = load ptr, ptr %73, align 8
  %1147 = getelementptr inbounds %struct.mz_zip_archive, ptr %1146, i32 0, i32 15
  %1148 = load ptr, ptr %1147, align 8
  %1149 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1148, i32 0, i32 0
  %1150 = getelementptr inbounds %struct.mz_zip_array, ptr %1149, i32 0, i32 0
  %1151 = load ptr, ptr %1150, align 8
  store ptr %1151, ptr %81, align 8
  %1152 = load i32, ptr %75, align 4
  store i32 %1152, ptr %96, align 4
  store i32 0, ptr %95, align 4
  br label %1153

1153:                                             ; preds = %1736, %1145
  %1154 = load i32, ptr %95, align 4
  %1155 = load ptr, ptr %73, align 8
  %1156 = getelementptr inbounds %struct.mz_zip_archive, ptr %1155, i32 0, i32 2
  %1157 = load i32, ptr %1156, align 8
  %1158 = icmp ult i32 %1154, %1157
  br i1 %1158, label %1159, label %1739

1159:                                             ; preds = %1153
  %1160 = load i32, ptr %96, align 4
  %1161 = icmp ult i32 %1160, 46
  br i1 %1161, label %1186, label %1162

1162:                                             ; preds = %1159
  %1163 = load ptr, ptr %81, align 8
  %1164 = getelementptr inbounds i8, ptr %1163, i64 0
  %1165 = load i8, ptr %1164, align 1
  %1166 = zext i8 %1165 to i32
  %1167 = load ptr, ptr %81, align 8
  %1168 = getelementptr inbounds i8, ptr %1167, i64 1
  %1169 = load i8, ptr %1168, align 1
  %1170 = zext i8 %1169 to i32
  %1171 = shl i32 %1170, 8
  %1172 = or i32 %1166, %1171
  %1173 = load ptr, ptr %81, align 8
  %1174 = getelementptr inbounds i8, ptr %1173, i64 2
  %1175 = load i8, ptr %1174, align 1
  %1176 = zext i8 %1175 to i32
  %1177 = shl i32 %1176, 16
  %1178 = or i32 %1172, %1177
  %1179 = load ptr, ptr %81, align 8
  %1180 = getelementptr inbounds i8, ptr %1179, i64 3
  %1181 = load i8, ptr %1180, align 1
  %1182 = zext i8 %1181 to i32
  %1183 = shl i32 %1182, 24
  %1184 = or i32 %1178, %1183
  %1185 = icmp ne i32 %1184, 33639248
  br i1 %1185, label %1186, label %1195

1186:                                             ; preds = %1162, %1159
  %1187 = load ptr, ptr %73, align 8
  store ptr %1187, ptr %52, align 8
  store i32 9, ptr %53, align 4
  %1188 = load ptr, ptr %52, align 8
  %1189 = icmp ne ptr %1188, null
  br i1 %1189, label %1190, label %1194

1190:                                             ; preds = %1186
  %1191 = load i32, ptr %53, align 4
  %1192 = load ptr, ptr %52, align 8
  %1193 = getelementptr inbounds %struct.mz_zip_archive, ptr %1192, i32 0, i32 5
  store i32 %1191, ptr %1193, align 4
  br label %1194

1194:                                             ; preds = %1186, %1190
  store i32 0, ptr %72, align 4
  br label %1746

1195:                                             ; preds = %1162
  %1196 = load ptr, ptr %81, align 8
  %1197 = load ptr, ptr %73, align 8
  %1198 = getelementptr inbounds %struct.mz_zip_archive, ptr %1197, i32 0, i32 15
  %1199 = load ptr, ptr %1198, align 8
  %1200 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1199, i32 0, i32 0
  %1201 = getelementptr inbounds %struct.mz_zip_array, ptr %1200, i32 0, i32 0
  %1202 = load ptr, ptr %1201, align 8
  %1203 = ptrtoint ptr %1196 to i64
  %1204 = ptrtoint ptr %1202 to i64
  %1205 = sub i64 %1203, %1204
  %1206 = trunc i64 %1205 to i32
  %1207 = load ptr, ptr %73, align 8
  %1208 = getelementptr inbounds %struct.mz_zip_archive, ptr %1207, i32 0, i32 15
  %1209 = load ptr, ptr %1208, align 8
  %1210 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1209, i32 0, i32 1
  %1211 = getelementptr inbounds %struct.mz_zip_array, ptr %1210, i32 0, i32 0
  %1212 = load ptr, ptr %1211, align 8
  %1213 = load i32, ptr %95, align 4
  %1214 = zext i32 %1213 to i64
  %1215 = getelementptr inbounds i32, ptr %1212, i64 %1214
  store i32 %1206, ptr %1215, align 4
  %1216 = load i32, ptr %84, align 4
  %1217 = icmp ne i32 %1216, 0
  br i1 %1217, label %1218, label %1229

1218:                                             ; preds = %1195
  %1219 = load i32, ptr %95, align 4
  %1220 = load ptr, ptr %73, align 8
  %1221 = getelementptr inbounds %struct.mz_zip_archive, ptr %1220, i32 0, i32 15
  %1222 = load ptr, ptr %1221, align 8
  %1223 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1222, i32 0, i32 2
  %1224 = getelementptr inbounds %struct.mz_zip_array, ptr %1223, i32 0, i32 0
  %1225 = load ptr, ptr %1224, align 8
  %1226 = load i32, ptr %95, align 4
  %1227 = zext i32 %1226 to i64
  %1228 = getelementptr inbounds i32, ptr %1225, i64 %1227
  store i32 %1219, ptr %1228, align 4
  br label %1229

1229:                                             ; preds = %1218, %1195
  %1230 = load ptr, ptr %81, align 8
  %1231 = getelementptr inbounds i8, ptr %1230, i64 20
  %1232 = getelementptr inbounds i8, ptr %1231, i64 0
  %1233 = load i8, ptr %1232, align 1
  %1234 = zext i8 %1233 to i32
  %1235 = load ptr, ptr %81, align 8
  %1236 = getelementptr inbounds i8, ptr %1235, i64 20
  %1237 = getelementptr inbounds i8, ptr %1236, i64 1
  %1238 = load i8, ptr %1237, align 1
  %1239 = zext i8 %1238 to i32
  %1240 = shl i32 %1239, 8
  %1241 = or i32 %1234, %1240
  %1242 = load ptr, ptr %81, align 8
  %1243 = getelementptr inbounds i8, ptr %1242, i64 20
  %1244 = getelementptr inbounds i8, ptr %1243, i64 2
  %1245 = load i8, ptr %1244, align 1
  %1246 = zext i8 %1245 to i32
  %1247 = shl i32 %1246, 16
  %1248 = or i32 %1241, %1247
  %1249 = load ptr, ptr %81, align 8
  %1250 = getelementptr inbounds i8, ptr %1249, i64 20
  %1251 = getelementptr inbounds i8, ptr %1250, i64 3
  %1252 = load i8, ptr %1251, align 1
  %1253 = zext i8 %1252 to i32
  %1254 = shl i32 %1253, 24
  %1255 = or i32 %1248, %1254
  %1256 = zext i32 %1255 to i64
  store i64 %1256, ptr %102, align 8
  %1257 = load ptr, ptr %81, align 8
  %1258 = getelementptr inbounds i8, ptr %1257, i64 24
  %1259 = getelementptr inbounds i8, ptr %1258, i64 0
  %1260 = load i8, ptr %1259, align 1
  %1261 = zext i8 %1260 to i32
  %1262 = load ptr, ptr %81, align 8
  %1263 = getelementptr inbounds i8, ptr %1262, i64 24
  %1264 = getelementptr inbounds i8, ptr %1263, i64 1
  %1265 = load i8, ptr %1264, align 1
  %1266 = zext i8 %1265 to i32
  %1267 = shl i32 %1266, 8
  %1268 = or i32 %1261, %1267
  %1269 = load ptr, ptr %81, align 8
  %1270 = getelementptr inbounds i8, ptr %1269, i64 24
  %1271 = getelementptr inbounds i8, ptr %1270, i64 2
  %1272 = load i8, ptr %1271, align 1
  %1273 = zext i8 %1272 to i32
  %1274 = shl i32 %1273, 16
  %1275 = or i32 %1268, %1274
  %1276 = load ptr, ptr %81, align 8
  %1277 = getelementptr inbounds i8, ptr %1276, i64 24
  %1278 = getelementptr inbounds i8, ptr %1277, i64 3
  %1279 = load i8, ptr %1278, align 1
  %1280 = zext i8 %1279 to i32
  %1281 = shl i32 %1280, 24
  %1282 = or i32 %1275, %1281
  %1283 = zext i32 %1282 to i64
  store i64 %1283, ptr %103, align 8
  %1284 = load ptr, ptr %81, align 8
  %1285 = getelementptr inbounds i8, ptr %1284, i64 42
  %1286 = getelementptr inbounds i8, ptr %1285, i64 0
  %1287 = load i8, ptr %1286, align 1
  %1288 = zext i8 %1287 to i32
  %1289 = load ptr, ptr %81, align 8
  %1290 = getelementptr inbounds i8, ptr %1289, i64 42
  %1291 = getelementptr inbounds i8, ptr %1290, i64 1
  %1292 = load i8, ptr %1291, align 1
  %1293 = zext i8 %1292 to i32
  %1294 = shl i32 %1293, 8
  %1295 = or i32 %1288, %1294
  %1296 = load ptr, ptr %81, align 8
  %1297 = getelementptr inbounds i8, ptr %1296, i64 42
  %1298 = getelementptr inbounds i8, ptr %1297, i64 2
  %1299 = load i8, ptr %1298, align 1
  %1300 = zext i8 %1299 to i32
  %1301 = shl i32 %1300, 16
  %1302 = or i32 %1295, %1301
  %1303 = load ptr, ptr %81, align 8
  %1304 = getelementptr inbounds i8, ptr %1303, i64 42
  %1305 = getelementptr inbounds i8, ptr %1304, i64 3
  %1306 = load i8, ptr %1305, align 1
  %1307 = zext i8 %1306 to i32
  %1308 = shl i32 %1307, 24
  %1309 = or i32 %1302, %1308
  %1310 = zext i32 %1309 to i64
  store i64 %1310, ptr %104, align 8
  %1311 = load ptr, ptr %81, align 8
  %1312 = getelementptr inbounds i8, ptr %1311, i64 28
  %1313 = getelementptr inbounds i8, ptr %1312, i64 0
  %1314 = load i8, ptr %1313, align 1
  %1315 = zext i8 %1314 to i32
  %1316 = load ptr, ptr %81, align 8
  %1317 = getelementptr inbounds i8, ptr %1316, i64 28
  %1318 = getelementptr inbounds i8, ptr %1317, i64 1
  %1319 = load i8, ptr %1318, align 1
  %1320 = zext i8 %1319 to i32
  %1321 = shl i32 %1320, 8
  %1322 = or i32 %1315, %1321
  store i32 %1322, ptr %100, align 4
  %1323 = load ptr, ptr %81, align 8
  %1324 = getelementptr inbounds i8, ptr %1323, i64 30
  %1325 = getelementptr inbounds i8, ptr %1324, i64 0
  %1326 = load i8, ptr %1325, align 1
  %1327 = zext i8 %1326 to i32
  %1328 = load ptr, ptr %81, align 8
  %1329 = getelementptr inbounds i8, ptr %1328, i64 30
  %1330 = getelementptr inbounds i8, ptr %1329, i64 1
  %1331 = load i8, ptr %1330, align 1
  %1332 = zext i8 %1331 to i32
  %1333 = shl i32 %1332, 8
  %1334 = or i32 %1327, %1333
  store i32 %1334, ptr %101, align 4
  %1335 = load ptr, ptr %73, align 8
  %1336 = getelementptr inbounds %struct.mz_zip_archive, ptr %1335, i32 0, i32 15
  %1337 = load ptr, ptr %1336, align 8
  %1338 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1337, i32 0, i32 5
  %1339 = load i32, ptr %1338, align 8
  %1340 = icmp ne i32 %1339, 0
  br i1 %1340, label %1519, label %1341

1341:                                             ; preds = %1229
  %1342 = load i32, ptr %101, align 4
  %1343 = icmp ne i32 %1342, 0
  br i1 %1343, label %1344, label %1519

1344:                                             ; preds = %1341
  %1345 = load i64, ptr %102, align 8
  %1346 = load i64, ptr %103, align 8
  %1347 = icmp ugt i64 %1345, %1346
  br i1 %1347, label %1348, label %1350

1348:                                             ; preds = %1344
  %1349 = load i64, ptr %102, align 8
  br label %1352

1350:                                             ; preds = %1344
  %1351 = load i64, ptr %103, align 8
  br label %1352

1352:                                             ; preds = %1350, %1348
  %1353 = phi i64 [ %1349, %1348 ], [ %1351, %1350 ]
  %1354 = load i64, ptr %104, align 8
  %1355 = icmp ugt i64 %1353, %1354
  br i1 %1355, label %1356, label %1366

1356:                                             ; preds = %1352
  %1357 = load i64, ptr %102, align 8
  %1358 = load i64, ptr %103, align 8
  %1359 = icmp ugt i64 %1357, %1358
  br i1 %1359, label %1360, label %1362

1360:                                             ; preds = %1356
  %1361 = load i64, ptr %102, align 8
  br label %1364

1362:                                             ; preds = %1356
  %1363 = load i64, ptr %103, align 8
  br label %1364

1364:                                             ; preds = %1362, %1360
  %1365 = phi i64 [ %1361, %1360 ], [ %1363, %1362 ]
  br label %1368

1366:                                             ; preds = %1352
  %1367 = load i64, ptr %104, align 8
  br label %1368

1368:                                             ; preds = %1366, %1364
  %1369 = phi i64 [ %1365, %1364 ], [ %1367, %1366 ]
  %1370 = icmp eq i64 %1369, 4294967295
  br i1 %1370, label %1371, label %1519

1371:                                             ; preds = %1368
  %1372 = load i32, ptr %101, align 4
  store i32 %1372, ptr %105, align 4
  %1373 = load i32, ptr %105, align 4
  %1374 = icmp ne i32 %1373, 0
  br i1 %1374, label %1375, label %1518

1375:                                             ; preds = %1371
  store ptr null, ptr %107, align 8
  %1376 = load i32, ptr %100, align 4
  %1377 = add i32 46, %1376
  %1378 = load i32, ptr %101, align 4
  %1379 = add i32 %1377, %1378
  %1380 = load i32, ptr %96, align 4
  %1381 = icmp ugt i32 %1379, %1380
  br i1 %1381, label %1382, label %1428

1382:                                             ; preds = %1375
  %1383 = load i32, ptr %101, align 4
  %1384 = zext i32 %1383 to i64
  %1385 = call ptr @malloc(i64 noundef %1384) #9
  store ptr %1385, ptr %107, align 8
  %1386 = load ptr, ptr %107, align 8
  %1387 = icmp eq ptr %1386, null
  br i1 %1387, label %1388, label %1397

1388:                                             ; preds = %1382
  %1389 = load ptr, ptr %73, align 8
  store ptr %1389, ptr %54, align 8
  store i32 16, ptr %55, align 4
  %1390 = load ptr, ptr %54, align 8
  %1391 = icmp ne ptr %1390, null
  br i1 %1391, label %1392, label %1396

1392:                                             ; preds = %1388
  %1393 = load i32, ptr %55, align 4
  %1394 = load ptr, ptr %54, align 8
  %1395 = getelementptr inbounds %struct.mz_zip_archive, ptr %1394, i32 0, i32 5
  store i32 %1393, ptr %1395, align 4
  br label %1396

1396:                                             ; preds = %1388, %1392
  store i32 0, ptr %72, align 4
  br label %1746

1397:                                             ; preds = %1382
  %1398 = load ptr, ptr %73, align 8
  %1399 = getelementptr inbounds %struct.mz_zip_archive, ptr %1398, i32 0, i32 11
  %1400 = load ptr, ptr %1399, align 8
  %1401 = load ptr, ptr %73, align 8
  %1402 = getelementptr inbounds %struct.mz_zip_archive, ptr %1401, i32 0, i32 14
  %1403 = load ptr, ptr %1402, align 8
  %1404 = load i64, ptr %79, align 8
  %1405 = add i64 %1404, 46
  %1406 = load i32, ptr %100, align 4
  %1407 = zext i32 %1406 to i64
  %1408 = add i64 %1405, %1407
  %1409 = load ptr, ptr %107, align 8
  %1410 = load i32, ptr %101, align 4
  %1411 = zext i32 %1410 to i64
  %1412 = call i64 %1400(ptr noundef %1403, i64 noundef %1408, ptr noundef %1409, i64 noundef %1411)
  %1413 = load i32, ptr %101, align 4
  %1414 = zext i32 %1413 to i64
  %1415 = icmp ne i64 %1412, %1414
  br i1 %1415, label %1416, label %1426

1416:                                             ; preds = %1397
  %1417 = load ptr, ptr %107, align 8
  call void @free(ptr noundef %1417)
  %1418 = load ptr, ptr %73, align 8
  store ptr %1418, ptr %56, align 8
  store i32 20, ptr %57, align 4
  %1419 = load ptr, ptr %56, align 8
  %1420 = icmp ne ptr %1419, null
  br i1 %1420, label %1421, label %1425

1421:                                             ; preds = %1416
  %1422 = load i32, ptr %57, align 4
  %1423 = load ptr, ptr %56, align 8
  %1424 = getelementptr inbounds %struct.mz_zip_archive, ptr %1423, i32 0, i32 5
  store i32 %1422, ptr %1424, align 4
  br label %1425

1425:                                             ; preds = %1416, %1421
  store i32 0, ptr %72, align 4
  br label %1746

1426:                                             ; preds = %1397
  %1427 = load ptr, ptr %107, align 8
  store ptr %1427, ptr %106, align 8
  br label %1434

1428:                                             ; preds = %1375
  %1429 = load ptr, ptr %81, align 8
  %1430 = getelementptr inbounds i8, ptr %1429, i64 46
  %1431 = load i32, ptr %100, align 4
  %1432 = zext i32 %1431 to i64
  %1433 = getelementptr inbounds i8, ptr %1430, i64 %1432
  store ptr %1433, ptr %106, align 8
  br label %1434

1434:                                             ; preds = %1428, %1426
  br label %1435

1435:                                             ; preds = %1513, %1434
  %1436 = load i32, ptr %105, align 4
  %1437 = zext i32 %1436 to i64
  %1438 = icmp ult i64 %1437, 4
  br i1 %1438, label %1439, label %1449

1439:                                             ; preds = %1435
  %1440 = load ptr, ptr %107, align 8
  call void @free(ptr noundef %1440)
  %1441 = load ptr, ptr %73, align 8
  store ptr %1441, ptr %58, align 8
  store i32 9, ptr %59, align 4
  %1442 = load ptr, ptr %58, align 8
  %1443 = icmp ne ptr %1442, null
  br i1 %1443, label %1444, label %1448

1444:                                             ; preds = %1439
  %1445 = load i32, ptr %59, align 4
  %1446 = load ptr, ptr %58, align 8
  %1447 = getelementptr inbounds %struct.mz_zip_archive, ptr %1446, i32 0, i32 5
  store i32 %1445, ptr %1447, align 4
  br label %1448

1448:                                             ; preds = %1439, %1444
  store i32 0, ptr %72, align 4
  br label %1746

1449:                                             ; preds = %1435
  %1450 = load ptr, ptr %106, align 8
  %1451 = getelementptr inbounds i8, ptr %1450, i64 0
  %1452 = load i8, ptr %1451, align 1
  %1453 = zext i8 %1452 to i32
  %1454 = load ptr, ptr %106, align 8
  %1455 = getelementptr inbounds i8, ptr %1454, i64 1
  %1456 = load i8, ptr %1455, align 1
  %1457 = zext i8 %1456 to i32
  %1458 = shl i32 %1457, 8
  %1459 = or i32 %1453, %1458
  store i32 %1459, ptr %108, align 4
  %1460 = load ptr, ptr %106, align 8
  %1461 = getelementptr inbounds i8, ptr %1460, i64 2
  %1462 = getelementptr inbounds i8, ptr %1461, i64 0
  %1463 = load i8, ptr %1462, align 1
  %1464 = zext i8 %1463 to i32
  %1465 = load ptr, ptr %106, align 8
  %1466 = getelementptr inbounds i8, ptr %1465, i64 2
  %1467 = getelementptr inbounds i8, ptr %1466, i64 1
  %1468 = load i8, ptr %1467, align 1
  %1469 = zext i8 %1468 to i32
  %1470 = shl i32 %1469, 8
  %1471 = or i32 %1464, %1470
  store i32 %1471, ptr %109, align 4
  %1472 = load i32, ptr %109, align 4
  %1473 = zext i32 %1472 to i64
  %1474 = add i64 %1473, 4
  %1475 = load i32, ptr %105, align 4
  %1476 = zext i32 %1475 to i64
  %1477 = icmp ugt i64 %1474, %1476
  br i1 %1477, label %1478, label %1488

1478:                                             ; preds = %1449
  %1479 = load ptr, ptr %107, align 8
  call void @free(ptr noundef %1479)
  %1480 = load ptr, ptr %73, align 8
  store ptr %1480, ptr %60, align 8
  store i32 9, ptr %61, align 4
  %1481 = load ptr, ptr %60, align 8
  %1482 = icmp ne ptr %1481, null
  br i1 %1482, label %1483, label %1487

1483:                                             ; preds = %1478
  %1484 = load i32, ptr %61, align 4
  %1485 = load ptr, ptr %60, align 8
  %1486 = getelementptr inbounds %struct.mz_zip_archive, ptr %1485, i32 0, i32 5
  store i32 %1484, ptr %1486, align 4
  br label %1487

1487:                                             ; preds = %1478, %1483
  store i32 0, ptr %72, align 4
  br label %1746

1488:                                             ; preds = %1449
  %1489 = load i32, ptr %108, align 4
  %1490 = icmp eq i32 %1489, 1
  br i1 %1490, label %1491, label %1500

1491:                                             ; preds = %1488
  %1492 = load ptr, ptr %73, align 8
  %1493 = getelementptr inbounds %struct.mz_zip_archive, ptr %1492, i32 0, i32 15
  %1494 = load ptr, ptr %1493, align 8
  %1495 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1494, i32 0, i32 4
  store i32 1, ptr %1495, align 4
  %1496 = load ptr, ptr %73, align 8
  %1497 = getelementptr inbounds %struct.mz_zip_archive, ptr %1496, i32 0, i32 15
  %1498 = load ptr, ptr %1497, align 8
  %1499 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1498, i32 0, i32 5
  store i32 1, ptr %1499, align 8
  br label %1516

1500:                                             ; preds = %1488
  %1501 = load i32, ptr %109, align 4
  %1502 = zext i32 %1501 to i64
  %1503 = add i64 4, %1502
  %1504 = load ptr, ptr %106, align 8
  %1505 = getelementptr inbounds i8, ptr %1504, i64 %1503
  store ptr %1505, ptr %106, align 8
  %1506 = load i32, ptr %105, align 4
  %1507 = zext i32 %1506 to i64
  %1508 = sub i64 %1507, 4
  %1509 = load i32, ptr %109, align 4
  %1510 = zext i32 %1509 to i64
  %1511 = sub i64 %1508, %1510
  %1512 = trunc i64 %1511 to i32
  store i32 %1512, ptr %105, align 4
  br label %1513

1513:                                             ; preds = %1500
  %1514 = load i32, ptr %105, align 4
  %1515 = icmp ne i32 %1514, 0
  br i1 %1515, label %1435, label %1516, !llvm.loop !110

1516:                                             ; preds = %1513, %1491
  %1517 = load ptr, ptr %107, align 8
  call void @free(ptr noundef %1517)
  br label %1518

1518:                                             ; preds = %1516, %1371
  br label %1519

1519:                                             ; preds = %1518, %1368, %1341, %1229
  %1520 = load i64, ptr %102, align 8
  %1521 = icmp ne i64 %1520, 4294967295
  br i1 %1521, label %1522, label %1573

1522:                                             ; preds = %1519
  %1523 = load i64, ptr %103, align 8
  %1524 = icmp ne i64 %1523, 4294967295
  br i1 %1524, label %1525, label %1573

1525:                                             ; preds = %1522
  %1526 = load ptr, ptr %81, align 8
  %1527 = getelementptr inbounds i8, ptr %1526, i64 10
  %1528 = getelementptr inbounds i8, ptr %1527, i64 0
  %1529 = load i8, ptr %1528, align 1
  %1530 = zext i8 %1529 to i32
  %1531 = load ptr, ptr %81, align 8
  %1532 = getelementptr inbounds i8, ptr %1531, i64 10
  %1533 = getelementptr inbounds i8, ptr %1532, i64 1
  %1534 = load i8, ptr %1533, align 1
  %1535 = zext i8 %1534 to i32
  %1536 = shl i32 %1535, 8
  %1537 = or i32 %1530, %1536
  %1538 = load ptr, ptr %81, align 8
  %1539 = getelementptr inbounds i8, ptr %1538, i64 10
  %1540 = getelementptr inbounds i8, ptr %1539, i64 2
  %1541 = load i8, ptr %1540, align 1
  %1542 = zext i8 %1541 to i32
  %1543 = shl i32 %1542, 16
  %1544 = or i32 %1537, %1543
  %1545 = load ptr, ptr %81, align 8
  %1546 = getelementptr inbounds i8, ptr %1545, i64 10
  %1547 = getelementptr inbounds i8, ptr %1546, i64 3
  %1548 = load i8, ptr %1547, align 1
  %1549 = zext i8 %1548 to i32
  %1550 = shl i32 %1549, 24
  %1551 = or i32 %1544, %1550
  %1552 = icmp ne i32 %1551, 0
  br i1 %1552, label %1557, label %1553

1553:                                             ; preds = %1525
  %1554 = load i64, ptr %103, align 8
  %1555 = load i64, ptr %102, align 8
  %1556 = icmp ne i64 %1554, %1555
  br i1 %1556, label %1563, label %1557

1557:                                             ; preds = %1553, %1525
  %1558 = load i64, ptr %103, align 8
  %1559 = icmp ne i64 %1558, 0
  br i1 %1559, label %1560, label %1572

1560:                                             ; preds = %1557
  %1561 = load i64, ptr %102, align 8
  %1562 = icmp ne i64 %1561, 0
  br i1 %1562, label %1572, label %1563

1563:                                             ; preds = %1560, %1553
  %1564 = load ptr, ptr %73, align 8
  store ptr %1564, ptr %62, align 8
  store i32 9, ptr %63, align 4
  %1565 = load ptr, ptr %62, align 8
  %1566 = icmp ne ptr %1565, null
  br i1 %1566, label %1567, label %1571

1567:                                             ; preds = %1563
  %1568 = load i32, ptr %63, align 4
  %1569 = load ptr, ptr %62, align 8
  %1570 = getelementptr inbounds %struct.mz_zip_archive, ptr %1569, i32 0, i32 5
  store i32 %1568, ptr %1570, align 4
  br label %1571

1571:                                             ; preds = %1563, %1567
  store i32 0, ptr %72, align 4
  br label %1746

1572:                                             ; preds = %1560, %1557
  br label %1573

1573:                                             ; preds = %1572, %1522, %1519
  %1574 = load ptr, ptr %81, align 8
  %1575 = getelementptr inbounds i8, ptr %1574, i64 34
  %1576 = getelementptr inbounds i8, ptr %1575, i64 0
  %1577 = load i8, ptr %1576, align 1
  %1578 = zext i8 %1577 to i32
  %1579 = load ptr, ptr %81, align 8
  %1580 = getelementptr inbounds i8, ptr %1579, i64 34
  %1581 = getelementptr inbounds i8, ptr %1580, i64 1
  %1582 = load i8, ptr %1581, align 1
  %1583 = zext i8 %1582 to i32
  %1584 = shl i32 %1583, 8
  %1585 = or i32 %1578, %1584
  store i32 %1585, ptr %98, align 4
  %1586 = load i32, ptr %98, align 4
  %1587 = icmp eq i32 %1586, 65535
  br i1 %1587, label %1595, label %1588

1588:                                             ; preds = %1573
  %1589 = load i32, ptr %98, align 4
  %1590 = load i32, ptr %77, align 4
  %1591 = icmp ne i32 %1589, %1590
  br i1 %1591, label %1592, label %1604

1592:                                             ; preds = %1588
  %1593 = load i32, ptr %98, align 4
  %1594 = icmp ne i32 %1593, 1
  br i1 %1594, label %1595, label %1604

1595:                                             ; preds = %1592, %1573
  %1596 = load ptr, ptr %73, align 8
  store ptr %1596, ptr %64, align 8
  store i32 10, ptr %65, align 4
  %1597 = load ptr, ptr %64, align 8
  %1598 = icmp ne ptr %1597, null
  br i1 %1598, label %1599, label %1603

1599:                                             ; preds = %1595
  %1600 = load i32, ptr %65, align 4
  %1601 = load ptr, ptr %64, align 8
  %1602 = getelementptr inbounds %struct.mz_zip_archive, ptr %1601, i32 0, i32 5
  store i32 %1600, ptr %1602, align 4
  br label %1603

1603:                                             ; preds = %1595, %1599
  store i32 0, ptr %72, align 4
  br label %1746

1604:                                             ; preds = %1592, %1588
  %1605 = load i64, ptr %102, align 8
  %1606 = icmp ne i64 %1605, 4294967295
  br i1 %1606, label %1607, label %1652

1607:                                             ; preds = %1604
  %1608 = load ptr, ptr %81, align 8
  %1609 = getelementptr inbounds i8, ptr %1608, i64 42
  %1610 = getelementptr inbounds i8, ptr %1609, i64 0
  %1611 = load i8, ptr %1610, align 1
  %1612 = zext i8 %1611 to i32
  %1613 = load ptr, ptr %81, align 8
  %1614 = getelementptr inbounds i8, ptr %1613, i64 42
  %1615 = getelementptr inbounds i8, ptr %1614, i64 1
  %1616 = load i8, ptr %1615, align 1
  %1617 = zext i8 %1616 to i32
  %1618 = shl i32 %1617, 8
  %1619 = or i32 %1612, %1618
  %1620 = load ptr, ptr %81, align 8
  %1621 = getelementptr inbounds i8, ptr %1620, i64 42
  %1622 = getelementptr inbounds i8, ptr %1621, i64 2
  %1623 = load i8, ptr %1622, align 1
  %1624 = zext i8 %1623 to i32
  %1625 = shl i32 %1624, 16
  %1626 = or i32 %1619, %1625
  %1627 = load ptr, ptr %81, align 8
  %1628 = getelementptr inbounds i8, ptr %1627, i64 42
  %1629 = getelementptr inbounds i8, ptr %1628, i64 3
  %1630 = load i8, ptr %1629, align 1
  %1631 = zext i8 %1630 to i32
  %1632 = shl i32 %1631, 24
  %1633 = or i32 %1626, %1632
  %1634 = zext i32 %1633 to i64
  %1635 = add i64 %1634, 30
  %1636 = load i64, ptr %102, align 8
  %1637 = add i64 %1635, %1636
  %1638 = load ptr, ptr %73, align 8
  %1639 = getelementptr inbounds %struct.mz_zip_archive, ptr %1638, i32 0, i32 0
  %1640 = load i64, ptr %1639, align 8
  %1641 = icmp ugt i64 %1637, %1640
  br i1 %1641, label %1642, label %1651

1642:                                             ; preds = %1607
  %1643 = load ptr, ptr %73, align 8
  store ptr %1643, ptr %66, align 8
  store i32 9, ptr %67, align 4
  %1644 = load ptr, ptr %66, align 8
  %1645 = icmp ne ptr %1644, null
  br i1 %1645, label %1646, label %1650

1646:                                             ; preds = %1642
  %1647 = load i32, ptr %67, align 4
  %1648 = load ptr, ptr %66, align 8
  %1649 = getelementptr inbounds %struct.mz_zip_archive, ptr %1648, i32 0, i32 5
  store i32 %1647, ptr %1649, align 4
  br label %1650

1650:                                             ; preds = %1642, %1646
  store i32 0, ptr %72, align 4
  br label %1746

1651:                                             ; preds = %1607
  br label %1652

1652:                                             ; preds = %1651, %1604
  %1653 = load ptr, ptr %81, align 8
  %1654 = getelementptr inbounds i8, ptr %1653, i64 8
  %1655 = getelementptr inbounds i8, ptr %1654, i64 0
  %1656 = load i8, ptr %1655, align 1
  %1657 = zext i8 %1656 to i32
  %1658 = load ptr, ptr %81, align 8
  %1659 = getelementptr inbounds i8, ptr %1658, i64 8
  %1660 = getelementptr inbounds i8, ptr %1659, i64 1
  %1661 = load i8, ptr %1660, align 1
  %1662 = zext i8 %1661 to i32
  %1663 = shl i32 %1662, 8
  %1664 = or i32 %1657, %1663
  store i32 %1664, ptr %99, align 4
  %1665 = load i32, ptr %99, align 4
  %1666 = and i32 %1665, 8192
  %1667 = icmp ne i32 %1666, 0
  br i1 %1667, label %1668, label %1677

1668:                                             ; preds = %1652
  %1669 = load ptr, ptr %73, align 8
  store ptr %1669, ptr %68, align 8
  store i32 5, ptr %69, align 4
  %1670 = load ptr, ptr %68, align 8
  %1671 = icmp ne ptr %1670, null
  br i1 %1671, label %1672, label %1676

1672:                                             ; preds = %1668
  %1673 = load i32, ptr %69, align 4
  %1674 = load ptr, ptr %68, align 8
  %1675 = getelementptr inbounds %struct.mz_zip_archive, ptr %1674, i32 0, i32 5
  store i32 %1673, ptr %1675, align 4
  br label %1676

1676:                                             ; preds = %1668, %1672
  store i32 0, ptr %72, align 4
  br label %1746

1677:                                             ; preds = %1652
  %1678 = load ptr, ptr %81, align 8
  %1679 = getelementptr inbounds i8, ptr %1678, i64 28
  %1680 = getelementptr inbounds i8, ptr %1679, i64 0
  %1681 = load i8, ptr %1680, align 1
  %1682 = zext i8 %1681 to i32
  %1683 = load ptr, ptr %81, align 8
  %1684 = getelementptr inbounds i8, ptr %1683, i64 28
  %1685 = getelementptr inbounds i8, ptr %1684, i64 1
  %1686 = load i8, ptr %1685, align 1
  %1687 = zext i8 %1686 to i32
  %1688 = shl i32 %1687, 8
  %1689 = or i32 %1682, %1688
  %1690 = add i32 46, %1689
  %1691 = load ptr, ptr %81, align 8
  %1692 = getelementptr inbounds i8, ptr %1691, i64 30
  %1693 = getelementptr inbounds i8, ptr %1692, i64 0
  %1694 = load i8, ptr %1693, align 1
  %1695 = zext i8 %1694 to i32
  %1696 = load ptr, ptr %81, align 8
  %1697 = getelementptr inbounds i8, ptr %1696, i64 30
  %1698 = getelementptr inbounds i8, ptr %1697, i64 1
  %1699 = load i8, ptr %1698, align 1
  %1700 = zext i8 %1699 to i32
  %1701 = shl i32 %1700, 8
  %1702 = or i32 %1695, %1701
  %1703 = add i32 %1690, %1702
  %1704 = load ptr, ptr %81, align 8
  %1705 = getelementptr inbounds i8, ptr %1704, i64 32
  %1706 = getelementptr inbounds i8, ptr %1705, i64 0
  %1707 = load i8, ptr %1706, align 1
  %1708 = zext i8 %1707 to i32
  %1709 = load ptr, ptr %81, align 8
  %1710 = getelementptr inbounds i8, ptr %1709, i64 32
  %1711 = getelementptr inbounds i8, ptr %1710, i64 1
  %1712 = load i8, ptr %1711, align 1
  %1713 = zext i8 %1712 to i32
  %1714 = shl i32 %1713, 8
  %1715 = or i32 %1708, %1714
  %1716 = add i32 %1703, %1715
  store i32 %1716, ptr %97, align 4
  %1717 = load i32, ptr %96, align 4
  %1718 = icmp ugt i32 %1716, %1717
  br i1 %1718, label %1719, label %1728

1719:                                             ; preds = %1677
  %1720 = load ptr, ptr %73, align 8
  store ptr %1720, ptr %70, align 8
  store i32 9, ptr %71, align 4
  %1721 = load ptr, ptr %70, align 8
  %1722 = icmp ne ptr %1721, null
  br i1 %1722, label %1723, label %1727

1723:                                             ; preds = %1719
  %1724 = load i32, ptr %71, align 4
  %1725 = load ptr, ptr %70, align 8
  %1726 = getelementptr inbounds %struct.mz_zip_archive, ptr %1725, i32 0, i32 5
  store i32 %1724, ptr %1726, align 4
  br label %1727

1727:                                             ; preds = %1719, %1723
  store i32 0, ptr %72, align 4
  br label %1746

1728:                                             ; preds = %1677
  %1729 = load i32, ptr %97, align 4
  %1730 = load i32, ptr %96, align 4
  %1731 = sub i32 %1730, %1729
  store i32 %1731, ptr %96, align 4
  %1732 = load i32, ptr %97, align 4
  %1733 = load ptr, ptr %81, align 8
  %1734 = zext i32 %1732 to i64
  %1735 = getelementptr inbounds i8, ptr %1733, i64 %1734
  store ptr %1735, ptr %81, align 8
  br label %1736

1736:                                             ; preds = %1728
  %1737 = load i32, ptr %95, align 4
  %1738 = add i32 %1737, 1
  store i32 %1738, ptr %95, align 4
  br label %1153, !llvm.loop !111

1739:                                             ; preds = %1153
  br label %1740

1740:                                             ; preds = %1739, %995
  %1741 = load i32, ptr %84, align 4
  %1742 = icmp ne i32 %1741, 0
  br i1 %1742, label %1743, label %1745

1743:                                             ; preds = %1740
  %1744 = load ptr, ptr %73, align 8
  call void @mz_zip_reader_sort_central_dir_offsets_by_filename(ptr noundef %1744)
  br label %1745

1745:                                             ; preds = %1743, %1740
  store i32 1, ptr %72, align 4
  br label %1746

1746:                                             ; preds = %1745, %1727, %1676, %1650, %1603, %1571, %1487, %1448, %1425, %1396, %1194, %1144, %1114, %1071, %994, %976, %958, %938, %808, %794, %778, %766, %754, %318, %199, %162, %142, %129
  %1747 = load i32, ptr %72, align 4
  ret i32 %1747
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_init_mem(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  store ptr %0, ptr %10, align 8
  store ptr %1, ptr %11, align 8
  store i64 %2, ptr %12, align 8
  store i32 %3, ptr %13, align 4
  %14 = load ptr, ptr %11, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %4
  %17 = load ptr, ptr %10, align 8
  store ptr %17, ptr %5, align 8
  store i32 24, ptr %6, align 4
  %18 = load ptr, ptr %5, align 8
  %19 = icmp ne ptr %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = load i32, ptr %6, align 4
  %22 = load ptr, ptr %5, align 8
  %23 = getelementptr inbounds %struct.mz_zip_archive, ptr %22, i32 0, i32 5
  store i32 %21, ptr %23, align 4
  br label %24

24:                                               ; preds = %16, %20
  store i32 0, ptr %9, align 4
  br label %74

25:                                               ; preds = %4
  %26 = load i64, ptr %12, align 8
  %27 = icmp ult i64 %26, 22
  br i1 %27, label %28, label %37

28:                                               ; preds = %25
  %29 = load ptr, ptr %10, align 8
  store ptr %29, ptr %7, align 8
  store i32 8, ptr %8, align 4
  %30 = load ptr, ptr %7, align 8
  %31 = icmp ne ptr %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = load i32, ptr %8, align 4
  %34 = load ptr, ptr %7, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, ptr %34, i32 0, i32 5
  store i32 %33, ptr %35, align 4
  br label %36

36:                                               ; preds = %28, %32
  store i32 0, ptr %9, align 4
  br label %74

37:                                               ; preds = %25
  %38 = load ptr, ptr %10, align 8
  %39 = load i32, ptr %13, align 4
  %40 = call i32 @mz_zip_reader_init_internal(ptr noundef %38, i32 noundef %39)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %37
  store i32 0, ptr %9, align 4
  br label %74

43:                                               ; preds = %37
  %44 = load ptr, ptr %10, align 8
  %45 = getelementptr inbounds %struct.mz_zip_archive, ptr %44, i32 0, i32 4
  store i32 2, ptr %45, align 8
  %46 = load i64, ptr %12, align 8
  %47 = load ptr, ptr %10, align 8
  %48 = getelementptr inbounds %struct.mz_zip_archive, ptr %47, i32 0, i32 0
  store i64 %46, ptr %48, align 8
  %49 = load ptr, ptr %10, align 8
  %50 = getelementptr inbounds %struct.mz_zip_archive, ptr %49, i32 0, i32 11
  store ptr @mz_zip_mem_read_func, ptr %50, align 8
  %51 = load ptr, ptr %10, align 8
  %52 = load ptr, ptr %10, align 8
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %52, i32 0, i32 14
  store ptr %51, ptr %53, align 8
  %54 = load ptr, ptr %10, align 8
  %55 = getelementptr inbounds %struct.mz_zip_archive, ptr %54, i32 0, i32 13
  store ptr null, ptr %55, align 8
  %56 = load ptr, ptr %11, align 8
  %57 = load ptr, ptr %10, align 8
  %58 = getelementptr inbounds %struct.mz_zip_archive, ptr %57, i32 0, i32 15
  %59 = load ptr, ptr %58, align 8
  %60 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %59, i32 0, i32 8
  store ptr %56, ptr %60, align 8
  %61 = load i64, ptr %12, align 8
  %62 = load ptr, ptr %10, align 8
  %63 = getelementptr inbounds %struct.mz_zip_archive, ptr %62, i32 0, i32 15
  %64 = load ptr, ptr %63, align 8
  %65 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %64, i32 0, i32 9
  store i64 %61, ptr %65, align 8
  %66 = load ptr, ptr %10, align 8
  %67 = load i32, ptr %13, align 4
  %68 = call i32 @mz_zip_reader_read_central_dir(ptr noundef %66, i32 noundef %67)
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %43
  %71 = load ptr, ptr %10, align 8
  %72 = call i32 @mz_zip_reader_end_internal(ptr noundef %71, i32 noundef 0)
  store i32 0, ptr %9, align 4
  br label %74

73:                                               ; preds = %43
  store i32 1, ptr %9, align 4
  br label %74

74:                                               ; preds = %73, %70, %42, %36, %24
  %75 = load i32, ptr %9, align 4
  ret i32 %75
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @mz_zip_mem_read_func(ptr noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  store i64 %1, ptr %6, align 8
  store ptr %2, ptr %7, align 8
  store i64 %3, ptr %8, align 8
  %11 = load ptr, ptr %5, align 8
  store ptr %11, ptr %9, align 8
  %12 = load i64, ptr %6, align 8
  %13 = load ptr, ptr %9, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %13, i32 0, i32 0
  %15 = load i64, ptr %14, align 8
  %16 = icmp uge i64 %12, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %4
  br label %36

18:                                               ; preds = %4
  %19 = load ptr, ptr %9, align 8
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %19, i32 0, i32 0
  %21 = load i64, ptr %20, align 8
  %22 = load i64, ptr %6, align 8
  %23 = sub i64 %21, %22
  %24 = load i64, ptr %8, align 8
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %18
  %27 = load ptr, ptr %9, align 8
  %28 = getelementptr inbounds %struct.mz_zip_archive, ptr %27, i32 0, i32 0
  %29 = load i64, ptr %28, align 8
  %30 = load i64, ptr %6, align 8
  %31 = sub i64 %29, %30
  br label %34

32:                                               ; preds = %18
  %33 = load i64, ptr %8, align 8
  br label %34

34:                                               ; preds = %32, %26
  %35 = phi i64 [ %31, %26 ], [ %33, %32 ]
  br label %36

36:                                               ; preds = %34, %17
  %37 = phi i64 [ 0, %17 ], [ %35, %34 ]
  store i64 %37, ptr %10, align 8
  %38 = load ptr, ptr %7, align 8
  %39 = load ptr, ptr %9, align 8
  %40 = getelementptr inbounds %struct.mz_zip_archive, ptr %39, i32 0, i32 15
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %41, i32 0, i32 8
  %43 = load ptr, ptr %42, align 8
  %44 = load i64, ptr %6, align 8
  %45 = getelementptr inbounds i8, ptr %43, i64 %44
  %46 = load i64, ptr %10, align 8
  %47 = load ptr, ptr %7, align 8
  %48 = call i64 @llvm.objectsize.i64.p0(ptr %47, i1 false, i1 true, i1 false)
  %49 = call ptr @__memcpy_chk(ptr noundef %38, ptr noundef %45, i64 noundef %46, i64 noundef %48) #11
  %50 = load i64, ptr %10, align 8
  ret i64 %50
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_init_file(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  store i32 %2, ptr %6, align 4
  %7 = load ptr, ptr %4, align 8
  %8 = load ptr, ptr %5, align 8
  %9 = load i32, ptr %6, align 4
  %10 = call i32 @mz_zip_reader_init_file_v2(ptr noundef %7, ptr noundef %8, i32 noundef %9, i64 noundef 0, i64 noundef 0)
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_init_file_v2(ptr noundef %0, ptr noundef %1, i32 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca i32, align 4
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca ptr, align 8
  store ptr %0, ptr %15, align 8
  store ptr %1, ptr %16, align 8
  store i32 %2, ptr %17, align 4
  store i64 %3, ptr %18, align 8
  store i64 %4, ptr %19, align 8
  %22 = load ptr, ptr %15, align 8
  %23 = icmp ne ptr %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %5
  %25 = load ptr, ptr %16, align 8
  %26 = icmp ne ptr %25, null
  br i1 %26, label %27, label %33

27:                                               ; preds = %24
  %28 = load i64, ptr %19, align 8
  %29 = icmp ne i64 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %27
  %31 = load i64, ptr %19, align 8
  %32 = icmp ult i64 %31, 22
  br i1 %32, label %33, label %42

33:                                               ; preds = %30, %24, %5
  %34 = load ptr, ptr %15, align 8
  store ptr %34, ptr %6, align 8
  store i32 24, ptr %7, align 4
  %35 = load ptr, ptr %6, align 8
  %36 = icmp ne ptr %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = load i32, ptr %7, align 4
  %39 = load ptr, ptr %6, align 8
  %40 = getelementptr inbounds %struct.mz_zip_archive, ptr %39, i32 0, i32 5
  store i32 %38, ptr %40, align 4
  br label %41

41:                                               ; preds = %33, %37
  store i32 0, ptr %14, align 4
  br label %129

42:                                               ; preds = %30, %27
  %43 = load ptr, ptr %16, align 8
  %44 = call ptr @fopen(ptr noundef %43, ptr noundef @.str.18)
  store ptr %44, ptr %21, align 8
  %45 = load ptr, ptr %21, align 8
  %46 = icmp ne ptr %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = load ptr, ptr %15, align 8
  store ptr %48, ptr %8, align 8
  store i32 17, ptr %9, align 4
  %49 = load ptr, ptr %8, align 8
  %50 = icmp ne ptr %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = load i32, ptr %9, align 4
  %53 = load ptr, ptr %8, align 8
  %54 = getelementptr inbounds %struct.mz_zip_archive, ptr %53, i32 0, i32 5
  store i32 %52, ptr %54, align 4
  br label %55

55:                                               ; preds = %47, %51
  store i32 0, ptr %14, align 4
  br label %129

56:                                               ; preds = %42
  %57 = load i64, ptr %19, align 8
  store i64 %57, ptr %20, align 8
  %58 = load i64, ptr %20, align 8
  %59 = icmp ne i64 %58, 0
  br i1 %59, label %78, label %60

60:                                               ; preds = %56
  %61 = load ptr, ptr %21, align 8
  %62 = call i32 @fseeko(ptr noundef %61, i64 noundef 0, i32 noundef 2)
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %75

64:                                               ; preds = %60
  %65 = load ptr, ptr %21, align 8
  %66 = call i32 @fclose(ptr noundef %65)
  %67 = load ptr, ptr %15, align 8
  store ptr %67, ptr %10, align 8
  store i32 22, ptr %11, align 4
  %68 = load ptr, ptr %10, align 8
  %69 = icmp ne ptr %68, null
  br i1 %69, label %70, label %74

70:                                               ; preds = %64
  %71 = load i32, ptr %11, align 4
  %72 = load ptr, ptr %10, align 8
  %73 = getelementptr inbounds %struct.mz_zip_archive, ptr %72, i32 0, i32 5
  store i32 %71, ptr %73, align 4
  br label %74

74:                                               ; preds = %64, %70
  store i32 0, ptr %14, align 4
  br label %129

75:                                               ; preds = %60
  %76 = load ptr, ptr %21, align 8
  %77 = call i64 @ftello(ptr noundef %76)
  store i64 %77, ptr %20, align 8
  br label %78

78:                                               ; preds = %75, %56
  %79 = load i64, ptr %20, align 8
  %80 = icmp ult i64 %79, 22
  br i1 %80, label %81, label %92

81:                                               ; preds = %78
  %82 = load ptr, ptr %21, align 8
  %83 = call i32 @fclose(ptr noundef %82)
  %84 = load ptr, ptr %15, align 8
  store ptr %84, ptr %12, align 8
  store i32 8, ptr %13, align 4
  %85 = load ptr, ptr %12, align 8
  %86 = icmp ne ptr %85, null
  br i1 %86, label %87, label %91

87:                                               ; preds = %81
  %88 = load i32, ptr %13, align 4
  %89 = load ptr, ptr %12, align 8
  %90 = getelementptr inbounds %struct.mz_zip_archive, ptr %89, i32 0, i32 5
  store i32 %88, ptr %90, align 4
  br label %91

91:                                               ; preds = %81, %87
  store i32 0, ptr %14, align 4
  br label %129

92:                                               ; preds = %78
  %93 = load ptr, ptr %15, align 8
  %94 = load i32, ptr %17, align 4
  %95 = call i32 @mz_zip_reader_init_internal(ptr noundef %93, i32 noundef %94)
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %92
  %98 = load ptr, ptr %21, align 8
  %99 = call i32 @fclose(ptr noundef %98)
  store i32 0, ptr %14, align 4
  br label %129

100:                                              ; preds = %92
  %101 = load ptr, ptr %15, align 8
  %102 = getelementptr inbounds %struct.mz_zip_archive, ptr %101, i32 0, i32 4
  store i32 4, ptr %102, align 8
  %103 = load ptr, ptr %15, align 8
  %104 = getelementptr inbounds %struct.mz_zip_archive, ptr %103, i32 0, i32 11
  store ptr @mz_zip_file_read_func, ptr %104, align 8
  %105 = load ptr, ptr %15, align 8
  %106 = load ptr, ptr %15, align 8
  %107 = getelementptr inbounds %struct.mz_zip_archive, ptr %106, i32 0, i32 14
  store ptr %105, ptr %107, align 8
  %108 = load ptr, ptr %21, align 8
  %109 = load ptr, ptr %15, align 8
  %110 = getelementptr inbounds %struct.mz_zip_archive, ptr %109, i32 0, i32 15
  %111 = load ptr, ptr %110, align 8
  %112 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %111, i32 0, i32 6
  store ptr %108, ptr %112, align 8
  %113 = load i64, ptr %20, align 8
  %114 = load ptr, ptr %15, align 8
  %115 = getelementptr inbounds %struct.mz_zip_archive, ptr %114, i32 0, i32 0
  store i64 %113, ptr %115, align 8
  %116 = load i64, ptr %18, align 8
  %117 = load ptr, ptr %15, align 8
  %118 = getelementptr inbounds %struct.mz_zip_archive, ptr %117, i32 0, i32 15
  %119 = load ptr, ptr %118, align 8
  %120 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %119, i32 0, i32 7
  store i64 %116, ptr %120, align 8
  %121 = load ptr, ptr %15, align 8
  %122 = load i32, ptr %17, align 4
  %123 = call i32 @mz_zip_reader_read_central_dir(ptr noundef %121, i32 noundef %122)
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %100
  %126 = load ptr, ptr %15, align 8
  %127 = call i32 @mz_zip_reader_end_internal(ptr noundef %126, i32 noundef 0)
  store i32 0, ptr %14, align 4
  br label %129

128:                                              ; preds = %100
  store i32 1, ptr %14, align 4
  br label %129

129:                                              ; preds = %128, %125, %97, %91, %74, %55, %41
  %130 = load i32, ptr %14, align 4
  ret i32 %130
}

declare ptr @fopen(ptr noundef, ptr noundef) #1

declare i32 @fseeko(ptr noundef, i64 noundef, i32 noundef) #1

declare i32 @fclose(ptr noundef) #1

declare i64 @ftello(ptr noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @mz_zip_file_read_func(ptr noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  store ptr %0, ptr %6, align 8
  store i64 %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store i64 %3, ptr %9, align 8
  %12 = load ptr, ptr %6, align 8
  store ptr %12, ptr %10, align 8
  %13 = load ptr, ptr %10, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %13, i32 0, i32 15
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %15, i32 0, i32 6
  %17 = load ptr, ptr %16, align 8
  %18 = call i64 @ftello(ptr noundef %17)
  store i64 %18, ptr %11, align 8
  %19 = load ptr, ptr %10, align 8
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %19, i32 0, i32 15
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %21, i32 0, i32 7
  %23 = load i64, ptr %22, align 8
  %24 = load i64, ptr %7, align 8
  %25 = add i64 %24, %23
  store i64 %25, ptr %7, align 8
  %26 = load i64, ptr %7, align 8
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %4
  %29 = load i64, ptr %11, align 8
  %30 = load i64, ptr %7, align 8
  %31 = icmp ne i64 %29, %30
  br i1 %31, label %32, label %42

32:                                               ; preds = %28
  %33 = load ptr, ptr %10, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %33, i32 0, i32 15
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %35, i32 0, i32 6
  %37 = load ptr, ptr %36, align 8
  %38 = load i64, ptr %7, align 8
  %39 = call i32 @fseeko(ptr noundef %37, i64 noundef %38, i32 noundef 0)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %32, %4
  store i64 0, ptr %5, align 8
  br label %51

42:                                               ; preds = %32, %28
  %43 = load ptr, ptr %8, align 8
  %44 = load i64, ptr %9, align 8
  %45 = load ptr, ptr %10, align 8
  %46 = getelementptr inbounds %struct.mz_zip_archive, ptr %45, i32 0, i32 15
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %47, i32 0, i32 6
  %49 = load ptr, ptr %48, align 8
  %50 = call i64 @fread(ptr noundef %43, i64 noundef 1, i64 noundef %44, ptr noundef %49)
  store i64 %50, ptr %5, align 8
  br label %51

51:                                               ; preds = %42, %41
  %52 = load i64, ptr %5, align 8
  ret i64 %52
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_init_cfile(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store ptr %0, ptr %12, align 8
  store ptr %1, ptr %13, align 8
  store i64 %2, ptr %14, align 8
  store i32 %3, ptr %15, align 4
  %17 = load ptr, ptr %12, align 8
  %18 = icmp ne ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %4
  %20 = load ptr, ptr %13, align 8
  %21 = icmp ne ptr %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %19, %4
  %23 = load ptr, ptr %12, align 8
  store ptr %23, ptr %5, align 8
  store i32 17, ptr %6, align 4
  %24 = load ptr, ptr %5, align 8
  %25 = icmp ne ptr %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = load i32, ptr %6, align 4
  %28 = load ptr, ptr %5, align 8
  %29 = getelementptr inbounds %struct.mz_zip_archive, ptr %28, i32 0, i32 5
  store i32 %27, ptr %29, align 4
  br label %30

30:                                               ; preds = %22, %26
  store i32 0, ptr %11, align 4
  br label %101

31:                                               ; preds = %19
  %32 = load ptr, ptr %13, align 8
  %33 = call i64 @ftello(ptr noundef %32)
  store i64 %33, ptr %16, align 8
  %34 = load i64, ptr %14, align 8
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %66, label %36

36:                                               ; preds = %31
  %37 = load ptr, ptr %13, align 8
  %38 = call i32 @fseeko(ptr noundef %37, i64 noundef 0, i32 noundef 2)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %49

40:                                               ; preds = %36
  %41 = load ptr, ptr %12, align 8
  store ptr %41, ptr %7, align 8
  store i32 22, ptr %8, align 4
  %42 = load ptr, ptr %7, align 8
  %43 = icmp ne ptr %42, null
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = load i32, ptr %8, align 4
  %46 = load ptr, ptr %7, align 8
  %47 = getelementptr inbounds %struct.mz_zip_archive, ptr %46, i32 0, i32 5
  store i32 %45, ptr %47, align 4
  br label %48

48:                                               ; preds = %40, %44
  store i32 0, ptr %11, align 4
  br label %101

49:                                               ; preds = %36
  %50 = load ptr, ptr %13, align 8
  %51 = call i64 @ftello(ptr noundef %50)
  %52 = load i64, ptr %16, align 8
  %53 = sub i64 %51, %52
  store i64 %53, ptr %14, align 8
  %54 = load i64, ptr %14, align 8
  %55 = icmp ult i64 %54, 22
  br i1 %55, label %56, label %65

56:                                               ; preds = %49
  %57 = load ptr, ptr %12, align 8
  store ptr %57, ptr %9, align 8
  store i32 8, ptr %10, align 4
  %58 = load ptr, ptr %9, align 8
  %59 = icmp ne ptr %58, null
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = load i32, ptr %10, align 4
  %62 = load ptr, ptr %9, align 8
  %63 = getelementptr inbounds %struct.mz_zip_archive, ptr %62, i32 0, i32 5
  store i32 %61, ptr %63, align 4
  br label %64

64:                                               ; preds = %56, %60
  store i32 0, ptr %11, align 4
  br label %101

65:                                               ; preds = %49
  br label %66

66:                                               ; preds = %65, %31
  %67 = load ptr, ptr %12, align 8
  %68 = load i32, ptr %15, align 4
  %69 = call i32 @mz_zip_reader_init_internal(ptr noundef %67, i32 noundef %68)
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %66
  store i32 0, ptr %11, align 4
  br label %101

72:                                               ; preds = %66
  %73 = load ptr, ptr %12, align 8
  %74 = getelementptr inbounds %struct.mz_zip_archive, ptr %73, i32 0, i32 4
  store i32 5, ptr %74, align 8
  %75 = load ptr, ptr %12, align 8
  %76 = getelementptr inbounds %struct.mz_zip_archive, ptr %75, i32 0, i32 11
  store ptr @mz_zip_file_read_func, ptr %76, align 8
  %77 = load ptr, ptr %12, align 8
  %78 = load ptr, ptr %12, align 8
  %79 = getelementptr inbounds %struct.mz_zip_archive, ptr %78, i32 0, i32 14
  store ptr %77, ptr %79, align 8
  %80 = load ptr, ptr %13, align 8
  %81 = load ptr, ptr %12, align 8
  %82 = getelementptr inbounds %struct.mz_zip_archive, ptr %81, i32 0, i32 15
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %83, i32 0, i32 6
  store ptr %80, ptr %84, align 8
  %85 = load i64, ptr %14, align 8
  %86 = load ptr, ptr %12, align 8
  %87 = getelementptr inbounds %struct.mz_zip_archive, ptr %86, i32 0, i32 0
  store i64 %85, ptr %87, align 8
  %88 = load i64, ptr %16, align 8
  %89 = load ptr, ptr %12, align 8
  %90 = getelementptr inbounds %struct.mz_zip_archive, ptr %89, i32 0, i32 15
  %91 = load ptr, ptr %90, align 8
  %92 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %91, i32 0, i32 7
  store i64 %88, ptr %92, align 8
  %93 = load ptr, ptr %12, align 8
  %94 = load i32, ptr %15, align 4
  %95 = call i32 @mz_zip_reader_read_central_dir(ptr noundef %93, i32 noundef %94)
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %72
  %98 = load ptr, ptr %12, align 8
  %99 = call i32 @mz_zip_reader_end_internal(ptr noundef %98, i32 noundef 0)
  store i32 0, ptr %11, align 4
  br label %101

100:                                              ; preds = %72
  store i32 1, ptr %11, align 4
  br label %101

101:                                              ; preds = %100, %97, %71, %64, %48, %30
  %102 = load i32, ptr %11, align 4
  ret i32 %102
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_is_file_encrypted(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  store ptr %0, ptr %9, align 8
  store i32 %1, ptr %10, align 4
  %13 = load ptr, ptr %9, align 8
  %14 = load i32, ptr %10, align 4
  store ptr %13, ptr %4, align 8
  store i32 %14, ptr %5, align 4
  %15 = load ptr, ptr %4, align 8
  %16 = icmp ne ptr %15, null
  br i1 %16, label %17, label %28

17:                                               ; preds = %2
  %18 = load ptr, ptr %4, align 8
  %19 = getelementptr inbounds %struct.mz_zip_archive, ptr %18, i32 0, i32 15
  %20 = load ptr, ptr %19, align 8
  %21 = icmp ne ptr %20, null
  br i1 %21, label %22, label %28

22:                                               ; preds = %17
  %23 = load i32, ptr %5, align 4
  %24 = load ptr, ptr %4, align 8
  %25 = getelementptr inbounds %struct.mz_zip_archive, ptr %24, i32 0, i32 2
  %26 = load i32, ptr %25, align 8
  %27 = icmp uge i32 %23, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %22, %17, %2
  store ptr null, ptr %3, align 8
  br label %45

29:                                               ; preds = %22
  %30 = load ptr, ptr %4, align 8
  %31 = getelementptr inbounds %struct.mz_zip_archive, ptr %30, i32 0, i32 15
  %32 = load ptr, ptr %31, align 8
  %33 = load ptr, ptr %32, align 8
  %34 = load ptr, ptr %4, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, ptr %34, i32 0, i32 15
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %36, i32 0, i32 1
  %38 = load ptr, ptr %37, align 8
  %39 = load i32, ptr %5, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i32, ptr %38, i64 %40
  %42 = load i32, ptr %41, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i8, ptr %33, i64 %43
  store ptr %44, ptr %3, align 8
  br label %45

45:                                               ; preds = %28, %29
  %46 = load ptr, ptr %3, align 8
  store ptr %46, ptr %12, align 8
  %47 = load ptr, ptr %12, align 8
  %48 = icmp ne ptr %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %45
  %50 = load ptr, ptr %9, align 8
  store ptr %50, ptr %6, align 8
  store i32 24, ptr %7, align 4
  %51 = load ptr, ptr %6, align 8
  %52 = icmp ne ptr %51, null
  br i1 %52, label %53, label %57

53:                                               ; preds = %49
  %54 = load i32, ptr %7, align 4
  %55 = load ptr, ptr %6, align 8
  %56 = getelementptr inbounds %struct.mz_zip_archive, ptr %55, i32 0, i32 5
  store i32 %54, ptr %56, align 4
  br label %57

57:                                               ; preds = %49, %53
  store i32 0, ptr %8, align 4
  br label %75

58:                                               ; preds = %45
  %59 = load ptr, ptr %12, align 8
  %60 = getelementptr inbounds i8, ptr %59, i64 8
  %61 = getelementptr inbounds i8, ptr %60, i64 0
  %62 = load i8, ptr %61, align 1
  %63 = zext i8 %62 to i32
  %64 = load ptr, ptr %12, align 8
  %65 = getelementptr inbounds i8, ptr %64, i64 8
  %66 = getelementptr inbounds i8, ptr %65, i64 1
  %67 = load i8, ptr %66, align 1
  %68 = zext i8 %67 to i32
  %69 = shl i32 %68, 8
  %70 = or i32 %63, %69
  store i32 %70, ptr %11, align 4
  %71 = load i32, ptr %11, align 4
  %72 = and i32 %71, 65
  %73 = icmp ne i32 %72, 0
  %74 = zext i1 %73 to i32
  store i32 %74, ptr %8, align 4
  br label %75

75:                                               ; preds = %58, %57
  %76 = load i32, ptr %8, align 4
  ret i32 %76
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_is_file_supported(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca ptr, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca ptr, align 8
  store ptr %0, ptr %15, align 8
  store i32 %1, ptr %16, align 4
  %20 = load ptr, ptr %15, align 8
  %21 = load i32, ptr %16, align 4
  store ptr %20, ptr %4, align 8
  store i32 %21, ptr %5, align 4
  %22 = load ptr, ptr %4, align 8
  %23 = icmp ne ptr %22, null
  br i1 %23, label %24, label %35

24:                                               ; preds = %2
  %25 = load ptr, ptr %4, align 8
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %25, i32 0, i32 15
  %27 = load ptr, ptr %26, align 8
  %28 = icmp ne ptr %27, null
  br i1 %28, label %29, label %35

29:                                               ; preds = %24
  %30 = load i32, ptr %5, align 4
  %31 = load ptr, ptr %4, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive, ptr %31, i32 0, i32 2
  %33 = load i32, ptr %32, align 8
  %34 = icmp uge i32 %30, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %29, %24, %2
  store ptr null, ptr %3, align 8
  br label %52

36:                                               ; preds = %29
  %37 = load ptr, ptr %4, align 8
  %38 = getelementptr inbounds %struct.mz_zip_archive, ptr %37, i32 0, i32 15
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr %39, align 8
  %41 = load ptr, ptr %4, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive, ptr %41, i32 0, i32 15
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %43, i32 0, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = load i32, ptr %5, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i32, ptr %45, i64 %47
  %49 = load i32, ptr %48, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i8, ptr %40, i64 %50
  store ptr %51, ptr %3, align 8
  br label %52

52:                                               ; preds = %35, %36
  %53 = load ptr, ptr %3, align 8
  store ptr %53, ptr %19, align 8
  %54 = load ptr, ptr %19, align 8
  %55 = icmp ne ptr %54, null
  br i1 %55, label %65, label %56

56:                                               ; preds = %52
  %57 = load ptr, ptr %15, align 8
  store ptr %57, ptr %6, align 8
  store i32 24, ptr %7, align 4
  %58 = load ptr, ptr %6, align 8
  %59 = icmp ne ptr %58, null
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = load i32, ptr %7, align 4
  %62 = load ptr, ptr %6, align 8
  %63 = getelementptr inbounds %struct.mz_zip_archive, ptr %62, i32 0, i32 5
  store i32 %61, ptr %63, align 4
  br label %64

64:                                               ; preds = %56, %60
  store i32 0, ptr %14, align 4
  br label %131

65:                                               ; preds = %52
  %66 = load ptr, ptr %19, align 8
  %67 = getelementptr inbounds i8, ptr %66, i64 10
  %68 = getelementptr inbounds i8, ptr %67, i64 0
  %69 = load i8, ptr %68, align 1
  %70 = zext i8 %69 to i32
  %71 = load ptr, ptr %19, align 8
  %72 = getelementptr inbounds i8, ptr %71, i64 10
  %73 = getelementptr inbounds i8, ptr %72, i64 1
  %74 = load i8, ptr %73, align 1
  %75 = zext i8 %74 to i32
  %76 = shl i32 %75, 8
  %77 = or i32 %70, %76
  store i32 %77, ptr %18, align 4
  %78 = load ptr, ptr %19, align 8
  %79 = getelementptr inbounds i8, ptr %78, i64 8
  %80 = getelementptr inbounds i8, ptr %79, i64 0
  %81 = load i8, ptr %80, align 1
  %82 = zext i8 %81 to i32
  %83 = load ptr, ptr %19, align 8
  %84 = getelementptr inbounds i8, ptr %83, i64 8
  %85 = getelementptr inbounds i8, ptr %84, i64 1
  %86 = load i8, ptr %85, align 1
  %87 = zext i8 %86 to i32
  %88 = shl i32 %87, 8
  %89 = or i32 %82, %88
  store i32 %89, ptr %17, align 4
  %90 = load i32, ptr %18, align 4
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %104

92:                                               ; preds = %65
  %93 = load i32, ptr %18, align 4
  %94 = icmp ne i32 %93, 8
  br i1 %94, label %95, label %104

95:                                               ; preds = %92
  %96 = load ptr, ptr %15, align 8
  store ptr %96, ptr %8, align 8
  store i32 4, ptr %9, align 4
  %97 = load ptr, ptr %8, align 8
  %98 = icmp ne ptr %97, null
  br i1 %98, label %99, label %103

99:                                               ; preds = %95
  %100 = load i32, ptr %9, align 4
  %101 = load ptr, ptr %8, align 8
  %102 = getelementptr inbounds %struct.mz_zip_archive, ptr %101, i32 0, i32 5
  store i32 %100, ptr %102, align 4
  br label %103

103:                                              ; preds = %95, %99
  store i32 0, ptr %14, align 4
  br label %131

104:                                              ; preds = %92, %65
  %105 = load i32, ptr %17, align 4
  %106 = and i32 %105, 65
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %117

108:                                              ; preds = %104
  %109 = load ptr, ptr %15, align 8
  store ptr %109, ptr %10, align 8
  store i32 5, ptr %11, align 4
  %110 = load ptr, ptr %10, align 8
  %111 = icmp ne ptr %110, null
  br i1 %111, label %112, label %116

112:                                              ; preds = %108
  %113 = load i32, ptr %11, align 4
  %114 = load ptr, ptr %10, align 8
  %115 = getelementptr inbounds %struct.mz_zip_archive, ptr %114, i32 0, i32 5
  store i32 %113, ptr %115, align 4
  br label %116

116:                                              ; preds = %108, %112
  store i32 0, ptr %14, align 4
  br label %131

117:                                              ; preds = %104
  %118 = load i32, ptr %17, align 4
  %119 = and i32 %118, 32
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %130

121:                                              ; preds = %117
  %122 = load ptr, ptr %15, align 8
  store ptr %122, ptr %12, align 8
  store i32 6, ptr %13, align 4
  %123 = load ptr, ptr %12, align 8
  %124 = icmp ne ptr %123, null
  br i1 %124, label %125, label %129

125:                                              ; preds = %121
  %126 = load i32, ptr %13, align 4
  %127 = load ptr, ptr %12, align 8
  %128 = getelementptr inbounds %struct.mz_zip_archive, ptr %127, i32 0, i32 5
  store i32 %126, ptr %128, align 4
  br label %129

129:                                              ; preds = %121, %125
  store i32 0, ptr %14, align 4
  br label %131

130:                                              ; preds = %117
  store i32 1, ptr %14, align 4
  br label %131

131:                                              ; preds = %130, %129, %116, %103, %64
  %132 = load i32, ptr %14, align 4
  ret i32 %132
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_is_file_a_directory(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  store ptr %0, ptr %9, align 8
  store i32 %1, ptr %10, align 4
  %15 = load ptr, ptr %9, align 8
  %16 = load i32, ptr %10, align 4
  store ptr %15, ptr %4, align 8
  store i32 %16, ptr %5, align 4
  %17 = load ptr, ptr %4, align 8
  %18 = icmp ne ptr %17, null
  br i1 %18, label %19, label %30

19:                                               ; preds = %2
  %20 = load ptr, ptr %4, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive, ptr %20, i32 0, i32 15
  %22 = load ptr, ptr %21, align 8
  %23 = icmp ne ptr %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %19
  %25 = load i32, ptr %5, align 4
  %26 = load ptr, ptr %4, align 8
  %27 = getelementptr inbounds %struct.mz_zip_archive, ptr %26, i32 0, i32 2
  %28 = load i32, ptr %27, align 8
  %29 = icmp uge i32 %25, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %24, %19, %2
  store ptr null, ptr %3, align 8
  br label %47

31:                                               ; preds = %24
  %32 = load ptr, ptr %4, align 8
  %33 = getelementptr inbounds %struct.mz_zip_archive, ptr %32, i32 0, i32 15
  %34 = load ptr, ptr %33, align 8
  %35 = load ptr, ptr %34, align 8
  %36 = load ptr, ptr %4, align 8
  %37 = getelementptr inbounds %struct.mz_zip_archive, ptr %36, i32 0, i32 15
  %38 = load ptr, ptr %37, align 8
  %39 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %38, i32 0, i32 1
  %40 = load ptr, ptr %39, align 8
  %41 = load i32, ptr %5, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i32, ptr %40, i64 %42
  %44 = load i32, ptr %43, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, ptr %35, i64 %45
  store ptr %46, ptr %3, align 8
  br label %47

47:                                               ; preds = %30, %31
  %48 = load ptr, ptr %3, align 8
  store ptr %48, ptr %14, align 8
  %49 = load ptr, ptr %14, align 8
  %50 = icmp ne ptr %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %47
  %52 = load ptr, ptr %9, align 8
  store ptr %52, ptr %6, align 8
  store i32 24, ptr %7, align 4
  %53 = load ptr, ptr %6, align 8
  %54 = icmp ne ptr %53, null
  br i1 %54, label %55, label %59

55:                                               ; preds = %51
  %56 = load i32, ptr %7, align 4
  %57 = load ptr, ptr %6, align 8
  %58 = getelementptr inbounds %struct.mz_zip_archive, ptr %57, i32 0, i32 5
  store i32 %56, ptr %58, align 4
  br label %59

59:                                               ; preds = %51, %55
  store i32 0, ptr %8, align 4
  br label %133

60:                                               ; preds = %47
  %61 = load ptr, ptr %14, align 8
  %62 = getelementptr inbounds i8, ptr %61, i64 28
  %63 = getelementptr inbounds i8, ptr %62, i64 0
  %64 = load i8, ptr %63, align 1
  %65 = zext i8 %64 to i32
  %66 = load ptr, ptr %14, align 8
  %67 = getelementptr inbounds i8, ptr %66, i64 28
  %68 = getelementptr inbounds i8, ptr %67, i64 1
  %69 = load i8, ptr %68, align 1
  %70 = zext i8 %69 to i32
  %71 = shl i32 %70, 8
  %72 = or i32 %65, %71
  store i32 %72, ptr %11, align 4
  %73 = load i32, ptr %11, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %87

75:                                               ; preds = %60
  %76 = load ptr, ptr %14, align 8
  %77 = getelementptr inbounds i8, ptr %76, i64 46
  %78 = load i32, ptr %11, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i8, ptr %77, i64 %79
  %81 = getelementptr inbounds i8, ptr %80, i64 -1
  %82 = load i8, ptr %81, align 1
  %83 = zext i8 %82 to i32
  %84 = icmp eq i32 %83, 47
  br i1 %84, label %85, label %86

85:                                               ; preds = %75
  store i32 1, ptr %8, align 4
  br label %133

86:                                               ; preds = %75
  br label %87

87:                                               ; preds = %86, %60
  %88 = load ptr, ptr %14, align 8
  %89 = getelementptr inbounds i8, ptr %88, i64 4
  %90 = getelementptr inbounds i8, ptr %89, i64 0
  %91 = load i8, ptr %90, align 1
  %92 = zext i8 %91 to i32
  %93 = load ptr, ptr %14, align 8
  %94 = getelementptr inbounds i8, ptr %93, i64 4
  %95 = getelementptr inbounds i8, ptr %94, i64 1
  %96 = load i8, ptr %95, align 1
  %97 = zext i8 %96 to i32
  %98 = shl i32 %97, 8
  %99 = or i32 %92, %98
  %100 = lshr i32 %99, 8
  store i32 %100, ptr %12, align 4
  %101 = load i32, ptr %12, align 4
  %102 = load ptr, ptr %14, align 8
  %103 = getelementptr inbounds i8, ptr %102, i64 38
  %104 = getelementptr inbounds i8, ptr %103, i64 0
  %105 = load i8, ptr %104, align 1
  %106 = zext i8 %105 to i32
  %107 = load ptr, ptr %14, align 8
  %108 = getelementptr inbounds i8, ptr %107, i64 38
  %109 = getelementptr inbounds i8, ptr %108, i64 1
  %110 = load i8, ptr %109, align 1
  %111 = zext i8 %110 to i32
  %112 = shl i32 %111, 8
  %113 = or i32 %106, %112
  %114 = load ptr, ptr %14, align 8
  %115 = getelementptr inbounds i8, ptr %114, i64 38
  %116 = getelementptr inbounds i8, ptr %115, i64 2
  %117 = load i8, ptr %116, align 1
  %118 = zext i8 %117 to i32
  %119 = shl i32 %118, 16
  %120 = or i32 %113, %119
  %121 = load ptr, ptr %14, align 8
  %122 = getelementptr inbounds i8, ptr %121, i64 38
  %123 = getelementptr inbounds i8, ptr %122, i64 3
  %124 = load i8, ptr %123, align 1
  %125 = zext i8 %124 to i32
  %126 = shl i32 %125, 24
  %127 = or i32 %120, %126
  store i32 %127, ptr %13, align 4
  %128 = load i32, ptr %13, align 4
  %129 = and i32 %128, 16
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %87
  store i32 1, ptr %8, align 4
  br label %133

132:                                              ; preds = %87
  store i32 0, ptr %8, align 4
  br label %133

133:                                              ; preds = %132, %131, %85, %59
  %134 = load i32, ptr %8, align 4
  ret i32 %134
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_locate_file(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store ptr %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store i32 %3, ptr %9, align 4
  %11 = load ptr, ptr %6, align 8
  %12 = load ptr, ptr %7, align 8
  %13 = load ptr, ptr %8, align 8
  %14 = load i32, ptr %9, align 4
  %15 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %11, ptr noundef %12, ptr noundef %13, i32 noundef %14, ptr noundef %10)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  store i32 -1, ptr %5, align 4
  br label %20

18:                                               ; preds = %4
  %19 = load i32, ptr %10, align 4
  store i32 %19, ptr %5, align 4
  br label %20

20:                                               ; preds = %18, %17
  %21 = load i32, ptr %5, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_locate_file_v2(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca ptr, align 8
  %19 = alloca i32, align 4
  %20 = alloca ptr, align 8
  %21 = alloca i32, align 4
  %22 = alloca ptr, align 8
  %23 = alloca i32, align 4
  %24 = alloca ptr, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca ptr, align 8
  %28 = alloca ptr, align 8
  %29 = alloca ptr, align 8
  %30 = alloca i32, align 4
  %31 = alloca ptr, align 8
  %32 = alloca i32, align 4
  %33 = alloca i64, align 8
  %34 = alloca i64, align 8
  %35 = alloca ptr, align 8
  %36 = alloca i32, align 4
  %37 = alloca ptr, align 8
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca ptr, align 8
  %41 = alloca i32, align 4
  store ptr %0, ptr %27, align 8
  store ptr %1, ptr %28, align 8
  store ptr %2, ptr %29, align 8
  store i32 %3, ptr %30, align 4
  store ptr %4, ptr %31, align 8
  %42 = load ptr, ptr %31, align 8
  %43 = icmp ne ptr %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %5
  %45 = load ptr, ptr %31, align 8
  store i32 0, ptr %45, align 4
  br label %46

46:                                               ; preds = %44, %5
  %47 = load ptr, ptr %27, align 8
  %48 = icmp ne ptr %47, null
  br i1 %48, label %49, label %57

49:                                               ; preds = %46
  %50 = load ptr, ptr %27, align 8
  %51 = getelementptr inbounds %struct.mz_zip_archive, ptr %50, i32 0, i32 15
  %52 = load ptr, ptr %51, align 8
  %53 = icmp ne ptr %52, null
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = load ptr, ptr %28, align 8
  %56 = icmp ne ptr %55, null
  br i1 %56, label %66, label %57

57:                                               ; preds = %54, %49, %46
  %58 = load ptr, ptr %27, align 8
  store ptr %58, ptr %18, align 8
  store i32 24, ptr %19, align 4
  %59 = load ptr, ptr %18, align 8
  %60 = icmp ne ptr %59, null
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = load i32, ptr %19, align 4
  %63 = load ptr, ptr %18, align 8
  %64 = getelementptr inbounds %struct.mz_zip_archive, ptr %63, i32 0, i32 5
  store i32 %62, ptr %64, align 4
  br label %65

65:                                               ; preds = %57, %61
  store i32 0, ptr %26, align 4
  br label %488

66:                                               ; preds = %54
  %67 = load ptr, ptr %27, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive, ptr %67, i32 0, i32 15
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %69, i32 0, i32 3
  %71 = load i32, ptr %70, align 8
  %72 = and i32 %71, 2048
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %99

74:                                               ; preds = %66
  %75 = load ptr, ptr %27, align 8
  %76 = getelementptr inbounds %struct.mz_zip_archive, ptr %75, i32 0, i32 3
  %77 = load i32, ptr %76, align 4
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %99

79:                                               ; preds = %74
  %80 = load i32, ptr %30, align 4
  %81 = and i32 %80, 768
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %99

83:                                               ; preds = %79
  %84 = load ptr, ptr %29, align 8
  %85 = icmp ne ptr %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = load ptr, ptr %27, align 8
  %88 = getelementptr inbounds %struct.mz_zip_archive, ptr %87, i32 0, i32 15
  %89 = load ptr, ptr %88, align 8
  %90 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %89, i32 0, i32 2
  %91 = getelementptr inbounds %struct.mz_zip_array, ptr %90, i32 0, i32 1
  %92 = load i64, ptr %91, align 8
  %93 = icmp ne i64 %92, 0
  br i1 %93, label %94, label %99

94:                                               ; preds = %86
  %95 = load ptr, ptr %27, align 8
  %96 = load ptr, ptr %28, align 8
  %97 = load ptr, ptr %31, align 8
  %98 = call i32 @mz_zip_locate_file_binary_search(ptr noundef %95, ptr noundef %96, ptr noundef %97)
  store i32 %98, ptr %26, align 4
  br label %488

99:                                               ; preds = %86, %83, %79, %74, %66
  %100 = load ptr, ptr %28, align 8
  %101 = call i64 @strlen(ptr noundef %100)
  store i64 %101, ptr %33, align 8
  %102 = load i64, ptr %33, align 8
  %103 = icmp ugt i64 %102, 65535
  br i1 %103, label %104, label %113

104:                                              ; preds = %99
  %105 = load ptr, ptr %27, align 8
  store ptr %105, ptr %20, align 8
  store i32 24, ptr %21, align 4
  %106 = load ptr, ptr %20, align 8
  %107 = icmp ne ptr %106, null
  br i1 %107, label %108, label %112

108:                                              ; preds = %104
  %109 = load i32, ptr %21, align 4
  %110 = load ptr, ptr %20, align 8
  %111 = getelementptr inbounds %struct.mz_zip_archive, ptr %110, i32 0, i32 5
  store i32 %109, ptr %111, align 4
  br label %112

112:                                              ; preds = %104, %108
  store i32 0, ptr %26, align 4
  br label %488

113:                                              ; preds = %99
  %114 = load ptr, ptr %29, align 8
  %115 = icmp ne ptr %114, null
  br i1 %115, label %116, label %119

116:                                              ; preds = %113
  %117 = load ptr, ptr %29, align 8
  %118 = call i64 @strlen(ptr noundef %117)
  br label %120

119:                                              ; preds = %113
  br label %120

120:                                              ; preds = %119, %116
  %121 = phi i64 [ %118, %116 ], [ 0, %119 ]
  store i64 %121, ptr %34, align 8
  %122 = load i64, ptr %34, align 8
  %123 = icmp ugt i64 %122, 65535
  br i1 %123, label %124, label %133

124:                                              ; preds = %120
  %125 = load ptr, ptr %27, align 8
  store ptr %125, ptr %22, align 8
  store i32 24, ptr %23, align 4
  %126 = load ptr, ptr %22, align 8
  %127 = icmp ne ptr %126, null
  br i1 %127, label %128, label %132

128:                                              ; preds = %124
  %129 = load i32, ptr %23, align 4
  %130 = load ptr, ptr %22, align 8
  %131 = getelementptr inbounds %struct.mz_zip_archive, ptr %130, i32 0, i32 5
  store i32 %129, ptr %131, align 4
  br label %132

132:                                              ; preds = %124, %128
  store i32 0, ptr %26, align 4
  br label %488

133:                                              ; preds = %120
  store i32 0, ptr %32, align 4
  br label %134

134:                                              ; preds = %476, %133
  %135 = load i32, ptr %32, align 4
  %136 = load ptr, ptr %27, align 8
  %137 = getelementptr inbounds %struct.mz_zip_archive, ptr %136, i32 0, i32 2
  %138 = load i32, ptr %137, align 8
  %139 = icmp ult i32 %135, %138
  br i1 %139, label %140, label %479

140:                                              ; preds = %134
  %141 = load ptr, ptr %27, align 8
  %142 = getelementptr inbounds %struct.mz_zip_archive, ptr %141, i32 0, i32 15
  %143 = load ptr, ptr %142, align 8
  %144 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %143, i32 0, i32 0
  %145 = getelementptr inbounds %struct.mz_zip_array, ptr %144, i32 0, i32 0
  %146 = load ptr, ptr %145, align 8
  %147 = load ptr, ptr %27, align 8
  %148 = getelementptr inbounds %struct.mz_zip_archive, ptr %147, i32 0, i32 15
  %149 = load ptr, ptr %148, align 8
  %150 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %149, i32 0, i32 1
  %151 = getelementptr inbounds %struct.mz_zip_array, ptr %150, i32 0, i32 0
  %152 = load ptr, ptr %151, align 8
  %153 = load i32, ptr %32, align 4
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds i32, ptr %152, i64 %154
  %156 = load i32, ptr %155, align 4
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds i8, ptr %146, i64 %157
  store ptr %158, ptr %35, align 8
  %159 = load ptr, ptr %35, align 8
  %160 = getelementptr inbounds i8, ptr %159, i64 28
  %161 = getelementptr inbounds i8, ptr %160, i64 0
  %162 = load i8, ptr %161, align 1
  %163 = zext i8 %162 to i32
  %164 = load ptr, ptr %35, align 8
  %165 = getelementptr inbounds i8, ptr %164, i64 28
  %166 = getelementptr inbounds i8, ptr %165, i64 1
  %167 = load i8, ptr %166, align 1
  %168 = zext i8 %167 to i32
  %169 = shl i32 %168, 8
  %170 = or i32 %163, %169
  store i32 %170, ptr %36, align 4
  %171 = load ptr, ptr %35, align 8
  %172 = getelementptr inbounds i8, ptr %171, i64 46
  store ptr %172, ptr %37, align 8
  %173 = load i32, ptr %36, align 4
  %174 = zext i32 %173 to i64
  %175 = load i64, ptr %33, align 8
  %176 = icmp ult i64 %174, %175
  br i1 %176, label %177, label %178

177:                                              ; preds = %140
  br label %476

178:                                              ; preds = %140
  %179 = load i64, ptr %34, align 8
  %180 = icmp ne i64 %179, 0
  br i1 %180, label %181, label %316

181:                                              ; preds = %178
  %182 = load ptr, ptr %35, align 8
  %183 = getelementptr inbounds i8, ptr %182, i64 30
  %184 = getelementptr inbounds i8, ptr %183, i64 0
  %185 = load i8, ptr %184, align 1
  %186 = zext i8 %185 to i32
  %187 = load ptr, ptr %35, align 8
  %188 = getelementptr inbounds i8, ptr %187, i64 30
  %189 = getelementptr inbounds i8, ptr %188, i64 1
  %190 = load i8, ptr %189, align 1
  %191 = zext i8 %190 to i32
  %192 = shl i32 %191, 8
  %193 = or i32 %186, %192
  store i32 %193, ptr %38, align 4
  %194 = load ptr, ptr %35, align 8
  %195 = getelementptr inbounds i8, ptr %194, i64 32
  %196 = getelementptr inbounds i8, ptr %195, i64 0
  %197 = load i8, ptr %196, align 1
  %198 = zext i8 %197 to i32
  %199 = load ptr, ptr %35, align 8
  %200 = getelementptr inbounds i8, ptr %199, i64 32
  %201 = getelementptr inbounds i8, ptr %200, i64 1
  %202 = load i8, ptr %201, align 1
  %203 = zext i8 %202 to i32
  %204 = shl i32 %203, 8
  %205 = or i32 %198, %204
  store i32 %205, ptr %39, align 4
  %206 = load ptr, ptr %37, align 8
  %207 = load i32, ptr %36, align 4
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds i8, ptr %206, i64 %208
  %210 = load i32, ptr %38, align 4
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds i8, ptr %209, i64 %211
  store ptr %212, ptr %40, align 8
  %213 = load i32, ptr %39, align 4
  %214 = zext i32 %213 to i64
  %215 = load i64, ptr %34, align 8
  %216 = icmp ne i64 %214, %215
  br i1 %216, label %314, label %217

217:                                              ; preds = %181
  %218 = load ptr, ptr %29, align 8
  %219 = load ptr, ptr %40, align 8
  %220 = load i32, ptr %39, align 4
  %221 = load i32, ptr %30, align 4
  store ptr %218, ptr %7, align 8
  store ptr %219, ptr %8, align 8
  store i32 %220, ptr %9, align 4
  store i32 %221, ptr %10, align 4
  %222 = load i32, ptr %10, align 4
  %223 = and i32 %222, 256
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %225, label %233

225:                                              ; preds = %217
  %226 = load ptr, ptr %7, align 8
  %227 = load ptr, ptr %8, align 8
  %228 = load i32, ptr %9, align 4
  %229 = zext i32 %228 to i64
  %230 = call i32 @memcmp(ptr noundef %226, ptr noundef %227, i64 noundef %229) #11
  %231 = icmp eq i32 0, %230
  %232 = zext i1 %231 to i32
  store i32 %232, ptr %6, align 4
  br label %311

233:                                              ; preds = %217
  store i32 0, ptr %11, align 4
  br label %234

234:                                              ; preds = %307, %233
  %235 = load i32, ptr %11, align 4
  %236 = load i32, ptr %9, align 4
  %237 = icmp ult i32 %235, %236
  br i1 %237, label %238, label %310

238:                                              ; preds = %234
  %239 = load ptr, ptr %7, align 8
  %240 = load i32, ptr %11, align 4
  %241 = zext i32 %240 to i64
  %242 = getelementptr inbounds i8, ptr %239, i64 %241
  %243 = load i8, ptr %242, align 1
  %244 = sext i8 %243 to i32
  %245 = icmp sge i32 %244, 65
  br i1 %245, label %246, label %263

246:                                              ; preds = %238
  %247 = load ptr, ptr %7, align 8
  %248 = load i32, ptr %11, align 4
  %249 = zext i32 %248 to i64
  %250 = getelementptr inbounds i8, ptr %247, i64 %249
  %251 = load i8, ptr %250, align 1
  %252 = sext i8 %251 to i32
  %253 = icmp sle i32 %252, 90
  br i1 %253, label %254, label %263

254:                                              ; preds = %246
  %255 = load ptr, ptr %7, align 8
  %256 = load i32, ptr %11, align 4
  %257 = zext i32 %256 to i64
  %258 = getelementptr inbounds i8, ptr %255, i64 %257
  %259 = load i8, ptr %258, align 1
  %260 = sext i8 %259 to i32
  %261 = sub nsw i32 %260, 65
  %262 = add nsw i32 %261, 97
  br label %270

263:                                              ; preds = %246, %238
  %264 = load ptr, ptr %7, align 8
  %265 = load i32, ptr %11, align 4
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds i8, ptr %264, i64 %266
  %268 = load i8, ptr %267, align 1
  %269 = sext i8 %268 to i32
  br label %270

270:                                              ; preds = %263, %254
  %271 = phi i32 [ %262, %254 ], [ %269, %263 ]
  %272 = load ptr, ptr %8, align 8
  %273 = load i32, ptr %11, align 4
  %274 = zext i32 %273 to i64
  %275 = getelementptr inbounds i8, ptr %272, i64 %274
  %276 = load i8, ptr %275, align 1
  %277 = sext i8 %276 to i32
  %278 = icmp sge i32 %277, 65
  br i1 %278, label %279, label %296

279:                                              ; preds = %270
  %280 = load ptr, ptr %8, align 8
  %281 = load i32, ptr %11, align 4
  %282 = zext i32 %281 to i64
  %283 = getelementptr inbounds i8, ptr %280, i64 %282
  %284 = load i8, ptr %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp sle i32 %285, 90
  br i1 %286, label %287, label %296

287:                                              ; preds = %279
  %288 = load ptr, ptr %8, align 8
  %289 = load i32, ptr %11, align 4
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds i8, ptr %288, i64 %290
  %292 = load i8, ptr %291, align 1
  %293 = sext i8 %292 to i32
  %294 = sub nsw i32 %293, 65
  %295 = add nsw i32 %294, 97
  br label %303

296:                                              ; preds = %279, %270
  %297 = load ptr, ptr %8, align 8
  %298 = load i32, ptr %11, align 4
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds i8, ptr %297, i64 %299
  %301 = load i8, ptr %300, align 1
  %302 = sext i8 %301 to i32
  br label %303

303:                                              ; preds = %296, %287
  %304 = phi i32 [ %295, %287 ], [ %302, %296 ]
  %305 = icmp ne i32 %271, %304
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  store i32 0, ptr %6, align 4
  br label %311

307:                                              ; preds = %303
  %308 = load i32, ptr %11, align 4
  %309 = add i32 %308, 1
  store i32 %309, ptr %11, align 4
  br label %234, !llvm.loop !112

310:                                              ; preds = %234
  store i32 1, ptr %6, align 4
  br label %311

311:                                              ; preds = %225, %306, %310
  %312 = load i32, ptr %6, align 4
  %313 = icmp ne i32 %312, 0
  br i1 %313, label %315, label %314

314:                                              ; preds = %311, %181
  br label %476

315:                                              ; preds = %311
  br label %316

316:                                              ; preds = %315, %178
  %317 = load i32, ptr %30, align 4
  %318 = and i32 %317, 512
  %319 = icmp ne i32 %318, 0
  br i1 %319, label %320, label %366

320:                                              ; preds = %316
  %321 = load i32, ptr %36, align 4
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %323, label %366

323:                                              ; preds = %320
  %324 = load i32, ptr %36, align 4
  %325 = sub i32 %324, 1
  store i32 %325, ptr %41, align 4
  br label %326

326:                                              ; preds = %352, %323
  %327 = load ptr, ptr %37, align 8
  %328 = load i32, ptr %41, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i8, ptr %327, i64 %329
  %331 = load i8, ptr %330, align 1
  %332 = sext i8 %331 to i32
  %333 = icmp eq i32 %332, 47
  br i1 %333, label %350, label %334

334:                                              ; preds = %326
  %335 = load ptr, ptr %37, align 8
  %336 = load i32, ptr %41, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds i8, ptr %335, i64 %337
  %339 = load i8, ptr %338, align 1
  %340 = sext i8 %339 to i32
  %341 = icmp eq i32 %340, 92
  br i1 %341, label %350, label %342

342:                                              ; preds = %334
  %343 = load ptr, ptr %37, align 8
  %344 = load i32, ptr %41, align 4
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds i8, ptr %343, i64 %345
  %347 = load i8, ptr %346, align 1
  %348 = sext i8 %347 to i32
  %349 = icmp eq i32 %348, 58
  br i1 %349, label %350, label %351

350:                                              ; preds = %342, %334, %326
  br label %356

351:                                              ; preds = %342
  br label %352

352:                                              ; preds = %351
  %353 = load i32, ptr %41, align 4
  %354 = add nsw i32 %353, -1
  store i32 %354, ptr %41, align 4
  %355 = icmp sge i32 %354, 0
  br i1 %355, label %326, label %356, !llvm.loop !113

356:                                              ; preds = %352, %350
  %357 = load i32, ptr %41, align 4
  %358 = add nsw i32 %357, 1
  store i32 %358, ptr %41, align 4
  %359 = load i32, ptr %41, align 4
  %360 = load ptr, ptr %37, align 8
  %361 = sext i32 %359 to i64
  %362 = getelementptr inbounds i8, ptr %360, i64 %361
  store ptr %362, ptr %37, align 8
  %363 = load i32, ptr %41, align 4
  %364 = load i32, ptr %36, align 4
  %365 = sub i32 %364, %363
  store i32 %365, ptr %36, align 4
  br label %366

366:                                              ; preds = %356, %320, %316
  %367 = load i32, ptr %36, align 4
  %368 = zext i32 %367 to i64
  %369 = load i64, ptr %33, align 8
  %370 = icmp eq i64 %368, %369
  br i1 %370, label %371, label %475

371:                                              ; preds = %366
  %372 = load ptr, ptr %28, align 8
  %373 = load ptr, ptr %37, align 8
  %374 = load i32, ptr %36, align 4
  %375 = load i32, ptr %30, align 4
  store ptr %372, ptr %13, align 8
  store ptr %373, ptr %14, align 8
  store i32 %374, ptr %15, align 4
  store i32 %375, ptr %16, align 4
  %376 = load i32, ptr %16, align 4
  %377 = and i32 %376, 256
  %378 = icmp ne i32 %377, 0
  br i1 %378, label %379, label %387

379:                                              ; preds = %371
  %380 = load ptr, ptr %13, align 8
  %381 = load ptr, ptr %14, align 8
  %382 = load i32, ptr %15, align 4
  %383 = zext i32 %382 to i64
  %384 = call i32 @memcmp(ptr noundef %380, ptr noundef %381, i64 noundef %383) #11
  %385 = icmp eq i32 0, %384
  %386 = zext i1 %385 to i32
  store i32 %386, ptr %12, align 4
  br label %465

387:                                              ; preds = %371
  store i32 0, ptr %17, align 4
  br label %388

388:                                              ; preds = %461, %387
  %389 = load i32, ptr %17, align 4
  %390 = load i32, ptr %15, align 4
  %391 = icmp ult i32 %389, %390
  br i1 %391, label %392, label %464

392:                                              ; preds = %388
  %393 = load ptr, ptr %13, align 8
  %394 = load i32, ptr %17, align 4
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds i8, ptr %393, i64 %395
  %397 = load i8, ptr %396, align 1
  %398 = sext i8 %397 to i32
  %399 = icmp sge i32 %398, 65
  br i1 %399, label %400, label %417

400:                                              ; preds = %392
  %401 = load ptr, ptr %13, align 8
  %402 = load i32, ptr %17, align 4
  %403 = zext i32 %402 to i64
  %404 = getelementptr inbounds i8, ptr %401, i64 %403
  %405 = load i8, ptr %404, align 1
  %406 = sext i8 %405 to i32
  %407 = icmp sle i32 %406, 90
  br i1 %407, label %408, label %417

408:                                              ; preds = %400
  %409 = load ptr, ptr %13, align 8
  %410 = load i32, ptr %17, align 4
  %411 = zext i32 %410 to i64
  %412 = getelementptr inbounds i8, ptr %409, i64 %411
  %413 = load i8, ptr %412, align 1
  %414 = sext i8 %413 to i32
  %415 = sub nsw i32 %414, 65
  %416 = add nsw i32 %415, 97
  br label %424

417:                                              ; preds = %400, %392
  %418 = load ptr, ptr %13, align 8
  %419 = load i32, ptr %17, align 4
  %420 = zext i32 %419 to i64
  %421 = getelementptr inbounds i8, ptr %418, i64 %420
  %422 = load i8, ptr %421, align 1
  %423 = sext i8 %422 to i32
  br label %424

424:                                              ; preds = %417, %408
  %425 = phi i32 [ %416, %408 ], [ %423, %417 ]
  %426 = load ptr, ptr %14, align 8
  %427 = load i32, ptr %17, align 4
  %428 = zext i32 %427 to i64
  %429 = getelementptr inbounds i8, ptr %426, i64 %428
  %430 = load i8, ptr %429, align 1
  %431 = sext i8 %430 to i32
  %432 = icmp sge i32 %431, 65
  br i1 %432, label %433, label %450

433:                                              ; preds = %424
  %434 = load ptr, ptr %14, align 8
  %435 = load i32, ptr %17, align 4
  %436 = zext i32 %435 to i64
  %437 = getelementptr inbounds i8, ptr %434, i64 %436
  %438 = load i8, ptr %437, align 1
  %439 = sext i8 %438 to i32
  %440 = icmp sle i32 %439, 90
  br i1 %440, label %441, label %450

441:                                              ; preds = %433
  %442 = load ptr, ptr %14, align 8
  %443 = load i32, ptr %17, align 4
  %444 = zext i32 %443 to i64
  %445 = getelementptr inbounds i8, ptr %442, i64 %444
  %446 = load i8, ptr %445, align 1
  %447 = sext i8 %446 to i32
  %448 = sub nsw i32 %447, 65
  %449 = add nsw i32 %448, 97
  br label %457

450:                                              ; preds = %433, %424
  %451 = load ptr, ptr %14, align 8
  %452 = load i32, ptr %17, align 4
  %453 = zext i32 %452 to i64
  %454 = getelementptr inbounds i8, ptr %451, i64 %453
  %455 = load i8, ptr %454, align 1
  %456 = sext i8 %455 to i32
  br label %457

457:                                              ; preds = %450, %441
  %458 = phi i32 [ %449, %441 ], [ %456, %450 ]
  %459 = icmp ne i32 %425, %458
  br i1 %459, label %460, label %461

460:                                              ; preds = %457
  store i32 0, ptr %12, align 4
  br label %465

461:                                              ; preds = %457
  %462 = load i32, ptr %17, align 4
  %463 = add i32 %462, 1
  store i32 %463, ptr %17, align 4
  br label %388, !llvm.loop !112

464:                                              ; preds = %388
  store i32 1, ptr %12, align 4
  br label %465

465:                                              ; preds = %379, %460, %464
  %466 = load i32, ptr %12, align 4
  %467 = icmp ne i32 %466, 0
  br i1 %467, label %468, label %475

468:                                              ; preds = %465
  %469 = load ptr, ptr %31, align 8
  %470 = icmp ne ptr %469, null
  br i1 %470, label %471, label %474

471:                                              ; preds = %468
  %472 = load i32, ptr %32, align 4
  %473 = load ptr, ptr %31, align 8
  store i32 %472, ptr %473, align 4
  br label %474

474:                                              ; preds = %471, %468
  store i32 1, ptr %26, align 4
  br label %488

475:                                              ; preds = %465, %366
  br label %476

476:                                              ; preds = %475, %314, %177
  %477 = load i32, ptr %32, align 4
  %478 = add i32 %477, 1
  store i32 %478, ptr %32, align 4
  br label %134, !llvm.loop !114

479:                                              ; preds = %134
  %480 = load ptr, ptr %27, align 8
  store ptr %480, ptr %24, align 8
  store i32 28, ptr %25, align 4
  %481 = load ptr, ptr %24, align 8
  %482 = icmp ne ptr %481, null
  br i1 %482, label %483, label %487

483:                                              ; preds = %479
  %484 = load i32, ptr %25, align 4
  %485 = load ptr, ptr %24, align 8
  %486 = getelementptr inbounds %struct.mz_zip_archive, ptr %485, i32 0, i32 5
  store i32 %484, ptr %486, align 4
  br label %487

487:                                              ; preds = %479, %483
  store i32 0, ptr %26, align 4
  br label %488

488:                                              ; preds = %487, %474, %132, %112, %94, %65
  %489 = load i32, ptr %26, align 4
  ret i32 %489
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_locate_file_binary_search(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  store ptr %0, ptr %17, align 8
  store ptr %1, ptr %18, align 8
  store ptr %2, ptr %19, align 8
  %31 = load ptr, ptr %17, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive, ptr %31, i32 0, i32 15
  %33 = load ptr, ptr %32, align 8
  store ptr %33, ptr %20, align 8
  %34 = load ptr, ptr %20, align 8
  %35 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %34, i32 0, i32 1
  store ptr %35, ptr %21, align 8
  %36 = load ptr, ptr %20, align 8
  %37 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %36, i32 0, i32 0
  store ptr %37, ptr %22, align 8
  %38 = load ptr, ptr %20, align 8
  %39 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %38, i32 0, i32 2
  %40 = getelementptr inbounds %struct.mz_zip_array, ptr %39, i32 0, i32 0
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds i32, ptr %41, i64 0
  store ptr %42, ptr %23, align 8
  %43 = load ptr, ptr %17, align 8
  %44 = getelementptr inbounds %struct.mz_zip_archive, ptr %43, i32 0, i32 2
  %45 = load i32, ptr %44, align 8
  store i32 %45, ptr %24, align 4
  %46 = load ptr, ptr %18, align 8
  %47 = call i64 @strlen(ptr noundef %46)
  %48 = trunc i64 %47 to i32
  store i32 %48, ptr %25, align 4
  %49 = load ptr, ptr %19, align 8
  %50 = icmp ne ptr %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %3
  %52 = load ptr, ptr %19, align 8
  store i32 0, ptr %52, align 4
  br label %53

53:                                               ; preds = %51, %3
  %54 = load i32, ptr %24, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %212

56:                                               ; preds = %53
  store i64 0, ptr %26, align 8
  %57 = load i32, ptr %24, align 4
  %58 = zext i32 %57 to i64
  %59 = sub nsw i64 %58, 1
  store i64 %59, ptr %27, align 8
  br label %60

60:                                               ; preds = %210, %56
  %61 = load i64, ptr %26, align 8
  %62 = load i64, ptr %27, align 8
  %63 = icmp sle i64 %61, %62
  br i1 %63, label %64, label %211

64:                                               ; preds = %60
  %65 = load i64, ptr %26, align 8
  %66 = load i64, ptr %27, align 8
  %67 = load i64, ptr %26, align 8
  %68 = sub nsw i64 %66, %67
  %69 = ashr i64 %68, 1
  %70 = add nsw i64 %65, %69
  store i64 %70, ptr %28, align 8
  %71 = load ptr, ptr %23, align 8
  %72 = load i64, ptr %28, align 8
  %73 = trunc i64 %72 to i32
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %71, i64 %74
  %76 = load i32, ptr %75, align 4
  store i32 %76, ptr %29, align 4
  %77 = load ptr, ptr %22, align 8
  %78 = load ptr, ptr %21, align 8
  %79 = load i32, ptr %29, align 4
  %80 = load ptr, ptr %18, align 8
  %81 = load i32, ptr %25, align 4
  store ptr %77, ptr %4, align 8
  store ptr %78, ptr %5, align 8
  store i32 %79, ptr %6, align 4
  store ptr %80, ptr %7, align 8
  store i32 %81, ptr %8, align 4
  %82 = load ptr, ptr %4, align 8
  %83 = load ptr, ptr %82, align 8
  %84 = load ptr, ptr %5, align 8
  %85 = load ptr, ptr %84, align 8
  %86 = load i32, ptr %6, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %85, i64 %87
  %89 = load i32, ptr %88, align 4
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds i8, ptr %83, i64 %90
  store ptr %91, ptr %9, align 8
  %92 = load ptr, ptr %9, align 8
  %93 = getelementptr inbounds i8, ptr %92, i64 28
  %94 = load i8, ptr %93, align 1
  %95 = zext i8 %94 to i32
  %96 = load ptr, ptr %9, align 8
  %97 = getelementptr inbounds i8, ptr %96, i64 28
  %98 = getelementptr inbounds i8, ptr %97, i64 1
  %99 = load i8, ptr %98, align 1
  %100 = zext i8 %99 to i32
  %101 = shl i32 %100, 8
  %102 = or i32 %95, %101
  store i32 %102, ptr %11, align 4
  store i8 0, ptr %12, align 1
  store i8 0, ptr %13, align 1
  %103 = load ptr, ptr %9, align 8
  %104 = getelementptr inbounds i8, ptr %103, i64 46
  store ptr %104, ptr %9, align 8
  %105 = load ptr, ptr %9, align 8
  %106 = load i32, ptr %11, align 4
  %107 = load i32, ptr %8, align 4
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %109, label %111

109:                                              ; preds = %64
  %110 = load i32, ptr %11, align 4
  br label %113

111:                                              ; preds = %64
  %112 = load i32, ptr %8, align 4
  br label %113

113:                                              ; preds = %111, %109
  %114 = phi i32 [ %110, %109 ], [ %112, %111 ]
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds i8, ptr %105, i64 %115
  store ptr %116, ptr %10, align 8
  br label %117

117:                                              ; preds = %170, %113
  %118 = load ptr, ptr %9, align 8
  %119 = load ptr, ptr %10, align 8
  %120 = icmp ult ptr %118, %119
  br i1 %120, label %121, label %175

121:                                              ; preds = %117
  %122 = load ptr, ptr %9, align 8
  %123 = load i8, ptr %122, align 1
  %124 = zext i8 %123 to i32
  %125 = icmp sge i32 %124, 65
  br i1 %125, label %126, label %137

126:                                              ; preds = %121
  %127 = load ptr, ptr %9, align 8
  %128 = load i8, ptr %127, align 1
  %129 = zext i8 %128 to i32
  %130 = icmp sle i32 %129, 90
  br i1 %130, label %131, label %137

131:                                              ; preds = %126
  %132 = load ptr, ptr %9, align 8
  %133 = load i8, ptr %132, align 1
  %134 = zext i8 %133 to i32
  %135 = sub nsw i32 %134, 65
  %136 = add nsw i32 %135, 97
  br label %141

137:                                              ; preds = %126, %121
  %138 = load ptr, ptr %9, align 8
  %139 = load i8, ptr %138, align 1
  %140 = zext i8 %139 to i32
  br label %141

141:                                              ; preds = %137, %131
  %142 = phi i32 [ %136, %131 ], [ %140, %137 ]
  %143 = trunc i32 %142 to i8
  store i8 %143, ptr %12, align 1
  %144 = zext i8 %143 to i32
  %145 = load ptr, ptr %7, align 8
  %146 = load i8, ptr %145, align 1
  %147 = sext i8 %146 to i32
  %148 = icmp sge i32 %147, 65
  br i1 %148, label %149, label %160

149:                                              ; preds = %141
  %150 = load ptr, ptr %7, align 8
  %151 = load i8, ptr %150, align 1
  %152 = sext i8 %151 to i32
  %153 = icmp sle i32 %152, 90
  br i1 %153, label %154, label %160

154:                                              ; preds = %149
  %155 = load ptr, ptr %7, align 8
  %156 = load i8, ptr %155, align 1
  %157 = sext i8 %156 to i32
  %158 = sub nsw i32 %157, 65
  %159 = add nsw i32 %158, 97
  br label %164

160:                                              ; preds = %149, %141
  %161 = load ptr, ptr %7, align 8
  %162 = load i8, ptr %161, align 1
  %163 = sext i8 %162 to i32
  br label %164

164:                                              ; preds = %160, %154
  %165 = phi i32 [ %159, %154 ], [ %163, %160 ]
  %166 = trunc i32 %165 to i8
  store i8 %166, ptr %13, align 1
  %167 = zext i8 %166 to i32
  %168 = icmp ne i32 %144, %167
  br i1 %168, label %169, label %170

169:                                              ; preds = %164
  br label %175

170:                                              ; preds = %164
  %171 = load ptr, ptr %9, align 8
  %172 = getelementptr inbounds i8, ptr %171, i32 1
  store ptr %172, ptr %9, align 8
  %173 = load ptr, ptr %7, align 8
  %174 = getelementptr inbounds i8, ptr %173, i32 1
  store ptr %174, ptr %7, align 8
  br label %117, !llvm.loop !115

175:                                              ; preds = %169, %117
  %176 = load ptr, ptr %9, align 8
  %177 = load ptr, ptr %10, align 8
  %178 = icmp eq ptr %176, %177
  br i1 %178, label %179, label %183

179:                                              ; preds = %175
  %180 = load i32, ptr %11, align 4
  %181 = load i32, ptr %8, align 4
  %182 = sub i32 %180, %181
  br label %189

183:                                              ; preds = %175
  %184 = load i8, ptr %12, align 1
  %185 = zext i8 %184 to i32
  %186 = load i8, ptr %13, align 1
  %187 = zext i8 %186 to i32
  %188 = sub nsw i32 %185, %187
  br label %189

189:                                              ; preds = %179, %183
  %190 = phi i32 [ %182, %179 ], [ %188, %183 ]
  store i32 %190, ptr %30, align 4
  %191 = load i32, ptr %30, align 4
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %200, label %193

193:                                              ; preds = %189
  %194 = load ptr, ptr %19, align 8
  %195 = icmp ne ptr %194, null
  br i1 %195, label %196, label %199

196:                                              ; preds = %193
  %197 = load i32, ptr %29, align 4
  %198 = load ptr, ptr %19, align 8
  store i32 %197, ptr %198, align 4
  br label %199

199:                                              ; preds = %196, %193
  store i32 1, ptr %16, align 4
  br label %221

200:                                              ; preds = %189
  %201 = load i32, ptr %30, align 4
  %202 = icmp slt i32 %201, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %200
  %204 = load i64, ptr %28, align 8
  %205 = add nsw i64 %204, 1
  store i64 %205, ptr %26, align 8
  br label %209

206:                                              ; preds = %200
  %207 = load i64, ptr %28, align 8
  %208 = sub nsw i64 %207, 1
  store i64 %208, ptr %27, align 8
  br label %209

209:                                              ; preds = %206, %203
  br label %210

210:                                              ; preds = %209
  br label %60, !llvm.loop !116

211:                                              ; preds = %60
  br label %212

212:                                              ; preds = %211, %53
  %213 = load ptr, ptr %17, align 8
  store ptr %213, ptr %14, align 8
  store i32 28, ptr %15, align 4
  %214 = load ptr, ptr %14, align 8
  %215 = icmp ne ptr %214, null
  br i1 %215, label %216, label %220

216:                                              ; preds = %212
  %217 = load i32, ptr %15, align 4
  %218 = load ptr, ptr %14, align 8
  %219 = getelementptr inbounds %struct.mz_zip_archive, ptr %218, i32 0, i32 5
  store i32 %217, ptr %219, align 4
  br label %220

220:                                              ; preds = %212, %216
  store i32 0, ptr %16, align 4
  br label %221

221:                                              ; preds = %220, %199
  %222 = load i32, ptr %16, align 4
  ret i32 %222
}

declare i64 @strlen(ptr noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_extract_to_mem_no_alloc(ptr noundef %0, i32 noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4, ptr noundef %5, i64 noundef %6) #0 {
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  store ptr %0, ptr %8, align 8
  store i32 %1, ptr %9, align 4
  store ptr %2, ptr %10, align 8
  store i64 %3, ptr %11, align 8
  store i32 %4, ptr %12, align 4
  store ptr %5, ptr %13, align 8
  store i64 %6, ptr %14, align 8
  %15 = load ptr, ptr %8, align 8
  %16 = load i32, ptr %9, align 4
  %17 = load ptr, ptr %10, align 8
  %18 = load i64, ptr %11, align 8
  %19 = load i32, ptr %12, align 4
  %20 = load ptr, ptr %13, align 8
  %21 = load i64, ptr %14, align 8
  %22 = call i32 @mz_zip_reader_extract_to_mem_no_alloc1(ptr noundef %15, i32 noundef %16, ptr noundef %17, i64 noundef %18, i32 noundef %19, ptr noundef %20, i64 noundef %21, ptr noundef null)
  ret i32 %22
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_reader_extract_to_mem_no_alloc1(ptr noundef %0, i32 noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4, ptr noundef %5, i64 noundef %6, ptr noundef %7) #0 {
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  %15 = alloca ptr, align 8
  %16 = alloca i32, align 4
  %17 = alloca ptr, align 8
  %18 = alloca i32, align 4
  %19 = alloca ptr, align 8
  %20 = alloca i32, align 4
  %21 = alloca ptr, align 8
  %22 = alloca i32, align 4
  %23 = alloca ptr, align 8
  %24 = alloca i32, align 4
  %25 = alloca ptr, align 8
  %26 = alloca i32, align 4
  %27 = alloca ptr, align 8
  %28 = alloca i32, align 4
  %29 = alloca ptr, align 8
  %30 = alloca i32, align 4
  %31 = alloca ptr, align 8
  %32 = alloca i32, align 4
  %33 = alloca ptr, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca ptr, align 8
  %37 = alloca i32, align 4
  %38 = alloca ptr, align 8
  %39 = alloca i64, align 8
  %40 = alloca i32, align 4
  %41 = alloca ptr, align 8
  %42 = alloca i64, align 8
  %43 = alloca ptr, align 8
  %44 = alloca i32, align 4
  %45 = alloca i64, align 8
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  %51 = alloca i64, align 8
  %52 = alloca %struct.mz_zip_archive_file_stat, align 8
  %53 = alloca ptr, align 8
  %54 = alloca [8 x i32], align 16
  %55 = alloca ptr, align 8
  %56 = alloca %struct.tinfl_decompressor_tag, align 8
  %57 = alloca i64, align 8
  %58 = alloca i64, align 8
  store ptr %0, ptr %36, align 8
  store i32 %1, ptr %37, align 4
  store ptr %2, ptr %38, align 8
  store i64 %3, ptr %39, align 8
  store i32 %4, ptr %40, align 4
  store ptr %5, ptr %41, align 8
  store i64 %6, ptr %42, align 8
  store ptr %7, ptr %43, align 8
  store i32 0, ptr %44, align 4
  store i64 0, ptr %48, align 8
  store i64 0, ptr %50, align 8
  %59 = getelementptr inbounds [8 x i32], ptr %54, i64 0, i64 0
  store ptr %59, ptr %55, align 8
  %60 = load ptr, ptr %36, align 8
  %61 = icmp ne ptr %60, null
  br i1 %61, label %62, label %84

62:                                               ; preds = %8
  %63 = load ptr, ptr %36, align 8
  %64 = getelementptr inbounds %struct.mz_zip_archive, ptr %63, i32 0, i32 15
  %65 = load ptr, ptr %64, align 8
  %66 = icmp ne ptr %65, null
  br i1 %66, label %67, label %84

67:                                               ; preds = %62
  %68 = load i64, ptr %39, align 8
  %69 = icmp ne i64 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %67
  %71 = load ptr, ptr %38, align 8
  %72 = icmp ne ptr %71, null
  br i1 %72, label %73, label %84

73:                                               ; preds = %70, %67
  %74 = load i64, ptr %42, align 8
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %73
  %77 = load ptr, ptr %41, align 8
  %78 = icmp ne ptr %77, null
  br i1 %78, label %79, label %84

79:                                               ; preds = %76, %73
  %80 = load ptr, ptr %36, align 8
  %81 = getelementptr inbounds %struct.mz_zip_archive, ptr %80, i32 0, i32 11
  %82 = load ptr, ptr %81, align 8
  %83 = icmp ne ptr %82, null
  br i1 %83, label %93, label %84

84:                                               ; preds = %79, %76, %70, %62, %8
  %85 = load ptr, ptr %36, align 8
  store ptr %85, ptr %9, align 8
  store i32 24, ptr %10, align 4
  %86 = load ptr, ptr %9, align 8
  %87 = icmp ne ptr %86, null
  br i1 %87, label %88, label %92

88:                                               ; preds = %84
  %89 = load i32, ptr %10, align 4
  %90 = load ptr, ptr %9, align 8
  %91 = getelementptr inbounds %struct.mz_zip_archive, ptr %90, i32 0, i32 5
  store i32 %89, ptr %91, align 4
  br label %92

92:                                               ; preds = %84, %88
  store i32 0, ptr %35, align 4
  br label %535

93:                                               ; preds = %79
  %94 = load ptr, ptr %43, align 8
  %95 = icmp ne ptr %94, null
  br i1 %95, label %96, label %98

96:                                               ; preds = %93
  %97 = load ptr, ptr %43, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %52, ptr align 8 %97, i64 1112, i1 false)
  br label %105

98:                                               ; preds = %93
  %99 = load ptr, ptr %36, align 8
  %100 = load i32, ptr %37, align 4
  %101 = call i32 @mz_zip_reader_file_stat(ptr noundef %99, i32 noundef %100, ptr noundef %52)
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %104, label %103

103:                                              ; preds = %98
  store i32 0, ptr %35, align 4
  br label %535

104:                                              ; preds = %98
  br label %105

105:                                              ; preds = %104, %96
  %106 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 13
  %107 = load i32, ptr %106, align 4
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %111 = load i64, ptr %110, align 8
  %112 = icmp ne i64 %111, 0
  br i1 %112, label %114, label %113

113:                                              ; preds = %109, %105
  store i32 1, ptr %35, align 4
  br label %535

114:                                              ; preds = %109
  %115 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 4
  %116 = load i16, ptr %115, align 4
  %117 = zext i16 %116 to i32
  %118 = and i32 %117, 97
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %120, label %129

120:                                              ; preds = %114
  %121 = load ptr, ptr %36, align 8
  store ptr %121, ptr %11, align 8
  store i32 5, ptr %12, align 4
  %122 = load ptr, ptr %11, align 8
  %123 = icmp ne ptr %122, null
  br i1 %123, label %124, label %128

124:                                              ; preds = %120
  %125 = load i32, ptr %12, align 4
  %126 = load ptr, ptr %11, align 8
  %127 = getelementptr inbounds %struct.mz_zip_archive, ptr %126, i32 0, i32 5
  store i32 %125, ptr %127, align 4
  br label %128

128:                                              ; preds = %120, %124
  store i32 0, ptr %35, align 4
  br label %535

129:                                              ; preds = %114
  %130 = load i32, ptr %40, align 4
  %131 = and i32 %130, 1024
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %152, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 5
  %135 = load i16, ptr %134, align 2
  %136 = zext i16 %135 to i32
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %152

138:                                              ; preds = %133
  %139 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 5
  %140 = load i16, ptr %139, align 2
  %141 = zext i16 %140 to i32
  %142 = icmp ne i32 %141, 8
  br i1 %142, label %143, label %152

143:                                              ; preds = %138
  %144 = load ptr, ptr %36, align 8
  store ptr %144, ptr %13, align 8
  store i32 4, ptr %14, align 4
  %145 = load ptr, ptr %13, align 8
  %146 = icmp ne ptr %145, null
  br i1 %146, label %147, label %151

147:                                              ; preds = %143
  %148 = load i32, ptr %14, align 4
  %149 = load ptr, ptr %13, align 8
  %150 = getelementptr inbounds %struct.mz_zip_archive, ptr %149, i32 0, i32 5
  store i32 %148, ptr %150, align 4
  br label %151

151:                                              ; preds = %143, %147
  store i32 0, ptr %35, align 4
  br label %535

152:                                              ; preds = %138, %133, %129
  %153 = load i32, ptr %40, align 4
  %154 = and i32 %153, 1024
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %152
  %157 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %158 = load i64, ptr %157, align 8
  br label %162

159:                                              ; preds = %152
  %160 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 8
  %161 = load i64, ptr %160, align 8
  br label %162

162:                                              ; preds = %159, %156
  %163 = phi i64 [ %158, %156 ], [ %161, %159 ]
  store i64 %163, ptr %45, align 8
  %164 = load i64, ptr %39, align 8
  %165 = load i64, ptr %45, align 8
  %166 = icmp ult i64 %164, %165
  br i1 %166, label %167, label %176

167:                                              ; preds = %162
  %168 = load ptr, ptr %36, align 8
  store ptr %168, ptr %15, align 8
  store i32 26, ptr %16, align 4
  %169 = load ptr, ptr %15, align 8
  %170 = icmp ne ptr %169, null
  br i1 %170, label %171, label %175

171:                                              ; preds = %167
  %172 = load i32, ptr %16, align 4
  %173 = load ptr, ptr %15, align 8
  %174 = getelementptr inbounds %struct.mz_zip_archive, ptr %173, i32 0, i32 5
  store i32 %172, ptr %174, align 4
  br label %175

175:                                              ; preds = %167, %171
  store i32 0, ptr %35, align 4
  br label %535

176:                                              ; preds = %162
  %177 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 11
  %178 = load i64, ptr %177, align 8
  store i64 %178, ptr %46, align 8
  %179 = load ptr, ptr %36, align 8
  %180 = getelementptr inbounds %struct.mz_zip_archive, ptr %179, i32 0, i32 11
  %181 = load ptr, ptr %180, align 8
  %182 = load ptr, ptr %36, align 8
  %183 = getelementptr inbounds %struct.mz_zip_archive, ptr %182, i32 0, i32 14
  %184 = load ptr, ptr %183, align 8
  %185 = load i64, ptr %46, align 8
  %186 = load ptr, ptr %55, align 8
  %187 = call i64 %181(ptr noundef %184, i64 noundef %185, ptr noundef %186, i64 noundef 30)
  %188 = icmp ne i64 %187, 30
  br i1 %188, label %189, label %198

189:                                              ; preds = %176
  %190 = load ptr, ptr %36, align 8
  store ptr %190, ptr %17, align 8
  store i32 20, ptr %18, align 4
  %191 = load ptr, ptr %17, align 8
  %192 = icmp ne ptr %191, null
  br i1 %192, label %193, label %197

193:                                              ; preds = %189
  %194 = load i32, ptr %18, align 4
  %195 = load ptr, ptr %17, align 8
  %196 = getelementptr inbounds %struct.mz_zip_archive, ptr %195, i32 0, i32 5
  store i32 %194, ptr %196, align 4
  br label %197

197:                                              ; preds = %189, %193
  store i32 0, ptr %35, align 4
  br label %535

198:                                              ; preds = %176
  %199 = load ptr, ptr %55, align 8
  %200 = getelementptr inbounds i8, ptr %199, i64 0
  %201 = load i8, ptr %200, align 1
  %202 = zext i8 %201 to i32
  %203 = load ptr, ptr %55, align 8
  %204 = getelementptr inbounds i8, ptr %203, i64 1
  %205 = load i8, ptr %204, align 1
  %206 = zext i8 %205 to i32
  %207 = shl i32 %206, 8
  %208 = or i32 %202, %207
  %209 = load ptr, ptr %55, align 8
  %210 = getelementptr inbounds i8, ptr %209, i64 2
  %211 = load i8, ptr %210, align 1
  %212 = zext i8 %211 to i32
  %213 = shl i32 %212, 16
  %214 = or i32 %208, %213
  %215 = load ptr, ptr %55, align 8
  %216 = getelementptr inbounds i8, ptr %215, i64 3
  %217 = load i8, ptr %216, align 1
  %218 = zext i8 %217 to i32
  %219 = shl i32 %218, 24
  %220 = or i32 %214, %219
  %221 = icmp ne i32 %220, 67324752
  br i1 %221, label %222, label %231

222:                                              ; preds = %198
  %223 = load ptr, ptr %36, align 8
  store ptr %223, ptr %19, align 8
  store i32 9, ptr %20, align 4
  %224 = load ptr, ptr %19, align 8
  %225 = icmp ne ptr %224, null
  br i1 %225, label %226, label %230

226:                                              ; preds = %222
  %227 = load i32, ptr %20, align 4
  %228 = load ptr, ptr %19, align 8
  %229 = getelementptr inbounds %struct.mz_zip_archive, ptr %228, i32 0, i32 5
  store i32 %227, ptr %229, align 4
  br label %230

230:                                              ; preds = %222, %226
  store i32 0, ptr %35, align 4
  br label %535

231:                                              ; preds = %198
  %232 = load ptr, ptr %55, align 8
  %233 = getelementptr inbounds i8, ptr %232, i64 26
  %234 = getelementptr inbounds i8, ptr %233, i64 0
  %235 = load i8, ptr %234, align 1
  %236 = zext i8 %235 to i32
  %237 = load ptr, ptr %55, align 8
  %238 = getelementptr inbounds i8, ptr %237, i64 26
  %239 = getelementptr inbounds i8, ptr %238, i64 1
  %240 = load i8, ptr %239, align 1
  %241 = zext i8 %240 to i32
  %242 = shl i32 %241, 8
  %243 = or i32 %236, %242
  %244 = add i32 30, %243
  %245 = load ptr, ptr %55, align 8
  %246 = getelementptr inbounds i8, ptr %245, i64 28
  %247 = getelementptr inbounds i8, ptr %246, i64 0
  %248 = load i8, ptr %247, align 1
  %249 = zext i8 %248 to i32
  %250 = load ptr, ptr %55, align 8
  %251 = getelementptr inbounds i8, ptr %250, i64 28
  %252 = getelementptr inbounds i8, ptr %251, i64 1
  %253 = load i8, ptr %252, align 1
  %254 = zext i8 %253 to i32
  %255 = shl i32 %254, 8
  %256 = or i32 %249, %255
  %257 = add i32 %244, %256
  %258 = zext i32 %257 to i64
  %259 = load i64, ptr %46, align 8
  %260 = add i64 %259, %258
  store i64 %260, ptr %46, align 8
  %261 = load i64, ptr %46, align 8
  %262 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %263 = load i64, ptr %262, align 8
  %264 = add i64 %261, %263
  %265 = load ptr, ptr %36, align 8
  %266 = getelementptr inbounds %struct.mz_zip_archive, ptr %265, i32 0, i32 0
  %267 = load i64, ptr %266, align 8
  %268 = icmp ugt i64 %264, %267
  br i1 %268, label %269, label %278

269:                                              ; preds = %231
  %270 = load ptr, ptr %36, align 8
  store ptr %270, ptr %21, align 8
  store i32 9, ptr %22, align 4
  %271 = load ptr, ptr %21, align 8
  %272 = icmp ne ptr %271, null
  br i1 %272, label %273, label %277

273:                                              ; preds = %269
  %274 = load i32, ptr %22, align 4
  %275 = load ptr, ptr %21, align 8
  %276 = getelementptr inbounds %struct.mz_zip_archive, ptr %275, i32 0, i32 5
  store i32 %274, ptr %276, align 4
  br label %277

277:                                              ; preds = %269, %273
  store i32 0, ptr %35, align 4
  br label %535

278:                                              ; preds = %231
  %279 = load i32, ptr %40, align 4
  %280 = and i32 %279, 1024
  %281 = icmp ne i32 %280, 0
  br i1 %281, label %286, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 5
  %284 = load i16, ptr %283, align 2
  %285 = icmp ne i16 %284, 0
  br i1 %285, label %332, label %286

286:                                              ; preds = %282, %278
  %287 = load ptr, ptr %36, align 8
  %288 = getelementptr inbounds %struct.mz_zip_archive, ptr %287, i32 0, i32 11
  %289 = load ptr, ptr %288, align 8
  %290 = load ptr, ptr %36, align 8
  %291 = getelementptr inbounds %struct.mz_zip_archive, ptr %290, i32 0, i32 14
  %292 = load ptr, ptr %291, align 8
  %293 = load i64, ptr %46, align 8
  %294 = load ptr, ptr %38, align 8
  %295 = load i64, ptr %45, align 8
  %296 = call i64 %289(ptr noundef %292, i64 noundef %293, ptr noundef %294, i64 noundef %295)
  %297 = load i64, ptr %45, align 8
  %298 = icmp ne i64 %296, %297
  br i1 %298, label %299, label %308

299:                                              ; preds = %286
  %300 = load ptr, ptr %36, align 8
  store ptr %300, ptr %23, align 8
  store i32 20, ptr %24, align 4
  %301 = load ptr, ptr %23, align 8
  %302 = icmp ne ptr %301, null
  br i1 %302, label %303, label %307

303:                                              ; preds = %299
  %304 = load i32, ptr %24, align 4
  %305 = load ptr, ptr %23, align 8
  %306 = getelementptr inbounds %struct.mz_zip_archive, ptr %305, i32 0, i32 5
  store i32 %304, ptr %306, align 4
  br label %307

307:                                              ; preds = %299, %303
  store i32 0, ptr %35, align 4
  br label %535

308:                                              ; preds = %286
  %309 = load i32, ptr %40, align 4
  %310 = and i32 %309, 1024
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %331

312:                                              ; preds = %308
  %313 = load ptr, ptr %38, align 8
  %314 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 8
  %315 = load i64, ptr %314, align 8
  %316 = call i64 @mz_crc32(i64 noundef 0, ptr noundef %313, i64 noundef %315)
  %317 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 6
  %318 = load i32, ptr %317, align 8
  %319 = zext i32 %318 to i64
  %320 = icmp ne i64 %316, %319
  br i1 %320, label %321, label %330

321:                                              ; preds = %312
  %322 = load ptr, ptr %36, align 8
  store ptr %322, ptr %25, align 8
  store i32 14, ptr %26, align 4
  %323 = load ptr, ptr %25, align 8
  %324 = icmp ne ptr %323, null
  br i1 %324, label %325, label %329

325:                                              ; preds = %321
  %326 = load i32, ptr %26, align 4
  %327 = load ptr, ptr %25, align 8
  %328 = getelementptr inbounds %struct.mz_zip_archive, ptr %327, i32 0, i32 5
  store i32 %326, ptr %328, align 4
  br label %329

329:                                              ; preds = %321, %325
  store i32 0, ptr %35, align 4
  br label %535

330:                                              ; preds = %312
  br label %331

331:                                              ; preds = %330, %308
  store i32 1, ptr %35, align 4
  br label %535

332:                                              ; preds = %282
  br label %333

333:                                              ; preds = %332
  %334 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %56, i32 0, i32 0
  store i32 0, ptr %334, align 8
  br label %335

335:                                              ; preds = %333
  %336 = load ptr, ptr %36, align 8
  %337 = getelementptr inbounds %struct.mz_zip_archive, ptr %336, i32 0, i32 15
  %338 = load ptr, ptr %337, align 8
  %339 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %338, i32 0, i32 8
  %340 = load ptr, ptr %339, align 8
  %341 = icmp ne ptr %340, null
  br i1 %341, label %342, label %352

342:                                              ; preds = %335
  %343 = load ptr, ptr %36, align 8
  %344 = getelementptr inbounds %struct.mz_zip_archive, ptr %343, i32 0, i32 15
  %345 = load ptr, ptr %344, align 8
  %346 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %345, i32 0, i32 8
  %347 = load ptr, ptr %346, align 8
  %348 = load i64, ptr %46, align 8
  %349 = getelementptr inbounds i8, ptr %347, i64 %348
  store ptr %349, ptr %53, align 8
  %350 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %351 = load i64, ptr %350, align 8
  store i64 %351, ptr %51, align 8
  store i64 %351, ptr %49, align 8
  store i64 0, ptr %47, align 8
  br label %396

352:                                              ; preds = %335
  %353 = load ptr, ptr %41, align 8
  %354 = icmp ne ptr %353, null
  br i1 %354, label %355, label %364

355:                                              ; preds = %352
  %356 = load i64, ptr %42, align 8
  %357 = icmp ne i64 %356, 0
  br i1 %357, label %359, label %358

358:                                              ; preds = %355
  store i32 0, ptr %35, align 4
  br label %535

359:                                              ; preds = %355
  %360 = load ptr, ptr %41, align 8
  store ptr %360, ptr %53, align 8
  %361 = load i64, ptr %42, align 8
  store i64 %361, ptr %49, align 8
  store i64 0, ptr %51, align 8
  %362 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %363 = load i64, ptr %362, align 8
  store i64 %363, ptr %47, align 8
  br label %395

364:                                              ; preds = %352
  %365 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %366 = load i64, ptr %365, align 8
  %367 = icmp ult i64 %366, 65536
  br i1 %367, label %368, label %371

368:                                              ; preds = %364
  %369 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %370 = load i64, ptr %369, align 8
  br label %372

371:                                              ; preds = %364
  br label %372

372:                                              ; preds = %371, %368
  %373 = phi i64 [ %370, %368 ], [ 65536, %371 ]
  store i64 %373, ptr %49, align 8
  %374 = load ptr, ptr %36, align 8
  %375 = getelementptr inbounds %struct.mz_zip_archive, ptr %374, i32 0, i32 7
  %376 = load ptr, ptr %375, align 8
  %377 = load ptr, ptr %36, align 8
  %378 = getelementptr inbounds %struct.mz_zip_archive, ptr %377, i32 0, i32 10
  %379 = load ptr, ptr %378, align 8
  %380 = load i64, ptr %49, align 8
  %381 = call ptr %376(ptr noundef %379, i64 noundef 1, i64 noundef %380)
  store ptr %381, ptr %53, align 8
  %382 = icmp eq ptr null, %381
  br i1 %382, label %383, label %392

383:                                              ; preds = %372
  %384 = load ptr, ptr %36, align 8
  store ptr %384, ptr %27, align 8
  store i32 16, ptr %28, align 4
  %385 = load ptr, ptr %27, align 8
  %386 = icmp ne ptr %385, null
  br i1 %386, label %387, label %391

387:                                              ; preds = %383
  %388 = load i32, ptr %28, align 4
  %389 = load ptr, ptr %27, align 8
  %390 = getelementptr inbounds %struct.mz_zip_archive, ptr %389, i32 0, i32 5
  store i32 %388, ptr %390, align 4
  br label %391

391:                                              ; preds = %383, %387
  store i32 0, ptr %35, align 4
  br label %535

392:                                              ; preds = %372
  store i64 0, ptr %51, align 8
  %393 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %394 = load i64, ptr %393, align 8
  store i64 %394, ptr %47, align 8
  br label %395

395:                                              ; preds = %392, %359
  br label %396

396:                                              ; preds = %395, %342
  br label %397

397:                                              ; preds = %473, %396
  %398 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 8
  %399 = load i64, ptr %398, align 8
  %400 = load i64, ptr %48, align 8
  %401 = sub i64 %399, %400
  store i64 %401, ptr %58, align 8
  %402 = load i64, ptr %51, align 8
  %403 = icmp ne i64 %402, 0
  br i1 %403, label %449, label %404

404:                                              ; preds = %397
  %405 = load ptr, ptr %36, align 8
  %406 = getelementptr inbounds %struct.mz_zip_archive, ptr %405, i32 0, i32 15
  %407 = load ptr, ptr %406, align 8
  %408 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %407, i32 0, i32 8
  %409 = load ptr, ptr %408, align 8
  %410 = icmp ne ptr %409, null
  br i1 %410, label %449, label %411

411:                                              ; preds = %404
  %412 = load i64, ptr %49, align 8
  %413 = load i64, ptr %47, align 8
  %414 = icmp ult i64 %412, %413
  br i1 %414, label %415, label %417

415:                                              ; preds = %411
  %416 = load i64, ptr %49, align 8
  br label %419

417:                                              ; preds = %411
  %418 = load i64, ptr %47, align 8
  br label %419

419:                                              ; preds = %417, %415
  %420 = phi i64 [ %416, %415 ], [ %418, %417 ]
  store i64 %420, ptr %51, align 8
  %421 = load ptr, ptr %36, align 8
  %422 = getelementptr inbounds %struct.mz_zip_archive, ptr %421, i32 0, i32 11
  %423 = load ptr, ptr %422, align 8
  %424 = load ptr, ptr %36, align 8
  %425 = getelementptr inbounds %struct.mz_zip_archive, ptr %424, i32 0, i32 14
  %426 = load ptr, ptr %425, align 8
  %427 = load i64, ptr %46, align 8
  %428 = load ptr, ptr %53, align 8
  %429 = load i64, ptr %51, align 8
  %430 = call i64 %423(ptr noundef %426, i64 noundef %427, ptr noundef %428, i64 noundef %429)
  %431 = load i64, ptr %51, align 8
  %432 = icmp ne i64 %430, %431
  br i1 %432, label %433, label %442

433:                                              ; preds = %419
  store i32 -1, ptr %44, align 4
  %434 = load ptr, ptr %36, align 8
  store ptr %434, ptr %29, align 8
  store i32 11, ptr %30, align 4
  %435 = load ptr, ptr %29, align 8
  %436 = icmp ne ptr %435, null
  br i1 %436, label %437, label %441

437:                                              ; preds = %433
  %438 = load i32, ptr %30, align 4
  %439 = load ptr, ptr %29, align 8
  %440 = getelementptr inbounds %struct.mz_zip_archive, ptr %439, i32 0, i32 5
  store i32 %438, ptr %440, align 4
  br label %441

441:                                              ; preds = %433, %437
  br label %476

442:                                              ; preds = %419
  %443 = load i64, ptr %51, align 8
  %444 = load i64, ptr %46, align 8
  %445 = add i64 %444, %443
  store i64 %445, ptr %46, align 8
  %446 = load i64, ptr %51, align 8
  %447 = load i64, ptr %47, align 8
  %448 = sub i64 %447, %446
  store i64 %448, ptr %47, align 8
  store i64 0, ptr %50, align 8
  br label %449

449:                                              ; preds = %442, %404, %397
  %450 = load i64, ptr %51, align 8
  store i64 %450, ptr %57, align 8
  %451 = load ptr, ptr %53, align 8
  %452 = load i64, ptr %50, align 8
  %453 = getelementptr inbounds i8, ptr %451, i64 %452
  %454 = load ptr, ptr %38, align 8
  %455 = load ptr, ptr %38, align 8
  %456 = load i64, ptr %48, align 8
  %457 = getelementptr inbounds i8, ptr %455, i64 %456
  %458 = load i64, ptr %47, align 8
  %459 = icmp ne i64 %458, 0
  %460 = zext i1 %459 to i64
  %461 = select i1 %459, i32 2, i32 0
  %462 = or i32 4, %461
  %463 = call i32 @tinfl_decompress(ptr noundef %56, ptr noundef %453, ptr noundef %57, ptr noundef %454, ptr noundef %457, ptr noundef %58, i32 noundef %462)
  store i32 %463, ptr %44, align 4
  %464 = load i64, ptr %57, align 8
  %465 = load i64, ptr %51, align 8
  %466 = sub i64 %465, %464
  store i64 %466, ptr %51, align 8
  %467 = load i64, ptr %57, align 8
  %468 = load i64, ptr %50, align 8
  %469 = add i64 %468, %467
  store i64 %469, ptr %50, align 8
  %470 = load i64, ptr %58, align 8
  %471 = load i64, ptr %48, align 8
  %472 = add i64 %471, %470
  store i64 %472, ptr %48, align 8
  br label %473

473:                                              ; preds = %449
  %474 = load i32, ptr %44, align 4
  %475 = icmp eq i32 %474, 1
  br i1 %475, label %397, label %476, !llvm.loop !117

476:                                              ; preds = %473, %441
  %477 = load i32, ptr %44, align 4
  %478 = icmp eq i32 %477, 0
  br i1 %478, label %479, label %513

479:                                              ; preds = %476
  %480 = load i64, ptr %48, align 8
  %481 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 8
  %482 = load i64, ptr %481, align 8
  %483 = icmp ne i64 %480, %482
  br i1 %483, label %484, label %493

484:                                              ; preds = %479
  %485 = load ptr, ptr %36, align 8
  store ptr %485, ptr %31, align 8
  store i32 13, ptr %32, align 4
  %486 = load ptr, ptr %31, align 8
  %487 = icmp ne ptr %486, null
  br i1 %487, label %488, label %492

488:                                              ; preds = %484
  %489 = load i32, ptr %32, align 4
  %490 = load ptr, ptr %31, align 8
  %491 = getelementptr inbounds %struct.mz_zip_archive, ptr %490, i32 0, i32 5
  store i32 %489, ptr %491, align 4
  br label %492

492:                                              ; preds = %484, %488
  store i32 -1, ptr %44, align 4
  br label %512

493:                                              ; preds = %479
  %494 = load ptr, ptr %38, align 8
  %495 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 8
  %496 = load i64, ptr %495, align 8
  %497 = call i64 @mz_crc32(i64 noundef 0, ptr noundef %494, i64 noundef %496)
  %498 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 6
  %499 = load i32, ptr %498, align 8
  %500 = zext i32 %499 to i64
  %501 = icmp ne i64 %497, %500
  br i1 %501, label %502, label %511

502:                                              ; preds = %493
  %503 = load ptr, ptr %36, align 8
  store ptr %503, ptr %33, align 8
  store i32 14, ptr %34, align 4
  %504 = load ptr, ptr %33, align 8
  %505 = icmp ne ptr %504, null
  br i1 %505, label %506, label %510

506:                                              ; preds = %502
  %507 = load i32, ptr %34, align 4
  %508 = load ptr, ptr %33, align 8
  %509 = getelementptr inbounds %struct.mz_zip_archive, ptr %508, i32 0, i32 5
  store i32 %507, ptr %509, align 4
  br label %510

510:                                              ; preds = %502, %506
  store i32 -1, ptr %44, align 4
  br label %511

511:                                              ; preds = %510, %493
  br label %512

512:                                              ; preds = %511, %492
  br label %513

513:                                              ; preds = %512, %476
  %514 = load ptr, ptr %36, align 8
  %515 = getelementptr inbounds %struct.mz_zip_archive, ptr %514, i32 0, i32 15
  %516 = load ptr, ptr %515, align 8
  %517 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %516, i32 0, i32 8
  %518 = load ptr, ptr %517, align 8
  %519 = icmp ne ptr %518, null
  br i1 %519, label %531, label %520

520:                                              ; preds = %513
  %521 = load ptr, ptr %41, align 8
  %522 = icmp ne ptr %521, null
  br i1 %522, label %531, label %523

523:                                              ; preds = %520
  %524 = load ptr, ptr %36, align 8
  %525 = getelementptr inbounds %struct.mz_zip_archive, ptr %524, i32 0, i32 8
  %526 = load ptr, ptr %525, align 8
  %527 = load ptr, ptr %36, align 8
  %528 = getelementptr inbounds %struct.mz_zip_archive, ptr %527, i32 0, i32 10
  %529 = load ptr, ptr %528, align 8
  %530 = load ptr, ptr %53, align 8
  call void %526(ptr noundef %529, ptr noundef %530)
  br label %531

531:                                              ; preds = %523, %520, %513
  %532 = load i32, ptr %44, align 4
  %533 = icmp eq i32 %532, 0
  %534 = zext i1 %533 to i32
  store i32 %534, ptr %35, align 4
  br label %535

535:                                              ; preds = %531, %391, %358, %331, %329, %307, %277, %230, %197, %175, %151, %128, %113, %103, %92
  %536 = load i32, ptr %35, align 4
  ret i32 %536
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_extract_file_to_mem_no_alloc(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4, ptr noundef %5, i64 noundef %6) #0 {
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  store ptr %0, ptr %9, align 8
  store ptr %1, ptr %10, align 8
  store ptr %2, ptr %11, align 8
  store i64 %3, ptr %12, align 8
  store i32 %4, ptr %13, align 4
  store ptr %5, ptr %14, align 8
  store i64 %6, ptr %15, align 8
  %17 = load ptr, ptr %9, align 8
  %18 = load ptr, ptr %10, align 8
  %19 = load i32, ptr %13, align 4
  %20 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %17, ptr noundef %18, ptr noundef null, i32 noundef %19, ptr noundef %16)
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %7
  store i32 0, ptr %8, align 4
  br label %32

23:                                               ; preds = %7
  %24 = load ptr, ptr %9, align 8
  %25 = load i32, ptr %16, align 4
  %26 = load ptr, ptr %11, align 8
  %27 = load i64, ptr %12, align 8
  %28 = load i32, ptr %13, align 4
  %29 = load ptr, ptr %14, align 8
  %30 = load i64, ptr %15, align 8
  %31 = call i32 @mz_zip_reader_extract_to_mem_no_alloc1(ptr noundef %24, i32 noundef %25, ptr noundef %26, i64 noundef %27, i32 noundef %28, ptr noundef %29, i64 noundef %30, ptr noundef null)
  store i32 %31, ptr %8, align 4
  br label %32

32:                                               ; preds = %23, %22
  %33 = load i32, ptr %8, align 4
  ret i32 %33
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_extract_to_mem(ptr noundef %0, i32 noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store i32 %1, ptr %7, align 4
  store ptr %2, ptr %8, align 8
  store i64 %3, ptr %9, align 8
  store i32 %4, ptr %10, align 4
  %11 = load ptr, ptr %6, align 8
  %12 = load i32, ptr %7, align 4
  %13 = load ptr, ptr %8, align 8
  %14 = load i64, ptr %9, align 8
  %15 = load i32, ptr %10, align 4
  %16 = call i32 @mz_zip_reader_extract_to_mem_no_alloc1(ptr noundef %11, i32 noundef %12, ptr noundef %13, i64 noundef %14, i32 noundef %15, ptr noundef null, i64 noundef 0, ptr noundef null)
  ret i32 %16
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_extract_file_to_mem(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store ptr %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store i64 %3, ptr %9, align 8
  store i32 %4, ptr %10, align 4
  %11 = load ptr, ptr %6, align 8
  %12 = load ptr, ptr %7, align 8
  %13 = load ptr, ptr %8, align 8
  %14 = load i64, ptr %9, align 8
  %15 = load i32, ptr %10, align 4
  %16 = call i32 @mz_zip_reader_extract_file_to_mem_no_alloc(ptr noundef %11, ptr noundef %12, ptr noundef %13, i64 noundef %14, i32 noundef %15, ptr noundef null, i64 noundef 0)
  ret i32 %16
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @mz_zip_reader_extract_to_heap(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive_file_stat, align 8
  %13 = alloca i64, align 8
  %14 = alloca ptr, align 8
  store ptr %0, ptr %8, align 8
  store i32 %1, ptr %9, align 4
  store ptr %2, ptr %10, align 8
  store i32 %3, ptr %11, align 4
  %15 = load ptr, ptr %10, align 8
  %16 = icmp ne ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %4
  %18 = load ptr, ptr %10, align 8
  store i64 0, ptr %18, align 8
  br label %19

19:                                               ; preds = %17, %4
  %20 = load ptr, ptr %8, align 8
  %21 = load i32, ptr %9, align 4
  %22 = call i32 @mz_zip_reader_file_stat(ptr noundef %20, i32 noundef %21, ptr noundef %12)
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %19
  store ptr null, ptr %7, align 8
  br label %79

25:                                               ; preds = %19
  %26 = load i32, ptr %11, align 4
  %27 = and i32 %26, 1024
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %12, i32 0, i32 7
  %31 = load i64, ptr %30, align 8
  br label %35

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %12, i32 0, i32 8
  %34 = load i64, ptr %33, align 8
  br label %35

35:                                               ; preds = %32, %29
  %36 = phi i64 [ %31, %29 ], [ %34, %32 ]
  store i64 %36, ptr %13, align 8
  %37 = load ptr, ptr %8, align 8
  %38 = getelementptr inbounds %struct.mz_zip_archive, ptr %37, i32 0, i32 7
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr %8, align 8
  %41 = getelementptr inbounds %struct.mz_zip_archive, ptr %40, i32 0, i32 10
  %42 = load ptr, ptr %41, align 8
  %43 = load i64, ptr %13, align 8
  %44 = call ptr %39(ptr noundef %42, i64 noundef 1, i64 noundef %43)
  store ptr %44, ptr %14, align 8
  %45 = icmp eq ptr null, %44
  br i1 %45, label %46, label %55

46:                                               ; preds = %35
  %47 = load ptr, ptr %8, align 8
  store ptr %47, ptr %5, align 8
  store i32 16, ptr %6, align 4
  %48 = load ptr, ptr %5, align 8
  %49 = icmp ne ptr %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = load i32, ptr %6, align 4
  %52 = load ptr, ptr %5, align 8
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %52, i32 0, i32 5
  store i32 %51, ptr %53, align 4
  br label %54

54:                                               ; preds = %46, %50
  store ptr null, ptr %7, align 8
  br label %79

55:                                               ; preds = %35
  %56 = load ptr, ptr %8, align 8
  %57 = load i32, ptr %9, align 4
  %58 = load ptr, ptr %14, align 8
  %59 = load i64, ptr %13, align 8
  %60 = load i32, ptr %11, align 4
  %61 = call i32 @mz_zip_reader_extract_to_mem_no_alloc1(ptr noundef %56, i32 noundef %57, ptr noundef %58, i64 noundef %59, i32 noundef %60, ptr noundef null, i64 noundef 0, ptr noundef %12)
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %55
  %64 = load ptr, ptr %8, align 8
  %65 = getelementptr inbounds %struct.mz_zip_archive, ptr %64, i32 0, i32 8
  %66 = load ptr, ptr %65, align 8
  %67 = load ptr, ptr %8, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive, ptr %67, i32 0, i32 10
  %69 = load ptr, ptr %68, align 8
  %70 = load ptr, ptr %14, align 8
  call void %66(ptr noundef %69, ptr noundef %70)
  store ptr null, ptr %7, align 8
  br label %79

71:                                               ; preds = %55
  %72 = load ptr, ptr %10, align 8
  %73 = icmp ne ptr %72, null
  br i1 %73, label %74, label %77

74:                                               ; preds = %71
  %75 = load i64, ptr %13, align 8
  %76 = load ptr, ptr %10, align 8
  store i64 %75, ptr %76, align 8
  br label %77

77:                                               ; preds = %74, %71
  %78 = load ptr, ptr %14, align 8
  store ptr %78, ptr %7, align 8
  br label %79

79:                                               ; preds = %77, %63, %54, %24
  %80 = load ptr, ptr %7, align 8
  ret ptr %80
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_file_stat(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  store ptr %0, ptr %7, align 8
  store i32 %1, ptr %8, align 4
  store ptr %2, ptr %9, align 8
  %10 = load ptr, ptr %7, align 8
  %11 = load i32, ptr %8, align 4
  %12 = load ptr, ptr %7, align 8
  %13 = load i32, ptr %8, align 4
  store ptr %12, ptr %5, align 8
  store i32 %13, ptr %6, align 4
  %14 = load ptr, ptr %5, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %16, label %27

16:                                               ; preds = %3
  %17 = load ptr, ptr %5, align 8
  %18 = getelementptr inbounds %struct.mz_zip_archive, ptr %17, i32 0, i32 15
  %19 = load ptr, ptr %18, align 8
  %20 = icmp ne ptr %19, null
  br i1 %20, label %21, label %27

21:                                               ; preds = %16
  %22 = load i32, ptr %6, align 4
  %23 = load ptr, ptr %5, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %23, i32 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = icmp uge i32 %22, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %21, %16, %3
  store ptr null, ptr %4, align 8
  br label %44

28:                                               ; preds = %21
  %29 = load ptr, ptr %5, align 8
  %30 = getelementptr inbounds %struct.mz_zip_archive, ptr %29, i32 0, i32 15
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr %31, align 8
  %33 = load ptr, ptr %5, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %33, i32 0, i32 15
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %35, i32 0, i32 1
  %37 = load ptr, ptr %36, align 8
  %38 = load i32, ptr %6, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i32, ptr %37, i64 %39
  %41 = load i32, ptr %40, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, ptr %32, i64 %42
  store ptr %43, ptr %4, align 8
  br label %44

44:                                               ; preds = %27, %28
  %45 = load ptr, ptr %4, align 8
  %46 = load ptr, ptr %9, align 8
  %47 = call i32 @mz_zip_file_stat_internal(ptr noundef %10, i32 noundef %11, ptr noundef %45, ptr noundef %46, ptr noundef null)
  ret i32 %47
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @mz_zip_reader_extract_file_to_heap(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store ptr %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store i32 %3, ptr %9, align 4
  %11 = load ptr, ptr %6, align 8
  %12 = load ptr, ptr %7, align 8
  %13 = load i32, ptr %9, align 4
  %14 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %11, ptr noundef %12, ptr noundef null, i32 noundef %13, ptr noundef %10)
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %4
  %17 = load ptr, ptr %8, align 8
  %18 = icmp ne ptr %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = load ptr, ptr %8, align 8
  store i64 0, ptr %20, align 8
  br label %21

21:                                               ; preds = %19, %16
  store ptr null, ptr %5, align 8
  br label %28

22:                                               ; preds = %4
  %23 = load ptr, ptr %6, align 8
  %24 = load i32, ptr %10, align 4
  %25 = load ptr, ptr %8, align 8
  %26 = load i32, ptr %9, align 4
  %27 = call ptr @mz_zip_reader_extract_to_heap(ptr noundef %23, i32 noundef %24, ptr noundef %25, i32 noundef %26)
  store ptr %27, ptr %5, align 8
  br label %28

28:                                               ; preds = %22, %21
  %29 = load ptr, ptr %5, align 8
  ret ptr %29
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_extract_to_callback(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca i32, align 4
  %18 = alloca ptr, align 8
  %19 = alloca i32, align 4
  %20 = alloca ptr, align 8
  %21 = alloca i32, align 4
  %22 = alloca ptr, align 8
  %23 = alloca i32, align 4
  %24 = alloca ptr, align 8
  %25 = alloca i32, align 4
  %26 = alloca ptr, align 8
  %27 = alloca i32, align 4
  %28 = alloca ptr, align 8
  %29 = alloca i32, align 4
  %30 = alloca ptr, align 8
  %31 = alloca i32, align 4
  %32 = alloca ptr, align 8
  %33 = alloca i32, align 4
  %34 = alloca ptr, align 8
  %35 = alloca i32, align 4
  %36 = alloca ptr, align 8
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca ptr, align 8
  %40 = alloca i32, align 4
  %41 = alloca ptr, align 8
  %42 = alloca ptr, align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  %51 = alloca i64, align 8
  %52 = alloca %struct.mz_zip_archive_file_stat, align 8
  %53 = alloca ptr, align 8
  %54 = alloca ptr, align 8
  %55 = alloca [8 x i32], align 16
  %56 = alloca ptr, align 8
  %57 = alloca %struct.tinfl_decompressor_tag, align 8
  %58 = alloca ptr, align 8
  %59 = alloca i64, align 8
  %60 = alloca i64, align 8
  store ptr %0, ptr %39, align 8
  store i32 %1, ptr %40, align 4
  store ptr %2, ptr %41, align 8
  store ptr %3, ptr %42, align 8
  store i32 %4, ptr %43, align 4
  store i32 0, ptr %44, align 4
  store i32 0, ptr %45, align 4
  store i64 0, ptr %47, align 8
  store i64 0, ptr %50, align 8
  store ptr null, ptr %53, align 8
  store ptr null, ptr %54, align 8
  %61 = getelementptr inbounds [8 x i32], ptr %55, i64 0, i64 0
  store ptr %61, ptr %56, align 8
  %62 = load ptr, ptr %39, align 8
  %63 = icmp ne ptr %62, null
  br i1 %63, label %64, label %77

64:                                               ; preds = %5
  %65 = load ptr, ptr %39, align 8
  %66 = getelementptr inbounds %struct.mz_zip_archive, ptr %65, i32 0, i32 15
  %67 = load ptr, ptr %66, align 8
  %68 = icmp ne ptr %67, null
  br i1 %68, label %69, label %77

69:                                               ; preds = %64
  %70 = load ptr, ptr %41, align 8
  %71 = icmp ne ptr %70, null
  br i1 %71, label %72, label %77

72:                                               ; preds = %69
  %73 = load ptr, ptr %39, align 8
  %74 = getelementptr inbounds %struct.mz_zip_archive, ptr %73, i32 0, i32 11
  %75 = load ptr, ptr %74, align 8
  %76 = icmp ne ptr %75, null
  br i1 %76, label %86, label %77

77:                                               ; preds = %72, %69, %64, %5
  %78 = load ptr, ptr %39, align 8
  store ptr %78, ptr %6, align 8
  store i32 24, ptr %7, align 4
  %79 = load ptr, ptr %6, align 8
  %80 = icmp ne ptr %79, null
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  %82 = load i32, ptr %7, align 4
  %83 = load ptr, ptr %6, align 8
  %84 = getelementptr inbounds %struct.mz_zip_archive, ptr %83, i32 0, i32 5
  store i32 %82, ptr %84, align 4
  br label %85

85:                                               ; preds = %77, %81
  store i32 0, ptr %38, align 4
  br label %638

86:                                               ; preds = %72
  %87 = load ptr, ptr %39, align 8
  %88 = load i32, ptr %40, align 4
  %89 = call i32 @mz_zip_reader_file_stat(ptr noundef %87, i32 noundef %88, ptr noundef %52)
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %92, label %91

91:                                               ; preds = %86
  store i32 0, ptr %38, align 4
  br label %638

92:                                               ; preds = %86
  %93 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 13
  %94 = load i32, ptr %93, align 4
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %98 = load i64, ptr %97, align 8
  %99 = icmp ne i64 %98, 0
  br i1 %99, label %101, label %100

100:                                              ; preds = %96, %92
  store i32 1, ptr %38, align 4
  br label %638

101:                                              ; preds = %96
  %102 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 4
  %103 = load i16, ptr %102, align 4
  %104 = zext i16 %103 to i32
  %105 = and i32 %104, 97
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %116

107:                                              ; preds = %101
  %108 = load ptr, ptr %39, align 8
  store ptr %108, ptr %8, align 8
  store i32 5, ptr %9, align 4
  %109 = load ptr, ptr %8, align 8
  %110 = icmp ne ptr %109, null
  br i1 %110, label %111, label %115

111:                                              ; preds = %107
  %112 = load i32, ptr %9, align 4
  %113 = load ptr, ptr %8, align 8
  %114 = getelementptr inbounds %struct.mz_zip_archive, ptr %113, i32 0, i32 5
  store i32 %112, ptr %114, align 4
  br label %115

115:                                              ; preds = %107, %111
  store i32 0, ptr %38, align 4
  br label %638

116:                                              ; preds = %101
  %117 = load i32, ptr %43, align 4
  %118 = and i32 %117, 1024
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %139, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 5
  %122 = load i16, ptr %121, align 2
  %123 = zext i16 %122 to i32
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %139

125:                                              ; preds = %120
  %126 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 5
  %127 = load i16, ptr %126, align 2
  %128 = zext i16 %127 to i32
  %129 = icmp ne i32 %128, 8
  br i1 %129, label %130, label %139

130:                                              ; preds = %125
  %131 = load ptr, ptr %39, align 8
  store ptr %131, ptr %10, align 8
  store i32 4, ptr %11, align 4
  %132 = load ptr, ptr %10, align 8
  %133 = icmp ne ptr %132, null
  br i1 %133, label %134, label %138

134:                                              ; preds = %130
  %135 = load i32, ptr %11, align 4
  %136 = load ptr, ptr %10, align 8
  %137 = getelementptr inbounds %struct.mz_zip_archive, ptr %136, i32 0, i32 5
  store i32 %135, ptr %137, align 4
  br label %138

138:                                              ; preds = %130, %134
  store i32 0, ptr %38, align 4
  br label %638

139:                                              ; preds = %125, %120, %116
  %140 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 11
  %141 = load i64, ptr %140, align 8
  store i64 %141, ptr %51, align 8
  %142 = load ptr, ptr %39, align 8
  %143 = getelementptr inbounds %struct.mz_zip_archive, ptr %142, i32 0, i32 11
  %144 = load ptr, ptr %143, align 8
  %145 = load ptr, ptr %39, align 8
  %146 = getelementptr inbounds %struct.mz_zip_archive, ptr %145, i32 0, i32 14
  %147 = load ptr, ptr %146, align 8
  %148 = load i64, ptr %51, align 8
  %149 = load ptr, ptr %56, align 8
  %150 = call i64 %144(ptr noundef %147, i64 noundef %148, ptr noundef %149, i64 noundef 30)
  %151 = icmp ne i64 %150, 30
  br i1 %151, label %152, label %161

152:                                              ; preds = %139
  %153 = load ptr, ptr %39, align 8
  store ptr %153, ptr %12, align 8
  store i32 20, ptr %13, align 4
  %154 = load ptr, ptr %12, align 8
  %155 = icmp ne ptr %154, null
  br i1 %155, label %156, label %160

156:                                              ; preds = %152
  %157 = load i32, ptr %13, align 4
  %158 = load ptr, ptr %12, align 8
  %159 = getelementptr inbounds %struct.mz_zip_archive, ptr %158, i32 0, i32 5
  store i32 %157, ptr %159, align 4
  br label %160

160:                                              ; preds = %152, %156
  store i32 0, ptr %38, align 4
  br label %638

161:                                              ; preds = %139
  %162 = load ptr, ptr %56, align 8
  %163 = getelementptr inbounds i8, ptr %162, i64 0
  %164 = load i8, ptr %163, align 1
  %165 = zext i8 %164 to i32
  %166 = load ptr, ptr %56, align 8
  %167 = getelementptr inbounds i8, ptr %166, i64 1
  %168 = load i8, ptr %167, align 1
  %169 = zext i8 %168 to i32
  %170 = shl i32 %169, 8
  %171 = or i32 %165, %170
  %172 = load ptr, ptr %56, align 8
  %173 = getelementptr inbounds i8, ptr %172, i64 2
  %174 = load i8, ptr %173, align 1
  %175 = zext i8 %174 to i32
  %176 = shl i32 %175, 16
  %177 = or i32 %171, %176
  %178 = load ptr, ptr %56, align 8
  %179 = getelementptr inbounds i8, ptr %178, i64 3
  %180 = load i8, ptr %179, align 1
  %181 = zext i8 %180 to i32
  %182 = shl i32 %181, 24
  %183 = or i32 %177, %182
  %184 = icmp ne i32 %183, 67324752
  br i1 %184, label %185, label %194

185:                                              ; preds = %161
  %186 = load ptr, ptr %39, align 8
  store ptr %186, ptr %14, align 8
  store i32 9, ptr %15, align 4
  %187 = load ptr, ptr %14, align 8
  %188 = icmp ne ptr %187, null
  br i1 %188, label %189, label %193

189:                                              ; preds = %185
  %190 = load i32, ptr %15, align 4
  %191 = load ptr, ptr %14, align 8
  %192 = getelementptr inbounds %struct.mz_zip_archive, ptr %191, i32 0, i32 5
  store i32 %190, ptr %192, align 4
  br label %193

193:                                              ; preds = %185, %189
  store i32 0, ptr %38, align 4
  br label %638

194:                                              ; preds = %161
  %195 = load ptr, ptr %56, align 8
  %196 = getelementptr inbounds i8, ptr %195, i64 26
  %197 = getelementptr inbounds i8, ptr %196, i64 0
  %198 = load i8, ptr %197, align 1
  %199 = zext i8 %198 to i32
  %200 = load ptr, ptr %56, align 8
  %201 = getelementptr inbounds i8, ptr %200, i64 26
  %202 = getelementptr inbounds i8, ptr %201, i64 1
  %203 = load i8, ptr %202, align 1
  %204 = zext i8 %203 to i32
  %205 = shl i32 %204, 8
  %206 = or i32 %199, %205
  %207 = add i32 30, %206
  %208 = load ptr, ptr %56, align 8
  %209 = getelementptr inbounds i8, ptr %208, i64 28
  %210 = getelementptr inbounds i8, ptr %209, i64 0
  %211 = load i8, ptr %210, align 1
  %212 = zext i8 %211 to i32
  %213 = load ptr, ptr %56, align 8
  %214 = getelementptr inbounds i8, ptr %213, i64 28
  %215 = getelementptr inbounds i8, ptr %214, i64 1
  %216 = load i8, ptr %215, align 1
  %217 = zext i8 %216 to i32
  %218 = shl i32 %217, 8
  %219 = or i32 %212, %218
  %220 = add i32 %207, %219
  %221 = zext i32 %220 to i64
  %222 = load i64, ptr %51, align 8
  %223 = add i64 %222, %221
  store i64 %223, ptr %51, align 8
  %224 = load i64, ptr %51, align 8
  %225 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %226 = load i64, ptr %225, align 8
  %227 = add i64 %224, %226
  %228 = load ptr, ptr %39, align 8
  %229 = getelementptr inbounds %struct.mz_zip_archive, ptr %228, i32 0, i32 0
  %230 = load i64, ptr %229, align 8
  %231 = icmp ugt i64 %227, %230
  br i1 %231, label %232, label %241

232:                                              ; preds = %194
  %233 = load ptr, ptr %39, align 8
  store ptr %233, ptr %16, align 8
  store i32 9, ptr %17, align 4
  %234 = load ptr, ptr %16, align 8
  %235 = icmp ne ptr %234, null
  br i1 %235, label %236, label %240

236:                                              ; preds = %232
  %237 = load i32, ptr %17, align 4
  %238 = load ptr, ptr %16, align 8
  %239 = getelementptr inbounds %struct.mz_zip_archive, ptr %238, i32 0, i32 5
  store i32 %237, ptr %239, align 4
  br label %240

240:                                              ; preds = %232, %236
  store i32 0, ptr %38, align 4
  br label %638

241:                                              ; preds = %194
  %242 = load ptr, ptr %39, align 8
  %243 = getelementptr inbounds %struct.mz_zip_archive, ptr %242, i32 0, i32 15
  %244 = load ptr, ptr %243, align 8
  %245 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %244, i32 0, i32 8
  %246 = load ptr, ptr %245, align 8
  %247 = icmp ne ptr %246, null
  br i1 %247, label %248, label %258

248:                                              ; preds = %241
  %249 = load ptr, ptr %39, align 8
  %250 = getelementptr inbounds %struct.mz_zip_archive, ptr %249, i32 0, i32 15
  %251 = load ptr, ptr %250, align 8
  %252 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %251, i32 0, i32 8
  %253 = load ptr, ptr %252, align 8
  %254 = load i64, ptr %51, align 8
  %255 = getelementptr inbounds i8, ptr %253, i64 %254
  store ptr %255, ptr %53, align 8
  %256 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %257 = load i64, ptr %256, align 8
  store i64 %257, ptr %48, align 8
  store i64 %257, ptr %46, align 8
  store i64 0, ptr %49, align 8
  br label %289

258:                                              ; preds = %241
  %259 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %260 = load i64, ptr %259, align 8
  %261 = icmp ult i64 %260, 65536
  br i1 %261, label %262, label %265

262:                                              ; preds = %258
  %263 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %264 = load i64, ptr %263, align 8
  br label %266

265:                                              ; preds = %258
  br label %266

266:                                              ; preds = %265, %262
  %267 = phi i64 [ %264, %262 ], [ 65536, %265 ]
  store i64 %267, ptr %46, align 8
  %268 = load ptr, ptr %39, align 8
  %269 = getelementptr inbounds %struct.mz_zip_archive, ptr %268, i32 0, i32 7
  %270 = load ptr, ptr %269, align 8
  %271 = load ptr, ptr %39, align 8
  %272 = getelementptr inbounds %struct.mz_zip_archive, ptr %271, i32 0, i32 10
  %273 = load ptr, ptr %272, align 8
  %274 = load i64, ptr %46, align 8
  %275 = call ptr %270(ptr noundef %273, i64 noundef 1, i64 noundef %274)
  store ptr %275, ptr %53, align 8
  %276 = icmp eq ptr null, %275
  br i1 %276, label %277, label %286

277:                                              ; preds = %266
  %278 = load ptr, ptr %39, align 8
  store ptr %278, ptr %18, align 8
  store i32 16, ptr %19, align 4
  %279 = load ptr, ptr %18, align 8
  %280 = icmp ne ptr %279, null
  br i1 %280, label %281, label %285

281:                                              ; preds = %277
  %282 = load i32, ptr %19, align 4
  %283 = load ptr, ptr %18, align 8
  %284 = getelementptr inbounds %struct.mz_zip_archive, ptr %283, i32 0, i32 5
  store i32 %282, ptr %284, align 4
  br label %285

285:                                              ; preds = %277, %281
  store i32 0, ptr %38, align 4
  br label %638

286:                                              ; preds = %266
  store i64 0, ptr %48, align 8
  %287 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %288 = load i64, ptr %287, align 8
  store i64 %288, ptr %49, align 8
  br label %289

289:                                              ; preds = %286, %248
  %290 = load i32, ptr %43, align 4
  %291 = and i32 %290, 1024
  %292 = icmp ne i32 %291, 0
  br i1 %292, label %297, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 5
  %295 = load i16, ptr %294, align 2
  %296 = icmp ne i16 %295, 0
  br i1 %296, label %422, label %297

297:                                              ; preds = %293, %289
  %298 = load ptr, ptr %39, align 8
  %299 = getelementptr inbounds %struct.mz_zip_archive, ptr %298, i32 0, i32 15
  %300 = load ptr, ptr %299, align 8
  %301 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %300, i32 0, i32 8
  %302 = load ptr, ptr %301, align 8
  %303 = icmp ne ptr %302, null
  br i1 %303, label %304, label %346

304:                                              ; preds = %297
  %305 = load ptr, ptr %41, align 8
  %306 = load ptr, ptr %42, align 8
  %307 = load i64, ptr %50, align 8
  %308 = load ptr, ptr %53, align 8
  %309 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %310 = load i64, ptr %309, align 8
  %311 = call i64 %305(ptr noundef %306, i64 noundef %307, ptr noundef %308, i64 noundef %310)
  %312 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %313 = load i64, ptr %312, align 8
  %314 = icmp ne i64 %311, %313
  br i1 %314, label %315, label %324

315:                                              ; preds = %304
  %316 = load ptr, ptr %39, align 8
  store ptr %316, ptr %20, align 8
  store i32 31, ptr %21, align 4
  %317 = load ptr, ptr %20, align 8
  %318 = icmp ne ptr %317, null
  br i1 %318, label %319, label %323

319:                                              ; preds = %315
  %320 = load i32, ptr %21, align 4
  %321 = load ptr, ptr %20, align 8
  %322 = getelementptr inbounds %struct.mz_zip_archive, ptr %321, i32 0, i32 5
  store i32 %320, ptr %322, align 4
  br label %323

323:                                              ; preds = %315, %319
  store i32 -1, ptr %44, align 4
  br label %337

324:                                              ; preds = %304
  %325 = load i32, ptr %43, align 4
  %326 = and i32 %325, 1024
  %327 = icmp ne i32 %326, 0
  br i1 %327, label %336, label %328

328:                                              ; preds = %324
  %329 = load i32, ptr %45, align 4
  %330 = zext i32 %329 to i64
  %331 = load ptr, ptr %53, align 8
  %332 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %333 = load i64, ptr %332, align 8
  %334 = call i64 @mz_crc32(i64 noundef %330, ptr noundef %331, i64 noundef %333)
  %335 = trunc i64 %334 to i32
  store i32 %335, ptr %45, align 4
  br label %336

336:                                              ; preds = %328, %324
  br label %337

337:                                              ; preds = %336, %323
  %338 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %339 = load i64, ptr %338, align 8
  %340 = load i64, ptr %51, align 8
  %341 = add i64 %340, %339
  store i64 %341, ptr %51, align 8
  %342 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 7
  %343 = load i64, ptr %342, align 8
  %344 = load i64, ptr %50, align 8
  %345 = add i64 %344, %343
  store i64 %345, ptr %50, align 8
  store i64 0, ptr %49, align 8
  br label %421

346:                                              ; preds = %297
  br label %347

347:                                              ; preds = %410, %346
  %348 = load i64, ptr %49, align 8
  %349 = icmp ne i64 %348, 0
  br i1 %349, label %350, label %420

350:                                              ; preds = %347
  %351 = load i64, ptr %46, align 8
  %352 = load i64, ptr %49, align 8
  %353 = icmp ult i64 %351, %352
  br i1 %353, label %354, label %356

354:                                              ; preds = %350
  %355 = load i64, ptr %46, align 8
  br label %358

356:                                              ; preds = %350
  %357 = load i64, ptr %49, align 8
  br label %358

358:                                              ; preds = %356, %354
  %359 = phi i64 [ %355, %354 ], [ %357, %356 ]
  store i64 %359, ptr %48, align 8
  %360 = load ptr, ptr %39, align 8
  %361 = getelementptr inbounds %struct.mz_zip_archive, ptr %360, i32 0, i32 11
  %362 = load ptr, ptr %361, align 8
  %363 = load ptr, ptr %39, align 8
  %364 = getelementptr inbounds %struct.mz_zip_archive, ptr %363, i32 0, i32 14
  %365 = load ptr, ptr %364, align 8
  %366 = load i64, ptr %51, align 8
  %367 = load ptr, ptr %53, align 8
  %368 = load i64, ptr %48, align 8
  %369 = call i64 %362(ptr noundef %365, i64 noundef %366, ptr noundef %367, i64 noundef %368)
  %370 = load i64, ptr %48, align 8
  %371 = icmp ne i64 %369, %370
  br i1 %371, label %372, label %381

372:                                              ; preds = %358
  %373 = load ptr, ptr %39, align 8
  store ptr %373, ptr %22, align 8
  store i32 20, ptr %23, align 4
  %374 = load ptr, ptr %22, align 8
  %375 = icmp ne ptr %374, null
  br i1 %375, label %376, label %380

376:                                              ; preds = %372
  %377 = load i32, ptr %23, align 4
  %378 = load ptr, ptr %22, align 8
  %379 = getelementptr inbounds %struct.mz_zip_archive, ptr %378, i32 0, i32 5
  store i32 %377, ptr %379, align 4
  br label %380

380:                                              ; preds = %372, %376
  store i32 -1, ptr %44, align 4
  br label %420

381:                                              ; preds = %358
  %382 = load i32, ptr %43, align 4
  %383 = and i32 %382, 1024
  %384 = icmp ne i32 %383, 0
  br i1 %384, label %392, label %385

385:                                              ; preds = %381
  %386 = load i32, ptr %45, align 4
  %387 = zext i32 %386 to i64
  %388 = load ptr, ptr %53, align 8
  %389 = load i64, ptr %48, align 8
  %390 = call i64 @mz_crc32(i64 noundef %387, ptr noundef %388, i64 noundef %389)
  %391 = trunc i64 %390 to i32
  store i32 %391, ptr %45, align 4
  br label %392

392:                                              ; preds = %385, %381
  %393 = load ptr, ptr %41, align 8
  %394 = load ptr, ptr %42, align 8
  %395 = load i64, ptr %50, align 8
  %396 = load ptr, ptr %53, align 8
  %397 = load i64, ptr %48, align 8
  %398 = call i64 %393(ptr noundef %394, i64 noundef %395, ptr noundef %396, i64 noundef %397)
  %399 = load i64, ptr %48, align 8
  %400 = icmp ne i64 %398, %399
  br i1 %400, label %401, label %410

401:                                              ; preds = %392
  %402 = load ptr, ptr %39, align 8
  store ptr %402, ptr %24, align 8
  store i32 31, ptr %25, align 4
  %403 = load ptr, ptr %24, align 8
  %404 = icmp ne ptr %403, null
  br i1 %404, label %405, label %409

405:                                              ; preds = %401
  %406 = load i32, ptr %25, align 4
  %407 = load ptr, ptr %24, align 8
  %408 = getelementptr inbounds %struct.mz_zip_archive, ptr %407, i32 0, i32 5
  store i32 %406, ptr %408, align 4
  br label %409

409:                                              ; preds = %401, %405
  store i32 -1, ptr %44, align 4
  br label %420

410:                                              ; preds = %392
  %411 = load i64, ptr %48, align 8
  %412 = load i64, ptr %51, align 8
  %413 = add i64 %412, %411
  store i64 %413, ptr %51, align 8
  %414 = load i64, ptr %48, align 8
  %415 = load i64, ptr %50, align 8
  %416 = add i64 %415, %414
  store i64 %416, ptr %50, align 8
  %417 = load i64, ptr %48, align 8
  %418 = load i64, ptr %49, align 8
  %419 = sub i64 %418, %417
  store i64 %419, ptr %49, align 8
  br label %347, !llvm.loop !118

420:                                              ; preds = %409, %380, %347
  br label %421

421:                                              ; preds = %420, %337
  br label %571

422:                                              ; preds = %293
  br label %423

423:                                              ; preds = %422
  %424 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %57, i32 0, i32 0
  store i32 0, ptr %424, align 8
  br label %425

425:                                              ; preds = %423
  %426 = load ptr, ptr %39, align 8
  %427 = getelementptr inbounds %struct.mz_zip_archive, ptr %426, i32 0, i32 7
  %428 = load ptr, ptr %427, align 8
  %429 = load ptr, ptr %39, align 8
  %430 = getelementptr inbounds %struct.mz_zip_archive, ptr %429, i32 0, i32 10
  %431 = load ptr, ptr %430, align 8
  %432 = call ptr %428(ptr noundef %431, i64 noundef 1, i64 noundef 32768)
  store ptr %432, ptr %54, align 8
  %433 = icmp eq ptr null, %432
  br i1 %433, label %434, label %443

434:                                              ; preds = %425
  %435 = load ptr, ptr %39, align 8
  store ptr %435, ptr %26, align 8
  store i32 16, ptr %27, align 4
  %436 = load ptr, ptr %26, align 8
  %437 = icmp ne ptr %436, null
  br i1 %437, label %438, label %442

438:                                              ; preds = %434
  %439 = load i32, ptr %27, align 4
  %440 = load ptr, ptr %26, align 8
  %441 = getelementptr inbounds %struct.mz_zip_archive, ptr %440, i32 0, i32 5
  store i32 %439, ptr %441, align 4
  br label %442

442:                                              ; preds = %434, %438
  store i32 -1, ptr %44, align 4
  br label %570

443:                                              ; preds = %425
  br label %444

444:                                              ; preds = %567, %443
  %445 = load ptr, ptr %54, align 8
  %446 = load i64, ptr %50, align 8
  %447 = and i64 %446, 32767
  %448 = getelementptr inbounds i8, ptr %445, i64 %447
  store ptr %448, ptr %58, align 8
  %449 = load i64, ptr %50, align 8
  %450 = and i64 %449, 32767
  %451 = sub i64 32768, %450
  store i64 %451, ptr %60, align 8
  %452 = load i64, ptr %48, align 8
  %453 = icmp ne i64 %452, 0
  br i1 %453, label %499, label %454

454:                                              ; preds = %444
  %455 = load ptr, ptr %39, align 8
  %456 = getelementptr inbounds %struct.mz_zip_archive, ptr %455, i32 0, i32 15
  %457 = load ptr, ptr %456, align 8
  %458 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %457, i32 0, i32 8
  %459 = load ptr, ptr %458, align 8
  %460 = icmp ne ptr %459, null
  br i1 %460, label %499, label %461

461:                                              ; preds = %454
  %462 = load i64, ptr %46, align 8
  %463 = load i64, ptr %49, align 8
  %464 = icmp ult i64 %462, %463
  br i1 %464, label %465, label %467

465:                                              ; preds = %461
  %466 = load i64, ptr %46, align 8
  br label %469

467:                                              ; preds = %461
  %468 = load i64, ptr %49, align 8
  br label %469

469:                                              ; preds = %467, %465
  %470 = phi i64 [ %466, %465 ], [ %468, %467 ]
  store i64 %470, ptr %48, align 8
  %471 = load ptr, ptr %39, align 8
  %472 = getelementptr inbounds %struct.mz_zip_archive, ptr %471, i32 0, i32 11
  %473 = load ptr, ptr %472, align 8
  %474 = load ptr, ptr %39, align 8
  %475 = getelementptr inbounds %struct.mz_zip_archive, ptr %474, i32 0, i32 14
  %476 = load ptr, ptr %475, align 8
  %477 = load i64, ptr %51, align 8
  %478 = load ptr, ptr %53, align 8
  %479 = load i64, ptr %48, align 8
  %480 = call i64 %473(ptr noundef %476, i64 noundef %477, ptr noundef %478, i64 noundef %479)
  %481 = load i64, ptr %48, align 8
  %482 = icmp ne i64 %480, %481
  br i1 %482, label %483, label %492

483:                                              ; preds = %469
  %484 = load ptr, ptr %39, align 8
  store ptr %484, ptr %28, align 8
  store i32 20, ptr %29, align 4
  %485 = load ptr, ptr %28, align 8
  %486 = icmp ne ptr %485, null
  br i1 %486, label %487, label %491

487:                                              ; preds = %483
  %488 = load i32, ptr %29, align 4
  %489 = load ptr, ptr %28, align 8
  %490 = getelementptr inbounds %struct.mz_zip_archive, ptr %489, i32 0, i32 5
  store i32 %488, ptr %490, align 4
  br label %491

491:                                              ; preds = %483, %487
  store i32 -1, ptr %44, align 4
  br label %569

492:                                              ; preds = %469
  %493 = load i64, ptr %48, align 8
  %494 = load i64, ptr %51, align 8
  %495 = add i64 %494, %493
  store i64 %495, ptr %51, align 8
  %496 = load i64, ptr %48, align 8
  %497 = load i64, ptr %49, align 8
  %498 = sub i64 %497, %496
  store i64 %498, ptr %49, align 8
  store i64 0, ptr %47, align 8
  br label %499

499:                                              ; preds = %492, %454, %444
  %500 = load i64, ptr %48, align 8
  store i64 %500, ptr %59, align 8
  %501 = load ptr, ptr %53, align 8
  %502 = load i64, ptr %47, align 8
  %503 = getelementptr inbounds i8, ptr %501, i64 %502
  %504 = load ptr, ptr %54, align 8
  %505 = load ptr, ptr %58, align 8
  %506 = load i64, ptr %49, align 8
  %507 = icmp ne i64 %506, 0
  %508 = zext i1 %507 to i64
  %509 = select i1 %507, i32 2, i32 0
  %510 = call i32 @tinfl_decompress(ptr noundef %57, ptr noundef %503, ptr noundef %59, ptr noundef %504, ptr noundef %505, ptr noundef %60, i32 noundef %509)
  store i32 %510, ptr %44, align 4
  %511 = load i64, ptr %59, align 8
  %512 = load i64, ptr %48, align 8
  %513 = sub i64 %512, %511
  store i64 %513, ptr %48, align 8
  %514 = load i64, ptr %59, align 8
  %515 = load i64, ptr %47, align 8
  %516 = add i64 %515, %514
  store i64 %516, ptr %47, align 8
  %517 = load i64, ptr %60, align 8
  %518 = icmp ne i64 %517, 0
  br i1 %518, label %519, label %560

519:                                              ; preds = %499
  %520 = load ptr, ptr %41, align 8
  %521 = load ptr, ptr %42, align 8
  %522 = load i64, ptr %50, align 8
  %523 = load ptr, ptr %58, align 8
  %524 = load i64, ptr %60, align 8
  %525 = call i64 %520(ptr noundef %521, i64 noundef %522, ptr noundef %523, i64 noundef %524)
  %526 = load i64, ptr %60, align 8
  %527 = icmp ne i64 %525, %526
  br i1 %527, label %528, label %537

528:                                              ; preds = %519
  %529 = load ptr, ptr %39, align 8
  store ptr %529, ptr %30, align 8
  store i32 31, ptr %31, align 4
  %530 = load ptr, ptr %30, align 8
  %531 = icmp ne ptr %530, null
  br i1 %531, label %532, label %536

532:                                              ; preds = %528
  %533 = load i32, ptr %31, align 4
  %534 = load ptr, ptr %30, align 8
  %535 = getelementptr inbounds %struct.mz_zip_archive, ptr %534, i32 0, i32 5
  store i32 %533, ptr %535, align 4
  br label %536

536:                                              ; preds = %528, %532
  store i32 -1, ptr %44, align 4
  br label %569

537:                                              ; preds = %519
  %538 = load i32, ptr %45, align 4
  %539 = zext i32 %538 to i64
  %540 = load ptr, ptr %58, align 8
  %541 = load i64, ptr %60, align 8
  %542 = call i64 @mz_crc32(i64 noundef %539, ptr noundef %540, i64 noundef %541)
  %543 = trunc i64 %542 to i32
  store i32 %543, ptr %45, align 4
  %544 = load i64, ptr %60, align 8
  %545 = load i64, ptr %50, align 8
  %546 = add i64 %545, %544
  store i64 %546, ptr %50, align 8
  %547 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 8
  %548 = load i64, ptr %547, align 8
  %549 = icmp ugt i64 %546, %548
  br i1 %549, label %550, label %559

550:                                              ; preds = %537
  %551 = load ptr, ptr %39, align 8
  store ptr %551, ptr %32, align 8
  store i32 11, ptr %33, align 4
  %552 = load ptr, ptr %32, align 8
  %553 = icmp ne ptr %552, null
  br i1 %553, label %554, label %558

554:                                              ; preds = %550
  %555 = load i32, ptr %33, align 4
  %556 = load ptr, ptr %32, align 8
  %557 = getelementptr inbounds %struct.mz_zip_archive, ptr %556, i32 0, i32 5
  store i32 %555, ptr %557, align 4
  br label %558

558:                                              ; preds = %550, %554
  store i32 -1, ptr %44, align 4
  br label %569

559:                                              ; preds = %537
  br label %560

560:                                              ; preds = %559, %499
  br label %561

561:                                              ; preds = %560
  %562 = load i32, ptr %44, align 4
  %563 = icmp eq i32 %562, 1
  br i1 %563, label %567, label %564

564:                                              ; preds = %561
  %565 = load i32, ptr %44, align 4
  %566 = icmp eq i32 %565, 2
  br label %567

567:                                              ; preds = %564, %561
  %568 = phi i1 [ true, %561 ], [ %566, %564 ]
  br i1 %568, label %444, label %569, !llvm.loop !119

569:                                              ; preds = %567, %558, %536, %491
  br label %570

570:                                              ; preds = %569, %442
  br label %571

571:                                              ; preds = %570, %421
  %572 = load i32, ptr %44, align 4
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %574, label %608

574:                                              ; preds = %571
  %575 = load i32, ptr %43, align 4
  %576 = and i32 %575, 1024
  %577 = icmp ne i32 %576, 0
  br i1 %577, label %608, label %578

578:                                              ; preds = %574
  %579 = load i64, ptr %50, align 8
  %580 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 8
  %581 = load i64, ptr %580, align 8
  %582 = icmp ne i64 %579, %581
  br i1 %582, label %583, label %592

583:                                              ; preds = %578
  %584 = load ptr, ptr %39, align 8
  store ptr %584, ptr %34, align 8
  store i32 13, ptr %35, align 4
  %585 = load ptr, ptr %34, align 8
  %586 = icmp ne ptr %585, null
  br i1 %586, label %587, label %591

587:                                              ; preds = %583
  %588 = load i32, ptr %35, align 4
  %589 = load ptr, ptr %34, align 8
  %590 = getelementptr inbounds %struct.mz_zip_archive, ptr %589, i32 0, i32 5
  store i32 %588, ptr %590, align 4
  br label %591

591:                                              ; preds = %583, %587
  store i32 -1, ptr %44, align 4
  br label %607

592:                                              ; preds = %578
  %593 = load i32, ptr %45, align 4
  %594 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %52, i32 0, i32 6
  %595 = load i32, ptr %594, align 8
  %596 = icmp ne i32 %593, %595
  br i1 %596, label %597, label %606

597:                                              ; preds = %592
  %598 = load ptr, ptr %39, align 8
  store ptr %598, ptr %36, align 8
  store i32 11, ptr %37, align 4
  %599 = load ptr, ptr %36, align 8
  %600 = icmp ne ptr %599, null
  br i1 %600, label %601, label %605

601:                                              ; preds = %597
  %602 = load i32, ptr %37, align 4
  %603 = load ptr, ptr %36, align 8
  %604 = getelementptr inbounds %struct.mz_zip_archive, ptr %603, i32 0, i32 5
  store i32 %602, ptr %604, align 4
  br label %605

605:                                              ; preds = %597, %601
  store i32 -1, ptr %44, align 4
  br label %606

606:                                              ; preds = %605, %592
  br label %607

607:                                              ; preds = %606, %591
  br label %608

608:                                              ; preds = %607, %574, %571
  %609 = load ptr, ptr %39, align 8
  %610 = getelementptr inbounds %struct.mz_zip_archive, ptr %609, i32 0, i32 15
  %611 = load ptr, ptr %610, align 8
  %612 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %611, i32 0, i32 8
  %613 = load ptr, ptr %612, align 8
  %614 = icmp ne ptr %613, null
  br i1 %614, label %623, label %615

615:                                              ; preds = %608
  %616 = load ptr, ptr %39, align 8
  %617 = getelementptr inbounds %struct.mz_zip_archive, ptr %616, i32 0, i32 8
  %618 = load ptr, ptr %617, align 8
  %619 = load ptr, ptr %39, align 8
  %620 = getelementptr inbounds %struct.mz_zip_archive, ptr %619, i32 0, i32 10
  %621 = load ptr, ptr %620, align 8
  %622 = load ptr, ptr %53, align 8
  call void %618(ptr noundef %621, ptr noundef %622)
  br label %623

623:                                              ; preds = %615, %608
  %624 = load ptr, ptr %54, align 8
  %625 = icmp ne ptr %624, null
  br i1 %625, label %626, label %634

626:                                              ; preds = %623
  %627 = load ptr, ptr %39, align 8
  %628 = getelementptr inbounds %struct.mz_zip_archive, ptr %627, i32 0, i32 8
  %629 = load ptr, ptr %628, align 8
  %630 = load ptr, ptr %39, align 8
  %631 = getelementptr inbounds %struct.mz_zip_archive, ptr %630, i32 0, i32 10
  %632 = load ptr, ptr %631, align 8
  %633 = load ptr, ptr %54, align 8
  call void %629(ptr noundef %632, ptr noundef %633)
  br label %634

634:                                              ; preds = %626, %623
  %635 = load i32, ptr %44, align 4
  %636 = icmp eq i32 %635, 0
  %637 = zext i1 %636 to i32
  store i32 %637, ptr %38, align 4
  br label %638

638:                                              ; preds = %634, %285, %240, %193, %160, %138, %115, %100, %91, %85
  %639 = load i32, ptr %38, align 4
  ret i32 %639
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_extract_file_to_callback(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store ptr %0, ptr %7, align 8
  store ptr %1, ptr %8, align 8
  store ptr %2, ptr %9, align 8
  store ptr %3, ptr %10, align 8
  store i32 %4, ptr %11, align 4
  %13 = load ptr, ptr %7, align 8
  %14 = load ptr, ptr %8, align 8
  %15 = load i32, ptr %11, align 4
  %16 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %13, ptr noundef %14, ptr noundef null, i32 noundef %15, ptr noundef %12)
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %5
  store i32 0, ptr %6, align 4
  br label %26

19:                                               ; preds = %5
  %20 = load ptr, ptr %7, align 8
  %21 = load i32, ptr %12, align 4
  %22 = load ptr, ptr %9, align 8
  %23 = load ptr, ptr %10, align 8
  %24 = load i32, ptr %11, align 4
  %25 = call i32 @mz_zip_reader_extract_to_callback(ptr noundef %20, i32 noundef %21, ptr noundef %22, ptr noundef %23, i32 noundef %24)
  store i32 %25, ptr %6, align 4
  br label %26

26:                                               ; preds = %19, %18
  %27 = load i32, ptr %6, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @mz_zip_reader_extract_iter_new(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca i32, align 4
  %18 = alloca ptr, align 8
  %19 = alloca i32, align 4
  %20 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca ptr, align 8
  %25 = alloca [8 x i32], align 16
  %26 = alloca ptr, align 8
  store ptr %0, ptr %21, align 8
  store i32 %1, ptr %22, align 4
  store i32 %2, ptr %23, align 4
  %27 = getelementptr inbounds [8 x i32], ptr %25, i64 0, i64 0
  store ptr %27, ptr %26, align 8
  %28 = load ptr, ptr %21, align 8
  %29 = icmp ne ptr %28, null
  br i1 %29, label %30, label %35

30:                                               ; preds = %3
  %31 = load ptr, ptr %21, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive, ptr %31, i32 0, i32 15
  %33 = load ptr, ptr %32, align 8
  %34 = icmp ne ptr %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %30, %3
  store ptr null, ptr %20, align 8
  br label %444

36:                                               ; preds = %30
  %37 = load ptr, ptr %21, align 8
  %38 = getelementptr inbounds %struct.mz_zip_archive, ptr %37, i32 0, i32 7
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr %21, align 8
  %41 = getelementptr inbounds %struct.mz_zip_archive, ptr %40, i32 0, i32 10
  %42 = load ptr, ptr %41, align 8
  %43 = call ptr %39(ptr noundef %42, i64 noundef 1, i64 noundef 9584)
  store ptr %43, ptr %24, align 8
  %44 = load ptr, ptr %24, align 8
  %45 = icmp ne ptr %44, null
  br i1 %45, label %55, label %46

46:                                               ; preds = %36
  %47 = load ptr, ptr %21, align 8
  store ptr %47, ptr %4, align 8
  store i32 16, ptr %5, align 4
  %48 = load ptr, ptr %4, align 8
  %49 = icmp ne ptr %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = load i32, ptr %5, align 4
  %52 = load ptr, ptr %4, align 8
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %52, i32 0, i32 5
  store i32 %51, ptr %53, align 4
  br label %54

54:                                               ; preds = %46, %50
  store ptr null, ptr %20, align 8
  br label %444

55:                                               ; preds = %36
  %56 = load ptr, ptr %21, align 8
  %57 = load i32, ptr %22, align 4
  %58 = load ptr, ptr %24, align 8
  %59 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %58, i32 0, i32 9
  %60 = call i32 @mz_zip_reader_file_stat(ptr noundef %56, i32 noundef %57, ptr noundef %59)
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %55
  %63 = load ptr, ptr %21, align 8
  %64 = getelementptr inbounds %struct.mz_zip_archive, ptr %63, i32 0, i32 8
  %65 = load ptr, ptr %64, align 8
  %66 = load ptr, ptr %21, align 8
  %67 = getelementptr inbounds %struct.mz_zip_archive, ptr %66, i32 0, i32 10
  %68 = load ptr, ptr %67, align 8
  %69 = load ptr, ptr %24, align 8
  call void %65(ptr noundef %68, ptr noundef %69)
  store ptr null, ptr %20, align 8
  br label %444

70:                                               ; preds = %55
  %71 = load ptr, ptr %24, align 8
  %72 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %71, i32 0, i32 9
  %73 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %72, i32 0, i32 4
  %74 = load i16, ptr %73, align 4
  %75 = zext i16 %74 to i32
  %76 = and i32 %75, 97
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %94

78:                                               ; preds = %70
  %79 = load ptr, ptr %21, align 8
  store ptr %79, ptr %6, align 8
  store i32 5, ptr %7, align 4
  %80 = load ptr, ptr %6, align 8
  %81 = icmp ne ptr %80, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  %83 = load i32, ptr %7, align 4
  %84 = load ptr, ptr %6, align 8
  %85 = getelementptr inbounds %struct.mz_zip_archive, ptr %84, i32 0, i32 5
  store i32 %83, ptr %85, align 4
  br label %86

86:                                               ; preds = %78, %82
  %87 = load ptr, ptr %21, align 8
  %88 = getelementptr inbounds %struct.mz_zip_archive, ptr %87, i32 0, i32 8
  %89 = load ptr, ptr %88, align 8
  %90 = load ptr, ptr %21, align 8
  %91 = getelementptr inbounds %struct.mz_zip_archive, ptr %90, i32 0, i32 10
  %92 = load ptr, ptr %91, align 8
  %93 = load ptr, ptr %24, align 8
  call void %89(ptr noundef %92, ptr noundef %93)
  store ptr null, ptr %20, align 8
  br label %444

94:                                               ; preds = %70
  %95 = load i32, ptr %23, align 4
  %96 = and i32 %95, 1024
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %128, label %98

98:                                               ; preds = %94
  %99 = load ptr, ptr %24, align 8
  %100 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %100, i32 0, i32 5
  %102 = load i16, ptr %101, align 2
  %103 = zext i16 %102 to i32
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %128

105:                                              ; preds = %98
  %106 = load ptr, ptr %24, align 8
  %107 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %106, i32 0, i32 9
  %108 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %107, i32 0, i32 5
  %109 = load i16, ptr %108, align 2
  %110 = zext i16 %109 to i32
  %111 = icmp ne i32 %110, 8
  br i1 %111, label %112, label %128

112:                                              ; preds = %105
  %113 = load ptr, ptr %21, align 8
  store ptr %113, ptr %8, align 8
  store i32 4, ptr %9, align 4
  %114 = load ptr, ptr %8, align 8
  %115 = icmp ne ptr %114, null
  br i1 %115, label %116, label %120

116:                                              ; preds = %112
  %117 = load i32, ptr %9, align 4
  %118 = load ptr, ptr %8, align 8
  %119 = getelementptr inbounds %struct.mz_zip_archive, ptr %118, i32 0, i32 5
  store i32 %117, ptr %119, align 4
  br label %120

120:                                              ; preds = %112, %116
  %121 = load ptr, ptr %21, align 8
  %122 = getelementptr inbounds %struct.mz_zip_archive, ptr %121, i32 0, i32 8
  %123 = load ptr, ptr %122, align 8
  %124 = load ptr, ptr %21, align 8
  %125 = getelementptr inbounds %struct.mz_zip_archive, ptr %124, i32 0, i32 10
  %126 = load ptr, ptr %125, align 8
  %127 = load ptr, ptr %24, align 8
  call void %123(ptr noundef %126, ptr noundef %127)
  store ptr null, ptr %20, align 8
  br label %444

128:                                              ; preds = %105, %98, %94
  %129 = load ptr, ptr %21, align 8
  %130 = load ptr, ptr %24, align 8
  %131 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %130, i32 0, i32 0
  store ptr %129, ptr %131, align 8
  %132 = load i32, ptr %23, align 4
  %133 = load ptr, ptr %24, align 8
  %134 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %133, i32 0, i32 1
  store i32 %132, ptr %134, align 8
  %135 = load ptr, ptr %24, align 8
  %136 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %135, i32 0, i32 2
  store i32 0, ptr %136, align 4
  %137 = load ptr, ptr %24, align 8
  %138 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %137, i32 0, i32 14
  store i32 0, ptr %138, align 8
  %139 = load ptr, ptr %24, align 8
  %140 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %139, i32 0, i32 4
  store i64 0, ptr %140, align 8
  %141 = load ptr, ptr %24, align 8
  %142 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %141, i32 0, i32 7
  store i64 0, ptr %142, align 8
  %143 = load ptr, ptr %24, align 8
  %144 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %143, i32 0, i32 10
  store ptr null, ptr %144, align 8
  %145 = load ptr, ptr %24, align 8
  %146 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %145, i32 0, i32 11
  store ptr null, ptr %146, align 8
  %147 = load ptr, ptr %24, align 8
  %148 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %147, i32 0, i32 12
  store i64 0, ptr %148, align 8
  %149 = load ptr, ptr %24, align 8
  %150 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %149, i32 0, i32 9
  %151 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %150, i32 0, i32 11
  %152 = load i64, ptr %151, align 8
  %153 = load ptr, ptr %24, align 8
  %154 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %153, i32 0, i32 8
  store i64 %152, ptr %154, align 8
  %155 = load ptr, ptr %21, align 8
  %156 = getelementptr inbounds %struct.mz_zip_archive, ptr %155, i32 0, i32 11
  %157 = load ptr, ptr %156, align 8
  %158 = load ptr, ptr %21, align 8
  %159 = getelementptr inbounds %struct.mz_zip_archive, ptr %158, i32 0, i32 14
  %160 = load ptr, ptr %159, align 8
  %161 = load ptr, ptr %24, align 8
  %162 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %161, i32 0, i32 8
  %163 = load i64, ptr %162, align 8
  %164 = load ptr, ptr %26, align 8
  %165 = call i64 %157(ptr noundef %160, i64 noundef %163, ptr noundef %164, i64 noundef 30)
  %166 = icmp ne i64 %165, 30
  br i1 %166, label %167, label %183

167:                                              ; preds = %128
  %168 = load ptr, ptr %21, align 8
  store ptr %168, ptr %10, align 8
  store i32 20, ptr %11, align 4
  %169 = load ptr, ptr %10, align 8
  %170 = icmp ne ptr %169, null
  br i1 %170, label %171, label %175

171:                                              ; preds = %167
  %172 = load i32, ptr %11, align 4
  %173 = load ptr, ptr %10, align 8
  %174 = getelementptr inbounds %struct.mz_zip_archive, ptr %173, i32 0, i32 5
  store i32 %172, ptr %174, align 4
  br label %175

175:                                              ; preds = %167, %171
  %176 = load ptr, ptr %21, align 8
  %177 = getelementptr inbounds %struct.mz_zip_archive, ptr %176, i32 0, i32 8
  %178 = load ptr, ptr %177, align 8
  %179 = load ptr, ptr %21, align 8
  %180 = getelementptr inbounds %struct.mz_zip_archive, ptr %179, i32 0, i32 10
  %181 = load ptr, ptr %180, align 8
  %182 = load ptr, ptr %24, align 8
  call void %178(ptr noundef %181, ptr noundef %182)
  store ptr null, ptr %20, align 8
  br label %444

183:                                              ; preds = %128
  %184 = load ptr, ptr %26, align 8
  %185 = getelementptr inbounds i8, ptr %184, i64 0
  %186 = load i8, ptr %185, align 1
  %187 = zext i8 %186 to i32
  %188 = load ptr, ptr %26, align 8
  %189 = getelementptr inbounds i8, ptr %188, i64 1
  %190 = load i8, ptr %189, align 1
  %191 = zext i8 %190 to i32
  %192 = shl i32 %191, 8
  %193 = or i32 %187, %192
  %194 = load ptr, ptr %26, align 8
  %195 = getelementptr inbounds i8, ptr %194, i64 2
  %196 = load i8, ptr %195, align 1
  %197 = zext i8 %196 to i32
  %198 = shl i32 %197, 16
  %199 = or i32 %193, %198
  %200 = load ptr, ptr %26, align 8
  %201 = getelementptr inbounds i8, ptr %200, i64 3
  %202 = load i8, ptr %201, align 1
  %203 = zext i8 %202 to i32
  %204 = shl i32 %203, 24
  %205 = or i32 %199, %204
  %206 = icmp ne i32 %205, 67324752
  br i1 %206, label %207, label %223

207:                                              ; preds = %183
  %208 = load ptr, ptr %21, align 8
  store ptr %208, ptr %12, align 8
  store i32 9, ptr %13, align 4
  %209 = load ptr, ptr %12, align 8
  %210 = icmp ne ptr %209, null
  br i1 %210, label %211, label %215

211:                                              ; preds = %207
  %212 = load i32, ptr %13, align 4
  %213 = load ptr, ptr %12, align 8
  %214 = getelementptr inbounds %struct.mz_zip_archive, ptr %213, i32 0, i32 5
  store i32 %212, ptr %214, align 4
  br label %215

215:                                              ; preds = %207, %211
  %216 = load ptr, ptr %21, align 8
  %217 = getelementptr inbounds %struct.mz_zip_archive, ptr %216, i32 0, i32 8
  %218 = load ptr, ptr %217, align 8
  %219 = load ptr, ptr %21, align 8
  %220 = getelementptr inbounds %struct.mz_zip_archive, ptr %219, i32 0, i32 10
  %221 = load ptr, ptr %220, align 8
  %222 = load ptr, ptr %24, align 8
  call void %218(ptr noundef %221, ptr noundef %222)
  store ptr null, ptr %20, align 8
  br label %444

223:                                              ; preds = %183
  %224 = load ptr, ptr %26, align 8
  %225 = getelementptr inbounds i8, ptr %224, i64 26
  %226 = getelementptr inbounds i8, ptr %225, i64 0
  %227 = load i8, ptr %226, align 1
  %228 = zext i8 %227 to i32
  %229 = load ptr, ptr %26, align 8
  %230 = getelementptr inbounds i8, ptr %229, i64 26
  %231 = getelementptr inbounds i8, ptr %230, i64 1
  %232 = load i8, ptr %231, align 1
  %233 = zext i8 %232 to i32
  %234 = shl i32 %233, 8
  %235 = or i32 %228, %234
  %236 = add i32 30, %235
  %237 = load ptr, ptr %26, align 8
  %238 = getelementptr inbounds i8, ptr %237, i64 28
  %239 = getelementptr inbounds i8, ptr %238, i64 0
  %240 = load i8, ptr %239, align 1
  %241 = zext i8 %240 to i32
  %242 = load ptr, ptr %26, align 8
  %243 = getelementptr inbounds i8, ptr %242, i64 28
  %244 = getelementptr inbounds i8, ptr %243, i64 1
  %245 = load i8, ptr %244, align 1
  %246 = zext i8 %245 to i32
  %247 = shl i32 %246, 8
  %248 = or i32 %241, %247
  %249 = add i32 %236, %248
  %250 = zext i32 %249 to i64
  %251 = load ptr, ptr %24, align 8
  %252 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %251, i32 0, i32 8
  %253 = load i64, ptr %252, align 8
  %254 = add i64 %253, %250
  store i64 %254, ptr %252, align 8
  %255 = load ptr, ptr %24, align 8
  %256 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %255, i32 0, i32 8
  %257 = load i64, ptr %256, align 8
  %258 = load ptr, ptr %24, align 8
  %259 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %258, i32 0, i32 9
  %260 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %259, i32 0, i32 7
  %261 = load i64, ptr %260, align 8
  %262 = add i64 %257, %261
  %263 = load ptr, ptr %21, align 8
  %264 = getelementptr inbounds %struct.mz_zip_archive, ptr %263, i32 0, i32 0
  %265 = load i64, ptr %264, align 8
  %266 = icmp ugt i64 %262, %265
  br i1 %266, label %267, label %283

267:                                              ; preds = %223
  %268 = load ptr, ptr %21, align 8
  store ptr %268, ptr %14, align 8
  store i32 9, ptr %15, align 4
  %269 = load ptr, ptr %14, align 8
  %270 = icmp ne ptr %269, null
  br i1 %270, label %271, label %275

271:                                              ; preds = %267
  %272 = load i32, ptr %15, align 4
  %273 = load ptr, ptr %14, align 8
  %274 = getelementptr inbounds %struct.mz_zip_archive, ptr %273, i32 0, i32 5
  store i32 %272, ptr %274, align 4
  br label %275

275:                                              ; preds = %267, %271
  %276 = load ptr, ptr %21, align 8
  %277 = getelementptr inbounds %struct.mz_zip_archive, ptr %276, i32 0, i32 8
  %278 = load ptr, ptr %277, align 8
  %279 = load ptr, ptr %21, align 8
  %280 = getelementptr inbounds %struct.mz_zip_archive, ptr %279, i32 0, i32 10
  %281 = load ptr, ptr %280, align 8
  %282 = load ptr, ptr %24, align 8
  call void %278(ptr noundef %281, ptr noundef %282)
  store ptr null, ptr %20, align 8
  br label %444

283:                                              ; preds = %223
  %284 = load ptr, ptr %21, align 8
  %285 = getelementptr inbounds %struct.mz_zip_archive, ptr %284, i32 0, i32 15
  %286 = load ptr, ptr %285, align 8
  %287 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %286, i32 0, i32 8
  %288 = load ptr, ptr %287, align 8
  %289 = icmp ne ptr %288, null
  br i1 %289, label %290, label %316

290:                                              ; preds = %283
  %291 = load ptr, ptr %21, align 8
  %292 = getelementptr inbounds %struct.mz_zip_archive, ptr %291, i32 0, i32 15
  %293 = load ptr, ptr %292, align 8
  %294 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %293, i32 0, i32 8
  %295 = load ptr, ptr %294, align 8
  %296 = load ptr, ptr %24, align 8
  %297 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %296, i32 0, i32 8
  %298 = load i64, ptr %297, align 8
  %299 = getelementptr inbounds i8, ptr %295, i64 %298
  %300 = load ptr, ptr %24, align 8
  %301 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %300, i32 0, i32 10
  store ptr %299, ptr %301, align 8
  %302 = load ptr, ptr %24, align 8
  %303 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %302, i32 0, i32 9
  %304 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %303, i32 0, i32 7
  %305 = load i64, ptr %304, align 8
  %306 = load ptr, ptr %24, align 8
  %307 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %306, i32 0, i32 5
  store i64 %305, ptr %307, align 8
  %308 = load ptr, ptr %24, align 8
  %309 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %308, i32 0, i32 3
  store i64 %305, ptr %309, align 8
  %310 = load ptr, ptr %24, align 8
  %311 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %310, i32 0, i32 9
  %312 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %311, i32 0, i32 7
  %313 = load i64, ptr %312, align 8
  %314 = load ptr, ptr %24, align 8
  %315 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %314, i32 0, i32 6
  store i64 %313, ptr %315, align 8
  br label %384

316:                                              ; preds = %283
  %317 = load i32, ptr %23, align 4
  %318 = and i32 %317, 1024
  %319 = icmp ne i32 %318, 0
  br i1 %319, label %372, label %320

320:                                              ; preds = %316
  %321 = load ptr, ptr %24, align 8
  %322 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %321, i32 0, i32 9
  %323 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %322, i32 0, i32 5
  %324 = load i16, ptr %323, align 2
  %325 = icmp ne i16 %324, 0
  br i1 %325, label %326, label %372

326:                                              ; preds = %320
  %327 = load ptr, ptr %24, align 8
  %328 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %327, i32 0, i32 9
  %329 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %328, i32 0, i32 7
  %330 = load i64, ptr %329, align 8
  %331 = icmp ult i64 %330, 65536
  br i1 %331, label %332, label %337

332:                                              ; preds = %326
  %333 = load ptr, ptr %24, align 8
  %334 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %333, i32 0, i32 9
  %335 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %334, i32 0, i32 7
  %336 = load i64, ptr %335, align 8
  br label %338

337:                                              ; preds = %326
  br label %338

338:                                              ; preds = %337, %332
  %339 = phi i64 [ %336, %332 ], [ 65536, %337 ]
  %340 = load ptr, ptr %24, align 8
  %341 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %340, i32 0, i32 3
  store i64 %339, ptr %341, align 8
  %342 = load ptr, ptr %21, align 8
  %343 = getelementptr inbounds %struct.mz_zip_archive, ptr %342, i32 0, i32 7
  %344 = load ptr, ptr %343, align 8
  %345 = load ptr, ptr %21, align 8
  %346 = getelementptr inbounds %struct.mz_zip_archive, ptr %345, i32 0, i32 10
  %347 = load ptr, ptr %346, align 8
  %348 = load ptr, ptr %24, align 8
  %349 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %348, i32 0, i32 3
  %350 = load i64, ptr %349, align 8
  %351 = call ptr %344(ptr noundef %347, i64 noundef 1, i64 noundef %350)
  %352 = load ptr, ptr %24, align 8
  %353 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %352, i32 0, i32 10
  store ptr %351, ptr %353, align 8
  %354 = icmp eq ptr null, %351
  br i1 %354, label %355, label %371

355:                                              ; preds = %338
  %356 = load ptr, ptr %21, align 8
  store ptr %356, ptr %16, align 8
  store i32 16, ptr %17, align 4
  %357 = load ptr, ptr %16, align 8
  %358 = icmp ne ptr %357, null
  br i1 %358, label %359, label %363

359:                                              ; preds = %355
  %360 = load i32, ptr %17, align 4
  %361 = load ptr, ptr %16, align 8
  %362 = getelementptr inbounds %struct.mz_zip_archive, ptr %361, i32 0, i32 5
  store i32 %360, ptr %362, align 4
  br label %363

363:                                              ; preds = %355, %359
  %364 = load ptr, ptr %21, align 8
  %365 = getelementptr inbounds %struct.mz_zip_archive, ptr %364, i32 0, i32 8
  %366 = load ptr, ptr %365, align 8
  %367 = load ptr, ptr %21, align 8
  %368 = getelementptr inbounds %struct.mz_zip_archive, ptr %367, i32 0, i32 10
  %369 = load ptr, ptr %368, align 8
  %370 = load ptr, ptr %24, align 8
  call void %366(ptr noundef %369, ptr noundef %370)
  store ptr null, ptr %20, align 8
  br label %444

371:                                              ; preds = %338
  br label %375

372:                                              ; preds = %320, %316
  %373 = load ptr, ptr %24, align 8
  %374 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %373, i32 0, i32 3
  store i64 0, ptr %374, align 8
  br label %375

375:                                              ; preds = %372, %371
  %376 = load ptr, ptr %24, align 8
  %377 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %376, i32 0, i32 5
  store i64 0, ptr %377, align 8
  %378 = load ptr, ptr %24, align 8
  %379 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %378, i32 0, i32 9
  %380 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %379, i32 0, i32 7
  %381 = load i64, ptr %380, align 8
  %382 = load ptr, ptr %24, align 8
  %383 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %382, i32 0, i32 6
  store i64 %381, ptr %383, align 8
  br label %384

384:                                              ; preds = %375, %290
  %385 = load i32, ptr %23, align 4
  %386 = and i32 %385, 1024
  %387 = icmp ne i32 %386, 0
  br i1 %387, label %442, label %388

388:                                              ; preds = %384
  %389 = load ptr, ptr %24, align 8
  %390 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %389, i32 0, i32 9
  %391 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %390, i32 0, i32 5
  %392 = load i16, ptr %391, align 2
  %393 = icmp ne i16 %392, 0
  br i1 %393, label %394, label %442

394:                                              ; preds = %388
  br label %395

395:                                              ; preds = %394
  %396 = load ptr, ptr %24, align 8
  %397 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %396, i32 0, i32 13
  %398 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %397, i32 0, i32 0
  store i32 0, ptr %398, align 8
  br label %399

399:                                              ; preds = %395
  %400 = load ptr, ptr %21, align 8
  %401 = getelementptr inbounds %struct.mz_zip_archive, ptr %400, i32 0, i32 7
  %402 = load ptr, ptr %401, align 8
  %403 = load ptr, ptr %21, align 8
  %404 = getelementptr inbounds %struct.mz_zip_archive, ptr %403, i32 0, i32 10
  %405 = load ptr, ptr %404, align 8
  %406 = call ptr %402(ptr noundef %405, i64 noundef 1, i64 noundef 32768)
  %407 = load ptr, ptr %24, align 8
  %408 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %407, i32 0, i32 11
  store ptr %406, ptr %408, align 8
  %409 = icmp eq ptr null, %406
  br i1 %409, label %410, label %441

410:                                              ; preds = %399
  %411 = load ptr, ptr %21, align 8
  store ptr %411, ptr %18, align 8
  store i32 16, ptr %19, align 4
  %412 = load ptr, ptr %18, align 8
  %413 = icmp ne ptr %412, null
  br i1 %413, label %414, label %418

414:                                              ; preds = %410
  %415 = load i32, ptr %19, align 4
  %416 = load ptr, ptr %18, align 8
  %417 = getelementptr inbounds %struct.mz_zip_archive, ptr %416, i32 0, i32 5
  store i32 %415, ptr %417, align 4
  br label %418

418:                                              ; preds = %410, %414
  %419 = load ptr, ptr %24, align 8
  %420 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %419, i32 0, i32 10
  %421 = load ptr, ptr %420, align 8
  %422 = icmp ne ptr %421, null
  br i1 %422, label %423, label %433

423:                                              ; preds = %418
  %424 = load ptr, ptr %21, align 8
  %425 = getelementptr inbounds %struct.mz_zip_archive, ptr %424, i32 0, i32 8
  %426 = load ptr, ptr %425, align 8
  %427 = load ptr, ptr %21, align 8
  %428 = getelementptr inbounds %struct.mz_zip_archive, ptr %427, i32 0, i32 10
  %429 = load ptr, ptr %428, align 8
  %430 = load ptr, ptr %24, align 8
  %431 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %430, i32 0, i32 10
  %432 = load ptr, ptr %431, align 8
  call void %426(ptr noundef %429, ptr noundef %432)
  br label %433

433:                                              ; preds = %423, %418
  %434 = load ptr, ptr %21, align 8
  %435 = getelementptr inbounds %struct.mz_zip_archive, ptr %434, i32 0, i32 8
  %436 = load ptr, ptr %435, align 8
  %437 = load ptr, ptr %21, align 8
  %438 = getelementptr inbounds %struct.mz_zip_archive, ptr %437, i32 0, i32 10
  %439 = load ptr, ptr %438, align 8
  %440 = load ptr, ptr %24, align 8
  call void %436(ptr noundef %439, ptr noundef %440)
  store ptr null, ptr %20, align 8
  br label %444

441:                                              ; preds = %399
  br label %442

442:                                              ; preds = %441, %388, %384
  %443 = load ptr, ptr %24, align 8
  store ptr %443, ptr %20, align 8
  br label %444

444:                                              ; preds = %442, %433, %363, %275, %215, %175, %120, %86, %62, %54, %35
  %445 = load ptr, ptr %20, align 8
  ret ptr %445
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @mz_zip_reader_extract_file_iter_new(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store i32 %2, ptr %7, align 4
  %9 = load ptr, ptr %5, align 8
  %10 = load ptr, ptr %6, align 8
  %11 = load i32, ptr %7, align 4
  %12 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %9, ptr noundef %10, ptr noundef null, i32 noundef %11, ptr noundef %8)
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  store ptr null, ptr %4, align 8
  br label %20

15:                                               ; preds = %3
  %16 = load ptr, ptr %5, align 8
  %17 = load i32, ptr %8, align 4
  %18 = load i32, ptr %7, align 4
  %19 = call ptr @mz_zip_reader_extract_iter_new(ptr noundef %16, i32 noundef %17, i32 noundef %18)
  store ptr %19, ptr %4, align 8
  br label %20

20:                                               ; preds = %15, %14
  %21 = load ptr, ptr %4, align 8
  ret ptr %21
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @mz_zip_reader_extract_iter_read(ptr noundef %0, ptr noundef %1, i64 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  store ptr %0, ptr %11, align 8
  store ptr %1, ptr %12, align 8
  store i64 %2, ptr %13, align 8
  store i64 0, ptr %14, align 8
  %19 = load ptr, ptr %11, align 8
  %20 = icmp ne ptr %19, null
  br i1 %20, label %21, label %36

21:                                               ; preds = %3
  %22 = load ptr, ptr %11, align 8
  %23 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %22, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = icmp ne ptr %24, null
  br i1 %25, label %26, label %36

26:                                               ; preds = %21
  %27 = load ptr, ptr %11, align 8
  %28 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %27, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %struct.mz_zip_archive, ptr %29, i32 0, i32 15
  %31 = load ptr, ptr %30, align 8
  %32 = icmp ne ptr %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = load ptr, ptr %12, align 8
  %35 = icmp ne ptr %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %33, %26, %21, %3
  store i64 0, ptr %10, align 8
  br label %396

37:                                               ; preds = %33
  %38 = load ptr, ptr %11, align 8
  %39 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %38, i32 0, i32 1
  %40 = load i32, ptr %39, align 8
  %41 = and i32 %40, 1024
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %37
  %44 = load ptr, ptr %11, align 8
  %45 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %44, i32 0, i32 9
  %46 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %45, i32 0, i32 5
  %47 = load i16, ptr %46, align 2
  %48 = icmp ne i16 %47, 0
  br i1 %48, label %153, label %49

49:                                               ; preds = %43, %37
  %50 = load i64, ptr %13, align 8
  %51 = load ptr, ptr %11, align 8
  %52 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %51, i32 0, i32 6
  %53 = load i64, ptr %52, align 8
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %55, label %57

55:                                               ; preds = %49
  %56 = load i64, ptr %13, align 8
  br label %61

57:                                               ; preds = %49
  %58 = load ptr, ptr %11, align 8
  %59 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %58, i32 0, i32 6
  %60 = load i64, ptr %59, align 8
  br label %61

61:                                               ; preds = %57, %55
  %62 = phi i64 [ %56, %55 ], [ %60, %57 ]
  store i64 %62, ptr %14, align 8
  %63 = load ptr, ptr %11, align 8
  %64 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %63, i32 0, i32 0
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %struct.mz_zip_archive, ptr %65, i32 0, i32 15
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %67, i32 0, i32 8
  %69 = load ptr, ptr %68, align 8
  %70 = icmp ne ptr %69, null
  br i1 %70, label %71, label %87

71:                                               ; preds = %61
  %72 = load ptr, ptr %12, align 8
  %73 = load ptr, ptr %11, align 8
  %74 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %73, i32 0, i32 10
  %75 = load ptr, ptr %74, align 8
  %76 = load i64, ptr %14, align 8
  %77 = load ptr, ptr %12, align 8
  %78 = call i64 @llvm.objectsize.i64.p0(ptr %77, i1 false, i1 true, i1 false)
  %79 = call ptr @__memcpy_chk(ptr noundef %72, ptr noundef %75, i64 noundef %76, i64 noundef %78) #11
  %80 = load ptr, ptr %11, align 8
  %81 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %80, i32 0, i32 10
  %82 = load ptr, ptr %81, align 8
  %83 = load i64, ptr %14, align 8
  %84 = getelementptr inbounds i8, ptr %82, i64 %83
  %85 = load ptr, ptr %11, align 8
  %86 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %85, i32 0, i32 10
  store ptr %84, ptr %86, align 8
  br label %120

87:                                               ; preds = %61
  %88 = load ptr, ptr %11, align 8
  %89 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %88, i32 0, i32 0
  %90 = load ptr, ptr %89, align 8
  %91 = getelementptr inbounds %struct.mz_zip_archive, ptr %90, i32 0, i32 11
  %92 = load ptr, ptr %91, align 8
  %93 = load ptr, ptr %11, align 8
  %94 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %93, i32 0, i32 0
  %95 = load ptr, ptr %94, align 8
  %96 = getelementptr inbounds %struct.mz_zip_archive, ptr %95, i32 0, i32 14
  %97 = load ptr, ptr %96, align 8
  %98 = load ptr, ptr %11, align 8
  %99 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %98, i32 0, i32 8
  %100 = load i64, ptr %99, align 8
  %101 = load ptr, ptr %12, align 8
  %102 = load i64, ptr %14, align 8
  %103 = call i64 %92(ptr noundef %97, i64 noundef %100, ptr noundef %101, i64 noundef %102)
  %104 = load i64, ptr %14, align 8
  %105 = icmp ne i64 %103, %104
  br i1 %105, label %106, label %119

106:                                              ; preds = %87
  %107 = load ptr, ptr %11, align 8
  %108 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %107, i32 0, i32 0
  %109 = load ptr, ptr %108, align 8
  store ptr %109, ptr %4, align 8
  store i32 20, ptr %5, align 4
  %110 = load ptr, ptr %4, align 8
  %111 = icmp ne ptr %110, null
  br i1 %111, label %112, label %116

112:                                              ; preds = %106
  %113 = load i32, ptr %5, align 4
  %114 = load ptr, ptr %4, align 8
  %115 = getelementptr inbounds %struct.mz_zip_archive, ptr %114, i32 0, i32 5
  store i32 %113, ptr %115, align 4
  br label %116

116:                                              ; preds = %106, %112
  %117 = load ptr, ptr %11, align 8
  %118 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %117, i32 0, i32 2
  store i32 -1, ptr %118, align 4
  store i64 0, ptr %14, align 8
  br label %119

119:                                              ; preds = %116, %87
  br label %120

120:                                              ; preds = %119, %71
  %121 = load ptr, ptr %11, align 8
  %122 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %121, i32 0, i32 1
  %123 = load i32, ptr %122, align 8
  %124 = and i32 %123, 1024
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %137, label %126

126:                                              ; preds = %120
  %127 = load ptr, ptr %11, align 8
  %128 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %127, i32 0, i32 14
  %129 = load i32, ptr %128, align 8
  %130 = zext i32 %129 to i64
  %131 = load ptr, ptr %12, align 8
  %132 = load i64, ptr %14, align 8
  %133 = call i64 @mz_crc32(i64 noundef %130, ptr noundef %131, i64 noundef %132)
  %134 = trunc i64 %133 to i32
  %135 = load ptr, ptr %11, align 8
  %136 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %135, i32 0, i32 14
  store i32 %134, ptr %136, align 8
  br label %137

137:                                              ; preds = %126, %120
  %138 = load i64, ptr %14, align 8
  %139 = load ptr, ptr %11, align 8
  %140 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %139, i32 0, i32 8
  %141 = load i64, ptr %140, align 8
  %142 = add i64 %141, %138
  store i64 %142, ptr %140, align 8
  %143 = load i64, ptr %14, align 8
  %144 = load ptr, ptr %11, align 8
  %145 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %144, i32 0, i32 7
  %146 = load i64, ptr %145, align 8
  %147 = add i64 %146, %143
  store i64 %147, ptr %145, align 8
  %148 = load i64, ptr %14, align 8
  %149 = load ptr, ptr %11, align 8
  %150 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %149, i32 0, i32 6
  %151 = load i64, ptr %150, align 8
  %152 = sub i64 %151, %148
  store i64 %152, ptr %150, align 8
  br label %394

153:                                              ; preds = %43
  br label %154

154:                                              ; preds = %391, %153
  %155 = load ptr, ptr %11, align 8
  %156 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %155, i32 0, i32 11
  %157 = load ptr, ptr %156, align 8
  %158 = load ptr, ptr %11, align 8
  %159 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %158, i32 0, i32 7
  %160 = load i64, ptr %159, align 8
  %161 = and i64 %160, 32767
  %162 = getelementptr inbounds i8, ptr %157, i64 %161
  store ptr %162, ptr %15, align 8
  %163 = load ptr, ptr %11, align 8
  %164 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %163, i32 0, i32 7
  %165 = load i64, ptr %164, align 8
  %166 = and i64 %165, 32767
  %167 = sub i64 32768, %166
  store i64 %167, ptr %17, align 8
  %168 = load ptr, ptr %11, align 8
  %169 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %168, i32 0, i32 12
  %170 = load i64, ptr %169, align 8
  %171 = icmp ne i64 %170, 0
  br i1 %171, label %299, label %172

172:                                              ; preds = %154
  %173 = load ptr, ptr %11, align 8
  %174 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %173, i32 0, i32 5
  %175 = load i64, ptr %174, align 8
  %176 = icmp ne i64 %175, 0
  br i1 %176, label %260, label %177

177:                                              ; preds = %172
  %178 = load ptr, ptr %11, align 8
  %179 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %178, i32 0, i32 0
  %180 = load ptr, ptr %179, align 8
  %181 = getelementptr inbounds %struct.mz_zip_archive, ptr %180, i32 0, i32 15
  %182 = load ptr, ptr %181, align 8
  %183 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %182, i32 0, i32 8
  %184 = load ptr, ptr %183, align 8
  %185 = icmp ne ptr %184, null
  br i1 %185, label %260, label %186

186:                                              ; preds = %177
  %187 = load ptr, ptr %11, align 8
  %188 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %187, i32 0, i32 3
  %189 = load i64, ptr %188, align 8
  %190 = load ptr, ptr %11, align 8
  %191 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %190, i32 0, i32 6
  %192 = load i64, ptr %191, align 8
  %193 = icmp ult i64 %189, %192
  br i1 %193, label %194, label %198

194:                                              ; preds = %186
  %195 = load ptr, ptr %11, align 8
  %196 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %195, i32 0, i32 3
  %197 = load i64, ptr %196, align 8
  br label %202

198:                                              ; preds = %186
  %199 = load ptr, ptr %11, align 8
  %200 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %199, i32 0, i32 6
  %201 = load i64, ptr %200, align 8
  br label %202

202:                                              ; preds = %198, %194
  %203 = phi i64 [ %197, %194 ], [ %201, %198 ]
  %204 = load ptr, ptr %11, align 8
  %205 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %204, i32 0, i32 5
  store i64 %203, ptr %205, align 8
  %206 = load ptr, ptr %11, align 8
  %207 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %206, i32 0, i32 0
  %208 = load ptr, ptr %207, align 8
  %209 = getelementptr inbounds %struct.mz_zip_archive, ptr %208, i32 0, i32 11
  %210 = load ptr, ptr %209, align 8
  %211 = load ptr, ptr %11, align 8
  %212 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %211, i32 0, i32 0
  %213 = load ptr, ptr %212, align 8
  %214 = getelementptr inbounds %struct.mz_zip_archive, ptr %213, i32 0, i32 14
  %215 = load ptr, ptr %214, align 8
  %216 = load ptr, ptr %11, align 8
  %217 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %216, i32 0, i32 8
  %218 = load i64, ptr %217, align 8
  %219 = load ptr, ptr %11, align 8
  %220 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %219, i32 0, i32 10
  %221 = load ptr, ptr %220, align 8
  %222 = load ptr, ptr %11, align 8
  %223 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %222, i32 0, i32 5
  %224 = load i64, ptr %223, align 8
  %225 = call i64 %210(ptr noundef %215, i64 noundef %218, ptr noundef %221, i64 noundef %224)
  %226 = load ptr, ptr %11, align 8
  %227 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %226, i32 0, i32 5
  %228 = load i64, ptr %227, align 8
  %229 = icmp ne i64 %225, %228
  br i1 %229, label %230, label %243

230:                                              ; preds = %202
  %231 = load ptr, ptr %11, align 8
  %232 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %231, i32 0, i32 0
  %233 = load ptr, ptr %232, align 8
  store ptr %233, ptr %6, align 8
  store i32 20, ptr %7, align 4
  %234 = load ptr, ptr %6, align 8
  %235 = icmp ne ptr %234, null
  br i1 %235, label %236, label %240

236:                                              ; preds = %230
  %237 = load i32, ptr %7, align 4
  %238 = load ptr, ptr %6, align 8
  %239 = getelementptr inbounds %struct.mz_zip_archive, ptr %238, i32 0, i32 5
  store i32 %237, ptr %239, align 4
  br label %240

240:                                              ; preds = %230, %236
  %241 = load ptr, ptr %11, align 8
  %242 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %241, i32 0, i32 2
  store i32 -1, ptr %242, align 4
  br label %393

243:                                              ; preds = %202
  %244 = load ptr, ptr %11, align 8
  %245 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %244, i32 0, i32 5
  %246 = load i64, ptr %245, align 8
  %247 = load ptr, ptr %11, align 8
  %248 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %247, i32 0, i32 8
  %249 = load i64, ptr %248, align 8
  %250 = add i64 %249, %246
  store i64 %250, ptr %248, align 8
  %251 = load ptr, ptr %11, align 8
  %252 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %251, i32 0, i32 5
  %253 = load i64, ptr %252, align 8
  %254 = load ptr, ptr %11, align 8
  %255 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %254, i32 0, i32 6
  %256 = load i64, ptr %255, align 8
  %257 = sub i64 %256, %253
  store i64 %257, ptr %255, align 8
  %258 = load ptr, ptr %11, align 8
  %259 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %258, i32 0, i32 4
  store i64 0, ptr %259, align 8
  br label %260

260:                                              ; preds = %243, %177, %172
  %261 = load ptr, ptr %11, align 8
  %262 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %261, i32 0, i32 5
  %263 = load i64, ptr %262, align 8
  store i64 %263, ptr %16, align 8
  %264 = load ptr, ptr %11, align 8
  %265 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %264, i32 0, i32 13
  %266 = load ptr, ptr %11, align 8
  %267 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %266, i32 0, i32 10
  %268 = load ptr, ptr %267, align 8
  %269 = load ptr, ptr %11, align 8
  %270 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %269, i32 0, i32 4
  %271 = load i64, ptr %270, align 8
  %272 = getelementptr inbounds i8, ptr %268, i64 %271
  %273 = load ptr, ptr %11, align 8
  %274 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %273, i32 0, i32 11
  %275 = load ptr, ptr %274, align 8
  %276 = load ptr, ptr %15, align 8
  %277 = load ptr, ptr %11, align 8
  %278 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %277, i32 0, i32 6
  %279 = load i64, ptr %278, align 8
  %280 = icmp ne i64 %279, 0
  %281 = zext i1 %280 to i64
  %282 = select i1 %280, i32 2, i32 0
  %283 = call i32 @tinfl_decompress(ptr noundef %265, ptr noundef %272, ptr noundef %16, ptr noundef %275, ptr noundef %276, ptr noundef %17, i32 noundef %282)
  %284 = load ptr, ptr %11, align 8
  %285 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %284, i32 0, i32 2
  store i32 %283, ptr %285, align 4
  %286 = load i64, ptr %16, align 8
  %287 = load ptr, ptr %11, align 8
  %288 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %287, i32 0, i32 5
  %289 = load i64, ptr %288, align 8
  %290 = sub i64 %289, %286
  store i64 %290, ptr %288, align 8
  %291 = load i64, ptr %16, align 8
  %292 = load ptr, ptr %11, align 8
  %293 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %292, i32 0, i32 4
  %294 = load i64, ptr %293, align 8
  %295 = add i64 %294, %291
  store i64 %295, ptr %293, align 8
  %296 = load i64, ptr %17, align 8
  %297 = load ptr, ptr %11, align 8
  %298 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %297, i32 0, i32 12
  store i64 %296, ptr %298, align 8
  br label %299

299:                                              ; preds = %260, %154
  %300 = load ptr, ptr %11, align 8
  %301 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %300, i32 0, i32 12
  %302 = load i64, ptr %301, align 8
  %303 = icmp ne i64 %302, 0
  br i1 %303, label %304, label %374

304:                                              ; preds = %299
  %305 = load i64, ptr %13, align 8
  %306 = load i64, ptr %14, align 8
  %307 = sub i64 %305, %306
  %308 = load ptr, ptr %11, align 8
  %309 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %308, i32 0, i32 12
  %310 = load i64, ptr %309, align 8
  %311 = icmp ult i64 %307, %310
  br i1 %311, label %312, label %316

312:                                              ; preds = %304
  %313 = load i64, ptr %13, align 8
  %314 = load i64, ptr %14, align 8
  %315 = sub i64 %313, %314
  br label %320

316:                                              ; preds = %304
  %317 = load ptr, ptr %11, align 8
  %318 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %317, i32 0, i32 12
  %319 = load i64, ptr %318, align 8
  br label %320

320:                                              ; preds = %316, %312
  %321 = phi i64 [ %315, %312 ], [ %319, %316 ]
  store i64 %321, ptr %18, align 8
  %322 = load ptr, ptr %12, align 8
  %323 = load i64, ptr %14, align 8
  %324 = getelementptr inbounds i8, ptr %322, i64 %323
  %325 = load ptr, ptr %15, align 8
  %326 = load i64, ptr %18, align 8
  %327 = load ptr, ptr %12, align 8
  %328 = load i64, ptr %14, align 8
  %329 = getelementptr inbounds i8, ptr %327, i64 %328
  %330 = call i64 @llvm.objectsize.i64.p0(ptr %329, i1 false, i1 true, i1 false)
  %331 = call ptr @__memcpy_chk(ptr noundef %324, ptr noundef %325, i64 noundef %326, i64 noundef %330) #11
  %332 = load ptr, ptr %11, align 8
  %333 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %332, i32 0, i32 14
  %334 = load i32, ptr %333, align 8
  %335 = zext i32 %334 to i64
  %336 = load ptr, ptr %15, align 8
  %337 = load i64, ptr %18, align 8
  %338 = call i64 @mz_crc32(i64 noundef %335, ptr noundef %336, i64 noundef %337)
  %339 = trunc i64 %338 to i32
  %340 = load ptr, ptr %11, align 8
  %341 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %340, i32 0, i32 14
  store i32 %339, ptr %341, align 8
  %342 = load i64, ptr %18, align 8
  %343 = load ptr, ptr %11, align 8
  %344 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %343, i32 0, i32 12
  %345 = load i64, ptr %344, align 8
  %346 = sub i64 %345, %342
  store i64 %346, ptr %344, align 8
  %347 = load i64, ptr %18, align 8
  %348 = load ptr, ptr %11, align 8
  %349 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %348, i32 0, i32 7
  %350 = load i64, ptr %349, align 8
  %351 = add i64 %350, %347
  store i64 %351, ptr %349, align 8
  %352 = load ptr, ptr %11, align 8
  %353 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %352, i32 0, i32 9
  %354 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %353, i32 0, i32 8
  %355 = load i64, ptr %354, align 8
  %356 = icmp ugt i64 %351, %355
  br i1 %356, label %357, label %370

357:                                              ; preds = %320
  %358 = load ptr, ptr %11, align 8
  %359 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %358, i32 0, i32 0
  %360 = load ptr, ptr %359, align 8
  store ptr %360, ptr %8, align 8
  store i32 11, ptr %9, align 4
  %361 = load ptr, ptr %8, align 8
  %362 = icmp ne ptr %361, null
  br i1 %362, label %363, label %367

363:                                              ; preds = %357
  %364 = load i32, ptr %9, align 4
  %365 = load ptr, ptr %8, align 8
  %366 = getelementptr inbounds %struct.mz_zip_archive, ptr %365, i32 0, i32 5
  store i32 %364, ptr %366, align 4
  br label %367

367:                                              ; preds = %357, %363
  %368 = load ptr, ptr %11, align 8
  %369 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %368, i32 0, i32 2
  store i32 -1, ptr %369, align 4
  br label %393

370:                                              ; preds = %320
  %371 = load i64, ptr %18, align 8
  %372 = load i64, ptr %14, align 8
  %373 = add i64 %372, %371
  store i64 %373, ptr %14, align 8
  br label %374

374:                                              ; preds = %370, %299
  br label %375

375:                                              ; preds = %374
  %376 = load i64, ptr %14, align 8
  %377 = load i64, ptr %13, align 8
  %378 = icmp ult i64 %376, %377
  br i1 %378, label %379, label %391

379:                                              ; preds = %375
  %380 = load ptr, ptr %11, align 8
  %381 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %380, i32 0, i32 2
  %382 = load i32, ptr %381, align 4
  %383 = icmp eq i32 %382, 1
  br i1 %383, label %389, label %384

384:                                              ; preds = %379
  %385 = load ptr, ptr %11, align 8
  %386 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %385, i32 0, i32 2
  %387 = load i32, ptr %386, align 4
  %388 = icmp eq i32 %387, 2
  br label %389

389:                                              ; preds = %384, %379
  %390 = phi i1 [ true, %379 ], [ %388, %384 ]
  br label %391

391:                                              ; preds = %389, %375
  %392 = phi i1 [ false, %375 ], [ %390, %389 ]
  br i1 %392, label %154, label %393, !llvm.loop !120

393:                                              ; preds = %391, %367, %240
  br label %394

394:                                              ; preds = %393, %137
  %395 = load i64, ptr %14, align 8
  store i64 %395, ptr %10, align 8
  br label %396

396:                                              ; preds = %394, %36
  %397 = load i64, ptr %10, align 8
  ret i64 %397
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_extract_iter_free(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %7, align 8
  %9 = load ptr, ptr %7, align 8
  %10 = icmp ne ptr %9, null
  br i1 %10, label %11, label %23

11:                                               ; preds = %1
  %12 = load ptr, ptr %7, align 8
  %13 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %12, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %16, label %23

16:                                               ; preds = %11
  %17 = load ptr, ptr %7, align 8
  %18 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %17, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %19, i32 0, i32 15
  %21 = load ptr, ptr %20, align 8
  %22 = icmp ne ptr %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %16, %11, %1
  store i32 0, ptr %6, align 4
  br label %141

24:                                               ; preds = %16
  %25 = load ptr, ptr %7, align 8
  %26 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %25, i32 0, i32 2
  %27 = load i32, ptr %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %81

29:                                               ; preds = %24
  %30 = load ptr, ptr %7, align 8
  %31 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %30, i32 0, i32 1
  %32 = load i32, ptr %31, align 8
  %33 = and i32 %32, 1024
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %81, label %35

35:                                               ; preds = %29
  %36 = load ptr, ptr %7, align 8
  %37 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %36, i32 0, i32 7
  %38 = load i64, ptr %37, align 8
  %39 = load ptr, ptr %7, align 8
  %40 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %40, i32 0, i32 8
  %42 = load i64, ptr %41, align 8
  %43 = icmp ne i64 %38, %42
  br i1 %43, label %44, label %57

44:                                               ; preds = %35
  %45 = load ptr, ptr %7, align 8
  %46 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %45, i32 0, i32 0
  %47 = load ptr, ptr %46, align 8
  store ptr %47, ptr %2, align 8
  store i32 13, ptr %3, align 4
  %48 = load ptr, ptr %2, align 8
  %49 = icmp ne ptr %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %44
  %51 = load i32, ptr %3, align 4
  %52 = load ptr, ptr %2, align 8
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %52, i32 0, i32 5
  store i32 %51, ptr %53, align 4
  br label %54

54:                                               ; preds = %44, %50
  %55 = load ptr, ptr %7, align 8
  %56 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %55, i32 0, i32 2
  store i32 -1, ptr %56, align 4
  br label %80

57:                                               ; preds = %35
  %58 = load ptr, ptr %7, align 8
  %59 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %58, i32 0, i32 14
  %60 = load i32, ptr %59, align 8
  %61 = load ptr, ptr %7, align 8
  %62 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %61, i32 0, i32 9
  %63 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 6
  %64 = load i32, ptr %63, align 8
  %65 = icmp ne i32 %60, %64
  br i1 %65, label %66, label %79

66:                                               ; preds = %57
  %67 = load ptr, ptr %7, align 8
  %68 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %67, i32 0, i32 0
  %69 = load ptr, ptr %68, align 8
  store ptr %69, ptr %4, align 8
  store i32 11, ptr %5, align 4
  %70 = load ptr, ptr %4, align 8
  %71 = icmp ne ptr %70, null
  br i1 %71, label %72, label %76

72:                                               ; preds = %66
  %73 = load i32, ptr %5, align 4
  %74 = load ptr, ptr %4, align 8
  %75 = getelementptr inbounds %struct.mz_zip_archive, ptr %74, i32 0, i32 5
  store i32 %73, ptr %75, align 4
  br label %76

76:                                               ; preds = %66, %72
  %77 = load ptr, ptr %7, align 8
  %78 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %77, i32 0, i32 2
  store i32 -1, ptr %78, align 4
  br label %79

79:                                               ; preds = %76, %57
  br label %80

80:                                               ; preds = %79, %54
  br label %81

81:                                               ; preds = %80, %29, %24
  %82 = load ptr, ptr %7, align 8
  %83 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %82, i32 0, i32 0
  %84 = load ptr, ptr %83, align 8
  %85 = getelementptr inbounds %struct.mz_zip_archive, ptr %84, i32 0, i32 15
  %86 = load ptr, ptr %85, align 8
  %87 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %86, i32 0, i32 8
  %88 = load ptr, ptr %87, align 8
  %89 = icmp ne ptr %88, null
  br i1 %89, label %104, label %90

90:                                               ; preds = %81
  %91 = load ptr, ptr %7, align 8
  %92 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %91, i32 0, i32 0
  %93 = load ptr, ptr %92, align 8
  %94 = getelementptr inbounds %struct.mz_zip_archive, ptr %93, i32 0, i32 8
  %95 = load ptr, ptr %94, align 8
  %96 = load ptr, ptr %7, align 8
  %97 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %96, i32 0, i32 0
  %98 = load ptr, ptr %97, align 8
  %99 = getelementptr inbounds %struct.mz_zip_archive, ptr %98, i32 0, i32 10
  %100 = load ptr, ptr %99, align 8
  %101 = load ptr, ptr %7, align 8
  %102 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %101, i32 0, i32 10
  %103 = load ptr, ptr %102, align 8
  call void %95(ptr noundef %100, ptr noundef %103)
  br label %104

104:                                              ; preds = %90, %81
  %105 = load ptr, ptr %7, align 8
  %106 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %105, i32 0, i32 11
  %107 = load ptr, ptr %106, align 8
  %108 = icmp ne ptr %107, null
  br i1 %108, label %109, label %123

109:                                              ; preds = %104
  %110 = load ptr, ptr %7, align 8
  %111 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %110, i32 0, i32 0
  %112 = load ptr, ptr %111, align 8
  %113 = getelementptr inbounds %struct.mz_zip_archive, ptr %112, i32 0, i32 8
  %114 = load ptr, ptr %113, align 8
  %115 = load ptr, ptr %7, align 8
  %116 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %115, i32 0, i32 0
  %117 = load ptr, ptr %116, align 8
  %118 = getelementptr inbounds %struct.mz_zip_archive, ptr %117, i32 0, i32 10
  %119 = load ptr, ptr %118, align 8
  %120 = load ptr, ptr %7, align 8
  %121 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %120, i32 0, i32 11
  %122 = load ptr, ptr %121, align 8
  call void %114(ptr noundef %119, ptr noundef %122)
  br label %123

123:                                              ; preds = %109, %104
  %124 = load ptr, ptr %7, align 8
  %125 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %124, i32 0, i32 2
  %126 = load i32, ptr %125, align 4
  store i32 %126, ptr %8, align 4
  %127 = load ptr, ptr %7, align 8
  %128 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %127, i32 0, i32 0
  %129 = load ptr, ptr %128, align 8
  %130 = getelementptr inbounds %struct.mz_zip_archive, ptr %129, i32 0, i32 8
  %131 = load ptr, ptr %130, align 8
  %132 = load ptr, ptr %7, align 8
  %133 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %132, i32 0, i32 0
  %134 = load ptr, ptr %133, align 8
  %135 = getelementptr inbounds %struct.mz_zip_archive, ptr %134, i32 0, i32 10
  %136 = load ptr, ptr %135, align 8
  %137 = load ptr, ptr %7, align 8
  call void %131(ptr noundef %136, ptr noundef %137)
  %138 = load i32, ptr %8, align 4
  %139 = icmp eq i32 %138, 0
  %140 = zext i1 %139 to i32
  store i32 %140, ptr %6, align 4
  br label %141

141:                                              ; preds = %123, %23
  %142 = load i32, ptr %6, align 4
  ret i32 %142
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_extract_to_file(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.mz_zip_archive_file_stat, align 8
  %18 = alloca ptr, align 8
  store ptr %0, ptr %12, align 8
  store i32 %1, ptr %13, align 4
  store ptr %2, ptr %14, align 8
  store i32 %3, ptr %15, align 4
  %19 = load ptr, ptr %12, align 8
  %20 = load i32, ptr %13, align 4
  %21 = call i32 @mz_zip_reader_file_stat(ptr noundef %19, i32 noundef %20, ptr noundef %17)
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %4
  store i32 0, ptr %11, align 4
  br label %89

24:                                               ; preds = %4
  %25 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %17, i32 0, i32 13
  %26 = load i32, ptr %25, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %17, i32 0, i32 15
  %30 = load i32, ptr %29, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %28, %24
  %33 = load ptr, ptr %12, align 8
  store ptr %33, ptr %5, align 8
  store i32 6, ptr %6, align 4
  %34 = load ptr, ptr %5, align 8
  %35 = icmp ne ptr %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = load i32, ptr %6, align 4
  %38 = load ptr, ptr %5, align 8
  %39 = getelementptr inbounds %struct.mz_zip_archive, ptr %38, i32 0, i32 5
  store i32 %37, ptr %39, align 4
  br label %40

40:                                               ; preds = %32, %36
  store i32 0, ptr %11, align 4
  br label %89

41:                                               ; preds = %28
  %42 = load ptr, ptr %14, align 8
  %43 = call ptr @fopen(ptr noundef %42, ptr noundef @.str.19)
  store ptr %43, ptr %18, align 8
  %44 = load ptr, ptr %18, align 8
  %45 = icmp ne ptr %44, null
  br i1 %45, label %55, label %46

46:                                               ; preds = %41
  %47 = load ptr, ptr %12, align 8
  store ptr %47, ptr %7, align 8
  store i32 17, ptr %8, align 4
  %48 = load ptr, ptr %7, align 8
  %49 = icmp ne ptr %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = load i32, ptr %8, align 4
  %52 = load ptr, ptr %7, align 8
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %52, i32 0, i32 5
  store i32 %51, ptr %53, align 4
  br label %54

54:                                               ; preds = %46, %50
  store i32 0, ptr %11, align 4
  br label %89

55:                                               ; preds = %41
  %56 = load ptr, ptr %12, align 8
  %57 = load i32, ptr %13, align 4
  %58 = load ptr, ptr %18, align 8
  %59 = load i32, ptr %15, align 4
  %60 = call i32 @mz_zip_reader_extract_to_callback(ptr noundef %56, i32 noundef %57, ptr noundef @mz_zip_file_write_callback, ptr noundef %58, i32 noundef %59)
  store i32 %60, ptr %16, align 4
  %61 = load ptr, ptr %18, align 8
  %62 = call i32 @fclose(ptr noundef %61)
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %64, label %77

64:                                               ; preds = %55
  %65 = load i32, ptr %16, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %76

67:                                               ; preds = %64
  %68 = load ptr, ptr %12, align 8
  store ptr %68, ptr %9, align 8
  store i32 21, ptr %10, align 4
  %69 = load ptr, ptr %9, align 8
  %70 = icmp ne ptr %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = load i32, ptr %10, align 4
  %73 = load ptr, ptr %9, align 8
  %74 = getelementptr inbounds %struct.mz_zip_archive, ptr %73, i32 0, i32 5
  store i32 %72, ptr %74, align 4
  br label %75

75:                                               ; preds = %67, %71
  br label %76

76:                                               ; preds = %75, %64
  store i32 0, ptr %16, align 4
  br label %77

77:                                               ; preds = %76, %55
  %78 = load i32, ptr %16, align 4
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %87

80:                                               ; preds = %77
  %81 = load ptr, ptr %14, align 8
  %82 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %17, i32 0, i32 18
  %83 = load i64, ptr %82, align 8
  %84 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %17, i32 0, i32 18
  %85 = load i64, ptr %84, align 8
  %86 = call i32 @mz_zip_set_file_times(ptr noundef %81, i64 noundef %83, i64 noundef %85)
  br label %87

87:                                               ; preds = %80, %77
  %88 = load i32, ptr %16, align 4
  store i32 %88, ptr %11, align 4
  br label %89

89:                                               ; preds = %87, %54, %40, %23
  %90 = load i32, ptr %11, align 4
  ret i32 %90
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @mz_zip_file_write_callback(ptr noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  store i64 %1, ptr %6, align 8
  store ptr %2, ptr %7, align 8
  store i64 %3, ptr %8, align 8
  %9 = load i64, ptr %6, align 8
  %10 = load ptr, ptr %7, align 8
  %11 = load i64, ptr %8, align 8
  %12 = load ptr, ptr %5, align 8
  %13 = call i64 @fwrite(ptr noundef %10, i64 noundef 1, i64 noundef %11, ptr noundef %12)
  ret i64 %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_set_file_times(ptr noundef %0, i64 noundef %1, i64 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.utimbuf, align 8
  store ptr %0, ptr %4, align 8
  store i64 %1, ptr %5, align 8
  store i64 %2, ptr %6, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %7, i8 0, i64 16, i1 false)
  %8 = load i64, ptr %5, align 8
  %9 = getelementptr inbounds %struct.utimbuf, ptr %7, i32 0, i32 0
  store i64 %8, ptr %9, align 8
  %10 = load i64, ptr %6, align 8
  %11 = getelementptr inbounds %struct.utimbuf, ptr %7, i32 0, i32 1
  store i64 %10, ptr %11, align 8
  %12 = load ptr, ptr %4, align 8
  %13 = call i32 @utime(ptr noundef %12, ptr noundef %7)
  %14 = icmp ne i32 %13, 0
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  ret i32 %16
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_extract_file_to_file(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store ptr %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store i32 %3, ptr %9, align 4
  %11 = load ptr, ptr %6, align 8
  %12 = load ptr, ptr %7, align 8
  %13 = load i32, ptr %9, align 4
  %14 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %11, ptr noundef %12, ptr noundef null, i32 noundef %13, ptr noundef %10)
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %4
  store i32 0, ptr %5, align 4
  br label %23

17:                                               ; preds = %4
  %18 = load ptr, ptr %6, align 8
  %19 = load i32, ptr %10, align 4
  %20 = load ptr, ptr %8, align 8
  %21 = load i32, ptr %9, align 4
  %22 = call i32 @mz_zip_reader_extract_to_file(ptr noundef %18, i32 noundef %19, ptr noundef %20, i32 noundef %21)
  store i32 %22, ptr %5, align 4
  br label %23

23:                                               ; preds = %17, %16
  %24 = load i32, ptr %5, align 4
  ret i32 %24
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_extract_to_cfile(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive_file_stat, align 8
  store ptr %0, ptr %8, align 8
  store i32 %1, ptr %9, align 4
  store ptr %2, ptr %10, align 8
  store i32 %3, ptr %11, align 4
  %13 = load ptr, ptr %8, align 8
  %14 = load i32, ptr %9, align 4
  %15 = call i32 @mz_zip_reader_file_stat(ptr noundef %13, i32 noundef %14, ptr noundef %12)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  store i32 0, ptr %7, align 4
  br label %41

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %12, i32 0, i32 13
  %20 = load i32, ptr %19, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %12, i32 0, i32 15
  %24 = load i32, ptr %23, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %22, %18
  %27 = load ptr, ptr %8, align 8
  store ptr %27, ptr %5, align 8
  store i32 6, ptr %6, align 4
  %28 = load ptr, ptr %5, align 8
  %29 = icmp ne ptr %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = load i32, ptr %6, align 4
  %32 = load ptr, ptr %5, align 8
  %33 = getelementptr inbounds %struct.mz_zip_archive, ptr %32, i32 0, i32 5
  store i32 %31, ptr %33, align 4
  br label %34

34:                                               ; preds = %26, %30
  store i32 0, ptr %7, align 4
  br label %41

35:                                               ; preds = %22
  %36 = load ptr, ptr %8, align 8
  %37 = load i32, ptr %9, align 4
  %38 = load ptr, ptr %10, align 8
  %39 = load i32, ptr %11, align 4
  %40 = call i32 @mz_zip_reader_extract_to_callback(ptr noundef %36, i32 noundef %37, ptr noundef @mz_zip_file_write_callback, ptr noundef %38, i32 noundef %39)
  store i32 %40, ptr %7, align 4
  br label %41

41:                                               ; preds = %35, %34, %17
  %42 = load i32, ptr %7, align 4
  ret i32 %42
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_extract_file_to_cfile(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store ptr %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store i32 %3, ptr %9, align 4
  %11 = load ptr, ptr %6, align 8
  %12 = load ptr, ptr %7, align 8
  %13 = load i32, ptr %9, align 4
  %14 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %11, ptr noundef %12, ptr noundef null, i32 noundef %13, ptr noundef %10)
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %4
  store i32 0, ptr %5, align 4
  br label %23

17:                                               ; preds = %4
  %18 = load ptr, ptr %6, align 8
  %19 = load i32, ptr %10, align 4
  %20 = load ptr, ptr %8, align 8
  %21 = load i32, ptr %9, align 4
  %22 = call i32 @mz_zip_reader_extract_to_cfile(ptr noundef %18, i32 noundef %19, ptr noundef %20, i32 noundef %21)
  store i32 %22, ptr %5, align 4
  br label %23

23:                                               ; preds = %17, %16
  %24 = load i32, ptr %5, align 4
  ret i32 %24
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_validate_file(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca i32, align 4
  %18 = alloca ptr, align 8
  %19 = alloca i32, align 4
  %20 = alloca ptr, align 8
  %21 = alloca i32, align 4
  %22 = alloca ptr, align 8
  %23 = alloca i32, align 4
  %24 = alloca ptr, align 8
  %25 = alloca i32, align 4
  %26 = alloca ptr, align 8
  %27 = alloca i32, align 4
  %28 = alloca ptr, align 8
  %29 = alloca i32, align 4
  %30 = alloca ptr, align 8
  %31 = alloca i32, align 4
  %32 = alloca ptr, align 8
  %33 = alloca i32, align 4
  %34 = alloca ptr, align 8
  %35 = alloca i32, align 4
  %36 = alloca ptr, align 8
  %37 = alloca i32, align 4
  %38 = alloca ptr, align 8
  %39 = alloca i32, align 4
  %40 = alloca ptr, align 8
  %41 = alloca i32, align 4
  %42 = alloca ptr, align 8
  %43 = alloca i32, align 4
  %44 = alloca ptr, align 8
  %45 = alloca i32, align 4
  %46 = alloca ptr, align 8
  %47 = alloca i32, align 4
  %48 = alloca ptr, align 8
  %49 = alloca i32, align 4
  %50 = alloca ptr, align 8
  %51 = alloca i32, align 4
  %52 = alloca ptr, align 8
  %53 = alloca i32, align 4
  %54 = alloca ptr, align 8
  %55 = alloca i32, align 4
  %56 = alloca ptr, align 8
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca ptr, align 8
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca %struct.mz_zip_archive_file_stat, align 8
  %63 = alloca ptr, align 8
  %64 = alloca ptr, align 8
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca [8 x i32], align 16
  %68 = alloca ptr, align 8
  %69 = alloca i64, align 8
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  %72 = alloca i32, align 4
  %73 = alloca i64, align 8
  %74 = alloca i64, align 8
  %75 = alloca i32, align 4
  %76 = alloca i32, align 4
  %77 = alloca i32, align 4
  %78 = alloca %struct.mz_zip_array, align 8
  %79 = alloca i32, align 4
  %80 = alloca ptr, align 8
  %81 = alloca i32, align 4
  %82 = alloca i32, align 4
  %83 = alloca i32, align 4
  %84 = alloca ptr, align 8
  %85 = alloca [32 x i8], align 16
  %86 = alloca i32, align 4
  %87 = alloca ptr, align 8
  %88 = alloca i32, align 4
  %89 = alloca i64, align 8
  %90 = alloca i64, align 8
  %91 = alloca i32, align 4
  store ptr %0, ptr %59, align 8
  store i32 %1, ptr %60, align 4
  store i32 %2, ptr %61, align 4
  store i32 0, ptr %65, align 4
  store i32 0, ptr %66, align 4
  %92 = getelementptr inbounds [8 x i32], ptr %67, i64 0, i64 0
  store ptr %92, ptr %68, align 8
  store i64 0, ptr %69, align 8
  store i32 0, ptr %75, align 4
  store ptr %78, ptr %13, align 8
  store i32 1, ptr %14, align 4
  %93 = load ptr, ptr %13, align 8
  %94 = load ptr, ptr %13, align 8
  %95 = call i64 @llvm.objectsize.i64.p0(ptr %94, i1 false, i1 true, i1 false)
  %96 = call ptr @__memset_chk(ptr noundef %93, i32 noundef 0, i64 noundef 32, i64 noundef %95) #11
  %97 = load i32, ptr %14, align 4
  %98 = load ptr, ptr %13, align 8
  %99 = getelementptr inbounds %struct.mz_zip_array, ptr %98, i32 0, i32 3
  store i32 %97, ptr %99, align 8
  %100 = load ptr, ptr %59, align 8
  %101 = icmp ne ptr %100, null
  br i1 %101, label %102, label %122

102:                                              ; preds = %3
  %103 = load ptr, ptr %59, align 8
  %104 = getelementptr inbounds %struct.mz_zip_archive, ptr %103, i32 0, i32 15
  %105 = load ptr, ptr %104, align 8
  %106 = icmp ne ptr %105, null
  br i1 %106, label %107, label %122

107:                                              ; preds = %102
  %108 = load ptr, ptr %59, align 8
  %109 = getelementptr inbounds %struct.mz_zip_archive, ptr %108, i32 0, i32 7
  %110 = load ptr, ptr %109, align 8
  %111 = icmp ne ptr %110, null
  br i1 %111, label %112, label %122

112:                                              ; preds = %107
  %113 = load ptr, ptr %59, align 8
  %114 = getelementptr inbounds %struct.mz_zip_archive, ptr %113, i32 0, i32 8
  %115 = load ptr, ptr %114, align 8
  %116 = icmp ne ptr %115, null
  br i1 %116, label %117, label %122

117:                                              ; preds = %112
  %118 = load ptr, ptr %59, align 8
  %119 = getelementptr inbounds %struct.mz_zip_archive, ptr %118, i32 0, i32 11
  %120 = load ptr, ptr %119, align 8
  %121 = icmp ne ptr %120, null
  br i1 %121, label %131, label %122

122:                                              ; preds = %117, %112, %107, %102, %3
  %123 = load ptr, ptr %59, align 8
  store ptr %123, ptr %18, align 8
  store i32 24, ptr %19, align 4
  %124 = load ptr, ptr %18, align 8
  %125 = icmp ne ptr %124, null
  br i1 %125, label %126, label %130

126:                                              ; preds = %122
  %127 = load i32, ptr %19, align 4
  %128 = load ptr, ptr %18, align 8
  %129 = getelementptr inbounds %struct.mz_zip_archive, ptr %128, i32 0, i32 5
  store i32 %127, ptr %129, align 4
  br label %130

130:                                              ; preds = %122, %126
  store i32 0, ptr %58, align 4
  br label %1197

131:                                              ; preds = %117
  %132 = load i32, ptr %60, align 4
  %133 = load ptr, ptr %59, align 8
  %134 = getelementptr inbounds %struct.mz_zip_archive, ptr %133, i32 0, i32 2
  %135 = load i32, ptr %134, align 8
  %136 = icmp ugt i32 %132, %135
  br i1 %136, label %137, label %146

137:                                              ; preds = %131
  %138 = load ptr, ptr %59, align 8
  store ptr %138, ptr %20, align 8
  store i32 24, ptr %21, align 4
  %139 = load ptr, ptr %20, align 8
  %140 = icmp ne ptr %139, null
  br i1 %140, label %141, label %145

141:                                              ; preds = %137
  %142 = load i32, ptr %21, align 4
  %143 = load ptr, ptr %20, align 8
  %144 = getelementptr inbounds %struct.mz_zip_archive, ptr %143, i32 0, i32 5
  store i32 %142, ptr %144, align 4
  br label %145

145:                                              ; preds = %137, %141
  store i32 0, ptr %58, align 4
  br label %1197

146:                                              ; preds = %131
  %147 = load ptr, ptr %59, align 8
  %148 = getelementptr inbounds %struct.mz_zip_archive, ptr %147, i32 0, i32 15
  %149 = load ptr, ptr %148, align 8
  store ptr %149, ptr %63, align 8
  %150 = load ptr, ptr %59, align 8
  %151 = load i32, ptr %60, align 4
  store ptr %150, ptr %16, align 8
  store i32 %151, ptr %17, align 4
  %152 = load ptr, ptr %16, align 8
  %153 = icmp ne ptr %152, null
  br i1 %153, label %154, label %165

154:                                              ; preds = %146
  %155 = load ptr, ptr %16, align 8
  %156 = getelementptr inbounds %struct.mz_zip_archive, ptr %155, i32 0, i32 15
  %157 = load ptr, ptr %156, align 8
  %158 = icmp ne ptr %157, null
  br i1 %158, label %159, label %165

159:                                              ; preds = %154
  %160 = load i32, ptr %17, align 4
  %161 = load ptr, ptr %16, align 8
  %162 = getelementptr inbounds %struct.mz_zip_archive, ptr %161, i32 0, i32 2
  %163 = load i32, ptr %162, align 8
  %164 = icmp uge i32 %160, %163
  br i1 %164, label %165, label %166

165:                                              ; preds = %159, %154, %146
  store ptr null, ptr %15, align 8
  br label %182

166:                                              ; preds = %159
  %167 = load ptr, ptr %16, align 8
  %168 = getelementptr inbounds %struct.mz_zip_archive, ptr %167, i32 0, i32 15
  %169 = load ptr, ptr %168, align 8
  %170 = load ptr, ptr %169, align 8
  %171 = load ptr, ptr %16, align 8
  %172 = getelementptr inbounds %struct.mz_zip_archive, ptr %171, i32 0, i32 15
  %173 = load ptr, ptr %172, align 8
  %174 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %173, i32 0, i32 1
  %175 = load ptr, ptr %174, align 8
  %176 = load i32, ptr %17, align 4
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds i32, ptr %175, i64 %177
  %179 = load i32, ptr %178, align 4
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds i8, ptr %170, i64 %180
  store ptr %181, ptr %15, align 8
  br label %182

182:                                              ; preds = %165, %166
  %183 = load ptr, ptr %15, align 8
  store ptr %183, ptr %64, align 8
  %184 = load ptr, ptr %59, align 8
  %185 = load i32, ptr %60, align 4
  %186 = load ptr, ptr %64, align 8
  %187 = call i32 @mz_zip_file_stat_internal(ptr noundef %184, i32 noundef %185, ptr noundef %186, ptr noundef %62, ptr noundef %65)
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %190, label %189

189:                                              ; preds = %182
  store i32 0, ptr %58, align 4
  br label %1197

190:                                              ; preds = %182
  %191 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 13
  %192 = load i32, ptr %191, align 4
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %198, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 8
  %196 = load i64, ptr %195, align 8
  %197 = icmp ne i64 %196, 0
  br i1 %197, label %199, label %198

198:                                              ; preds = %194, %190
  store i32 1, ptr %58, align 4
  br label %1197

199:                                              ; preds = %194
  %200 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 14
  %201 = load i32, ptr %200, align 8
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %203, label %212

203:                                              ; preds = %199
  %204 = load ptr, ptr %59, align 8
  store ptr %204, ptr %22, align 8
  store i32 5, ptr %23, align 4
  %205 = load ptr, ptr %22, align 8
  %206 = icmp ne ptr %205, null
  br i1 %206, label %207, label %211

207:                                              ; preds = %203
  %208 = load i32, ptr %23, align 4
  %209 = load ptr, ptr %22, align 8
  %210 = getelementptr inbounds %struct.mz_zip_archive, ptr %209, i32 0, i32 5
  store i32 %208, ptr %210, align 4
  br label %211

211:                                              ; preds = %203, %207
  store i32 0, ptr %58, align 4
  br label %1197

212:                                              ; preds = %199
  %213 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 5
  %214 = load i16, ptr %213, align 2
  %215 = zext i16 %214 to i32
  %216 = icmp ne i32 %215, 0
  br i1 %216, label %217, label %231

217:                                              ; preds = %212
  %218 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 5
  %219 = load i16, ptr %218, align 2
  %220 = zext i16 %219 to i32
  %221 = icmp ne i32 %220, 8
  br i1 %221, label %222, label %231

222:                                              ; preds = %217
  %223 = load ptr, ptr %59, align 8
  store ptr %223, ptr %24, align 8
  store i32 4, ptr %25, align 4
  %224 = load ptr, ptr %24, align 8
  %225 = icmp ne ptr %224, null
  br i1 %225, label %226, label %230

226:                                              ; preds = %222
  %227 = load i32, ptr %25, align 4
  %228 = load ptr, ptr %24, align 8
  %229 = getelementptr inbounds %struct.mz_zip_archive, ptr %228, i32 0, i32 5
  store i32 %227, ptr %229, align 4
  br label %230

230:                                              ; preds = %222, %226
  store i32 0, ptr %58, align 4
  br label %1197

231:                                              ; preds = %217, %212
  %232 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 15
  %233 = load i32, ptr %232, align 4
  %234 = icmp ne i32 %233, 0
  br i1 %234, label %244, label %235

235:                                              ; preds = %231
  %236 = load ptr, ptr %59, align 8
  store ptr %236, ptr %26, align 8
  store i32 6, ptr %27, align 4
  %237 = load ptr, ptr %26, align 8
  %238 = icmp ne ptr %237, null
  br i1 %238, label %239, label %243

239:                                              ; preds = %235
  %240 = load i32, ptr %27, align 4
  %241 = load ptr, ptr %26, align 8
  %242 = getelementptr inbounds %struct.mz_zip_archive, ptr %241, i32 0, i32 5
  store i32 %240, ptr %242, align 4
  br label %243

243:                                              ; preds = %235, %239
  store i32 0, ptr %58, align 4
  br label %1197

244:                                              ; preds = %231
  %245 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 11
  %246 = load i64, ptr %245, align 8
  store i64 %246, ptr %69, align 8
  %247 = load ptr, ptr %59, align 8
  %248 = getelementptr inbounds %struct.mz_zip_archive, ptr %247, i32 0, i32 11
  %249 = load ptr, ptr %248, align 8
  %250 = load ptr, ptr %59, align 8
  %251 = getelementptr inbounds %struct.mz_zip_archive, ptr %250, i32 0, i32 14
  %252 = load ptr, ptr %251, align 8
  %253 = load i64, ptr %69, align 8
  %254 = load ptr, ptr %68, align 8
  %255 = call i64 %249(ptr noundef %252, i64 noundef %253, ptr noundef %254, i64 noundef 30)
  %256 = icmp ne i64 %255, 30
  br i1 %256, label %257, label %266

257:                                              ; preds = %244
  %258 = load ptr, ptr %59, align 8
  store ptr %258, ptr %28, align 8
  store i32 20, ptr %29, align 4
  %259 = load ptr, ptr %28, align 8
  %260 = icmp ne ptr %259, null
  br i1 %260, label %261, label %265

261:                                              ; preds = %257
  %262 = load i32, ptr %29, align 4
  %263 = load ptr, ptr %28, align 8
  %264 = getelementptr inbounds %struct.mz_zip_archive, ptr %263, i32 0, i32 5
  store i32 %262, ptr %264, align 4
  br label %265

265:                                              ; preds = %257, %261
  store i32 0, ptr %58, align 4
  br label %1197

266:                                              ; preds = %244
  %267 = load ptr, ptr %68, align 8
  %268 = getelementptr inbounds i8, ptr %267, i64 0
  %269 = load i8, ptr %268, align 1
  %270 = zext i8 %269 to i32
  %271 = load ptr, ptr %68, align 8
  %272 = getelementptr inbounds i8, ptr %271, i64 1
  %273 = load i8, ptr %272, align 1
  %274 = zext i8 %273 to i32
  %275 = shl i32 %274, 8
  %276 = or i32 %270, %275
  %277 = load ptr, ptr %68, align 8
  %278 = getelementptr inbounds i8, ptr %277, i64 2
  %279 = load i8, ptr %278, align 1
  %280 = zext i8 %279 to i32
  %281 = shl i32 %280, 16
  %282 = or i32 %276, %281
  %283 = load ptr, ptr %68, align 8
  %284 = getelementptr inbounds i8, ptr %283, i64 3
  %285 = load i8, ptr %284, align 1
  %286 = zext i8 %285 to i32
  %287 = shl i32 %286, 24
  %288 = or i32 %282, %287
  %289 = icmp ne i32 %288, 67324752
  br i1 %289, label %290, label %299

290:                                              ; preds = %266
  %291 = load ptr, ptr %59, align 8
  store ptr %291, ptr %30, align 8
  store i32 9, ptr %31, align 4
  %292 = load ptr, ptr %30, align 8
  %293 = icmp ne ptr %292, null
  br i1 %293, label %294, label %298

294:                                              ; preds = %290
  %295 = load i32, ptr %31, align 4
  %296 = load ptr, ptr %30, align 8
  %297 = getelementptr inbounds %struct.mz_zip_archive, ptr %296, i32 0, i32 5
  store i32 %295, ptr %297, align 4
  br label %298

298:                                              ; preds = %290, %294
  store i32 0, ptr %58, align 4
  br label %1197

299:                                              ; preds = %266
  %300 = load ptr, ptr %68, align 8
  %301 = getelementptr inbounds i8, ptr %300, i64 26
  %302 = getelementptr inbounds i8, ptr %301, i64 0
  %303 = load i8, ptr %302, align 1
  %304 = zext i8 %303 to i32
  %305 = load ptr, ptr %68, align 8
  %306 = getelementptr inbounds i8, ptr %305, i64 26
  %307 = getelementptr inbounds i8, ptr %306, i64 1
  %308 = load i8, ptr %307, align 1
  %309 = zext i8 %308 to i32
  %310 = shl i32 %309, 8
  %311 = or i32 %304, %310
  store i32 %311, ptr %70, align 4
  %312 = load ptr, ptr %68, align 8
  %313 = getelementptr inbounds i8, ptr %312, i64 28
  %314 = getelementptr inbounds i8, ptr %313, i64 0
  %315 = load i8, ptr %314, align 1
  %316 = zext i8 %315 to i32
  %317 = load ptr, ptr %68, align 8
  %318 = getelementptr inbounds i8, ptr %317, i64 28
  %319 = getelementptr inbounds i8, ptr %318, i64 1
  %320 = load i8, ptr %319, align 1
  %321 = zext i8 %320 to i32
  %322 = shl i32 %321, 8
  %323 = or i32 %316, %322
  store i32 %323, ptr %71, align 4
  %324 = load ptr, ptr %68, align 8
  %325 = getelementptr inbounds i8, ptr %324, i64 18
  %326 = getelementptr inbounds i8, ptr %325, i64 0
  %327 = load i8, ptr %326, align 1
  %328 = zext i8 %327 to i32
  %329 = load ptr, ptr %68, align 8
  %330 = getelementptr inbounds i8, ptr %329, i64 18
  %331 = getelementptr inbounds i8, ptr %330, i64 1
  %332 = load i8, ptr %331, align 1
  %333 = zext i8 %332 to i32
  %334 = shl i32 %333, 8
  %335 = or i32 %328, %334
  %336 = load ptr, ptr %68, align 8
  %337 = getelementptr inbounds i8, ptr %336, i64 18
  %338 = getelementptr inbounds i8, ptr %337, i64 2
  %339 = load i8, ptr %338, align 1
  %340 = zext i8 %339 to i32
  %341 = shl i32 %340, 16
  %342 = or i32 %335, %341
  %343 = load ptr, ptr %68, align 8
  %344 = getelementptr inbounds i8, ptr %343, i64 18
  %345 = getelementptr inbounds i8, ptr %344, i64 3
  %346 = load i8, ptr %345, align 1
  %347 = zext i8 %346 to i32
  %348 = shl i32 %347, 24
  %349 = or i32 %342, %348
  %350 = zext i32 %349 to i64
  store i64 %350, ptr %73, align 8
  %351 = load ptr, ptr %68, align 8
  %352 = getelementptr inbounds i8, ptr %351, i64 22
  %353 = getelementptr inbounds i8, ptr %352, i64 0
  %354 = load i8, ptr %353, align 1
  %355 = zext i8 %354 to i32
  %356 = load ptr, ptr %68, align 8
  %357 = getelementptr inbounds i8, ptr %356, i64 22
  %358 = getelementptr inbounds i8, ptr %357, i64 1
  %359 = load i8, ptr %358, align 1
  %360 = zext i8 %359 to i32
  %361 = shl i32 %360, 8
  %362 = or i32 %355, %361
  %363 = load ptr, ptr %68, align 8
  %364 = getelementptr inbounds i8, ptr %363, i64 22
  %365 = getelementptr inbounds i8, ptr %364, i64 2
  %366 = load i8, ptr %365, align 1
  %367 = zext i8 %366 to i32
  %368 = shl i32 %367, 16
  %369 = or i32 %362, %368
  %370 = load ptr, ptr %68, align 8
  %371 = getelementptr inbounds i8, ptr %370, i64 22
  %372 = getelementptr inbounds i8, ptr %371, i64 3
  %373 = load i8, ptr %372, align 1
  %374 = zext i8 %373 to i32
  %375 = shl i32 %374, 24
  %376 = or i32 %369, %375
  %377 = zext i32 %376 to i64
  store i64 %377, ptr %74, align 8
  %378 = load ptr, ptr %68, align 8
  %379 = getelementptr inbounds i8, ptr %378, i64 14
  %380 = getelementptr inbounds i8, ptr %379, i64 0
  %381 = load i8, ptr %380, align 1
  %382 = zext i8 %381 to i32
  %383 = load ptr, ptr %68, align 8
  %384 = getelementptr inbounds i8, ptr %383, i64 14
  %385 = getelementptr inbounds i8, ptr %384, i64 1
  %386 = load i8, ptr %385, align 1
  %387 = zext i8 %386 to i32
  %388 = shl i32 %387, 8
  %389 = or i32 %382, %388
  %390 = load ptr, ptr %68, align 8
  %391 = getelementptr inbounds i8, ptr %390, i64 14
  %392 = getelementptr inbounds i8, ptr %391, i64 2
  %393 = load i8, ptr %392, align 1
  %394 = zext i8 %393 to i32
  %395 = shl i32 %394, 16
  %396 = or i32 %389, %395
  %397 = load ptr, ptr %68, align 8
  %398 = getelementptr inbounds i8, ptr %397, i64 14
  %399 = getelementptr inbounds i8, ptr %398, i64 3
  %400 = load i8, ptr %399, align 1
  %401 = zext i8 %400 to i32
  %402 = shl i32 %401, 24
  %403 = or i32 %396, %402
  store i32 %403, ptr %72, align 4
  %404 = load ptr, ptr %68, align 8
  %405 = getelementptr inbounds i8, ptr %404, i64 6
  %406 = getelementptr inbounds i8, ptr %405, i64 0
  %407 = load i8, ptr %406, align 1
  %408 = zext i8 %407 to i32
  %409 = load ptr, ptr %68, align 8
  %410 = getelementptr inbounds i8, ptr %409, i64 6
  %411 = getelementptr inbounds i8, ptr %410, i64 1
  %412 = load i8, ptr %411, align 1
  %413 = zext i8 %412 to i32
  %414 = shl i32 %413, 8
  %415 = or i32 %408, %414
  store i32 %415, ptr %77, align 4
  %416 = load i32, ptr %77, align 4
  %417 = and i32 %416, 8
  %418 = icmp ne i32 %417, 0
  %419 = zext i1 %418 to i32
  store i32 %419, ptr %76, align 4
  %420 = load i32, ptr %70, align 4
  %421 = zext i32 %420 to i64
  %422 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 16
  %423 = getelementptr inbounds [512 x i8], ptr %422, i64 0, i64 0
  %424 = call i64 @strlen(ptr noundef %423)
  %425 = icmp ne i64 %421, %424
  br i1 %425, label %426, label %435

426:                                              ; preds = %299
  %427 = load ptr, ptr %59, align 8
  store ptr %427, ptr %32, align 8
  store i32 9, ptr %33, align 4
  %428 = load ptr, ptr %32, align 8
  %429 = icmp ne ptr %428, null
  br i1 %429, label %430, label %434

430:                                              ; preds = %426
  %431 = load i32, ptr %33, align 4
  %432 = load ptr, ptr %32, align 8
  %433 = getelementptr inbounds %struct.mz_zip_archive, ptr %432, i32 0, i32 5
  store i32 %431, ptr %433, align 4
  br label %434

434:                                              ; preds = %426, %430
  store i32 0, ptr %58, align 4
  br label %1197

435:                                              ; preds = %299
  %436 = load i64, ptr %69, align 8
  %437 = add i64 %436, 30
  %438 = load i32, ptr %70, align 4
  %439 = zext i32 %438 to i64
  %440 = add i64 %437, %439
  %441 = load i32, ptr %71, align 4
  %442 = zext i32 %441 to i64
  %443 = add i64 %440, %442
  %444 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 7
  %445 = load i64, ptr %444, align 8
  %446 = add i64 %443, %445
  %447 = load ptr, ptr %59, align 8
  %448 = getelementptr inbounds %struct.mz_zip_archive, ptr %447, i32 0, i32 0
  %449 = load i64, ptr %448, align 8
  %450 = icmp ugt i64 %446, %449
  br i1 %450, label %451, label %460

451:                                              ; preds = %435
  %452 = load ptr, ptr %59, align 8
  store ptr %452, ptr %34, align 8
  store i32 9, ptr %35, align 4
  %453 = load ptr, ptr %34, align 8
  %454 = icmp ne ptr %453, null
  br i1 %454, label %455, label %459

455:                                              ; preds = %451
  %456 = load i32, ptr %35, align 4
  %457 = load ptr, ptr %34, align 8
  %458 = getelementptr inbounds %struct.mz_zip_archive, ptr %457, i32 0, i32 5
  store i32 %456, ptr %458, align 4
  br label %459

459:                                              ; preds = %451, %455
  store i32 0, ptr %58, align 4
  br label %1197

460:                                              ; preds = %435
  %461 = load ptr, ptr %59, align 8
  %462 = load i32, ptr %70, align 4
  %463 = load i32, ptr %71, align 4
  %464 = icmp ugt i32 %462, %463
  br i1 %464, label %465, label %467

465:                                              ; preds = %460
  %466 = load i32, ptr %70, align 4
  br label %469

467:                                              ; preds = %460
  %468 = load i32, ptr %71, align 4
  br label %469

469:                                              ; preds = %467, %465
  %470 = phi i32 [ %466, %465 ], [ %468, %467 ]
  %471 = zext i32 %470 to i64
  store ptr %461, ptr %9, align 8
  store ptr %78, ptr %10, align 8
  store i64 %471, ptr %11, align 8
  store i32 0, ptr %12, align 4
  %472 = load i64, ptr %11, align 8
  %473 = load ptr, ptr %10, align 8
  %474 = getelementptr inbounds %struct.mz_zip_array, ptr %473, i32 0, i32 2
  %475 = load i64, ptr %474, align 8
  %476 = icmp ugt i64 %472, %475
  br i1 %476, label %477, label %486

477:                                              ; preds = %469
  %478 = load ptr, ptr %9, align 8
  %479 = load ptr, ptr %10, align 8
  %480 = load i64, ptr %11, align 8
  %481 = load i32, ptr %12, align 4
  %482 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %478, ptr noundef %479, i64 noundef %480, i32 noundef %481)
  %483 = icmp ne i32 %482, 0
  br i1 %483, label %485, label %484

484:                                              ; preds = %477
  store i32 0, ptr %8, align 4
  br label %490

485:                                              ; preds = %477
  br label %486

486:                                              ; preds = %485, %469
  %487 = load i64, ptr %11, align 8
  %488 = load ptr, ptr %10, align 8
  %489 = getelementptr inbounds %struct.mz_zip_array, ptr %488, i32 0, i32 1
  store i64 %487, ptr %489, align 8
  store i32 1, ptr %8, align 4
  br label %490

490:                                              ; preds = %484, %486
  %491 = load i32, ptr %8, align 4
  %492 = icmp ne i32 %491, 0
  br i1 %492, label %502, label %493

493:                                              ; preds = %490
  %494 = load ptr, ptr %59, align 8
  store ptr %494, ptr %36, align 8
  store i32 16, ptr %37, align 4
  %495 = load ptr, ptr %36, align 8
  %496 = icmp ne ptr %495, null
  br i1 %496, label %497, label %501

497:                                              ; preds = %493
  %498 = load i32, ptr %37, align 4
  %499 = load ptr, ptr %36, align 8
  %500 = getelementptr inbounds %struct.mz_zip_archive, ptr %499, i32 0, i32 5
  store i32 %498, ptr %500, align 4
  br label %501

501:                                              ; preds = %493, %497
  br label %1183

502:                                              ; preds = %490
  %503 = load i32, ptr %70, align 4
  %504 = icmp ne i32 %503, 0
  br i1 %504, label %505, label %550

505:                                              ; preds = %502
  %506 = load ptr, ptr %59, align 8
  %507 = getelementptr inbounds %struct.mz_zip_archive, ptr %506, i32 0, i32 11
  %508 = load ptr, ptr %507, align 8
  %509 = load ptr, ptr %59, align 8
  %510 = getelementptr inbounds %struct.mz_zip_archive, ptr %509, i32 0, i32 14
  %511 = load ptr, ptr %510, align 8
  %512 = load i64, ptr %69, align 8
  %513 = add i64 %512, 30
  %514 = getelementptr inbounds %struct.mz_zip_array, ptr %78, i32 0, i32 0
  %515 = load ptr, ptr %514, align 8
  %516 = load i32, ptr %70, align 4
  %517 = zext i32 %516 to i64
  %518 = call i64 %508(ptr noundef %511, i64 noundef %513, ptr noundef %515, i64 noundef %517)
  %519 = load i32, ptr %70, align 4
  %520 = zext i32 %519 to i64
  %521 = icmp ne i64 %518, %520
  br i1 %521, label %522, label %531

522:                                              ; preds = %505
  %523 = load ptr, ptr %59, align 8
  store ptr %523, ptr %38, align 8
  store i32 20, ptr %39, align 4
  %524 = load ptr, ptr %38, align 8
  %525 = icmp ne ptr %524, null
  br i1 %525, label %526, label %530

526:                                              ; preds = %522
  %527 = load i32, ptr %39, align 4
  %528 = load ptr, ptr %38, align 8
  %529 = getelementptr inbounds %struct.mz_zip_archive, ptr %528, i32 0, i32 5
  store i32 %527, ptr %529, align 4
  br label %530

530:                                              ; preds = %522, %526
  br label %1183

531:                                              ; preds = %505
  %532 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 16
  %533 = getelementptr inbounds [512 x i8], ptr %532, i64 0, i64 0
  %534 = getelementptr inbounds %struct.mz_zip_array, ptr %78, i32 0, i32 0
  %535 = load ptr, ptr %534, align 8
  %536 = load i32, ptr %70, align 4
  %537 = zext i32 %536 to i64
  %538 = call i32 @memcmp(ptr noundef %533, ptr noundef %535, i64 noundef %537)
  %539 = icmp ne i32 %538, 0
  br i1 %539, label %540, label %549

540:                                              ; preds = %531
  %541 = load ptr, ptr %59, align 8
  store ptr %541, ptr %40, align 8
  store i32 30, ptr %41, align 4
  %542 = load ptr, ptr %40, align 8
  %543 = icmp ne ptr %542, null
  br i1 %543, label %544, label %548

544:                                              ; preds = %540
  %545 = load i32, ptr %41, align 4
  %546 = load ptr, ptr %40, align 8
  %547 = getelementptr inbounds %struct.mz_zip_archive, ptr %546, i32 0, i32 5
  store i32 %545, ptr %547, align 4
  br label %548

548:                                              ; preds = %540, %544
  br label %1183

549:                                              ; preds = %531
  br label %550

550:                                              ; preds = %549, %502
  %551 = load i32, ptr %71, align 4
  %552 = icmp ne i32 %551, 0
  br i1 %552, label %553, label %787

553:                                              ; preds = %550
  %554 = load i64, ptr %73, align 8
  %555 = icmp eq i64 %554, 4294967295
  br i1 %555, label %559, label %556

556:                                              ; preds = %553
  %557 = load i64, ptr %74, align 8
  %558 = icmp eq i64 %557, 4294967295
  br i1 %558, label %559, label %787

559:                                              ; preds = %556, %553
  %560 = load i32, ptr %71, align 4
  store i32 %560, ptr %79, align 4
  %561 = getelementptr inbounds %struct.mz_zip_array, ptr %78, i32 0, i32 0
  %562 = load ptr, ptr %561, align 8
  store ptr %562, ptr %80, align 8
  %563 = load ptr, ptr %59, align 8
  %564 = getelementptr inbounds %struct.mz_zip_archive, ptr %563, i32 0, i32 11
  %565 = load ptr, ptr %564, align 8
  %566 = load ptr, ptr %59, align 8
  %567 = getelementptr inbounds %struct.mz_zip_archive, ptr %566, i32 0, i32 14
  %568 = load ptr, ptr %567, align 8
  %569 = load i64, ptr %69, align 8
  %570 = add i64 %569, 30
  %571 = load i32, ptr %70, align 4
  %572 = zext i32 %571 to i64
  %573 = add i64 %570, %572
  %574 = getelementptr inbounds %struct.mz_zip_array, ptr %78, i32 0, i32 0
  %575 = load ptr, ptr %574, align 8
  %576 = load i32, ptr %71, align 4
  %577 = zext i32 %576 to i64
  %578 = call i64 %565(ptr noundef %568, i64 noundef %573, ptr noundef %575, i64 noundef %577)
  %579 = load i32, ptr %71, align 4
  %580 = zext i32 %579 to i64
  %581 = icmp ne i64 %578, %580
  br i1 %581, label %582, label %591

582:                                              ; preds = %559
  %583 = load ptr, ptr %59, align 8
  store ptr %583, ptr %42, align 8
  store i32 20, ptr %43, align 4
  %584 = load ptr, ptr %42, align 8
  %585 = icmp ne ptr %584, null
  br i1 %585, label %586, label %590

586:                                              ; preds = %582
  %587 = load i32, ptr %43, align 4
  %588 = load ptr, ptr %42, align 8
  %589 = getelementptr inbounds %struct.mz_zip_archive, ptr %588, i32 0, i32 5
  store i32 %587, ptr %589, align 4
  br label %590

590:                                              ; preds = %582, %586
  br label %1183

591:                                              ; preds = %559
  br label %592

592:                                              ; preds = %783, %591
  %593 = load i32, ptr %79, align 4
  %594 = zext i32 %593 to i64
  %595 = icmp ult i64 %594, 4
  br i1 %595, label %596, label %605

596:                                              ; preds = %592
  %597 = load ptr, ptr %59, align 8
  store ptr %597, ptr %44, align 8
  store i32 9, ptr %45, align 4
  %598 = load ptr, ptr %44, align 8
  %599 = icmp ne ptr %598, null
  br i1 %599, label %600, label %604

600:                                              ; preds = %596
  %601 = load i32, ptr %45, align 4
  %602 = load ptr, ptr %44, align 8
  %603 = getelementptr inbounds %struct.mz_zip_archive, ptr %602, i32 0, i32 5
  store i32 %601, ptr %603, align 4
  br label %604

604:                                              ; preds = %596, %600
  br label %1183

605:                                              ; preds = %592
  %606 = load ptr, ptr %80, align 8
  %607 = getelementptr inbounds i8, ptr %606, i64 0
  %608 = load i8, ptr %607, align 1
  %609 = zext i8 %608 to i32
  %610 = load ptr, ptr %80, align 8
  %611 = getelementptr inbounds i8, ptr %610, i64 1
  %612 = load i8, ptr %611, align 1
  %613 = zext i8 %612 to i32
  %614 = shl i32 %613, 8
  %615 = or i32 %609, %614
  store i32 %615, ptr %81, align 4
  %616 = load ptr, ptr %80, align 8
  %617 = getelementptr inbounds i8, ptr %616, i64 2
  %618 = getelementptr inbounds i8, ptr %617, i64 0
  %619 = load i8, ptr %618, align 1
  %620 = zext i8 %619 to i32
  %621 = load ptr, ptr %80, align 8
  %622 = getelementptr inbounds i8, ptr %621, i64 2
  %623 = getelementptr inbounds i8, ptr %622, i64 1
  %624 = load i8, ptr %623, align 1
  %625 = zext i8 %624 to i32
  %626 = shl i32 %625, 8
  %627 = or i32 %620, %626
  store i32 %627, ptr %82, align 4
  %628 = load i32, ptr %82, align 4
  %629 = zext i32 %628 to i64
  %630 = add i64 %629, 4
  %631 = trunc i64 %630 to i32
  store i32 %631, ptr %83, align 4
  %632 = load i32, ptr %83, align 4
  %633 = load i32, ptr %79, align 4
  %634 = icmp ugt i32 %632, %633
  br i1 %634, label %635, label %644

635:                                              ; preds = %605
  %636 = load ptr, ptr %59, align 8
  store ptr %636, ptr %46, align 8
  store i32 9, ptr %47, align 4
  %637 = load ptr, ptr %46, align 8
  %638 = icmp ne ptr %637, null
  br i1 %638, label %639, label %643

639:                                              ; preds = %635
  %640 = load i32, ptr %47, align 4
  %641 = load ptr, ptr %46, align 8
  %642 = getelementptr inbounds %struct.mz_zip_archive, ptr %641, i32 0, i32 5
  store i32 %640, ptr %642, align 4
  br label %643

643:                                              ; preds = %635, %639
  br label %1183

644:                                              ; preds = %605
  %645 = load i32, ptr %81, align 4
  %646 = icmp eq i32 %645, 1
  br i1 %646, label %647, label %775

647:                                              ; preds = %644
  %648 = load ptr, ptr %80, align 8
  %649 = getelementptr inbounds i8, ptr %648, i64 4
  store ptr %649, ptr %84, align 8
  %650 = load i32, ptr %82, align 4
  %651 = zext i32 %650 to i64
  %652 = icmp ult i64 %651, 16
  br i1 %652, label %653, label %662

653:                                              ; preds = %647
  %654 = load ptr, ptr %59, align 8
  store ptr %654, ptr %48, align 8
  store i32 9, ptr %49, align 4
  %655 = load ptr, ptr %48, align 8
  %656 = icmp ne ptr %655, null
  br i1 %656, label %657, label %661

657:                                              ; preds = %653
  %658 = load i32, ptr %49, align 4
  %659 = load ptr, ptr %48, align 8
  %660 = getelementptr inbounds %struct.mz_zip_archive, ptr %659, i32 0, i32 5
  store i32 %658, ptr %660, align 4
  br label %661

661:                                              ; preds = %653, %657
  br label %1183

662:                                              ; preds = %647
  %663 = load ptr, ptr %84, align 8
  %664 = getelementptr inbounds i8, ptr %663, i64 0
  %665 = load i8, ptr %664, align 1
  %666 = zext i8 %665 to i32
  %667 = load ptr, ptr %84, align 8
  %668 = getelementptr inbounds i8, ptr %667, i64 1
  %669 = load i8, ptr %668, align 1
  %670 = zext i8 %669 to i32
  %671 = shl i32 %670, 8
  %672 = or i32 %666, %671
  %673 = load ptr, ptr %84, align 8
  %674 = getelementptr inbounds i8, ptr %673, i64 2
  %675 = load i8, ptr %674, align 1
  %676 = zext i8 %675 to i32
  %677 = shl i32 %676, 16
  %678 = or i32 %672, %677
  %679 = load ptr, ptr %84, align 8
  %680 = getelementptr inbounds i8, ptr %679, i64 3
  %681 = load i8, ptr %680, align 1
  %682 = zext i8 %681 to i32
  %683 = shl i32 %682, 24
  %684 = or i32 %678, %683
  %685 = zext i32 %684 to i64
  %686 = load ptr, ptr %84, align 8
  %687 = getelementptr inbounds i8, ptr %686, i64 4
  %688 = getelementptr inbounds i8, ptr %687, i64 0
  %689 = load i8, ptr %688, align 1
  %690 = zext i8 %689 to i32
  %691 = load ptr, ptr %84, align 8
  %692 = getelementptr inbounds i8, ptr %691, i64 4
  %693 = getelementptr inbounds i8, ptr %692, i64 1
  %694 = load i8, ptr %693, align 1
  %695 = zext i8 %694 to i32
  %696 = shl i32 %695, 8
  %697 = or i32 %690, %696
  %698 = load ptr, ptr %84, align 8
  %699 = getelementptr inbounds i8, ptr %698, i64 4
  %700 = getelementptr inbounds i8, ptr %699, i64 2
  %701 = load i8, ptr %700, align 1
  %702 = zext i8 %701 to i32
  %703 = shl i32 %702, 16
  %704 = or i32 %697, %703
  %705 = load ptr, ptr %84, align 8
  %706 = getelementptr inbounds i8, ptr %705, i64 4
  %707 = getelementptr inbounds i8, ptr %706, i64 3
  %708 = load i8, ptr %707, align 1
  %709 = zext i8 %708 to i32
  %710 = shl i32 %709, 24
  %711 = or i32 %704, %710
  %712 = zext i32 %711 to i64
  %713 = shl i64 %712, 32
  %714 = or i64 %685, %713
  store i64 %714, ptr %74, align 8
  %715 = load ptr, ptr %84, align 8
  %716 = getelementptr inbounds i8, ptr %715, i64 8
  %717 = getelementptr inbounds i8, ptr %716, i64 0
  %718 = load i8, ptr %717, align 1
  %719 = zext i8 %718 to i32
  %720 = load ptr, ptr %84, align 8
  %721 = getelementptr inbounds i8, ptr %720, i64 8
  %722 = getelementptr inbounds i8, ptr %721, i64 1
  %723 = load i8, ptr %722, align 1
  %724 = zext i8 %723 to i32
  %725 = shl i32 %724, 8
  %726 = or i32 %719, %725
  %727 = load ptr, ptr %84, align 8
  %728 = getelementptr inbounds i8, ptr %727, i64 8
  %729 = getelementptr inbounds i8, ptr %728, i64 2
  %730 = load i8, ptr %729, align 1
  %731 = zext i8 %730 to i32
  %732 = shl i32 %731, 16
  %733 = or i32 %726, %732
  %734 = load ptr, ptr %84, align 8
  %735 = getelementptr inbounds i8, ptr %734, i64 8
  %736 = getelementptr inbounds i8, ptr %735, i64 3
  %737 = load i8, ptr %736, align 1
  %738 = zext i8 %737 to i32
  %739 = shl i32 %738, 24
  %740 = or i32 %733, %739
  %741 = zext i32 %740 to i64
  %742 = load ptr, ptr %84, align 8
  %743 = getelementptr inbounds i8, ptr %742, i64 8
  %744 = getelementptr inbounds i8, ptr %743, i64 4
  %745 = getelementptr inbounds i8, ptr %744, i64 0
  %746 = load i8, ptr %745, align 1
  %747 = zext i8 %746 to i32
  %748 = load ptr, ptr %84, align 8
  %749 = getelementptr inbounds i8, ptr %748, i64 8
  %750 = getelementptr inbounds i8, ptr %749, i64 4
  %751 = getelementptr inbounds i8, ptr %750, i64 1
  %752 = load i8, ptr %751, align 1
  %753 = zext i8 %752 to i32
  %754 = shl i32 %753, 8
  %755 = or i32 %747, %754
  %756 = load ptr, ptr %84, align 8
  %757 = getelementptr inbounds i8, ptr %756, i64 8
  %758 = getelementptr inbounds i8, ptr %757, i64 4
  %759 = getelementptr inbounds i8, ptr %758, i64 2
  %760 = load i8, ptr %759, align 1
  %761 = zext i8 %760 to i32
  %762 = shl i32 %761, 16
  %763 = or i32 %755, %762
  %764 = load ptr, ptr %84, align 8
  %765 = getelementptr inbounds i8, ptr %764, i64 8
  %766 = getelementptr inbounds i8, ptr %765, i64 4
  %767 = getelementptr inbounds i8, ptr %766, i64 3
  %768 = load i8, ptr %767, align 1
  %769 = zext i8 %768 to i32
  %770 = shl i32 %769, 24
  %771 = or i32 %763, %770
  %772 = zext i32 %771 to i64
  %773 = shl i64 %772, 32
  %774 = or i64 %741, %773
  store i64 %774, ptr %73, align 8
  store i32 1, ptr %66, align 4
  br label %786

775:                                              ; preds = %644
  %776 = load i32, ptr %83, align 4
  %777 = load ptr, ptr %80, align 8
  %778 = zext i32 %776 to i64
  %779 = getelementptr inbounds i8, ptr %777, i64 %778
  store ptr %779, ptr %80, align 8
  %780 = load i32, ptr %83, align 4
  %781 = load i32, ptr %79, align 4
  %782 = sub i32 %781, %780
  store i32 %782, ptr %79, align 4
  br label %783

783:                                              ; preds = %775
  %784 = load i32, ptr %79, align 4
  %785 = icmp ne i32 %784, 0
  br i1 %785, label %592, label %786, !llvm.loop !121

786:                                              ; preds = %783, %662
  br label %787

787:                                              ; preds = %786, %556, %550
  %788 = load i32, ptr %76, align 4
  %789 = icmp ne i32 %788, 0
  br i1 %789, label %790, label %1119

790:                                              ; preds = %787
  %791 = load i64, ptr %73, align 8
  %792 = icmp ne i64 %791, 0
  br i1 %792, label %1119, label %793

793:                                              ; preds = %790
  %794 = load i32, ptr %72, align 4
  %795 = icmp ne i32 %794, 0
  br i1 %795, label %1119, label %796

796:                                              ; preds = %793
  store i64 0, ptr %89, align 8
  store i64 0, ptr %90, align 8
  %797 = load ptr, ptr %63, align 8
  %798 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %797, i32 0, i32 4
  %799 = load i32, ptr %798, align 4
  %800 = icmp ne i32 %799, 0
  br i1 %800, label %804, label %801

801:                                              ; preds = %796
  %802 = load i32, ptr %66, align 4
  %803 = icmp ne i32 %802, 0
  br label %804

804:                                              ; preds = %801, %796
  %805 = phi i1 [ true, %796 ], [ %803, %801 ]
  %806 = zext i1 %805 to i64
  %807 = select i1 %805, i32 6, i32 4
  store i32 %807, ptr %91, align 4
  %808 = load ptr, ptr %59, align 8
  %809 = getelementptr inbounds %struct.mz_zip_archive, ptr %808, i32 0, i32 11
  %810 = load ptr, ptr %809, align 8
  %811 = load ptr, ptr %59, align 8
  %812 = getelementptr inbounds %struct.mz_zip_archive, ptr %811, i32 0, i32 14
  %813 = load ptr, ptr %812, align 8
  %814 = load i64, ptr %69, align 8
  %815 = add i64 %814, 30
  %816 = load i32, ptr %70, align 4
  %817 = zext i32 %816 to i64
  %818 = add i64 %815, %817
  %819 = load i32, ptr %71, align 4
  %820 = zext i32 %819 to i64
  %821 = add i64 %818, %820
  %822 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 7
  %823 = load i64, ptr %822, align 8
  %824 = add i64 %821, %823
  %825 = getelementptr inbounds [32 x i8], ptr %85, i64 0, i64 0
  %826 = load i32, ptr %91, align 4
  %827 = zext i32 %826 to i64
  %828 = mul i64 4, %827
  %829 = call i64 %810(ptr noundef %813, i64 noundef %824, ptr noundef %825, i64 noundef %828)
  %830 = load i32, ptr %91, align 4
  %831 = zext i32 %830 to i64
  %832 = mul i64 4, %831
  %833 = icmp ne i64 %829, %832
  br i1 %833, label %834, label %843

834:                                              ; preds = %804
  %835 = load ptr, ptr %59, align 8
  store ptr %835, ptr %50, align 8
  store i32 20, ptr %51, align 4
  %836 = load ptr, ptr %50, align 8
  %837 = icmp ne ptr %836, null
  br i1 %837, label %838, label %842

838:                                              ; preds = %834
  %839 = load i32, ptr %51, align 4
  %840 = load ptr, ptr %50, align 8
  %841 = getelementptr inbounds %struct.mz_zip_archive, ptr %840, i32 0, i32 5
  store i32 %839, ptr %841, align 4
  br label %842

842:                                              ; preds = %834, %838
  br label %1183

843:                                              ; preds = %804
  %844 = getelementptr inbounds [32 x i8], ptr %85, i64 0, i64 0
  %845 = getelementptr inbounds i8, ptr %844, i64 0
  %846 = load i8, ptr %845, align 16
  %847 = zext i8 %846 to i32
  %848 = getelementptr inbounds [32 x i8], ptr %85, i64 0, i64 0
  %849 = getelementptr inbounds i8, ptr %848, i64 1
  %850 = load i8, ptr %849, align 1
  %851 = zext i8 %850 to i32
  %852 = shl i32 %851, 8
  %853 = or i32 %847, %852
  %854 = getelementptr inbounds [32 x i8], ptr %85, i64 0, i64 0
  %855 = getelementptr inbounds i8, ptr %854, i64 2
  %856 = load i8, ptr %855, align 2
  %857 = zext i8 %856 to i32
  %858 = shl i32 %857, 16
  %859 = or i32 %853, %858
  %860 = getelementptr inbounds [32 x i8], ptr %85, i64 0, i64 0
  %861 = getelementptr inbounds i8, ptr %860, i64 3
  %862 = load i8, ptr %861, align 1
  %863 = zext i8 %862 to i32
  %864 = shl i32 %863, 24
  %865 = or i32 %859, %864
  %866 = icmp eq i32 %865, 134695760
  %867 = zext i1 %866 to i32
  store i32 %867, ptr %86, align 4
  %868 = load i32, ptr %86, align 4
  %869 = icmp ne i32 %868, 0
  br i1 %869, label %870, label %873

870:                                              ; preds = %843
  %871 = getelementptr inbounds [32 x i8], ptr %85, i64 0, i64 0
  %872 = getelementptr inbounds i8, ptr %871, i64 4
  br label %875

873:                                              ; preds = %843
  %874 = getelementptr inbounds [32 x i8], ptr %85, i64 0, i64 0
  br label %875

875:                                              ; preds = %873, %870
  %876 = phi ptr [ %872, %870 ], [ %874, %873 ]
  store ptr %876, ptr %87, align 8
  %877 = load ptr, ptr %87, align 8
  %878 = getelementptr inbounds i8, ptr %877, i64 0
  %879 = load i8, ptr %878, align 1
  %880 = zext i8 %879 to i32
  %881 = load ptr, ptr %87, align 8
  %882 = getelementptr inbounds i8, ptr %881, i64 1
  %883 = load i8, ptr %882, align 1
  %884 = zext i8 %883 to i32
  %885 = shl i32 %884, 8
  %886 = or i32 %880, %885
  %887 = load ptr, ptr %87, align 8
  %888 = getelementptr inbounds i8, ptr %887, i64 2
  %889 = load i8, ptr %888, align 1
  %890 = zext i8 %889 to i32
  %891 = shl i32 %890, 16
  %892 = or i32 %886, %891
  %893 = load ptr, ptr %87, align 8
  %894 = getelementptr inbounds i8, ptr %893, i64 3
  %895 = load i8, ptr %894, align 1
  %896 = zext i8 %895 to i32
  %897 = shl i32 %896, 24
  %898 = or i32 %892, %897
  store i32 %898, ptr %88, align 4
  %899 = load ptr, ptr %63, align 8
  %900 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %899, i32 0, i32 4
  %901 = load i32, ptr %900, align 4
  %902 = icmp ne i32 %901, 0
  br i1 %902, label %906, label %903

903:                                              ; preds = %875
  %904 = load i32, ptr %66, align 4
  %905 = icmp ne i32 %904, 0
  br i1 %905, label %906, label %1035

906:                                              ; preds = %903, %875
  %907 = load ptr, ptr %87, align 8
  %908 = getelementptr inbounds i8, ptr %907, i64 4
  %909 = getelementptr inbounds i8, ptr %908, i64 0
  %910 = load i8, ptr %909, align 1
  %911 = zext i8 %910 to i32
  %912 = load ptr, ptr %87, align 8
  %913 = getelementptr inbounds i8, ptr %912, i64 4
  %914 = getelementptr inbounds i8, ptr %913, i64 1
  %915 = load i8, ptr %914, align 1
  %916 = zext i8 %915 to i32
  %917 = shl i32 %916, 8
  %918 = or i32 %911, %917
  %919 = load ptr, ptr %87, align 8
  %920 = getelementptr inbounds i8, ptr %919, i64 4
  %921 = getelementptr inbounds i8, ptr %920, i64 2
  %922 = load i8, ptr %921, align 1
  %923 = zext i8 %922 to i32
  %924 = shl i32 %923, 16
  %925 = or i32 %918, %924
  %926 = load ptr, ptr %87, align 8
  %927 = getelementptr inbounds i8, ptr %926, i64 4
  %928 = getelementptr inbounds i8, ptr %927, i64 3
  %929 = load i8, ptr %928, align 1
  %930 = zext i8 %929 to i32
  %931 = shl i32 %930, 24
  %932 = or i32 %925, %931
  %933 = zext i32 %932 to i64
  %934 = load ptr, ptr %87, align 8
  %935 = getelementptr inbounds i8, ptr %934, i64 4
  %936 = getelementptr inbounds i8, ptr %935, i64 4
  %937 = getelementptr inbounds i8, ptr %936, i64 0
  %938 = load i8, ptr %937, align 1
  %939 = zext i8 %938 to i32
  %940 = load ptr, ptr %87, align 8
  %941 = getelementptr inbounds i8, ptr %940, i64 4
  %942 = getelementptr inbounds i8, ptr %941, i64 4
  %943 = getelementptr inbounds i8, ptr %942, i64 1
  %944 = load i8, ptr %943, align 1
  %945 = zext i8 %944 to i32
  %946 = shl i32 %945, 8
  %947 = or i32 %939, %946
  %948 = load ptr, ptr %87, align 8
  %949 = getelementptr inbounds i8, ptr %948, i64 4
  %950 = getelementptr inbounds i8, ptr %949, i64 4
  %951 = getelementptr inbounds i8, ptr %950, i64 2
  %952 = load i8, ptr %951, align 1
  %953 = zext i8 %952 to i32
  %954 = shl i32 %953, 16
  %955 = or i32 %947, %954
  %956 = load ptr, ptr %87, align 8
  %957 = getelementptr inbounds i8, ptr %956, i64 4
  %958 = getelementptr inbounds i8, ptr %957, i64 4
  %959 = getelementptr inbounds i8, ptr %958, i64 3
  %960 = load i8, ptr %959, align 1
  %961 = zext i8 %960 to i32
  %962 = shl i32 %961, 24
  %963 = or i32 %955, %962
  %964 = zext i32 %963 to i64
  %965 = shl i64 %964, 32
  %966 = or i64 %933, %965
  store i64 %966, ptr %89, align 8
  %967 = load ptr, ptr %87, align 8
  %968 = getelementptr inbounds i8, ptr %967, i64 4
  %969 = getelementptr inbounds i8, ptr %968, i64 8
  %970 = getelementptr inbounds i8, ptr %969, i64 0
  %971 = load i8, ptr %970, align 1
  %972 = zext i8 %971 to i32
  %973 = load ptr, ptr %87, align 8
  %974 = getelementptr inbounds i8, ptr %973, i64 4
  %975 = getelementptr inbounds i8, ptr %974, i64 8
  %976 = getelementptr inbounds i8, ptr %975, i64 1
  %977 = load i8, ptr %976, align 1
  %978 = zext i8 %977 to i32
  %979 = shl i32 %978, 8
  %980 = or i32 %972, %979
  %981 = load ptr, ptr %87, align 8
  %982 = getelementptr inbounds i8, ptr %981, i64 4
  %983 = getelementptr inbounds i8, ptr %982, i64 8
  %984 = getelementptr inbounds i8, ptr %983, i64 2
  %985 = load i8, ptr %984, align 1
  %986 = zext i8 %985 to i32
  %987 = shl i32 %986, 16
  %988 = or i32 %980, %987
  %989 = load ptr, ptr %87, align 8
  %990 = getelementptr inbounds i8, ptr %989, i64 4
  %991 = getelementptr inbounds i8, ptr %990, i64 8
  %992 = getelementptr inbounds i8, ptr %991, i64 3
  %993 = load i8, ptr %992, align 1
  %994 = zext i8 %993 to i32
  %995 = shl i32 %994, 24
  %996 = or i32 %988, %995
  %997 = zext i32 %996 to i64
  %998 = load ptr, ptr %87, align 8
  %999 = getelementptr inbounds i8, ptr %998, i64 4
  %1000 = getelementptr inbounds i8, ptr %999, i64 8
  %1001 = getelementptr inbounds i8, ptr %1000, i64 4
  %1002 = getelementptr inbounds i8, ptr %1001, i64 0
  %1003 = load i8, ptr %1002, align 1
  %1004 = zext i8 %1003 to i32
  %1005 = load ptr, ptr %87, align 8
  %1006 = getelementptr inbounds i8, ptr %1005, i64 4
  %1007 = getelementptr inbounds i8, ptr %1006, i64 8
  %1008 = getelementptr inbounds i8, ptr %1007, i64 4
  %1009 = getelementptr inbounds i8, ptr %1008, i64 1
  %1010 = load i8, ptr %1009, align 1
  %1011 = zext i8 %1010 to i32
  %1012 = shl i32 %1011, 8
  %1013 = or i32 %1004, %1012
  %1014 = load ptr, ptr %87, align 8
  %1015 = getelementptr inbounds i8, ptr %1014, i64 4
  %1016 = getelementptr inbounds i8, ptr %1015, i64 8
  %1017 = getelementptr inbounds i8, ptr %1016, i64 4
  %1018 = getelementptr inbounds i8, ptr %1017, i64 2
  %1019 = load i8, ptr %1018, align 1
  %1020 = zext i8 %1019 to i32
  %1021 = shl i32 %1020, 16
  %1022 = or i32 %1013, %1021
  %1023 = load ptr, ptr %87, align 8
  %1024 = getelementptr inbounds i8, ptr %1023, i64 4
  %1025 = getelementptr inbounds i8, ptr %1024, i64 8
  %1026 = getelementptr inbounds i8, ptr %1025, i64 4
  %1027 = getelementptr inbounds i8, ptr %1026, i64 3
  %1028 = load i8, ptr %1027, align 1
  %1029 = zext i8 %1028 to i32
  %1030 = shl i32 %1029, 24
  %1031 = or i32 %1022, %1030
  %1032 = zext i32 %1031 to i64
  %1033 = shl i64 %1032, 32
  %1034 = or i64 %997, %1033
  store i64 %1034, ptr %90, align 8
  br label %1094

1035:                                             ; preds = %903
  %1036 = load ptr, ptr %87, align 8
  %1037 = getelementptr inbounds i8, ptr %1036, i64 4
  %1038 = getelementptr inbounds i8, ptr %1037, i64 0
  %1039 = load i8, ptr %1038, align 1
  %1040 = zext i8 %1039 to i32
  %1041 = load ptr, ptr %87, align 8
  %1042 = getelementptr inbounds i8, ptr %1041, i64 4
  %1043 = getelementptr inbounds i8, ptr %1042, i64 1
  %1044 = load i8, ptr %1043, align 1
  %1045 = zext i8 %1044 to i32
  %1046 = shl i32 %1045, 8
  %1047 = or i32 %1040, %1046
  %1048 = load ptr, ptr %87, align 8
  %1049 = getelementptr inbounds i8, ptr %1048, i64 4
  %1050 = getelementptr inbounds i8, ptr %1049, i64 2
  %1051 = load i8, ptr %1050, align 1
  %1052 = zext i8 %1051 to i32
  %1053 = shl i32 %1052, 16
  %1054 = or i32 %1047, %1053
  %1055 = load ptr, ptr %87, align 8
  %1056 = getelementptr inbounds i8, ptr %1055, i64 4
  %1057 = getelementptr inbounds i8, ptr %1056, i64 3
  %1058 = load i8, ptr %1057, align 1
  %1059 = zext i8 %1058 to i32
  %1060 = shl i32 %1059, 24
  %1061 = or i32 %1054, %1060
  %1062 = zext i32 %1061 to i64
  store i64 %1062, ptr %89, align 8
  %1063 = load ptr, ptr %87, align 8
  %1064 = getelementptr inbounds i8, ptr %1063, i64 4
  %1065 = getelementptr inbounds i8, ptr %1064, i64 4
  %1066 = getelementptr inbounds i8, ptr %1065, i64 0
  %1067 = load i8, ptr %1066, align 1
  %1068 = zext i8 %1067 to i32
  %1069 = load ptr, ptr %87, align 8
  %1070 = getelementptr inbounds i8, ptr %1069, i64 4
  %1071 = getelementptr inbounds i8, ptr %1070, i64 4
  %1072 = getelementptr inbounds i8, ptr %1071, i64 1
  %1073 = load i8, ptr %1072, align 1
  %1074 = zext i8 %1073 to i32
  %1075 = shl i32 %1074, 8
  %1076 = or i32 %1068, %1075
  %1077 = load ptr, ptr %87, align 8
  %1078 = getelementptr inbounds i8, ptr %1077, i64 4
  %1079 = getelementptr inbounds i8, ptr %1078, i64 4
  %1080 = getelementptr inbounds i8, ptr %1079, i64 2
  %1081 = load i8, ptr %1080, align 1
  %1082 = zext i8 %1081 to i32
  %1083 = shl i32 %1082, 16
  %1084 = or i32 %1076, %1083
  %1085 = load ptr, ptr %87, align 8
  %1086 = getelementptr inbounds i8, ptr %1085, i64 4
  %1087 = getelementptr inbounds i8, ptr %1086, i64 4
  %1088 = getelementptr inbounds i8, ptr %1087, i64 3
  %1089 = load i8, ptr %1088, align 1
  %1090 = zext i8 %1089 to i32
  %1091 = shl i32 %1090, 24
  %1092 = or i32 %1084, %1091
  %1093 = zext i32 %1092 to i64
  store i64 %1093, ptr %90, align 8
  br label %1094

1094:                                             ; preds = %1035, %906
  %1095 = load i32, ptr %88, align 4
  %1096 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 6
  %1097 = load i32, ptr %1096, align 8
  %1098 = icmp ne i32 %1095, %1097
  br i1 %1098, label %1109, label %1099

1099:                                             ; preds = %1094
  %1100 = load i64, ptr %89, align 8
  %1101 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 7
  %1102 = load i64, ptr %1101, align 8
  %1103 = icmp ne i64 %1100, %1102
  br i1 %1103, label %1109, label %1104

1104:                                             ; preds = %1099
  %1105 = load i64, ptr %90, align 8
  %1106 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 8
  %1107 = load i64, ptr %1106, align 8
  %1108 = icmp ne i64 %1105, %1107
  br i1 %1108, label %1109, label %1118

1109:                                             ; preds = %1104, %1099, %1094
  %1110 = load ptr, ptr %59, align 8
  store ptr %1110, ptr %52, align 8
  store i32 30, ptr %53, align 4
  %1111 = load ptr, ptr %52, align 8
  %1112 = icmp ne ptr %1111, null
  br i1 %1112, label %1113, label %1117

1113:                                             ; preds = %1109
  %1114 = load i32, ptr %53, align 4
  %1115 = load ptr, ptr %52, align 8
  %1116 = getelementptr inbounds %struct.mz_zip_archive, ptr %1115, i32 0, i32 5
  store i32 %1114, ptr %1116, align 4
  br label %1117

1117:                                             ; preds = %1109, %1113
  br label %1183

1118:                                             ; preds = %1104
  br label %1144

1119:                                             ; preds = %793, %790, %787
  %1120 = load i32, ptr %72, align 4
  %1121 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 6
  %1122 = load i32, ptr %1121, align 8
  %1123 = icmp ne i32 %1120, %1122
  br i1 %1123, label %1134, label %1124

1124:                                             ; preds = %1119
  %1125 = load i64, ptr %73, align 8
  %1126 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 7
  %1127 = load i64, ptr %1126, align 8
  %1128 = icmp ne i64 %1125, %1127
  br i1 %1128, label %1134, label %1129

1129:                                             ; preds = %1124
  %1130 = load i64, ptr %74, align 8
  %1131 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 8
  %1132 = load i64, ptr %1131, align 8
  %1133 = icmp ne i64 %1130, %1132
  br i1 %1133, label %1134, label %1143

1134:                                             ; preds = %1129, %1124, %1119
  %1135 = load ptr, ptr %59, align 8
  store ptr %1135, ptr %54, align 8
  store i32 30, ptr %55, align 4
  %1136 = load ptr, ptr %54, align 8
  %1137 = icmp ne ptr %1136, null
  br i1 %1137, label %1138, label %1142

1138:                                             ; preds = %1134
  %1139 = load i32, ptr %55, align 4
  %1140 = load ptr, ptr %54, align 8
  %1141 = getelementptr inbounds %struct.mz_zip_archive, ptr %1140, i32 0, i32 5
  store i32 %1139, ptr %1141, align 4
  br label %1142

1142:                                             ; preds = %1134, %1138
  br label %1183

1143:                                             ; preds = %1129
  br label %1144

1144:                                             ; preds = %1143, %1118
  %1145 = load ptr, ptr %59, align 8
  store ptr %1145, ptr %4, align 8
  store ptr %78, ptr %5, align 8
  %1146 = load ptr, ptr %4, align 8
  %1147 = getelementptr inbounds %struct.mz_zip_archive, ptr %1146, i32 0, i32 8
  %1148 = load ptr, ptr %1147, align 8
  %1149 = load ptr, ptr %4, align 8
  %1150 = getelementptr inbounds %struct.mz_zip_archive, ptr %1149, i32 0, i32 10
  %1151 = load ptr, ptr %1150, align 8
  %1152 = load ptr, ptr %5, align 8
  %1153 = load ptr, ptr %1152, align 8
  call void %1148(ptr noundef %1151, ptr noundef %1153) #11
  %1154 = load ptr, ptr %5, align 8
  %1155 = load ptr, ptr %5, align 8
  %1156 = call i64 @llvm.objectsize.i64.p0(ptr %1155, i1 false, i1 true, i1 false)
  %1157 = call ptr @__memset_chk(ptr noundef %1154, i32 noundef 0, i64 noundef 32, i64 noundef %1156) #11
  %1158 = load i32, ptr %61, align 4
  %1159 = and i32 %1158, 8192
  %1160 = icmp eq i32 %1159, 0
  br i1 %1160, label %1161, label %1182

1161:                                             ; preds = %1144
  %1162 = load ptr, ptr %59, align 8
  %1163 = load i32, ptr %60, align 4
  %1164 = call i32 @mz_zip_reader_extract_to_callback(ptr noundef %1162, i32 noundef %1163, ptr noundef @mz_zip_compute_crc32_callback, ptr noundef %75, i32 noundef 0)
  %1165 = icmp ne i32 %1164, 0
  br i1 %1165, label %1167, label %1166

1166:                                             ; preds = %1161
  store i32 0, ptr %58, align 4
  br label %1197

1167:                                             ; preds = %1161
  %1168 = load i32, ptr %75, align 4
  %1169 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %62, i32 0, i32 6
  %1170 = load i32, ptr %1169, align 8
  %1171 = icmp ne i32 %1168, %1170
  br i1 %1171, label %1172, label %1181

1172:                                             ; preds = %1167
  %1173 = load ptr, ptr %59, align 8
  store ptr %1173, ptr %56, align 8
  store i32 30, ptr %57, align 4
  %1174 = load ptr, ptr %56, align 8
  %1175 = icmp ne ptr %1174, null
  br i1 %1175, label %1176, label %1180

1176:                                             ; preds = %1172
  %1177 = load i32, ptr %57, align 4
  %1178 = load ptr, ptr %56, align 8
  %1179 = getelementptr inbounds %struct.mz_zip_archive, ptr %1178, i32 0, i32 5
  store i32 %1177, ptr %1179, align 4
  br label %1180

1180:                                             ; preds = %1172, %1176
  store i32 0, ptr %58, align 4
  br label %1197

1181:                                             ; preds = %1167
  br label %1182

1182:                                             ; preds = %1181, %1144
  store i32 1, ptr %58, align 4
  br label %1197

1183:                                             ; preds = %1142, %1117, %842, %661, %643, %604, %590, %548, %530, %501
  %1184 = load ptr, ptr %59, align 8
  store ptr %1184, ptr %6, align 8
  store ptr %78, ptr %7, align 8
  %1185 = load ptr, ptr %6, align 8
  %1186 = getelementptr inbounds %struct.mz_zip_archive, ptr %1185, i32 0, i32 8
  %1187 = load ptr, ptr %1186, align 8
  %1188 = load ptr, ptr %6, align 8
  %1189 = getelementptr inbounds %struct.mz_zip_archive, ptr %1188, i32 0, i32 10
  %1190 = load ptr, ptr %1189, align 8
  %1191 = load ptr, ptr %7, align 8
  %1192 = load ptr, ptr %1191, align 8
  call void %1187(ptr noundef %1190, ptr noundef %1192) #11
  %1193 = load ptr, ptr %7, align 8
  %1194 = load ptr, ptr %7, align 8
  %1195 = call i64 @llvm.objectsize.i64.p0(ptr %1194, i1 false, i1 true, i1 false)
  %1196 = call ptr @__memset_chk(ptr noundef %1193, i32 noundef 0, i64 noundef 32, i64 noundef %1195) #11
  store i32 0, ptr %58, align 4
  br label %1197

1197:                                             ; preds = %1183, %1182, %1180, %1166, %459, %434, %298, %265, %243, %230, %211, %198, %189, %145, %130
  %1198 = load i32, ptr %58, align 4
  ret i32 %1198
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_file_stat_internal(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca ptr, align 8
  %20 = alloca i32, align 4
  %21 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  %24 = alloca i32, align 4
  %25 = alloca ptr, align 8
  %26 = alloca i32, align 4
  %27 = alloca ptr, align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca ptr, align 8
  %31 = alloca i32, align 4
  store ptr %0, ptr %19, align 8
  store i32 %1, ptr %20, align 4
  store ptr %2, ptr %21, align 8
  store ptr %3, ptr %22, align 8
  store ptr %4, ptr %23, align 8
  %32 = load ptr, ptr %21, align 8
  store ptr %32, ptr %25, align 8
  %33 = load ptr, ptr %23, align 8
  %34 = icmp ne ptr %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %5
  %36 = load ptr, ptr %23, align 8
  store i32 0, ptr %36, align 4
  br label %37

37:                                               ; preds = %35, %5
  %38 = load ptr, ptr %25, align 8
  %39 = icmp ne ptr %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = load ptr, ptr %22, align 8
  %42 = icmp ne ptr %41, null
  br i1 %42, label %52, label %43

43:                                               ; preds = %40, %37
  %44 = load ptr, ptr %19, align 8
  store ptr %44, ptr %6, align 8
  store i32 24, ptr %7, align 4
  %45 = load ptr, ptr %6, align 8
  %46 = icmp ne ptr %45, null
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = load i32, ptr %7, align 4
  %49 = load ptr, ptr %6, align 8
  %50 = getelementptr inbounds %struct.mz_zip_archive, ptr %49, i32 0, i32 5
  store i32 %48, ptr %50, align 4
  br label %51

51:                                               ; preds = %43, %47
  store i32 0, ptr %18, align 4
  br label %829

52:                                               ; preds = %40
  %53 = load i32, ptr %20, align 4
  %54 = load ptr, ptr %22, align 8
  %55 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %54, i32 0, i32 0
  store i32 %53, ptr %55, align 8
  %56 = load ptr, ptr %19, align 8
  %57 = getelementptr inbounds %struct.mz_zip_archive, ptr %56, i32 0, i32 15
  %58 = load ptr, ptr %57, align 8
  %59 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %58, i32 0, i32 1
  %60 = getelementptr inbounds %struct.mz_zip_array, ptr %59, i32 0, i32 0
  %61 = load ptr, ptr %60, align 8
  %62 = load i32, ptr %20, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i32, ptr %61, i64 %63
  %65 = load i32, ptr %64, align 4
  %66 = zext i32 %65 to i64
  %67 = load ptr, ptr %22, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %67, i32 0, i32 1
  store i64 %66, ptr %68, align 8
  %69 = load ptr, ptr %25, align 8
  %70 = getelementptr inbounds i8, ptr %69, i64 4
  %71 = getelementptr inbounds i8, ptr %70, i64 0
  %72 = load i8, ptr %71, align 1
  %73 = zext i8 %72 to i32
  %74 = load ptr, ptr %25, align 8
  %75 = getelementptr inbounds i8, ptr %74, i64 4
  %76 = getelementptr inbounds i8, ptr %75, i64 1
  %77 = load i8, ptr %76, align 1
  %78 = zext i8 %77 to i32
  %79 = shl i32 %78, 8
  %80 = or i32 %73, %79
  %81 = trunc i32 %80 to i16
  %82 = load ptr, ptr %22, align 8
  %83 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %82, i32 0, i32 2
  store i16 %81, ptr %83, align 8
  %84 = load ptr, ptr %25, align 8
  %85 = getelementptr inbounds i8, ptr %84, i64 6
  %86 = getelementptr inbounds i8, ptr %85, i64 0
  %87 = load i8, ptr %86, align 1
  %88 = zext i8 %87 to i32
  %89 = load ptr, ptr %25, align 8
  %90 = getelementptr inbounds i8, ptr %89, i64 6
  %91 = getelementptr inbounds i8, ptr %90, i64 1
  %92 = load i8, ptr %91, align 1
  %93 = zext i8 %92 to i32
  %94 = shl i32 %93, 8
  %95 = or i32 %88, %94
  %96 = trunc i32 %95 to i16
  %97 = load ptr, ptr %22, align 8
  %98 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %97, i32 0, i32 3
  store i16 %96, ptr %98, align 2
  %99 = load ptr, ptr %25, align 8
  %100 = getelementptr inbounds i8, ptr %99, i64 8
  %101 = getelementptr inbounds i8, ptr %100, i64 0
  %102 = load i8, ptr %101, align 1
  %103 = zext i8 %102 to i32
  %104 = load ptr, ptr %25, align 8
  %105 = getelementptr inbounds i8, ptr %104, i64 8
  %106 = getelementptr inbounds i8, ptr %105, i64 1
  %107 = load i8, ptr %106, align 1
  %108 = zext i8 %107 to i32
  %109 = shl i32 %108, 8
  %110 = or i32 %103, %109
  %111 = trunc i32 %110 to i16
  %112 = load ptr, ptr %22, align 8
  %113 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %112, i32 0, i32 4
  store i16 %111, ptr %113, align 4
  %114 = load ptr, ptr %25, align 8
  %115 = getelementptr inbounds i8, ptr %114, i64 10
  %116 = getelementptr inbounds i8, ptr %115, i64 0
  %117 = load i8, ptr %116, align 1
  %118 = zext i8 %117 to i32
  %119 = load ptr, ptr %25, align 8
  %120 = getelementptr inbounds i8, ptr %119, i64 10
  %121 = getelementptr inbounds i8, ptr %120, i64 1
  %122 = load i8, ptr %121, align 1
  %123 = zext i8 %122 to i32
  %124 = shl i32 %123, 8
  %125 = or i32 %118, %124
  %126 = trunc i32 %125 to i16
  %127 = load ptr, ptr %22, align 8
  %128 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %127, i32 0, i32 5
  store i16 %126, ptr %128, align 2
  %129 = load ptr, ptr %25, align 8
  %130 = getelementptr inbounds i8, ptr %129, i64 12
  %131 = getelementptr inbounds i8, ptr %130, i64 0
  %132 = load i8, ptr %131, align 1
  %133 = zext i8 %132 to i32
  %134 = load ptr, ptr %25, align 8
  %135 = getelementptr inbounds i8, ptr %134, i64 12
  %136 = getelementptr inbounds i8, ptr %135, i64 1
  %137 = load i8, ptr %136, align 1
  %138 = zext i8 %137 to i32
  %139 = shl i32 %138, 8
  %140 = or i32 %133, %139
  %141 = load ptr, ptr %25, align 8
  %142 = getelementptr inbounds i8, ptr %141, i64 14
  %143 = getelementptr inbounds i8, ptr %142, i64 0
  %144 = load i8, ptr %143, align 1
  %145 = zext i8 %144 to i32
  %146 = load ptr, ptr %25, align 8
  %147 = getelementptr inbounds i8, ptr %146, i64 14
  %148 = getelementptr inbounds i8, ptr %147, i64 1
  %149 = load i8, ptr %148, align 1
  %150 = zext i8 %149 to i32
  %151 = shl i32 %150, 8
  %152 = or i32 %145, %151
  %153 = call i64 @mz_zip_dos_to_time_t(i32 noundef %140, i32 noundef %152)
  %154 = load ptr, ptr %22, align 8
  %155 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %154, i32 0, i32 18
  store i64 %153, ptr %155, align 8
  %156 = load ptr, ptr %25, align 8
  %157 = getelementptr inbounds i8, ptr %156, i64 16
  %158 = getelementptr inbounds i8, ptr %157, i64 0
  %159 = load i8, ptr %158, align 1
  %160 = zext i8 %159 to i32
  %161 = load ptr, ptr %25, align 8
  %162 = getelementptr inbounds i8, ptr %161, i64 16
  %163 = getelementptr inbounds i8, ptr %162, i64 1
  %164 = load i8, ptr %163, align 1
  %165 = zext i8 %164 to i32
  %166 = shl i32 %165, 8
  %167 = or i32 %160, %166
  %168 = load ptr, ptr %25, align 8
  %169 = getelementptr inbounds i8, ptr %168, i64 16
  %170 = getelementptr inbounds i8, ptr %169, i64 2
  %171 = load i8, ptr %170, align 1
  %172 = zext i8 %171 to i32
  %173 = shl i32 %172, 16
  %174 = or i32 %167, %173
  %175 = load ptr, ptr %25, align 8
  %176 = getelementptr inbounds i8, ptr %175, i64 16
  %177 = getelementptr inbounds i8, ptr %176, i64 3
  %178 = load i8, ptr %177, align 1
  %179 = zext i8 %178 to i32
  %180 = shl i32 %179, 24
  %181 = or i32 %174, %180
  %182 = load ptr, ptr %22, align 8
  %183 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %182, i32 0, i32 6
  store i32 %181, ptr %183, align 8
  %184 = load ptr, ptr %25, align 8
  %185 = getelementptr inbounds i8, ptr %184, i64 20
  %186 = getelementptr inbounds i8, ptr %185, i64 0
  %187 = load i8, ptr %186, align 1
  %188 = zext i8 %187 to i32
  %189 = load ptr, ptr %25, align 8
  %190 = getelementptr inbounds i8, ptr %189, i64 20
  %191 = getelementptr inbounds i8, ptr %190, i64 1
  %192 = load i8, ptr %191, align 1
  %193 = zext i8 %192 to i32
  %194 = shl i32 %193, 8
  %195 = or i32 %188, %194
  %196 = load ptr, ptr %25, align 8
  %197 = getelementptr inbounds i8, ptr %196, i64 20
  %198 = getelementptr inbounds i8, ptr %197, i64 2
  %199 = load i8, ptr %198, align 1
  %200 = zext i8 %199 to i32
  %201 = shl i32 %200, 16
  %202 = or i32 %195, %201
  %203 = load ptr, ptr %25, align 8
  %204 = getelementptr inbounds i8, ptr %203, i64 20
  %205 = getelementptr inbounds i8, ptr %204, i64 3
  %206 = load i8, ptr %205, align 1
  %207 = zext i8 %206 to i32
  %208 = shl i32 %207, 24
  %209 = or i32 %202, %208
  %210 = zext i32 %209 to i64
  %211 = load ptr, ptr %22, align 8
  %212 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %211, i32 0, i32 7
  store i64 %210, ptr %212, align 8
  %213 = load ptr, ptr %25, align 8
  %214 = getelementptr inbounds i8, ptr %213, i64 24
  %215 = getelementptr inbounds i8, ptr %214, i64 0
  %216 = load i8, ptr %215, align 1
  %217 = zext i8 %216 to i32
  %218 = load ptr, ptr %25, align 8
  %219 = getelementptr inbounds i8, ptr %218, i64 24
  %220 = getelementptr inbounds i8, ptr %219, i64 1
  %221 = load i8, ptr %220, align 1
  %222 = zext i8 %221 to i32
  %223 = shl i32 %222, 8
  %224 = or i32 %217, %223
  %225 = load ptr, ptr %25, align 8
  %226 = getelementptr inbounds i8, ptr %225, i64 24
  %227 = getelementptr inbounds i8, ptr %226, i64 2
  %228 = load i8, ptr %227, align 1
  %229 = zext i8 %228 to i32
  %230 = shl i32 %229, 16
  %231 = or i32 %224, %230
  %232 = load ptr, ptr %25, align 8
  %233 = getelementptr inbounds i8, ptr %232, i64 24
  %234 = getelementptr inbounds i8, ptr %233, i64 3
  %235 = load i8, ptr %234, align 1
  %236 = zext i8 %235 to i32
  %237 = shl i32 %236, 24
  %238 = or i32 %231, %237
  %239 = zext i32 %238 to i64
  %240 = load ptr, ptr %22, align 8
  %241 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %240, i32 0, i32 8
  store i64 %239, ptr %241, align 8
  %242 = load ptr, ptr %25, align 8
  %243 = getelementptr inbounds i8, ptr %242, i64 36
  %244 = getelementptr inbounds i8, ptr %243, i64 0
  %245 = load i8, ptr %244, align 1
  %246 = zext i8 %245 to i32
  %247 = load ptr, ptr %25, align 8
  %248 = getelementptr inbounds i8, ptr %247, i64 36
  %249 = getelementptr inbounds i8, ptr %248, i64 1
  %250 = load i8, ptr %249, align 1
  %251 = zext i8 %250 to i32
  %252 = shl i32 %251, 8
  %253 = or i32 %246, %252
  %254 = trunc i32 %253 to i16
  %255 = load ptr, ptr %22, align 8
  %256 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %255, i32 0, i32 9
  store i16 %254, ptr %256, align 8
  %257 = load ptr, ptr %25, align 8
  %258 = getelementptr inbounds i8, ptr %257, i64 38
  %259 = getelementptr inbounds i8, ptr %258, i64 0
  %260 = load i8, ptr %259, align 1
  %261 = zext i8 %260 to i32
  %262 = load ptr, ptr %25, align 8
  %263 = getelementptr inbounds i8, ptr %262, i64 38
  %264 = getelementptr inbounds i8, ptr %263, i64 1
  %265 = load i8, ptr %264, align 1
  %266 = zext i8 %265 to i32
  %267 = shl i32 %266, 8
  %268 = or i32 %261, %267
  %269 = load ptr, ptr %25, align 8
  %270 = getelementptr inbounds i8, ptr %269, i64 38
  %271 = getelementptr inbounds i8, ptr %270, i64 2
  %272 = load i8, ptr %271, align 1
  %273 = zext i8 %272 to i32
  %274 = shl i32 %273, 16
  %275 = or i32 %268, %274
  %276 = load ptr, ptr %25, align 8
  %277 = getelementptr inbounds i8, ptr %276, i64 38
  %278 = getelementptr inbounds i8, ptr %277, i64 3
  %279 = load i8, ptr %278, align 1
  %280 = zext i8 %279 to i32
  %281 = shl i32 %280, 24
  %282 = or i32 %275, %281
  %283 = load ptr, ptr %22, align 8
  %284 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %283, i32 0, i32 10
  store i32 %282, ptr %284, align 4
  %285 = load ptr, ptr %25, align 8
  %286 = getelementptr inbounds i8, ptr %285, i64 42
  %287 = getelementptr inbounds i8, ptr %286, i64 0
  %288 = load i8, ptr %287, align 1
  %289 = zext i8 %288 to i32
  %290 = load ptr, ptr %25, align 8
  %291 = getelementptr inbounds i8, ptr %290, i64 42
  %292 = getelementptr inbounds i8, ptr %291, i64 1
  %293 = load i8, ptr %292, align 1
  %294 = zext i8 %293 to i32
  %295 = shl i32 %294, 8
  %296 = or i32 %289, %295
  %297 = load ptr, ptr %25, align 8
  %298 = getelementptr inbounds i8, ptr %297, i64 42
  %299 = getelementptr inbounds i8, ptr %298, i64 2
  %300 = load i8, ptr %299, align 1
  %301 = zext i8 %300 to i32
  %302 = shl i32 %301, 16
  %303 = or i32 %296, %302
  %304 = load ptr, ptr %25, align 8
  %305 = getelementptr inbounds i8, ptr %304, i64 42
  %306 = getelementptr inbounds i8, ptr %305, i64 3
  %307 = load i8, ptr %306, align 1
  %308 = zext i8 %307 to i32
  %309 = shl i32 %308, 24
  %310 = or i32 %303, %309
  %311 = zext i32 %310 to i64
  %312 = load ptr, ptr %22, align 8
  %313 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %312, i32 0, i32 11
  store i64 %311, ptr %313, align 8
  %314 = load ptr, ptr %25, align 8
  %315 = getelementptr inbounds i8, ptr %314, i64 28
  %316 = getelementptr inbounds i8, ptr %315, i64 0
  %317 = load i8, ptr %316, align 1
  %318 = zext i8 %317 to i32
  %319 = load ptr, ptr %25, align 8
  %320 = getelementptr inbounds i8, ptr %319, i64 28
  %321 = getelementptr inbounds i8, ptr %320, i64 1
  %322 = load i8, ptr %321, align 1
  %323 = zext i8 %322 to i32
  %324 = shl i32 %323, 8
  %325 = or i32 %318, %324
  store i32 %325, ptr %24, align 4
  %326 = load i32, ptr %24, align 4
  %327 = icmp ult i32 %326, 511
  br i1 %327, label %328, label %330

328:                                              ; preds = %52
  %329 = load i32, ptr %24, align 4
  br label %331

330:                                              ; preds = %52
  br label %331

331:                                              ; preds = %330, %328
  %332 = phi i32 [ %329, %328 ], [ 511, %330 ]
  store i32 %332, ptr %24, align 4
  %333 = load ptr, ptr %22, align 8
  %334 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %333, i32 0, i32 16
  %335 = getelementptr inbounds [512 x i8], ptr %334, i64 0, i64 0
  %336 = load ptr, ptr %25, align 8
  %337 = getelementptr inbounds i8, ptr %336, i64 46
  %338 = load i32, ptr %24, align 4
  %339 = zext i32 %338 to i64
  %340 = load ptr, ptr %22, align 8
  %341 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %340, i32 0, i32 16
  %342 = getelementptr inbounds [512 x i8], ptr %341, i64 0, i64 0
  %343 = call i64 @llvm.objectsize.i64.p0(ptr %342, i1 false, i1 true, i1 false)
  %344 = call ptr @__memcpy_chk(ptr noundef %335, ptr noundef %337, i64 noundef %339, i64 noundef %343) #11
  %345 = load ptr, ptr %22, align 8
  %346 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %345, i32 0, i32 16
  %347 = load i32, ptr %24, align 4
  %348 = zext i32 %347 to i64
  %349 = getelementptr inbounds [512 x i8], ptr %346, i64 0, i64 %348
  store i8 0, ptr %349, align 1
  %350 = load ptr, ptr %25, align 8
  %351 = getelementptr inbounds i8, ptr %350, i64 32
  %352 = getelementptr inbounds i8, ptr %351, i64 0
  %353 = load i8, ptr %352, align 1
  %354 = zext i8 %353 to i32
  %355 = load ptr, ptr %25, align 8
  %356 = getelementptr inbounds i8, ptr %355, i64 32
  %357 = getelementptr inbounds i8, ptr %356, i64 1
  %358 = load i8, ptr %357, align 1
  %359 = zext i8 %358 to i32
  %360 = shl i32 %359, 8
  %361 = or i32 %354, %360
  store i32 %361, ptr %24, align 4
  %362 = load i32, ptr %24, align 4
  %363 = icmp ult i32 %362, 511
  br i1 %363, label %364, label %366

364:                                              ; preds = %331
  %365 = load i32, ptr %24, align 4
  br label %367

366:                                              ; preds = %331
  br label %367

367:                                              ; preds = %366, %364
  %368 = phi i32 [ %365, %364 ], [ 511, %366 ]
  store i32 %368, ptr %24, align 4
  %369 = load i32, ptr %24, align 4
  %370 = load ptr, ptr %22, align 8
  %371 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %370, i32 0, i32 12
  store i32 %369, ptr %371, align 8
  %372 = load ptr, ptr %22, align 8
  %373 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %372, i32 0, i32 17
  %374 = getelementptr inbounds [512 x i8], ptr %373, i64 0, i64 0
  %375 = load ptr, ptr %25, align 8
  %376 = getelementptr inbounds i8, ptr %375, i64 46
  %377 = load ptr, ptr %25, align 8
  %378 = getelementptr inbounds i8, ptr %377, i64 28
  %379 = getelementptr inbounds i8, ptr %378, i64 0
  %380 = load i8, ptr %379, align 1
  %381 = zext i8 %380 to i32
  %382 = load ptr, ptr %25, align 8
  %383 = getelementptr inbounds i8, ptr %382, i64 28
  %384 = getelementptr inbounds i8, ptr %383, i64 1
  %385 = load i8, ptr %384, align 1
  %386 = zext i8 %385 to i32
  %387 = shl i32 %386, 8
  %388 = or i32 %381, %387
  %389 = zext i32 %388 to i64
  %390 = getelementptr inbounds i8, ptr %376, i64 %389
  %391 = load ptr, ptr %25, align 8
  %392 = getelementptr inbounds i8, ptr %391, i64 30
  %393 = getelementptr inbounds i8, ptr %392, i64 0
  %394 = load i8, ptr %393, align 1
  %395 = zext i8 %394 to i32
  %396 = load ptr, ptr %25, align 8
  %397 = getelementptr inbounds i8, ptr %396, i64 30
  %398 = getelementptr inbounds i8, ptr %397, i64 1
  %399 = load i8, ptr %398, align 1
  %400 = zext i8 %399 to i32
  %401 = shl i32 %400, 8
  %402 = or i32 %395, %401
  %403 = zext i32 %402 to i64
  %404 = getelementptr inbounds i8, ptr %390, i64 %403
  %405 = load i32, ptr %24, align 4
  %406 = zext i32 %405 to i64
  %407 = load ptr, ptr %22, align 8
  %408 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %407, i32 0, i32 17
  %409 = getelementptr inbounds [512 x i8], ptr %408, i64 0, i64 0
  %410 = call i64 @llvm.objectsize.i64.p0(ptr %409, i1 false, i1 true, i1 false)
  %411 = call ptr @__memcpy_chk(ptr noundef %374, ptr noundef %404, i64 noundef %406, i64 noundef %410) #11
  %412 = load ptr, ptr %22, align 8
  %413 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %412, i32 0, i32 17
  %414 = load i32, ptr %24, align 4
  %415 = zext i32 %414 to i64
  %416 = getelementptr inbounds [512 x i8], ptr %413, i64 0, i64 %415
  store i8 0, ptr %416, align 1
  %417 = load ptr, ptr %19, align 8
  %418 = load i32, ptr %20, align 4
  %419 = call i32 @mz_zip_reader_is_file_a_directory(ptr noundef %417, i32 noundef %418)
  %420 = load ptr, ptr %22, align 8
  %421 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %420, i32 0, i32 13
  store i32 %419, ptr %421, align 4
  %422 = load ptr, ptr %19, align 8
  %423 = load i32, ptr %20, align 4
  %424 = call i32 @mz_zip_reader_is_file_encrypted(ptr noundef %422, i32 noundef %423)
  %425 = load ptr, ptr %22, align 8
  %426 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %425, i32 0, i32 14
  store i32 %424, ptr %426, align 8
  %427 = load ptr, ptr %19, align 8
  %428 = load i32, ptr %20, align 4
  %429 = call i32 @mz_zip_reader_is_file_supported(ptr noundef %427, i32 noundef %428)
  %430 = load ptr, ptr %22, align 8
  %431 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %430, i32 0, i32 15
  store i32 %429, ptr %431, align 4
  %432 = load ptr, ptr %22, align 8
  %433 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %432, i32 0, i32 7
  %434 = load i64, ptr %433, align 8
  %435 = load ptr, ptr %22, align 8
  %436 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %435, i32 0, i32 8
  %437 = load i64, ptr %436, align 8
  %438 = icmp ugt i64 %434, %437
  br i1 %438, label %439, label %443

439:                                              ; preds = %367
  %440 = load ptr, ptr %22, align 8
  %441 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %440, i32 0, i32 7
  %442 = load i64, ptr %441, align 8
  br label %447

443:                                              ; preds = %367
  %444 = load ptr, ptr %22, align 8
  %445 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %444, i32 0, i32 8
  %446 = load i64, ptr %445, align 8
  br label %447

447:                                              ; preds = %443, %439
  %448 = phi i64 [ %442, %439 ], [ %446, %443 ]
  %449 = load ptr, ptr %22, align 8
  %450 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %449, i32 0, i32 11
  %451 = load i64, ptr %450, align 8
  %452 = icmp ugt i64 %448, %451
  br i1 %452, label %453, label %471

453:                                              ; preds = %447
  %454 = load ptr, ptr %22, align 8
  %455 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %454, i32 0, i32 7
  %456 = load i64, ptr %455, align 8
  %457 = load ptr, ptr %22, align 8
  %458 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %457, i32 0, i32 8
  %459 = load i64, ptr %458, align 8
  %460 = icmp ugt i64 %456, %459
  br i1 %460, label %461, label %465

461:                                              ; preds = %453
  %462 = load ptr, ptr %22, align 8
  %463 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %462, i32 0, i32 7
  %464 = load i64, ptr %463, align 8
  br label %469

465:                                              ; preds = %453
  %466 = load ptr, ptr %22, align 8
  %467 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %466, i32 0, i32 8
  %468 = load i64, ptr %467, align 8
  br label %469

469:                                              ; preds = %465, %461
  %470 = phi i64 [ %464, %461 ], [ %468, %465 ]
  br label %475

471:                                              ; preds = %447
  %472 = load ptr, ptr %22, align 8
  %473 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %472, i32 0, i32 11
  %474 = load i64, ptr %473, align 8
  br label %475

475:                                              ; preds = %471, %469
  %476 = phi i64 [ %470, %469 ], [ %474, %471 ]
  %477 = icmp eq i64 %476, 4294967295
  br i1 %477, label %478, label %828

478:                                              ; preds = %475
  %479 = load ptr, ptr %25, align 8
  %480 = getelementptr inbounds i8, ptr %479, i64 30
  %481 = getelementptr inbounds i8, ptr %480, i64 0
  %482 = load i8, ptr %481, align 1
  %483 = zext i8 %482 to i32
  %484 = load ptr, ptr %25, align 8
  %485 = getelementptr inbounds i8, ptr %484, i64 30
  %486 = getelementptr inbounds i8, ptr %485, i64 1
  %487 = load i8, ptr %486, align 1
  %488 = zext i8 %487 to i32
  %489 = shl i32 %488, 8
  %490 = or i32 %483, %489
  store i32 %490, ptr %26, align 4
  %491 = load i32, ptr %26, align 4
  %492 = icmp ne i32 %491, 0
  br i1 %492, label %493, label %827

493:                                              ; preds = %478
  %494 = load ptr, ptr %25, align 8
  %495 = getelementptr inbounds i8, ptr %494, i64 46
  %496 = load ptr, ptr %25, align 8
  %497 = getelementptr inbounds i8, ptr %496, i64 28
  %498 = getelementptr inbounds i8, ptr %497, i64 0
  %499 = load i8, ptr %498, align 1
  %500 = zext i8 %499 to i32
  %501 = load ptr, ptr %25, align 8
  %502 = getelementptr inbounds i8, ptr %501, i64 28
  %503 = getelementptr inbounds i8, ptr %502, i64 1
  %504 = load i8, ptr %503, align 1
  %505 = zext i8 %504 to i32
  %506 = shl i32 %505, 8
  %507 = or i32 %500, %506
  %508 = zext i32 %507 to i64
  %509 = getelementptr inbounds i8, ptr %495, i64 %508
  store ptr %509, ptr %27, align 8
  br label %510

510:                                              ; preds = %823, %493
  %511 = load i32, ptr %26, align 4
  %512 = zext i32 %511 to i64
  %513 = icmp ult i64 %512, 4
  br i1 %513, label %514, label %523

514:                                              ; preds = %510
  %515 = load ptr, ptr %19, align 8
  store ptr %515, ptr %8, align 8
  store i32 9, ptr %9, align 4
  %516 = load ptr, ptr %8, align 8
  %517 = icmp ne ptr %516, null
  br i1 %517, label %518, label %522

518:                                              ; preds = %514
  %519 = load i32, ptr %9, align 4
  %520 = load ptr, ptr %8, align 8
  %521 = getelementptr inbounds %struct.mz_zip_archive, ptr %520, i32 0, i32 5
  store i32 %519, ptr %521, align 4
  br label %522

522:                                              ; preds = %514, %518
  store i32 0, ptr %18, align 4
  br label %829

523:                                              ; preds = %510
  %524 = load ptr, ptr %27, align 8
  %525 = getelementptr inbounds i8, ptr %524, i64 0
  %526 = load i8, ptr %525, align 1
  %527 = zext i8 %526 to i32
  %528 = load ptr, ptr %27, align 8
  %529 = getelementptr inbounds i8, ptr %528, i64 1
  %530 = load i8, ptr %529, align 1
  %531 = zext i8 %530 to i32
  %532 = shl i32 %531, 8
  %533 = or i32 %527, %532
  store i32 %533, ptr %28, align 4
  %534 = load ptr, ptr %27, align 8
  %535 = getelementptr inbounds i8, ptr %534, i64 2
  %536 = getelementptr inbounds i8, ptr %535, i64 0
  %537 = load i8, ptr %536, align 1
  %538 = zext i8 %537 to i32
  %539 = load ptr, ptr %27, align 8
  %540 = getelementptr inbounds i8, ptr %539, i64 2
  %541 = getelementptr inbounds i8, ptr %540, i64 1
  %542 = load i8, ptr %541, align 1
  %543 = zext i8 %542 to i32
  %544 = shl i32 %543, 8
  %545 = or i32 %538, %544
  store i32 %545, ptr %29, align 4
  %546 = load i32, ptr %29, align 4
  %547 = zext i32 %546 to i64
  %548 = add i64 %547, 4
  %549 = load i32, ptr %26, align 4
  %550 = zext i32 %549 to i64
  %551 = icmp ugt i64 %548, %550
  br i1 %551, label %552, label %561

552:                                              ; preds = %523
  %553 = load ptr, ptr %19, align 8
  store ptr %553, ptr %10, align 8
  store i32 9, ptr %11, align 4
  %554 = load ptr, ptr %10, align 8
  %555 = icmp ne ptr %554, null
  br i1 %555, label %556, label %560

556:                                              ; preds = %552
  %557 = load i32, ptr %11, align 4
  %558 = load ptr, ptr %10, align 8
  %559 = getelementptr inbounds %struct.mz_zip_archive, ptr %558, i32 0, i32 5
  store i32 %557, ptr %559, align 4
  br label %560

560:                                              ; preds = %552, %556
  store i32 0, ptr %18, align 4
  br label %829

561:                                              ; preds = %523
  %562 = load i32, ptr %28, align 4
  %563 = icmp eq i32 %562, 1
  br i1 %563, label %564, label %810

564:                                              ; preds = %561
  %565 = load ptr, ptr %27, align 8
  %566 = getelementptr inbounds i8, ptr %565, i64 4
  store ptr %566, ptr %30, align 8
  %567 = load i32, ptr %29, align 4
  store i32 %567, ptr %31, align 4
  %568 = load ptr, ptr %23, align 8
  %569 = icmp ne ptr %568, null
  br i1 %569, label %570, label %572

570:                                              ; preds = %564
  %571 = load ptr, ptr %23, align 8
  store i32 1, ptr %571, align 4
  br label %572

572:                                              ; preds = %570, %564
  %573 = load ptr, ptr %22, align 8
  %574 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %573, i32 0, i32 8
  %575 = load i64, ptr %574, align 8
  %576 = icmp eq i64 %575, 4294967295
  br i1 %576, label %577, label %651

577:                                              ; preds = %572
  %578 = load i32, ptr %31, align 4
  %579 = zext i32 %578 to i64
  %580 = icmp ult i64 %579, 8
  br i1 %580, label %581, label %590

581:                                              ; preds = %577
  %582 = load ptr, ptr %19, align 8
  store ptr %582, ptr %12, align 8
  store i32 9, ptr %13, align 4
  %583 = load ptr, ptr %12, align 8
  %584 = icmp ne ptr %583, null
  br i1 %584, label %585, label %589

585:                                              ; preds = %581
  %586 = load i32, ptr %13, align 4
  %587 = load ptr, ptr %12, align 8
  %588 = getelementptr inbounds %struct.mz_zip_archive, ptr %587, i32 0, i32 5
  store i32 %586, ptr %588, align 4
  br label %589

589:                                              ; preds = %581, %585
  store i32 0, ptr %18, align 4
  br label %829

590:                                              ; preds = %577
  %591 = load ptr, ptr %30, align 8
  %592 = getelementptr inbounds i8, ptr %591, i64 0
  %593 = load i8, ptr %592, align 1
  %594 = zext i8 %593 to i32
  %595 = load ptr, ptr %30, align 8
  %596 = getelementptr inbounds i8, ptr %595, i64 1
  %597 = load i8, ptr %596, align 1
  %598 = zext i8 %597 to i32
  %599 = shl i32 %598, 8
  %600 = or i32 %594, %599
  %601 = load ptr, ptr %30, align 8
  %602 = getelementptr inbounds i8, ptr %601, i64 2
  %603 = load i8, ptr %602, align 1
  %604 = zext i8 %603 to i32
  %605 = shl i32 %604, 16
  %606 = or i32 %600, %605
  %607 = load ptr, ptr %30, align 8
  %608 = getelementptr inbounds i8, ptr %607, i64 3
  %609 = load i8, ptr %608, align 1
  %610 = zext i8 %609 to i32
  %611 = shl i32 %610, 24
  %612 = or i32 %606, %611
  %613 = zext i32 %612 to i64
  %614 = load ptr, ptr %30, align 8
  %615 = getelementptr inbounds i8, ptr %614, i64 4
  %616 = getelementptr inbounds i8, ptr %615, i64 0
  %617 = load i8, ptr %616, align 1
  %618 = zext i8 %617 to i32
  %619 = load ptr, ptr %30, align 8
  %620 = getelementptr inbounds i8, ptr %619, i64 4
  %621 = getelementptr inbounds i8, ptr %620, i64 1
  %622 = load i8, ptr %621, align 1
  %623 = zext i8 %622 to i32
  %624 = shl i32 %623, 8
  %625 = or i32 %618, %624
  %626 = load ptr, ptr %30, align 8
  %627 = getelementptr inbounds i8, ptr %626, i64 4
  %628 = getelementptr inbounds i8, ptr %627, i64 2
  %629 = load i8, ptr %628, align 1
  %630 = zext i8 %629 to i32
  %631 = shl i32 %630, 16
  %632 = or i32 %625, %631
  %633 = load ptr, ptr %30, align 8
  %634 = getelementptr inbounds i8, ptr %633, i64 4
  %635 = getelementptr inbounds i8, ptr %634, i64 3
  %636 = load i8, ptr %635, align 1
  %637 = zext i8 %636 to i32
  %638 = shl i32 %637, 24
  %639 = or i32 %632, %638
  %640 = zext i32 %639 to i64
  %641 = shl i64 %640, 32
  %642 = or i64 %613, %641
  %643 = load ptr, ptr %22, align 8
  %644 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %643, i32 0, i32 8
  store i64 %642, ptr %644, align 8
  %645 = load ptr, ptr %30, align 8
  %646 = getelementptr inbounds i8, ptr %645, i64 8
  store ptr %646, ptr %30, align 8
  %647 = load i32, ptr %31, align 4
  %648 = zext i32 %647 to i64
  %649 = sub i64 %648, 8
  %650 = trunc i64 %649 to i32
  store i32 %650, ptr %31, align 4
  br label %651

651:                                              ; preds = %590, %572
  %652 = load ptr, ptr %22, align 8
  %653 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %652, i32 0, i32 7
  %654 = load i64, ptr %653, align 8
  %655 = icmp eq i64 %654, 4294967295
  br i1 %655, label %656, label %730

656:                                              ; preds = %651
  %657 = load i32, ptr %31, align 4
  %658 = zext i32 %657 to i64
  %659 = icmp ult i64 %658, 8
  br i1 %659, label %660, label %669

660:                                              ; preds = %656
  %661 = load ptr, ptr %19, align 8
  store ptr %661, ptr %14, align 8
  store i32 9, ptr %15, align 4
  %662 = load ptr, ptr %14, align 8
  %663 = icmp ne ptr %662, null
  br i1 %663, label %664, label %668

664:                                              ; preds = %660
  %665 = load i32, ptr %15, align 4
  %666 = load ptr, ptr %14, align 8
  %667 = getelementptr inbounds %struct.mz_zip_archive, ptr %666, i32 0, i32 5
  store i32 %665, ptr %667, align 4
  br label %668

668:                                              ; preds = %660, %664
  store i32 0, ptr %18, align 4
  br label %829

669:                                              ; preds = %656
  %670 = load ptr, ptr %30, align 8
  %671 = getelementptr inbounds i8, ptr %670, i64 0
  %672 = load i8, ptr %671, align 1
  %673 = zext i8 %672 to i32
  %674 = load ptr, ptr %30, align 8
  %675 = getelementptr inbounds i8, ptr %674, i64 1
  %676 = load i8, ptr %675, align 1
  %677 = zext i8 %676 to i32
  %678 = shl i32 %677, 8
  %679 = or i32 %673, %678
  %680 = load ptr, ptr %30, align 8
  %681 = getelementptr inbounds i8, ptr %680, i64 2
  %682 = load i8, ptr %681, align 1
  %683 = zext i8 %682 to i32
  %684 = shl i32 %683, 16
  %685 = or i32 %679, %684
  %686 = load ptr, ptr %30, align 8
  %687 = getelementptr inbounds i8, ptr %686, i64 3
  %688 = load i8, ptr %687, align 1
  %689 = zext i8 %688 to i32
  %690 = shl i32 %689, 24
  %691 = or i32 %685, %690
  %692 = zext i32 %691 to i64
  %693 = load ptr, ptr %30, align 8
  %694 = getelementptr inbounds i8, ptr %693, i64 4
  %695 = getelementptr inbounds i8, ptr %694, i64 0
  %696 = load i8, ptr %695, align 1
  %697 = zext i8 %696 to i32
  %698 = load ptr, ptr %30, align 8
  %699 = getelementptr inbounds i8, ptr %698, i64 4
  %700 = getelementptr inbounds i8, ptr %699, i64 1
  %701 = load i8, ptr %700, align 1
  %702 = zext i8 %701 to i32
  %703 = shl i32 %702, 8
  %704 = or i32 %697, %703
  %705 = load ptr, ptr %30, align 8
  %706 = getelementptr inbounds i8, ptr %705, i64 4
  %707 = getelementptr inbounds i8, ptr %706, i64 2
  %708 = load i8, ptr %707, align 1
  %709 = zext i8 %708 to i32
  %710 = shl i32 %709, 16
  %711 = or i32 %704, %710
  %712 = load ptr, ptr %30, align 8
  %713 = getelementptr inbounds i8, ptr %712, i64 4
  %714 = getelementptr inbounds i8, ptr %713, i64 3
  %715 = load i8, ptr %714, align 1
  %716 = zext i8 %715 to i32
  %717 = shl i32 %716, 24
  %718 = or i32 %711, %717
  %719 = zext i32 %718 to i64
  %720 = shl i64 %719, 32
  %721 = or i64 %692, %720
  %722 = load ptr, ptr %22, align 8
  %723 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %722, i32 0, i32 7
  store i64 %721, ptr %723, align 8
  %724 = load ptr, ptr %30, align 8
  %725 = getelementptr inbounds i8, ptr %724, i64 8
  store ptr %725, ptr %30, align 8
  %726 = load i32, ptr %31, align 4
  %727 = zext i32 %726 to i64
  %728 = sub i64 %727, 8
  %729 = trunc i64 %728 to i32
  store i32 %729, ptr %31, align 4
  br label %730

730:                                              ; preds = %669, %651
  %731 = load ptr, ptr %22, align 8
  %732 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %731, i32 0, i32 11
  %733 = load i64, ptr %732, align 8
  %734 = icmp eq i64 %733, 4294967295
  br i1 %734, label %735, label %809

735:                                              ; preds = %730
  %736 = load i32, ptr %31, align 4
  %737 = zext i32 %736 to i64
  %738 = icmp ult i64 %737, 8
  br i1 %738, label %739, label %748

739:                                              ; preds = %735
  %740 = load ptr, ptr %19, align 8
  store ptr %740, ptr %16, align 8
  store i32 9, ptr %17, align 4
  %741 = load ptr, ptr %16, align 8
  %742 = icmp ne ptr %741, null
  br i1 %742, label %743, label %747

743:                                              ; preds = %739
  %744 = load i32, ptr %17, align 4
  %745 = load ptr, ptr %16, align 8
  %746 = getelementptr inbounds %struct.mz_zip_archive, ptr %745, i32 0, i32 5
  store i32 %744, ptr %746, align 4
  br label %747

747:                                              ; preds = %739, %743
  store i32 0, ptr %18, align 4
  br label %829

748:                                              ; preds = %735
  %749 = load ptr, ptr %30, align 8
  %750 = getelementptr inbounds i8, ptr %749, i64 0
  %751 = load i8, ptr %750, align 1
  %752 = zext i8 %751 to i32
  %753 = load ptr, ptr %30, align 8
  %754 = getelementptr inbounds i8, ptr %753, i64 1
  %755 = load i8, ptr %754, align 1
  %756 = zext i8 %755 to i32
  %757 = shl i32 %756, 8
  %758 = or i32 %752, %757
  %759 = load ptr, ptr %30, align 8
  %760 = getelementptr inbounds i8, ptr %759, i64 2
  %761 = load i8, ptr %760, align 1
  %762 = zext i8 %761 to i32
  %763 = shl i32 %762, 16
  %764 = or i32 %758, %763
  %765 = load ptr, ptr %30, align 8
  %766 = getelementptr inbounds i8, ptr %765, i64 3
  %767 = load i8, ptr %766, align 1
  %768 = zext i8 %767 to i32
  %769 = shl i32 %768, 24
  %770 = or i32 %764, %769
  %771 = zext i32 %770 to i64
  %772 = load ptr, ptr %30, align 8
  %773 = getelementptr inbounds i8, ptr %772, i64 4
  %774 = getelementptr inbounds i8, ptr %773, i64 0
  %775 = load i8, ptr %774, align 1
  %776 = zext i8 %775 to i32
  %777 = load ptr, ptr %30, align 8
  %778 = getelementptr inbounds i8, ptr %777, i64 4
  %779 = getelementptr inbounds i8, ptr %778, i64 1
  %780 = load i8, ptr %779, align 1
  %781 = zext i8 %780 to i32
  %782 = shl i32 %781, 8
  %783 = or i32 %776, %782
  %784 = load ptr, ptr %30, align 8
  %785 = getelementptr inbounds i8, ptr %784, i64 4
  %786 = getelementptr inbounds i8, ptr %785, i64 2
  %787 = load i8, ptr %786, align 1
  %788 = zext i8 %787 to i32
  %789 = shl i32 %788, 16
  %790 = or i32 %783, %789
  %791 = load ptr, ptr %30, align 8
  %792 = getelementptr inbounds i8, ptr %791, i64 4
  %793 = getelementptr inbounds i8, ptr %792, i64 3
  %794 = load i8, ptr %793, align 1
  %795 = zext i8 %794 to i32
  %796 = shl i32 %795, 24
  %797 = or i32 %790, %796
  %798 = zext i32 %797 to i64
  %799 = shl i64 %798, 32
  %800 = or i64 %771, %799
  %801 = load ptr, ptr %22, align 8
  %802 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %801, i32 0, i32 11
  store i64 %800, ptr %802, align 8
  %803 = load ptr, ptr %30, align 8
  %804 = getelementptr inbounds i8, ptr %803, i64 8
  store ptr %804, ptr %30, align 8
  %805 = load i32, ptr %31, align 4
  %806 = zext i32 %805 to i64
  %807 = sub i64 %806, 8
  %808 = trunc i64 %807 to i32
  store i32 %808, ptr %31, align 4
  br label %809

809:                                              ; preds = %748, %730
  br label %826

810:                                              ; preds = %561
  %811 = load i32, ptr %29, align 4
  %812 = zext i32 %811 to i64
  %813 = add i64 4, %812
  %814 = load ptr, ptr %27, align 8
  %815 = getelementptr inbounds i8, ptr %814, i64 %813
  store ptr %815, ptr %27, align 8
  %816 = load i32, ptr %26, align 4
  %817 = zext i32 %816 to i64
  %818 = sub i64 %817, 4
  %819 = load i32, ptr %29, align 4
  %820 = zext i32 %819 to i64
  %821 = sub i64 %818, %820
  %822 = trunc i64 %821 to i32
  store i32 %822, ptr %26, align 4
  br label %823

823:                                              ; preds = %810
  %824 = load i32, ptr %26, align 4
  %825 = icmp ne i32 %824, 0
  br i1 %825, label %510, label %826, !llvm.loop !122

826:                                              ; preds = %823, %809
  br label %827

827:                                              ; preds = %826, %478
  br label %828

828:                                              ; preds = %827, %475
  store i32 1, ptr %18, align 4
  br label %829

829:                                              ; preds = %828, %747, %668, %589, %560, %522, %51
  %830 = load i32, ptr %18, align 4
  ret i32 %830
}

declare i32 @memcmp(ptr noundef, ptr noundef, i64 noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @mz_zip_compute_crc32_callback(ptr noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  store i64 %1, ptr %6, align 8
  store ptr %2, ptr %7, align 8
  store i64 %3, ptr %8, align 8
  %10 = load ptr, ptr %5, align 8
  store ptr %10, ptr %9, align 8
  %11 = load i64, ptr %6, align 8
  %12 = load ptr, ptr %9, align 8
  %13 = load i32, ptr %12, align 4
  %14 = zext i32 %13 to i64
  %15 = load ptr, ptr %7, align 8
  %16 = load i64, ptr %8, align 8
  %17 = call i64 @mz_crc32(i64 noundef %14, ptr noundef %15, i64 noundef %16)
  %18 = trunc i64 %17 to i32
  %19 = load ptr, ptr %9, align 8
  store i32 %18, ptr %19, align 4
  %20 = load i64, ptr %8, align 8
  ret i64 %20
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_validate_archive(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct.mz_zip_archive_file_stat, align 8
  store ptr %0, ptr %14, align 8
  store i32 %1, ptr %15, align 4
  %20 = load ptr, ptr %14, align 8
  %21 = icmp ne ptr %20, null
  br i1 %21, label %22, label %42

22:                                               ; preds = %2
  %23 = load ptr, ptr %14, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %23, i32 0, i32 15
  %25 = load ptr, ptr %24, align 8
  %26 = icmp ne ptr %25, null
  br i1 %26, label %27, label %42

27:                                               ; preds = %22
  %28 = load ptr, ptr %14, align 8
  %29 = getelementptr inbounds %struct.mz_zip_archive, ptr %28, i32 0, i32 7
  %30 = load ptr, ptr %29, align 8
  %31 = icmp ne ptr %30, null
  br i1 %31, label %32, label %42

32:                                               ; preds = %27
  %33 = load ptr, ptr %14, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %33, i32 0, i32 8
  %35 = load ptr, ptr %34, align 8
  %36 = icmp ne ptr %35, null
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  %38 = load ptr, ptr %14, align 8
  %39 = getelementptr inbounds %struct.mz_zip_archive, ptr %38, i32 0, i32 11
  %40 = load ptr, ptr %39, align 8
  %41 = icmp ne ptr %40, null
  br i1 %41, label %51, label %42

42:                                               ; preds = %37, %32, %27, %22, %2
  %43 = load ptr, ptr %14, align 8
  store ptr %43, ptr %3, align 8
  store i32 24, ptr %4, align 4
  %44 = load ptr, ptr %3, align 8
  %45 = icmp ne ptr %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = load i32, ptr %4, align 4
  %48 = load ptr, ptr %3, align 8
  %49 = getelementptr inbounds %struct.mz_zip_archive, ptr %48, i32 0, i32 5
  store i32 %47, ptr %49, align 4
  br label %50

50:                                               ; preds = %42, %46
  store i32 0, ptr %13, align 4
  br label %154

51:                                               ; preds = %37
  %52 = load ptr, ptr %14, align 8
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %52, i32 0, i32 15
  %54 = load ptr, ptr %53, align 8
  store ptr %54, ptr %16, align 8
  %55 = load ptr, ptr %16, align 8
  %56 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %55, i32 0, i32 4
  %57 = load i32, ptr %56, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %88, label %59

59:                                               ; preds = %51
  %60 = load ptr, ptr %14, align 8
  %61 = getelementptr inbounds %struct.mz_zip_archive, ptr %60, i32 0, i32 2
  %62 = load i32, ptr %61, align 8
  %63 = icmp ugt i32 %62, 65535
  br i1 %63, label %64, label %73

64:                                               ; preds = %59
  %65 = load ptr, ptr %14, align 8
  store ptr %65, ptr %5, align 8
  store i32 29, ptr %6, align 4
  %66 = load ptr, ptr %5, align 8
  %67 = icmp ne ptr %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = load i32, ptr %6, align 4
  %70 = load ptr, ptr %5, align 8
  %71 = getelementptr inbounds %struct.mz_zip_archive, ptr %70, i32 0, i32 5
  store i32 %69, ptr %71, align 4
  br label %72

72:                                               ; preds = %64, %68
  store i32 0, ptr %13, align 4
  br label %154

73:                                               ; preds = %59
  %74 = load ptr, ptr %14, align 8
  %75 = getelementptr inbounds %struct.mz_zip_archive, ptr %74, i32 0, i32 0
  %76 = load i64, ptr %75, align 8
  %77 = icmp ugt i64 %76, 4294967295
  br i1 %77, label %78, label %87

78:                                               ; preds = %73
  %79 = load ptr, ptr %14, align 8
  store ptr %79, ptr %7, align 8
  store i32 29, ptr %8, align 4
  %80 = load ptr, ptr %7, align 8
  %81 = icmp ne ptr %80, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  %83 = load i32, ptr %8, align 4
  %84 = load ptr, ptr %7, align 8
  %85 = getelementptr inbounds %struct.mz_zip_archive, ptr %84, i32 0, i32 5
  store i32 %83, ptr %85, align 4
  br label %86

86:                                               ; preds = %78, %82
  store i32 0, ptr %13, align 4
  br label %154

87:                                               ; preds = %73
  br label %104

88:                                               ; preds = %51
  %89 = load ptr, ptr %16, align 8
  %90 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %89, i32 0, i32 0
  %91 = getelementptr inbounds %struct.mz_zip_array, ptr %90, i32 0, i32 1
  %92 = load i64, ptr %91, align 8
  %93 = icmp uge i64 %92, 4294967295
  br i1 %93, label %94, label %103

94:                                               ; preds = %88
  %95 = load ptr, ptr %14, align 8
  store ptr %95, ptr %9, align 8
  store i32 29, ptr %10, align 4
  %96 = load ptr, ptr %9, align 8
  %97 = icmp ne ptr %96, null
  br i1 %97, label %98, label %102

98:                                               ; preds = %94
  %99 = load i32, ptr %10, align 4
  %100 = load ptr, ptr %9, align 8
  %101 = getelementptr inbounds %struct.mz_zip_archive, ptr %100, i32 0, i32 5
  store i32 %99, ptr %101, align 4
  br label %102

102:                                              ; preds = %94, %98
  store i32 0, ptr %13, align 4
  br label %154

103:                                              ; preds = %88
  br label %104

104:                                              ; preds = %103, %87
  store i32 0, ptr %17, align 4
  br label %105

105:                                              ; preds = %150, %104
  %106 = load i32, ptr %17, align 4
  %107 = load ptr, ptr %14, align 8
  %108 = getelementptr inbounds %struct.mz_zip_archive, ptr %107, i32 0, i32 2
  %109 = load i32, ptr %108, align 8
  %110 = icmp ult i32 %106, %109
  br i1 %110, label %111, label %153

111:                                              ; preds = %105
  %112 = load i32, ptr %15, align 4
  %113 = and i32 4096, %112
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %115, label %142

115:                                              ; preds = %111
  %116 = load ptr, ptr %14, align 8
  %117 = load i32, ptr %17, align 4
  %118 = call i32 @mz_zip_reader_file_stat(ptr noundef %116, i32 noundef %117, ptr noundef %19)
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %121, label %120

120:                                              ; preds = %115
  store i32 0, ptr %13, align 4
  br label %154

121:                                              ; preds = %115
  %122 = load ptr, ptr %14, align 8
  %123 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %19, i32 0, i32 16
  %124 = getelementptr inbounds [512 x i8], ptr %123, i64 0, i64 0
  %125 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %122, ptr noundef %124, ptr noundef null, i32 noundef 0, ptr noundef %18)
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %128, label %127

127:                                              ; preds = %121
  store i32 0, ptr %13, align 4
  br label %154

128:                                              ; preds = %121
  %129 = load i32, ptr %18, align 4
  %130 = load i32, ptr %17, align 4
  %131 = icmp ne i32 %129, %130
  br i1 %131, label %132, label %141

132:                                              ; preds = %128
  %133 = load ptr, ptr %14, align 8
  store ptr %133, ptr %11, align 8
  store i32 30, ptr %12, align 4
  %134 = load ptr, ptr %11, align 8
  %135 = icmp ne ptr %134, null
  br i1 %135, label %136, label %140

136:                                              ; preds = %132
  %137 = load i32, ptr %12, align 4
  %138 = load ptr, ptr %11, align 8
  %139 = getelementptr inbounds %struct.mz_zip_archive, ptr %138, i32 0, i32 5
  store i32 %137, ptr %139, align 4
  br label %140

140:                                              ; preds = %132, %136
  store i32 0, ptr %13, align 4
  br label %154

141:                                              ; preds = %128
  br label %142

142:                                              ; preds = %141, %111
  %143 = load ptr, ptr %14, align 8
  %144 = load i32, ptr %17, align 4
  %145 = load i32, ptr %15, align 4
  %146 = call i32 @mz_zip_validate_file(ptr noundef %143, i32 noundef %144, i32 noundef %145)
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %149, label %148

148:                                              ; preds = %142
  store i32 0, ptr %13, align 4
  br label %154

149:                                              ; preds = %142
  br label %150

150:                                              ; preds = %149
  %151 = load i32, ptr %17, align 4
  %152 = add i32 %151, 1
  store i32 %152, ptr %17, align 4
  br label %105, !llvm.loop !123

153:                                              ; preds = %105
  store i32 1, ptr %13, align 4
  br label %154

154:                                              ; preds = %153, %148, %140, %127, %120, %102, %86, %72, %50
  %155 = load i32, ptr %13, align 4
  ret i32 %155
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_validate_mem_archive(ptr noundef %0, i64 noundef %1, i32 noundef %2, ptr noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.mz_zip_archive, align 8
  %12 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store i64 %1, ptr %7, align 8
  store i32 %2, ptr %8, align 4
  store ptr %3, ptr %9, align 8
  store i32 1, ptr %10, align 4
  store i32 0, ptr %12, align 4
  %13 = load ptr, ptr %6, align 8
  %14 = icmp ne ptr %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = load i64, ptr %7, align 8
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %15, %4
  %19 = load ptr, ptr %9, align 8
  %20 = icmp ne ptr %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = load ptr, ptr %9, align 8
  store i32 24, ptr %22, align 4
  br label %23

23:                                               ; preds = %21, %18
  store i32 0, ptr %5, align 4
  br label %64

24:                                               ; preds = %15
  call void @mz_zip_zero_struct(ptr noundef %11)
  %25 = load ptr, ptr %6, align 8
  %26 = load i64, ptr %7, align 8
  %27 = load i32, ptr %8, align 4
  %28 = call i32 @mz_zip_reader_init_mem(ptr noundef %11, ptr noundef %25, i64 noundef %26, i32 noundef %27)
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %24
  %31 = load ptr, ptr %9, align 8
  %32 = icmp ne ptr %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %11, i32 0, i32 5
  %35 = load i32, ptr %34, align 4
  %36 = load ptr, ptr %9, align 8
  store i32 %35, ptr %36, align 4
  br label %37

37:                                               ; preds = %33, %30
  store i32 0, ptr %5, align 4
  br label %64

38:                                               ; preds = %24
  %39 = load i32, ptr %8, align 4
  %40 = call i32 @mz_zip_validate_archive(ptr noundef %11, i32 noundef %39)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.mz_zip_archive, ptr %11, i32 0, i32 5
  %44 = load i32, ptr %43, align 4
  store i32 %44, ptr %12, align 4
  store i32 0, ptr %10, align 4
  br label %45

45:                                               ; preds = %42, %38
  %46 = load i32, ptr %10, align 4
  %47 = call i32 @mz_zip_reader_end_internal(ptr noundef %11, i32 noundef %46)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %45
  %50 = load i32, ptr %12, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %11, i32 0, i32 5
  %54 = load i32, ptr %53, align 4
  store i32 %54, ptr %12, align 4
  br label %55

55:                                               ; preds = %52, %49
  store i32 0, ptr %10, align 4
  br label %56

56:                                               ; preds = %55, %45
  %57 = load ptr, ptr %9, align 8
  %58 = icmp ne ptr %57, null
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  %60 = load i32, ptr %12, align 4
  %61 = load ptr, ptr %9, align 8
  store i32 %60, ptr %61, align 4
  br label %62

62:                                               ; preds = %59, %56
  %63 = load i32, ptr %10, align 4
  store i32 %63, ptr %5, align 4
  br label %64

64:                                               ; preds = %62, %37, %23
  %65 = load i32, ptr %5, align 4
  ret i32 %65
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_validate_file_archive(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.mz_zip_archive, align 8
  %10 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  store i32 %1, ptr %6, align 4
  store ptr %2, ptr %7, align 8
  store i32 1, ptr %8, align 4
  store i32 0, ptr %10, align 4
  %11 = load ptr, ptr %5, align 8
  %12 = icmp ne ptr %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %3
  %14 = load ptr, ptr %7, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = load ptr, ptr %7, align 8
  store i32 24, ptr %17, align 4
  br label %18

18:                                               ; preds = %16, %13
  store i32 0, ptr %4, align 4
  br label %58

19:                                               ; preds = %3
  call void @mz_zip_zero_struct(ptr noundef %9)
  %20 = load ptr, ptr %5, align 8
  %21 = load i32, ptr %6, align 4
  %22 = call i32 @mz_zip_reader_init_file_v2(ptr noundef %9, ptr noundef %20, i32 noundef %21, i64 noundef 0, i64 noundef 0)
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %19
  %25 = load ptr, ptr %7, align 8
  %26 = icmp ne ptr %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i32 0, i32 5
  %29 = load i32, ptr %28, align 4
  %30 = load ptr, ptr %7, align 8
  store i32 %29, ptr %30, align 4
  br label %31

31:                                               ; preds = %27, %24
  store i32 0, ptr %4, align 4
  br label %58

32:                                               ; preds = %19
  %33 = load i32, ptr %6, align 4
  %34 = call i32 @mz_zip_validate_archive(ptr noundef %9, i32 noundef %33)
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i32 0, i32 5
  %38 = load i32, ptr %37, align 4
  store i32 %38, ptr %10, align 4
  store i32 0, ptr %8, align 4
  br label %39

39:                                               ; preds = %36, %32
  %40 = load i32, ptr %8, align 4
  %41 = call i32 @mz_zip_reader_end_internal(ptr noundef %9, i32 noundef %40)
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %39
  %44 = load i32, ptr %10, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i32 0, i32 5
  %48 = load i32, ptr %47, align 4
  store i32 %48, ptr %10, align 4
  br label %49

49:                                               ; preds = %46, %43
  store i32 0, ptr %8, align 4
  br label %50

50:                                               ; preds = %49, %39
  %51 = load ptr, ptr %7, align 8
  %52 = icmp ne ptr %51, null
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = load i32, ptr %10, align 4
  %55 = load ptr, ptr %7, align 8
  store i32 %54, ptr %55, align 4
  br label %56

56:                                               ; preds = %53, %50
  %57 = load i32, ptr %8, align 4
  store i32 %57, ptr %4, align 4
  br label %58

58:                                               ; preds = %56, %31, %18
  %59 = load i32, ptr %4, align 4
  ret i32 %59
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_init_v2(ptr noundef %0, i64 noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store ptr %0, ptr %13, align 8
  store i64 %1, ptr %14, align 8
  store i32 %2, ptr %15, align 4
  %17 = load i32, ptr %15, align 4
  %18 = and i32 %17, 16384
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  store i32 %20, ptr %16, align 4
  %21 = load ptr, ptr %13, align 8
  %22 = icmp ne ptr %21, null
  br i1 %22, label %23, label %38

23:                                               ; preds = %3
  %24 = load ptr, ptr %13, align 8
  %25 = getelementptr inbounds %struct.mz_zip_archive, ptr %24, i32 0, i32 15
  %26 = load ptr, ptr %25, align 8
  %27 = icmp ne ptr %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %23
  %29 = load ptr, ptr %13, align 8
  %30 = getelementptr inbounds %struct.mz_zip_archive, ptr %29, i32 0, i32 12
  %31 = load ptr, ptr %30, align 8
  %32 = icmp ne ptr %31, null
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = load ptr, ptr %13, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, ptr %34, i32 0, i32 3
  %36 = load i32, ptr %35, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %47

38:                                               ; preds = %33, %28, %23, %3
  %39 = load ptr, ptr %13, align 8
  store ptr %39, ptr %4, align 8
  store i32 24, ptr %5, align 4
  %40 = load ptr, ptr %4, align 8
  %41 = icmp ne ptr %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = load i32, ptr %5, align 4
  %44 = load ptr, ptr %4, align 8
  %45 = getelementptr inbounds %struct.mz_zip_archive, ptr %44, i32 0, i32 5
  store i32 %43, ptr %45, align 4
  br label %46

46:                                               ; preds = %38, %42
  store i32 0, ptr %12, align 4
  br label %180

47:                                               ; preds = %33
  %48 = load i32, ptr %15, align 4
  %49 = and i32 %48, 32768
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %66

51:                                               ; preds = %47
  %52 = load ptr, ptr %13, align 8
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %52, i32 0, i32 11
  %54 = load ptr, ptr %53, align 8
  %55 = icmp ne ptr %54, null
  br i1 %55, label %65, label %56

56:                                               ; preds = %51
  %57 = load ptr, ptr %13, align 8
  store ptr %57, ptr %6, align 8
  store i32 24, ptr %7, align 4
  %58 = load ptr, ptr %6, align 8
  %59 = icmp ne ptr %58, null
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = load i32, ptr %7, align 4
  %62 = load ptr, ptr %6, align 8
  %63 = getelementptr inbounds %struct.mz_zip_archive, ptr %62, i32 0, i32 5
  store i32 %61, ptr %63, align 4
  br label %64

64:                                               ; preds = %56, %60
  store i32 0, ptr %12, align 4
  br label %180

65:                                               ; preds = %51
  br label %66

66:                                               ; preds = %65, %47
  %67 = load ptr, ptr %13, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive, ptr %67, i32 0, i32 6
  %69 = load i64, ptr %68, align 8
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %91

71:                                               ; preds = %66
  %72 = load ptr, ptr %13, align 8
  %73 = getelementptr inbounds %struct.mz_zip_archive, ptr %72, i32 0, i32 6
  %74 = load i64, ptr %73, align 8
  %75 = load ptr, ptr %13, align 8
  %76 = getelementptr inbounds %struct.mz_zip_archive, ptr %75, i32 0, i32 6
  %77 = load i64, ptr %76, align 8
  %78 = sub i64 %77, 1
  %79 = and i64 %74, %78
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %81, label %90

81:                                               ; preds = %71
  %82 = load ptr, ptr %13, align 8
  store ptr %82, ptr %8, align 8
  store i32 24, ptr %9, align 4
  %83 = load ptr, ptr %8, align 8
  %84 = icmp ne ptr %83, null
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  %86 = load i32, ptr %9, align 4
  %87 = load ptr, ptr %8, align 8
  %88 = getelementptr inbounds %struct.mz_zip_archive, ptr %87, i32 0, i32 5
  store i32 %86, ptr %88, align 4
  br label %89

89:                                               ; preds = %81, %85
  store i32 0, ptr %12, align 4
  br label %180

90:                                               ; preds = %71
  br label %91

91:                                               ; preds = %90, %66
  %92 = load ptr, ptr %13, align 8
  %93 = getelementptr inbounds %struct.mz_zip_archive, ptr %92, i32 0, i32 7
  %94 = load ptr, ptr %93, align 8
  %95 = icmp ne ptr %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %91
  %97 = load ptr, ptr %13, align 8
  %98 = getelementptr inbounds %struct.mz_zip_archive, ptr %97, i32 0, i32 7
  store ptr @miniz_def_alloc_func, ptr %98, align 8
  br label %99

99:                                               ; preds = %96, %91
  %100 = load ptr, ptr %13, align 8
  %101 = getelementptr inbounds %struct.mz_zip_archive, ptr %100, i32 0, i32 8
  %102 = load ptr, ptr %101, align 8
  %103 = icmp ne ptr %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %99
  %105 = load ptr, ptr %13, align 8
  %106 = getelementptr inbounds %struct.mz_zip_archive, ptr %105, i32 0, i32 8
  store ptr @miniz_def_free_func, ptr %106, align 8
  br label %107

107:                                              ; preds = %104, %99
  %108 = load ptr, ptr %13, align 8
  %109 = getelementptr inbounds %struct.mz_zip_archive, ptr %108, i32 0, i32 9
  %110 = load ptr, ptr %109, align 8
  %111 = icmp ne ptr %110, null
  br i1 %111, label %115, label %112

112:                                              ; preds = %107
  %113 = load ptr, ptr %13, align 8
  %114 = getelementptr inbounds %struct.mz_zip_archive, ptr %113, i32 0, i32 9
  store ptr @miniz_def_realloc_func, ptr %114, align 8
  br label %115

115:                                              ; preds = %112, %107
  %116 = load i64, ptr %14, align 8
  %117 = load ptr, ptr %13, align 8
  %118 = getelementptr inbounds %struct.mz_zip_archive, ptr %117, i32 0, i32 0
  store i64 %116, ptr %118, align 8
  %119 = load ptr, ptr %13, align 8
  %120 = getelementptr inbounds %struct.mz_zip_archive, ptr %119, i32 0, i32 1
  store i64 0, ptr %120, align 8
  %121 = load ptr, ptr %13, align 8
  %122 = getelementptr inbounds %struct.mz_zip_archive, ptr %121, i32 0, i32 2
  store i32 0, ptr %122, align 8
  %123 = load ptr, ptr %13, align 8
  %124 = getelementptr inbounds %struct.mz_zip_archive, ptr %123, i32 0, i32 7
  %125 = load ptr, ptr %124, align 8
  %126 = load ptr, ptr %13, align 8
  %127 = getelementptr inbounds %struct.mz_zip_archive, ptr %126, i32 0, i32 10
  %128 = load ptr, ptr %127, align 8
  %129 = call ptr %125(ptr noundef %128, i64 noundef 1, i64 noundef 152)
  %130 = load ptr, ptr %13, align 8
  %131 = getelementptr inbounds %struct.mz_zip_archive, ptr %130, i32 0, i32 15
  store ptr %129, ptr %131, align 8
  %132 = icmp eq ptr null, %129
  br i1 %132, label %133, label %142

133:                                              ; preds = %115
  %134 = load ptr, ptr %13, align 8
  store ptr %134, ptr %10, align 8
  store i32 16, ptr %11, align 4
  %135 = load ptr, ptr %10, align 8
  %136 = icmp ne ptr %135, null
  br i1 %136, label %137, label %141

137:                                              ; preds = %133
  %138 = load i32, ptr %11, align 4
  %139 = load ptr, ptr %10, align 8
  %140 = getelementptr inbounds %struct.mz_zip_archive, ptr %139, i32 0, i32 5
  store i32 %138, ptr %140, align 4
  br label %141

141:                                              ; preds = %133, %137
  store i32 0, ptr %12, align 4
  br label %180

142:                                              ; preds = %115
  %143 = load ptr, ptr %13, align 8
  %144 = getelementptr inbounds %struct.mz_zip_archive, ptr %143, i32 0, i32 15
  %145 = load ptr, ptr %144, align 8
  %146 = load ptr, ptr %13, align 8
  %147 = getelementptr inbounds %struct.mz_zip_archive, ptr %146, i32 0, i32 15
  %148 = load ptr, ptr %147, align 8
  %149 = call i64 @llvm.objectsize.i64.p0(ptr %148, i1 false, i1 true, i1 false)
  %150 = call ptr @__memset_chk(ptr noundef %145, i32 noundef 0, i64 noundef 152, i64 noundef %149) #11
  %151 = load ptr, ptr %13, align 8
  %152 = getelementptr inbounds %struct.mz_zip_archive, ptr %151, i32 0, i32 15
  %153 = load ptr, ptr %152, align 8
  %154 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %153, i32 0, i32 0
  %155 = getelementptr inbounds %struct.mz_zip_array, ptr %154, i32 0, i32 3
  store i32 1, ptr %155, align 8
  %156 = load ptr, ptr %13, align 8
  %157 = getelementptr inbounds %struct.mz_zip_archive, ptr %156, i32 0, i32 15
  %158 = load ptr, ptr %157, align 8
  %159 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %158, i32 0, i32 1
  %160 = getelementptr inbounds %struct.mz_zip_array, ptr %159, i32 0, i32 3
  store i32 4, ptr %160, align 8
  %161 = load ptr, ptr %13, align 8
  %162 = getelementptr inbounds %struct.mz_zip_archive, ptr %161, i32 0, i32 15
  %163 = load ptr, ptr %162, align 8
  %164 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %163, i32 0, i32 2
  %165 = getelementptr inbounds %struct.mz_zip_array, ptr %164, i32 0, i32 3
  store i32 4, ptr %165, align 8
  %166 = load i32, ptr %16, align 4
  %167 = load ptr, ptr %13, align 8
  %168 = getelementptr inbounds %struct.mz_zip_archive, ptr %167, i32 0, i32 15
  %169 = load ptr, ptr %168, align 8
  %170 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %169, i32 0, i32 4
  store i32 %166, ptr %170, align 4
  %171 = load i32, ptr %16, align 4
  %172 = load ptr, ptr %13, align 8
  %173 = getelementptr inbounds %struct.mz_zip_archive, ptr %172, i32 0, i32 15
  %174 = load ptr, ptr %173, align 8
  %175 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %174, i32 0, i32 5
  store i32 %171, ptr %175, align 8
  %176 = load ptr, ptr %13, align 8
  %177 = getelementptr inbounds %struct.mz_zip_archive, ptr %176, i32 0, i32 4
  store i32 1, ptr %177, align 8
  %178 = load ptr, ptr %13, align 8
  %179 = getelementptr inbounds %struct.mz_zip_archive, ptr %178, i32 0, i32 3
  store i32 2, ptr %179, align 4
  store i32 1, ptr %12, align 4
  br label %180

180:                                              ; preds = %142, %141, %89, %64, %46
  %181 = load i32, ptr %12, align 4
  ret i32 %181
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_init(ptr noundef %0, i64 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  store i64 %1, ptr %4, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load i64, ptr %4, align 8
  %7 = call i32 @mz_zip_writer_init_v2(ptr noundef %5, i64 noundef %6, i32 noundef 0)
  ret i32 %7
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_init_heap_v2(ptr noundef %0, i64 noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  store ptr %0, ptr %8, align 8
  store i64 %1, ptr %9, align 8
  store i64 %2, ptr %10, align 8
  store i32 %3, ptr %11, align 4
  %12 = load ptr, ptr %8, align 8
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %12, i32 0, i32 12
  store ptr @mz_zip_heap_write_func, ptr %13, align 8
  %14 = load ptr, ptr %8, align 8
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %14, i32 0, i32 13
  store ptr null, ptr %15, align 8
  %16 = load i32, ptr %11, align 4
  %17 = and i32 %16, 32768
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %4
  %20 = load ptr, ptr %8, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive, ptr %20, i32 0, i32 11
  store ptr @mz_zip_mem_read_func, ptr %21, align 8
  br label %22

22:                                               ; preds = %19, %4
  %23 = load ptr, ptr %8, align 8
  %24 = load ptr, ptr %8, align 8
  %25 = getelementptr inbounds %struct.mz_zip_archive, ptr %24, i32 0, i32 14
  store ptr %23, ptr %25, align 8
  %26 = load ptr, ptr %8, align 8
  %27 = load i64, ptr %9, align 8
  %28 = load i32, ptr %11, align 4
  %29 = call i32 @mz_zip_writer_init_v2(ptr noundef %26, i64 noundef %27, i32 noundef %28)
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %22
  store i32 0, ptr %7, align 4
  br label %77

32:                                               ; preds = %22
  %33 = load ptr, ptr %8, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %33, i32 0, i32 4
  store i32 3, ptr %34, align 8
  %35 = load i64, ptr %10, align 8
  %36 = load i64, ptr %9, align 8
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = load i64, ptr %10, align 8
  br label %42

40:                                               ; preds = %32
  %41 = load i64, ptr %9, align 8
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %39, %38 ], [ %41, %40 ]
  store i64 %43, ptr %10, align 8
  %44 = icmp ne i64 0, %43
  br i1 %44, label %45, label %76

45:                                               ; preds = %42
  %46 = load ptr, ptr %8, align 8
  %47 = getelementptr inbounds %struct.mz_zip_archive, ptr %46, i32 0, i32 7
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr %8, align 8
  %50 = getelementptr inbounds %struct.mz_zip_archive, ptr %49, i32 0, i32 10
  %51 = load ptr, ptr %50, align 8
  %52 = load i64, ptr %10, align 8
  %53 = call ptr %48(ptr noundef %51, i64 noundef 1, i64 noundef %52)
  %54 = load ptr, ptr %8, align 8
  %55 = getelementptr inbounds %struct.mz_zip_archive, ptr %54, i32 0, i32 15
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %56, i32 0, i32 8
  store ptr %53, ptr %57, align 8
  %58 = icmp eq ptr null, %53
  br i1 %58, label %59, label %70

59:                                               ; preds = %45
  %60 = load ptr, ptr %8, align 8
  %61 = call i32 @mz_zip_writer_end_internal(ptr noundef %60, i32 noundef 0)
  %62 = load ptr, ptr %8, align 8
  store ptr %62, ptr %5, align 8
  store i32 16, ptr %6, align 4
  %63 = load ptr, ptr %5, align 8
  %64 = icmp ne ptr %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %59
  %66 = load i32, ptr %6, align 4
  %67 = load ptr, ptr %5, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive, ptr %67, i32 0, i32 5
  store i32 %66, ptr %68, align 4
  br label %69

69:                                               ; preds = %59, %65
  store i32 0, ptr %7, align 4
  br label %77

70:                                               ; preds = %45
  %71 = load i64, ptr %10, align 8
  %72 = load ptr, ptr %8, align 8
  %73 = getelementptr inbounds %struct.mz_zip_archive, ptr %72, i32 0, i32 15
  %74 = load ptr, ptr %73, align 8
  %75 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %74, i32 0, i32 10
  store i64 %71, ptr %75, align 8
  br label %76

76:                                               ; preds = %70, %42
  store i32 1, ptr %7, align 4
  br label %77

77:                                               ; preds = %76, %69, %31
  %78 = load i32, ptr %7, align 4
  ret i32 %78
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @mz_zip_heap_write_func(ptr noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i64, align 8
  store ptr %0, ptr %8, align 8
  store i64 %1, ptr %9, align 8
  store ptr %2, ptr %10, align 8
  store i64 %3, ptr %11, align 8
  %17 = load ptr, ptr %8, align 8
  store ptr %17, ptr %12, align 8
  %18 = load ptr, ptr %12, align 8
  %19 = getelementptr inbounds %struct.mz_zip_archive, ptr %18, i32 0, i32 15
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %13, align 8
  %21 = load i64, ptr %9, align 8
  %22 = load i64, ptr %11, align 8
  %23 = add i64 %21, %22
  %24 = load ptr, ptr %13, align 8
  %25 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %24, i32 0, i32 9
  %26 = load i64, ptr %25, align 8
  %27 = icmp ugt i64 %23, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %4
  %29 = load i64, ptr %9, align 8
  %30 = load i64, ptr %11, align 8
  %31 = add i64 %29, %30
  br label %36

32:                                               ; preds = %4
  %33 = load ptr, ptr %13, align 8
  %34 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %33, i32 0, i32 9
  %35 = load i64, ptr %34, align 8
  br label %36

36:                                               ; preds = %32, %28
  %37 = phi i64 [ %31, %28 ], [ %35, %32 ]
  store i64 %37, ptr %14, align 8
  %38 = load i64, ptr %11, align 8
  %39 = icmp ne i64 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  store i64 0, ptr %7, align 8
  br label %114

41:                                               ; preds = %36
  %42 = load i64, ptr %14, align 8
  %43 = load ptr, ptr %13, align 8
  %44 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %43, i32 0, i32 10
  %45 = load i64, ptr %44, align 8
  %46 = icmp ugt i64 %42, %45
  br i1 %46, label %47, label %95

47:                                               ; preds = %41
  %48 = load ptr, ptr %13, align 8
  %49 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %48, i32 0, i32 10
  %50 = load i64, ptr %49, align 8
  %51 = icmp ugt i64 64, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  br label %57

53:                                               ; preds = %47
  %54 = load ptr, ptr %13, align 8
  %55 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %54, i32 0, i32 10
  %56 = load i64, ptr %55, align 8
  br label %57

57:                                               ; preds = %53, %52
  %58 = phi i64 [ 64, %52 ], [ %56, %53 ]
  store i64 %58, ptr %16, align 8
  br label %59

59:                                               ; preds = %63, %57
  %60 = load i64, ptr %16, align 8
  %61 = load i64, ptr %14, align 8
  %62 = icmp ult i64 %60, %61
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = load i64, ptr %16, align 8
  %65 = mul i64 %64, 2
  store i64 %65, ptr %16, align 8
  br label %59, !llvm.loop !124

66:                                               ; preds = %59
  %67 = load ptr, ptr %12, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive, ptr %67, i32 0, i32 9
  %69 = load ptr, ptr %68, align 8
  %70 = load ptr, ptr %12, align 8
  %71 = getelementptr inbounds %struct.mz_zip_archive, ptr %70, i32 0, i32 10
  %72 = load ptr, ptr %71, align 8
  %73 = load ptr, ptr %13, align 8
  %74 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %73, i32 0, i32 8
  %75 = load ptr, ptr %74, align 8
  %76 = load i64, ptr %16, align 8
  %77 = call ptr %69(ptr noundef %72, ptr noundef %75, i64 noundef 1, i64 noundef %76)
  store ptr %77, ptr %15, align 8
  %78 = icmp eq ptr null, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %66
  %80 = load ptr, ptr %12, align 8
  store ptr %80, ptr %5, align 8
  store i32 16, ptr %6, align 4
  %81 = load ptr, ptr %5, align 8
  %82 = icmp ne ptr %81, null
  br i1 %82, label %83, label %87

83:                                               ; preds = %79
  %84 = load i32, ptr %6, align 4
  %85 = load ptr, ptr %5, align 8
  %86 = getelementptr inbounds %struct.mz_zip_archive, ptr %85, i32 0, i32 5
  store i32 %84, ptr %86, align 4
  br label %87

87:                                               ; preds = %79, %83
  store i64 0, ptr %7, align 8
  br label %114

88:                                               ; preds = %66
  %89 = load ptr, ptr %15, align 8
  %90 = load ptr, ptr %13, align 8
  %91 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %90, i32 0, i32 8
  store ptr %89, ptr %91, align 8
  %92 = load i64, ptr %16, align 8
  %93 = load ptr, ptr %13, align 8
  %94 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %93, i32 0, i32 10
  store i64 %92, ptr %94, align 8
  br label %95

95:                                               ; preds = %88, %41
  %96 = load ptr, ptr %13, align 8
  %97 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %96, i32 0, i32 8
  %98 = load ptr, ptr %97, align 8
  %99 = load i64, ptr %9, align 8
  %100 = getelementptr inbounds i8, ptr %98, i64 %99
  %101 = load ptr, ptr %10, align 8
  %102 = load i64, ptr %11, align 8
  %103 = load ptr, ptr %13, align 8
  %104 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %103, i32 0, i32 8
  %105 = load ptr, ptr %104, align 8
  %106 = load i64, ptr %9, align 8
  %107 = getelementptr inbounds i8, ptr %105, i64 %106
  %108 = call i64 @llvm.objectsize.i64.p0(ptr %107, i1 false, i1 true, i1 false)
  %109 = call ptr @__memcpy_chk(ptr noundef %100, ptr noundef %101, i64 noundef %102, i64 noundef %108) #11
  %110 = load i64, ptr %14, align 8
  %111 = load ptr, ptr %13, align 8
  %112 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %111, i32 0, i32 9
  store i64 %110, ptr %112, align 8
  %113 = load i64, ptr %11, align 8
  store i64 %113, ptr %7, align 8
  br label %114

114:                                              ; preds = %95, %87, %40
  %115 = load i64, ptr %7, align 8
  ret i64 %115
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_writer_end_internal(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca i32, align 4
  store ptr %0, ptr %14, align 8
  store i32 %1, ptr %15, align 4
  store i32 1, ptr %17, align 4
  %18 = load ptr, ptr %14, align 8
  %19 = icmp ne ptr %18, null
  br i1 %19, label %20, label %45

20:                                               ; preds = %2
  %21 = load ptr, ptr %14, align 8
  %22 = getelementptr inbounds %struct.mz_zip_archive, ptr %21, i32 0, i32 15
  %23 = load ptr, ptr %22, align 8
  %24 = icmp ne ptr %23, null
  br i1 %24, label %25, label %45

25:                                               ; preds = %20
  %26 = load ptr, ptr %14, align 8
  %27 = getelementptr inbounds %struct.mz_zip_archive, ptr %26, i32 0, i32 7
  %28 = load ptr, ptr %27, align 8
  %29 = icmp ne ptr %28, null
  br i1 %29, label %30, label %45

30:                                               ; preds = %25
  %31 = load ptr, ptr %14, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive, ptr %31, i32 0, i32 8
  %33 = load ptr, ptr %32, align 8
  %34 = icmp ne ptr %33, null
  br i1 %34, label %35, label %45

35:                                               ; preds = %30
  %36 = load ptr, ptr %14, align 8
  %37 = getelementptr inbounds %struct.mz_zip_archive, ptr %36, i32 0, i32 3
  %38 = load i32, ptr %37, align 4
  %39 = icmp ne i32 %38, 2
  br i1 %39, label %40, label %58

40:                                               ; preds = %35
  %41 = load ptr, ptr %14, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive, ptr %41, i32 0, i32 3
  %43 = load i32, ptr %42, align 4
  %44 = icmp ne i32 %43, 3
  br i1 %44, label %45, label %58

45:                                               ; preds = %40, %30, %25, %20, %2
  %46 = load i32, ptr %15, align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %57

48:                                               ; preds = %45
  %49 = load ptr, ptr %14, align 8
  store ptr %49, ptr %9, align 8
  store i32 24, ptr %10, align 4
  %50 = load ptr, ptr %9, align 8
  %51 = icmp ne ptr %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = load i32, ptr %10, align 4
  %54 = load ptr, ptr %9, align 8
  %55 = getelementptr inbounds %struct.mz_zip_archive, ptr %54, i32 0, i32 5
  store i32 %53, ptr %55, align 4
  br label %56

56:                                               ; preds = %48, %52
  br label %57

57:                                               ; preds = %56, %45
  store i32 0, ptr %13, align 4
  br label %174

58:                                               ; preds = %40, %35
  %59 = load ptr, ptr %14, align 8
  %60 = getelementptr inbounds %struct.mz_zip_archive, ptr %59, i32 0, i32 15
  %61 = load ptr, ptr %60, align 8
  store ptr %61, ptr %16, align 8
  %62 = load ptr, ptr %14, align 8
  %63 = getelementptr inbounds %struct.mz_zip_archive, ptr %62, i32 0, i32 15
  store ptr null, ptr %63, align 8
  %64 = load ptr, ptr %14, align 8
  %65 = load ptr, ptr %16, align 8
  %66 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %65, i32 0, i32 0
  store ptr %64, ptr %3, align 8
  store ptr %66, ptr %4, align 8
  %67 = load ptr, ptr %3, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive, ptr %67, i32 0, i32 8
  %69 = load ptr, ptr %68, align 8
  %70 = load ptr, ptr %3, align 8
  %71 = getelementptr inbounds %struct.mz_zip_archive, ptr %70, i32 0, i32 10
  %72 = load ptr, ptr %71, align 8
  %73 = load ptr, ptr %4, align 8
  %74 = load ptr, ptr %73, align 8
  call void %69(ptr noundef %72, ptr noundef %74) #11
  %75 = load ptr, ptr %4, align 8
  %76 = load ptr, ptr %4, align 8
  %77 = call i64 @llvm.objectsize.i64.p0(ptr %76, i1 false, i1 true, i1 false)
  %78 = call ptr @__memset_chk(ptr noundef %75, i32 noundef 0, i64 noundef 32, i64 noundef %77) #11
  %79 = load ptr, ptr %14, align 8
  %80 = load ptr, ptr %16, align 8
  %81 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %80, i32 0, i32 1
  store ptr %79, ptr %5, align 8
  store ptr %81, ptr %6, align 8
  %82 = load ptr, ptr %5, align 8
  %83 = getelementptr inbounds %struct.mz_zip_archive, ptr %82, i32 0, i32 8
  %84 = load ptr, ptr %83, align 8
  %85 = load ptr, ptr %5, align 8
  %86 = getelementptr inbounds %struct.mz_zip_archive, ptr %85, i32 0, i32 10
  %87 = load ptr, ptr %86, align 8
  %88 = load ptr, ptr %6, align 8
  %89 = load ptr, ptr %88, align 8
  call void %84(ptr noundef %87, ptr noundef %89) #11
  %90 = load ptr, ptr %6, align 8
  %91 = load ptr, ptr %6, align 8
  %92 = call i64 @llvm.objectsize.i64.p0(ptr %91, i1 false, i1 true, i1 false)
  %93 = call ptr @__memset_chk(ptr noundef %90, i32 noundef 0, i64 noundef 32, i64 noundef %92) #11
  %94 = load ptr, ptr %14, align 8
  %95 = load ptr, ptr %16, align 8
  %96 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %95, i32 0, i32 2
  store ptr %94, ptr %7, align 8
  store ptr %96, ptr %8, align 8
  %97 = load ptr, ptr %7, align 8
  %98 = getelementptr inbounds %struct.mz_zip_archive, ptr %97, i32 0, i32 8
  %99 = load ptr, ptr %98, align 8
  %100 = load ptr, ptr %7, align 8
  %101 = getelementptr inbounds %struct.mz_zip_archive, ptr %100, i32 0, i32 10
  %102 = load ptr, ptr %101, align 8
  %103 = load ptr, ptr %8, align 8
  %104 = load ptr, ptr %103, align 8
  call void %99(ptr noundef %102, ptr noundef %104) #11
  %105 = load ptr, ptr %8, align 8
  %106 = load ptr, ptr %8, align 8
  %107 = call i64 @llvm.objectsize.i64.p0(ptr %106, i1 false, i1 true, i1 false)
  %108 = call ptr @__memset_chk(ptr noundef %105, i32 noundef 0, i64 noundef 32, i64 noundef %107) #11
  %109 = load ptr, ptr %16, align 8
  %110 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %109, i32 0, i32 6
  %111 = load ptr, ptr %110, align 8
  %112 = icmp ne ptr %111, null
  br i1 %112, label %113, label %141

113:                                              ; preds = %58
  %114 = load ptr, ptr %14, align 8
  %115 = getelementptr inbounds %struct.mz_zip_archive, ptr %114, i32 0, i32 4
  %116 = load i32, ptr %115, align 8
  %117 = icmp eq i32 %116, 4
  br i1 %117, label %118, label %138

118:                                              ; preds = %113
  %119 = load ptr, ptr %16, align 8
  %120 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %119, i32 0, i32 6
  %121 = load ptr, ptr %120, align 8
  %122 = call i32 @fclose(ptr noundef %121)
  %123 = icmp eq i32 %122, -1
  br i1 %123, label %124, label %137

124:                                              ; preds = %118
  %125 = load i32, ptr %15, align 4
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %127, label %136

127:                                              ; preds = %124
  %128 = load ptr, ptr %14, align 8
  store ptr %128, ptr %11, align 8
  store i32 21, ptr %12, align 4
  %129 = load ptr, ptr %11, align 8
  %130 = icmp ne ptr %129, null
  br i1 %130, label %131, label %135

131:                                              ; preds = %127
  %132 = load i32, ptr %12, align 4
  %133 = load ptr, ptr %11, align 8
  %134 = getelementptr inbounds %struct.mz_zip_archive, ptr %133, i32 0, i32 5
  store i32 %132, ptr %134, align 4
  br label %135

135:                                              ; preds = %127, %131
  br label %136

136:                                              ; preds = %135, %124
  store i32 0, ptr %17, align 4
  br label %137

137:                                              ; preds = %136, %118
  br label %138

138:                                              ; preds = %137, %113
  %139 = load ptr, ptr %16, align 8
  %140 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %139, i32 0, i32 6
  store ptr null, ptr %140, align 8
  br label %141

141:                                              ; preds = %138, %58
  %142 = load ptr, ptr %14, align 8
  %143 = getelementptr inbounds %struct.mz_zip_archive, ptr %142, i32 0, i32 12
  %144 = load ptr, ptr %143, align 8
  %145 = icmp eq ptr %144, @mz_zip_heap_write_func
  br i1 %145, label %146, label %163

146:                                              ; preds = %141
  %147 = load ptr, ptr %16, align 8
  %148 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %147, i32 0, i32 8
  %149 = load ptr, ptr %148, align 8
  %150 = icmp ne ptr %149, null
  br i1 %150, label %151, label %163

151:                                              ; preds = %146
  %152 = load ptr, ptr %14, align 8
  %153 = getelementptr inbounds %struct.mz_zip_archive, ptr %152, i32 0, i32 8
  %154 = load ptr, ptr %153, align 8
  %155 = load ptr, ptr %14, align 8
  %156 = getelementptr inbounds %struct.mz_zip_archive, ptr %155, i32 0, i32 10
  %157 = load ptr, ptr %156, align 8
  %158 = load ptr, ptr %16, align 8
  %159 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %158, i32 0, i32 8
  %160 = load ptr, ptr %159, align 8
  call void %154(ptr noundef %157, ptr noundef %160)
  %161 = load ptr, ptr %16, align 8
  %162 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %161, i32 0, i32 8
  store ptr null, ptr %162, align 8
  br label %163

163:                                              ; preds = %151, %146, %141
  %164 = load ptr, ptr %14, align 8
  %165 = getelementptr inbounds %struct.mz_zip_archive, ptr %164, i32 0, i32 8
  %166 = load ptr, ptr %165, align 8
  %167 = load ptr, ptr %14, align 8
  %168 = getelementptr inbounds %struct.mz_zip_archive, ptr %167, i32 0, i32 10
  %169 = load ptr, ptr %168, align 8
  %170 = load ptr, ptr %16, align 8
  call void %166(ptr noundef %169, ptr noundef %170)
  %171 = load ptr, ptr %14, align 8
  %172 = getelementptr inbounds %struct.mz_zip_archive, ptr %171, i32 0, i32 3
  store i32 0, ptr %172, align 4
  %173 = load i32, ptr %17, align 4
  store i32 %173, ptr %13, align 4
  br label %174

174:                                              ; preds = %163, %57
  %175 = load i32, ptr %13, align 4
  ret i32 %175
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_init_heap(ptr noundef %0, i64 noundef %1, i64 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store ptr %0, ptr %4, align 8
  store i64 %1, ptr %5, align 8
  store i64 %2, ptr %6, align 8
  %7 = load ptr, ptr %4, align 8
  %8 = load i64, ptr %5, align 8
  %9 = load i64, ptr %6, align 8
  %10 = call i32 @mz_zip_writer_init_heap_v2(ptr noundef %7, i64 noundef %8, i64 noundef %9, i32 noundef 0)
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_init_file(ptr noundef %0, ptr noundef %1, i64 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  store ptr %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  store i64 %2, ptr %6, align 8
  %7 = load ptr, ptr %4, align 8
  %8 = load ptr, ptr %5, align 8
  %9 = load i64, ptr %6, align 8
  %10 = call i32 @mz_zip_writer_init_file_v2(ptr noundef %7, ptr noundef %8, i64 noundef %9, i32 noundef 0)
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_init_file_v2(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca i64, align 8
  %16 = alloca [4096 x i8], align 16
  %17 = alloca i64, align 8
  store ptr %0, ptr %10, align 8
  store ptr %1, ptr %11, align 8
  store i64 %2, ptr %12, align 8
  store i32 %3, ptr %13, align 4
  %18 = load ptr, ptr %10, align 8
  %19 = getelementptr inbounds %struct.mz_zip_archive, ptr %18, i32 0, i32 12
  store ptr @mz_zip_file_write_func, ptr %19, align 8
  %20 = load ptr, ptr %10, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive, ptr %20, i32 0, i32 13
  store ptr null, ptr %21, align 8
  %22 = load i32, ptr %13, align 4
  %23 = and i32 %22, 32768
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %4
  %26 = load ptr, ptr %10, align 8
  %27 = getelementptr inbounds %struct.mz_zip_archive, ptr %26, i32 0, i32 11
  store ptr @mz_zip_file_read_func, ptr %27, align 8
  br label %28

28:                                               ; preds = %25, %4
  %29 = load ptr, ptr %10, align 8
  %30 = load ptr, ptr %10, align 8
  %31 = getelementptr inbounds %struct.mz_zip_archive, ptr %30, i32 0, i32 14
  store ptr %29, ptr %31, align 8
  %32 = load ptr, ptr %10, align 8
  %33 = load i64, ptr %12, align 8
  %34 = load i32, ptr %13, align 4
  %35 = call i32 @mz_zip_writer_init_v2(ptr noundef %32, i64 noundef %33, i32 noundef %34)
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %28
  store i32 0, ptr %9, align 4
  br label %113

38:                                               ; preds = %28
  %39 = load ptr, ptr %11, align 8
  %40 = load i32, ptr %13, align 4
  %41 = and i32 %40, 32768
  %42 = icmp ne i32 %41, 0
  %43 = zext i1 %42 to i64
  %44 = select i1 %42, ptr @.str.20, ptr @.str.19
  %45 = call ptr @fopen(ptr noundef %39, ptr noundef %44)
  store ptr %45, ptr %14, align 8
  %46 = icmp eq ptr null, %45
  br i1 %46, label %47, label %58

47:                                               ; preds = %38
  %48 = load ptr, ptr %10, align 8
  %49 = call i32 @mz_zip_writer_end(ptr noundef %48)
  %50 = load ptr, ptr %10, align 8
  store ptr %50, ptr %5, align 8
  store i32 17, ptr %6, align 4
  %51 = load ptr, ptr %5, align 8
  %52 = icmp ne ptr %51, null
  br i1 %52, label %53, label %57

53:                                               ; preds = %47
  %54 = load i32, ptr %6, align 4
  %55 = load ptr, ptr %5, align 8
  %56 = getelementptr inbounds %struct.mz_zip_archive, ptr %55, i32 0, i32 5
  store i32 %54, ptr %56, align 4
  br label %57

57:                                               ; preds = %47, %53
  store i32 0, ptr %9, align 4
  br label %113

58:                                               ; preds = %38
  %59 = load ptr, ptr %14, align 8
  %60 = load ptr, ptr %10, align 8
  %61 = getelementptr inbounds %struct.mz_zip_archive, ptr %60, i32 0, i32 15
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %62, i32 0, i32 6
  store ptr %59, ptr %63, align 8
  %64 = load ptr, ptr %10, align 8
  %65 = getelementptr inbounds %struct.mz_zip_archive, ptr %64, i32 0, i32 4
  store i32 4, ptr %65, align 8
  %66 = load i64, ptr %12, align 8
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %68, label %112

68:                                               ; preds = %58
  store i64 0, ptr %15, align 8
  %69 = getelementptr inbounds [4096 x i8], ptr %16, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 16 %69, i8 0, i64 4096, i1 false)
  br label %70

70:                                               ; preds = %108, %68
  %71 = load i64, ptr %12, align 8
  %72 = icmp ult i64 4096, %71
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  br label %76

74:                                               ; preds = %70
  %75 = load i64, ptr %12, align 8
  br label %76

76:                                               ; preds = %74, %73
  %77 = phi i64 [ 4096, %73 ], [ %75, %74 ]
  store i64 %77, ptr %17, align 8
  %78 = load ptr, ptr %10, align 8
  %79 = getelementptr inbounds %struct.mz_zip_archive, ptr %78, i32 0, i32 12
  %80 = load ptr, ptr %79, align 8
  %81 = load ptr, ptr %10, align 8
  %82 = getelementptr inbounds %struct.mz_zip_archive, ptr %81, i32 0, i32 14
  %83 = load ptr, ptr %82, align 8
  %84 = load i64, ptr %15, align 8
  %85 = getelementptr inbounds [4096 x i8], ptr %16, i64 0, i64 0
  %86 = load i64, ptr %17, align 8
  %87 = call i64 %80(ptr noundef %83, i64 noundef %84, ptr noundef %85, i64 noundef %86)
  %88 = load i64, ptr %17, align 8
  %89 = icmp ne i64 %87, %88
  br i1 %89, label %90, label %101

90:                                               ; preds = %76
  %91 = load ptr, ptr %10, align 8
  %92 = call i32 @mz_zip_writer_end(ptr noundef %91)
  %93 = load ptr, ptr %10, align 8
  store ptr %93, ptr %7, align 8
  store i32 19, ptr %8, align 4
  %94 = load ptr, ptr %7, align 8
  %95 = icmp ne ptr %94, null
  br i1 %95, label %96, label %100

96:                                               ; preds = %90
  %97 = load i32, ptr %8, align 4
  %98 = load ptr, ptr %7, align 8
  %99 = getelementptr inbounds %struct.mz_zip_archive, ptr %98, i32 0, i32 5
  store i32 %97, ptr %99, align 4
  br label %100

100:                                              ; preds = %90, %96
  store i32 0, ptr %9, align 4
  br label %113

101:                                              ; preds = %76
  %102 = load i64, ptr %17, align 8
  %103 = load i64, ptr %15, align 8
  %104 = add i64 %103, %102
  store i64 %104, ptr %15, align 8
  %105 = load i64, ptr %17, align 8
  %106 = load i64, ptr %12, align 8
  %107 = sub i64 %106, %105
  store i64 %107, ptr %12, align 8
  br label %108

108:                                              ; preds = %101
  %109 = load i64, ptr %12, align 8
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %70, label %111, !llvm.loop !125

111:                                              ; preds = %108
  br label %112

112:                                              ; preds = %111, %58
  store i32 1, ptr %9, align 4
  br label %113

113:                                              ; preds = %112, %100, %57, %37
  %114 = load i32, ptr %9, align 4
  ret i32 %114
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @mz_zip_file_write_func(ptr noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  store ptr %0, ptr %8, align 8
  store i64 %1, ptr %9, align 8
  store ptr %2, ptr %10, align 8
  store i64 %3, ptr %11, align 8
  %14 = load ptr, ptr %8, align 8
  store ptr %14, ptr %12, align 8
  %15 = load ptr, ptr %12, align 8
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %15, i32 0, i32 15
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %17, i32 0, i32 6
  %19 = load ptr, ptr %18, align 8
  %20 = call i64 @ftello(ptr noundef %19)
  store i64 %20, ptr %13, align 8
  %21 = load ptr, ptr %12, align 8
  %22 = getelementptr inbounds %struct.mz_zip_archive, ptr %21, i32 0, i32 15
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %23, i32 0, i32 7
  %25 = load i64, ptr %24, align 8
  %26 = load i64, ptr %9, align 8
  %27 = add i64 %26, %25
  store i64 %27, ptr %9, align 8
  %28 = load i64, ptr %9, align 8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %43, label %30

30:                                               ; preds = %4
  %31 = load i64, ptr %13, align 8
  %32 = load i64, ptr %9, align 8
  %33 = icmp ne i64 %31, %32
  br i1 %33, label %34, label %52

34:                                               ; preds = %30
  %35 = load ptr, ptr %12, align 8
  %36 = getelementptr inbounds %struct.mz_zip_archive, ptr %35, i32 0, i32 15
  %37 = load ptr, ptr %36, align 8
  %38 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %37, i32 0, i32 6
  %39 = load ptr, ptr %38, align 8
  %40 = load i64, ptr %9, align 8
  %41 = call i32 @fseeko(ptr noundef %39, i64 noundef %40, i32 noundef 0)
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %52

43:                                               ; preds = %34, %4
  %44 = load ptr, ptr %12, align 8
  store ptr %44, ptr %5, align 8
  store i32 22, ptr %6, align 4
  %45 = load ptr, ptr %5, align 8
  %46 = icmp ne ptr %45, null
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = load i32, ptr %6, align 4
  %49 = load ptr, ptr %5, align 8
  %50 = getelementptr inbounds %struct.mz_zip_archive, ptr %49, i32 0, i32 5
  store i32 %48, ptr %50, align 4
  br label %51

51:                                               ; preds = %43, %47
  store i64 0, ptr %7, align 8
  br label %61

52:                                               ; preds = %34, %30
  %53 = load ptr, ptr %10, align 8
  %54 = load i64, ptr %11, align 8
  %55 = load ptr, ptr %12, align 8
  %56 = getelementptr inbounds %struct.mz_zip_archive, ptr %55, i32 0, i32 15
  %57 = load ptr, ptr %56, align 8
  %58 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %57, i32 0, i32 6
  %59 = load ptr, ptr %58, align 8
  %60 = call i64 @fwrite(ptr noundef %53, i64 noundef 1, i64 noundef %54, ptr noundef %59)
  store i64 %60, ptr %7, align 8
  br label %61

61:                                               ; preds = %52, %51
  %62 = load i64, ptr %7, align 8
  ret i64 %62
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_end(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = call i32 @mz_zip_writer_end_internal(ptr noundef %3, i32 noundef 1)
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_init_cfile(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store i32 %2, ptr %7, align 4
  %8 = load ptr, ptr %5, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i32 0, i32 12
  store ptr @mz_zip_file_write_func, ptr %9, align 8
  %10 = load ptr, ptr %5, align 8
  %11 = getelementptr inbounds %struct.mz_zip_archive, ptr %10, i32 0, i32 13
  store ptr null, ptr %11, align 8
  %12 = load i32, ptr %7, align 4
  %13 = and i32 %12, 32768
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %3
  %16 = load ptr, ptr %5, align 8
  %17 = getelementptr inbounds %struct.mz_zip_archive, ptr %16, i32 0, i32 11
  store ptr @mz_zip_file_read_func, ptr %17, align 8
  br label %18

18:                                               ; preds = %15, %3
  %19 = load ptr, ptr %5, align 8
  %20 = load ptr, ptr %5, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive, ptr %20, i32 0, i32 14
  store ptr %19, ptr %21, align 8
  %22 = load ptr, ptr %5, align 8
  %23 = load i32, ptr %7, align 4
  %24 = call i32 @mz_zip_writer_init_v2(ptr noundef %22, i64 noundef 0, i32 noundef %23)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %18
  store i32 0, ptr %4, align 4
  br label %45

27:                                               ; preds = %18
  %28 = load ptr, ptr %6, align 8
  %29 = load ptr, ptr %5, align 8
  %30 = getelementptr inbounds %struct.mz_zip_archive, ptr %29, i32 0, i32 15
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %31, i32 0, i32 6
  store ptr %28, ptr %32, align 8
  %33 = load ptr, ptr %5, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %33, i32 0, i32 15
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %35, i32 0, i32 6
  %37 = load ptr, ptr %36, align 8
  %38 = call i64 @ftello(ptr noundef %37)
  %39 = load ptr, ptr %5, align 8
  %40 = getelementptr inbounds %struct.mz_zip_archive, ptr %39, i32 0, i32 15
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %41, i32 0, i32 7
  store i64 %38, ptr %42, align 8
  %43 = load ptr, ptr %5, align 8
  %44 = getelementptr inbounds %struct.mz_zip_archive, ptr %43, i32 0, i32 4
  store i32 5, ptr %44, align 8
  store i32 1, ptr %4, align 4
  br label %45

45:                                               ; preds = %27, %26
  %46 = load i32, ptr %4, align 4
  ret i32 %46
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_init_from_reader_v2(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca i32, align 4
  %18 = alloca ptr, align 8
  %19 = alloca i32, align 4
  %20 = alloca ptr, align 8
  %21 = alloca i32, align 4
  %22 = alloca ptr, align 8
  %23 = alloca i32, align 4
  %24 = alloca ptr, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca ptr, align 8
  %28 = alloca ptr, align 8
  %29 = alloca i32, align 4
  %30 = alloca ptr, align 8
  store ptr %0, ptr %27, align 8
  store ptr %1, ptr %28, align 8
  store i32 %2, ptr %29, align 4
  %31 = load ptr, ptr %27, align 8
  %32 = icmp ne ptr %31, null
  br i1 %32, label %33, label %43

33:                                               ; preds = %3
  %34 = load ptr, ptr %27, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, ptr %34, i32 0, i32 15
  %36 = load ptr, ptr %35, align 8
  %37 = icmp ne ptr %36, null
  br i1 %37, label %38, label %43

38:                                               ; preds = %33
  %39 = load ptr, ptr %27, align 8
  %40 = getelementptr inbounds %struct.mz_zip_archive, ptr %39, i32 0, i32 3
  %41 = load i32, ptr %40, align 4
  %42 = icmp ne i32 %41, 1
  br i1 %42, label %43, label %52

43:                                               ; preds = %38, %33, %3
  %44 = load ptr, ptr %27, align 8
  store ptr %44, ptr %6, align 8
  store i32 24, ptr %7, align 4
  %45 = load ptr, ptr %6, align 8
  %46 = icmp ne ptr %45, null
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = load i32, ptr %7, align 4
  %49 = load ptr, ptr %6, align 8
  %50 = getelementptr inbounds %struct.mz_zip_archive, ptr %49, i32 0, i32 5
  store i32 %48, ptr %50, align 4
  br label %51

51:                                               ; preds = %43, %47
  store i32 0, ptr %26, align 4
  br label %265

52:                                               ; preds = %38
  %53 = load i32, ptr %29, align 4
  %54 = and i32 %53, 16384
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %73

56:                                               ; preds = %52
  %57 = load ptr, ptr %27, align 8
  %58 = getelementptr inbounds %struct.mz_zip_archive, ptr %57, i32 0, i32 15
  %59 = load ptr, ptr %58, align 8
  %60 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %59, i32 0, i32 4
  %61 = load i32, ptr %60, align 4
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %56
  %64 = load ptr, ptr %27, align 8
  store ptr %64, ptr %8, align 8
  store i32 24, ptr %9, align 4
  %65 = load ptr, ptr %8, align 8
  %66 = icmp ne ptr %65, null
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = load i32, ptr %9, align 4
  %69 = load ptr, ptr %8, align 8
  %70 = getelementptr inbounds %struct.mz_zip_archive, ptr %69, i32 0, i32 5
  store i32 %68, ptr %70, align 4
  br label %71

71:                                               ; preds = %63, %67
  store i32 0, ptr %26, align 4
  br label %265

72:                                               ; preds = %56
  br label %73

73:                                               ; preds = %72, %52
  %74 = load ptr, ptr %27, align 8
  %75 = getelementptr inbounds %struct.mz_zip_archive, ptr %74, i32 0, i32 15
  %76 = load ptr, ptr %75, align 8
  %77 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %76, i32 0, i32 4
  %78 = load i32, ptr %77, align 4
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %95

80:                                               ; preds = %73
  %81 = load ptr, ptr %27, align 8
  %82 = getelementptr inbounds %struct.mz_zip_archive, ptr %81, i32 0, i32 2
  %83 = load i32, ptr %82, align 8
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %85, label %94

85:                                               ; preds = %80
  %86 = load ptr, ptr %27, align 8
  store ptr %86, ptr %10, align 8
  store i32 2, ptr %11, align 4
  %87 = load ptr, ptr %10, align 8
  %88 = icmp ne ptr %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %85
  %90 = load i32, ptr %11, align 4
  %91 = load ptr, ptr %10, align 8
  %92 = getelementptr inbounds %struct.mz_zip_archive, ptr %91, i32 0, i32 5
  store i32 %90, ptr %92, align 4
  br label %93

93:                                               ; preds = %85, %89
  store i32 0, ptr %26, align 4
  br label %265

94:                                               ; preds = %80
  br label %126

95:                                               ; preds = %73
  %96 = load ptr, ptr %27, align 8
  %97 = getelementptr inbounds %struct.mz_zip_archive, ptr %96, i32 0, i32 2
  %98 = load i32, ptr %97, align 8
  %99 = icmp eq i32 %98, 65535
  br i1 %99, label %100, label %109

100:                                              ; preds = %95
  %101 = load ptr, ptr %27, align 8
  store ptr %101, ptr %12, align 8
  store i32 2, ptr %13, align 4
  %102 = load ptr, ptr %12, align 8
  %103 = icmp ne ptr %102, null
  br i1 %103, label %104, label %108

104:                                              ; preds = %100
  %105 = load i32, ptr %13, align 4
  %106 = load ptr, ptr %12, align 8
  %107 = getelementptr inbounds %struct.mz_zip_archive, ptr %106, i32 0, i32 5
  store i32 %105, ptr %107, align 4
  br label %108

108:                                              ; preds = %100, %104
  store i32 0, ptr %26, align 4
  br label %265

109:                                              ; preds = %95
  %110 = load ptr, ptr %27, align 8
  %111 = getelementptr inbounds %struct.mz_zip_archive, ptr %110, i32 0, i32 0
  %112 = load i64, ptr %111, align 8
  %113 = add i64 %112, 46
  %114 = add i64 %113, 30
  %115 = icmp ugt i64 %114, 4294967295
  br i1 %115, label %116, label %125

116:                                              ; preds = %109
  %117 = load ptr, ptr %27, align 8
  store ptr %117, ptr %14, align 8
  store i32 3, ptr %15, align 4
  %118 = load ptr, ptr %14, align 8
  %119 = icmp ne ptr %118, null
  br i1 %119, label %120, label %124

120:                                              ; preds = %116
  %121 = load i32, ptr %15, align 4
  %122 = load ptr, ptr %14, align 8
  %123 = getelementptr inbounds %struct.mz_zip_archive, ptr %122, i32 0, i32 5
  store i32 %121, ptr %123, align 4
  br label %124

124:                                              ; preds = %116, %120
  store i32 0, ptr %26, align 4
  br label %265

125:                                              ; preds = %109
  br label %126

126:                                              ; preds = %125, %94
  %127 = load ptr, ptr %27, align 8
  %128 = getelementptr inbounds %struct.mz_zip_archive, ptr %127, i32 0, i32 15
  %129 = load ptr, ptr %128, align 8
  store ptr %129, ptr %30, align 8
  %130 = load ptr, ptr %30, align 8
  %131 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %130, i32 0, i32 6
  %132 = load ptr, ptr %131, align 8
  %133 = icmp ne ptr %132, null
  br i1 %133, label %134, label %192

134:                                              ; preds = %126
  %135 = load ptr, ptr %27, align 8
  %136 = getelementptr inbounds %struct.mz_zip_archive, ptr %135, i32 0, i32 14
  %137 = load ptr, ptr %136, align 8
  %138 = load ptr, ptr %27, align 8
  %139 = icmp ne ptr %137, %138
  br i1 %139, label %140, label %149

140:                                              ; preds = %134
  %141 = load ptr, ptr %27, align 8
  store ptr %141, ptr %16, align 8
  store i32 24, ptr %17, align 4
  %142 = load ptr, ptr %16, align 8
  %143 = icmp ne ptr %142, null
  br i1 %143, label %144, label %148

144:                                              ; preds = %140
  %145 = load i32, ptr %17, align 4
  %146 = load ptr, ptr %16, align 8
  %147 = getelementptr inbounds %struct.mz_zip_archive, ptr %146, i32 0, i32 5
  store i32 %145, ptr %147, align 4
  br label %148

148:                                              ; preds = %140, %144
  store i32 0, ptr %26, align 4
  br label %265

149:                                              ; preds = %134
  %150 = load ptr, ptr %27, align 8
  %151 = getelementptr inbounds %struct.mz_zip_archive, ptr %150, i32 0, i32 4
  %152 = load i32, ptr %151, align 8
  %153 = icmp eq i32 %152, 4
  br i1 %153, label %154, label %187

154:                                              ; preds = %149
  %155 = load ptr, ptr %28, align 8
  %156 = icmp ne ptr %155, null
  br i1 %156, label %166, label %157

157:                                              ; preds = %154
  %158 = load ptr, ptr %27, align 8
  store ptr %158, ptr %18, align 8
  store i32 24, ptr %19, align 4
  %159 = load ptr, ptr %18, align 8
  %160 = icmp ne ptr %159, null
  br i1 %160, label %161, label %165

161:                                              ; preds = %157
  %162 = load i32, ptr %19, align 4
  %163 = load ptr, ptr %18, align 8
  %164 = getelementptr inbounds %struct.mz_zip_archive, ptr %163, i32 0, i32 5
  store i32 %162, ptr %164, align 4
  br label %165

165:                                              ; preds = %157, %161
  store i32 0, ptr %26, align 4
  br label %265

166:                                              ; preds = %154
  %167 = load ptr, ptr %28, align 8
  %168 = load ptr, ptr %30, align 8
  %169 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %168, i32 0, i32 6
  %170 = load ptr, ptr %169, align 8
  %171 = call ptr @freopen(ptr noundef %167, ptr noundef @.str.21, ptr noundef %170)
  %172 = load ptr, ptr %30, align 8
  %173 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %172, i32 0, i32 6
  store ptr %171, ptr %173, align 8
  %174 = icmp eq ptr null, %171
  br i1 %174, label %175, label %186

175:                                              ; preds = %166
  %176 = load ptr, ptr %27, align 8
  %177 = call i32 @mz_zip_reader_end_internal(ptr noundef %176, i32 noundef 0)
  %178 = load ptr, ptr %27, align 8
  store ptr %178, ptr %20, align 8
  store i32 17, ptr %21, align 4
  %179 = load ptr, ptr %20, align 8
  %180 = icmp ne ptr %179, null
  br i1 %180, label %181, label %185

181:                                              ; preds = %175
  %182 = load i32, ptr %21, align 4
  %183 = load ptr, ptr %20, align 8
  %184 = getelementptr inbounds %struct.mz_zip_archive, ptr %183, i32 0, i32 5
  store i32 %182, ptr %184, align 4
  br label %185

185:                                              ; preds = %175, %181
  store i32 0, ptr %26, align 4
  br label %265

186:                                              ; preds = %166
  br label %187

187:                                              ; preds = %186, %149
  %188 = load ptr, ptr %27, align 8
  %189 = getelementptr inbounds %struct.mz_zip_archive, ptr %188, i32 0, i32 12
  store ptr @mz_zip_file_write_func, ptr %189, align 8
  %190 = load ptr, ptr %27, align 8
  %191 = getelementptr inbounds %struct.mz_zip_archive, ptr %190, i32 0, i32 13
  store ptr null, ptr %191, align 8
  br label %238

192:                                              ; preds = %126
  %193 = load ptr, ptr %30, align 8
  %194 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %193, i32 0, i32 8
  %195 = load ptr, ptr %194, align 8
  %196 = icmp ne ptr %195, null
  br i1 %196, label %197, label %222

197:                                              ; preds = %192
  %198 = load ptr, ptr %27, align 8
  %199 = getelementptr inbounds %struct.mz_zip_archive, ptr %198, i32 0, i32 14
  %200 = load ptr, ptr %199, align 8
  %201 = load ptr, ptr %27, align 8
  %202 = icmp ne ptr %200, %201
  br i1 %202, label %203, label %212

203:                                              ; preds = %197
  %204 = load ptr, ptr %27, align 8
  store ptr %204, ptr %22, align 8
  store i32 24, ptr %23, align 4
  %205 = load ptr, ptr %22, align 8
  %206 = icmp ne ptr %205, null
  br i1 %206, label %207, label %211

207:                                              ; preds = %203
  %208 = load i32, ptr %23, align 4
  %209 = load ptr, ptr %22, align 8
  %210 = getelementptr inbounds %struct.mz_zip_archive, ptr %209, i32 0, i32 5
  store i32 %208, ptr %210, align 4
  br label %211

211:                                              ; preds = %203, %207
  store i32 0, ptr %26, align 4
  br label %265

212:                                              ; preds = %197
  %213 = load ptr, ptr %30, align 8
  %214 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %213, i32 0, i32 9
  %215 = load i64, ptr %214, align 8
  %216 = load ptr, ptr %30, align 8
  %217 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %216, i32 0, i32 10
  store i64 %215, ptr %217, align 8
  %218 = load ptr, ptr %27, align 8
  %219 = getelementptr inbounds %struct.mz_zip_archive, ptr %218, i32 0, i32 12
  store ptr @mz_zip_heap_write_func, ptr %219, align 8
  %220 = load ptr, ptr %27, align 8
  %221 = getelementptr inbounds %struct.mz_zip_archive, ptr %220, i32 0, i32 13
  store ptr null, ptr %221, align 8
  br label %237

222:                                              ; preds = %192
  %223 = load ptr, ptr %27, align 8
  %224 = getelementptr inbounds %struct.mz_zip_archive, ptr %223, i32 0, i32 12
  %225 = load ptr, ptr %224, align 8
  %226 = icmp ne ptr %225, null
  br i1 %226, label %236, label %227

227:                                              ; preds = %222
  %228 = load ptr, ptr %27, align 8
  store ptr %228, ptr %24, align 8
  store i32 24, ptr %25, align 4
  %229 = load ptr, ptr %24, align 8
  %230 = icmp ne ptr %229, null
  br i1 %230, label %231, label %235

231:                                              ; preds = %227
  %232 = load i32, ptr %25, align 4
  %233 = load ptr, ptr %24, align 8
  %234 = getelementptr inbounds %struct.mz_zip_archive, ptr %233, i32 0, i32 5
  store i32 %232, ptr %234, align 4
  br label %235

235:                                              ; preds = %227, %231
  store i32 0, ptr %26, align 4
  br label %265

236:                                              ; preds = %222
  br label %237

237:                                              ; preds = %236, %212
  br label %238

238:                                              ; preds = %237, %187
  %239 = load ptr, ptr %27, align 8
  %240 = getelementptr inbounds %struct.mz_zip_archive, ptr %239, i32 0, i32 1
  %241 = load i64, ptr %240, align 8
  %242 = load ptr, ptr %27, align 8
  %243 = getelementptr inbounds %struct.mz_zip_archive, ptr %242, i32 0, i32 0
  store i64 %241, ptr %243, align 8
  %244 = load ptr, ptr %27, align 8
  %245 = getelementptr inbounds %struct.mz_zip_archive, ptr %244, i32 0, i32 1
  store i64 0, ptr %245, align 8
  %246 = load ptr, ptr %27, align 8
  %247 = load ptr, ptr %27, align 8
  %248 = getelementptr inbounds %struct.mz_zip_archive, ptr %247, i32 0, i32 15
  %249 = load ptr, ptr %248, align 8
  %250 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %249, i32 0, i32 2
  store ptr %246, ptr %4, align 8
  store ptr %250, ptr %5, align 8
  %251 = load ptr, ptr %4, align 8
  %252 = getelementptr inbounds %struct.mz_zip_archive, ptr %251, i32 0, i32 8
  %253 = load ptr, ptr %252, align 8
  %254 = load ptr, ptr %4, align 8
  %255 = getelementptr inbounds %struct.mz_zip_archive, ptr %254, i32 0, i32 10
  %256 = load ptr, ptr %255, align 8
  %257 = load ptr, ptr %5, align 8
  %258 = load ptr, ptr %257, align 8
  call void %253(ptr noundef %256, ptr noundef %258) #11
  %259 = load ptr, ptr %5, align 8
  %260 = load ptr, ptr %5, align 8
  %261 = call i64 @llvm.objectsize.i64.p0(ptr %260, i1 false, i1 true, i1 false)
  %262 = call ptr @__memset_chk(ptr noundef %259, i32 noundef 0, i64 noundef 32, i64 noundef %261) #11
  %263 = load ptr, ptr %27, align 8
  %264 = getelementptr inbounds %struct.mz_zip_archive, ptr %263, i32 0, i32 3
  store i32 2, ptr %264, align 4
  store i32 1, ptr %26, align 4
  br label %265

265:                                              ; preds = %238, %235, %211, %185, %165, %148, %124, %108, %93, %71, %51
  %266 = load i32, ptr %26, align 4
  ret i32 %266
}

declare ptr @freopen(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_init_from_reader(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load ptr, ptr %4, align 8
  %7 = call i32 @mz_zip_writer_init_from_reader_v2(ptr noundef %5, ptr noundef %6, i32 noundef 0)
  ret i32 %7
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_add_mem(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store ptr %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store i64 %3, ptr %9, align 8
  store i32 %4, ptr %10, align 4
  %11 = load ptr, ptr %6, align 8
  %12 = load ptr, ptr %7, align 8
  %13 = load ptr, ptr %8, align 8
  %14 = load i64, ptr %9, align 8
  %15 = load i32, ptr %10, align 4
  %16 = call i32 @mz_zip_writer_add_mem_ex(ptr noundef %11, ptr noundef %12, ptr noundef %13, i64 noundef %14, ptr noundef null, i16 noundef zeroext 0, i32 noundef %15, i64 noundef 0, i32 noundef 0)
  ret i32 %16
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_add_mem_ex(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, i16 noundef zeroext %5, i32 noundef %6, i64 noundef %7, i32 noundef %8) #0 {
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  %14 = alloca ptr, align 8
  %15 = alloca i16, align 2
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  store ptr %0, ptr %10, align 8
  store ptr %1, ptr %11, align 8
  store ptr %2, ptr %12, align 8
  store i64 %3, ptr %13, align 8
  store ptr %4, ptr %14, align 8
  store i16 %5, ptr %15, align 2
  store i32 %6, ptr %16, align 4
  store i64 %7, ptr %17, align 8
  store i32 %8, ptr %18, align 4
  %19 = load ptr, ptr %10, align 8
  %20 = load ptr, ptr %11, align 8
  %21 = load ptr, ptr %12, align 8
  %22 = load i64, ptr %13, align 8
  %23 = load ptr, ptr %14, align 8
  %24 = load i16, ptr %15, align 2
  %25 = load i32, ptr %16, align 4
  %26 = load i64, ptr %17, align 8
  %27 = load i32, ptr %18, align 4
  %28 = call i32 @mz_zip_writer_add_mem_ex_v2(ptr noundef %19, ptr noundef %20, ptr noundef %21, i64 noundef %22, ptr noundef %23, i16 noundef zeroext %24, i32 noundef %25, i64 noundef %26, i32 noundef %27, ptr noundef null, ptr noundef null, i32 noundef 0, ptr noundef null, i32 noundef 0)
  ret i32 %28
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_add_mem_ex_v2(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, i16 noundef zeroext %5, i32 noundef %6, i64 noundef %7, i32 noundef %8, ptr noundef %9, ptr noundef %10, i32 noundef %11, ptr noundef %12, i32 noundef %13) #0 {
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %23 = alloca i64, align 8
  %24 = alloca i32, align 4
  %25 = alloca ptr, align 8
  %26 = alloca i32, align 4
  %27 = alloca ptr, align 8
  %28 = alloca i32, align 4
  %29 = alloca ptr, align 8
  %30 = alloca i64, align 8
  %31 = alloca ptr, align 8
  %32 = alloca i32, align 4
  %33 = alloca ptr, align 8
  %34 = alloca i32, align 4
  %35 = alloca ptr, align 8
  %36 = alloca i64, align 8
  %37 = alloca ptr, align 8
  %38 = alloca i32, align 4
  %39 = alloca ptr, align 8
  %40 = alloca i32, align 4
  %41 = alloca ptr, align 8
  %42 = alloca i32, align 4
  %43 = alloca ptr, align 8
  %44 = alloca i32, align 4
  %45 = alloca ptr, align 8
  %46 = alloca ptr, align 8
  %47 = alloca i64, align 8
  %48 = alloca ptr, align 8
  %49 = alloca ptr, align 8
  %50 = alloca i64, align 8
  %51 = alloca ptr, align 8
  %52 = alloca i32, align 4
  %53 = alloca ptr, align 8
  %54 = alloca i32, align 4
  %55 = alloca ptr, align 8
  %56 = alloca i32, align 4
  %57 = alloca ptr, align 8
  %58 = alloca i32, align 4
  %59 = alloca ptr, align 8
  %60 = alloca i32, align 4
  %61 = alloca ptr, align 8
  %62 = alloca i32, align 4
  %63 = alloca ptr, align 8
  %64 = alloca i32, align 4
  %65 = alloca ptr, align 8
  %66 = alloca i32, align 4
  %67 = alloca ptr, align 8
  %68 = alloca i32, align 4
  %69 = alloca ptr, align 8
  %70 = alloca i32, align 4
  %71 = alloca ptr, align 8
  %72 = alloca i32, align 4
  %73 = alloca ptr, align 8
  %74 = alloca i32, align 4
  %75 = alloca ptr, align 8
  %76 = alloca i32, align 4
  %77 = alloca ptr, align 8
  %78 = alloca i32, align 4
  %79 = alloca ptr, align 8
  %80 = alloca i32, align 4
  %81 = alloca ptr, align 8
  %82 = alloca i32, align 4
  %83 = alloca ptr, align 8
  %84 = alloca i32, align 4
  %85 = alloca ptr, align 8
  %86 = alloca i32, align 4
  %87 = alloca ptr, align 8
  %88 = alloca i32, align 4
  %89 = alloca ptr, align 8
  %90 = alloca i32, align 4
  %91 = alloca ptr, align 8
  %92 = alloca i32, align 4
  %93 = alloca i32, align 4
  %94 = alloca ptr, align 8
  %95 = alloca ptr, align 8
  %96 = alloca ptr, align 8
  %97 = alloca i64, align 8
  %98 = alloca ptr, align 8
  %99 = alloca i16, align 2
  %100 = alloca i32, align 4
  %101 = alloca i64, align 8
  %102 = alloca i32, align 4
  %103 = alloca ptr, align 8
  %104 = alloca ptr, align 8
  %105 = alloca i32, align 4
  %106 = alloca ptr, align 8
  %107 = alloca i32, align 4
  %108 = alloca i16, align 2
  %109 = alloca i16, align 2
  %110 = alloca i16, align 2
  %111 = alloca i32, align 4
  %112 = alloca i32, align 4
  %113 = alloca i32, align 4
  %114 = alloca i64, align 8
  %115 = alloca i64, align 8
  %116 = alloca i64, align 8
  %117 = alloca i64, align 8
  %118 = alloca [30 x i8], align 16
  %119 = alloca ptr, align 8
  %120 = alloca i32, align 4
  %121 = alloca ptr, align 8
  %122 = alloca ptr, align 8
  %123 = alloca i32, align 4
  %124 = alloca [28 x i8], align 16
  %125 = alloca i16, align 2
  %126 = alloca i64, align 8
  %127 = alloca %struct.mz_zip_writer_add_state, align 8
  %128 = alloca [24 x i8], align 16
  %129 = alloca i32, align 4
  store ptr %0, ptr %94, align 8
  store ptr %1, ptr %95, align 8
  store ptr %2, ptr %96, align 8
  store i64 %3, ptr %97, align 8
  store ptr %4, ptr %98, align 8
  store i16 %5, ptr %99, align 2
  store i32 %6, ptr %100, align 4
  store i64 %7, ptr %101, align 8
  store i32 %8, ptr %102, align 4
  store ptr %9, ptr %103, align 8
  store ptr %10, ptr %104, align 8
  store i32 %11, ptr %105, align 4
  store ptr %12, ptr %106, align 8
  store i32 %13, ptr %107, align 4
  store i16 0, ptr %108, align 2
  store i16 0, ptr %109, align 2
  store i16 0, ptr %110, align 2
  store i32 0, ptr %112, align 4
  %130 = load ptr, ptr %94, align 8
  %131 = getelementptr inbounds %struct.mz_zip_archive, ptr %130, i32 0, i32 0
  %132 = load i64, ptr %131, align 8
  store i64 %132, ptr %114, align 8
  %133 = load ptr, ptr %94, align 8
  %134 = getelementptr inbounds %struct.mz_zip_archive, ptr %133, i32 0, i32 0
  %135 = load i64, ptr %134, align 8
  store i64 %135, ptr %115, align 8
  store i64 0, ptr %116, align 8
  store ptr null, ptr %119, align 8
  store ptr null, ptr %122, align 8
  store i32 0, ptr %123, align 4
  store i16 0, ptr %125, align 2
  %136 = load i32, ptr %100, align 4
  %137 = icmp slt i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %14
  store i32 6, ptr %100, align 4
  br label %139

139:                                              ; preds = %138, %14
  %140 = load i64, ptr %101, align 8
  %141 = icmp ne i64 %140, 0
  br i1 %141, label %149, label %142

142:                                              ; preds = %139
  %143 = load i64, ptr %97, align 8
  %144 = icmp ne i64 %143, 0
  br i1 %144, label %145, label %154

145:                                              ; preds = %142
  %146 = load i32, ptr %100, align 4
  %147 = and i32 %146, 1024
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %154, label %149

149:                                              ; preds = %145, %139
  %150 = load i16, ptr %125, align 2
  %151 = zext i16 %150 to i32
  %152 = or i32 %151, 8
  %153 = trunc i32 %152 to i16
  store i16 %153, ptr %125, align 2
  br label %154

154:                                              ; preds = %149, %145, %142
  %155 = load i32, ptr %100, align 4
  %156 = and i32 %155, 65536
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = load i16, ptr %125, align 2
  %160 = zext i16 %159 to i32
  %161 = or i32 %160, 2048
  %162 = trunc i32 %161 to i16
  store i16 %162, ptr %125, align 2
  br label %163

163:                                              ; preds = %158, %154
  %164 = load i32, ptr %100, align 4
  %165 = and i32 %164, 15
  store i32 %165, ptr %111, align 4
  %166 = load i32, ptr %111, align 4
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %168, label %172

168:                                              ; preds = %163
  %169 = load i32, ptr %100, align 4
  %170 = and i32 %169, 1024
  %171 = icmp ne i32 %170, 0
  br label %172

172:                                              ; preds = %168, %163
  %173 = phi i1 [ true, %163 ], [ %171, %168 ]
  %174 = zext i1 %173 to i32
  store i32 %174, ptr %120, align 4
  %175 = load ptr, ptr %94, align 8
  %176 = icmp ne ptr %175, null
  br i1 %176, label %177, label %206

177:                                              ; preds = %172
  %178 = load ptr, ptr %94, align 8
  %179 = getelementptr inbounds %struct.mz_zip_archive, ptr %178, i32 0, i32 15
  %180 = load ptr, ptr %179, align 8
  %181 = icmp ne ptr %180, null
  br i1 %181, label %182, label %206

182:                                              ; preds = %177
  %183 = load ptr, ptr %94, align 8
  %184 = getelementptr inbounds %struct.mz_zip_archive, ptr %183, i32 0, i32 3
  %185 = load i32, ptr %184, align 4
  %186 = icmp ne i32 %185, 2
  br i1 %186, label %206, label %187

187:                                              ; preds = %182
  %188 = load i64, ptr %97, align 8
  %189 = icmp ne i64 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %187
  %191 = load ptr, ptr %96, align 8
  %192 = icmp ne ptr %191, null
  br i1 %192, label %193, label %206

193:                                              ; preds = %190, %187
  %194 = load ptr, ptr %95, align 8
  %195 = icmp ne ptr %194, null
  br i1 %195, label %196, label %206

196:                                              ; preds = %193
  %197 = load i16, ptr %99, align 2
  %198 = zext i16 %197 to i32
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %196
  %201 = load ptr, ptr %98, align 8
  %202 = icmp ne ptr %201, null
  br i1 %202, label %203, label %206

203:                                              ; preds = %200, %196
  %204 = load i32, ptr %111, align 4
  %205 = icmp ugt i32 %204, 10
  br i1 %205, label %206, label %215

206:                                              ; preds = %203, %200, %193, %190, %182, %177, %172
  %207 = load ptr, ptr %94, align 8
  store ptr %207, ptr %51, align 8
  store i32 24, ptr %52, align 4
  %208 = load ptr, ptr %51, align 8
  %209 = icmp ne ptr %208, null
  br i1 %209, label %210, label %214

210:                                              ; preds = %206
  %211 = load i32, ptr %52, align 4
  %212 = load ptr, ptr %51, align 8
  %213 = getelementptr inbounds %struct.mz_zip_archive, ptr %212, i32 0, i32 5
  store i32 %211, ptr %213, align 4
  br label %214

214:                                              ; preds = %206, %210
  store i32 0, ptr %93, align 4
  br label %1212

215:                                              ; preds = %203
  %216 = load ptr, ptr %94, align 8
  %217 = getelementptr inbounds %struct.mz_zip_archive, ptr %216, i32 0, i32 15
  %218 = load ptr, ptr %217, align 8
  store ptr %218, ptr %121, align 8
  %219 = load ptr, ptr %121, align 8
  %220 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %219, i32 0, i32 4
  %221 = load i32, ptr %220, align 4
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %223, label %238

223:                                              ; preds = %215
  %224 = load ptr, ptr %94, align 8
  %225 = getelementptr inbounds %struct.mz_zip_archive, ptr %224, i32 0, i32 2
  %226 = load i32, ptr %225, align 8
  %227 = icmp eq i32 %226, -1
  br i1 %227, label %228, label %237

228:                                              ; preds = %223
  %229 = load ptr, ptr %94, align 8
  store ptr %229, ptr %53, align 8
  store i32 2, ptr %54, align 4
  %230 = load ptr, ptr %53, align 8
  %231 = icmp ne ptr %230, null
  br i1 %231, label %232, label %236

232:                                              ; preds = %228
  %233 = load i32, ptr %54, align 4
  %234 = load ptr, ptr %53, align 8
  %235 = getelementptr inbounds %struct.mz_zip_archive, ptr %234, i32 0, i32 5
  store i32 %233, ptr %235, align 4
  br label %236

236:                                              ; preds = %228, %232
  store i32 0, ptr %93, align 4
  br label %1212

237:                                              ; preds = %223
  br label %256

238:                                              ; preds = %215
  %239 = load ptr, ptr %94, align 8
  %240 = getelementptr inbounds %struct.mz_zip_archive, ptr %239, i32 0, i32 2
  %241 = load i32, ptr %240, align 8
  %242 = icmp eq i32 %241, 65535
  br i1 %242, label %243, label %246

243:                                              ; preds = %238
  %244 = load ptr, ptr %121, align 8
  %245 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %244, i32 0, i32 4
  store i32 1, ptr %245, align 4
  br label %246

246:                                              ; preds = %243, %238
  %247 = load i64, ptr %97, align 8
  %248 = icmp ugt i64 %247, 4294967295
  br i1 %248, label %252, label %249

249:                                              ; preds = %246
  %250 = load i64, ptr %101, align 8
  %251 = icmp ugt i64 %250, 4294967295
  br i1 %251, label %252, label %255

252:                                              ; preds = %249, %246
  %253 = load ptr, ptr %121, align 8
  %254 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %253, i32 0, i32 4
  store i32 1, ptr %254, align 4
  br label %255

255:                                              ; preds = %252, %249
  br label %256

256:                                              ; preds = %255, %237
  %257 = load i32, ptr %100, align 4
  %258 = and i32 %257, 1024
  %259 = icmp ne i32 %258, 0
  br i1 %259, label %272, label %260

260:                                              ; preds = %256
  %261 = load i64, ptr %101, align 8
  %262 = icmp ne i64 %261, 0
  br i1 %262, label %263, label %272

263:                                              ; preds = %260
  %264 = load ptr, ptr %94, align 8
  store ptr %264, ptr %55, align 8
  store i32 24, ptr %56, align 4
  %265 = load ptr, ptr %55, align 8
  %266 = icmp ne ptr %265, null
  br i1 %266, label %267, label %271

267:                                              ; preds = %263
  %268 = load i32, ptr %56, align 4
  %269 = load ptr, ptr %55, align 8
  %270 = getelementptr inbounds %struct.mz_zip_archive, ptr %269, i32 0, i32 5
  store i32 %268, ptr %270, align 4
  br label %271

271:                                              ; preds = %263, %267
  store i32 0, ptr %93, align 4
  br label %1212

272:                                              ; preds = %260, %256
  %273 = load ptr, ptr %95, align 8
  %274 = call i32 @mz_zip_writer_validate_archive_name(ptr noundef %273)
  %275 = icmp ne i32 %274, 0
  br i1 %275, label %285, label %276

276:                                              ; preds = %272
  %277 = load ptr, ptr %94, align 8
  store ptr %277, ptr %57, align 8
  store i32 25, ptr %58, align 4
  %278 = load ptr, ptr %57, align 8
  %279 = icmp ne ptr %278, null
  br i1 %279, label %280, label %284

280:                                              ; preds = %276
  %281 = load i32, ptr %58, align 4
  %282 = load ptr, ptr %57, align 8
  %283 = getelementptr inbounds %struct.mz_zip_archive, ptr %282, i32 0, i32 5
  store i32 %281, ptr %283, align 4
  br label %284

284:                                              ; preds = %276, %280
  store i32 0, ptr %93, align 4
  br label %1212

285:                                              ; preds = %272
  %286 = load ptr, ptr %103, align 8
  %287 = icmp ne ptr %286, null
  br i1 %287, label %288, label %291

288:                                              ; preds = %285
  %289 = load ptr, ptr %103, align 8
  %290 = load i64, ptr %289, align 8
  call void @mz_zip_time_t_to_dos_time(i64 noundef %290, ptr noundef %109, ptr noundef %110)
  br label %294

291:                                              ; preds = %285
  %292 = call i64 @time(ptr noundef %126)
  %293 = load i64, ptr %126, align 8
  call void @mz_zip_time_t_to_dos_time(i64 noundef %293, ptr noundef %109, ptr noundef %110)
  br label %294

294:                                              ; preds = %291, %288
  %295 = load i32, ptr %100, align 4
  %296 = and i32 %295, 1024
  %297 = icmp ne i32 %296, 0
  br i1 %297, label %308, label %298

298:                                              ; preds = %294
  %299 = load ptr, ptr %96, align 8
  %300 = load i64, ptr %97, align 8
  %301 = call i64 @mz_crc32(i64 noundef 0, ptr noundef %299, i64 noundef %300)
  %302 = trunc i64 %301 to i32
  store i32 %302, ptr %102, align 4
  %303 = load i64, ptr %97, align 8
  store i64 %303, ptr %101, align 8
  %304 = load i64, ptr %101, align 8
  %305 = icmp ule i64 %304, 3
  br i1 %305, label %306, label %307

306:                                              ; preds = %298
  store i32 0, ptr %111, align 4
  store i32 1, ptr %120, align 4
  br label %307

307:                                              ; preds = %306, %298
  br label %308

308:                                              ; preds = %307, %294
  %309 = load ptr, ptr %95, align 8
  %310 = call i64 @strlen(ptr noundef %309)
  store i64 %310, ptr %117, align 8
  %311 = load i64, ptr %117, align 8
  %312 = icmp ugt i64 %311, 65535
  br i1 %312, label %313, label %322

313:                                              ; preds = %308
  %314 = load ptr, ptr %94, align 8
  store ptr %314, ptr %59, align 8
  store i32 25, ptr %60, align 4
  %315 = load ptr, ptr %59, align 8
  %316 = icmp ne ptr %315, null
  br i1 %316, label %317, label %321

317:                                              ; preds = %313
  %318 = load i32, ptr %60, align 4
  %319 = load ptr, ptr %59, align 8
  %320 = getelementptr inbounds %struct.mz_zip_archive, ptr %319, i32 0, i32 5
  store i32 %318, ptr %320, align 4
  br label %321

321:                                              ; preds = %313, %317
  store i32 0, ptr %93, align 4
  br label %1212

322:                                              ; preds = %308
  %323 = load ptr, ptr %94, align 8
  %324 = call i32 @mz_zip_writer_compute_padding_needed_for_file_alignment(ptr noundef %323)
  store i32 %324, ptr %113, align 4
  %325 = load ptr, ptr %121, align 8
  %326 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %325, i32 0, i32 0
  %327 = getelementptr inbounds %struct.mz_zip_array, ptr %326, i32 0, i32 1
  %328 = load i64, ptr %327, align 8
  %329 = add i64 %328, 46
  %330 = load i64, ptr %117, align 8
  %331 = add i64 %329, %330
  %332 = add i64 %331, 28
  %333 = load i16, ptr %99, align 2
  %334 = zext i16 %333 to i64
  %335 = add i64 %332, %334
  %336 = icmp uge i64 %335, 4294967295
  br i1 %336, label %337, label %346

337:                                              ; preds = %322
  %338 = load ptr, ptr %94, align 8
  store ptr %338, ptr %61, align 8
  store i32 15, ptr %62, align 4
  %339 = load ptr, ptr %61, align 8
  %340 = icmp ne ptr %339, null
  br i1 %340, label %341, label %345

341:                                              ; preds = %337
  %342 = load i32, ptr %62, align 4
  %343 = load ptr, ptr %61, align 8
  %344 = getelementptr inbounds %struct.mz_zip_archive, ptr %343, i32 0, i32 5
  store i32 %342, ptr %344, align 4
  br label %345

345:                                              ; preds = %337, %341
  store i32 0, ptr %93, align 4
  br label %1212

346:                                              ; preds = %322
  %347 = load ptr, ptr %121, align 8
  %348 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %347, i32 0, i32 4
  %349 = load i32, ptr %348, align 4
  %350 = icmp ne i32 %349, 0
  br i1 %350, label %385, label %351

351:                                              ; preds = %346
  %352 = load ptr, ptr %94, align 8
  %353 = getelementptr inbounds %struct.mz_zip_archive, ptr %352, i32 0, i32 0
  %354 = load i64, ptr %353, align 8
  %355 = load i32, ptr %113, align 4
  %356 = zext i32 %355 to i64
  %357 = add i64 %354, %356
  %358 = add i64 %357, 30
  %359 = load i64, ptr %117, align 8
  %360 = add i64 %358, %359
  %361 = add i64 %360, 46
  %362 = load i64, ptr %117, align 8
  %363 = add i64 %361, %362
  %364 = load i16, ptr %99, align 2
  %365 = zext i16 %364 to i64
  %366 = add i64 %363, %365
  %367 = load i32, ptr %105, align 4
  %368 = zext i32 %367 to i64
  %369 = add i64 %366, %368
  %370 = load ptr, ptr %121, align 8
  %371 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %370, i32 0, i32 0
  %372 = getelementptr inbounds %struct.mz_zip_array, ptr %371, i32 0, i32 1
  %373 = load i64, ptr %372, align 8
  %374 = add i64 %369, %373
  %375 = add i64 %374, 22
  %376 = load i32, ptr %107, align 4
  %377 = zext i32 %376 to i64
  %378 = add i64 %375, %377
  %379 = add i64 %378, 16
  %380 = icmp ugt i64 %379, 4294967295
  br i1 %380, label %381, label %384

381:                                              ; preds = %351
  %382 = load ptr, ptr %121, align 8
  %383 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %382, i32 0, i32 4
  store i32 1, ptr %383, align 4
  br label %384

384:                                              ; preds = %381, %351
  br label %385

385:                                              ; preds = %384, %346
  %386 = load i64, ptr %117, align 8
  %387 = icmp ne i64 %386, 0
  br i1 %387, label %388, label %414

388:                                              ; preds = %385
  %389 = load ptr, ptr %95, align 8
  %390 = load i64, ptr %117, align 8
  %391 = sub i64 %390, 1
  %392 = getelementptr inbounds i8, ptr %389, i64 %391
  %393 = load i8, ptr %392, align 1
  %394 = sext i8 %393 to i32
  %395 = icmp eq i32 %394, 47
  br i1 %395, label %396, label %414

396:                                              ; preds = %388
  %397 = load i32, ptr %112, align 4
  %398 = or i32 %397, 16
  store i32 %398, ptr %112, align 4
  %399 = load i64, ptr %97, align 8
  %400 = icmp ne i64 %399, 0
  br i1 %400, label %404, label %401

401:                                              ; preds = %396
  %402 = load i64, ptr %101, align 8
  %403 = icmp ne i64 %402, 0
  br i1 %403, label %404, label %413

404:                                              ; preds = %401, %396
  %405 = load ptr, ptr %94, align 8
  store ptr %405, ptr %63, align 8
  store i32 24, ptr %64, align 4
  %406 = load ptr, ptr %63, align 8
  %407 = icmp ne ptr %406, null
  br i1 %407, label %408, label %412

408:                                              ; preds = %404
  %409 = load i32, ptr %64, align 4
  %410 = load ptr, ptr %63, align 8
  %411 = getelementptr inbounds %struct.mz_zip_archive, ptr %410, i32 0, i32 5
  store i32 %409, ptr %411, align 4
  br label %412

412:                                              ; preds = %404, %408
  store i32 0, ptr %93, align 4
  br label %1212

413:                                              ; preds = %401
  br label %414

414:                                              ; preds = %413, %388, %385
  %415 = load ptr, ptr %94, align 8
  %416 = load ptr, ptr %121, align 8
  %417 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %416, i32 0, i32 0
  %418 = load i64, ptr %117, align 8
  %419 = add i64 46, %418
  %420 = load i16, ptr %99, align 2
  %421 = zext i16 %420 to i64
  %422 = add i64 %419, %421
  %423 = load ptr, ptr %121, align 8
  %424 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %423, i32 0, i32 4
  %425 = load i32, ptr %424, align 4
  %426 = icmp ne i32 %425, 0
  %427 = zext i1 %426 to i64
  %428 = select i1 %426, i64 28, i64 0
  %429 = add i64 %422, %428
  store ptr %415, ptr %45, align 8
  store ptr %417, ptr %46, align 8
  store i64 %429, ptr %47, align 8
  %430 = load ptr, ptr %45, align 8
  %431 = load ptr, ptr %46, align 8
  %432 = load ptr, ptr %46, align 8
  %433 = getelementptr inbounds %struct.mz_zip_array, ptr %432, i32 0, i32 1
  %434 = load i64, ptr %433, align 8
  %435 = load i64, ptr %47, align 8
  %436 = add i64 %434, %435
  store ptr %430, ptr %21, align 8
  store ptr %431, ptr %22, align 8
  store i64 %436, ptr %23, align 8
  store i32 1, ptr %24, align 4
  %437 = load i64, ptr %23, align 8
  %438 = load ptr, ptr %22, align 8
  %439 = getelementptr inbounds %struct.mz_zip_array, ptr %438, i32 0, i32 2
  %440 = load i64, ptr %439, align 8
  %441 = icmp ugt i64 %437, %440
  br i1 %441, label %442, label %451

442:                                              ; preds = %414
  %443 = load ptr, ptr %21, align 8
  %444 = load ptr, ptr %22, align 8
  %445 = load i64, ptr %23, align 8
  %446 = load i32, ptr %24, align 4
  %447 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %443, ptr noundef %444, i64 noundef %445, i32 noundef %446)
  %448 = icmp ne i32 %447, 0
  br i1 %448, label %450, label %449

449:                                              ; preds = %442
  store i32 0, ptr %20, align 4
  br label %452

450:                                              ; preds = %442
  br label %451

451:                                              ; preds = %450, %414
  store i32 1, ptr %20, align 4
  br label %452

452:                                              ; preds = %449, %451
  %453 = load i32, ptr %20, align 4
  %454 = icmp ne i32 %453, 0
  br i1 %454, label %455, label %484

455:                                              ; preds = %452
  %456 = load ptr, ptr %94, align 8
  %457 = load ptr, ptr %121, align 8
  %458 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %457, i32 0, i32 1
  store ptr %456, ptr %48, align 8
  store ptr %458, ptr %49, align 8
  store i64 1, ptr %50, align 8
  %459 = load ptr, ptr %48, align 8
  %460 = load ptr, ptr %49, align 8
  %461 = load ptr, ptr %49, align 8
  %462 = getelementptr inbounds %struct.mz_zip_array, ptr %461, i32 0, i32 1
  %463 = load i64, ptr %462, align 8
  %464 = load i64, ptr %50, align 8
  %465 = add i64 %463, %464
  store ptr %459, ptr %16, align 8
  store ptr %460, ptr %17, align 8
  store i64 %465, ptr %18, align 8
  store i32 1, ptr %19, align 4
  %466 = load i64, ptr %18, align 8
  %467 = load ptr, ptr %17, align 8
  %468 = getelementptr inbounds %struct.mz_zip_array, ptr %467, i32 0, i32 2
  %469 = load i64, ptr %468, align 8
  %470 = icmp ugt i64 %466, %469
  br i1 %470, label %471, label %480

471:                                              ; preds = %455
  %472 = load ptr, ptr %16, align 8
  %473 = load ptr, ptr %17, align 8
  %474 = load i64, ptr %18, align 8
  %475 = load i32, ptr %19, align 4
  %476 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %472, ptr noundef %473, i64 noundef %474, i32 noundef %475)
  %477 = icmp ne i32 %476, 0
  br i1 %477, label %479, label %478

478:                                              ; preds = %471
  store i32 0, ptr %15, align 4
  br label %481

479:                                              ; preds = %471
  br label %480

480:                                              ; preds = %479, %455
  store i32 1, ptr %15, align 4
  br label %481

481:                                              ; preds = %478, %480
  %482 = load i32, ptr %15, align 4
  %483 = icmp ne i32 %482, 0
  br i1 %483, label %493, label %484

484:                                              ; preds = %481, %452
  %485 = load ptr, ptr %94, align 8
  store ptr %485, ptr %65, align 8
  store i32 16, ptr %66, align 4
  %486 = load ptr, ptr %65, align 8
  %487 = icmp ne ptr %486, null
  br i1 %487, label %488, label %492

488:                                              ; preds = %484
  %489 = load i32, ptr %66, align 4
  %490 = load ptr, ptr %65, align 8
  %491 = getelementptr inbounds %struct.mz_zip_archive, ptr %490, i32 0, i32 5
  store i32 %489, ptr %491, align 4
  br label %492

492:                                              ; preds = %484, %488
  store i32 0, ptr %93, align 4
  br label %1212

493:                                              ; preds = %481
  %494 = load i32, ptr %120, align 4
  %495 = icmp ne i32 %494, 0
  br i1 %495, label %518, label %496

496:                                              ; preds = %493
  %497 = load i64, ptr %97, align 8
  %498 = icmp ne i64 %497, 0
  br i1 %498, label %499, label %518

499:                                              ; preds = %496
  %500 = load ptr, ptr %94, align 8
  %501 = getelementptr inbounds %struct.mz_zip_archive, ptr %500, i32 0, i32 7
  %502 = load ptr, ptr %501, align 8
  %503 = load ptr, ptr %94, align 8
  %504 = getelementptr inbounds %struct.mz_zip_archive, ptr %503, i32 0, i32 10
  %505 = load ptr, ptr %504, align 8
  %506 = call ptr %502(ptr noundef %505, i64 noundef 1, i64 noundef 319352)
  store ptr %506, ptr %119, align 8
  %507 = icmp eq ptr null, %506
  br i1 %507, label %508, label %517

508:                                              ; preds = %499
  %509 = load ptr, ptr %94, align 8
  store ptr %509, ptr %67, align 8
  store i32 16, ptr %68, align 4
  %510 = load ptr, ptr %67, align 8
  %511 = icmp ne ptr %510, null
  br i1 %511, label %512, label %516

512:                                              ; preds = %508
  %513 = load i32, ptr %68, align 4
  %514 = load ptr, ptr %67, align 8
  %515 = getelementptr inbounds %struct.mz_zip_archive, ptr %514, i32 0, i32 5
  store i32 %513, ptr %515, align 4
  br label %516

516:                                              ; preds = %508, %512
  store i32 0, ptr %93, align 4
  br label %1212

517:                                              ; preds = %499
  br label %518

518:                                              ; preds = %517, %496, %493
  %519 = load ptr, ptr %94, align 8
  %520 = load i64, ptr %115, align 8
  %521 = load i32, ptr %113, align 4
  %522 = call i32 @mz_zip_writer_write_zeros(ptr noundef %519, i64 noundef %520, i32 noundef %521)
  %523 = icmp ne i32 %522, 0
  br i1 %523, label %532, label %524

524:                                              ; preds = %518
  %525 = load ptr, ptr %94, align 8
  %526 = getelementptr inbounds %struct.mz_zip_archive, ptr %525, i32 0, i32 8
  %527 = load ptr, ptr %526, align 8
  %528 = load ptr, ptr %94, align 8
  %529 = getelementptr inbounds %struct.mz_zip_archive, ptr %528, i32 0, i32 10
  %530 = load ptr, ptr %529, align 8
  %531 = load ptr, ptr %119, align 8
  call void %527(ptr noundef %530, ptr noundef %531)
  store i32 0, ptr %93, align 4
  br label %1212

532:                                              ; preds = %518
  %533 = load i32, ptr %113, align 4
  %534 = zext i32 %533 to i64
  %535 = load i64, ptr %114, align 8
  %536 = add i64 %535, %534
  store i64 %536, ptr %114, align 8
  %537 = load ptr, ptr %94, align 8
  %538 = getelementptr inbounds %struct.mz_zip_archive, ptr %537, i32 0, i32 6
  %539 = load i64, ptr %538, align 8
  %540 = icmp ne i64 %539, 0
  br i1 %540, label %541, label %557

541:                                              ; preds = %532
  %542 = load i64, ptr %114, align 8
  %543 = load ptr, ptr %94, align 8
  %544 = getelementptr inbounds %struct.mz_zip_archive, ptr %543, i32 0, i32 6
  %545 = load i64, ptr %544, align 8
  %546 = sub i64 %545, 1
  %547 = and i64 %542, %546
  %548 = icmp eq i64 %547, 0
  %549 = xor i1 %548, true
  %550 = zext i1 %549 to i32
  %551 = sext i32 %550 to i64
  %552 = icmp ne i64 %551, 0
  br i1 %552, label %553, label %555

553:                                              ; preds = %541
  call void @__assert_rtn(ptr noundef @__func__.mz_zip_writer_add_mem_ex_v2, ptr noundef @.str.11, i32 noundef 7764, ptr noundef @.str.22) #12
  unreachable

554:                                              ; No predecessors!
  br label %556

555:                                              ; preds = %541
  br label %556

556:                                              ; preds = %555, %554
  br label %557

557:                                              ; preds = %556, %532
  %558 = load i32, ptr %113, align 4
  %559 = zext i32 %558 to i64
  %560 = load i64, ptr %115, align 8
  %561 = add i64 %560, %559
  store i64 %561, ptr %115, align 8
  %562 = getelementptr inbounds [30 x i8], ptr %118, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 16 %562, i8 0, i64 30, i1 false)
  %563 = load i32, ptr %120, align 4
  %564 = icmp ne i32 %563, 0
  br i1 %564, label %565, label %569

565:                                              ; preds = %557
  %566 = load i32, ptr %100, align 4
  %567 = and i32 %566, 1024
  %568 = icmp ne i32 %567, 0
  br i1 %568, label %569, label %570

569:                                              ; preds = %565, %557
  store i16 8, ptr %108, align 2
  br label %570

570:                                              ; preds = %569, %565
  %571 = load ptr, ptr %121, align 8
  %572 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %571, i32 0, i32 4
  %573 = load i32, ptr %572, align 4
  %574 = icmp ne i32 %573, 0
  br i1 %574, label %575, label %714

575:                                              ; preds = %570
  %576 = load i64, ptr %101, align 8
  %577 = icmp uge i64 %576, 4294967295
  br i1 %577, label %581, label %578

578:                                              ; preds = %575
  %579 = load i64, ptr %114, align 8
  %580 = icmp uge i64 %579, 4294967295
  br i1 %580, label %581, label %603

581:                                              ; preds = %578, %575
  %582 = getelementptr inbounds [28 x i8], ptr %124, i64 0, i64 0
  store ptr %582, ptr %122, align 8
  %583 = getelementptr inbounds [28 x i8], ptr %124, i64 0, i64 0
  %584 = load i64, ptr %101, align 8
  %585 = icmp uge i64 %584, 4294967295
  br i1 %585, label %586, label %587

586:                                              ; preds = %581
  br label %588

587:                                              ; preds = %581
  br label %588

588:                                              ; preds = %587, %586
  %589 = phi ptr [ %101, %586 ], [ null, %587 ]
  %590 = load i64, ptr %101, align 8
  %591 = icmp uge i64 %590, 4294967295
  br i1 %591, label %592, label %593

592:                                              ; preds = %588
  br label %594

593:                                              ; preds = %588
  br label %594

594:                                              ; preds = %593, %592
  %595 = phi ptr [ %116, %592 ], [ null, %593 ]
  %596 = load i64, ptr %114, align 8
  %597 = icmp uge i64 %596, 4294967295
  br i1 %597, label %598, label %599

598:                                              ; preds = %594
  br label %600

599:                                              ; preds = %594
  br label %600

600:                                              ; preds = %599, %598
  %601 = phi ptr [ %114, %598 ], [ null, %599 ]
  %602 = call i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef %583, ptr noundef %589, ptr noundef %595, ptr noundef %601)
  store i32 %602, ptr %123, align 4
  br label %603

603:                                              ; preds = %600, %578
  %604 = load ptr, ptr %94, align 8
  %605 = getelementptr inbounds [30 x i8], ptr %118, i64 0, i64 0
  %606 = load i64, ptr %117, align 8
  %607 = trunc i64 %606 to i16
  %608 = load i32, ptr %123, align 4
  %609 = load i32, ptr %105, align 4
  %610 = add i32 %608, %609
  %611 = trunc i32 %610 to i16
  %612 = load i16, ptr %108, align 2
  %613 = load i16, ptr %125, align 2
  %614 = load i16, ptr %109, align 2
  %615 = load i16, ptr %110, align 2
  %616 = call i32 @mz_zip_writer_create_local_dir_header(ptr noundef %604, ptr noundef %605, i16 noundef zeroext %607, i16 noundef zeroext %611, i64 noundef 0, i64 noundef 0, i32 noundef 0, i16 noundef zeroext %612, i16 noundef zeroext %613, i16 noundef zeroext %614, i16 noundef zeroext %615)
  %617 = icmp ne i32 %616, 0
  br i1 %617, label %627, label %618

618:                                              ; preds = %603
  %619 = load ptr, ptr %94, align 8
  store ptr %619, ptr %69, align 8
  store i32 27, ptr %70, align 4
  %620 = load ptr, ptr %69, align 8
  %621 = icmp ne ptr %620, null
  br i1 %621, label %622, label %626

622:                                              ; preds = %618
  %623 = load i32, ptr %70, align 4
  %624 = load ptr, ptr %69, align 8
  %625 = getelementptr inbounds %struct.mz_zip_archive, ptr %624, i32 0, i32 5
  store i32 %623, ptr %625, align 4
  br label %626

626:                                              ; preds = %618, %622
  store i32 0, ptr %93, align 4
  br label %1212

627:                                              ; preds = %603
  %628 = load ptr, ptr %94, align 8
  %629 = getelementptr inbounds %struct.mz_zip_archive, ptr %628, i32 0, i32 12
  %630 = load ptr, ptr %629, align 8
  %631 = load ptr, ptr %94, align 8
  %632 = getelementptr inbounds %struct.mz_zip_archive, ptr %631, i32 0, i32 14
  %633 = load ptr, ptr %632, align 8
  %634 = load i64, ptr %114, align 8
  %635 = getelementptr inbounds [30 x i8], ptr %118, i64 0, i64 0
  %636 = call i64 %630(ptr noundef %633, i64 noundef %634, ptr noundef %635, i64 noundef 30)
  %637 = icmp ne i64 %636, 30
  br i1 %637, label %638, label %647

638:                                              ; preds = %627
  %639 = load ptr, ptr %94, align 8
  store ptr %639, ptr %71, align 8
  store i32 19, ptr %72, align 4
  %640 = load ptr, ptr %71, align 8
  %641 = icmp ne ptr %640, null
  br i1 %641, label %642, label %646

642:                                              ; preds = %638
  %643 = load i32, ptr %72, align 4
  %644 = load ptr, ptr %71, align 8
  %645 = getelementptr inbounds %struct.mz_zip_archive, ptr %644, i32 0, i32 5
  store i32 %643, ptr %645, align 4
  br label %646

646:                                              ; preds = %638, %642
  store i32 0, ptr %93, align 4
  br label %1212

647:                                              ; preds = %627
  %648 = load i64, ptr %115, align 8
  %649 = add i64 %648, 30
  store i64 %649, ptr %115, align 8
  %650 = load ptr, ptr %94, align 8
  %651 = getelementptr inbounds %struct.mz_zip_archive, ptr %650, i32 0, i32 12
  %652 = load ptr, ptr %651, align 8
  %653 = load ptr, ptr %94, align 8
  %654 = getelementptr inbounds %struct.mz_zip_archive, ptr %653, i32 0, i32 14
  %655 = load ptr, ptr %654, align 8
  %656 = load i64, ptr %115, align 8
  %657 = load ptr, ptr %95, align 8
  %658 = load i64, ptr %117, align 8
  %659 = call i64 %652(ptr noundef %655, i64 noundef %656, ptr noundef %657, i64 noundef %658)
  %660 = load i64, ptr %117, align 8
  %661 = icmp ne i64 %659, %660
  br i1 %661, label %662, label %678

662:                                              ; preds = %647
  %663 = load ptr, ptr %94, align 8
  %664 = getelementptr inbounds %struct.mz_zip_archive, ptr %663, i32 0, i32 8
  %665 = load ptr, ptr %664, align 8
  %666 = load ptr, ptr %94, align 8
  %667 = getelementptr inbounds %struct.mz_zip_archive, ptr %666, i32 0, i32 10
  %668 = load ptr, ptr %667, align 8
  %669 = load ptr, ptr %119, align 8
  call void %665(ptr noundef %668, ptr noundef %669)
  %670 = load ptr, ptr %94, align 8
  store ptr %670, ptr %73, align 8
  store i32 19, ptr %74, align 4
  %671 = load ptr, ptr %73, align 8
  %672 = icmp ne ptr %671, null
  br i1 %672, label %673, label %677

673:                                              ; preds = %662
  %674 = load i32, ptr %74, align 4
  %675 = load ptr, ptr %73, align 8
  %676 = getelementptr inbounds %struct.mz_zip_archive, ptr %675, i32 0, i32 5
  store i32 %674, ptr %676, align 4
  br label %677

677:                                              ; preds = %662, %673
  store i32 0, ptr %93, align 4
  br label %1212

678:                                              ; preds = %647
  %679 = load i64, ptr %117, align 8
  %680 = load i64, ptr %115, align 8
  %681 = add i64 %680, %679
  store i64 %681, ptr %115, align 8
  %682 = load ptr, ptr %122, align 8
  %683 = icmp ne ptr %682, null
  br i1 %683, label %684, label %713

684:                                              ; preds = %678
  %685 = load ptr, ptr %94, align 8
  %686 = getelementptr inbounds %struct.mz_zip_archive, ptr %685, i32 0, i32 12
  %687 = load ptr, ptr %686, align 8
  %688 = load ptr, ptr %94, align 8
  %689 = getelementptr inbounds %struct.mz_zip_archive, ptr %688, i32 0, i32 14
  %690 = load ptr, ptr %689, align 8
  %691 = load i64, ptr %115, align 8
  %692 = getelementptr inbounds [28 x i8], ptr %124, i64 0, i64 0
  %693 = load i32, ptr %123, align 4
  %694 = zext i32 %693 to i64
  %695 = call i64 %687(ptr noundef %690, i64 noundef %691, ptr noundef %692, i64 noundef %694)
  %696 = load i32, ptr %123, align 4
  %697 = zext i32 %696 to i64
  %698 = icmp ne i64 %695, %697
  br i1 %698, label %699, label %708

699:                                              ; preds = %684
  %700 = load ptr, ptr %94, align 8
  store ptr %700, ptr %75, align 8
  store i32 19, ptr %76, align 4
  %701 = load ptr, ptr %75, align 8
  %702 = icmp ne ptr %701, null
  br i1 %702, label %703, label %707

703:                                              ; preds = %699
  %704 = load i32, ptr %76, align 4
  %705 = load ptr, ptr %75, align 8
  %706 = getelementptr inbounds %struct.mz_zip_archive, ptr %705, i32 0, i32 5
  store i32 %704, ptr %706, align 4
  br label %707

707:                                              ; preds = %699, %703
  store i32 0, ptr %93, align 4
  br label %1212

708:                                              ; preds = %684
  %709 = load i32, ptr %123, align 4
  %710 = zext i32 %709 to i64
  %711 = load i64, ptr %115, align 8
  %712 = add i64 %711, %710
  store i64 %712, ptr %115, align 8
  br label %713

713:                                              ; preds = %708, %678
  br label %806

714:                                              ; preds = %570
  %715 = load i64, ptr %116, align 8
  %716 = icmp ugt i64 %715, 4294967295
  br i1 %716, label %720, label %717

717:                                              ; preds = %714
  %718 = load i64, ptr %115, align 8
  %719 = icmp ugt i64 %718, 4294967295
  br i1 %719, label %720, label %729

720:                                              ; preds = %717, %714
  %721 = load ptr, ptr %94, align 8
  store ptr %721, ptr %77, align 8
  store i32 29, ptr %78, align 4
  %722 = load ptr, ptr %77, align 8
  %723 = icmp ne ptr %722, null
  br i1 %723, label %724, label %728

724:                                              ; preds = %720
  %725 = load i32, ptr %78, align 4
  %726 = load ptr, ptr %77, align 8
  %727 = getelementptr inbounds %struct.mz_zip_archive, ptr %726, i32 0, i32 5
  store i32 %725, ptr %727, align 4
  br label %728

728:                                              ; preds = %720, %724
  store i32 0, ptr %93, align 4
  br label %1212

729:                                              ; preds = %717
  %730 = load ptr, ptr %94, align 8
  %731 = getelementptr inbounds [30 x i8], ptr %118, i64 0, i64 0
  %732 = load i64, ptr %117, align 8
  %733 = trunc i64 %732 to i16
  %734 = load i32, ptr %105, align 4
  %735 = trunc i32 %734 to i16
  %736 = load i16, ptr %108, align 2
  %737 = load i16, ptr %125, align 2
  %738 = load i16, ptr %109, align 2
  %739 = load i16, ptr %110, align 2
  %740 = call i32 @mz_zip_writer_create_local_dir_header(ptr noundef %730, ptr noundef %731, i16 noundef zeroext %733, i16 noundef zeroext %735, i64 noundef 0, i64 noundef 0, i32 noundef 0, i16 noundef zeroext %736, i16 noundef zeroext %737, i16 noundef zeroext %738, i16 noundef zeroext %739)
  %741 = icmp ne i32 %740, 0
  br i1 %741, label %751, label %742

742:                                              ; preds = %729
  %743 = load ptr, ptr %94, align 8
  store ptr %743, ptr %79, align 8
  store i32 27, ptr %80, align 4
  %744 = load ptr, ptr %79, align 8
  %745 = icmp ne ptr %744, null
  br i1 %745, label %746, label %750

746:                                              ; preds = %742
  %747 = load i32, ptr %80, align 4
  %748 = load ptr, ptr %79, align 8
  %749 = getelementptr inbounds %struct.mz_zip_archive, ptr %748, i32 0, i32 5
  store i32 %747, ptr %749, align 4
  br label %750

750:                                              ; preds = %742, %746
  store i32 0, ptr %93, align 4
  br label %1212

751:                                              ; preds = %729
  %752 = load ptr, ptr %94, align 8
  %753 = getelementptr inbounds %struct.mz_zip_archive, ptr %752, i32 0, i32 12
  %754 = load ptr, ptr %753, align 8
  %755 = load ptr, ptr %94, align 8
  %756 = getelementptr inbounds %struct.mz_zip_archive, ptr %755, i32 0, i32 14
  %757 = load ptr, ptr %756, align 8
  %758 = load i64, ptr %114, align 8
  %759 = getelementptr inbounds [30 x i8], ptr %118, i64 0, i64 0
  %760 = call i64 %754(ptr noundef %757, i64 noundef %758, ptr noundef %759, i64 noundef 30)
  %761 = icmp ne i64 %760, 30
  br i1 %761, label %762, label %771

762:                                              ; preds = %751
  %763 = load ptr, ptr %94, align 8
  store ptr %763, ptr %81, align 8
  store i32 19, ptr %82, align 4
  %764 = load ptr, ptr %81, align 8
  %765 = icmp ne ptr %764, null
  br i1 %765, label %766, label %770

766:                                              ; preds = %762
  %767 = load i32, ptr %82, align 4
  %768 = load ptr, ptr %81, align 8
  %769 = getelementptr inbounds %struct.mz_zip_archive, ptr %768, i32 0, i32 5
  store i32 %767, ptr %769, align 4
  br label %770

770:                                              ; preds = %762, %766
  store i32 0, ptr %93, align 4
  br label %1212

771:                                              ; preds = %751
  %772 = load i64, ptr %115, align 8
  %773 = add i64 %772, 30
  store i64 %773, ptr %115, align 8
  %774 = load ptr, ptr %94, align 8
  %775 = getelementptr inbounds %struct.mz_zip_archive, ptr %774, i32 0, i32 12
  %776 = load ptr, ptr %775, align 8
  %777 = load ptr, ptr %94, align 8
  %778 = getelementptr inbounds %struct.mz_zip_archive, ptr %777, i32 0, i32 14
  %779 = load ptr, ptr %778, align 8
  %780 = load i64, ptr %115, align 8
  %781 = load ptr, ptr %95, align 8
  %782 = load i64, ptr %117, align 8
  %783 = call i64 %776(ptr noundef %779, i64 noundef %780, ptr noundef %781, i64 noundef %782)
  %784 = load i64, ptr %117, align 8
  %785 = icmp ne i64 %783, %784
  br i1 %785, label %786, label %802

786:                                              ; preds = %771
  %787 = load ptr, ptr %94, align 8
  %788 = getelementptr inbounds %struct.mz_zip_archive, ptr %787, i32 0, i32 8
  %789 = load ptr, ptr %788, align 8
  %790 = load ptr, ptr %94, align 8
  %791 = getelementptr inbounds %struct.mz_zip_archive, ptr %790, i32 0, i32 10
  %792 = load ptr, ptr %791, align 8
  %793 = load ptr, ptr %119, align 8
  call void %789(ptr noundef %792, ptr noundef %793)
  %794 = load ptr, ptr %94, align 8
  store ptr %794, ptr %83, align 8
  store i32 19, ptr %84, align 4
  %795 = load ptr, ptr %83, align 8
  %796 = icmp ne ptr %795, null
  br i1 %796, label %797, label %801

797:                                              ; preds = %786
  %798 = load i32, ptr %84, align 4
  %799 = load ptr, ptr %83, align 8
  %800 = getelementptr inbounds %struct.mz_zip_archive, ptr %799, i32 0, i32 5
  store i32 %798, ptr %800, align 4
  br label %801

801:                                              ; preds = %786, %797
  store i32 0, ptr %93, align 4
  br label %1212

802:                                              ; preds = %771
  %803 = load i64, ptr %117, align 8
  %804 = load i64, ptr %115, align 8
  %805 = add i64 %804, %803
  store i64 %805, ptr %115, align 8
  br label %806

806:                                              ; preds = %802, %713
  %807 = load i32, ptr %105, align 4
  %808 = icmp ugt i32 %807, 0
  br i1 %808, label %809, label %838

809:                                              ; preds = %806
  %810 = load ptr, ptr %94, align 8
  %811 = getelementptr inbounds %struct.mz_zip_archive, ptr %810, i32 0, i32 12
  %812 = load ptr, ptr %811, align 8
  %813 = load ptr, ptr %94, align 8
  %814 = getelementptr inbounds %struct.mz_zip_archive, ptr %813, i32 0, i32 14
  %815 = load ptr, ptr %814, align 8
  %816 = load i64, ptr %115, align 8
  %817 = load ptr, ptr %104, align 8
  %818 = load i32, ptr %105, align 4
  %819 = zext i32 %818 to i64
  %820 = call i64 %812(ptr noundef %815, i64 noundef %816, ptr noundef %817, i64 noundef %819)
  %821 = load i32, ptr %105, align 4
  %822 = zext i32 %821 to i64
  %823 = icmp ne i64 %820, %822
  br i1 %823, label %824, label %833

824:                                              ; preds = %809
  %825 = load ptr, ptr %94, align 8
  store ptr %825, ptr %85, align 8
  store i32 19, ptr %86, align 4
  %826 = load ptr, ptr %85, align 8
  %827 = icmp ne ptr %826, null
  br i1 %827, label %828, label %832

828:                                              ; preds = %824
  %829 = load i32, ptr %86, align 4
  %830 = load ptr, ptr %85, align 8
  %831 = getelementptr inbounds %struct.mz_zip_archive, ptr %830, i32 0, i32 5
  store i32 %829, ptr %831, align 4
  br label %832

832:                                              ; preds = %824, %828
  store i32 0, ptr %93, align 4
  br label %1212

833:                                              ; preds = %809
  %834 = load i32, ptr %105, align 4
  %835 = zext i32 %834 to i64
  %836 = load i64, ptr %115, align 8
  %837 = add i64 %836, %835
  store i64 %837, ptr %115, align 8
  br label %838

838:                                              ; preds = %833, %806
  %839 = load i32, ptr %120, align 4
  %840 = icmp ne i32 %839, 0
  br i1 %840, label %841, label %875

841:                                              ; preds = %838
  %842 = load ptr, ptr %94, align 8
  %843 = getelementptr inbounds %struct.mz_zip_archive, ptr %842, i32 0, i32 12
  %844 = load ptr, ptr %843, align 8
  %845 = load ptr, ptr %94, align 8
  %846 = getelementptr inbounds %struct.mz_zip_archive, ptr %845, i32 0, i32 14
  %847 = load ptr, ptr %846, align 8
  %848 = load i64, ptr %115, align 8
  %849 = load ptr, ptr %96, align 8
  %850 = load i64, ptr %97, align 8
  %851 = call i64 %844(ptr noundef %847, i64 noundef %848, ptr noundef %849, i64 noundef %850)
  %852 = load i64, ptr %97, align 8
  %853 = icmp ne i64 %851, %852
  br i1 %853, label %854, label %870

854:                                              ; preds = %841
  %855 = load ptr, ptr %94, align 8
  %856 = getelementptr inbounds %struct.mz_zip_archive, ptr %855, i32 0, i32 8
  %857 = load ptr, ptr %856, align 8
  %858 = load ptr, ptr %94, align 8
  %859 = getelementptr inbounds %struct.mz_zip_archive, ptr %858, i32 0, i32 10
  %860 = load ptr, ptr %859, align 8
  %861 = load ptr, ptr %119, align 8
  call void %857(ptr noundef %860, ptr noundef %861)
  %862 = load ptr, ptr %94, align 8
  store ptr %862, ptr %87, align 8
  store i32 19, ptr %88, align 4
  %863 = load ptr, ptr %87, align 8
  %864 = icmp ne ptr %863, null
  br i1 %864, label %865, label %869

865:                                              ; preds = %854
  %866 = load i32, ptr %88, align 4
  %867 = load ptr, ptr %87, align 8
  %868 = getelementptr inbounds %struct.mz_zip_archive, ptr %867, i32 0, i32 5
  store i32 %866, ptr %868, align 4
  br label %869

869:                                              ; preds = %854, %865
  store i32 0, ptr %93, align 4
  br label %1212

870:                                              ; preds = %841
  %871 = load i64, ptr %97, align 8
  %872 = load i64, ptr %115, align 8
  %873 = add i64 %872, %871
  store i64 %873, ptr %115, align 8
  %874 = load i64, ptr %97, align 8
  store i64 %874, ptr %116, align 8
  br label %917

875:                                              ; preds = %838
  %876 = load i64, ptr %97, align 8
  %877 = icmp ne i64 %876, 0
  br i1 %877, label %878, label %916

878:                                              ; preds = %875
  %879 = load ptr, ptr %94, align 8
  %880 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %127, i32 0, i32 0
  store ptr %879, ptr %880, align 8
  %881 = load i64, ptr %115, align 8
  %882 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %127, i32 0, i32 1
  store i64 %881, ptr %882, align 8
  %883 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %127, i32 0, i32 2
  store i64 0, ptr %883, align 8
  %884 = load ptr, ptr %119, align 8
  %885 = load i32, ptr %111, align 4
  %886 = call i32 @tdefl_create_comp_flags_from_zip_params(i32 noundef %885, i32 noundef -15, i32 noundef 0)
  %887 = call i32 @tdefl_init(ptr noundef %884, ptr noundef @mz_zip_writer_add_put_buf_callback, ptr noundef %127, i32 noundef %886)
  %888 = icmp ne i32 %887, 0
  br i1 %888, label %895, label %889

889:                                              ; preds = %878
  %890 = load ptr, ptr %119, align 8
  %891 = load ptr, ptr %96, align 8
  %892 = load i64, ptr %97, align 8
  %893 = call i32 @tdefl_compress_buffer(ptr noundef %890, ptr noundef %891, i64 noundef %892, i32 noundef 4)
  %894 = icmp ne i32 %893, 1
  br i1 %894, label %895, label %911

895:                                              ; preds = %889, %878
  %896 = load ptr, ptr %94, align 8
  %897 = getelementptr inbounds %struct.mz_zip_archive, ptr %896, i32 0, i32 8
  %898 = load ptr, ptr %897, align 8
  %899 = load ptr, ptr %94, align 8
  %900 = getelementptr inbounds %struct.mz_zip_archive, ptr %899, i32 0, i32 10
  %901 = load ptr, ptr %900, align 8
  %902 = load ptr, ptr %119, align 8
  call void %898(ptr noundef %901, ptr noundef %902)
  %903 = load ptr, ptr %94, align 8
  store ptr %903, ptr %89, align 8
  store i32 12, ptr %90, align 4
  %904 = load ptr, ptr %89, align 8
  %905 = icmp ne ptr %904, null
  br i1 %905, label %906, label %910

906:                                              ; preds = %895
  %907 = load i32, ptr %90, align 4
  %908 = load ptr, ptr %89, align 8
  %909 = getelementptr inbounds %struct.mz_zip_archive, ptr %908, i32 0, i32 5
  store i32 %907, ptr %909, align 4
  br label %910

910:                                              ; preds = %895, %906
  store i32 0, ptr %93, align 4
  br label %1212

911:                                              ; preds = %889
  %912 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %127, i32 0, i32 2
  %913 = load i64, ptr %912, align 8
  store i64 %913, ptr %116, align 8
  %914 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %127, i32 0, i32 1
  %915 = load i64, ptr %914, align 8
  store i64 %915, ptr %115, align 8
  br label %916

916:                                              ; preds = %911, %875
  br label %917

917:                                              ; preds = %916, %870
  %918 = load ptr, ptr %94, align 8
  %919 = getelementptr inbounds %struct.mz_zip_archive, ptr %918, i32 0, i32 8
  %920 = load ptr, ptr %919, align 8
  %921 = load ptr, ptr %94, align 8
  %922 = getelementptr inbounds %struct.mz_zip_archive, ptr %921, i32 0, i32 10
  %923 = load ptr, ptr %922, align 8
  %924 = load ptr, ptr %119, align 8
  call void %920(ptr noundef %923, ptr noundef %924)
  store ptr null, ptr %119, align 8
  %925 = load i64, ptr %101, align 8
  %926 = icmp ne i64 %925, 0
  br i1 %926, label %927, label %1156

927:                                              ; preds = %917
  store i32 16, ptr %129, align 4
  %928 = load i16, ptr %125, align 2
  %929 = zext i16 %928 to i32
  %930 = and i32 %929, 8
  %931 = icmp ne i32 %930, 0
  %932 = xor i1 %931, true
  %933 = zext i1 %932 to i32
  %934 = sext i32 %933 to i64
  %935 = icmp ne i64 %934, 0
  br i1 %935, label %936, label %938

936:                                              ; preds = %927
  call void @__assert_rtn(ptr noundef @__func__.mz_zip_writer_add_mem_ex_v2, ptr noundef @.str.11, i32 noundef 7873, ptr noundef @.str.23) #12
  unreachable

937:                                              ; No predecessors!
  br label %939

938:                                              ; preds = %927
  br label %939

939:                                              ; preds = %938, %937
  %940 = getelementptr inbounds [24 x i8], ptr %128, i64 0, i64 0
  %941 = getelementptr inbounds i8, ptr %940, i64 0
  store ptr %941, ptr %37, align 8
  store i32 134695760, ptr %38, align 4
  %942 = load i32, ptr %38, align 4
  %943 = trunc i32 %942 to i8
  %944 = load ptr, ptr %37, align 8
  store i8 %943, ptr %944, align 1
  %945 = load i32, ptr %38, align 4
  %946 = lshr i32 %945, 8
  %947 = trunc i32 %946 to i8
  %948 = load ptr, ptr %37, align 8
  %949 = getelementptr inbounds i8, ptr %948, i64 1
  store i8 %947, ptr %949, align 1
  %950 = load i32, ptr %38, align 4
  %951 = lshr i32 %950, 16
  %952 = trunc i32 %951 to i8
  %953 = load ptr, ptr %37, align 8
  %954 = getelementptr inbounds i8, ptr %953, i64 2
  store i8 %952, ptr %954, align 1
  %955 = load i32, ptr %38, align 4
  %956 = lshr i32 %955, 24
  %957 = trunc i32 %956 to i8
  %958 = load ptr, ptr %37, align 8
  %959 = getelementptr inbounds i8, ptr %958, i64 3
  store i8 %957, ptr %959, align 1
  %960 = getelementptr inbounds [24 x i8], ptr %128, i64 0, i64 0
  %961 = getelementptr inbounds i8, ptr %960, i64 4
  %962 = load i32, ptr %102, align 4
  store ptr %961, ptr %39, align 8
  store i32 %962, ptr %40, align 4
  %963 = load i32, ptr %40, align 4
  %964 = trunc i32 %963 to i8
  %965 = load ptr, ptr %39, align 8
  store i8 %964, ptr %965, align 1
  %966 = load i32, ptr %40, align 4
  %967 = lshr i32 %966, 8
  %968 = trunc i32 %967 to i8
  %969 = load ptr, ptr %39, align 8
  %970 = getelementptr inbounds i8, ptr %969, i64 1
  store i8 %968, ptr %970, align 1
  %971 = load i32, ptr %40, align 4
  %972 = lshr i32 %971, 16
  %973 = trunc i32 %972 to i8
  %974 = load ptr, ptr %39, align 8
  %975 = getelementptr inbounds i8, ptr %974, i64 2
  store i8 %973, ptr %975, align 1
  %976 = load i32, ptr %40, align 4
  %977 = lshr i32 %976, 24
  %978 = trunc i32 %977 to i8
  %979 = load ptr, ptr %39, align 8
  %980 = getelementptr inbounds i8, ptr %979, i64 3
  store i8 %978, ptr %980, align 1
  %981 = load ptr, ptr %122, align 8
  %982 = icmp eq ptr %981, null
  br i1 %982, label %983, label %1040

983:                                              ; preds = %939
  %984 = load i64, ptr %116, align 8
  %985 = icmp ugt i64 %984, 4294967295
  br i1 %985, label %986, label %995

986:                                              ; preds = %983
  %987 = load ptr, ptr %94, align 8
  store ptr %987, ptr %91, align 8
  store i32 29, ptr %92, align 4
  %988 = load ptr, ptr %91, align 8
  %989 = icmp ne ptr %988, null
  br i1 %989, label %990, label %994

990:                                              ; preds = %986
  %991 = load i32, ptr %92, align 4
  %992 = load ptr, ptr %91, align 8
  %993 = getelementptr inbounds %struct.mz_zip_archive, ptr %992, i32 0, i32 5
  store i32 %991, ptr %993, align 4
  br label %994

994:                                              ; preds = %986, %990
  store i32 0, ptr %93, align 4
  br label %1212

995:                                              ; preds = %983
  %996 = getelementptr inbounds [24 x i8], ptr %128, i64 0, i64 0
  %997 = getelementptr inbounds i8, ptr %996, i64 8
  %998 = load i64, ptr %116, align 8
  %999 = trunc i64 %998 to i32
  store ptr %997, ptr %41, align 8
  store i32 %999, ptr %42, align 4
  %1000 = load i32, ptr %42, align 4
  %1001 = trunc i32 %1000 to i8
  %1002 = load ptr, ptr %41, align 8
  store i8 %1001, ptr %1002, align 1
  %1003 = load i32, ptr %42, align 4
  %1004 = lshr i32 %1003, 8
  %1005 = trunc i32 %1004 to i8
  %1006 = load ptr, ptr %41, align 8
  %1007 = getelementptr inbounds i8, ptr %1006, i64 1
  store i8 %1005, ptr %1007, align 1
  %1008 = load i32, ptr %42, align 4
  %1009 = lshr i32 %1008, 16
  %1010 = trunc i32 %1009 to i8
  %1011 = load ptr, ptr %41, align 8
  %1012 = getelementptr inbounds i8, ptr %1011, i64 2
  store i8 %1010, ptr %1012, align 1
  %1013 = load i32, ptr %42, align 4
  %1014 = lshr i32 %1013, 24
  %1015 = trunc i32 %1014 to i8
  %1016 = load ptr, ptr %41, align 8
  %1017 = getelementptr inbounds i8, ptr %1016, i64 3
  store i8 %1015, ptr %1017, align 1
  %1018 = getelementptr inbounds [24 x i8], ptr %128, i64 0, i64 0
  %1019 = getelementptr inbounds i8, ptr %1018, i64 12
  %1020 = load i64, ptr %101, align 8
  %1021 = trunc i64 %1020 to i32
  store ptr %1019, ptr %43, align 8
  store i32 %1021, ptr %44, align 4
  %1022 = load i32, ptr %44, align 4
  %1023 = trunc i32 %1022 to i8
  %1024 = load ptr, ptr %43, align 8
  store i8 %1023, ptr %1024, align 1
  %1025 = load i32, ptr %44, align 4
  %1026 = lshr i32 %1025, 8
  %1027 = trunc i32 %1026 to i8
  %1028 = load ptr, ptr %43, align 8
  %1029 = getelementptr inbounds i8, ptr %1028, i64 1
  store i8 %1027, ptr %1029, align 1
  %1030 = load i32, ptr %44, align 4
  %1031 = lshr i32 %1030, 16
  %1032 = trunc i32 %1031 to i8
  %1033 = load ptr, ptr %43, align 8
  %1034 = getelementptr inbounds i8, ptr %1033, i64 2
  store i8 %1032, ptr %1034, align 1
  %1035 = load i32, ptr %44, align 4
  %1036 = lshr i32 %1035, 24
  %1037 = trunc i32 %1036 to i8
  %1038 = load ptr, ptr %43, align 8
  %1039 = getelementptr inbounds i8, ptr %1038, i64 3
  store i8 %1037, ptr %1039, align 1
  br label %1135

1040:                                             ; preds = %939
  %1041 = getelementptr inbounds [24 x i8], ptr %128, i64 0, i64 0
  %1042 = getelementptr inbounds i8, ptr %1041, i64 8
  %1043 = load i64, ptr %116, align 8
  store ptr %1042, ptr %29, align 8
  store i64 %1043, ptr %30, align 8
  %1044 = load ptr, ptr %29, align 8
  %1045 = load i64, ptr %30, align 8
  %1046 = trunc i64 %1045 to i32
  store ptr %1044, ptr %25, align 8
  store i32 %1046, ptr %26, align 4
  %1047 = load i32, ptr %26, align 4
  %1048 = trunc i32 %1047 to i8
  %1049 = load ptr, ptr %25, align 8
  store i8 %1048, ptr %1049, align 1
  %1050 = load i32, ptr %26, align 4
  %1051 = lshr i32 %1050, 8
  %1052 = trunc i32 %1051 to i8
  %1053 = load ptr, ptr %25, align 8
  %1054 = getelementptr inbounds i8, ptr %1053, i64 1
  store i8 %1052, ptr %1054, align 1
  %1055 = load i32, ptr %26, align 4
  %1056 = lshr i32 %1055, 16
  %1057 = trunc i32 %1056 to i8
  %1058 = load ptr, ptr %25, align 8
  %1059 = getelementptr inbounds i8, ptr %1058, i64 2
  store i8 %1057, ptr %1059, align 1
  %1060 = load i32, ptr %26, align 4
  %1061 = lshr i32 %1060, 24
  %1062 = trunc i32 %1061 to i8
  %1063 = load ptr, ptr %25, align 8
  %1064 = getelementptr inbounds i8, ptr %1063, i64 3
  store i8 %1062, ptr %1064, align 1
  %1065 = load ptr, ptr %29, align 8
  %1066 = getelementptr inbounds i8, ptr %1065, i64 4
  %1067 = load i64, ptr %30, align 8
  %1068 = lshr i64 %1067, 32
  %1069 = trunc i64 %1068 to i32
  store ptr %1066, ptr %27, align 8
  store i32 %1069, ptr %28, align 4
  %1070 = load i32, ptr %28, align 4
  %1071 = trunc i32 %1070 to i8
  %1072 = load ptr, ptr %27, align 8
  store i8 %1071, ptr %1072, align 1
  %1073 = load i32, ptr %28, align 4
  %1074 = lshr i32 %1073, 8
  %1075 = trunc i32 %1074 to i8
  %1076 = load ptr, ptr %27, align 8
  %1077 = getelementptr inbounds i8, ptr %1076, i64 1
  store i8 %1075, ptr %1077, align 1
  %1078 = load i32, ptr %28, align 4
  %1079 = lshr i32 %1078, 16
  %1080 = trunc i32 %1079 to i8
  %1081 = load ptr, ptr %27, align 8
  %1082 = getelementptr inbounds i8, ptr %1081, i64 2
  store i8 %1080, ptr %1082, align 1
  %1083 = load i32, ptr %28, align 4
  %1084 = lshr i32 %1083, 24
  %1085 = trunc i32 %1084 to i8
  %1086 = load ptr, ptr %27, align 8
  %1087 = getelementptr inbounds i8, ptr %1086, i64 3
  store i8 %1085, ptr %1087, align 1
  %1088 = getelementptr inbounds [24 x i8], ptr %128, i64 0, i64 0
  %1089 = getelementptr inbounds i8, ptr %1088, i64 16
  %1090 = load i64, ptr %101, align 8
  store ptr %1089, ptr %35, align 8
  store i64 %1090, ptr %36, align 8
  %1091 = load ptr, ptr %35, align 8
  %1092 = load i64, ptr %36, align 8
  %1093 = trunc i64 %1092 to i32
  store ptr %1091, ptr %31, align 8
  store i32 %1093, ptr %32, align 4
  %1094 = load i32, ptr %32, align 4
  %1095 = trunc i32 %1094 to i8
  %1096 = load ptr, ptr %31, align 8
  store i8 %1095, ptr %1096, align 1
  %1097 = load i32, ptr %32, align 4
  %1098 = lshr i32 %1097, 8
  %1099 = trunc i32 %1098 to i8
  %1100 = load ptr, ptr %31, align 8
  %1101 = getelementptr inbounds i8, ptr %1100, i64 1
  store i8 %1099, ptr %1101, align 1
  %1102 = load i32, ptr %32, align 4
  %1103 = lshr i32 %1102, 16
  %1104 = trunc i32 %1103 to i8
  %1105 = load ptr, ptr %31, align 8
  %1106 = getelementptr inbounds i8, ptr %1105, i64 2
  store i8 %1104, ptr %1106, align 1
  %1107 = load i32, ptr %32, align 4
  %1108 = lshr i32 %1107, 24
  %1109 = trunc i32 %1108 to i8
  %1110 = load ptr, ptr %31, align 8
  %1111 = getelementptr inbounds i8, ptr %1110, i64 3
  store i8 %1109, ptr %1111, align 1
  %1112 = load ptr, ptr %35, align 8
  %1113 = getelementptr inbounds i8, ptr %1112, i64 4
  %1114 = load i64, ptr %36, align 8
  %1115 = lshr i64 %1114, 32
  %1116 = trunc i64 %1115 to i32
  store ptr %1113, ptr %33, align 8
  store i32 %1116, ptr %34, align 4
  %1117 = load i32, ptr %34, align 4
  %1118 = trunc i32 %1117 to i8
  %1119 = load ptr, ptr %33, align 8
  store i8 %1118, ptr %1119, align 1
  %1120 = load i32, ptr %34, align 4
  %1121 = lshr i32 %1120, 8
  %1122 = trunc i32 %1121 to i8
  %1123 = load ptr, ptr %33, align 8
  %1124 = getelementptr inbounds i8, ptr %1123, i64 1
  store i8 %1122, ptr %1124, align 1
  %1125 = load i32, ptr %34, align 4
  %1126 = lshr i32 %1125, 16
  %1127 = trunc i32 %1126 to i8
  %1128 = load ptr, ptr %33, align 8
  %1129 = getelementptr inbounds i8, ptr %1128, i64 2
  store i8 %1127, ptr %1129, align 1
  %1130 = load i32, ptr %34, align 4
  %1131 = lshr i32 %1130, 24
  %1132 = trunc i32 %1131 to i8
  %1133 = load ptr, ptr %33, align 8
  %1134 = getelementptr inbounds i8, ptr %1133, i64 3
  store i8 %1132, ptr %1134, align 1
  store i32 24, ptr %129, align 4
  br label %1135

1135:                                             ; preds = %1040, %995
  %1136 = load ptr, ptr %94, align 8
  %1137 = getelementptr inbounds %struct.mz_zip_archive, ptr %1136, i32 0, i32 12
  %1138 = load ptr, ptr %1137, align 8
  %1139 = load ptr, ptr %94, align 8
  %1140 = getelementptr inbounds %struct.mz_zip_archive, ptr %1139, i32 0, i32 14
  %1141 = load ptr, ptr %1140, align 8
  %1142 = load i64, ptr %115, align 8
  %1143 = getelementptr inbounds [24 x i8], ptr %128, i64 0, i64 0
  %1144 = load i32, ptr %129, align 4
  %1145 = zext i32 %1144 to i64
  %1146 = call i64 %1138(ptr noundef %1141, i64 noundef %1142, ptr noundef %1143, i64 noundef %1145)
  %1147 = load i32, ptr %129, align 4
  %1148 = zext i32 %1147 to i64
  %1149 = icmp ne i64 %1146, %1148
  br i1 %1149, label %1150, label %1151

1150:                                             ; preds = %1135
  store i32 0, ptr %93, align 4
  br label %1212

1151:                                             ; preds = %1135
  %1152 = load i32, ptr %129, align 4
  %1153 = zext i32 %1152 to i64
  %1154 = load i64, ptr %115, align 8
  %1155 = add i64 %1154, %1153
  store i64 %1155, ptr %115, align 8
  br label %1156

1156:                                             ; preds = %1151, %917
  %1157 = load ptr, ptr %122, align 8
  %1158 = icmp ne ptr %1157, null
  br i1 %1158, label %1159, label %1180

1159:                                             ; preds = %1156
  %1160 = getelementptr inbounds [28 x i8], ptr %124, i64 0, i64 0
  %1161 = load i64, ptr %101, align 8
  %1162 = icmp uge i64 %1161, 4294967295
  br i1 %1162, label %1163, label %1164

1163:                                             ; preds = %1159
  br label %1165

1164:                                             ; preds = %1159
  br label %1165

1165:                                             ; preds = %1164, %1163
  %1166 = phi ptr [ %101, %1163 ], [ null, %1164 ]
  %1167 = load i64, ptr %101, align 8
  %1168 = icmp uge i64 %1167, 4294967295
  br i1 %1168, label %1169, label %1170

1169:                                             ; preds = %1165
  br label %1171

1170:                                             ; preds = %1165
  br label %1171

1171:                                             ; preds = %1170, %1169
  %1172 = phi ptr [ %116, %1169 ], [ null, %1170 ]
  %1173 = load i64, ptr %114, align 8
  %1174 = icmp uge i64 %1173, 4294967295
  br i1 %1174, label %1175, label %1176

1175:                                             ; preds = %1171
  br label %1177

1176:                                             ; preds = %1171
  br label %1177

1177:                                             ; preds = %1176, %1175
  %1178 = phi ptr [ %114, %1175 ], [ null, %1176 ]
  %1179 = call i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef %1160, ptr noundef %1166, ptr noundef %1172, ptr noundef %1178)
  store i32 %1179, ptr %123, align 4
  br label %1180

1180:                                             ; preds = %1177, %1156
  %1181 = load ptr, ptr %94, align 8
  %1182 = load ptr, ptr %95, align 8
  %1183 = load i64, ptr %117, align 8
  %1184 = trunc i64 %1183 to i16
  %1185 = load ptr, ptr %122, align 8
  %1186 = load i32, ptr %123, align 4
  %1187 = trunc i32 %1186 to i16
  %1188 = load ptr, ptr %98, align 8
  %1189 = load i16, ptr %99, align 2
  %1190 = load i64, ptr %101, align 8
  %1191 = load i64, ptr %116, align 8
  %1192 = load i32, ptr %102, align 4
  %1193 = load i16, ptr %108, align 2
  %1194 = load i16, ptr %125, align 2
  %1195 = load i16, ptr %109, align 2
  %1196 = load i16, ptr %110, align 2
  %1197 = load i64, ptr %114, align 8
  %1198 = load i32, ptr %112, align 4
  %1199 = load ptr, ptr %106, align 8
  %1200 = load i32, ptr %107, align 4
  %1201 = call i32 @mz_zip_writer_add_to_central_dir(ptr noundef %1181, ptr noundef %1182, i16 noundef zeroext %1184, ptr noundef %1185, i16 noundef zeroext %1187, ptr noundef %1188, i16 noundef zeroext %1189, i64 noundef %1190, i64 noundef %1191, i32 noundef %1192, i16 noundef zeroext %1193, i16 noundef zeroext %1194, i16 noundef zeroext %1195, i16 noundef zeroext %1196, i64 noundef %1197, i32 noundef %1198, ptr noundef %1199, i32 noundef %1200)
  %1202 = icmp ne i32 %1201, 0
  br i1 %1202, label %1204, label %1203

1203:                                             ; preds = %1180
  store i32 0, ptr %93, align 4
  br label %1212

1204:                                             ; preds = %1180
  %1205 = load ptr, ptr %94, align 8
  %1206 = getelementptr inbounds %struct.mz_zip_archive, ptr %1205, i32 0, i32 2
  %1207 = load i32, ptr %1206, align 8
  %1208 = add i32 %1207, 1
  store i32 %1208, ptr %1206, align 8
  %1209 = load i64, ptr %115, align 8
  %1210 = load ptr, ptr %94, align 8
  %1211 = getelementptr inbounds %struct.mz_zip_archive, ptr %1210, i32 0, i32 0
  store i64 %1209, ptr %1211, align 8
  store i32 1, ptr %93, align 4
  br label %1212

1212:                                             ; preds = %1204, %1203, %1150, %994, %910, %869, %832, %801, %770, %750, %728, %707, %677, %646, %626, %524, %516, %492, %412, %345, %321, %284, %271, %236, %214
  %1213 = load i32, ptr %93, align 4
  ret i32 %1213
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_writer_validate_archive_name(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = load i8, ptr %4, align 1
  %6 = sext i8 %5 to i32
  %7 = icmp eq i32 %6, 47
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 0, ptr %2, align 4
  br label %10

9:                                                ; preds = %1
  store i32 1, ptr %2, align 4
  br label %10

10:                                               ; preds = %9, %8
  %11 = load i32, ptr %2, align 4
  ret i32 %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @mz_zip_time_t_to_dos_time(i64 noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store i64 %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  store ptr %2, ptr %6, align 8
  %8 = call ptr @localtime(ptr noundef %4)
  store ptr %8, ptr %7, align 8
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds %struct.tm, ptr %9, i32 0, i32 2
  %11 = load i32, ptr %10, align 8
  %12 = shl i32 %11, 11
  %13 = load ptr, ptr %7, align 8
  %14 = getelementptr inbounds %struct.tm, ptr %13, i32 0, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = shl i32 %15, 5
  %17 = add nsw i32 %12, %16
  %18 = load ptr, ptr %7, align 8
  %19 = getelementptr inbounds %struct.tm, ptr %18, i32 0, i32 0
  %20 = load i32, ptr %19, align 8
  %21 = ashr i32 %20, 1
  %22 = add nsw i32 %17, %21
  %23 = trunc i32 %22 to i16
  %24 = load ptr, ptr %5, align 8
  store i16 %23, ptr %24, align 2
  %25 = load ptr, ptr %7, align 8
  %26 = getelementptr inbounds %struct.tm, ptr %25, i32 0, i32 5
  %27 = load i32, ptr %26, align 4
  %28 = add nsw i32 %27, 1900
  %29 = sub nsw i32 %28, 1980
  %30 = shl i32 %29, 9
  %31 = load ptr, ptr %7, align 8
  %32 = getelementptr inbounds %struct.tm, ptr %31, i32 0, i32 4
  %33 = load i32, ptr %32, align 8
  %34 = add nsw i32 %33, 1
  %35 = shl i32 %34, 5
  %36 = add nsw i32 %30, %35
  %37 = load ptr, ptr %7, align 8
  %38 = getelementptr inbounds %struct.tm, ptr %37, i32 0, i32 3
  %39 = load i32, ptr %38, align 4
  %40 = add nsw i32 %36, %39
  %41 = trunc i32 %40 to i16
  %42 = load ptr, ptr %6, align 8
  store i16 %41, ptr %42, align 2
  ret void
}

declare i64 @time(ptr noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_writer_compute_padding_needed_for_file_alignment(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = getelementptr inbounds %struct.mz_zip_archive, ptr %5, i32 0, i32 6
  %7 = load i64, ptr %6, align 8
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  store i32 0, ptr %2, align 4
  br label %32

10:                                               ; preds = %1
  %11 = load ptr, ptr %3, align 8
  %12 = getelementptr inbounds %struct.mz_zip_archive, ptr %11, i32 0, i32 0
  %13 = load i64, ptr %12, align 8
  %14 = load ptr, ptr %3, align 8
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %14, i32 0, i32 6
  %16 = load i64, ptr %15, align 8
  %17 = sub i64 %16, 1
  %18 = and i64 %13, %17
  %19 = trunc i64 %18 to i32
  store i32 %19, ptr %4, align 4
  %20 = load ptr, ptr %3, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive, ptr %20, i32 0, i32 6
  %22 = load i64, ptr %21, align 8
  %23 = load i32, ptr %4, align 4
  %24 = zext i32 %23 to i64
  %25 = sub i64 %22, %24
  %26 = load ptr, ptr %3, align 8
  %27 = getelementptr inbounds %struct.mz_zip_archive, ptr %26, i32 0, i32 6
  %28 = load i64, ptr %27, align 8
  %29 = sub i64 %28, 1
  %30 = and i64 %25, %29
  %31 = trunc i64 %30 to i32
  store i32 %31, ptr %2, align 4
  br label %32

32:                                               ; preds = %10, %9
  %33 = load i32, ptr %2, align 4
  ret i32 %33
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_writer_write_zeros(ptr noundef %0, i64 noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca [4096 x i8], align 16
  %11 = alloca i32, align 4
  store ptr %0, ptr %7, align 8
  store i64 %1, ptr %8, align 8
  store i32 %2, ptr %9, align 4
  %12 = getelementptr inbounds [4096 x i8], ptr %10, i64 0, i64 0
  %13 = load i32, ptr %9, align 4
  %14 = zext i32 %13 to i64
  %15 = icmp ult i64 4096, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  br label %20

17:                                               ; preds = %3
  %18 = load i32, ptr %9, align 4
  %19 = zext i32 %18 to i64
  br label %20

20:                                               ; preds = %17, %16
  %21 = phi i64 [ 4096, %16 ], [ %19, %17 ]
  %22 = call ptr @__memset_chk(ptr noundef %12, i32 noundef 0, i64 noundef %21, i64 noundef 4096) #11
  br label %23

23:                                               ; preds = %60, %20
  %24 = load i32, ptr %9, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %68

26:                                               ; preds = %23
  %27 = load i32, ptr %9, align 4
  %28 = zext i32 %27 to i64
  %29 = icmp ult i64 4096, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  br label %34

31:                                               ; preds = %26
  %32 = load i32, ptr %9, align 4
  %33 = zext i32 %32 to i64
  br label %34

34:                                               ; preds = %31, %30
  %35 = phi i64 [ 4096, %30 ], [ %33, %31 ]
  %36 = trunc i64 %35 to i32
  store i32 %36, ptr %11, align 4
  %37 = load ptr, ptr %7, align 8
  %38 = getelementptr inbounds %struct.mz_zip_archive, ptr %37, i32 0, i32 12
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr %7, align 8
  %41 = getelementptr inbounds %struct.mz_zip_archive, ptr %40, i32 0, i32 14
  %42 = load ptr, ptr %41, align 8
  %43 = load i64, ptr %8, align 8
  %44 = getelementptr inbounds [4096 x i8], ptr %10, i64 0, i64 0
  %45 = load i32, ptr %11, align 4
  %46 = zext i32 %45 to i64
  %47 = call i64 %39(ptr noundef %42, i64 noundef %43, ptr noundef %44, i64 noundef %46)
  %48 = load i32, ptr %11, align 4
  %49 = zext i32 %48 to i64
  %50 = icmp ne i64 %47, %49
  br i1 %50, label %51, label %60

51:                                               ; preds = %34
  %52 = load ptr, ptr %7, align 8
  store ptr %52, ptr %4, align 8
  store i32 19, ptr %5, align 4
  %53 = load ptr, ptr %4, align 8
  %54 = icmp ne ptr %53, null
  br i1 %54, label %55, label %59

55:                                               ; preds = %51
  %56 = load i32, ptr %5, align 4
  %57 = load ptr, ptr %4, align 8
  %58 = getelementptr inbounds %struct.mz_zip_archive, ptr %57, i32 0, i32 5
  store i32 %56, ptr %58, align 4
  br label %59

59:                                               ; preds = %51, %55
  store i32 0, ptr %6, align 4
  br label %69

60:                                               ; preds = %34
  %61 = load i32, ptr %11, align 4
  %62 = zext i32 %61 to i64
  %63 = load i64, ptr %8, align 8
  %64 = add i64 %63, %62
  store i64 %64, ptr %8, align 8
  %65 = load i32, ptr %11, align 4
  %66 = load i32, ptr %9, align 4
  %67 = sub i32 %66, %65
  store i32 %67, ptr %9, align 4
  br label %23, !llvm.loop !126

68:                                               ; preds = %23
  store i32 1, ptr %6, align 4
  br label %69

69:                                               ; preds = %68, %59
  %70 = load i32, ptr %6, align 4
  ret i32 %70
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i16, align 2
  %7 = alloca ptr, align 8
  %8 = alloca i16, align 2
  %9 = alloca ptr, align 8
  %10 = alloca i16, align 2
  %11 = alloca ptr, align 8
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  %15 = alloca ptr, align 8
  %16 = alloca i64, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i32, align 4
  %19 = alloca ptr, align 8
  %20 = alloca i32, align 4
  %21 = alloca ptr, align 8
  %22 = alloca i64, align 8
  %23 = alloca ptr, align 8
  %24 = alloca i32, align 4
  %25 = alloca ptr, align 8
  %26 = alloca i32, align 4
  %27 = alloca ptr, align 8
  %28 = alloca i64, align 8
  %29 = alloca ptr, align 8
  %30 = alloca ptr, align 8
  %31 = alloca ptr, align 8
  %32 = alloca ptr, align 8
  %33 = alloca ptr, align 8
  %34 = alloca i32, align 4
  store ptr %0, ptr %29, align 8
  store ptr %1, ptr %30, align 8
  store ptr %2, ptr %31, align 8
  store ptr %3, ptr %32, align 8
  %35 = load ptr, ptr %29, align 8
  store ptr %35, ptr %33, align 8
  store i32 0, ptr %34, align 4
  %36 = load ptr, ptr %33, align 8
  %37 = getelementptr inbounds i8, ptr %36, i64 0
  store ptr %37, ptr %5, align 8
  store i16 1, ptr %6, align 2
  %38 = load i16, ptr %6, align 2
  %39 = trunc i16 %38 to i8
  %40 = load ptr, ptr %5, align 8
  store i8 %39, ptr %40, align 1
  %41 = load i16, ptr %6, align 2
  %42 = zext i16 %41 to i32
  %43 = ashr i32 %42, 8
  %44 = trunc i32 %43 to i8
  %45 = load ptr, ptr %5, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 1
  store i8 %44, ptr %46, align 1
  %47 = load ptr, ptr %33, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 2
  store ptr %48, ptr %7, align 8
  store i16 0, ptr %8, align 2
  %49 = load i16, ptr %8, align 2
  %50 = trunc i16 %49 to i8
  %51 = load ptr, ptr %7, align 8
  store i8 %50, ptr %51, align 1
  %52 = load i16, ptr %8, align 2
  %53 = zext i16 %52 to i32
  %54 = ashr i32 %53, 8
  %55 = trunc i32 %54 to i8
  %56 = load ptr, ptr %7, align 8
  %57 = getelementptr inbounds i8, ptr %56, i64 1
  store i8 %55, ptr %57, align 1
  %58 = load ptr, ptr %33, align 8
  %59 = getelementptr inbounds i8, ptr %58, i64 4
  store ptr %59, ptr %33, align 8
  %60 = load ptr, ptr %30, align 8
  %61 = icmp ne ptr %60, null
  br i1 %61, label %62, label %116

62:                                               ; preds = %4
  %63 = load ptr, ptr %33, align 8
  %64 = load ptr, ptr %30, align 8
  %65 = load i64, ptr %64, align 8
  store ptr %63, ptr %15, align 8
  store i64 %65, ptr %16, align 8
  %66 = load ptr, ptr %15, align 8
  %67 = load i64, ptr %16, align 8
  %68 = trunc i64 %67 to i32
  store ptr %66, ptr %11, align 8
  store i32 %68, ptr %12, align 4
  %69 = load i32, ptr %12, align 4
  %70 = trunc i32 %69 to i8
  %71 = load ptr, ptr %11, align 8
  store i8 %70, ptr %71, align 1
  %72 = load i32, ptr %12, align 4
  %73 = lshr i32 %72, 8
  %74 = trunc i32 %73 to i8
  %75 = load ptr, ptr %11, align 8
  %76 = getelementptr inbounds i8, ptr %75, i64 1
  store i8 %74, ptr %76, align 1
  %77 = load i32, ptr %12, align 4
  %78 = lshr i32 %77, 16
  %79 = trunc i32 %78 to i8
  %80 = load ptr, ptr %11, align 8
  %81 = getelementptr inbounds i8, ptr %80, i64 2
  store i8 %79, ptr %81, align 1
  %82 = load i32, ptr %12, align 4
  %83 = lshr i32 %82, 24
  %84 = trunc i32 %83 to i8
  %85 = load ptr, ptr %11, align 8
  %86 = getelementptr inbounds i8, ptr %85, i64 3
  store i8 %84, ptr %86, align 1
  %87 = load ptr, ptr %15, align 8
  %88 = getelementptr inbounds i8, ptr %87, i64 4
  %89 = load i64, ptr %16, align 8
  %90 = lshr i64 %89, 32
  %91 = trunc i64 %90 to i32
  store ptr %88, ptr %13, align 8
  store i32 %91, ptr %14, align 4
  %92 = load i32, ptr %14, align 4
  %93 = trunc i32 %92 to i8
  %94 = load ptr, ptr %13, align 8
  store i8 %93, ptr %94, align 1
  %95 = load i32, ptr %14, align 4
  %96 = lshr i32 %95, 8
  %97 = trunc i32 %96 to i8
  %98 = load ptr, ptr %13, align 8
  %99 = getelementptr inbounds i8, ptr %98, i64 1
  store i8 %97, ptr %99, align 1
  %100 = load i32, ptr %14, align 4
  %101 = lshr i32 %100, 16
  %102 = trunc i32 %101 to i8
  %103 = load ptr, ptr %13, align 8
  %104 = getelementptr inbounds i8, ptr %103, i64 2
  store i8 %102, ptr %104, align 1
  %105 = load i32, ptr %14, align 4
  %106 = lshr i32 %105, 24
  %107 = trunc i32 %106 to i8
  %108 = load ptr, ptr %13, align 8
  %109 = getelementptr inbounds i8, ptr %108, i64 3
  store i8 %107, ptr %109, align 1
  %110 = load ptr, ptr %33, align 8
  %111 = getelementptr inbounds i8, ptr %110, i64 8
  store ptr %111, ptr %33, align 8
  %112 = load i32, ptr %34, align 4
  %113 = zext i32 %112 to i64
  %114 = add i64 %113, 8
  %115 = trunc i64 %114 to i32
  store i32 %115, ptr %34, align 4
  br label %116

116:                                              ; preds = %62, %4
  %117 = load ptr, ptr %31, align 8
  %118 = icmp ne ptr %117, null
  br i1 %118, label %119, label %173

119:                                              ; preds = %116
  %120 = load ptr, ptr %33, align 8
  %121 = load ptr, ptr %31, align 8
  %122 = load i64, ptr %121, align 8
  store ptr %120, ptr %21, align 8
  store i64 %122, ptr %22, align 8
  %123 = load ptr, ptr %21, align 8
  %124 = load i64, ptr %22, align 8
  %125 = trunc i64 %124 to i32
  store ptr %123, ptr %17, align 8
  store i32 %125, ptr %18, align 4
  %126 = load i32, ptr %18, align 4
  %127 = trunc i32 %126 to i8
  %128 = load ptr, ptr %17, align 8
  store i8 %127, ptr %128, align 1
  %129 = load i32, ptr %18, align 4
  %130 = lshr i32 %129, 8
  %131 = trunc i32 %130 to i8
  %132 = load ptr, ptr %17, align 8
  %133 = getelementptr inbounds i8, ptr %132, i64 1
  store i8 %131, ptr %133, align 1
  %134 = load i32, ptr %18, align 4
  %135 = lshr i32 %134, 16
  %136 = trunc i32 %135 to i8
  %137 = load ptr, ptr %17, align 8
  %138 = getelementptr inbounds i8, ptr %137, i64 2
  store i8 %136, ptr %138, align 1
  %139 = load i32, ptr %18, align 4
  %140 = lshr i32 %139, 24
  %141 = trunc i32 %140 to i8
  %142 = load ptr, ptr %17, align 8
  %143 = getelementptr inbounds i8, ptr %142, i64 3
  store i8 %141, ptr %143, align 1
  %144 = load ptr, ptr %21, align 8
  %145 = getelementptr inbounds i8, ptr %144, i64 4
  %146 = load i64, ptr %22, align 8
  %147 = lshr i64 %146, 32
  %148 = trunc i64 %147 to i32
  store ptr %145, ptr %19, align 8
  store i32 %148, ptr %20, align 4
  %149 = load i32, ptr %20, align 4
  %150 = trunc i32 %149 to i8
  %151 = load ptr, ptr %19, align 8
  store i8 %150, ptr %151, align 1
  %152 = load i32, ptr %20, align 4
  %153 = lshr i32 %152, 8
  %154 = trunc i32 %153 to i8
  %155 = load ptr, ptr %19, align 8
  %156 = getelementptr inbounds i8, ptr %155, i64 1
  store i8 %154, ptr %156, align 1
  %157 = load i32, ptr %20, align 4
  %158 = lshr i32 %157, 16
  %159 = trunc i32 %158 to i8
  %160 = load ptr, ptr %19, align 8
  %161 = getelementptr inbounds i8, ptr %160, i64 2
  store i8 %159, ptr %161, align 1
  %162 = load i32, ptr %20, align 4
  %163 = lshr i32 %162, 24
  %164 = trunc i32 %163 to i8
  %165 = load ptr, ptr %19, align 8
  %166 = getelementptr inbounds i8, ptr %165, i64 3
  store i8 %164, ptr %166, align 1
  %167 = load ptr, ptr %33, align 8
  %168 = getelementptr inbounds i8, ptr %167, i64 8
  store ptr %168, ptr %33, align 8
  %169 = load i32, ptr %34, align 4
  %170 = zext i32 %169 to i64
  %171 = add i64 %170, 8
  %172 = trunc i64 %171 to i32
  store i32 %172, ptr %34, align 4
  br label %173

173:                                              ; preds = %119, %116
  %174 = load ptr, ptr %32, align 8
  %175 = icmp ne ptr %174, null
  br i1 %175, label %176, label %230

176:                                              ; preds = %173
  %177 = load ptr, ptr %33, align 8
  %178 = load ptr, ptr %32, align 8
  %179 = load i64, ptr %178, align 8
  store ptr %177, ptr %27, align 8
  store i64 %179, ptr %28, align 8
  %180 = load ptr, ptr %27, align 8
  %181 = load i64, ptr %28, align 8
  %182 = trunc i64 %181 to i32
  store ptr %180, ptr %23, align 8
  store i32 %182, ptr %24, align 4
  %183 = load i32, ptr %24, align 4
  %184 = trunc i32 %183 to i8
  %185 = load ptr, ptr %23, align 8
  store i8 %184, ptr %185, align 1
  %186 = load i32, ptr %24, align 4
  %187 = lshr i32 %186, 8
  %188 = trunc i32 %187 to i8
  %189 = load ptr, ptr %23, align 8
  %190 = getelementptr inbounds i8, ptr %189, i64 1
  store i8 %188, ptr %190, align 1
  %191 = load i32, ptr %24, align 4
  %192 = lshr i32 %191, 16
  %193 = trunc i32 %192 to i8
  %194 = load ptr, ptr %23, align 8
  %195 = getelementptr inbounds i8, ptr %194, i64 2
  store i8 %193, ptr %195, align 1
  %196 = load i32, ptr %24, align 4
  %197 = lshr i32 %196, 24
  %198 = trunc i32 %197 to i8
  %199 = load ptr, ptr %23, align 8
  %200 = getelementptr inbounds i8, ptr %199, i64 3
  store i8 %198, ptr %200, align 1
  %201 = load ptr, ptr %27, align 8
  %202 = getelementptr inbounds i8, ptr %201, i64 4
  %203 = load i64, ptr %28, align 8
  %204 = lshr i64 %203, 32
  %205 = trunc i64 %204 to i32
  store ptr %202, ptr %25, align 8
  store i32 %205, ptr %26, align 4
  %206 = load i32, ptr %26, align 4
  %207 = trunc i32 %206 to i8
  %208 = load ptr, ptr %25, align 8
  store i8 %207, ptr %208, align 1
  %209 = load i32, ptr %26, align 4
  %210 = lshr i32 %209, 8
  %211 = trunc i32 %210 to i8
  %212 = load ptr, ptr %25, align 8
  %213 = getelementptr inbounds i8, ptr %212, i64 1
  store i8 %211, ptr %213, align 1
  %214 = load i32, ptr %26, align 4
  %215 = lshr i32 %214, 16
  %216 = trunc i32 %215 to i8
  %217 = load ptr, ptr %25, align 8
  %218 = getelementptr inbounds i8, ptr %217, i64 2
  store i8 %216, ptr %218, align 1
  %219 = load i32, ptr %26, align 4
  %220 = lshr i32 %219, 24
  %221 = trunc i32 %220 to i8
  %222 = load ptr, ptr %25, align 8
  %223 = getelementptr inbounds i8, ptr %222, i64 3
  store i8 %221, ptr %223, align 1
  %224 = load ptr, ptr %33, align 8
  %225 = getelementptr inbounds i8, ptr %224, i64 8
  store ptr %225, ptr %33, align 8
  %226 = load i32, ptr %34, align 4
  %227 = zext i32 %226 to i64
  %228 = add i64 %227, 8
  %229 = trunc i64 %228 to i32
  store i32 %229, ptr %34, align 4
  br label %230

230:                                              ; preds = %176, %173
  %231 = load ptr, ptr %29, align 8
  %232 = getelementptr inbounds i8, ptr %231, i64 2
  %233 = load i32, ptr %34, align 4
  %234 = trunc i32 %233 to i16
  store ptr %232, ptr %9, align 8
  store i16 %234, ptr %10, align 2
  %235 = load i16, ptr %10, align 2
  %236 = trunc i16 %235 to i8
  %237 = load ptr, ptr %9, align 8
  store i8 %236, ptr %237, align 1
  %238 = load i16, ptr %10, align 2
  %239 = zext i16 %238 to i32
  %240 = ashr i32 %239, 8
  %241 = trunc i32 %240 to i8
  %242 = load ptr, ptr %9, align 8
  %243 = getelementptr inbounds i8, ptr %242, i64 1
  store i8 %241, ptr %243, align 1
  %244 = load ptr, ptr %33, align 8
  %245 = load ptr, ptr %29, align 8
  %246 = ptrtoint ptr %244 to i64
  %247 = ptrtoint ptr %245 to i64
  %248 = sub i64 %246, %247
  %249 = trunc i64 %248 to i32
  ret i32 %249
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_writer_create_local_dir_header(ptr noundef %0, ptr noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3, i64 noundef %4, i64 noundef %5, i32 noundef %6, i16 noundef zeroext %7, i16 noundef zeroext %8, i16 noundef zeroext %9, i16 noundef zeroext %10) #0 {
  %12 = alloca ptr, align 8
  %13 = alloca i16, align 2
  %14 = alloca ptr, align 8
  %15 = alloca i16, align 2
  %16 = alloca ptr, align 8
  %17 = alloca i16, align 2
  %18 = alloca ptr, align 8
  %19 = alloca i16, align 2
  %20 = alloca ptr, align 8
  %21 = alloca i16, align 2
  %22 = alloca ptr, align 8
  %23 = alloca i16, align 2
  %24 = alloca ptr, align 8
  %25 = alloca i16, align 2
  %26 = alloca ptr, align 8
  %27 = alloca i32, align 4
  %28 = alloca ptr, align 8
  %29 = alloca i32, align 4
  %30 = alloca ptr, align 8
  %31 = alloca i32, align 4
  %32 = alloca ptr, align 8
  %33 = alloca i32, align 4
  %34 = alloca ptr, align 8
  %35 = alloca ptr, align 8
  %36 = alloca i16, align 2
  %37 = alloca i16, align 2
  %38 = alloca i64, align 8
  %39 = alloca i64, align 8
  %40 = alloca i32, align 4
  %41 = alloca i16, align 2
  %42 = alloca i16, align 2
  %43 = alloca i16, align 2
  %44 = alloca i16, align 2
  store ptr %0, ptr %34, align 8
  store ptr %1, ptr %35, align 8
  store i16 %2, ptr %36, align 2
  store i16 %3, ptr %37, align 2
  store i64 %4, ptr %38, align 8
  store i64 %5, ptr %39, align 8
  store i32 %6, ptr %40, align 4
  store i16 %7, ptr %41, align 2
  store i16 %8, ptr %42, align 2
  store i16 %9, ptr %43, align 2
  store i16 %10, ptr %44, align 2
  %45 = load ptr, ptr %34, align 8
  %46 = load ptr, ptr %35, align 8
  %47 = load ptr, ptr %35, align 8
  %48 = call i64 @llvm.objectsize.i64.p0(ptr %47, i1 false, i1 true, i1 false)
  %49 = call ptr @__memset_chk(ptr noundef %46, i32 noundef 0, i64 noundef 30, i64 noundef %48) #11
  %50 = load ptr, ptr %35, align 8
  %51 = getelementptr inbounds i8, ptr %50, i64 0
  store ptr %51, ptr %26, align 8
  store i32 67324752, ptr %27, align 4
  %52 = load i32, ptr %27, align 4
  %53 = trunc i32 %52 to i8
  %54 = load ptr, ptr %26, align 8
  store i8 %53, ptr %54, align 1
  %55 = load i32, ptr %27, align 4
  %56 = lshr i32 %55, 8
  %57 = trunc i32 %56 to i8
  %58 = load ptr, ptr %26, align 8
  %59 = getelementptr inbounds i8, ptr %58, i64 1
  store i8 %57, ptr %59, align 1
  %60 = load i32, ptr %27, align 4
  %61 = lshr i32 %60, 16
  %62 = trunc i32 %61 to i8
  %63 = load ptr, ptr %26, align 8
  %64 = getelementptr inbounds i8, ptr %63, i64 2
  store i8 %62, ptr %64, align 1
  %65 = load i32, ptr %27, align 4
  %66 = lshr i32 %65, 24
  %67 = trunc i32 %66 to i8
  %68 = load ptr, ptr %26, align 8
  %69 = getelementptr inbounds i8, ptr %68, i64 3
  store i8 %67, ptr %69, align 1
  %70 = load ptr, ptr %35, align 8
  %71 = getelementptr inbounds i8, ptr %70, i64 4
  %72 = load i16, ptr %41, align 2
  %73 = zext i16 %72 to i32
  %74 = icmp ne i32 %73, 0
  %75 = zext i1 %74 to i64
  %76 = select i1 %74, i32 20, i32 0
  %77 = trunc i32 %76 to i16
  store ptr %71, ptr %12, align 8
  store i16 %77, ptr %13, align 2
  %78 = load i16, ptr %13, align 2
  %79 = trunc i16 %78 to i8
  %80 = load ptr, ptr %12, align 8
  store i8 %79, ptr %80, align 1
  %81 = load i16, ptr %13, align 2
  %82 = zext i16 %81 to i32
  %83 = ashr i32 %82, 8
  %84 = trunc i32 %83 to i8
  %85 = load ptr, ptr %12, align 8
  %86 = getelementptr inbounds i8, ptr %85, i64 1
  store i8 %84, ptr %86, align 1
  %87 = load ptr, ptr %35, align 8
  %88 = getelementptr inbounds i8, ptr %87, i64 6
  %89 = load i16, ptr %42, align 2
  store ptr %88, ptr %14, align 8
  store i16 %89, ptr %15, align 2
  %90 = load i16, ptr %15, align 2
  %91 = trunc i16 %90 to i8
  %92 = load ptr, ptr %14, align 8
  store i8 %91, ptr %92, align 1
  %93 = load i16, ptr %15, align 2
  %94 = zext i16 %93 to i32
  %95 = ashr i32 %94, 8
  %96 = trunc i32 %95 to i8
  %97 = load ptr, ptr %14, align 8
  %98 = getelementptr inbounds i8, ptr %97, i64 1
  store i8 %96, ptr %98, align 1
  %99 = load ptr, ptr %35, align 8
  %100 = getelementptr inbounds i8, ptr %99, i64 8
  %101 = load i16, ptr %41, align 2
  store ptr %100, ptr %16, align 8
  store i16 %101, ptr %17, align 2
  %102 = load i16, ptr %17, align 2
  %103 = trunc i16 %102 to i8
  %104 = load ptr, ptr %16, align 8
  store i8 %103, ptr %104, align 1
  %105 = load i16, ptr %17, align 2
  %106 = zext i16 %105 to i32
  %107 = ashr i32 %106, 8
  %108 = trunc i32 %107 to i8
  %109 = load ptr, ptr %16, align 8
  %110 = getelementptr inbounds i8, ptr %109, i64 1
  store i8 %108, ptr %110, align 1
  %111 = load ptr, ptr %35, align 8
  %112 = getelementptr inbounds i8, ptr %111, i64 10
  %113 = load i16, ptr %43, align 2
  store ptr %112, ptr %18, align 8
  store i16 %113, ptr %19, align 2
  %114 = load i16, ptr %19, align 2
  %115 = trunc i16 %114 to i8
  %116 = load ptr, ptr %18, align 8
  store i8 %115, ptr %116, align 1
  %117 = load i16, ptr %19, align 2
  %118 = zext i16 %117 to i32
  %119 = ashr i32 %118, 8
  %120 = trunc i32 %119 to i8
  %121 = load ptr, ptr %18, align 8
  %122 = getelementptr inbounds i8, ptr %121, i64 1
  store i8 %120, ptr %122, align 1
  %123 = load ptr, ptr %35, align 8
  %124 = getelementptr inbounds i8, ptr %123, i64 12
  %125 = load i16, ptr %44, align 2
  store ptr %124, ptr %20, align 8
  store i16 %125, ptr %21, align 2
  %126 = load i16, ptr %21, align 2
  %127 = trunc i16 %126 to i8
  %128 = load ptr, ptr %20, align 8
  store i8 %127, ptr %128, align 1
  %129 = load i16, ptr %21, align 2
  %130 = zext i16 %129 to i32
  %131 = ashr i32 %130, 8
  %132 = trunc i32 %131 to i8
  %133 = load ptr, ptr %20, align 8
  %134 = getelementptr inbounds i8, ptr %133, i64 1
  store i8 %132, ptr %134, align 1
  %135 = load ptr, ptr %35, align 8
  %136 = getelementptr inbounds i8, ptr %135, i64 14
  %137 = load i32, ptr %40, align 4
  store ptr %136, ptr %28, align 8
  store i32 %137, ptr %29, align 4
  %138 = load i32, ptr %29, align 4
  %139 = trunc i32 %138 to i8
  %140 = load ptr, ptr %28, align 8
  store i8 %139, ptr %140, align 1
  %141 = load i32, ptr %29, align 4
  %142 = lshr i32 %141, 8
  %143 = trunc i32 %142 to i8
  %144 = load ptr, ptr %28, align 8
  %145 = getelementptr inbounds i8, ptr %144, i64 1
  store i8 %143, ptr %145, align 1
  %146 = load i32, ptr %29, align 4
  %147 = lshr i32 %146, 16
  %148 = trunc i32 %147 to i8
  %149 = load ptr, ptr %28, align 8
  %150 = getelementptr inbounds i8, ptr %149, i64 2
  store i8 %148, ptr %150, align 1
  %151 = load i32, ptr %29, align 4
  %152 = lshr i32 %151, 24
  %153 = trunc i32 %152 to i8
  %154 = load ptr, ptr %28, align 8
  %155 = getelementptr inbounds i8, ptr %154, i64 3
  store i8 %153, ptr %155, align 1
  %156 = load ptr, ptr %35, align 8
  %157 = getelementptr inbounds i8, ptr %156, i64 18
  %158 = load i64, ptr %39, align 8
  %159 = icmp ult i64 %158, 4294967295
  br i1 %159, label %160, label %162

160:                                              ; preds = %11
  %161 = load i64, ptr %39, align 8
  br label %163

162:                                              ; preds = %11
  br label %163

163:                                              ; preds = %162, %160
  %164 = phi i64 [ %161, %160 ], [ 4294967295, %162 ]
  %165 = trunc i64 %164 to i32
  store ptr %157, ptr %30, align 8
  store i32 %165, ptr %31, align 4
  %166 = load i32, ptr %31, align 4
  %167 = trunc i32 %166 to i8
  %168 = load ptr, ptr %30, align 8
  store i8 %167, ptr %168, align 1
  %169 = load i32, ptr %31, align 4
  %170 = lshr i32 %169, 8
  %171 = trunc i32 %170 to i8
  %172 = load ptr, ptr %30, align 8
  %173 = getelementptr inbounds i8, ptr %172, i64 1
  store i8 %171, ptr %173, align 1
  %174 = load i32, ptr %31, align 4
  %175 = lshr i32 %174, 16
  %176 = trunc i32 %175 to i8
  %177 = load ptr, ptr %30, align 8
  %178 = getelementptr inbounds i8, ptr %177, i64 2
  store i8 %176, ptr %178, align 1
  %179 = load i32, ptr %31, align 4
  %180 = lshr i32 %179, 24
  %181 = trunc i32 %180 to i8
  %182 = load ptr, ptr %30, align 8
  %183 = getelementptr inbounds i8, ptr %182, i64 3
  store i8 %181, ptr %183, align 1
  %184 = load ptr, ptr %35, align 8
  %185 = getelementptr inbounds i8, ptr %184, i64 22
  %186 = load i64, ptr %38, align 8
  %187 = icmp ult i64 %186, 4294967295
  br i1 %187, label %188, label %190

188:                                              ; preds = %163
  %189 = load i64, ptr %38, align 8
  br label %191

190:                                              ; preds = %163
  br label %191

191:                                              ; preds = %190, %188
  %192 = phi i64 [ %189, %188 ], [ 4294967295, %190 ]
  %193 = trunc i64 %192 to i32
  store ptr %185, ptr %32, align 8
  store i32 %193, ptr %33, align 4
  %194 = load i32, ptr %33, align 4
  %195 = trunc i32 %194 to i8
  %196 = load ptr, ptr %32, align 8
  store i8 %195, ptr %196, align 1
  %197 = load i32, ptr %33, align 4
  %198 = lshr i32 %197, 8
  %199 = trunc i32 %198 to i8
  %200 = load ptr, ptr %32, align 8
  %201 = getelementptr inbounds i8, ptr %200, i64 1
  store i8 %199, ptr %201, align 1
  %202 = load i32, ptr %33, align 4
  %203 = lshr i32 %202, 16
  %204 = trunc i32 %203 to i8
  %205 = load ptr, ptr %32, align 8
  %206 = getelementptr inbounds i8, ptr %205, i64 2
  store i8 %204, ptr %206, align 1
  %207 = load i32, ptr %33, align 4
  %208 = lshr i32 %207, 24
  %209 = trunc i32 %208 to i8
  %210 = load ptr, ptr %32, align 8
  %211 = getelementptr inbounds i8, ptr %210, i64 3
  store i8 %209, ptr %211, align 1
  %212 = load ptr, ptr %35, align 8
  %213 = getelementptr inbounds i8, ptr %212, i64 26
  %214 = load i16, ptr %36, align 2
  store ptr %213, ptr %22, align 8
  store i16 %214, ptr %23, align 2
  %215 = load i16, ptr %23, align 2
  %216 = trunc i16 %215 to i8
  %217 = load ptr, ptr %22, align 8
  store i8 %216, ptr %217, align 1
  %218 = load i16, ptr %23, align 2
  %219 = zext i16 %218 to i32
  %220 = ashr i32 %219, 8
  %221 = trunc i32 %220 to i8
  %222 = load ptr, ptr %22, align 8
  %223 = getelementptr inbounds i8, ptr %222, i64 1
  store i8 %221, ptr %223, align 1
  %224 = load ptr, ptr %35, align 8
  %225 = getelementptr inbounds i8, ptr %224, i64 28
  %226 = load i16, ptr %37, align 2
  store ptr %225, ptr %24, align 8
  store i16 %226, ptr %25, align 2
  %227 = load i16, ptr %25, align 2
  %228 = trunc i16 %227 to i8
  %229 = load ptr, ptr %24, align 8
  store i8 %228, ptr %229, align 1
  %230 = load i16, ptr %25, align 2
  %231 = zext i16 %230 to i32
  %232 = ashr i32 %231, 8
  %233 = trunc i32 %232 to i8
  %234 = load ptr, ptr %24, align 8
  %235 = getelementptr inbounds i8, ptr %234, i64 1
  store i8 %233, ptr %235, align 1
  ret i32 1
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_writer_add_put_buf_callback(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  store i32 %1, ptr %6, align 4
  store ptr %2, ptr %7, align 8
  %9 = load ptr, ptr %7, align 8
  store ptr %9, ptr %8, align 8
  %10 = load ptr, ptr %8, align 8
  %11 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %10, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %12, i32 0, i32 12
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr %8, align 8
  %16 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %15, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %struct.mz_zip_archive, ptr %17, i32 0, i32 14
  %19 = load ptr, ptr %18, align 8
  %20 = load ptr, ptr %8, align 8
  %21 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %20, i32 0, i32 1
  %22 = load i64, ptr %21, align 8
  %23 = load ptr, ptr %5, align 8
  %24 = load i32, ptr %6, align 4
  %25 = sext i32 %24 to i64
  %26 = call i64 %14(ptr noundef %19, i64 noundef %22, ptr noundef %23, i64 noundef %25)
  %27 = trunc i64 %26 to i32
  %28 = load i32, ptr %6, align 4
  %29 = icmp ne i32 %27, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %3
  store i32 0, ptr %4, align 4
  br label %44

31:                                               ; preds = %3
  %32 = load i32, ptr %6, align 4
  %33 = sext i32 %32 to i64
  %34 = load ptr, ptr %8, align 8
  %35 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %34, i32 0, i32 1
  %36 = load i64, ptr %35, align 8
  %37 = add i64 %36, %33
  store i64 %37, ptr %35, align 8
  %38 = load i32, ptr %6, align 4
  %39 = sext i32 %38 to i64
  %40 = load ptr, ptr %8, align 8
  %41 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %40, i32 0, i32 2
  %42 = load i64, ptr %41, align 8
  %43 = add i64 %42, %39
  store i64 %43, ptr %41, align 8
  store i32 1, ptr %4, align 4
  br label %44

44:                                               ; preds = %31, %30
  %45 = load i32, ptr %4, align 4
  ret i32 %45
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_writer_add_to_central_dir(ptr noundef %0, ptr noundef %1, i16 noundef zeroext %2, ptr noundef %3, i16 noundef zeroext %4, ptr noundef %5, i16 noundef zeroext %6, i64 noundef %7, i64 noundef %8, i32 noundef %9, i16 noundef zeroext %10, i16 noundef zeroext %11, i16 noundef zeroext %12, i16 noundef zeroext %13, i64 noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef %17) #0 {
  %19 = alloca i32, align 4
  %20 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca ptr, align 8
  %26 = alloca ptr, align 8
  %27 = alloca ptr, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i32, align 4
  %31 = alloca ptr, align 8
  %32 = alloca ptr, align 8
  %33 = alloca i64, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca ptr, align 8
  %37 = alloca ptr, align 8
  %38 = alloca ptr, align 8
  %39 = alloca i64, align 8
  %40 = alloca i64, align 8
  %41 = alloca i32, align 4
  %42 = alloca ptr, align 8
  %43 = alloca ptr, align 8
  %44 = alloca i64, align 8
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca ptr, align 8
  %48 = alloca ptr, align 8
  %49 = alloca ptr, align 8
  %50 = alloca i64, align 8
  %51 = alloca i64, align 8
  %52 = alloca i32, align 4
  %53 = alloca ptr, align 8
  %54 = alloca ptr, align 8
  %55 = alloca i64, align 8
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca ptr, align 8
  %59 = alloca ptr, align 8
  %60 = alloca ptr, align 8
  %61 = alloca i64, align 8
  %62 = alloca i64, align 8
  %63 = alloca i32, align 4
  %64 = alloca ptr, align 8
  %65 = alloca ptr, align 8
  %66 = alloca i64, align 8
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  %69 = alloca ptr, align 8
  %70 = alloca ptr, align 8
  %71 = alloca ptr, align 8
  %72 = alloca i64, align 8
  %73 = alloca i64, align 8
  %74 = alloca i32, align 4
  %75 = alloca ptr, align 8
  %76 = alloca ptr, align 8
  %77 = alloca i64, align 8
  %78 = alloca i32, align 4
  %79 = alloca i32, align 4
  %80 = alloca ptr, align 8
  %81 = alloca ptr, align 8
  %82 = alloca ptr, align 8
  %83 = alloca i64, align 8
  %84 = alloca i64, align 8
  %85 = alloca i32, align 4
  %86 = alloca ptr, align 8
  %87 = alloca ptr, align 8
  %88 = alloca i64, align 8
  %89 = alloca i32, align 4
  %90 = alloca ptr, align 8
  %91 = alloca i32, align 4
  %92 = alloca ptr, align 8
  %93 = alloca i32, align 4
  %94 = alloca ptr, align 8
  %95 = alloca i32, align 4
  %96 = alloca ptr, align 8
  %97 = alloca i32, align 4
  %98 = alloca i32, align 4
  %99 = alloca ptr, align 8
  %100 = alloca ptr, align 8
  %101 = alloca i16, align 2
  %102 = alloca ptr, align 8
  %103 = alloca i16, align 2
  %104 = alloca ptr, align 8
  %105 = alloca i16, align 2
  %106 = alloca i64, align 8
  %107 = alloca i64, align 8
  %108 = alloca i32, align 4
  %109 = alloca i16, align 2
  %110 = alloca i16, align 2
  %111 = alloca i16, align 2
  %112 = alloca i16, align 2
  %113 = alloca i64, align 8
  %114 = alloca i32, align 4
  %115 = alloca ptr, align 8
  %116 = alloca i32, align 4
  %117 = alloca ptr, align 8
  %118 = alloca i32, align 4
  %119 = alloca i64, align 8
  %120 = alloca [46 x i8], align 16
  store ptr %0, ptr %99, align 8
  store ptr %1, ptr %100, align 8
  store i16 %2, ptr %101, align 2
  store ptr %3, ptr %102, align 8
  store i16 %4, ptr %103, align 2
  store ptr %5, ptr %104, align 8
  store i16 %6, ptr %105, align 2
  store i64 %7, ptr %106, align 8
  store i64 %8, ptr %107, align 8
  store i32 %9, ptr %108, align 4
  store i16 %10, ptr %109, align 2
  store i16 %11, ptr %110, align 2
  store i16 %12, ptr %111, align 2
  store i16 %13, ptr %112, align 2
  store i64 %14, ptr %113, align 8
  store i32 %15, ptr %114, align 4
  store ptr %16, ptr %115, align 8
  store i32 %17, ptr %116, align 4
  %121 = load ptr, ptr %99, align 8
  %122 = getelementptr inbounds %struct.mz_zip_archive, ptr %121, i32 0, i32 15
  %123 = load ptr, ptr %122, align 8
  store ptr %123, ptr %117, align 8
  %124 = load ptr, ptr %117, align 8
  %125 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %124, i32 0, i32 0
  %126 = getelementptr inbounds %struct.mz_zip_array, ptr %125, i32 0, i32 1
  %127 = load i64, ptr %126, align 8
  %128 = trunc i64 %127 to i32
  store i32 %128, ptr %118, align 4
  %129 = load ptr, ptr %117, align 8
  %130 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %129, i32 0, i32 0
  %131 = getelementptr inbounds %struct.mz_zip_array, ptr %130, i32 0, i32 1
  %132 = load i64, ptr %131, align 8
  store i64 %132, ptr %119, align 8
  %133 = load ptr, ptr %99, align 8
  %134 = getelementptr inbounds %struct.mz_zip_archive, ptr %133, i32 0, i32 15
  %135 = load ptr, ptr %134, align 8
  %136 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %135, i32 0, i32 4
  %137 = load i32, ptr %136, align 4
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %152, label %139

139:                                              ; preds = %18
  %140 = load i64, ptr %113, align 8
  %141 = icmp ugt i64 %140, 4294967295
  br i1 %141, label %142, label %151

142:                                              ; preds = %139
  %143 = load ptr, ptr %99, align 8
  store ptr %143, ptr %90, align 8
  store i32 3, ptr %91, align 4
  %144 = load ptr, ptr %90, align 8
  %145 = icmp ne ptr %144, null
  br i1 %145, label %146, label %150

146:                                              ; preds = %142
  %147 = load i32, ptr %91, align 4
  %148 = load ptr, ptr %90, align 8
  %149 = getelementptr inbounds %struct.mz_zip_archive, ptr %148, i32 0, i32 5
  store i32 %147, ptr %149, align 4
  br label %150

150:                                              ; preds = %142, %146
  store i32 0, ptr %98, align 4
  br label %671

151:                                              ; preds = %139
  br label %152

152:                                              ; preds = %151, %18
  %153 = load ptr, ptr %117, align 8
  %154 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %153, i32 0, i32 0
  %155 = getelementptr inbounds %struct.mz_zip_array, ptr %154, i32 0, i32 1
  %156 = load i64, ptr %155, align 8
  %157 = add i64 %156, 46
  %158 = load i16, ptr %101, align 2
  %159 = zext i16 %158 to i64
  %160 = add i64 %157, %159
  %161 = load i16, ptr %103, align 2
  %162 = zext i16 %161 to i64
  %163 = add i64 %160, %162
  %164 = load i32, ptr %116, align 4
  %165 = zext i32 %164 to i64
  %166 = add i64 %163, %165
  %167 = load i16, ptr %105, align 2
  %168 = zext i16 %167 to i64
  %169 = add i64 %166, %168
  %170 = icmp uge i64 %169, 4294967295
  br i1 %170, label %171, label %180

171:                                              ; preds = %152
  %172 = load ptr, ptr %99, align 8
  store ptr %172, ptr %92, align 8
  store i32 15, ptr %93, align 4
  %173 = load ptr, ptr %92, align 8
  %174 = icmp ne ptr %173, null
  br i1 %174, label %175, label %179

175:                                              ; preds = %171
  %176 = load i32, ptr %93, align 4
  %177 = load ptr, ptr %92, align 8
  %178 = getelementptr inbounds %struct.mz_zip_archive, ptr %177, i32 0, i32 5
  store i32 %176, ptr %178, align 4
  br label %179

179:                                              ; preds = %171, %175
  store i32 0, ptr %98, align 4
  br label %671

180:                                              ; preds = %152
  %181 = load ptr, ptr %99, align 8
  %182 = getelementptr inbounds [46 x i8], ptr %120, i64 0, i64 0
  %183 = load i16, ptr %101, align 2
  %184 = load i16, ptr %103, align 2
  %185 = zext i16 %184 to i32
  %186 = load i32, ptr %116, align 4
  %187 = add i32 %185, %186
  %188 = trunc i32 %187 to i16
  %189 = load i16, ptr %105, align 2
  %190 = load i64, ptr %106, align 8
  %191 = load i64, ptr %107, align 8
  %192 = load i32, ptr %108, align 4
  %193 = load i16, ptr %109, align 2
  %194 = load i16, ptr %110, align 2
  %195 = load i16, ptr %111, align 2
  %196 = load i16, ptr %112, align 2
  %197 = load i64, ptr %113, align 8
  %198 = load i32, ptr %114, align 4
  %199 = call i32 @mz_zip_writer_create_central_dir_header(ptr noundef %181, ptr noundef %182, i16 noundef zeroext %183, i16 noundef zeroext %188, i16 noundef zeroext %189, i64 noundef %190, i64 noundef %191, i32 noundef %192, i16 noundef zeroext %193, i16 noundef zeroext %194, i16 noundef zeroext %195, i16 noundef zeroext %196, i64 noundef %197, i32 noundef %198)
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %210, label %201

201:                                              ; preds = %180
  %202 = load ptr, ptr %99, align 8
  store ptr %202, ptr %94, align 8
  store i32 27, ptr %95, align 4
  %203 = load ptr, ptr %94, align 8
  %204 = icmp ne ptr %203, null
  br i1 %204, label %205, label %209

205:                                              ; preds = %201
  %206 = load i32, ptr %95, align 4
  %207 = load ptr, ptr %94, align 8
  %208 = getelementptr inbounds %struct.mz_zip_archive, ptr %207, i32 0, i32 5
  store i32 %206, ptr %208, align 4
  br label %209

209:                                              ; preds = %201, %205
  store i32 0, ptr %98, align 4
  br label %671

210:                                              ; preds = %180
  %211 = load ptr, ptr %99, align 8
  %212 = load ptr, ptr %117, align 8
  %213 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %212, i32 0, i32 0
  %214 = getelementptr inbounds [46 x i8], ptr %120, i64 0, i64 0
  store ptr %211, ptr %25, align 8
  store ptr %213, ptr %26, align 8
  store ptr %214, ptr %27, align 8
  store i64 46, ptr %28, align 8
  %215 = load ptr, ptr %26, align 8
  %216 = getelementptr inbounds %struct.mz_zip_array, ptr %215, i32 0, i32 1
  %217 = load i64, ptr %216, align 8
  store i64 %217, ptr %29, align 8
  %218 = load ptr, ptr %25, align 8
  %219 = load ptr, ptr %26, align 8
  %220 = load i64, ptr %29, align 8
  %221 = load i64, ptr %28, align 8
  %222 = add i64 %220, %221
  store ptr %218, ptr %20, align 8
  store ptr %219, ptr %21, align 8
  store i64 %222, ptr %22, align 8
  store i32 1, ptr %23, align 4
  %223 = load i64, ptr %22, align 8
  %224 = load ptr, ptr %21, align 8
  %225 = getelementptr inbounds %struct.mz_zip_array, ptr %224, i32 0, i32 2
  %226 = load i64, ptr %225, align 8
  %227 = icmp ugt i64 %223, %226
  br i1 %227, label %228, label %237

228:                                              ; preds = %210
  %229 = load ptr, ptr %20, align 8
  %230 = load ptr, ptr %21, align 8
  %231 = load i64, ptr %22, align 8
  %232 = load i32, ptr %23, align 4
  %233 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %229, ptr noundef %230, i64 noundef %231, i32 noundef %232)
  %234 = icmp ne i32 %233, 0
  br i1 %234, label %236, label %235

235:                                              ; preds = %228
  store i32 0, ptr %19, align 4
  br label %241

236:                                              ; preds = %228
  br label %237

237:                                              ; preds = %236, %210
  %238 = load i64, ptr %22, align 8
  %239 = load ptr, ptr %21, align 8
  %240 = getelementptr inbounds %struct.mz_zip_array, ptr %239, i32 0, i32 1
  store i64 %238, ptr %240, align 8
  store i32 1, ptr %19, align 4
  br label %241

241:                                              ; preds = %237, %235
  %242 = load i32, ptr %19, align 4
  %243 = icmp ne i32 %242, 0
  br i1 %243, label %245, label %244

244:                                              ; preds = %241
  store i32 0, ptr %24, align 4
  br label %277

245:                                              ; preds = %241
  %246 = load i64, ptr %28, align 8
  %247 = icmp ugt i64 %246, 0
  br i1 %247, label %248, label %276

248:                                              ; preds = %245
  %249 = load ptr, ptr %26, align 8
  %250 = load ptr, ptr %249, align 8
  %251 = load i64, ptr %29, align 8
  %252 = load ptr, ptr %26, align 8
  %253 = getelementptr inbounds %struct.mz_zip_array, ptr %252, i32 0, i32 3
  %254 = load i32, ptr %253, align 8
  %255 = zext i32 %254 to i64
  %256 = mul i64 %251, %255
  %257 = getelementptr inbounds i8, ptr %250, i64 %256
  %258 = load ptr, ptr %27, align 8
  %259 = load i64, ptr %28, align 8
  %260 = load ptr, ptr %26, align 8
  %261 = getelementptr inbounds %struct.mz_zip_array, ptr %260, i32 0, i32 3
  %262 = load i32, ptr %261, align 8
  %263 = zext i32 %262 to i64
  %264 = mul i64 %259, %263
  %265 = load ptr, ptr %26, align 8
  %266 = load ptr, ptr %265, align 8
  %267 = load i64, ptr %29, align 8
  %268 = load ptr, ptr %26, align 8
  %269 = getelementptr inbounds %struct.mz_zip_array, ptr %268, i32 0, i32 3
  %270 = load i32, ptr %269, align 8
  %271 = zext i32 %270 to i64
  %272 = mul i64 %267, %271
  %273 = getelementptr inbounds i8, ptr %266, i64 %272
  %274 = call i64 @llvm.objectsize.i64.p0(ptr %273, i1 false, i1 true, i1 false)
  %275 = call ptr @__memcpy_chk(ptr noundef %257, ptr noundef %258, i64 noundef %264, i64 noundef %274) #11
  br label %276

276:                                              ; preds = %248, %245
  store i32 1, ptr %24, align 4
  br label %277

277:                                              ; preds = %244, %276
  %278 = load i32, ptr %24, align 4
  %279 = icmp ne i32 %278, 0
  br i1 %279, label %280, label %637

280:                                              ; preds = %277
  %281 = load ptr, ptr %99, align 8
  %282 = load ptr, ptr %117, align 8
  %283 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %282, i32 0, i32 0
  %284 = load ptr, ptr %100, align 8
  %285 = load i16, ptr %101, align 2
  %286 = zext i16 %285 to i64
  store ptr %281, ptr %36, align 8
  store ptr %283, ptr %37, align 8
  store ptr %284, ptr %38, align 8
  store i64 %286, ptr %39, align 8
  %287 = load ptr, ptr %37, align 8
  %288 = getelementptr inbounds %struct.mz_zip_array, ptr %287, i32 0, i32 1
  %289 = load i64, ptr %288, align 8
  store i64 %289, ptr %40, align 8
  %290 = load ptr, ptr %36, align 8
  %291 = load ptr, ptr %37, align 8
  %292 = load i64, ptr %40, align 8
  %293 = load i64, ptr %39, align 8
  %294 = add i64 %292, %293
  store ptr %290, ptr %31, align 8
  store ptr %291, ptr %32, align 8
  store i64 %294, ptr %33, align 8
  store i32 1, ptr %34, align 4
  %295 = load i64, ptr %33, align 8
  %296 = load ptr, ptr %32, align 8
  %297 = getelementptr inbounds %struct.mz_zip_array, ptr %296, i32 0, i32 2
  %298 = load i64, ptr %297, align 8
  %299 = icmp ugt i64 %295, %298
  br i1 %299, label %300, label %309

300:                                              ; preds = %280
  %301 = load ptr, ptr %31, align 8
  %302 = load ptr, ptr %32, align 8
  %303 = load i64, ptr %33, align 8
  %304 = load i32, ptr %34, align 4
  %305 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %301, ptr noundef %302, i64 noundef %303, i32 noundef %304)
  %306 = icmp ne i32 %305, 0
  br i1 %306, label %308, label %307

307:                                              ; preds = %300
  store i32 0, ptr %30, align 4
  br label %313

308:                                              ; preds = %300
  br label %309

309:                                              ; preds = %308, %280
  %310 = load i64, ptr %33, align 8
  %311 = load ptr, ptr %32, align 8
  %312 = getelementptr inbounds %struct.mz_zip_array, ptr %311, i32 0, i32 1
  store i64 %310, ptr %312, align 8
  store i32 1, ptr %30, align 4
  br label %313

313:                                              ; preds = %309, %307
  %314 = load i32, ptr %30, align 4
  %315 = icmp ne i32 %314, 0
  br i1 %315, label %317, label %316

316:                                              ; preds = %313
  store i32 0, ptr %35, align 4
  br label %349

317:                                              ; preds = %313
  %318 = load i64, ptr %39, align 8
  %319 = icmp ugt i64 %318, 0
  br i1 %319, label %320, label %348

320:                                              ; preds = %317
  %321 = load ptr, ptr %37, align 8
  %322 = load ptr, ptr %321, align 8
  %323 = load i64, ptr %40, align 8
  %324 = load ptr, ptr %37, align 8
  %325 = getelementptr inbounds %struct.mz_zip_array, ptr %324, i32 0, i32 3
  %326 = load i32, ptr %325, align 8
  %327 = zext i32 %326 to i64
  %328 = mul i64 %323, %327
  %329 = getelementptr inbounds i8, ptr %322, i64 %328
  %330 = load ptr, ptr %38, align 8
  %331 = load i64, ptr %39, align 8
  %332 = load ptr, ptr %37, align 8
  %333 = getelementptr inbounds %struct.mz_zip_array, ptr %332, i32 0, i32 3
  %334 = load i32, ptr %333, align 8
  %335 = zext i32 %334 to i64
  %336 = mul i64 %331, %335
  %337 = load ptr, ptr %37, align 8
  %338 = load ptr, ptr %337, align 8
  %339 = load i64, ptr %40, align 8
  %340 = load ptr, ptr %37, align 8
  %341 = getelementptr inbounds %struct.mz_zip_array, ptr %340, i32 0, i32 3
  %342 = load i32, ptr %341, align 8
  %343 = zext i32 %342 to i64
  %344 = mul i64 %339, %343
  %345 = getelementptr inbounds i8, ptr %338, i64 %344
  %346 = call i64 @llvm.objectsize.i64.p0(ptr %345, i1 false, i1 true, i1 false)
  %347 = call ptr @__memcpy_chk(ptr noundef %329, ptr noundef %330, i64 noundef %336, i64 noundef %346) #11
  br label %348

348:                                              ; preds = %320, %317
  store i32 1, ptr %35, align 4
  br label %349

349:                                              ; preds = %316, %348
  %350 = load i32, ptr %35, align 4
  %351 = icmp ne i32 %350, 0
  br i1 %351, label %352, label %637

352:                                              ; preds = %349
  %353 = load ptr, ptr %99, align 8
  %354 = load ptr, ptr %117, align 8
  %355 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %354, i32 0, i32 0
  %356 = load ptr, ptr %102, align 8
  %357 = load i16, ptr %103, align 2
  %358 = zext i16 %357 to i64
  store ptr %353, ptr %47, align 8
  store ptr %355, ptr %48, align 8
  store ptr %356, ptr %49, align 8
  store i64 %358, ptr %50, align 8
  %359 = load ptr, ptr %48, align 8
  %360 = getelementptr inbounds %struct.mz_zip_array, ptr %359, i32 0, i32 1
  %361 = load i64, ptr %360, align 8
  store i64 %361, ptr %51, align 8
  %362 = load ptr, ptr %47, align 8
  %363 = load ptr, ptr %48, align 8
  %364 = load i64, ptr %51, align 8
  %365 = load i64, ptr %50, align 8
  %366 = add i64 %364, %365
  store ptr %362, ptr %42, align 8
  store ptr %363, ptr %43, align 8
  store i64 %366, ptr %44, align 8
  store i32 1, ptr %45, align 4
  %367 = load i64, ptr %44, align 8
  %368 = load ptr, ptr %43, align 8
  %369 = getelementptr inbounds %struct.mz_zip_array, ptr %368, i32 0, i32 2
  %370 = load i64, ptr %369, align 8
  %371 = icmp ugt i64 %367, %370
  br i1 %371, label %372, label %381

372:                                              ; preds = %352
  %373 = load ptr, ptr %42, align 8
  %374 = load ptr, ptr %43, align 8
  %375 = load i64, ptr %44, align 8
  %376 = load i32, ptr %45, align 4
  %377 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %373, ptr noundef %374, i64 noundef %375, i32 noundef %376)
  %378 = icmp ne i32 %377, 0
  br i1 %378, label %380, label %379

379:                                              ; preds = %372
  store i32 0, ptr %41, align 4
  br label %385

380:                                              ; preds = %372
  br label %381

381:                                              ; preds = %380, %352
  %382 = load i64, ptr %44, align 8
  %383 = load ptr, ptr %43, align 8
  %384 = getelementptr inbounds %struct.mz_zip_array, ptr %383, i32 0, i32 1
  store i64 %382, ptr %384, align 8
  store i32 1, ptr %41, align 4
  br label %385

385:                                              ; preds = %381, %379
  %386 = load i32, ptr %41, align 4
  %387 = icmp ne i32 %386, 0
  br i1 %387, label %389, label %388

388:                                              ; preds = %385
  store i32 0, ptr %46, align 4
  br label %421

389:                                              ; preds = %385
  %390 = load i64, ptr %50, align 8
  %391 = icmp ugt i64 %390, 0
  br i1 %391, label %392, label %420

392:                                              ; preds = %389
  %393 = load ptr, ptr %48, align 8
  %394 = load ptr, ptr %393, align 8
  %395 = load i64, ptr %51, align 8
  %396 = load ptr, ptr %48, align 8
  %397 = getelementptr inbounds %struct.mz_zip_array, ptr %396, i32 0, i32 3
  %398 = load i32, ptr %397, align 8
  %399 = zext i32 %398 to i64
  %400 = mul i64 %395, %399
  %401 = getelementptr inbounds i8, ptr %394, i64 %400
  %402 = load ptr, ptr %49, align 8
  %403 = load i64, ptr %50, align 8
  %404 = load ptr, ptr %48, align 8
  %405 = getelementptr inbounds %struct.mz_zip_array, ptr %404, i32 0, i32 3
  %406 = load i32, ptr %405, align 8
  %407 = zext i32 %406 to i64
  %408 = mul i64 %403, %407
  %409 = load ptr, ptr %48, align 8
  %410 = load ptr, ptr %409, align 8
  %411 = load i64, ptr %51, align 8
  %412 = load ptr, ptr %48, align 8
  %413 = getelementptr inbounds %struct.mz_zip_array, ptr %412, i32 0, i32 3
  %414 = load i32, ptr %413, align 8
  %415 = zext i32 %414 to i64
  %416 = mul i64 %411, %415
  %417 = getelementptr inbounds i8, ptr %410, i64 %416
  %418 = call i64 @llvm.objectsize.i64.p0(ptr %417, i1 false, i1 true, i1 false)
  %419 = call ptr @__memcpy_chk(ptr noundef %401, ptr noundef %402, i64 noundef %408, i64 noundef %418) #11
  br label %420

420:                                              ; preds = %392, %389
  store i32 1, ptr %46, align 4
  br label %421

421:                                              ; preds = %388, %420
  %422 = load i32, ptr %46, align 4
  %423 = icmp ne i32 %422, 0
  br i1 %423, label %424, label %637

424:                                              ; preds = %421
  %425 = load ptr, ptr %99, align 8
  %426 = load ptr, ptr %117, align 8
  %427 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %426, i32 0, i32 0
  %428 = load ptr, ptr %115, align 8
  %429 = load i32, ptr %116, align 4
  %430 = zext i32 %429 to i64
  store ptr %425, ptr %58, align 8
  store ptr %427, ptr %59, align 8
  store ptr %428, ptr %60, align 8
  store i64 %430, ptr %61, align 8
  %431 = load ptr, ptr %59, align 8
  %432 = getelementptr inbounds %struct.mz_zip_array, ptr %431, i32 0, i32 1
  %433 = load i64, ptr %432, align 8
  store i64 %433, ptr %62, align 8
  %434 = load ptr, ptr %58, align 8
  %435 = load ptr, ptr %59, align 8
  %436 = load i64, ptr %62, align 8
  %437 = load i64, ptr %61, align 8
  %438 = add i64 %436, %437
  store ptr %434, ptr %53, align 8
  store ptr %435, ptr %54, align 8
  store i64 %438, ptr %55, align 8
  store i32 1, ptr %56, align 4
  %439 = load i64, ptr %55, align 8
  %440 = load ptr, ptr %54, align 8
  %441 = getelementptr inbounds %struct.mz_zip_array, ptr %440, i32 0, i32 2
  %442 = load i64, ptr %441, align 8
  %443 = icmp ugt i64 %439, %442
  br i1 %443, label %444, label %453

444:                                              ; preds = %424
  %445 = load ptr, ptr %53, align 8
  %446 = load ptr, ptr %54, align 8
  %447 = load i64, ptr %55, align 8
  %448 = load i32, ptr %56, align 4
  %449 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %445, ptr noundef %446, i64 noundef %447, i32 noundef %448)
  %450 = icmp ne i32 %449, 0
  br i1 %450, label %452, label %451

451:                                              ; preds = %444
  store i32 0, ptr %52, align 4
  br label %457

452:                                              ; preds = %444
  br label %453

453:                                              ; preds = %452, %424
  %454 = load i64, ptr %55, align 8
  %455 = load ptr, ptr %54, align 8
  %456 = getelementptr inbounds %struct.mz_zip_array, ptr %455, i32 0, i32 1
  store i64 %454, ptr %456, align 8
  store i32 1, ptr %52, align 4
  br label %457

457:                                              ; preds = %453, %451
  %458 = load i32, ptr %52, align 4
  %459 = icmp ne i32 %458, 0
  br i1 %459, label %461, label %460

460:                                              ; preds = %457
  store i32 0, ptr %57, align 4
  br label %493

461:                                              ; preds = %457
  %462 = load i64, ptr %61, align 8
  %463 = icmp ugt i64 %462, 0
  br i1 %463, label %464, label %492

464:                                              ; preds = %461
  %465 = load ptr, ptr %59, align 8
  %466 = load ptr, ptr %465, align 8
  %467 = load i64, ptr %62, align 8
  %468 = load ptr, ptr %59, align 8
  %469 = getelementptr inbounds %struct.mz_zip_array, ptr %468, i32 0, i32 3
  %470 = load i32, ptr %469, align 8
  %471 = zext i32 %470 to i64
  %472 = mul i64 %467, %471
  %473 = getelementptr inbounds i8, ptr %466, i64 %472
  %474 = load ptr, ptr %60, align 8
  %475 = load i64, ptr %61, align 8
  %476 = load ptr, ptr %59, align 8
  %477 = getelementptr inbounds %struct.mz_zip_array, ptr %476, i32 0, i32 3
  %478 = load i32, ptr %477, align 8
  %479 = zext i32 %478 to i64
  %480 = mul i64 %475, %479
  %481 = load ptr, ptr %59, align 8
  %482 = load ptr, ptr %481, align 8
  %483 = load i64, ptr %62, align 8
  %484 = load ptr, ptr %59, align 8
  %485 = getelementptr inbounds %struct.mz_zip_array, ptr %484, i32 0, i32 3
  %486 = load i32, ptr %485, align 8
  %487 = zext i32 %486 to i64
  %488 = mul i64 %483, %487
  %489 = getelementptr inbounds i8, ptr %482, i64 %488
  %490 = call i64 @llvm.objectsize.i64.p0(ptr %489, i1 false, i1 true, i1 false)
  %491 = call ptr @__memcpy_chk(ptr noundef %473, ptr noundef %474, i64 noundef %480, i64 noundef %490) #11
  br label %492

492:                                              ; preds = %464, %461
  store i32 1, ptr %57, align 4
  br label %493

493:                                              ; preds = %460, %492
  %494 = load i32, ptr %57, align 4
  %495 = icmp ne i32 %494, 0
  br i1 %495, label %496, label %637

496:                                              ; preds = %493
  %497 = load ptr, ptr %99, align 8
  %498 = load ptr, ptr %117, align 8
  %499 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %498, i32 0, i32 0
  %500 = load ptr, ptr %104, align 8
  %501 = load i16, ptr %105, align 2
  %502 = zext i16 %501 to i64
  store ptr %497, ptr %69, align 8
  store ptr %499, ptr %70, align 8
  store ptr %500, ptr %71, align 8
  store i64 %502, ptr %72, align 8
  %503 = load ptr, ptr %70, align 8
  %504 = getelementptr inbounds %struct.mz_zip_array, ptr %503, i32 0, i32 1
  %505 = load i64, ptr %504, align 8
  store i64 %505, ptr %73, align 8
  %506 = load ptr, ptr %69, align 8
  %507 = load ptr, ptr %70, align 8
  %508 = load i64, ptr %73, align 8
  %509 = load i64, ptr %72, align 8
  %510 = add i64 %508, %509
  store ptr %506, ptr %64, align 8
  store ptr %507, ptr %65, align 8
  store i64 %510, ptr %66, align 8
  store i32 1, ptr %67, align 4
  %511 = load i64, ptr %66, align 8
  %512 = load ptr, ptr %65, align 8
  %513 = getelementptr inbounds %struct.mz_zip_array, ptr %512, i32 0, i32 2
  %514 = load i64, ptr %513, align 8
  %515 = icmp ugt i64 %511, %514
  br i1 %515, label %516, label %525

516:                                              ; preds = %496
  %517 = load ptr, ptr %64, align 8
  %518 = load ptr, ptr %65, align 8
  %519 = load i64, ptr %66, align 8
  %520 = load i32, ptr %67, align 4
  %521 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %517, ptr noundef %518, i64 noundef %519, i32 noundef %520)
  %522 = icmp ne i32 %521, 0
  br i1 %522, label %524, label %523

523:                                              ; preds = %516
  store i32 0, ptr %63, align 4
  br label %529

524:                                              ; preds = %516
  br label %525

525:                                              ; preds = %524, %496
  %526 = load i64, ptr %66, align 8
  %527 = load ptr, ptr %65, align 8
  %528 = getelementptr inbounds %struct.mz_zip_array, ptr %527, i32 0, i32 1
  store i64 %526, ptr %528, align 8
  store i32 1, ptr %63, align 4
  br label %529

529:                                              ; preds = %525, %523
  %530 = load i32, ptr %63, align 4
  %531 = icmp ne i32 %530, 0
  br i1 %531, label %533, label %532

532:                                              ; preds = %529
  store i32 0, ptr %68, align 4
  br label %565

533:                                              ; preds = %529
  %534 = load i64, ptr %72, align 8
  %535 = icmp ugt i64 %534, 0
  br i1 %535, label %536, label %564

536:                                              ; preds = %533
  %537 = load ptr, ptr %70, align 8
  %538 = load ptr, ptr %537, align 8
  %539 = load i64, ptr %73, align 8
  %540 = load ptr, ptr %70, align 8
  %541 = getelementptr inbounds %struct.mz_zip_array, ptr %540, i32 0, i32 3
  %542 = load i32, ptr %541, align 8
  %543 = zext i32 %542 to i64
  %544 = mul i64 %539, %543
  %545 = getelementptr inbounds i8, ptr %538, i64 %544
  %546 = load ptr, ptr %71, align 8
  %547 = load i64, ptr %72, align 8
  %548 = load ptr, ptr %70, align 8
  %549 = getelementptr inbounds %struct.mz_zip_array, ptr %548, i32 0, i32 3
  %550 = load i32, ptr %549, align 8
  %551 = zext i32 %550 to i64
  %552 = mul i64 %547, %551
  %553 = load ptr, ptr %70, align 8
  %554 = load ptr, ptr %553, align 8
  %555 = load i64, ptr %73, align 8
  %556 = load ptr, ptr %70, align 8
  %557 = getelementptr inbounds %struct.mz_zip_array, ptr %556, i32 0, i32 3
  %558 = load i32, ptr %557, align 8
  %559 = zext i32 %558 to i64
  %560 = mul i64 %555, %559
  %561 = getelementptr inbounds i8, ptr %554, i64 %560
  %562 = call i64 @llvm.objectsize.i64.p0(ptr %561, i1 false, i1 true, i1 false)
  %563 = call ptr @__memcpy_chk(ptr noundef %545, ptr noundef %546, i64 noundef %552, i64 noundef %562) #11
  br label %564

564:                                              ; preds = %536, %533
  store i32 1, ptr %68, align 4
  br label %565

565:                                              ; preds = %532, %564
  %566 = load i32, ptr %68, align 4
  %567 = icmp ne i32 %566, 0
  br i1 %567, label %568, label %637

568:                                              ; preds = %565
  %569 = load ptr, ptr %99, align 8
  %570 = load ptr, ptr %117, align 8
  %571 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %570, i32 0, i32 1
  store ptr %569, ptr %80, align 8
  store ptr %571, ptr %81, align 8
  store ptr %118, ptr %82, align 8
  store i64 1, ptr %83, align 8
  %572 = load ptr, ptr %81, align 8
  %573 = getelementptr inbounds %struct.mz_zip_array, ptr %572, i32 0, i32 1
  %574 = load i64, ptr %573, align 8
  store i64 %574, ptr %84, align 8
  %575 = load ptr, ptr %80, align 8
  %576 = load ptr, ptr %81, align 8
  %577 = load i64, ptr %84, align 8
  %578 = load i64, ptr %83, align 8
  %579 = add i64 %577, %578
  store ptr %575, ptr %75, align 8
  store ptr %576, ptr %76, align 8
  store i64 %579, ptr %77, align 8
  store i32 1, ptr %78, align 4
  %580 = load i64, ptr %77, align 8
  %581 = load ptr, ptr %76, align 8
  %582 = getelementptr inbounds %struct.mz_zip_array, ptr %581, i32 0, i32 2
  %583 = load i64, ptr %582, align 8
  %584 = icmp ugt i64 %580, %583
  br i1 %584, label %585, label %594

585:                                              ; preds = %568
  %586 = load ptr, ptr %75, align 8
  %587 = load ptr, ptr %76, align 8
  %588 = load i64, ptr %77, align 8
  %589 = load i32, ptr %78, align 4
  %590 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %586, ptr noundef %587, i64 noundef %588, i32 noundef %589)
  %591 = icmp ne i32 %590, 0
  br i1 %591, label %593, label %592

592:                                              ; preds = %585
  store i32 0, ptr %74, align 4
  br label %598

593:                                              ; preds = %585
  br label %594

594:                                              ; preds = %593, %568
  %595 = load i64, ptr %77, align 8
  %596 = load ptr, ptr %76, align 8
  %597 = getelementptr inbounds %struct.mz_zip_array, ptr %596, i32 0, i32 1
  store i64 %595, ptr %597, align 8
  store i32 1, ptr %74, align 4
  br label %598

598:                                              ; preds = %594, %592
  %599 = load i32, ptr %74, align 4
  %600 = icmp ne i32 %599, 0
  br i1 %600, label %602, label %601

601:                                              ; preds = %598
  store i32 0, ptr %79, align 4
  br label %634

602:                                              ; preds = %598
  %603 = load i64, ptr %83, align 8
  %604 = icmp ugt i64 %603, 0
  br i1 %604, label %605, label %633

605:                                              ; preds = %602
  %606 = load ptr, ptr %81, align 8
  %607 = load ptr, ptr %606, align 8
  %608 = load i64, ptr %84, align 8
  %609 = load ptr, ptr %81, align 8
  %610 = getelementptr inbounds %struct.mz_zip_array, ptr %609, i32 0, i32 3
  %611 = load i32, ptr %610, align 8
  %612 = zext i32 %611 to i64
  %613 = mul i64 %608, %612
  %614 = getelementptr inbounds i8, ptr %607, i64 %613
  %615 = load ptr, ptr %82, align 8
  %616 = load i64, ptr %83, align 8
  %617 = load ptr, ptr %81, align 8
  %618 = getelementptr inbounds %struct.mz_zip_array, ptr %617, i32 0, i32 3
  %619 = load i32, ptr %618, align 8
  %620 = zext i32 %619 to i64
  %621 = mul i64 %616, %620
  %622 = load ptr, ptr %81, align 8
  %623 = load ptr, ptr %622, align 8
  %624 = load i64, ptr %84, align 8
  %625 = load ptr, ptr %81, align 8
  %626 = getelementptr inbounds %struct.mz_zip_array, ptr %625, i32 0, i32 3
  %627 = load i32, ptr %626, align 8
  %628 = zext i32 %627 to i64
  %629 = mul i64 %624, %628
  %630 = getelementptr inbounds i8, ptr %623, i64 %629
  %631 = call i64 @llvm.objectsize.i64.p0(ptr %630, i1 false, i1 true, i1 false)
  %632 = call ptr @__memcpy_chk(ptr noundef %614, ptr noundef %615, i64 noundef %621, i64 noundef %631) #11
  br label %633

633:                                              ; preds = %605, %602
  store i32 1, ptr %79, align 4
  br label %634

634:                                              ; preds = %601, %633
  %635 = load i32, ptr %79, align 4
  %636 = icmp ne i32 %635, 0
  br i1 %636, label %670, label %637

637:                                              ; preds = %634, %565, %493, %421, %349, %277
  %638 = load ptr, ptr %99, align 8
  %639 = load ptr, ptr %117, align 8
  %640 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %639, i32 0, i32 0
  %641 = load i64, ptr %119, align 8
  store ptr %638, ptr %86, align 8
  store ptr %640, ptr %87, align 8
  store i64 %641, ptr %88, align 8
  store i32 0, ptr %89, align 4
  %642 = load i64, ptr %88, align 8
  %643 = load ptr, ptr %87, align 8
  %644 = getelementptr inbounds %struct.mz_zip_array, ptr %643, i32 0, i32 2
  %645 = load i64, ptr %644, align 8
  %646 = icmp ugt i64 %642, %645
  br i1 %646, label %647, label %656

647:                                              ; preds = %637
  %648 = load ptr, ptr %86, align 8
  %649 = load ptr, ptr %87, align 8
  %650 = load i64, ptr %88, align 8
  %651 = load i32, ptr %89, align 4
  %652 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %648, ptr noundef %649, i64 noundef %650, i32 noundef %651)
  %653 = icmp ne i32 %652, 0
  br i1 %653, label %655, label %654

654:                                              ; preds = %647
  store i32 0, ptr %85, align 4
  br label %660

655:                                              ; preds = %647
  br label %656

656:                                              ; preds = %655, %637
  %657 = load i64, ptr %88, align 8
  %658 = load ptr, ptr %87, align 8
  %659 = getelementptr inbounds %struct.mz_zip_array, ptr %658, i32 0, i32 1
  store i64 %657, ptr %659, align 8
  store i32 1, ptr %85, align 4
  br label %660

660:                                              ; preds = %654, %656
  %661 = load i32, ptr %85, align 4
  %662 = load ptr, ptr %99, align 8
  store ptr %662, ptr %96, align 8
  store i32 16, ptr %97, align 4
  %663 = load ptr, ptr %96, align 8
  %664 = icmp ne ptr %663, null
  br i1 %664, label %665, label %669

665:                                              ; preds = %660
  %666 = load i32, ptr %97, align 4
  %667 = load ptr, ptr %96, align 8
  %668 = getelementptr inbounds %struct.mz_zip_archive, ptr %667, i32 0, i32 5
  store i32 %666, ptr %668, align 4
  br label %669

669:                                              ; preds = %660, %665
  store i32 0, ptr %98, align 4
  br label %671

670:                                              ; preds = %634
  store i32 1, ptr %98, align 4
  br label %671

671:                                              ; preds = %670, %669, %209, %179, %150
  %672 = load i32, ptr %98, align 4
  ret i32 %672
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_add_read_buf_callback(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i64 noundef %4, ptr noundef %5, ptr noundef %6, i16 noundef zeroext %7, i32 noundef %8, ptr noundef %9, i32 noundef %10, ptr noundef %11, i32 noundef %12) #0 {
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca i32, align 4
  %18 = alloca ptr, align 8
  %19 = alloca i64, align 8
  %20 = alloca ptr, align 8
  %21 = alloca i32, align 4
  %22 = alloca ptr, align 8
  %23 = alloca i32, align 4
  %24 = alloca ptr, align 8
  %25 = alloca i64, align 8
  %26 = alloca ptr, align 8
  %27 = alloca i32, align 4
  %28 = alloca ptr, align 8
  %29 = alloca i32, align 4
  %30 = alloca ptr, align 8
  %31 = alloca i32, align 4
  %32 = alloca ptr, align 8
  %33 = alloca i32, align 4
  %34 = alloca ptr, align 8
  %35 = alloca i32, align 4
  %36 = alloca ptr, align 8
  %37 = alloca i32, align 4
  %38 = alloca ptr, align 8
  %39 = alloca i32, align 4
  %40 = alloca ptr, align 8
  %41 = alloca i32, align 4
  %42 = alloca ptr, align 8
  %43 = alloca i32, align 4
  %44 = alloca ptr, align 8
  %45 = alloca i32, align 4
  %46 = alloca ptr, align 8
  %47 = alloca i32, align 4
  %48 = alloca ptr, align 8
  %49 = alloca i32, align 4
  %50 = alloca ptr, align 8
  %51 = alloca i32, align 4
  %52 = alloca ptr, align 8
  %53 = alloca i32, align 4
  %54 = alloca ptr, align 8
  %55 = alloca i32, align 4
  %56 = alloca ptr, align 8
  %57 = alloca i32, align 4
  %58 = alloca ptr, align 8
  %59 = alloca i32, align 4
  %60 = alloca ptr, align 8
  %61 = alloca i32, align 4
  %62 = alloca ptr, align 8
  %63 = alloca i32, align 4
  %64 = alloca ptr, align 8
  %65 = alloca i32, align 4
  %66 = alloca ptr, align 8
  %67 = alloca i32, align 4
  %68 = alloca ptr, align 8
  %69 = alloca i32, align 4
  %70 = alloca ptr, align 8
  %71 = alloca i32, align 4
  %72 = alloca ptr, align 8
  %73 = alloca i32, align 4
  %74 = alloca ptr, align 8
  %75 = alloca i32, align 4
  %76 = alloca ptr, align 8
  %77 = alloca i32, align 4
  %78 = alloca ptr, align 8
  %79 = alloca i32, align 4
  %80 = alloca ptr, align 8
  %81 = alloca i32, align 4
  %82 = alloca ptr, align 8
  %83 = alloca i32, align 4
  %84 = alloca ptr, align 8
  %85 = alloca i32, align 4
  %86 = alloca ptr, align 8
  %87 = alloca i32, align 4
  %88 = alloca ptr, align 8
  %89 = alloca i32, align 4
  %90 = alloca i32, align 4
  %91 = alloca ptr, align 8
  %92 = alloca ptr, align 8
  %93 = alloca ptr, align 8
  %94 = alloca ptr, align 8
  %95 = alloca i64, align 8
  %96 = alloca ptr, align 8
  %97 = alloca ptr, align 8
  %98 = alloca i16, align 2
  %99 = alloca i32, align 4
  %100 = alloca ptr, align 8
  %101 = alloca i32, align 4
  %102 = alloca ptr, align 8
  %103 = alloca i32, align 4
  %104 = alloca i16, align 2
  %105 = alloca i32, align 4
  %106 = alloca i32, align 4
  %107 = alloca i32, align 4
  %108 = alloca i16, align 2
  %109 = alloca i16, align 2
  %110 = alloca i16, align 2
  %111 = alloca i16, align 2
  %112 = alloca i64, align 8
  %113 = alloca i64, align 8
  %114 = alloca i64, align 8
  %115 = alloca i64, align 8
  %116 = alloca i64, align 8
  %117 = alloca [30 x i8], align 16
  %118 = alloca ptr, align 8
  %119 = alloca i32, align 4
  %120 = alloca [28 x i8], align 16
  %121 = alloca ptr, align 8
  %122 = alloca i64, align 8
  %123 = alloca i64, align 8
  %124 = alloca ptr, align 8
  %125 = alloca i64, align 8
  %126 = alloca i32, align 4
  %127 = alloca %struct.mz_zip_writer_add_state, align 8
  %128 = alloca ptr, align 8
  %129 = alloca i32, align 4
  %130 = alloca i32, align 4
  %131 = alloca i64, align 8
  %132 = alloca [24 x i8], align 16
  %133 = alloca i32, align 4
  store ptr %0, ptr %91, align 8
  store ptr %1, ptr %92, align 8
  store ptr %2, ptr %93, align 8
  store ptr %3, ptr %94, align 8
  store i64 %4, ptr %95, align 8
  store ptr %5, ptr %96, align 8
  store ptr %6, ptr %97, align 8
  store i16 %7, ptr %98, align 2
  store i32 %8, ptr %99, align 4
  store ptr %9, ptr %100, align 8
  store i32 %10, ptr %101, align 4
  store ptr %11, ptr %102, align 8
  store i32 %12, ptr %103, align 4
  store i32 0, ptr %105, align 4
  store i16 0, ptr %108, align 2
  store i16 0, ptr %109, align 2
  store i16 0, ptr %110, align 2
  store i16 0, ptr %111, align 2
  %134 = load ptr, ptr %91, align 8
  %135 = getelementptr inbounds %struct.mz_zip_archive, ptr %134, i32 0, i32 0
  %136 = load i64, ptr %135, align 8
  store i64 %136, ptr %113, align 8
  store i64 0, ptr %114, align 8
  store i64 0, ptr %115, align 8
  store ptr null, ptr %118, align 8
  store i32 0, ptr %119, align 4
  store i64 0, ptr %122, align 8
  %137 = load i32, ptr %99, align 4
  %138 = icmp slt i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %13
  store i32 6, ptr %99, align 4
  br label %140

140:                                              ; preds = %139, %13
  %141 = load i32, ptr %99, align 4
  %142 = and i32 %141, 15
  store i32 %142, ptr %106, align 4
  %143 = load i32, ptr %99, align 4
  %144 = and i32 %143, 131072
  %145 = icmp ne i32 %144, 0
  %146 = zext i1 %145 to i64
  %147 = select i1 %145, i32 0, i32 8
  %148 = trunc i32 %147 to i16
  store i16 %148, ptr %104, align 2
  %149 = load i32, ptr %99, align 4
  %150 = and i32 %149, 65536
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %157, label %152

152:                                              ; preds = %140
  %153 = load i16, ptr %104, align 2
  %154 = zext i16 %153 to i32
  %155 = or i32 %154, 2048
  %156 = trunc i32 %155 to i16
  store i16 %156, ptr %104, align 2
  br label %157

157:                                              ; preds = %152, %140
  %158 = load ptr, ptr %91, align 8
  %159 = icmp ne ptr %158, null
  br i1 %159, label %160, label %183

160:                                              ; preds = %157
  %161 = load ptr, ptr %91, align 8
  %162 = getelementptr inbounds %struct.mz_zip_archive, ptr %161, i32 0, i32 15
  %163 = load ptr, ptr %162, align 8
  %164 = icmp ne ptr %163, null
  br i1 %164, label %165, label %183

165:                                              ; preds = %160
  %166 = load ptr, ptr %91, align 8
  %167 = getelementptr inbounds %struct.mz_zip_archive, ptr %166, i32 0, i32 3
  %168 = load i32, ptr %167, align 4
  %169 = icmp ne i32 %168, 2
  br i1 %169, label %183, label %170

170:                                              ; preds = %165
  %171 = load ptr, ptr %92, align 8
  %172 = icmp ne ptr %171, null
  br i1 %172, label %173, label %183

173:                                              ; preds = %170
  %174 = load i16, ptr %98, align 2
  %175 = zext i16 %174 to i32
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %173
  %178 = load ptr, ptr %97, align 8
  %179 = icmp ne ptr %178, null
  br i1 %179, label %180, label %183

180:                                              ; preds = %177, %173
  %181 = load i32, ptr %106, align 4
  %182 = icmp ugt i32 %181, 10
  br i1 %182, label %183, label %192

183:                                              ; preds = %180, %177, %170, %165, %160, %157
  %184 = load ptr, ptr %91, align 8
  store ptr %184, ptr %34, align 8
  store i32 24, ptr %35, align 4
  %185 = load ptr, ptr %34, align 8
  %186 = icmp ne ptr %185, null
  br i1 %186, label %187, label %191

187:                                              ; preds = %183
  %188 = load i32, ptr %35, align 4
  %189 = load ptr, ptr %34, align 8
  %190 = getelementptr inbounds %struct.mz_zip_archive, ptr %189, i32 0, i32 5
  store i32 %188, ptr %190, align 4
  br label %191

191:                                              ; preds = %183, %187
  store i32 0, ptr %90, align 4
  br label %1360

192:                                              ; preds = %180
  %193 = load ptr, ptr %91, align 8
  %194 = getelementptr inbounds %struct.mz_zip_archive, ptr %193, i32 0, i32 15
  %195 = load ptr, ptr %194, align 8
  store ptr %195, ptr %121, align 8
  %196 = load ptr, ptr %121, align 8
  %197 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %196, i32 0, i32 4
  %198 = load i32, ptr %197, align 4
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %206, label %200

200:                                              ; preds = %192
  %201 = load i64, ptr %95, align 8
  %202 = icmp ugt i64 %201, 4294967295
  br i1 %202, label %203, label %206

203:                                              ; preds = %200
  %204 = load ptr, ptr %121, align 8
  %205 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %204, i32 0, i32 4
  store i32 1, ptr %205, align 4
  br label %206

206:                                              ; preds = %203, %200, %192
  %207 = load i32, ptr %99, align 4
  %208 = and i32 %207, 1024
  %209 = icmp ne i32 %208, 0
  br i1 %209, label %210, label %219

210:                                              ; preds = %206
  %211 = load ptr, ptr %91, align 8
  store ptr %211, ptr %36, align 8
  store i32 24, ptr %37, align 4
  %212 = load ptr, ptr %36, align 8
  %213 = icmp ne ptr %212, null
  br i1 %213, label %214, label %218

214:                                              ; preds = %210
  %215 = load i32, ptr %37, align 4
  %216 = load ptr, ptr %36, align 8
  %217 = getelementptr inbounds %struct.mz_zip_archive, ptr %216, i32 0, i32 5
  store i32 %215, ptr %217, align 4
  br label %218

218:                                              ; preds = %210, %214
  store i32 0, ptr %90, align 4
  br label %1360

219:                                              ; preds = %206
  %220 = load ptr, ptr %92, align 8
  %221 = call i32 @mz_zip_writer_validate_archive_name(ptr noundef %220)
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %232, label %223

223:                                              ; preds = %219
  %224 = load ptr, ptr %91, align 8
  store ptr %224, ptr %38, align 8
  store i32 25, ptr %39, align 4
  %225 = load ptr, ptr %38, align 8
  %226 = icmp ne ptr %225, null
  br i1 %226, label %227, label %231

227:                                              ; preds = %223
  %228 = load i32, ptr %39, align 4
  %229 = load ptr, ptr %38, align 8
  %230 = getelementptr inbounds %struct.mz_zip_archive, ptr %229, i32 0, i32 5
  store i32 %228, ptr %230, align 4
  br label %231

231:                                              ; preds = %223, %227
  store i32 0, ptr %90, align 4
  br label %1360

232:                                              ; preds = %219
  %233 = load ptr, ptr %121, align 8
  %234 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %233, i32 0, i32 4
  %235 = load i32, ptr %234, align 4
  %236 = icmp ne i32 %235, 0
  br i1 %236, label %237, label %252

237:                                              ; preds = %232
  %238 = load ptr, ptr %91, align 8
  %239 = getelementptr inbounds %struct.mz_zip_archive, ptr %238, i32 0, i32 2
  %240 = load i32, ptr %239, align 8
  %241 = icmp eq i32 %240, -1
  br i1 %241, label %242, label %251

242:                                              ; preds = %237
  %243 = load ptr, ptr %91, align 8
  store ptr %243, ptr %40, align 8
  store i32 2, ptr %41, align 4
  %244 = load ptr, ptr %40, align 8
  %245 = icmp ne ptr %244, null
  br i1 %245, label %246, label %250

246:                                              ; preds = %242
  %247 = load i32, ptr %41, align 4
  %248 = load ptr, ptr %40, align 8
  %249 = getelementptr inbounds %struct.mz_zip_archive, ptr %248, i32 0, i32 5
  store i32 %247, ptr %249, align 4
  br label %250

250:                                              ; preds = %242, %246
  store i32 0, ptr %90, align 4
  br label %1360

251:                                              ; preds = %237
  br label %261

252:                                              ; preds = %232
  %253 = load ptr, ptr %91, align 8
  %254 = getelementptr inbounds %struct.mz_zip_archive, ptr %253, i32 0, i32 2
  %255 = load i32, ptr %254, align 8
  %256 = icmp eq i32 %255, 65535
  br i1 %256, label %257, label %260

257:                                              ; preds = %252
  %258 = load ptr, ptr %121, align 8
  %259 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %258, i32 0, i32 4
  store i32 1, ptr %259, align 4
  br label %260

260:                                              ; preds = %257, %252
  br label %261

261:                                              ; preds = %260, %251
  %262 = load ptr, ptr %92, align 8
  %263 = call i64 @strlen(ptr noundef %262)
  store i64 %263, ptr %116, align 8
  %264 = load i64, ptr %116, align 8
  %265 = icmp ugt i64 %264, 65535
  br i1 %265, label %266, label %275

266:                                              ; preds = %261
  %267 = load ptr, ptr %91, align 8
  store ptr %267, ptr %42, align 8
  store i32 25, ptr %43, align 4
  %268 = load ptr, ptr %42, align 8
  %269 = icmp ne ptr %268, null
  br i1 %269, label %270, label %274

270:                                              ; preds = %266
  %271 = load i32, ptr %43, align 4
  %272 = load ptr, ptr %42, align 8
  %273 = getelementptr inbounds %struct.mz_zip_archive, ptr %272, i32 0, i32 5
  store i32 %271, ptr %273, align 4
  br label %274

274:                                              ; preds = %266, %270
  store i32 0, ptr %90, align 4
  br label %1360

275:                                              ; preds = %261
  %276 = load ptr, ptr %91, align 8
  %277 = call i32 @mz_zip_writer_compute_padding_needed_for_file_alignment(ptr noundef %276)
  store i32 %277, ptr %107, align 4
  %278 = load ptr, ptr %121, align 8
  %279 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %278, i32 0, i32 0
  %280 = getelementptr inbounds %struct.mz_zip_array, ptr %279, i32 0, i32 1
  %281 = load i64, ptr %280, align 8
  %282 = add i64 %281, 46
  %283 = load i64, ptr %116, align 8
  %284 = add i64 %282, %283
  %285 = add i64 %284, 28
  %286 = load i16, ptr %98, align 2
  %287 = zext i16 %286 to i64
  %288 = add i64 %285, %287
  %289 = icmp uge i64 %288, 4294967295
  br i1 %289, label %290, label %299

290:                                              ; preds = %275
  %291 = load ptr, ptr %91, align 8
  store ptr %291, ptr %44, align 8
  store i32 15, ptr %45, align 4
  %292 = load ptr, ptr %44, align 8
  %293 = icmp ne ptr %292, null
  br i1 %293, label %294, label %298

294:                                              ; preds = %290
  %295 = load i32, ptr %45, align 4
  %296 = load ptr, ptr %44, align 8
  %297 = getelementptr inbounds %struct.mz_zip_archive, ptr %296, i32 0, i32 5
  store i32 %295, ptr %297, align 4
  br label %298

298:                                              ; preds = %290, %294
  store i32 0, ptr %90, align 4
  br label %1360

299:                                              ; preds = %275
  %300 = load ptr, ptr %121, align 8
  %301 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %300, i32 0, i32 4
  %302 = load i32, ptr %301, align 4
  %303 = icmp ne i32 %302, 0
  br i1 %303, label %339, label %304

304:                                              ; preds = %299
  %305 = load ptr, ptr %91, align 8
  %306 = getelementptr inbounds %struct.mz_zip_archive, ptr %305, i32 0, i32 0
  %307 = load i64, ptr %306, align 8
  %308 = load i32, ptr %107, align 4
  %309 = zext i32 %308 to i64
  %310 = add i64 %307, %309
  %311 = add i64 %310, 30
  %312 = load i64, ptr %116, align 8
  %313 = add i64 %311, %312
  %314 = add i64 %313, 46
  %315 = load i64, ptr %116, align 8
  %316 = add i64 %314, %315
  %317 = load i16, ptr %98, align 2
  %318 = zext i16 %317 to i64
  %319 = add i64 %316, %318
  %320 = load i32, ptr %101, align 4
  %321 = zext i32 %320 to i64
  %322 = add i64 %319, %321
  %323 = load ptr, ptr %121, align 8
  %324 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %323, i32 0, i32 0
  %325 = getelementptr inbounds %struct.mz_zip_array, ptr %324, i32 0, i32 1
  %326 = load i64, ptr %325, align 8
  %327 = add i64 %322, %326
  %328 = add i64 %327, 22
  %329 = add i64 %328, 1024
  %330 = add i64 %329, 16
  %331 = load i32, ptr %103, align 4
  %332 = zext i32 %331 to i64
  %333 = add i64 %330, %332
  %334 = icmp ugt i64 %333, 4294967295
  br i1 %334, label %335, label %338

335:                                              ; preds = %304
  %336 = load ptr, ptr %121, align 8
  %337 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %336, i32 0, i32 4
  store i32 1, ptr %337, align 4
  br label %338

338:                                              ; preds = %335, %304
  br label %339

339:                                              ; preds = %338, %299
  %340 = load ptr, ptr %96, align 8
  %341 = icmp ne ptr %340, null
  br i1 %341, label %342, label %345

342:                                              ; preds = %339
  %343 = load ptr, ptr %96, align 8
  %344 = load i64, ptr %343, align 8
  call void @mz_zip_time_t_to_dos_time(i64 noundef %344, ptr noundef %109, ptr noundef %110)
  br label %345

345:                                              ; preds = %342, %339
  %346 = load i64, ptr %95, align 8
  %347 = icmp ule i64 %346, 3
  br i1 %347, label %348, label %349

348:                                              ; preds = %345
  store i32 0, ptr %106, align 4
  br label %349

349:                                              ; preds = %348, %345
  %350 = load ptr, ptr %91, align 8
  %351 = load i64, ptr %113, align 8
  %352 = load i32, ptr %107, align 4
  %353 = call i32 @mz_zip_writer_write_zeros(ptr noundef %350, i64 noundef %351, i32 noundef %352)
  %354 = icmp ne i32 %353, 0
  br i1 %354, label %364, label %355

355:                                              ; preds = %349
  %356 = load ptr, ptr %91, align 8
  store ptr %356, ptr %46, align 8
  store i32 19, ptr %47, align 4
  %357 = load ptr, ptr %46, align 8
  %358 = icmp ne ptr %357, null
  br i1 %358, label %359, label %363

359:                                              ; preds = %355
  %360 = load i32, ptr %47, align 4
  %361 = load ptr, ptr %46, align 8
  %362 = getelementptr inbounds %struct.mz_zip_archive, ptr %361, i32 0, i32 5
  store i32 %360, ptr %362, align 4
  br label %363

363:                                              ; preds = %355, %359
  store i32 0, ptr %90, align 4
  br label %1360

364:                                              ; preds = %349
  %365 = load i32, ptr %107, align 4
  %366 = zext i32 %365 to i64
  %367 = load i64, ptr %113, align 8
  %368 = add i64 %367, %366
  store i64 %368, ptr %113, align 8
  %369 = load i64, ptr %113, align 8
  store i64 %369, ptr %112, align 8
  %370 = load ptr, ptr %91, align 8
  %371 = getelementptr inbounds %struct.mz_zip_archive, ptr %370, i32 0, i32 6
  %372 = load i64, ptr %371, align 8
  %373 = icmp ne i64 %372, 0
  br i1 %373, label %374, label %390

374:                                              ; preds = %364
  %375 = load i64, ptr %113, align 8
  %376 = load ptr, ptr %91, align 8
  %377 = getelementptr inbounds %struct.mz_zip_archive, ptr %376, i32 0, i32 6
  %378 = load i64, ptr %377, align 8
  %379 = sub i64 %378, 1
  %380 = and i64 %375, %379
  %381 = icmp eq i64 %380, 0
  %382 = xor i1 %381, true
  %383 = zext i1 %382 to i32
  %384 = sext i32 %383 to i64
  %385 = icmp ne i64 %384, 0
  br i1 %385, label %386, label %388

386:                                              ; preds = %374
  call void @__assert_rtn(ptr noundef @__func__.mz_zip_writer_add_read_buf_callback, ptr noundef @.str.11, i32 noundef 8015, ptr noundef @.str.24) #12
  unreachable

387:                                              ; No predecessors!
  br label %389

388:                                              ; preds = %374
  br label %389

389:                                              ; preds = %388, %387
  br label %390

390:                                              ; preds = %389, %364
  %391 = load i64, ptr %95, align 8
  %392 = icmp ne i64 %391, 0
  br i1 %392, label %393, label %397

393:                                              ; preds = %390
  %394 = load i32, ptr %106, align 4
  %395 = icmp ne i32 %394, 0
  br i1 %395, label %396, label %397

396:                                              ; preds = %393
  store i16 8, ptr %108, align 2
  br label %397

397:                                              ; preds = %396, %393, %390
  %398 = getelementptr inbounds [30 x i8], ptr %117, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 16 %398, i8 0, i64 30, i1 false)
  %399 = load ptr, ptr %121, align 8
  %400 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %399, i32 0, i32 4
  %401 = load i32, ptr %400, align 4
  %402 = icmp ne i32 %401, 0
  br i1 %402, label %403, label %545

403:                                              ; preds = %397
  %404 = load i64, ptr %95, align 8
  %405 = icmp uge i64 %404, 4294967295
  br i1 %405, label %409, label %406

406:                                              ; preds = %403
  %407 = load i64, ptr %112, align 8
  %408 = icmp uge i64 %407, 4294967295
  br i1 %408, label %409, label %445

409:                                              ; preds = %406, %403
  %410 = getelementptr inbounds [28 x i8], ptr %120, i64 0, i64 0
  store ptr %410, ptr %118, align 8
  %411 = load i32, ptr %99, align 4
  %412 = and i32 %411, 131072
  %413 = icmp ne i32 %412, 0
  br i1 %413, label %414, label %435

414:                                              ; preds = %409
  %415 = getelementptr inbounds [28 x i8], ptr %120, i64 0, i64 0
  %416 = load i64, ptr %95, align 8
  %417 = icmp uge i64 %416, 4294967295
  br i1 %417, label %418, label %419

418:                                              ; preds = %414
  br label %420

419:                                              ; preds = %414
  br label %420

420:                                              ; preds = %419, %418
  %421 = phi ptr [ %114, %418 ], [ null, %419 ]
  %422 = load i64, ptr %95, align 8
  %423 = icmp uge i64 %422, 4294967295
  br i1 %423, label %424, label %425

424:                                              ; preds = %420
  br label %426

425:                                              ; preds = %420
  br label %426

426:                                              ; preds = %425, %424
  %427 = phi ptr [ %115, %424 ], [ null, %425 ]
  %428 = load i64, ptr %112, align 8
  %429 = icmp uge i64 %428, 4294967295
  br i1 %429, label %430, label %431

430:                                              ; preds = %426
  br label %432

431:                                              ; preds = %426
  br label %432

432:                                              ; preds = %431, %430
  %433 = phi ptr [ %112, %430 ], [ null, %431 ]
  %434 = call i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef %415, ptr noundef %421, ptr noundef %427, ptr noundef %433)
  store i32 %434, ptr %119, align 4
  br label %444

435:                                              ; preds = %409
  %436 = getelementptr inbounds [28 x i8], ptr %120, i64 0, i64 0
  %437 = load i64, ptr %112, align 8
  %438 = icmp uge i64 %437, 4294967295
  br i1 %438, label %439, label %440

439:                                              ; preds = %435
  br label %441

440:                                              ; preds = %435
  br label %441

441:                                              ; preds = %440, %439
  %442 = phi ptr [ %112, %439 ], [ null, %440 ]
  %443 = call i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef %436, ptr noundef null, ptr noundef null, ptr noundef %442)
  store i32 %443, ptr %119, align 4
  br label %444

444:                                              ; preds = %441, %432
  br label %445

445:                                              ; preds = %444, %406
  %446 = load ptr, ptr %91, align 8
  %447 = getelementptr inbounds [30 x i8], ptr %117, i64 0, i64 0
  %448 = load i64, ptr %116, align 8
  %449 = trunc i64 %448 to i16
  %450 = load i32, ptr %119, align 4
  %451 = load i32, ptr %101, align 4
  %452 = add i32 %450, %451
  %453 = trunc i32 %452 to i16
  %454 = load i16, ptr %108, align 2
  %455 = load i16, ptr %104, align 2
  %456 = load i16, ptr %109, align 2
  %457 = load i16, ptr %110, align 2
  %458 = call i32 @mz_zip_writer_create_local_dir_header(ptr noundef %446, ptr noundef %447, i16 noundef zeroext %449, i16 noundef zeroext %453, i64 noundef 0, i64 noundef 0, i32 noundef 0, i16 noundef zeroext %454, i16 noundef zeroext %455, i16 noundef zeroext %456, i16 noundef zeroext %457)
  %459 = icmp ne i32 %458, 0
  br i1 %459, label %469, label %460

460:                                              ; preds = %445
  %461 = load ptr, ptr %91, align 8
  store ptr %461, ptr %48, align 8
  store i32 27, ptr %49, align 4
  %462 = load ptr, ptr %48, align 8
  %463 = icmp ne ptr %462, null
  br i1 %463, label %464, label %468

464:                                              ; preds = %460
  %465 = load i32, ptr %49, align 4
  %466 = load ptr, ptr %48, align 8
  %467 = getelementptr inbounds %struct.mz_zip_archive, ptr %466, i32 0, i32 5
  store i32 %465, ptr %467, align 4
  br label %468

468:                                              ; preds = %460, %464
  store i32 0, ptr %90, align 4
  br label %1360

469:                                              ; preds = %445
  %470 = load ptr, ptr %91, align 8
  %471 = getelementptr inbounds %struct.mz_zip_archive, ptr %470, i32 0, i32 12
  %472 = load ptr, ptr %471, align 8
  %473 = load ptr, ptr %91, align 8
  %474 = getelementptr inbounds %struct.mz_zip_archive, ptr %473, i32 0, i32 14
  %475 = load ptr, ptr %474, align 8
  %476 = load i64, ptr %113, align 8
  %477 = getelementptr inbounds [30 x i8], ptr %117, i64 0, i64 0
  %478 = call i64 %472(ptr noundef %475, i64 noundef %476, ptr noundef %477, i64 noundef 30)
  %479 = icmp ne i64 %478, 30
  br i1 %479, label %480, label %489

480:                                              ; preds = %469
  %481 = load ptr, ptr %91, align 8
  store ptr %481, ptr %50, align 8
  store i32 19, ptr %51, align 4
  %482 = load ptr, ptr %50, align 8
  %483 = icmp ne ptr %482, null
  br i1 %483, label %484, label %488

484:                                              ; preds = %480
  %485 = load i32, ptr %51, align 4
  %486 = load ptr, ptr %50, align 8
  %487 = getelementptr inbounds %struct.mz_zip_archive, ptr %486, i32 0, i32 5
  store i32 %485, ptr %487, align 4
  br label %488

488:                                              ; preds = %480, %484
  store i32 0, ptr %90, align 4
  br label %1360

489:                                              ; preds = %469
  %490 = load i64, ptr %113, align 8
  %491 = add i64 %490, 30
  store i64 %491, ptr %113, align 8
  %492 = load ptr, ptr %91, align 8
  %493 = getelementptr inbounds %struct.mz_zip_archive, ptr %492, i32 0, i32 12
  %494 = load ptr, ptr %493, align 8
  %495 = load ptr, ptr %91, align 8
  %496 = getelementptr inbounds %struct.mz_zip_archive, ptr %495, i32 0, i32 14
  %497 = load ptr, ptr %496, align 8
  %498 = load i64, ptr %113, align 8
  %499 = load ptr, ptr %92, align 8
  %500 = load i64, ptr %116, align 8
  %501 = call i64 %494(ptr noundef %497, i64 noundef %498, ptr noundef %499, i64 noundef %500)
  %502 = load i64, ptr %116, align 8
  %503 = icmp ne i64 %501, %502
  br i1 %503, label %504, label %513

504:                                              ; preds = %489
  %505 = load ptr, ptr %91, align 8
  store ptr %505, ptr %52, align 8
  store i32 19, ptr %53, align 4
  %506 = load ptr, ptr %52, align 8
  %507 = icmp ne ptr %506, null
  br i1 %507, label %508, label %512

508:                                              ; preds = %504
  %509 = load i32, ptr %53, align 4
  %510 = load ptr, ptr %52, align 8
  %511 = getelementptr inbounds %struct.mz_zip_archive, ptr %510, i32 0, i32 5
  store i32 %509, ptr %511, align 4
  br label %512

512:                                              ; preds = %504, %508
  store i32 0, ptr %90, align 4
  br label %1360

513:                                              ; preds = %489
  %514 = load i64, ptr %116, align 8
  %515 = load i64, ptr %113, align 8
  %516 = add i64 %515, %514
  store i64 %516, ptr %113, align 8
  %517 = load ptr, ptr %91, align 8
  %518 = getelementptr inbounds %struct.mz_zip_archive, ptr %517, i32 0, i32 12
  %519 = load ptr, ptr %518, align 8
  %520 = load ptr, ptr %91, align 8
  %521 = getelementptr inbounds %struct.mz_zip_archive, ptr %520, i32 0, i32 14
  %522 = load ptr, ptr %521, align 8
  %523 = load i64, ptr %113, align 8
  %524 = getelementptr inbounds [28 x i8], ptr %120, i64 0, i64 0
  %525 = load i32, ptr %119, align 4
  %526 = zext i32 %525 to i64
  %527 = call i64 %519(ptr noundef %522, i64 noundef %523, ptr noundef %524, i64 noundef %526)
  %528 = load i32, ptr %119, align 4
  %529 = zext i32 %528 to i64
  %530 = icmp ne i64 %527, %529
  br i1 %530, label %531, label %540

531:                                              ; preds = %513
  %532 = load ptr, ptr %91, align 8
  store ptr %532, ptr %54, align 8
  store i32 19, ptr %55, align 4
  %533 = load ptr, ptr %54, align 8
  %534 = icmp ne ptr %533, null
  br i1 %534, label %535, label %539

535:                                              ; preds = %531
  %536 = load i32, ptr %55, align 4
  %537 = load ptr, ptr %54, align 8
  %538 = getelementptr inbounds %struct.mz_zip_archive, ptr %537, i32 0, i32 5
  store i32 %536, ptr %538, align 4
  br label %539

539:                                              ; preds = %531, %535
  store i32 0, ptr %90, align 4
  br label %1360

540:                                              ; preds = %513
  %541 = load i32, ptr %119, align 4
  %542 = zext i32 %541 to i64
  %543 = load i64, ptr %113, align 8
  %544 = add i64 %543, %542
  store i64 %544, ptr %113, align 8
  br label %630

545:                                              ; preds = %397
  %546 = load i64, ptr %115, align 8
  %547 = icmp ugt i64 %546, 4294967295
  br i1 %547, label %551, label %548

548:                                              ; preds = %545
  %549 = load i64, ptr %113, align 8
  %550 = icmp ugt i64 %549, 4294967295
  br i1 %550, label %551, label %560

551:                                              ; preds = %548, %545
  %552 = load ptr, ptr %91, align 8
  store ptr %552, ptr %56, align 8
  store i32 29, ptr %57, align 4
  %553 = load ptr, ptr %56, align 8
  %554 = icmp ne ptr %553, null
  br i1 %554, label %555, label %559

555:                                              ; preds = %551
  %556 = load i32, ptr %57, align 4
  %557 = load ptr, ptr %56, align 8
  %558 = getelementptr inbounds %struct.mz_zip_archive, ptr %557, i32 0, i32 5
  store i32 %556, ptr %558, align 4
  br label %559

559:                                              ; preds = %551, %555
  store i32 0, ptr %90, align 4
  br label %1360

560:                                              ; preds = %548
  %561 = load ptr, ptr %91, align 8
  %562 = getelementptr inbounds [30 x i8], ptr %117, i64 0, i64 0
  %563 = load i64, ptr %116, align 8
  %564 = trunc i64 %563 to i16
  %565 = load i32, ptr %101, align 4
  %566 = trunc i32 %565 to i16
  %567 = load i16, ptr %108, align 2
  %568 = load i16, ptr %104, align 2
  %569 = load i16, ptr %109, align 2
  %570 = load i16, ptr %110, align 2
  %571 = call i32 @mz_zip_writer_create_local_dir_header(ptr noundef %561, ptr noundef %562, i16 noundef zeroext %564, i16 noundef zeroext %566, i64 noundef 0, i64 noundef 0, i32 noundef 0, i16 noundef zeroext %567, i16 noundef zeroext %568, i16 noundef zeroext %569, i16 noundef zeroext %570)
  %572 = icmp ne i32 %571, 0
  br i1 %572, label %582, label %573

573:                                              ; preds = %560
  %574 = load ptr, ptr %91, align 8
  store ptr %574, ptr %58, align 8
  store i32 27, ptr %59, align 4
  %575 = load ptr, ptr %58, align 8
  %576 = icmp ne ptr %575, null
  br i1 %576, label %577, label %581

577:                                              ; preds = %573
  %578 = load i32, ptr %59, align 4
  %579 = load ptr, ptr %58, align 8
  %580 = getelementptr inbounds %struct.mz_zip_archive, ptr %579, i32 0, i32 5
  store i32 %578, ptr %580, align 4
  br label %581

581:                                              ; preds = %573, %577
  store i32 0, ptr %90, align 4
  br label %1360

582:                                              ; preds = %560
  %583 = load ptr, ptr %91, align 8
  %584 = getelementptr inbounds %struct.mz_zip_archive, ptr %583, i32 0, i32 12
  %585 = load ptr, ptr %584, align 8
  %586 = load ptr, ptr %91, align 8
  %587 = getelementptr inbounds %struct.mz_zip_archive, ptr %586, i32 0, i32 14
  %588 = load ptr, ptr %587, align 8
  %589 = load i64, ptr %113, align 8
  %590 = getelementptr inbounds [30 x i8], ptr %117, i64 0, i64 0
  %591 = call i64 %585(ptr noundef %588, i64 noundef %589, ptr noundef %590, i64 noundef 30)
  %592 = icmp ne i64 %591, 30
  br i1 %592, label %593, label %602

593:                                              ; preds = %582
  %594 = load ptr, ptr %91, align 8
  store ptr %594, ptr %60, align 8
  store i32 19, ptr %61, align 4
  %595 = load ptr, ptr %60, align 8
  %596 = icmp ne ptr %595, null
  br i1 %596, label %597, label %601

597:                                              ; preds = %593
  %598 = load i32, ptr %61, align 4
  %599 = load ptr, ptr %60, align 8
  %600 = getelementptr inbounds %struct.mz_zip_archive, ptr %599, i32 0, i32 5
  store i32 %598, ptr %600, align 4
  br label %601

601:                                              ; preds = %593, %597
  store i32 0, ptr %90, align 4
  br label %1360

602:                                              ; preds = %582
  %603 = load i64, ptr %113, align 8
  %604 = add i64 %603, 30
  store i64 %604, ptr %113, align 8
  %605 = load ptr, ptr %91, align 8
  %606 = getelementptr inbounds %struct.mz_zip_archive, ptr %605, i32 0, i32 12
  %607 = load ptr, ptr %606, align 8
  %608 = load ptr, ptr %91, align 8
  %609 = getelementptr inbounds %struct.mz_zip_archive, ptr %608, i32 0, i32 14
  %610 = load ptr, ptr %609, align 8
  %611 = load i64, ptr %113, align 8
  %612 = load ptr, ptr %92, align 8
  %613 = load i64, ptr %116, align 8
  %614 = call i64 %607(ptr noundef %610, i64 noundef %611, ptr noundef %612, i64 noundef %613)
  %615 = load i64, ptr %116, align 8
  %616 = icmp ne i64 %614, %615
  br i1 %616, label %617, label %626

617:                                              ; preds = %602
  %618 = load ptr, ptr %91, align 8
  store ptr %618, ptr %62, align 8
  store i32 19, ptr %63, align 4
  %619 = load ptr, ptr %62, align 8
  %620 = icmp ne ptr %619, null
  br i1 %620, label %621, label %625

621:                                              ; preds = %617
  %622 = load i32, ptr %63, align 4
  %623 = load ptr, ptr %62, align 8
  %624 = getelementptr inbounds %struct.mz_zip_archive, ptr %623, i32 0, i32 5
  store i32 %622, ptr %624, align 4
  br label %625

625:                                              ; preds = %617, %621
  store i32 0, ptr %90, align 4
  br label %1360

626:                                              ; preds = %602
  %627 = load i64, ptr %116, align 8
  %628 = load i64, ptr %113, align 8
  %629 = add i64 %628, %627
  store i64 %629, ptr %113, align 8
  br label %630

630:                                              ; preds = %626, %540
  %631 = load i32, ptr %101, align 4
  %632 = icmp ugt i32 %631, 0
  br i1 %632, label %633, label %662

633:                                              ; preds = %630
  %634 = load ptr, ptr %91, align 8
  %635 = getelementptr inbounds %struct.mz_zip_archive, ptr %634, i32 0, i32 12
  %636 = load ptr, ptr %635, align 8
  %637 = load ptr, ptr %91, align 8
  %638 = getelementptr inbounds %struct.mz_zip_archive, ptr %637, i32 0, i32 14
  %639 = load ptr, ptr %638, align 8
  %640 = load i64, ptr %113, align 8
  %641 = load ptr, ptr %100, align 8
  %642 = load i32, ptr %101, align 4
  %643 = zext i32 %642 to i64
  %644 = call i64 %636(ptr noundef %639, i64 noundef %640, ptr noundef %641, i64 noundef %643)
  %645 = load i32, ptr %101, align 4
  %646 = zext i32 %645 to i64
  %647 = icmp ne i64 %644, %646
  br i1 %647, label %648, label %657

648:                                              ; preds = %633
  %649 = load ptr, ptr %91, align 8
  store ptr %649, ptr %64, align 8
  store i32 19, ptr %65, align 4
  %650 = load ptr, ptr %64, align 8
  %651 = icmp ne ptr %650, null
  br i1 %651, label %652, label %656

652:                                              ; preds = %648
  %653 = load i32, ptr %65, align 4
  %654 = load ptr, ptr %64, align 8
  %655 = getelementptr inbounds %struct.mz_zip_archive, ptr %654, i32 0, i32 5
  store i32 %653, ptr %655, align 4
  br label %656

656:                                              ; preds = %648, %652
  store i32 0, ptr %90, align 4
  br label %1360

657:                                              ; preds = %633
  %658 = load i32, ptr %101, align 4
  %659 = zext i32 %658 to i64
  %660 = load i64, ptr %113, align 8
  %661 = add i64 %660, %659
  store i64 %661, ptr %113, align 8
  br label %662

662:                                              ; preds = %657, %630
  %663 = load i64, ptr %95, align 8
  %664 = icmp ne i64 %663, 0
  br i1 %664, label %665, label %934

665:                                              ; preds = %662
  %666 = load ptr, ptr %91, align 8
  %667 = getelementptr inbounds %struct.mz_zip_archive, ptr %666, i32 0, i32 7
  %668 = load ptr, ptr %667, align 8
  %669 = load ptr, ptr %91, align 8
  %670 = getelementptr inbounds %struct.mz_zip_archive, ptr %669, i32 0, i32 10
  %671 = load ptr, ptr %670, align 8
  %672 = call ptr %668(ptr noundef %671, i64 noundef 1, i64 noundef 65536)
  store ptr %672, ptr %124, align 8
  %673 = load ptr, ptr %124, align 8
  %674 = icmp ne ptr %673, null
  br i1 %674, label %684, label %675

675:                                              ; preds = %665
  %676 = load ptr, ptr %91, align 8
  store ptr %676, ptr %66, align 8
  store i32 16, ptr %67, align 4
  %677 = load ptr, ptr %66, align 8
  %678 = icmp ne ptr %677, null
  br i1 %678, label %679, label %683

679:                                              ; preds = %675
  %680 = load i32, ptr %67, align 4
  %681 = load ptr, ptr %66, align 8
  %682 = getelementptr inbounds %struct.mz_zip_archive, ptr %681, i32 0, i32 5
  store i32 %680, ptr %682, align 4
  br label %683

683:                                              ; preds = %675, %679
  store i32 0, ptr %90, align 4
  br label %1360

684:                                              ; preds = %665
  %685 = load i32, ptr %106, align 4
  %686 = icmp ne i32 %685, 0
  br i1 %686, label %767, label %687

687:                                              ; preds = %684
  br label %688

688:                                              ; preds = %687, %751
  %689 = load ptr, ptr %93, align 8
  %690 = load ptr, ptr %94, align 8
  %691 = load i64, ptr %122, align 8
  %692 = load ptr, ptr %124, align 8
  %693 = call i64 %689(ptr noundef %690, i64 noundef %691, ptr noundef %692, i64 noundef 65536)
  store i64 %693, ptr %125, align 8
  %694 = load i64, ptr %125, align 8
  %695 = icmp eq i64 %694, 0
  br i1 %695, label %696, label %697

696:                                              ; preds = %688
  br label %764

697:                                              ; preds = %688
  %698 = load i64, ptr %125, align 8
  %699 = icmp ugt i64 %698, 65536
  br i1 %699, label %706, label %700

700:                                              ; preds = %697
  %701 = load i64, ptr %122, align 8
  %702 = load i64, ptr %125, align 8
  %703 = add i64 %701, %702
  %704 = load i64, ptr %95, align 8
  %705 = icmp ugt i64 %703, %704
  br i1 %705, label %706, label %722

706:                                              ; preds = %700, %697
  %707 = load ptr, ptr %91, align 8
  %708 = getelementptr inbounds %struct.mz_zip_archive, ptr %707, i32 0, i32 8
  %709 = load ptr, ptr %708, align 8
  %710 = load ptr, ptr %91, align 8
  %711 = getelementptr inbounds %struct.mz_zip_archive, ptr %710, i32 0, i32 10
  %712 = load ptr, ptr %711, align 8
  %713 = load ptr, ptr %124, align 8
  call void %709(ptr noundef %712, ptr noundef %713)
  %714 = load ptr, ptr %91, align 8
  store ptr %714, ptr %68, align 8
  store i32 20, ptr %69, align 4
  %715 = load ptr, ptr %68, align 8
  %716 = icmp ne ptr %715, null
  br i1 %716, label %717, label %721

717:                                              ; preds = %706
  %718 = load i32, ptr %69, align 4
  %719 = load ptr, ptr %68, align 8
  %720 = getelementptr inbounds %struct.mz_zip_archive, ptr %719, i32 0, i32 5
  store i32 %718, ptr %720, align 4
  br label %721

721:                                              ; preds = %706, %717
  store i32 0, ptr %90, align 4
  br label %1360

722:                                              ; preds = %700
  %723 = load ptr, ptr %91, align 8
  %724 = getelementptr inbounds %struct.mz_zip_archive, ptr %723, i32 0, i32 12
  %725 = load ptr, ptr %724, align 8
  %726 = load ptr, ptr %91, align 8
  %727 = getelementptr inbounds %struct.mz_zip_archive, ptr %726, i32 0, i32 14
  %728 = load ptr, ptr %727, align 8
  %729 = load i64, ptr %113, align 8
  %730 = load ptr, ptr %124, align 8
  %731 = load i64, ptr %125, align 8
  %732 = call i64 %725(ptr noundef %728, i64 noundef %729, ptr noundef %730, i64 noundef %731)
  %733 = load i64, ptr %125, align 8
  %734 = icmp ne i64 %732, %733
  br i1 %734, label %735, label %751

735:                                              ; preds = %722
  %736 = load ptr, ptr %91, align 8
  %737 = getelementptr inbounds %struct.mz_zip_archive, ptr %736, i32 0, i32 8
  %738 = load ptr, ptr %737, align 8
  %739 = load ptr, ptr %91, align 8
  %740 = getelementptr inbounds %struct.mz_zip_archive, ptr %739, i32 0, i32 10
  %741 = load ptr, ptr %740, align 8
  %742 = load ptr, ptr %124, align 8
  call void %738(ptr noundef %741, ptr noundef %742)
  %743 = load ptr, ptr %91, align 8
  store ptr %743, ptr %70, align 8
  store i32 19, ptr %71, align 4
  %744 = load ptr, ptr %70, align 8
  %745 = icmp ne ptr %744, null
  br i1 %745, label %746, label %750

746:                                              ; preds = %735
  %747 = load i32, ptr %71, align 4
  %748 = load ptr, ptr %70, align 8
  %749 = getelementptr inbounds %struct.mz_zip_archive, ptr %748, i32 0, i32 5
  store i32 %747, ptr %749, align 4
  br label %750

750:                                              ; preds = %735, %746
  store i32 0, ptr %90, align 4
  br label %1360

751:                                              ; preds = %722
  %752 = load i64, ptr %125, align 8
  %753 = load i64, ptr %122, align 8
  %754 = add i64 %753, %752
  store i64 %754, ptr %122, align 8
  %755 = load i32, ptr %105, align 4
  %756 = zext i32 %755 to i64
  %757 = load ptr, ptr %124, align 8
  %758 = load i64, ptr %125, align 8
  %759 = call i64 @mz_crc32(i64 noundef %756, ptr noundef %757, i64 noundef %758)
  %760 = trunc i64 %759 to i32
  store i32 %760, ptr %105, align 4
  %761 = load i64, ptr %125, align 8
  %762 = load i64, ptr %113, align 8
  %763 = add i64 %762, %761
  store i64 %763, ptr %113, align 8
  br label %688

764:                                              ; preds = %696
  %765 = load i64, ptr %122, align 8
  store i64 %765, ptr %114, align 8
  %766 = load i64, ptr %114, align 8
  store i64 %766, ptr %115, align 8
  br label %926

767:                                              ; preds = %684
  store i32 0, ptr %126, align 4
  %768 = load ptr, ptr %91, align 8
  %769 = getelementptr inbounds %struct.mz_zip_archive, ptr %768, i32 0, i32 7
  %770 = load ptr, ptr %769, align 8
  %771 = load ptr, ptr %91, align 8
  %772 = getelementptr inbounds %struct.mz_zip_archive, ptr %771, i32 0, i32 10
  %773 = load ptr, ptr %772, align 8
  %774 = call ptr %770(ptr noundef %773, i64 noundef 1, i64 noundef 319352)
  store ptr %774, ptr %128, align 8
  %775 = load ptr, ptr %128, align 8
  %776 = icmp ne ptr %775, null
  br i1 %776, label %793, label %777

777:                                              ; preds = %767
  %778 = load ptr, ptr %91, align 8
  %779 = getelementptr inbounds %struct.mz_zip_archive, ptr %778, i32 0, i32 8
  %780 = load ptr, ptr %779, align 8
  %781 = load ptr, ptr %91, align 8
  %782 = getelementptr inbounds %struct.mz_zip_archive, ptr %781, i32 0, i32 10
  %783 = load ptr, ptr %782, align 8
  %784 = load ptr, ptr %124, align 8
  call void %780(ptr noundef %783, ptr noundef %784)
  %785 = load ptr, ptr %91, align 8
  store ptr %785, ptr %72, align 8
  store i32 16, ptr %73, align 4
  %786 = load ptr, ptr %72, align 8
  %787 = icmp ne ptr %786, null
  br i1 %787, label %788, label %792

788:                                              ; preds = %777
  %789 = load i32, ptr %73, align 4
  %790 = load ptr, ptr %72, align 8
  %791 = getelementptr inbounds %struct.mz_zip_archive, ptr %790, i32 0, i32 5
  store i32 %789, ptr %791, align 4
  br label %792

792:                                              ; preds = %777, %788
  store i32 0, ptr %90, align 4
  br label %1360

793:                                              ; preds = %767
  %794 = load ptr, ptr %91, align 8
  %795 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %127, i32 0, i32 0
  store ptr %794, ptr %795, align 8
  %796 = load i64, ptr %113, align 8
  %797 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %127, i32 0, i32 1
  store i64 %796, ptr %797, align 8
  %798 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %127, i32 0, i32 2
  store i64 0, ptr %798, align 8
  %799 = load ptr, ptr %128, align 8
  %800 = load i32, ptr %106, align 4
  %801 = call i32 @tdefl_create_comp_flags_from_zip_params(i32 noundef %800, i32 noundef -15, i32 noundef 0)
  %802 = call i32 @tdefl_init(ptr noundef %799, ptr noundef @mz_zip_writer_add_put_buf_callback, ptr noundef %127, i32 noundef %801)
  %803 = icmp ne i32 %802, 0
  br i1 %803, label %804, label %827

804:                                              ; preds = %793
  %805 = load ptr, ptr %91, align 8
  %806 = getelementptr inbounds %struct.mz_zip_archive, ptr %805, i32 0, i32 8
  %807 = load ptr, ptr %806, align 8
  %808 = load ptr, ptr %91, align 8
  %809 = getelementptr inbounds %struct.mz_zip_archive, ptr %808, i32 0, i32 10
  %810 = load ptr, ptr %809, align 8
  %811 = load ptr, ptr %128, align 8
  call void %807(ptr noundef %810, ptr noundef %811)
  %812 = load ptr, ptr %91, align 8
  %813 = getelementptr inbounds %struct.mz_zip_archive, ptr %812, i32 0, i32 8
  %814 = load ptr, ptr %813, align 8
  %815 = load ptr, ptr %91, align 8
  %816 = getelementptr inbounds %struct.mz_zip_archive, ptr %815, i32 0, i32 10
  %817 = load ptr, ptr %816, align 8
  %818 = load ptr, ptr %124, align 8
  call void %814(ptr noundef %817, ptr noundef %818)
  %819 = load ptr, ptr %91, align 8
  store ptr %819, ptr %74, align 8
  store i32 27, ptr %75, align 4
  %820 = load ptr, ptr %74, align 8
  %821 = icmp ne ptr %820, null
  br i1 %821, label %822, label %826

822:                                              ; preds = %804
  %823 = load i32, ptr %75, align 4
  %824 = load ptr, ptr %74, align 8
  %825 = getelementptr inbounds %struct.mz_zip_archive, ptr %824, i32 0, i32 5
  store i32 %823, ptr %825, align 4
  br label %826

826:                                              ; preds = %804, %822
  store i32 0, ptr %90, align 4
  br label %1360

827:                                              ; preds = %793
  br label %828

828:                                              ; preds = %901, %827
  store i32 0, ptr %130, align 4
  %829 = load ptr, ptr %93, align 8
  %830 = load ptr, ptr %94, align 8
  %831 = load i64, ptr %122, align 8
  %832 = load ptr, ptr %124, align 8
  %833 = call i64 %829(ptr noundef %830, i64 noundef %831, ptr noundef %832, i64 noundef 65536)
  store i64 %833, ptr %131, align 8
  %834 = load i64, ptr %131, align 8
  %835 = icmp ugt i64 %834, 65536
  br i1 %835, label %842, label %836

836:                                              ; preds = %828
  %837 = load i64, ptr %122, align 8
  %838 = load i64, ptr %131, align 8
  %839 = add i64 %837, %838
  %840 = load i64, ptr %95, align 8
  %841 = icmp ugt i64 %839, %840
  br i1 %841, label %842, label %851

842:                                              ; preds = %836, %828
  %843 = load ptr, ptr %91, align 8
  store ptr %843, ptr %76, align 8
  store i32 20, ptr %77, align 4
  %844 = load ptr, ptr %76, align 8
  %845 = icmp ne ptr %844, null
  br i1 %845, label %846, label %850

846:                                              ; preds = %842
  %847 = load i32, ptr %77, align 4
  %848 = load ptr, ptr %76, align 8
  %849 = getelementptr inbounds %struct.mz_zip_archive, ptr %848, i32 0, i32 5
  store i32 %847, ptr %849, align 4
  br label %850

850:                                              ; preds = %842, %846
  br label %902

851:                                              ; preds = %836
  %852 = load i64, ptr %131, align 8
  %853 = load i64, ptr %122, align 8
  %854 = add i64 %853, %852
  store i64 %854, ptr %122, align 8
  %855 = load i32, ptr %105, align 4
  %856 = zext i32 %855 to i64
  %857 = load ptr, ptr %124, align 8
  %858 = load i64, ptr %131, align 8
  %859 = call i64 @mz_crc32(i64 noundef %856, ptr noundef %857, i64 noundef %858)
  %860 = trunc i64 %859 to i32
  store i32 %860, ptr %105, align 4
  %861 = load ptr, ptr %91, align 8
  %862 = getelementptr inbounds %struct.mz_zip_archive, ptr %861, i32 0, i32 13
  %863 = load ptr, ptr %862, align 8
  %864 = icmp ne ptr %863, null
  br i1 %864, label %865, label %875

865:                                              ; preds = %851
  %866 = load ptr, ptr %91, align 8
  %867 = getelementptr inbounds %struct.mz_zip_archive, ptr %866, i32 0, i32 13
  %868 = load ptr, ptr %867, align 8
  %869 = load ptr, ptr %91, align 8
  %870 = getelementptr inbounds %struct.mz_zip_archive, ptr %869, i32 0, i32 14
  %871 = load ptr, ptr %870, align 8
  %872 = call i32 %868(ptr noundef %871)
  %873 = icmp ne i32 %872, 0
  br i1 %873, label %874, label %875

874:                                              ; preds = %865
  store i32 3, ptr %130, align 4
  br label %875

875:                                              ; preds = %874, %865, %851
  %876 = load i64, ptr %131, align 8
  %877 = icmp eq i64 %876, 0
  br i1 %877, label %878, label %879

878:                                              ; preds = %875
  store i32 4, ptr %130, align 4
  br label %879

879:                                              ; preds = %878, %875
  %880 = load ptr, ptr %128, align 8
  %881 = load ptr, ptr %124, align 8
  %882 = load i64, ptr %131, align 8
  %883 = load i32, ptr %130, align 4
  %884 = call i32 @tdefl_compress_buffer(ptr noundef %880, ptr noundef %881, i64 noundef %882, i32 noundef %883)
  store i32 %884, ptr %129, align 4
  %885 = load i32, ptr %129, align 4
  %886 = icmp eq i32 %885, 1
  br i1 %886, label %887, label %888

887:                                              ; preds = %879
  store i32 1, ptr %126, align 4
  br label %902

888:                                              ; preds = %879
  %889 = load i32, ptr %129, align 4
  %890 = icmp ne i32 %889, 0
  br i1 %890, label %891, label %900

891:                                              ; preds = %888
  %892 = load ptr, ptr %91, align 8
  store ptr %892, ptr %78, align 8
  store i32 12, ptr %79, align 4
  %893 = load ptr, ptr %78, align 8
  %894 = icmp ne ptr %893, null
  br i1 %894, label %895, label %899

895:                                              ; preds = %891
  %896 = load i32, ptr %79, align 4
  %897 = load ptr, ptr %78, align 8
  %898 = getelementptr inbounds %struct.mz_zip_archive, ptr %897, i32 0, i32 5
  store i32 %896, ptr %898, align 4
  br label %899

899:                                              ; preds = %891, %895
  br label %902

900:                                              ; preds = %888
  br label %901

901:                                              ; preds = %900
  br label %828

902:                                              ; preds = %899, %887, %850
  %903 = load ptr, ptr %91, align 8
  %904 = getelementptr inbounds %struct.mz_zip_archive, ptr %903, i32 0, i32 8
  %905 = load ptr, ptr %904, align 8
  %906 = load ptr, ptr %91, align 8
  %907 = getelementptr inbounds %struct.mz_zip_archive, ptr %906, i32 0, i32 10
  %908 = load ptr, ptr %907, align 8
  %909 = load ptr, ptr %128, align 8
  call void %905(ptr noundef %908, ptr noundef %909)
  %910 = load i32, ptr %126, align 4
  %911 = icmp ne i32 %910, 0
  br i1 %911, label %920, label %912

912:                                              ; preds = %902
  %913 = load ptr, ptr %91, align 8
  %914 = getelementptr inbounds %struct.mz_zip_archive, ptr %913, i32 0, i32 8
  %915 = load ptr, ptr %914, align 8
  %916 = load ptr, ptr %91, align 8
  %917 = getelementptr inbounds %struct.mz_zip_archive, ptr %916, i32 0, i32 10
  %918 = load ptr, ptr %917, align 8
  %919 = load ptr, ptr %124, align 8
  call void %915(ptr noundef %918, ptr noundef %919)
  store i32 0, ptr %90, align 4
  br label %1360

920:                                              ; preds = %902
  %921 = load i64, ptr %122, align 8
  store i64 %921, ptr %114, align 8
  %922 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %127, i32 0, i32 2
  %923 = load i64, ptr %922, align 8
  store i64 %923, ptr %115, align 8
  %924 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %127, i32 0, i32 1
  %925 = load i64, ptr %924, align 8
  store i64 %925, ptr %113, align 8
  br label %926

926:                                              ; preds = %920, %764
  %927 = load ptr, ptr %91, align 8
  %928 = getelementptr inbounds %struct.mz_zip_archive, ptr %927, i32 0, i32 8
  %929 = load ptr, ptr %928, align 8
  %930 = load ptr, ptr %91, align 8
  %931 = getelementptr inbounds %struct.mz_zip_archive, ptr %930, i32 0, i32 10
  %932 = load ptr, ptr %931, align 8
  %933 = load ptr, ptr %124, align 8
  call void %929(ptr noundef %932, ptr noundef %933)
  br label %934

934:                                              ; preds = %926, %662
  %935 = load i32, ptr %99, align 4
  %936 = and i32 %935, 131072
  %937 = icmp ne i32 %936, 0
  br i1 %937, label %1155, label %938

938:                                              ; preds = %934
  store i32 16, ptr %133, align 4
  %939 = getelementptr inbounds [24 x i8], ptr %132, i64 0, i64 0
  %940 = getelementptr inbounds i8, ptr %939, i64 0
  store ptr %940, ptr %26, align 8
  store i32 134695760, ptr %27, align 4
  %941 = load i32, ptr %27, align 4
  %942 = trunc i32 %941 to i8
  %943 = load ptr, ptr %26, align 8
  store i8 %942, ptr %943, align 1
  %944 = load i32, ptr %27, align 4
  %945 = lshr i32 %944, 8
  %946 = trunc i32 %945 to i8
  %947 = load ptr, ptr %26, align 8
  %948 = getelementptr inbounds i8, ptr %947, i64 1
  store i8 %946, ptr %948, align 1
  %949 = load i32, ptr %27, align 4
  %950 = lshr i32 %949, 16
  %951 = trunc i32 %950 to i8
  %952 = load ptr, ptr %26, align 8
  %953 = getelementptr inbounds i8, ptr %952, i64 2
  store i8 %951, ptr %953, align 1
  %954 = load i32, ptr %27, align 4
  %955 = lshr i32 %954, 24
  %956 = trunc i32 %955 to i8
  %957 = load ptr, ptr %26, align 8
  %958 = getelementptr inbounds i8, ptr %957, i64 3
  store i8 %956, ptr %958, align 1
  %959 = getelementptr inbounds [24 x i8], ptr %132, i64 0, i64 0
  %960 = getelementptr inbounds i8, ptr %959, i64 4
  %961 = load i32, ptr %105, align 4
  store ptr %960, ptr %28, align 8
  store i32 %961, ptr %29, align 4
  %962 = load i32, ptr %29, align 4
  %963 = trunc i32 %962 to i8
  %964 = load ptr, ptr %28, align 8
  store i8 %963, ptr %964, align 1
  %965 = load i32, ptr %29, align 4
  %966 = lshr i32 %965, 8
  %967 = trunc i32 %966 to i8
  %968 = load ptr, ptr %28, align 8
  %969 = getelementptr inbounds i8, ptr %968, i64 1
  store i8 %967, ptr %969, align 1
  %970 = load i32, ptr %29, align 4
  %971 = lshr i32 %970, 16
  %972 = trunc i32 %971 to i8
  %973 = load ptr, ptr %28, align 8
  %974 = getelementptr inbounds i8, ptr %973, i64 2
  store i8 %972, ptr %974, align 1
  %975 = load i32, ptr %29, align 4
  %976 = lshr i32 %975, 24
  %977 = trunc i32 %976 to i8
  %978 = load ptr, ptr %28, align 8
  %979 = getelementptr inbounds i8, ptr %978, i64 3
  store i8 %977, ptr %979, align 1
  %980 = load ptr, ptr %118, align 8
  %981 = icmp eq ptr %980, null
  br i1 %981, label %982, label %1039

982:                                              ; preds = %938
  %983 = load i64, ptr %115, align 8
  %984 = icmp ugt i64 %983, 4294967295
  br i1 %984, label %985, label %994

985:                                              ; preds = %982
  %986 = load ptr, ptr %91, align 8
  store ptr %986, ptr %80, align 8
  store i32 29, ptr %81, align 4
  %987 = load ptr, ptr %80, align 8
  %988 = icmp ne ptr %987, null
  br i1 %988, label %989, label %993

989:                                              ; preds = %985
  %990 = load i32, ptr %81, align 4
  %991 = load ptr, ptr %80, align 8
  %992 = getelementptr inbounds %struct.mz_zip_archive, ptr %991, i32 0, i32 5
  store i32 %990, ptr %992, align 4
  br label %993

993:                                              ; preds = %985, %989
  store i32 0, ptr %90, align 4
  br label %1360

994:                                              ; preds = %982
  %995 = getelementptr inbounds [24 x i8], ptr %132, i64 0, i64 0
  %996 = getelementptr inbounds i8, ptr %995, i64 8
  %997 = load i64, ptr %115, align 8
  %998 = trunc i64 %997 to i32
  store ptr %996, ptr %30, align 8
  store i32 %998, ptr %31, align 4
  %999 = load i32, ptr %31, align 4
  %1000 = trunc i32 %999 to i8
  %1001 = load ptr, ptr %30, align 8
  store i8 %1000, ptr %1001, align 1
  %1002 = load i32, ptr %31, align 4
  %1003 = lshr i32 %1002, 8
  %1004 = trunc i32 %1003 to i8
  %1005 = load ptr, ptr %30, align 8
  %1006 = getelementptr inbounds i8, ptr %1005, i64 1
  store i8 %1004, ptr %1006, align 1
  %1007 = load i32, ptr %31, align 4
  %1008 = lshr i32 %1007, 16
  %1009 = trunc i32 %1008 to i8
  %1010 = load ptr, ptr %30, align 8
  %1011 = getelementptr inbounds i8, ptr %1010, i64 2
  store i8 %1009, ptr %1011, align 1
  %1012 = load i32, ptr %31, align 4
  %1013 = lshr i32 %1012, 24
  %1014 = trunc i32 %1013 to i8
  %1015 = load ptr, ptr %30, align 8
  %1016 = getelementptr inbounds i8, ptr %1015, i64 3
  store i8 %1014, ptr %1016, align 1
  %1017 = getelementptr inbounds [24 x i8], ptr %132, i64 0, i64 0
  %1018 = getelementptr inbounds i8, ptr %1017, i64 12
  %1019 = load i64, ptr %114, align 8
  %1020 = trunc i64 %1019 to i32
  store ptr %1018, ptr %32, align 8
  store i32 %1020, ptr %33, align 4
  %1021 = load i32, ptr %33, align 4
  %1022 = trunc i32 %1021 to i8
  %1023 = load ptr, ptr %32, align 8
  store i8 %1022, ptr %1023, align 1
  %1024 = load i32, ptr %33, align 4
  %1025 = lshr i32 %1024, 8
  %1026 = trunc i32 %1025 to i8
  %1027 = load ptr, ptr %32, align 8
  %1028 = getelementptr inbounds i8, ptr %1027, i64 1
  store i8 %1026, ptr %1028, align 1
  %1029 = load i32, ptr %33, align 4
  %1030 = lshr i32 %1029, 16
  %1031 = trunc i32 %1030 to i8
  %1032 = load ptr, ptr %32, align 8
  %1033 = getelementptr inbounds i8, ptr %1032, i64 2
  store i8 %1031, ptr %1033, align 1
  %1034 = load i32, ptr %33, align 4
  %1035 = lshr i32 %1034, 24
  %1036 = trunc i32 %1035 to i8
  %1037 = load ptr, ptr %32, align 8
  %1038 = getelementptr inbounds i8, ptr %1037, i64 3
  store i8 %1036, ptr %1038, align 1
  br label %1134

1039:                                             ; preds = %938
  %1040 = getelementptr inbounds [24 x i8], ptr %132, i64 0, i64 0
  %1041 = getelementptr inbounds i8, ptr %1040, i64 8
  %1042 = load i64, ptr %115, align 8
  store ptr %1041, ptr %18, align 8
  store i64 %1042, ptr %19, align 8
  %1043 = load ptr, ptr %18, align 8
  %1044 = load i64, ptr %19, align 8
  %1045 = trunc i64 %1044 to i32
  store ptr %1043, ptr %14, align 8
  store i32 %1045, ptr %15, align 4
  %1046 = load i32, ptr %15, align 4
  %1047 = trunc i32 %1046 to i8
  %1048 = load ptr, ptr %14, align 8
  store i8 %1047, ptr %1048, align 1
  %1049 = load i32, ptr %15, align 4
  %1050 = lshr i32 %1049, 8
  %1051 = trunc i32 %1050 to i8
  %1052 = load ptr, ptr %14, align 8
  %1053 = getelementptr inbounds i8, ptr %1052, i64 1
  store i8 %1051, ptr %1053, align 1
  %1054 = load i32, ptr %15, align 4
  %1055 = lshr i32 %1054, 16
  %1056 = trunc i32 %1055 to i8
  %1057 = load ptr, ptr %14, align 8
  %1058 = getelementptr inbounds i8, ptr %1057, i64 2
  store i8 %1056, ptr %1058, align 1
  %1059 = load i32, ptr %15, align 4
  %1060 = lshr i32 %1059, 24
  %1061 = trunc i32 %1060 to i8
  %1062 = load ptr, ptr %14, align 8
  %1063 = getelementptr inbounds i8, ptr %1062, i64 3
  store i8 %1061, ptr %1063, align 1
  %1064 = load ptr, ptr %18, align 8
  %1065 = getelementptr inbounds i8, ptr %1064, i64 4
  %1066 = load i64, ptr %19, align 8
  %1067 = lshr i64 %1066, 32
  %1068 = trunc i64 %1067 to i32
  store ptr %1065, ptr %16, align 8
  store i32 %1068, ptr %17, align 4
  %1069 = load i32, ptr %17, align 4
  %1070 = trunc i32 %1069 to i8
  %1071 = load ptr, ptr %16, align 8
  store i8 %1070, ptr %1071, align 1
  %1072 = load i32, ptr %17, align 4
  %1073 = lshr i32 %1072, 8
  %1074 = trunc i32 %1073 to i8
  %1075 = load ptr, ptr %16, align 8
  %1076 = getelementptr inbounds i8, ptr %1075, i64 1
  store i8 %1074, ptr %1076, align 1
  %1077 = load i32, ptr %17, align 4
  %1078 = lshr i32 %1077, 16
  %1079 = trunc i32 %1078 to i8
  %1080 = load ptr, ptr %16, align 8
  %1081 = getelementptr inbounds i8, ptr %1080, i64 2
  store i8 %1079, ptr %1081, align 1
  %1082 = load i32, ptr %17, align 4
  %1083 = lshr i32 %1082, 24
  %1084 = trunc i32 %1083 to i8
  %1085 = load ptr, ptr %16, align 8
  %1086 = getelementptr inbounds i8, ptr %1085, i64 3
  store i8 %1084, ptr %1086, align 1
  %1087 = getelementptr inbounds [24 x i8], ptr %132, i64 0, i64 0
  %1088 = getelementptr inbounds i8, ptr %1087, i64 16
  %1089 = load i64, ptr %114, align 8
  store ptr %1088, ptr %24, align 8
  store i64 %1089, ptr %25, align 8
  %1090 = load ptr, ptr %24, align 8
  %1091 = load i64, ptr %25, align 8
  %1092 = trunc i64 %1091 to i32
  store ptr %1090, ptr %20, align 8
  store i32 %1092, ptr %21, align 4
  %1093 = load i32, ptr %21, align 4
  %1094 = trunc i32 %1093 to i8
  %1095 = load ptr, ptr %20, align 8
  store i8 %1094, ptr %1095, align 1
  %1096 = load i32, ptr %21, align 4
  %1097 = lshr i32 %1096, 8
  %1098 = trunc i32 %1097 to i8
  %1099 = load ptr, ptr %20, align 8
  %1100 = getelementptr inbounds i8, ptr %1099, i64 1
  store i8 %1098, ptr %1100, align 1
  %1101 = load i32, ptr %21, align 4
  %1102 = lshr i32 %1101, 16
  %1103 = trunc i32 %1102 to i8
  %1104 = load ptr, ptr %20, align 8
  %1105 = getelementptr inbounds i8, ptr %1104, i64 2
  store i8 %1103, ptr %1105, align 1
  %1106 = load i32, ptr %21, align 4
  %1107 = lshr i32 %1106, 24
  %1108 = trunc i32 %1107 to i8
  %1109 = load ptr, ptr %20, align 8
  %1110 = getelementptr inbounds i8, ptr %1109, i64 3
  store i8 %1108, ptr %1110, align 1
  %1111 = load ptr, ptr %24, align 8
  %1112 = getelementptr inbounds i8, ptr %1111, i64 4
  %1113 = load i64, ptr %25, align 8
  %1114 = lshr i64 %1113, 32
  %1115 = trunc i64 %1114 to i32
  store ptr %1112, ptr %22, align 8
  store i32 %1115, ptr %23, align 4
  %1116 = load i32, ptr %23, align 4
  %1117 = trunc i32 %1116 to i8
  %1118 = load ptr, ptr %22, align 8
  store i8 %1117, ptr %1118, align 1
  %1119 = load i32, ptr %23, align 4
  %1120 = lshr i32 %1119, 8
  %1121 = trunc i32 %1120 to i8
  %1122 = load ptr, ptr %22, align 8
  %1123 = getelementptr inbounds i8, ptr %1122, i64 1
  store i8 %1121, ptr %1123, align 1
  %1124 = load i32, ptr %23, align 4
  %1125 = lshr i32 %1124, 16
  %1126 = trunc i32 %1125 to i8
  %1127 = load ptr, ptr %22, align 8
  %1128 = getelementptr inbounds i8, ptr %1127, i64 2
  store i8 %1126, ptr %1128, align 1
  %1129 = load i32, ptr %23, align 4
  %1130 = lshr i32 %1129, 24
  %1131 = trunc i32 %1130 to i8
  %1132 = load ptr, ptr %22, align 8
  %1133 = getelementptr inbounds i8, ptr %1132, i64 3
  store i8 %1131, ptr %1133, align 1
  store i32 24, ptr %133, align 4
  br label %1134

1134:                                             ; preds = %1039, %994
  %1135 = load ptr, ptr %91, align 8
  %1136 = getelementptr inbounds %struct.mz_zip_archive, ptr %1135, i32 0, i32 12
  %1137 = load ptr, ptr %1136, align 8
  %1138 = load ptr, ptr %91, align 8
  %1139 = getelementptr inbounds %struct.mz_zip_archive, ptr %1138, i32 0, i32 14
  %1140 = load ptr, ptr %1139, align 8
  %1141 = load i64, ptr %113, align 8
  %1142 = getelementptr inbounds [24 x i8], ptr %132, i64 0, i64 0
  %1143 = load i32, ptr %133, align 4
  %1144 = zext i32 %1143 to i64
  %1145 = call i64 %1137(ptr noundef %1140, i64 noundef %1141, ptr noundef %1142, i64 noundef %1144)
  %1146 = load i32, ptr %133, align 4
  %1147 = zext i32 %1146 to i64
  %1148 = icmp ne i64 %1145, %1147
  br i1 %1148, label %1149, label %1150

1149:                                             ; preds = %1134
  store i32 0, ptr %90, align 4
  br label %1360

1150:                                             ; preds = %1134
  %1151 = load i32, ptr %133, align 4
  %1152 = zext i32 %1151 to i64
  %1153 = load i64, ptr %113, align 8
  %1154 = add i64 %1153, %1152
  store i64 %1154, ptr %113, align 8
  br label %1155

1155:                                             ; preds = %1150, %934
  %1156 = load i32, ptr %99, align 4
  %1157 = and i32 %1156, 131072
  %1158 = icmp ne i32 %1157, 0
  br i1 %1158, label %1159, label %1303

1159:                                             ; preds = %1155
  %1160 = load ptr, ptr %118, align 8
  %1161 = icmp ne ptr %1160, null
  br i1 %1161, label %1162, label %1183

1162:                                             ; preds = %1159
  %1163 = getelementptr inbounds [28 x i8], ptr %120, i64 0, i64 0
  %1164 = load i64, ptr %95, align 8
  %1165 = icmp uge i64 %1164, 4294967295
  br i1 %1165, label %1166, label %1167

1166:                                             ; preds = %1162
  br label %1168

1167:                                             ; preds = %1162
  br label %1168

1168:                                             ; preds = %1167, %1166
  %1169 = phi ptr [ %114, %1166 ], [ null, %1167 ]
  %1170 = load i64, ptr %95, align 8
  %1171 = icmp uge i64 %1170, 4294967295
  br i1 %1171, label %1172, label %1173

1172:                                             ; preds = %1168
  br label %1174

1173:                                             ; preds = %1168
  br label %1174

1174:                                             ; preds = %1173, %1172
  %1175 = phi ptr [ %115, %1172 ], [ null, %1173 ]
  %1176 = load i64, ptr %112, align 8
  %1177 = icmp uge i64 %1176, 4294967295
  br i1 %1177, label %1178, label %1179

1178:                                             ; preds = %1174
  br label %1180

1179:                                             ; preds = %1174
  br label %1180

1180:                                             ; preds = %1179, %1178
  %1181 = phi ptr [ %112, %1178 ], [ null, %1179 ]
  %1182 = call i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef %1163, ptr noundef %1169, ptr noundef %1175, ptr noundef %1181)
  store i32 %1182, ptr %119, align 4
  br label %1183

1183:                                             ; preds = %1180, %1159
  %1184 = load ptr, ptr %91, align 8
  %1185 = getelementptr inbounds [30 x i8], ptr %117, i64 0, i64 0
  %1186 = load i64, ptr %116, align 8
  %1187 = trunc i64 %1186 to i16
  %1188 = load i32, ptr %119, align 4
  %1189 = load i32, ptr %101, align 4
  %1190 = add i32 %1188, %1189
  %1191 = trunc i32 %1190 to i16
  %1192 = load i64, ptr %95, align 8
  %1193 = icmp uge i64 %1192, 4294967295
  br i1 %1193, label %1194, label %1195

1194:                                             ; preds = %1183
  br label %1197

1195:                                             ; preds = %1183
  %1196 = load i64, ptr %114, align 8
  br label %1197

1197:                                             ; preds = %1195, %1194
  %1198 = phi i64 [ 4294967295, %1194 ], [ %1196, %1195 ]
  %1199 = load i64, ptr %95, align 8
  %1200 = icmp uge i64 %1199, 4294967295
  br i1 %1200, label %1201, label %1202

1201:                                             ; preds = %1197
  br label %1204

1202:                                             ; preds = %1197
  %1203 = load i64, ptr %115, align 8
  br label %1204

1204:                                             ; preds = %1202, %1201
  %1205 = phi i64 [ 4294967295, %1201 ], [ %1203, %1202 ]
  %1206 = load i32, ptr %105, align 4
  %1207 = load i16, ptr %108, align 2
  %1208 = load i16, ptr %104, align 2
  %1209 = load i16, ptr %109, align 2
  %1210 = load i16, ptr %110, align 2
  %1211 = call i32 @mz_zip_writer_create_local_dir_header(ptr noundef %1184, ptr noundef %1185, i16 noundef zeroext %1187, i16 noundef zeroext %1191, i64 noundef %1198, i64 noundef %1205, i32 noundef %1206, i16 noundef zeroext %1207, i16 noundef zeroext %1208, i16 noundef zeroext %1209, i16 noundef zeroext %1210)
  %1212 = icmp ne i32 %1211, 0
  br i1 %1212, label %1222, label %1213

1213:                                             ; preds = %1204
  %1214 = load ptr, ptr %91, align 8
  store ptr %1214, ptr %82, align 8
  store i32 27, ptr %83, align 4
  %1215 = load ptr, ptr %82, align 8
  %1216 = icmp ne ptr %1215, null
  br i1 %1216, label %1217, label %1221

1217:                                             ; preds = %1213
  %1218 = load i32, ptr %83, align 4
  %1219 = load ptr, ptr %82, align 8
  %1220 = getelementptr inbounds %struct.mz_zip_archive, ptr %1219, i32 0, i32 5
  store i32 %1218, ptr %1220, align 4
  br label %1221

1221:                                             ; preds = %1213, %1217
  store i32 0, ptr %90, align 4
  br label %1360

1222:                                             ; preds = %1204
  %1223 = load i64, ptr %112, align 8
  store i64 %1223, ptr %123, align 8
  %1224 = load ptr, ptr %91, align 8
  %1225 = getelementptr inbounds %struct.mz_zip_archive, ptr %1224, i32 0, i32 12
  %1226 = load ptr, ptr %1225, align 8
  %1227 = load ptr, ptr %91, align 8
  %1228 = getelementptr inbounds %struct.mz_zip_archive, ptr %1227, i32 0, i32 14
  %1229 = load ptr, ptr %1228, align 8
  %1230 = load i64, ptr %123, align 8
  %1231 = getelementptr inbounds [30 x i8], ptr %117, i64 0, i64 0
  %1232 = call i64 %1226(ptr noundef %1229, i64 noundef %1230, ptr noundef %1231, i64 noundef 30)
  %1233 = icmp ne i64 %1232, 30
  br i1 %1233, label %1234, label %1243

1234:                                             ; preds = %1222
  %1235 = load ptr, ptr %91, align 8
  store ptr %1235, ptr %84, align 8
  store i32 19, ptr %85, align 4
  %1236 = load ptr, ptr %84, align 8
  %1237 = icmp ne ptr %1236, null
  br i1 %1237, label %1238, label %1242

1238:                                             ; preds = %1234
  %1239 = load i32, ptr %85, align 4
  %1240 = load ptr, ptr %84, align 8
  %1241 = getelementptr inbounds %struct.mz_zip_archive, ptr %1240, i32 0, i32 5
  store i32 %1239, ptr %1241, align 4
  br label %1242

1242:                                             ; preds = %1234, %1238
  store i32 0, ptr %90, align 4
  br label %1360

1243:                                             ; preds = %1222
  %1244 = load ptr, ptr %118, align 8
  %1245 = icmp ne ptr %1244, null
  br i1 %1245, label %1246, label %1302

1246:                                             ; preds = %1243
  %1247 = load i64, ptr %123, align 8
  %1248 = add i64 %1247, 30
  store i64 %1248, ptr %123, align 8
  %1249 = load ptr, ptr %91, align 8
  %1250 = getelementptr inbounds %struct.mz_zip_archive, ptr %1249, i32 0, i32 12
  %1251 = load ptr, ptr %1250, align 8
  %1252 = load ptr, ptr %91, align 8
  %1253 = getelementptr inbounds %struct.mz_zip_archive, ptr %1252, i32 0, i32 14
  %1254 = load ptr, ptr %1253, align 8
  %1255 = load i64, ptr %123, align 8
  %1256 = load ptr, ptr %92, align 8
  %1257 = load i64, ptr %116, align 8
  %1258 = call i64 %1251(ptr noundef %1254, i64 noundef %1255, ptr noundef %1256, i64 noundef %1257)
  %1259 = load i64, ptr %116, align 8
  %1260 = icmp ne i64 %1258, %1259
  br i1 %1260, label %1261, label %1270

1261:                                             ; preds = %1246
  %1262 = load ptr, ptr %91, align 8
  store ptr %1262, ptr %86, align 8
  store i32 19, ptr %87, align 4
  %1263 = load ptr, ptr %86, align 8
  %1264 = icmp ne ptr %1263, null
  br i1 %1264, label %1265, label %1269

1265:                                             ; preds = %1261
  %1266 = load i32, ptr %87, align 4
  %1267 = load ptr, ptr %86, align 8
  %1268 = getelementptr inbounds %struct.mz_zip_archive, ptr %1267, i32 0, i32 5
  store i32 %1266, ptr %1268, align 4
  br label %1269

1269:                                             ; preds = %1261, %1265
  store i32 0, ptr %90, align 4
  br label %1360

1270:                                             ; preds = %1246
  %1271 = load i64, ptr %116, align 8
  %1272 = load i64, ptr %123, align 8
  %1273 = add i64 %1272, %1271
  store i64 %1273, ptr %123, align 8
  %1274 = load ptr, ptr %91, align 8
  %1275 = getelementptr inbounds %struct.mz_zip_archive, ptr %1274, i32 0, i32 12
  %1276 = load ptr, ptr %1275, align 8
  %1277 = load ptr, ptr %91, align 8
  %1278 = getelementptr inbounds %struct.mz_zip_archive, ptr %1277, i32 0, i32 14
  %1279 = load ptr, ptr %1278, align 8
  %1280 = load i64, ptr %123, align 8
  %1281 = getelementptr inbounds [28 x i8], ptr %120, i64 0, i64 0
  %1282 = load i32, ptr %119, align 4
  %1283 = zext i32 %1282 to i64
  %1284 = call i64 %1276(ptr noundef %1279, i64 noundef %1280, ptr noundef %1281, i64 noundef %1283)
  %1285 = load i32, ptr %119, align 4
  %1286 = zext i32 %1285 to i64
  %1287 = icmp ne i64 %1284, %1286
  br i1 %1287, label %1288, label %1297

1288:                                             ; preds = %1270
  %1289 = load ptr, ptr %91, align 8
  store ptr %1289, ptr %88, align 8
  store i32 19, ptr %89, align 4
  %1290 = load ptr, ptr %88, align 8
  %1291 = icmp ne ptr %1290, null
  br i1 %1291, label %1292, label %1296

1292:                                             ; preds = %1288
  %1293 = load i32, ptr %89, align 4
  %1294 = load ptr, ptr %88, align 8
  %1295 = getelementptr inbounds %struct.mz_zip_archive, ptr %1294, i32 0, i32 5
  store i32 %1293, ptr %1295, align 4
  br label %1296

1296:                                             ; preds = %1288, %1292
  store i32 0, ptr %90, align 4
  br label %1360

1297:                                             ; preds = %1270
  %1298 = load i32, ptr %119, align 4
  %1299 = zext i32 %1298 to i64
  %1300 = load i64, ptr %123, align 8
  %1301 = add i64 %1300, %1299
  store i64 %1301, ptr %123, align 8
  br label %1302

1302:                                             ; preds = %1297, %1243
  br label %1303

1303:                                             ; preds = %1302, %1155
  %1304 = load ptr, ptr %118, align 8
  %1305 = icmp ne ptr %1304, null
  br i1 %1305, label %1306, label %1327

1306:                                             ; preds = %1303
  %1307 = getelementptr inbounds [28 x i8], ptr %120, i64 0, i64 0
  %1308 = load i64, ptr %114, align 8
  %1309 = icmp uge i64 %1308, 4294967295
  br i1 %1309, label %1310, label %1311

1310:                                             ; preds = %1306
  br label %1312

1311:                                             ; preds = %1306
  br label %1312

1312:                                             ; preds = %1311, %1310
  %1313 = phi ptr [ %114, %1310 ], [ null, %1311 ]
  %1314 = load i64, ptr %114, align 8
  %1315 = icmp uge i64 %1314, 4294967295
  br i1 %1315, label %1316, label %1317

1316:                                             ; preds = %1312
  br label %1318

1317:                                             ; preds = %1312
  br label %1318

1318:                                             ; preds = %1317, %1316
  %1319 = phi ptr [ %115, %1316 ], [ null, %1317 ]
  %1320 = load i64, ptr %112, align 8
  %1321 = icmp uge i64 %1320, 4294967295
  br i1 %1321, label %1322, label %1323

1322:                                             ; preds = %1318
  br label %1324

1323:                                             ; preds = %1318
  br label %1324

1324:                                             ; preds = %1323, %1322
  %1325 = phi ptr [ %112, %1322 ], [ null, %1323 ]
  %1326 = call i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef %1307, ptr noundef %1313, ptr noundef %1319, ptr noundef %1325)
  store i32 %1326, ptr %119, align 4
  br label %1327

1327:                                             ; preds = %1324, %1303
  %1328 = load ptr, ptr %91, align 8
  %1329 = load ptr, ptr %92, align 8
  %1330 = load i64, ptr %116, align 8
  %1331 = trunc i64 %1330 to i16
  %1332 = load ptr, ptr %118, align 8
  %1333 = load i32, ptr %119, align 4
  %1334 = trunc i32 %1333 to i16
  %1335 = load ptr, ptr %97, align 8
  %1336 = load i16, ptr %98, align 2
  %1337 = load i64, ptr %114, align 8
  %1338 = load i64, ptr %115, align 8
  %1339 = load i32, ptr %105, align 4
  %1340 = load i16, ptr %108, align 2
  %1341 = load i16, ptr %104, align 2
  %1342 = load i16, ptr %109, align 2
  %1343 = load i16, ptr %110, align 2
  %1344 = load i64, ptr %112, align 8
  %1345 = load i16, ptr %111, align 2
  %1346 = zext i16 %1345 to i32
  %1347 = load ptr, ptr %102, align 8
  %1348 = load i32, ptr %103, align 4
  %1349 = call i32 @mz_zip_writer_add_to_central_dir(ptr noundef %1328, ptr noundef %1329, i16 noundef zeroext %1331, ptr noundef %1332, i16 noundef zeroext %1334, ptr noundef %1335, i16 noundef zeroext %1336, i64 noundef %1337, i64 noundef %1338, i32 noundef %1339, i16 noundef zeroext %1340, i16 noundef zeroext %1341, i16 noundef zeroext %1342, i16 noundef zeroext %1343, i64 noundef %1344, i32 noundef %1346, ptr noundef %1347, i32 noundef %1348)
  %1350 = icmp ne i32 %1349, 0
  br i1 %1350, label %1352, label %1351

1351:                                             ; preds = %1327
  store i32 0, ptr %90, align 4
  br label %1360

1352:                                             ; preds = %1327
  %1353 = load ptr, ptr %91, align 8
  %1354 = getelementptr inbounds %struct.mz_zip_archive, ptr %1353, i32 0, i32 2
  %1355 = load i32, ptr %1354, align 8
  %1356 = add i32 %1355, 1
  store i32 %1356, ptr %1354, align 8
  %1357 = load i64, ptr %113, align 8
  %1358 = load ptr, ptr %91, align 8
  %1359 = getelementptr inbounds %struct.mz_zip_archive, ptr %1358, i32 0, i32 0
  store i64 %1357, ptr %1359, align 8
  store i32 1, ptr %90, align 4
  br label %1360

1360:                                             ; preds = %1352, %1351, %1296, %1269, %1242, %1221, %1149, %993, %912, %826, %792, %750, %721, %683, %656, %625, %601, %581, %559, %539, %512, %488, %468, %363, %298, %274, %250, %231, %218, %191
  %1361 = load i32, ptr %90, align 4
  ret i32 %1361
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_add_cfile(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, ptr noundef %5, i16 noundef zeroext %6, i32 noundef %7, ptr noundef %8, i32 noundef %9, ptr noundef %10, i32 noundef %11) #0 {
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i64, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca i16, align 2
  %20 = alloca i32, align 4
  %21 = alloca ptr, align 8
  %22 = alloca i32, align 4
  %23 = alloca ptr, align 8
  %24 = alloca i32, align 4
  store ptr %0, ptr %13, align 8
  store ptr %1, ptr %14, align 8
  store ptr %2, ptr %15, align 8
  store i64 %3, ptr %16, align 8
  store ptr %4, ptr %17, align 8
  store ptr %5, ptr %18, align 8
  store i16 %6, ptr %19, align 2
  store i32 %7, ptr %20, align 4
  store ptr %8, ptr %21, align 8
  store i32 %9, ptr %22, align 4
  store ptr %10, ptr %23, align 8
  store i32 %11, ptr %24, align 4
  %25 = load ptr, ptr %13, align 8
  %26 = load ptr, ptr %14, align 8
  %27 = load ptr, ptr %15, align 8
  %28 = load i64, ptr %16, align 8
  %29 = load ptr, ptr %17, align 8
  %30 = load ptr, ptr %18, align 8
  %31 = load i16, ptr %19, align 2
  %32 = load i32, ptr %20, align 4
  %33 = load ptr, ptr %21, align 8
  %34 = load i32, ptr %22, align 4
  %35 = load ptr, ptr %23, align 8
  %36 = load i32, ptr %24, align 4
  %37 = call i32 @mz_zip_writer_add_read_buf_callback(ptr noundef %25, ptr noundef %26, ptr noundef @mz_file_read_func_stdio, ptr noundef %27, i64 noundef %28, ptr noundef %29, ptr noundef %30, i16 noundef zeroext %31, i32 noundef %32, ptr noundef %33, i32 noundef %34, ptr noundef %35, i32 noundef %36)
  ret i32 %37
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @mz_file_read_func_stdio(ptr noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  store ptr %0, ptr %6, align 8
  store i64 %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store i64 %3, ptr %9, align 8
  %12 = load ptr, ptr %6, align 8
  store ptr %12, ptr %10, align 8
  %13 = load ptr, ptr %10, align 8
  %14 = call i64 @ftello(ptr noundef %13)
  store i64 %14, ptr %11, align 8
  %15 = load i64, ptr %7, align 8
  %16 = icmp slt i64 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %4
  %18 = load i64, ptr %11, align 8
  %19 = load i64, ptr %7, align 8
  %20 = icmp ne i64 %18, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = load ptr, ptr %10, align 8
  %23 = load i64, ptr %7, align 8
  %24 = call i32 @fseeko(ptr noundef %22, i64 noundef %23, i32 noundef 0)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %21, %4
  store i64 0, ptr %5, align 8
  br label %32

27:                                               ; preds = %21, %17
  %28 = load ptr, ptr %8, align 8
  %29 = load i64, ptr %9, align 8
  %30 = load ptr, ptr %10, align 8
  %31 = call i64 @fread(ptr noundef %28, i64 noundef 1, i64 noundef %29, ptr noundef %30)
  store i64 %31, ptr %5, align 8
  br label %32

32:                                               ; preds = %27, %26
  %33 = load i64, ptr %5, align 8
  ret i64 %33
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_add_file(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i16 noundef zeroext %4, i32 noundef %5) #0 {
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i16, align 2
  %17 = alloca i32, align 4
  %18 = alloca ptr, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca ptr, align 8
  %22 = alloca i32, align 4
  store ptr %0, ptr %12, align 8
  store ptr %1, ptr %13, align 8
  store ptr %2, ptr %14, align 8
  store ptr %3, ptr %15, align 8
  store i16 %4, ptr %16, align 2
  store i32 %5, ptr %17, align 4
  store ptr null, ptr %18, align 8
  store i64 0, ptr %19, align 8
  store ptr null, ptr %21, align 8
  call void @llvm.memset.p0.i64(ptr align 8 %20, i8 0, i64 8, i1 false)
  store ptr %20, ptr %21, align 8
  %23 = load ptr, ptr %14, align 8
  %24 = call i32 @mz_zip_get_file_modified_time(ptr noundef %23, ptr noundef %20)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %6
  %27 = load ptr, ptr %12, align 8
  store ptr %27, ptr %7, align 8
  store i32 23, ptr %8, align 4
  %28 = load ptr, ptr %7, align 8
  %29 = icmp ne ptr %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = load i32, ptr %8, align 4
  %32 = load ptr, ptr %7, align 8
  %33 = getelementptr inbounds %struct.mz_zip_archive, ptr %32, i32 0, i32 5
  store i32 %31, ptr %33, align 4
  br label %34

34:                                               ; preds = %26, %30
  store i32 0, ptr %11, align 4
  br label %68

35:                                               ; preds = %6
  %36 = load ptr, ptr %14, align 8
  %37 = call ptr @fopen(ptr noundef %36, ptr noundef @.str.18)
  store ptr %37, ptr %18, align 8
  %38 = load ptr, ptr %18, align 8
  %39 = icmp ne ptr %38, null
  br i1 %39, label %49, label %40

40:                                               ; preds = %35
  %41 = load ptr, ptr %12, align 8
  store ptr %41, ptr %9, align 8
  store i32 17, ptr %10, align 4
  %42 = load ptr, ptr %9, align 8
  %43 = icmp ne ptr %42, null
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = load i32, ptr %10, align 4
  %46 = load ptr, ptr %9, align 8
  %47 = getelementptr inbounds %struct.mz_zip_archive, ptr %46, i32 0, i32 5
  store i32 %45, ptr %47, align 4
  br label %48

48:                                               ; preds = %40, %44
  store i32 0, ptr %11, align 4
  br label %68

49:                                               ; preds = %35
  %50 = load ptr, ptr %18, align 8
  %51 = call i32 @fseeko(ptr noundef %50, i64 noundef 0, i32 noundef 2)
  %52 = load ptr, ptr %18, align 8
  %53 = call i64 @ftello(ptr noundef %52)
  store i64 %53, ptr %19, align 8
  %54 = load ptr, ptr %18, align 8
  %55 = call i32 @fseeko(ptr noundef %54, i64 noundef 0, i32 noundef 0)
  %56 = load ptr, ptr %12, align 8
  %57 = load ptr, ptr %13, align 8
  %58 = load ptr, ptr %18, align 8
  %59 = load i64, ptr %19, align 8
  %60 = load ptr, ptr %21, align 8
  %61 = load ptr, ptr %15, align 8
  %62 = load i16, ptr %16, align 2
  %63 = load i32, ptr %17, align 4
  %64 = call i32 @mz_zip_writer_add_cfile(ptr noundef %56, ptr noundef %57, ptr noundef %58, i64 noundef %59, ptr noundef %60, ptr noundef %61, i16 noundef zeroext %62, i32 noundef %63, ptr noundef null, i32 noundef 0, ptr noundef null, i32 noundef 0)
  store i32 %64, ptr %22, align 4
  %65 = load ptr, ptr %18, align 8
  %66 = call i32 @fclose(ptr noundef %65)
  %67 = load i32, ptr %22, align 4
  store i32 %67, ptr %11, align 4
  br label %68

68:                                               ; preds = %49, %48, %34
  %69 = load i32, ptr %11, align 4
  ret i32 %69
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_get_file_modified_time(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca %struct.stat, align 8
  store ptr %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  %7 = load ptr, ptr %4, align 8
  %8 = call i32 @stat(ptr noundef %7, ptr noundef %6)
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  store i32 0, ptr %3, align 4
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 8
  %13 = getelementptr inbounds %struct.timespec, ptr %12, i32 0, i32 0
  %14 = load i64, ptr %13, align 8
  %15 = load ptr, ptr %5, align 8
  store i64 %14, ptr %15, align 8
  store i32 1, ptr %3, align 4
  br label %16

16:                                               ; preds = %11, %10
  %17 = load i32, ptr %3, align 4
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_add_from_zip_reader(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i32, align 4
  %27 = alloca ptr, align 8
  %28 = alloca ptr, align 8
  %29 = alloca i64, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca ptr, align 8
  %33 = alloca ptr, align 8
  %34 = alloca ptr, align 8
  %35 = alloca i64, align 8
  %36 = alloca i64, align 8
  %37 = alloca i32, align 4
  %38 = alloca ptr, align 8
  %39 = alloca ptr, align 8
  %40 = alloca i64, align 8
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca ptr, align 8
  %44 = alloca ptr, align 8
  %45 = alloca ptr, align 8
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  %48 = alloca i32, align 4
  %49 = alloca ptr, align 8
  %50 = alloca ptr, align 8
  %51 = alloca i64, align 8
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca ptr, align 8
  %55 = alloca ptr, align 8
  %56 = alloca ptr, align 8
  %57 = alloca i64, align 8
  %58 = alloca i64, align 8
  %59 = alloca i32, align 4
  %60 = alloca ptr, align 8
  %61 = alloca ptr, align 8
  %62 = alloca i64, align 8
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca ptr, align 8
  %66 = alloca ptr, align 8
  %67 = alloca ptr, align 8
  %68 = alloca i64, align 8
  %69 = alloca i64, align 8
  %70 = alloca i32, align 4
  %71 = alloca ptr, align 8
  %72 = alloca ptr, align 8
  %73 = alloca i64, align 8
  %74 = alloca i32, align 4
  %75 = alloca i32, align 4
  %76 = alloca ptr, align 8
  %77 = alloca ptr, align 8
  %78 = alloca ptr, align 8
  %79 = alloca i64, align 8
  %80 = alloca i64, align 8
  %81 = alloca ptr, align 8
  %82 = alloca i16, align 2
  %83 = alloca ptr, align 8
  %84 = alloca i32, align 4
  %85 = alloca ptr, align 8
  %86 = alloca i32, align 4
  %87 = alloca ptr, align 8
  %88 = alloca i64, align 8
  %89 = alloca ptr, align 8
  %90 = alloca i32, align 4
  %91 = alloca ptr, align 8
  %92 = alloca i32, align 4
  %93 = alloca ptr, align 8
  %94 = alloca i64, align 8
  %95 = alloca ptr, align 8
  %96 = alloca i32, align 4
  %97 = alloca ptr, align 8
  %98 = alloca i32, align 4
  %99 = alloca ptr, align 8
  %100 = alloca i32, align 4
  %101 = alloca ptr, align 8
  %102 = alloca i32, align 4
  %103 = alloca ptr, align 8
  %104 = alloca i32, align 4
  %105 = alloca ptr, align 8
  %106 = alloca i32, align 4
  %107 = alloca ptr, align 8
  %108 = alloca ptr, align 8
  %109 = alloca ptr, align 8
  %110 = alloca ptr, align 8
  %111 = alloca ptr, align 8
  %112 = alloca ptr, align 8
  %113 = alloca ptr, align 8
  %114 = alloca ptr, align 8
  %115 = alloca ptr, align 8
  %116 = alloca ptr, align 8
  %117 = alloca ptr, align 8
  %118 = alloca ptr, align 8
  %119 = alloca ptr, align 8
  %120 = alloca ptr, align 8
  %121 = alloca ptr, align 8
  %122 = alloca ptr, align 8
  %123 = alloca ptr, align 8
  %124 = alloca ptr, align 8
  %125 = alloca ptr, align 8
  %126 = alloca ptr, align 8
  %127 = alloca ptr, align 8
  %128 = alloca ptr, align 8
  %129 = alloca i32, align 4
  %130 = alloca ptr, align 8
  %131 = alloca ptr, align 8
  %132 = alloca i64, align 8
  %133 = alloca i32, align 4
  %134 = alloca i32, align 4
  %135 = alloca ptr, align 8
  %136 = alloca ptr, align 8
  %137 = alloca i64, align 8
  %138 = alloca i32, align 4
  %139 = alloca i32, align 4
  %140 = alloca ptr, align 8
  %141 = alloca ptr, align 8
  %142 = alloca i64, align 8
  %143 = alloca i32, align 4
  %144 = alloca i32, align 4
  %145 = alloca ptr, align 8
  %146 = alloca ptr, align 8
  %147 = alloca i64, align 8
  %148 = alloca i32, align 4
  %149 = alloca i32, align 4
  %150 = alloca ptr, align 8
  %151 = alloca ptr, align 8
  %152 = alloca i64, align 8
  %153 = alloca i32, align 4
  %154 = alloca i32, align 4
  %155 = alloca ptr, align 8
  %156 = alloca ptr, align 8
  %157 = alloca i64, align 8
  %158 = alloca i32, align 4
  %159 = alloca i32, align 4
  %160 = alloca ptr, align 8
  %161 = alloca ptr, align 8
  %162 = alloca i64, align 8
  %163 = alloca i32, align 4
  %164 = alloca ptr, align 8
  %165 = alloca i32, align 4
  %166 = alloca ptr, align 8
  %167 = alloca i32, align 4
  %168 = alloca ptr, align 8
  %169 = alloca ptr, align 8
  %170 = alloca i32, align 4
  %171 = alloca ptr, align 8
  %172 = alloca i32, align 4
  %173 = alloca ptr, align 8
  %174 = alloca i32, align 4
  %175 = alloca ptr, align 8
  %176 = alloca i32, align 4
  %177 = alloca ptr, align 8
  %178 = alloca i32, align 4
  %179 = alloca ptr, align 8
  %180 = alloca i32, align 4
  %181 = alloca ptr, align 8
  %182 = alloca i32, align 4
  %183 = alloca ptr, align 8
  %184 = alloca i32, align 4
  %185 = alloca ptr, align 8
  %186 = alloca i32, align 4
  %187 = alloca ptr, align 8
  %188 = alloca i32, align 4
  %189 = alloca ptr, align 8
  %190 = alloca i32, align 4
  %191 = alloca ptr, align 8
  %192 = alloca i32, align 4
  %193 = alloca ptr, align 8
  %194 = alloca i32, align 4
  %195 = alloca ptr, align 8
  %196 = alloca i32, align 4
  %197 = alloca ptr, align 8
  %198 = alloca i32, align 4
  %199 = alloca ptr, align 8
  %200 = alloca i32, align 4
  %201 = alloca ptr, align 8
  %202 = alloca i32, align 4
  %203 = alloca ptr, align 8
  %204 = alloca i32, align 4
  %205 = alloca ptr, align 8
  %206 = alloca i32, align 4
  %207 = alloca ptr, align 8
  %208 = alloca i32, align 4
  %209 = alloca ptr, align 8
  %210 = alloca i32, align 4
  %211 = alloca ptr, align 8
  %212 = alloca i32, align 4
  %213 = alloca ptr, align 8
  %214 = alloca i32, align 4
  %215 = alloca ptr, align 8
  %216 = alloca i32, align 4
  %217 = alloca ptr, align 8
  %218 = alloca i32, align 4
  %219 = alloca ptr, align 8
  %220 = alloca i32, align 4
  %221 = alloca ptr, align 8
  %222 = alloca i32, align 4
  %223 = alloca ptr, align 8
  %224 = alloca i32, align 4
  %225 = alloca ptr, align 8
  %226 = alloca i32, align 4
  %227 = alloca ptr, align 8
  %228 = alloca i32, align 4
  %229 = alloca ptr, align 8
  %230 = alloca i32, align 4
  %231 = alloca ptr, align 8
  %232 = alloca i32, align 4
  %233 = alloca ptr, align 8
  %234 = alloca i32, align 4
  %235 = alloca i32, align 4
  %236 = alloca ptr, align 8
  %237 = alloca ptr, align 8
  %238 = alloca i32, align 4
  %239 = alloca i32, align 4
  %240 = alloca i32, align 4
  %241 = alloca i32, align 4
  %242 = alloca i32, align 4
  %243 = alloca i64, align 8
  %244 = alloca i64, align 8
  %245 = alloca i64, align 8
  %246 = alloca i64, align 8
  %247 = alloca [8 x i32], align 16
  %248 = alloca ptr, align 8
  %249 = alloca [46 x i8], align 16
  %250 = alloca i64, align 8
  %251 = alloca ptr, align 8
  %252 = alloca ptr, align 8
  %253 = alloca ptr, align 8
  %254 = alloca %struct.mz_zip_archive_file_stat, align 8
  %255 = alloca i32, align 4
  %256 = alloca i32, align 4
  %257 = alloca i32, align 4
  %258 = alloca i32, align 4
  %259 = alloca i32, align 4
  %260 = alloca i64, align 8
  %261 = alloca i64, align 8
  %262 = alloca i32, align 4
  %263 = alloca %struct.mz_zip_array, align 8
  %264 = alloca ptr, align 8
  %265 = alloca i32, align 4
  %266 = alloca i32, align 4
  %267 = alloca i32, align 4
  %268 = alloca i32, align 4
  %269 = alloca ptr, align 8
  %270 = alloca i64, align 8
  %271 = alloca i32, align 4
  %272 = alloca ptr, align 8
  %273 = alloca i32, align 4
  %274 = alloca i64, align 8
  %275 = alloca i64, align 8
  %276 = alloca ptr, align 8
  %277 = alloca %struct.mz_zip_array, align 8
  store ptr %0, ptr %236, align 8
  store ptr %1, ptr %237, align 8
  store i32 %2, ptr %238, align 4
  %278 = getelementptr inbounds [8 x i32], ptr %247, i64 0, i64 0
  store ptr %278, ptr %248, align 8
  store i32 0, ptr %262, align 4
  %279 = load ptr, ptr %236, align 8
  %280 = icmp ne ptr %279, null
  br i1 %280, label %281, label %296

281:                                              ; preds = %3
  %282 = load ptr, ptr %236, align 8
  %283 = getelementptr inbounds %struct.mz_zip_archive, ptr %282, i32 0, i32 15
  %284 = load ptr, ptr %283, align 8
  %285 = icmp ne ptr %284, null
  br i1 %285, label %286, label %296

286:                                              ; preds = %281
  %287 = load ptr, ptr %236, align 8
  %288 = getelementptr inbounds %struct.mz_zip_archive, ptr %287, i32 0, i32 3
  %289 = load i32, ptr %288, align 4
  %290 = icmp ne i32 %289, 2
  br i1 %290, label %296, label %291

291:                                              ; preds = %286
  %292 = load ptr, ptr %237, align 8
  %293 = getelementptr inbounds %struct.mz_zip_archive, ptr %292, i32 0, i32 11
  %294 = load ptr, ptr %293, align 8
  %295 = icmp ne ptr %294, null
  br i1 %295, label %305, label %296

296:                                              ; preds = %291, %286, %281, %3
  %297 = load ptr, ptr %236, align 8
  store ptr %297, ptr %171, align 8
  store i32 24, ptr %172, align 4
  %298 = load ptr, ptr %171, align 8
  %299 = icmp ne ptr %298, null
  br i1 %299, label %300, label %304

300:                                              ; preds = %296
  %301 = load i32, ptr %172, align 4
  %302 = load ptr, ptr %171, align 8
  %303 = getelementptr inbounds %struct.mz_zip_archive, ptr %302, i32 0, i32 5
  store i32 %301, ptr %303, align 4
  br label %304

304:                                              ; preds = %296, %300
  store i32 0, ptr %235, align 4
  br label %2607

305:                                              ; preds = %291
  %306 = load ptr, ptr %236, align 8
  %307 = getelementptr inbounds %struct.mz_zip_archive, ptr %306, i32 0, i32 15
  %308 = load ptr, ptr %307, align 8
  store ptr %308, ptr %251, align 8
  %309 = load ptr, ptr %237, align 8
  %310 = getelementptr inbounds %struct.mz_zip_archive, ptr %309, i32 0, i32 15
  %311 = load ptr, ptr %310, align 8
  %312 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %311, i32 0, i32 4
  %313 = load i32, ptr %312, align 4
  %314 = icmp ne i32 %313, 0
  br i1 %314, label %315, label %331

315:                                              ; preds = %305
  %316 = load ptr, ptr %236, align 8
  %317 = getelementptr inbounds %struct.mz_zip_archive, ptr %316, i32 0, i32 15
  %318 = load ptr, ptr %317, align 8
  %319 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %318, i32 0, i32 4
  %320 = load i32, ptr %319, align 4
  %321 = icmp ne i32 %320, 0
  br i1 %321, label %331, label %322

322:                                              ; preds = %315
  %323 = load ptr, ptr %236, align 8
  store ptr %323, ptr %173, align 8
  store i32 24, ptr %174, align 4
  %324 = load ptr, ptr %173, align 8
  %325 = icmp ne ptr %324, null
  br i1 %325, label %326, label %330

326:                                              ; preds = %322
  %327 = load i32, ptr %174, align 4
  %328 = load ptr, ptr %173, align 8
  %329 = getelementptr inbounds %struct.mz_zip_archive, ptr %328, i32 0, i32 5
  store i32 %327, ptr %329, align 4
  br label %330

330:                                              ; preds = %322, %326
  store i32 0, ptr %235, align 4
  br label %2607

331:                                              ; preds = %315, %305
  %332 = load ptr, ptr %237, align 8
  %333 = load i32, ptr %238, align 4
  store ptr %332, ptr %169, align 8
  store i32 %333, ptr %170, align 4
  %334 = load ptr, ptr %169, align 8
  %335 = icmp ne ptr %334, null
  br i1 %335, label %336, label %347

336:                                              ; preds = %331
  %337 = load ptr, ptr %169, align 8
  %338 = getelementptr inbounds %struct.mz_zip_archive, ptr %337, i32 0, i32 15
  %339 = load ptr, ptr %338, align 8
  %340 = icmp ne ptr %339, null
  br i1 %340, label %341, label %347

341:                                              ; preds = %336
  %342 = load i32, ptr %170, align 4
  %343 = load ptr, ptr %169, align 8
  %344 = getelementptr inbounds %struct.mz_zip_archive, ptr %343, i32 0, i32 2
  %345 = load i32, ptr %344, align 8
  %346 = icmp uge i32 %342, %345
  br i1 %346, label %347, label %348

347:                                              ; preds = %341, %336, %331
  store ptr null, ptr %168, align 8
  br label %364

348:                                              ; preds = %341
  %349 = load ptr, ptr %169, align 8
  %350 = getelementptr inbounds %struct.mz_zip_archive, ptr %349, i32 0, i32 15
  %351 = load ptr, ptr %350, align 8
  %352 = load ptr, ptr %351, align 8
  %353 = load ptr, ptr %169, align 8
  %354 = getelementptr inbounds %struct.mz_zip_archive, ptr %353, i32 0, i32 15
  %355 = load ptr, ptr %354, align 8
  %356 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %355, i32 0, i32 1
  %357 = load ptr, ptr %356, align 8
  %358 = load i32, ptr %170, align 4
  %359 = zext i32 %358 to i64
  %360 = getelementptr inbounds i32, ptr %357, i64 %359
  %361 = load i32, ptr %360, align 4
  %362 = zext i32 %361 to i64
  %363 = getelementptr inbounds i8, ptr %352, i64 %362
  store ptr %363, ptr %168, align 8
  br label %364

364:                                              ; preds = %347, %348
  %365 = load ptr, ptr %168, align 8
  store ptr %365, ptr %253, align 8
  %366 = icmp eq ptr null, %365
  br i1 %366, label %367, label %376

367:                                              ; preds = %364
  %368 = load ptr, ptr %236, align 8
  store ptr %368, ptr %175, align 8
  store i32 24, ptr %176, align 4
  %369 = load ptr, ptr %175, align 8
  %370 = icmp ne ptr %369, null
  br i1 %370, label %371, label %375

371:                                              ; preds = %367
  %372 = load i32, ptr %176, align 4
  %373 = load ptr, ptr %175, align 8
  %374 = getelementptr inbounds %struct.mz_zip_archive, ptr %373, i32 0, i32 5
  store i32 %372, ptr %374, align 4
  br label %375

375:                                              ; preds = %367, %371
  store i32 0, ptr %235, align 4
  br label %2607

376:                                              ; preds = %364
  %377 = load ptr, ptr %253, align 8
  %378 = getelementptr inbounds i8, ptr %377, i64 0
  %379 = getelementptr inbounds i8, ptr %378, i64 0
  %380 = load i8, ptr %379, align 1
  %381 = zext i8 %380 to i32
  %382 = load ptr, ptr %253, align 8
  %383 = getelementptr inbounds i8, ptr %382, i64 0
  %384 = getelementptr inbounds i8, ptr %383, i64 1
  %385 = load i8, ptr %384, align 1
  %386 = zext i8 %385 to i32
  %387 = shl i32 %386, 8
  %388 = or i32 %381, %387
  %389 = load ptr, ptr %253, align 8
  %390 = getelementptr inbounds i8, ptr %389, i64 0
  %391 = getelementptr inbounds i8, ptr %390, i64 2
  %392 = load i8, ptr %391, align 1
  %393 = zext i8 %392 to i32
  %394 = shl i32 %393, 16
  %395 = or i32 %388, %394
  %396 = load ptr, ptr %253, align 8
  %397 = getelementptr inbounds i8, ptr %396, i64 0
  %398 = getelementptr inbounds i8, ptr %397, i64 3
  %399 = load i8, ptr %398, align 1
  %400 = zext i8 %399 to i32
  %401 = shl i32 %400, 24
  %402 = or i32 %395, %401
  %403 = icmp ne i32 %402, 33639248
  br i1 %403, label %404, label %413

404:                                              ; preds = %376
  %405 = load ptr, ptr %236, align 8
  store ptr %405, ptr %177, align 8
  store i32 9, ptr %178, align 4
  %406 = load ptr, ptr %177, align 8
  %407 = icmp ne ptr %406, null
  br i1 %407, label %408, label %412

408:                                              ; preds = %404
  %409 = load i32, ptr %178, align 4
  %410 = load ptr, ptr %177, align 8
  %411 = getelementptr inbounds %struct.mz_zip_archive, ptr %410, i32 0, i32 5
  store i32 %409, ptr %411, align 4
  br label %412

412:                                              ; preds = %404, %408
  store i32 0, ptr %235, align 4
  br label %2607

413:                                              ; preds = %376
  %414 = load ptr, ptr %253, align 8
  %415 = getelementptr inbounds i8, ptr %414, i64 28
  %416 = getelementptr inbounds i8, ptr %415, i64 0
  %417 = load i8, ptr %416, align 1
  %418 = zext i8 %417 to i32
  %419 = load ptr, ptr %253, align 8
  %420 = getelementptr inbounds i8, ptr %419, i64 28
  %421 = getelementptr inbounds i8, ptr %420, i64 1
  %422 = load i8, ptr %421, align 1
  %423 = zext i8 %422 to i32
  %424 = shl i32 %423, 8
  %425 = or i32 %418, %424
  store i32 %425, ptr %255, align 4
  %426 = load ptr, ptr %253, align 8
  %427 = getelementptr inbounds i8, ptr %426, i64 32
  %428 = getelementptr inbounds i8, ptr %427, i64 0
  %429 = load i8, ptr %428, align 1
  %430 = zext i8 %429 to i32
  %431 = load ptr, ptr %253, align 8
  %432 = getelementptr inbounds i8, ptr %431, i64 32
  %433 = getelementptr inbounds i8, ptr %432, i64 1
  %434 = load i8, ptr %433, align 1
  %435 = zext i8 %434 to i32
  %436 = shl i32 %435, 8
  %437 = or i32 %430, %436
  store i32 %437, ptr %256, align 4
  %438 = load ptr, ptr %253, align 8
  %439 = getelementptr inbounds i8, ptr %438, i64 30
  %440 = getelementptr inbounds i8, ptr %439, i64 0
  %441 = load i8, ptr %440, align 1
  %442 = zext i8 %441 to i32
  %443 = load ptr, ptr %253, align 8
  %444 = getelementptr inbounds i8, ptr %443, i64 30
  %445 = getelementptr inbounds i8, ptr %444, i64 1
  %446 = load i8, ptr %445, align 1
  %447 = zext i8 %446 to i32
  %448 = shl i32 %447, 8
  %449 = or i32 %442, %448
  store i32 %449, ptr %257, align 4
  %450 = load i32, ptr %255, align 4
  %451 = load i32, ptr %257, align 4
  %452 = add i32 %450, %451
  %453 = load i32, ptr %256, align 4
  %454 = add i32 %452, %453
  store i32 %454, ptr %242, align 4
  %455 = load ptr, ptr %251, align 8
  %456 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %455, i32 0, i32 0
  %457 = getelementptr inbounds %struct.mz_zip_array, ptr %456, i32 0, i32 1
  %458 = load i64, ptr %457, align 8
  %459 = add i64 %458, 46
  %460 = load i32, ptr %242, align 4
  %461 = zext i32 %460 to i64
  %462 = add i64 %459, %461
  %463 = add i64 %462, 32
  %464 = icmp uge i64 %463, 4294967295
  br i1 %464, label %465, label %474

465:                                              ; preds = %413
  %466 = load ptr, ptr %236, align 8
  store ptr %466, ptr %179, align 8
  store i32 15, ptr %180, align 4
  %467 = load ptr, ptr %179, align 8
  %468 = icmp ne ptr %467, null
  br i1 %468, label %469, label %473

469:                                              ; preds = %465
  %470 = load i32, ptr %180, align 4
  %471 = load ptr, ptr %179, align 8
  %472 = getelementptr inbounds %struct.mz_zip_archive, ptr %471, i32 0, i32 5
  store i32 %470, ptr %472, align 4
  br label %473

473:                                              ; preds = %465, %469
  store i32 0, ptr %235, align 4
  br label %2607

474:                                              ; preds = %413
  %475 = load ptr, ptr %236, align 8
  %476 = call i32 @mz_zip_writer_compute_padding_needed_for_file_alignment(ptr noundef %475)
  store i32 %476, ptr %241, align 4
  %477 = load ptr, ptr %251, align 8
  %478 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %477, i32 0, i32 4
  %479 = load i32, ptr %478, align 4
  %480 = icmp ne i32 %479, 0
  br i1 %480, label %496, label %481

481:                                              ; preds = %474
  %482 = load ptr, ptr %236, align 8
  %483 = getelementptr inbounds %struct.mz_zip_archive, ptr %482, i32 0, i32 2
  %484 = load i32, ptr %483, align 8
  %485 = icmp eq i32 %484, 65535
  br i1 %485, label %486, label %495

486:                                              ; preds = %481
  %487 = load ptr, ptr %236, align 8
  store ptr %487, ptr %181, align 8
  store i32 2, ptr %182, align 4
  %488 = load ptr, ptr %181, align 8
  %489 = icmp ne ptr %488, null
  br i1 %489, label %490, label %494

490:                                              ; preds = %486
  %491 = load i32, ptr %182, align 4
  %492 = load ptr, ptr %181, align 8
  %493 = getelementptr inbounds %struct.mz_zip_archive, ptr %492, i32 0, i32 5
  store i32 %491, ptr %493, align 4
  br label %494

494:                                              ; preds = %486, %490
  store i32 0, ptr %235, align 4
  br label %2607

495:                                              ; preds = %481
  br label %511

496:                                              ; preds = %474
  %497 = load ptr, ptr %236, align 8
  %498 = getelementptr inbounds %struct.mz_zip_archive, ptr %497, i32 0, i32 2
  %499 = load i32, ptr %498, align 8
  %500 = icmp eq i32 %499, -1
  br i1 %500, label %501, label %510

501:                                              ; preds = %496
  %502 = load ptr, ptr %236, align 8
  store ptr %502, ptr %183, align 8
  store i32 2, ptr %184, align 4
  %503 = load ptr, ptr %183, align 8
  %504 = icmp ne ptr %503, null
  br i1 %504, label %505, label %509

505:                                              ; preds = %501
  %506 = load i32, ptr %184, align 4
  %507 = load ptr, ptr %183, align 8
  %508 = getelementptr inbounds %struct.mz_zip_archive, ptr %507, i32 0, i32 5
  store i32 %506, ptr %508, align 4
  br label %509

509:                                              ; preds = %501, %505
  store i32 0, ptr %235, align 4
  br label %2607

510:                                              ; preds = %496
  br label %511

511:                                              ; preds = %510, %495
  %512 = load ptr, ptr %237, align 8
  %513 = load i32, ptr %238, align 4
  %514 = load ptr, ptr %253, align 8
  %515 = call i32 @mz_zip_file_stat_internal(ptr noundef %512, i32 noundef %513, ptr noundef %514, ptr noundef %254, ptr noundef null)
  %516 = icmp ne i32 %515, 0
  br i1 %516, label %518, label %517

517:                                              ; preds = %511
  store i32 0, ptr %235, align 4
  br label %2607

518:                                              ; preds = %511
  %519 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %254, i32 0, i32 11
  %520 = load i64, ptr %519, align 8
  store i64 %520, ptr %245, align 8
  %521 = load ptr, ptr %236, align 8
  %522 = getelementptr inbounds %struct.mz_zip_archive, ptr %521, i32 0, i32 0
  %523 = load i64, ptr %522, align 8
  store i64 %523, ptr %246, align 8
  %524 = load ptr, ptr %237, align 8
  %525 = getelementptr inbounds %struct.mz_zip_archive, ptr %524, i32 0, i32 11
  %526 = load ptr, ptr %525, align 8
  %527 = load ptr, ptr %237, align 8
  %528 = getelementptr inbounds %struct.mz_zip_archive, ptr %527, i32 0, i32 14
  %529 = load ptr, ptr %528, align 8
  %530 = load i64, ptr %245, align 8
  %531 = load ptr, ptr %248, align 8
  %532 = call i64 %526(ptr noundef %529, i64 noundef %530, ptr noundef %531, i64 noundef 30)
  %533 = icmp ne i64 %532, 30
  br i1 %533, label %534, label %543

534:                                              ; preds = %518
  %535 = load ptr, ptr %236, align 8
  store ptr %535, ptr %185, align 8
  store i32 20, ptr %186, align 4
  %536 = load ptr, ptr %185, align 8
  %537 = icmp ne ptr %536, null
  br i1 %537, label %538, label %542

538:                                              ; preds = %534
  %539 = load i32, ptr %186, align 4
  %540 = load ptr, ptr %185, align 8
  %541 = getelementptr inbounds %struct.mz_zip_archive, ptr %540, i32 0, i32 5
  store i32 %539, ptr %541, align 4
  br label %542

542:                                              ; preds = %534, %538
  store i32 0, ptr %235, align 4
  br label %2607

543:                                              ; preds = %518
  %544 = load ptr, ptr %248, align 8
  %545 = getelementptr inbounds i8, ptr %544, i64 0
  %546 = load i8, ptr %545, align 1
  %547 = zext i8 %546 to i32
  %548 = load ptr, ptr %248, align 8
  %549 = getelementptr inbounds i8, ptr %548, i64 1
  %550 = load i8, ptr %549, align 1
  %551 = zext i8 %550 to i32
  %552 = shl i32 %551, 8
  %553 = or i32 %547, %552
  %554 = load ptr, ptr %248, align 8
  %555 = getelementptr inbounds i8, ptr %554, i64 2
  %556 = load i8, ptr %555, align 1
  %557 = zext i8 %556 to i32
  %558 = shl i32 %557, 16
  %559 = or i32 %553, %558
  %560 = load ptr, ptr %248, align 8
  %561 = getelementptr inbounds i8, ptr %560, i64 3
  %562 = load i8, ptr %561, align 1
  %563 = zext i8 %562 to i32
  %564 = shl i32 %563, 24
  %565 = or i32 %559, %564
  %566 = icmp ne i32 %565, 67324752
  br i1 %566, label %567, label %576

567:                                              ; preds = %543
  %568 = load ptr, ptr %236, align 8
  store ptr %568, ptr %187, align 8
  store i32 9, ptr %188, align 4
  %569 = load ptr, ptr %187, align 8
  %570 = icmp ne ptr %569, null
  br i1 %570, label %571, label %575

571:                                              ; preds = %567
  %572 = load i32, ptr %188, align 4
  %573 = load ptr, ptr %187, align 8
  %574 = getelementptr inbounds %struct.mz_zip_archive, ptr %573, i32 0, i32 5
  store i32 %572, ptr %574, align 4
  br label %575

575:                                              ; preds = %567, %571
  store i32 0, ptr %235, align 4
  br label %2607

576:                                              ; preds = %543
  %577 = load i64, ptr %245, align 8
  %578 = add i64 %577, 30
  store i64 %578, ptr %245, align 8
  %579 = load ptr, ptr %248, align 8
  %580 = getelementptr inbounds i8, ptr %579, i64 26
  %581 = getelementptr inbounds i8, ptr %580, i64 0
  %582 = load i8, ptr %581, align 1
  %583 = zext i8 %582 to i32
  %584 = load ptr, ptr %248, align 8
  %585 = getelementptr inbounds i8, ptr %584, i64 26
  %586 = getelementptr inbounds i8, ptr %585, i64 1
  %587 = load i8, ptr %586, align 1
  %588 = zext i8 %587 to i32
  %589 = shl i32 %588, 8
  %590 = or i32 %583, %589
  store i32 %590, ptr %258, align 4
  %591 = load ptr, ptr %248, align 8
  %592 = getelementptr inbounds i8, ptr %591, i64 28
  %593 = getelementptr inbounds i8, ptr %592, i64 0
  %594 = load i8, ptr %593, align 1
  %595 = zext i8 %594 to i32
  %596 = load ptr, ptr %248, align 8
  %597 = getelementptr inbounds i8, ptr %596, i64 28
  %598 = getelementptr inbounds i8, ptr %597, i64 1
  %599 = load i8, ptr %598, align 1
  %600 = zext i8 %599 to i32
  %601 = shl i32 %600, 8
  %602 = or i32 %595, %601
  store i32 %602, ptr %259, align 4
  %603 = load ptr, ptr %248, align 8
  %604 = getelementptr inbounds i8, ptr %603, i64 18
  %605 = getelementptr inbounds i8, ptr %604, i64 0
  %606 = load i8, ptr %605, align 1
  %607 = zext i8 %606 to i32
  %608 = load ptr, ptr %248, align 8
  %609 = getelementptr inbounds i8, ptr %608, i64 18
  %610 = getelementptr inbounds i8, ptr %609, i64 1
  %611 = load i8, ptr %610, align 1
  %612 = zext i8 %611 to i32
  %613 = shl i32 %612, 8
  %614 = or i32 %607, %613
  %615 = load ptr, ptr %248, align 8
  %616 = getelementptr inbounds i8, ptr %615, i64 18
  %617 = getelementptr inbounds i8, ptr %616, i64 2
  %618 = load i8, ptr %617, align 1
  %619 = zext i8 %618 to i32
  %620 = shl i32 %619, 16
  %621 = or i32 %614, %620
  %622 = load ptr, ptr %248, align 8
  %623 = getelementptr inbounds i8, ptr %622, i64 18
  %624 = getelementptr inbounds i8, ptr %623, i64 3
  %625 = load i8, ptr %624, align 1
  %626 = zext i8 %625 to i32
  %627 = shl i32 %626, 24
  %628 = or i32 %621, %627
  %629 = zext i32 %628 to i64
  store i64 %629, ptr %260, align 8
  %630 = load ptr, ptr %248, align 8
  %631 = getelementptr inbounds i8, ptr %630, i64 22
  %632 = getelementptr inbounds i8, ptr %631, i64 0
  %633 = load i8, ptr %632, align 1
  %634 = zext i8 %633 to i32
  %635 = load ptr, ptr %248, align 8
  %636 = getelementptr inbounds i8, ptr %635, i64 22
  %637 = getelementptr inbounds i8, ptr %636, i64 1
  %638 = load i8, ptr %637, align 1
  %639 = zext i8 %638 to i32
  %640 = shl i32 %639, 8
  %641 = or i32 %634, %640
  %642 = load ptr, ptr %248, align 8
  %643 = getelementptr inbounds i8, ptr %642, i64 22
  %644 = getelementptr inbounds i8, ptr %643, i64 2
  %645 = load i8, ptr %644, align 1
  %646 = zext i8 %645 to i32
  %647 = shl i32 %646, 16
  %648 = or i32 %641, %647
  %649 = load ptr, ptr %248, align 8
  %650 = getelementptr inbounds i8, ptr %649, i64 22
  %651 = getelementptr inbounds i8, ptr %650, i64 3
  %652 = load i8, ptr %651, align 1
  %653 = zext i8 %652 to i32
  %654 = shl i32 %653, 24
  %655 = or i32 %648, %654
  %656 = zext i32 %655 to i64
  store i64 %656, ptr %261, align 8
  %657 = load i32, ptr %258, align 4
  %658 = load i32, ptr %259, align 4
  %659 = add i32 %657, %658
  %660 = zext i32 %659 to i64
  %661 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %254, i32 0, i32 7
  %662 = load i64, ptr %661, align 8
  %663 = add i64 %660, %662
  store i64 %663, ptr %243, align 8
  %664 = load i32, ptr %259, align 4
  %665 = icmp ne i32 %664, 0
  br i1 %665, label %666, label %1007

666:                                              ; preds = %576
  %667 = load i64, ptr %260, align 8
  %668 = icmp eq i64 %667, 4294967295
  br i1 %668, label %672, label %669

669:                                              ; preds = %666
  %670 = load i64, ptr %261, align 8
  %671 = icmp eq i64 %670, 4294967295
  br i1 %671, label %672, label %1007

672:                                              ; preds = %669, %666
  %673 = load i32, ptr %259, align 4
  store i32 %673, ptr %265, align 4
  store ptr %263, ptr %164, align 8
  store i32 1, ptr %165, align 4
  %674 = load ptr, ptr %164, align 8
  %675 = load ptr, ptr %164, align 8
  %676 = call i64 @llvm.objectsize.i64.p0(ptr %675, i1 false, i1 true, i1 false)
  %677 = call ptr @__memset_chk(ptr noundef %674, i32 noundef 0, i64 noundef 32, i64 noundef %676) #11
  %678 = load i32, ptr %165, align 4
  %679 = load ptr, ptr %164, align 8
  %680 = getelementptr inbounds %struct.mz_zip_array, ptr %679, i32 0, i32 3
  store i32 %678, ptr %680, align 8
  %681 = load ptr, ptr %236, align 8
  %682 = load i32, ptr %259, align 4
  %683 = zext i32 %682 to i64
  store ptr %681, ptr %130, align 8
  store ptr %263, ptr %131, align 8
  store i64 %683, ptr %132, align 8
  store i32 0, ptr %133, align 4
  %684 = load i64, ptr %132, align 8
  %685 = load ptr, ptr %131, align 8
  %686 = getelementptr inbounds %struct.mz_zip_array, ptr %685, i32 0, i32 2
  %687 = load i64, ptr %686, align 8
  %688 = icmp ugt i64 %684, %687
  br i1 %688, label %689, label %698

689:                                              ; preds = %672
  %690 = load ptr, ptr %130, align 8
  %691 = load ptr, ptr %131, align 8
  %692 = load i64, ptr %132, align 8
  %693 = load i32, ptr %133, align 4
  %694 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %690, ptr noundef %691, i64 noundef %692, i32 noundef %693)
  %695 = icmp ne i32 %694, 0
  br i1 %695, label %697, label %696

696:                                              ; preds = %689
  store i32 0, ptr %129, align 4
  br label %702

697:                                              ; preds = %689
  br label %698

698:                                              ; preds = %697, %672
  %699 = load i64, ptr %132, align 8
  %700 = load ptr, ptr %131, align 8
  %701 = getelementptr inbounds %struct.mz_zip_array, ptr %700, i32 0, i32 1
  store i64 %699, ptr %701, align 8
  store i32 1, ptr %129, align 4
  br label %702

702:                                              ; preds = %696, %698
  %703 = load i32, ptr %129, align 4
  %704 = icmp ne i32 %703, 0
  br i1 %704, label %714, label %705

705:                                              ; preds = %702
  %706 = load ptr, ptr %236, align 8
  store ptr %706, ptr %189, align 8
  store i32 16, ptr %190, align 4
  %707 = load ptr, ptr %189, align 8
  %708 = icmp ne ptr %707, null
  br i1 %708, label %709, label %713

709:                                              ; preds = %705
  %710 = load i32, ptr %190, align 4
  %711 = load ptr, ptr %189, align 8
  %712 = getelementptr inbounds %struct.mz_zip_archive, ptr %711, i32 0, i32 5
  store i32 %710, ptr %712, align 4
  br label %713

713:                                              ; preds = %705, %709
  store i32 0, ptr %235, align 4
  br label %2607

714:                                              ; preds = %702
  %715 = load ptr, ptr %237, align 8
  %716 = getelementptr inbounds %struct.mz_zip_archive, ptr %715, i32 0, i32 11
  %717 = load ptr, ptr %716, align 8
  %718 = load ptr, ptr %237, align 8
  %719 = getelementptr inbounds %struct.mz_zip_archive, ptr %718, i32 0, i32 14
  %720 = load ptr, ptr %719, align 8
  %721 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %254, i32 0, i32 11
  %722 = load i64, ptr %721, align 8
  %723 = add i64 %722, 30
  %724 = load i32, ptr %258, align 4
  %725 = zext i32 %724 to i64
  %726 = add i64 %723, %725
  %727 = getelementptr inbounds %struct.mz_zip_array, ptr %263, i32 0, i32 0
  %728 = load ptr, ptr %727, align 8
  %729 = load i32, ptr %259, align 4
  %730 = zext i32 %729 to i64
  %731 = call i64 %717(ptr noundef %720, i64 noundef %726, ptr noundef %728, i64 noundef %730)
  %732 = load i32, ptr %259, align 4
  %733 = zext i32 %732 to i64
  %734 = icmp ne i64 %731, %733
  br i1 %734, label %735, label %757

735:                                              ; preds = %714
  %736 = load ptr, ptr %236, align 8
  store ptr %736, ptr %107, align 8
  store ptr %263, ptr %108, align 8
  %737 = load ptr, ptr %107, align 8
  %738 = getelementptr inbounds %struct.mz_zip_archive, ptr %737, i32 0, i32 8
  %739 = load ptr, ptr %738, align 8
  %740 = load ptr, ptr %107, align 8
  %741 = getelementptr inbounds %struct.mz_zip_archive, ptr %740, i32 0, i32 10
  %742 = load ptr, ptr %741, align 8
  %743 = load ptr, ptr %108, align 8
  %744 = load ptr, ptr %743, align 8
  call void %739(ptr noundef %742, ptr noundef %744) #11
  %745 = load ptr, ptr %108, align 8
  %746 = load ptr, ptr %108, align 8
  %747 = call i64 @llvm.objectsize.i64.p0(ptr %746, i1 false, i1 true, i1 false)
  %748 = call ptr @__memset_chk(ptr noundef %745, i32 noundef 0, i64 noundef 32, i64 noundef %747) #11
  %749 = load ptr, ptr %236, align 8
  store ptr %749, ptr %191, align 8
  store i32 20, ptr %192, align 4
  %750 = load ptr, ptr %191, align 8
  %751 = icmp ne ptr %750, null
  br i1 %751, label %752, label %756

752:                                              ; preds = %735
  %753 = load i32, ptr %192, align 4
  %754 = load ptr, ptr %191, align 8
  %755 = getelementptr inbounds %struct.mz_zip_archive, ptr %754, i32 0, i32 5
  store i32 %753, ptr %755, align 4
  br label %756

756:                                              ; preds = %735, %752
  store i32 0, ptr %235, align 4
  br label %2607

757:                                              ; preds = %714
  %758 = getelementptr inbounds %struct.mz_zip_array, ptr %263, i32 0, i32 0
  %759 = load ptr, ptr %758, align 8
  store ptr %759, ptr %264, align 8
  br label %760

760:                                              ; preds = %990, %757
  %761 = load i32, ptr %265, align 4
  %762 = zext i32 %761 to i64
  %763 = icmp ult i64 %762, 4
  br i1 %763, label %764, label %786

764:                                              ; preds = %760
  %765 = load ptr, ptr %236, align 8
  store ptr %765, ptr %109, align 8
  store ptr %263, ptr %110, align 8
  %766 = load ptr, ptr %109, align 8
  %767 = getelementptr inbounds %struct.mz_zip_archive, ptr %766, i32 0, i32 8
  %768 = load ptr, ptr %767, align 8
  %769 = load ptr, ptr %109, align 8
  %770 = getelementptr inbounds %struct.mz_zip_archive, ptr %769, i32 0, i32 10
  %771 = load ptr, ptr %770, align 8
  %772 = load ptr, ptr %110, align 8
  %773 = load ptr, ptr %772, align 8
  call void %768(ptr noundef %771, ptr noundef %773) #11
  %774 = load ptr, ptr %110, align 8
  %775 = load ptr, ptr %110, align 8
  %776 = call i64 @llvm.objectsize.i64.p0(ptr %775, i1 false, i1 true, i1 false)
  %777 = call ptr @__memset_chk(ptr noundef %774, i32 noundef 0, i64 noundef 32, i64 noundef %776) #11
  %778 = load ptr, ptr %236, align 8
  store ptr %778, ptr %193, align 8
  store i32 9, ptr %194, align 4
  %779 = load ptr, ptr %193, align 8
  %780 = icmp ne ptr %779, null
  br i1 %780, label %781, label %785

781:                                              ; preds = %764
  %782 = load i32, ptr %194, align 4
  %783 = load ptr, ptr %193, align 8
  %784 = getelementptr inbounds %struct.mz_zip_archive, ptr %783, i32 0, i32 5
  store i32 %782, ptr %784, align 4
  br label %785

785:                                              ; preds = %764, %781
  store i32 0, ptr %235, align 4
  br label %2607

786:                                              ; preds = %760
  %787 = load ptr, ptr %264, align 8
  %788 = getelementptr inbounds i8, ptr %787, i64 0
  %789 = load i8, ptr %788, align 1
  %790 = zext i8 %789 to i32
  %791 = load ptr, ptr %264, align 8
  %792 = getelementptr inbounds i8, ptr %791, i64 1
  %793 = load i8, ptr %792, align 1
  %794 = zext i8 %793 to i32
  %795 = shl i32 %794, 8
  %796 = or i32 %790, %795
  store i32 %796, ptr %266, align 4
  %797 = load ptr, ptr %264, align 8
  %798 = getelementptr inbounds i8, ptr %797, i64 2
  %799 = getelementptr inbounds i8, ptr %798, i64 0
  %800 = load i8, ptr %799, align 1
  %801 = zext i8 %800 to i32
  %802 = load ptr, ptr %264, align 8
  %803 = getelementptr inbounds i8, ptr %802, i64 2
  %804 = getelementptr inbounds i8, ptr %803, i64 1
  %805 = load i8, ptr %804, align 1
  %806 = zext i8 %805 to i32
  %807 = shl i32 %806, 8
  %808 = or i32 %801, %807
  store i32 %808, ptr %267, align 4
  %809 = load i32, ptr %267, align 4
  %810 = zext i32 %809 to i64
  %811 = add i64 %810, 4
  %812 = trunc i64 %811 to i32
  store i32 %812, ptr %268, align 4
  %813 = load i32, ptr %268, align 4
  %814 = load i32, ptr %265, align 4
  %815 = icmp ugt i32 %813, %814
  br i1 %815, label %816, label %838

816:                                              ; preds = %786
  %817 = load ptr, ptr %236, align 8
  store ptr %817, ptr %111, align 8
  store ptr %263, ptr %112, align 8
  %818 = load ptr, ptr %111, align 8
  %819 = getelementptr inbounds %struct.mz_zip_archive, ptr %818, i32 0, i32 8
  %820 = load ptr, ptr %819, align 8
  %821 = load ptr, ptr %111, align 8
  %822 = getelementptr inbounds %struct.mz_zip_archive, ptr %821, i32 0, i32 10
  %823 = load ptr, ptr %822, align 8
  %824 = load ptr, ptr %112, align 8
  %825 = load ptr, ptr %824, align 8
  call void %820(ptr noundef %823, ptr noundef %825) #11
  %826 = load ptr, ptr %112, align 8
  %827 = load ptr, ptr %112, align 8
  %828 = call i64 @llvm.objectsize.i64.p0(ptr %827, i1 false, i1 true, i1 false)
  %829 = call ptr @__memset_chk(ptr noundef %826, i32 noundef 0, i64 noundef 32, i64 noundef %828) #11
  %830 = load ptr, ptr %236, align 8
  store ptr %830, ptr %195, align 8
  store i32 9, ptr %196, align 4
  %831 = load ptr, ptr %195, align 8
  %832 = icmp ne ptr %831, null
  br i1 %832, label %833, label %837

833:                                              ; preds = %816
  %834 = load i32, ptr %196, align 4
  %835 = load ptr, ptr %195, align 8
  %836 = getelementptr inbounds %struct.mz_zip_archive, ptr %835, i32 0, i32 5
  store i32 %834, ptr %836, align 4
  br label %837

837:                                              ; preds = %816, %833
  store i32 0, ptr %235, align 4
  br label %2607

838:                                              ; preds = %786
  %839 = load i32, ptr %266, align 4
  %840 = icmp eq i32 %839, 1
  br i1 %840, label %841, label %982

841:                                              ; preds = %838
  %842 = load ptr, ptr %264, align 8
  %843 = getelementptr inbounds i8, ptr %842, i64 4
  store ptr %843, ptr %269, align 8
  %844 = load i32, ptr %267, align 4
  %845 = zext i32 %844 to i64
  %846 = icmp ult i64 %845, 16
  br i1 %846, label %847, label %869

847:                                              ; preds = %841
  %848 = load ptr, ptr %236, align 8
  store ptr %848, ptr %113, align 8
  store ptr %263, ptr %114, align 8
  %849 = load ptr, ptr %113, align 8
  %850 = getelementptr inbounds %struct.mz_zip_archive, ptr %849, i32 0, i32 8
  %851 = load ptr, ptr %850, align 8
  %852 = load ptr, ptr %113, align 8
  %853 = getelementptr inbounds %struct.mz_zip_archive, ptr %852, i32 0, i32 10
  %854 = load ptr, ptr %853, align 8
  %855 = load ptr, ptr %114, align 8
  %856 = load ptr, ptr %855, align 8
  call void %851(ptr noundef %854, ptr noundef %856) #11
  %857 = load ptr, ptr %114, align 8
  %858 = load ptr, ptr %114, align 8
  %859 = call i64 @llvm.objectsize.i64.p0(ptr %858, i1 false, i1 true, i1 false)
  %860 = call ptr @__memset_chk(ptr noundef %857, i32 noundef 0, i64 noundef 32, i64 noundef %859) #11
  %861 = load ptr, ptr %236, align 8
  store ptr %861, ptr %197, align 8
  store i32 9, ptr %198, align 4
  %862 = load ptr, ptr %197, align 8
  %863 = icmp ne ptr %862, null
  br i1 %863, label %864, label %868

864:                                              ; preds = %847
  %865 = load i32, ptr %198, align 4
  %866 = load ptr, ptr %197, align 8
  %867 = getelementptr inbounds %struct.mz_zip_archive, ptr %866, i32 0, i32 5
  store i32 %865, ptr %867, align 4
  br label %868

868:                                              ; preds = %847, %864
  store i32 0, ptr %235, align 4
  br label %2607

869:                                              ; preds = %841
  %870 = load ptr, ptr %269, align 8
  %871 = getelementptr inbounds i8, ptr %870, i64 0
  %872 = load i8, ptr %871, align 1
  %873 = zext i8 %872 to i32
  %874 = load ptr, ptr %269, align 8
  %875 = getelementptr inbounds i8, ptr %874, i64 1
  %876 = load i8, ptr %875, align 1
  %877 = zext i8 %876 to i32
  %878 = shl i32 %877, 8
  %879 = or i32 %873, %878
  %880 = load ptr, ptr %269, align 8
  %881 = getelementptr inbounds i8, ptr %880, i64 2
  %882 = load i8, ptr %881, align 1
  %883 = zext i8 %882 to i32
  %884 = shl i32 %883, 16
  %885 = or i32 %879, %884
  %886 = load ptr, ptr %269, align 8
  %887 = getelementptr inbounds i8, ptr %886, i64 3
  %888 = load i8, ptr %887, align 1
  %889 = zext i8 %888 to i32
  %890 = shl i32 %889, 24
  %891 = or i32 %885, %890
  %892 = zext i32 %891 to i64
  %893 = load ptr, ptr %269, align 8
  %894 = getelementptr inbounds i8, ptr %893, i64 4
  %895 = getelementptr inbounds i8, ptr %894, i64 0
  %896 = load i8, ptr %895, align 1
  %897 = zext i8 %896 to i32
  %898 = load ptr, ptr %269, align 8
  %899 = getelementptr inbounds i8, ptr %898, i64 4
  %900 = getelementptr inbounds i8, ptr %899, i64 1
  %901 = load i8, ptr %900, align 1
  %902 = zext i8 %901 to i32
  %903 = shl i32 %902, 8
  %904 = or i32 %897, %903
  %905 = load ptr, ptr %269, align 8
  %906 = getelementptr inbounds i8, ptr %905, i64 4
  %907 = getelementptr inbounds i8, ptr %906, i64 2
  %908 = load i8, ptr %907, align 1
  %909 = zext i8 %908 to i32
  %910 = shl i32 %909, 16
  %911 = or i32 %904, %910
  %912 = load ptr, ptr %269, align 8
  %913 = getelementptr inbounds i8, ptr %912, i64 4
  %914 = getelementptr inbounds i8, ptr %913, i64 3
  %915 = load i8, ptr %914, align 1
  %916 = zext i8 %915 to i32
  %917 = shl i32 %916, 24
  %918 = or i32 %911, %917
  %919 = zext i32 %918 to i64
  %920 = shl i64 %919, 32
  %921 = or i64 %892, %920
  store i64 %921, ptr %261, align 8
  %922 = load ptr, ptr %269, align 8
  %923 = getelementptr inbounds i8, ptr %922, i64 8
  %924 = getelementptr inbounds i8, ptr %923, i64 0
  %925 = load i8, ptr %924, align 1
  %926 = zext i8 %925 to i32
  %927 = load ptr, ptr %269, align 8
  %928 = getelementptr inbounds i8, ptr %927, i64 8
  %929 = getelementptr inbounds i8, ptr %928, i64 1
  %930 = load i8, ptr %929, align 1
  %931 = zext i8 %930 to i32
  %932 = shl i32 %931, 8
  %933 = or i32 %926, %932
  %934 = load ptr, ptr %269, align 8
  %935 = getelementptr inbounds i8, ptr %934, i64 8
  %936 = getelementptr inbounds i8, ptr %935, i64 2
  %937 = load i8, ptr %936, align 1
  %938 = zext i8 %937 to i32
  %939 = shl i32 %938, 16
  %940 = or i32 %933, %939
  %941 = load ptr, ptr %269, align 8
  %942 = getelementptr inbounds i8, ptr %941, i64 8
  %943 = getelementptr inbounds i8, ptr %942, i64 3
  %944 = load i8, ptr %943, align 1
  %945 = zext i8 %944 to i32
  %946 = shl i32 %945, 24
  %947 = or i32 %940, %946
  %948 = zext i32 %947 to i64
  %949 = load ptr, ptr %269, align 8
  %950 = getelementptr inbounds i8, ptr %949, i64 8
  %951 = getelementptr inbounds i8, ptr %950, i64 4
  %952 = getelementptr inbounds i8, ptr %951, i64 0
  %953 = load i8, ptr %952, align 1
  %954 = zext i8 %953 to i32
  %955 = load ptr, ptr %269, align 8
  %956 = getelementptr inbounds i8, ptr %955, i64 8
  %957 = getelementptr inbounds i8, ptr %956, i64 4
  %958 = getelementptr inbounds i8, ptr %957, i64 1
  %959 = load i8, ptr %958, align 1
  %960 = zext i8 %959 to i32
  %961 = shl i32 %960, 8
  %962 = or i32 %954, %961
  %963 = load ptr, ptr %269, align 8
  %964 = getelementptr inbounds i8, ptr %963, i64 8
  %965 = getelementptr inbounds i8, ptr %964, i64 4
  %966 = getelementptr inbounds i8, ptr %965, i64 2
  %967 = load i8, ptr %966, align 1
  %968 = zext i8 %967 to i32
  %969 = shl i32 %968, 16
  %970 = or i32 %962, %969
  %971 = load ptr, ptr %269, align 8
  %972 = getelementptr inbounds i8, ptr %971, i64 8
  %973 = getelementptr inbounds i8, ptr %972, i64 4
  %974 = getelementptr inbounds i8, ptr %973, i64 3
  %975 = load i8, ptr %974, align 1
  %976 = zext i8 %975 to i32
  %977 = shl i32 %976, 24
  %978 = or i32 %970, %977
  %979 = zext i32 %978 to i64
  %980 = shl i64 %979, 32
  %981 = or i64 %948, %980
  store i64 %981, ptr %260, align 8
  store i32 1, ptr %262, align 4
  br label %993

982:                                              ; preds = %838
  %983 = load i32, ptr %268, align 4
  %984 = load ptr, ptr %264, align 8
  %985 = zext i32 %983 to i64
  %986 = getelementptr inbounds i8, ptr %984, i64 %985
  store ptr %986, ptr %264, align 8
  %987 = load i32, ptr %268, align 4
  %988 = load i32, ptr %265, align 4
  %989 = sub i32 %988, %987
  store i32 %989, ptr %265, align 4
  br label %990

990:                                              ; preds = %982
  %991 = load i32, ptr %265, align 4
  %992 = icmp ne i32 %991, 0
  br i1 %992, label %760, label %993, !llvm.loop !127

993:                                              ; preds = %990, %869
  %994 = load ptr, ptr %236, align 8
  store ptr %994, ptr %115, align 8
  store ptr %263, ptr %116, align 8
  %995 = load ptr, ptr %115, align 8
  %996 = getelementptr inbounds %struct.mz_zip_archive, ptr %995, i32 0, i32 8
  %997 = load ptr, ptr %996, align 8
  %998 = load ptr, ptr %115, align 8
  %999 = getelementptr inbounds %struct.mz_zip_archive, ptr %998, i32 0, i32 10
  %1000 = load ptr, ptr %999, align 8
  %1001 = load ptr, ptr %116, align 8
  %1002 = load ptr, ptr %1001, align 8
  call void %997(ptr noundef %1000, ptr noundef %1002) #11
  %1003 = load ptr, ptr %116, align 8
  %1004 = load ptr, ptr %116, align 8
  %1005 = call i64 @llvm.objectsize.i64.p0(ptr %1004, i1 false, i1 true, i1 false)
  %1006 = call ptr @__memset_chk(ptr noundef %1003, i32 noundef 0, i64 noundef 32, i64 noundef %1005) #11
  br label %1007

1007:                                             ; preds = %993, %669, %576
  %1008 = load ptr, ptr %251, align 8
  %1009 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1008, i32 0, i32 4
  %1010 = load i32, ptr %1009, align 4
  %1011 = icmp ne i32 %1010, 0
  br i1 %1011, label %1044, label %1012

1012:                                             ; preds = %1007
  %1013 = load i64, ptr %246, align 8
  %1014 = load i32, ptr %241, align 4
  %1015 = zext i32 %1014 to i64
  %1016 = add i64 %1013, %1015
  %1017 = add i64 %1016, 30
  %1018 = load i64, ptr %243, align 8
  %1019 = add i64 %1017, %1018
  %1020 = add i64 %1019, 16
  %1021 = load ptr, ptr %251, align 8
  %1022 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1021, i32 0, i32 0
  %1023 = getelementptr inbounds %struct.mz_zip_array, ptr %1022, i32 0, i32 1
  %1024 = load i64, ptr %1023, align 8
  %1025 = add i64 %1020, %1024
  %1026 = add i64 %1025, 46
  %1027 = load i32, ptr %242, align 4
  %1028 = zext i32 %1027 to i64
  %1029 = add i64 %1026, %1028
  %1030 = add i64 %1029, 22
  %1031 = add i64 %1030, 64
  store i64 %1031, ptr %270, align 8
  %1032 = load i64, ptr %270, align 8
  %1033 = icmp uge i64 %1032, 4294967295
  br i1 %1033, label %1034, label %1043

1034:                                             ; preds = %1012
  %1035 = load ptr, ptr %236, align 8
  store ptr %1035, ptr %199, align 8
  store i32 29, ptr %200, align 4
  %1036 = load ptr, ptr %199, align 8
  %1037 = icmp ne ptr %1036, null
  br i1 %1037, label %1038, label %1042

1038:                                             ; preds = %1034
  %1039 = load i32, ptr %200, align 4
  %1040 = load ptr, ptr %199, align 8
  %1041 = getelementptr inbounds %struct.mz_zip_archive, ptr %1040, i32 0, i32 5
  store i32 %1039, ptr %1041, align 4
  br label %1042

1042:                                             ; preds = %1034, %1038
  store i32 0, ptr %235, align 4
  br label %2607

1043:                                             ; preds = %1012
  br label %1044

1044:                                             ; preds = %1043, %1007
  %1045 = load ptr, ptr %236, align 8
  %1046 = load i64, ptr %246, align 8
  %1047 = load i32, ptr %241, align 4
  %1048 = call i32 @mz_zip_writer_write_zeros(ptr noundef %1045, i64 noundef %1046, i32 noundef %1047)
  %1049 = icmp ne i32 %1048, 0
  br i1 %1049, label %1051, label %1050

1050:                                             ; preds = %1044
  store i32 0, ptr %235, align 4
  br label %2607

1051:                                             ; preds = %1044
  %1052 = load i32, ptr %241, align 4
  %1053 = zext i32 %1052 to i64
  %1054 = load i64, ptr %246, align 8
  %1055 = add i64 %1054, %1053
  store i64 %1055, ptr %246, align 8
  %1056 = load i64, ptr %246, align 8
  store i64 %1056, ptr %244, align 8
  %1057 = load ptr, ptr %236, align 8
  %1058 = getelementptr inbounds %struct.mz_zip_archive, ptr %1057, i32 0, i32 6
  %1059 = load i64, ptr %1058, align 8
  %1060 = icmp ne i64 %1059, 0
  br i1 %1060, label %1061, label %1077

1061:                                             ; preds = %1051
  %1062 = load i64, ptr %244, align 8
  %1063 = load ptr, ptr %236, align 8
  %1064 = getelementptr inbounds %struct.mz_zip_archive, ptr %1063, i32 0, i32 6
  %1065 = load i64, ptr %1064, align 8
  %1066 = sub i64 %1065, 1
  %1067 = and i64 %1062, %1066
  %1068 = icmp eq i64 %1067, 0
  %1069 = xor i1 %1068, true
  %1070 = zext i1 %1069 to i32
  %1071 = sext i32 %1070 to i64
  %1072 = icmp ne i64 %1071, 0
  br i1 %1072, label %1073, label %1075

1073:                                             ; preds = %1061
  call void @__assert_rtn(ptr noundef @__func__.mz_zip_writer_add_from_zip_reader, ptr noundef @.str.11, i32 noundef 8572, ptr noundef @.str.22) #12
  unreachable

1074:                                             ; No predecessors!
  br label %1076

1075:                                             ; preds = %1061
  br label %1076

1076:                                             ; preds = %1075, %1074
  br label %1077

1077:                                             ; preds = %1076, %1051
  %1078 = load ptr, ptr %236, align 8
  %1079 = getelementptr inbounds %struct.mz_zip_archive, ptr %1078, i32 0, i32 12
  %1080 = load ptr, ptr %1079, align 8
  %1081 = load ptr, ptr %236, align 8
  %1082 = getelementptr inbounds %struct.mz_zip_archive, ptr %1081, i32 0, i32 14
  %1083 = load ptr, ptr %1082, align 8
  %1084 = load i64, ptr %246, align 8
  %1085 = load ptr, ptr %248, align 8
  %1086 = call i64 %1080(ptr noundef %1083, i64 noundef %1084, ptr noundef %1085, i64 noundef 30)
  %1087 = icmp ne i64 %1086, 30
  br i1 %1087, label %1088, label %1097

1088:                                             ; preds = %1077
  %1089 = load ptr, ptr %236, align 8
  store ptr %1089, ptr %201, align 8
  store i32 19, ptr %202, align 4
  %1090 = load ptr, ptr %201, align 8
  %1091 = icmp ne ptr %1090, null
  br i1 %1091, label %1092, label %1096

1092:                                             ; preds = %1088
  %1093 = load i32, ptr %202, align 4
  %1094 = load ptr, ptr %201, align 8
  %1095 = getelementptr inbounds %struct.mz_zip_archive, ptr %1094, i32 0, i32 5
  store i32 %1093, ptr %1095, align 4
  br label %1096

1096:                                             ; preds = %1088, %1092
  store i32 0, ptr %235, align 4
  br label %2607

1097:                                             ; preds = %1077
  %1098 = load i64, ptr %246, align 8
  %1099 = add i64 %1098, 30
  store i64 %1099, ptr %246, align 8
  %1100 = load ptr, ptr %236, align 8
  %1101 = getelementptr inbounds %struct.mz_zip_archive, ptr %1100, i32 0, i32 7
  %1102 = load ptr, ptr %1101, align 8
  %1103 = load ptr, ptr %236, align 8
  %1104 = getelementptr inbounds %struct.mz_zip_archive, ptr %1103, i32 0, i32 10
  %1105 = load ptr, ptr %1104, align 8
  %1106 = load i64, ptr %243, align 8
  %1107 = icmp ult i64 65536, %1106
  br i1 %1107, label %1108, label %1109

1108:                                             ; preds = %1097
  br label %1111

1109:                                             ; preds = %1097
  %1110 = load i64, ptr %243, align 8
  br label %1111

1111:                                             ; preds = %1109, %1108
  %1112 = phi i64 [ 65536, %1108 ], [ %1110, %1109 ]
  %1113 = icmp ugt i64 32, %1112
  br i1 %1113, label %1114, label %1115

1114:                                             ; preds = %1111
  br label %1123

1115:                                             ; preds = %1111
  %1116 = load i64, ptr %243, align 8
  %1117 = icmp ult i64 65536, %1116
  br i1 %1117, label %1118, label %1119

1118:                                             ; preds = %1115
  br label %1121

1119:                                             ; preds = %1115
  %1120 = load i64, ptr %243, align 8
  br label %1121

1121:                                             ; preds = %1119, %1118
  %1122 = phi i64 [ 65536, %1118 ], [ %1120, %1119 ]
  br label %1123

1123:                                             ; preds = %1121, %1114
  %1124 = phi i64 [ 32, %1114 ], [ %1122, %1121 ]
  %1125 = call ptr %1102(ptr noundef %1105, i64 noundef 1, i64 noundef %1124)
  store ptr %1125, ptr %252, align 8
  %1126 = icmp eq ptr null, %1125
  br i1 %1126, label %1127, label %1136

1127:                                             ; preds = %1123
  %1128 = load ptr, ptr %236, align 8
  store ptr %1128, ptr %203, align 8
  store i32 16, ptr %204, align 4
  %1129 = load ptr, ptr %203, align 8
  %1130 = icmp ne ptr %1129, null
  br i1 %1130, label %1131, label %1135

1131:                                             ; preds = %1127
  %1132 = load i32, ptr %204, align 4
  %1133 = load ptr, ptr %203, align 8
  %1134 = getelementptr inbounds %struct.mz_zip_archive, ptr %1133, i32 0, i32 5
  store i32 %1132, ptr %1134, align 4
  br label %1135

1135:                                             ; preds = %1127, %1131
  store i32 0, ptr %235, align 4
  br label %2607

1136:                                             ; preds = %1123
  br label %1137

1137:                                             ; preds = %1214, %1136
  %1138 = load i64, ptr %243, align 8
  %1139 = icmp ne i64 %1138, 0
  br i1 %1139, label %1140, label %1223

1140:                                             ; preds = %1137
  %1141 = load i64, ptr %243, align 8
  %1142 = icmp ult i64 65536, %1141
  br i1 %1142, label %1143, label %1144

1143:                                             ; preds = %1140
  br label %1146

1144:                                             ; preds = %1140
  %1145 = load i64, ptr %243, align 8
  br label %1146

1146:                                             ; preds = %1144, %1143
  %1147 = phi i64 [ 65536, %1143 ], [ %1145, %1144 ]
  %1148 = trunc i64 %1147 to i32
  store i32 %1148, ptr %239, align 4
  %1149 = load ptr, ptr %237, align 8
  %1150 = getelementptr inbounds %struct.mz_zip_archive, ptr %1149, i32 0, i32 11
  %1151 = load ptr, ptr %1150, align 8
  %1152 = load ptr, ptr %237, align 8
  %1153 = getelementptr inbounds %struct.mz_zip_archive, ptr %1152, i32 0, i32 14
  %1154 = load ptr, ptr %1153, align 8
  %1155 = load i64, ptr %245, align 8
  %1156 = load ptr, ptr %252, align 8
  %1157 = load i32, ptr %239, align 4
  %1158 = zext i32 %1157 to i64
  %1159 = call i64 %1151(ptr noundef %1154, i64 noundef %1155, ptr noundef %1156, i64 noundef %1158)
  %1160 = load i32, ptr %239, align 4
  %1161 = zext i32 %1160 to i64
  %1162 = icmp ne i64 %1159, %1161
  br i1 %1162, label %1163, label %1179

1163:                                             ; preds = %1146
  %1164 = load ptr, ptr %236, align 8
  %1165 = getelementptr inbounds %struct.mz_zip_archive, ptr %1164, i32 0, i32 8
  %1166 = load ptr, ptr %1165, align 8
  %1167 = load ptr, ptr %236, align 8
  %1168 = getelementptr inbounds %struct.mz_zip_archive, ptr %1167, i32 0, i32 10
  %1169 = load ptr, ptr %1168, align 8
  %1170 = load ptr, ptr %252, align 8
  call void %1166(ptr noundef %1169, ptr noundef %1170)
  %1171 = load ptr, ptr %236, align 8
  store ptr %1171, ptr %205, align 8
  store i32 20, ptr %206, align 4
  %1172 = load ptr, ptr %205, align 8
  %1173 = icmp ne ptr %1172, null
  br i1 %1173, label %1174, label %1178

1174:                                             ; preds = %1163
  %1175 = load i32, ptr %206, align 4
  %1176 = load ptr, ptr %205, align 8
  %1177 = getelementptr inbounds %struct.mz_zip_archive, ptr %1176, i32 0, i32 5
  store i32 %1175, ptr %1177, align 4
  br label %1178

1178:                                             ; preds = %1163, %1174
  store i32 0, ptr %235, align 4
  br label %2607

1179:                                             ; preds = %1146
  %1180 = load i32, ptr %239, align 4
  %1181 = zext i32 %1180 to i64
  %1182 = load i64, ptr %245, align 8
  %1183 = add i64 %1182, %1181
  store i64 %1183, ptr %245, align 8
  %1184 = load ptr, ptr %236, align 8
  %1185 = getelementptr inbounds %struct.mz_zip_archive, ptr %1184, i32 0, i32 12
  %1186 = load ptr, ptr %1185, align 8
  %1187 = load ptr, ptr %236, align 8
  %1188 = getelementptr inbounds %struct.mz_zip_archive, ptr %1187, i32 0, i32 14
  %1189 = load ptr, ptr %1188, align 8
  %1190 = load i64, ptr %246, align 8
  %1191 = load ptr, ptr %252, align 8
  %1192 = load i32, ptr %239, align 4
  %1193 = zext i32 %1192 to i64
  %1194 = call i64 %1186(ptr noundef %1189, i64 noundef %1190, ptr noundef %1191, i64 noundef %1193)
  %1195 = load i32, ptr %239, align 4
  %1196 = zext i32 %1195 to i64
  %1197 = icmp ne i64 %1194, %1196
  br i1 %1197, label %1198, label %1214

1198:                                             ; preds = %1179
  %1199 = load ptr, ptr %236, align 8
  %1200 = getelementptr inbounds %struct.mz_zip_archive, ptr %1199, i32 0, i32 8
  %1201 = load ptr, ptr %1200, align 8
  %1202 = load ptr, ptr %236, align 8
  %1203 = getelementptr inbounds %struct.mz_zip_archive, ptr %1202, i32 0, i32 10
  %1204 = load ptr, ptr %1203, align 8
  %1205 = load ptr, ptr %252, align 8
  call void %1201(ptr noundef %1204, ptr noundef %1205)
  %1206 = load ptr, ptr %236, align 8
  store ptr %1206, ptr %207, align 8
  store i32 19, ptr %208, align 4
  %1207 = load ptr, ptr %207, align 8
  %1208 = icmp ne ptr %1207, null
  br i1 %1208, label %1209, label %1213

1209:                                             ; preds = %1198
  %1210 = load i32, ptr %208, align 4
  %1211 = load ptr, ptr %207, align 8
  %1212 = getelementptr inbounds %struct.mz_zip_archive, ptr %1211, i32 0, i32 5
  store i32 %1210, ptr %1212, align 4
  br label %1213

1213:                                             ; preds = %1198, %1209
  store i32 0, ptr %235, align 4
  br label %2607

1214:                                             ; preds = %1179
  %1215 = load i32, ptr %239, align 4
  %1216 = zext i32 %1215 to i64
  %1217 = load i64, ptr %246, align 8
  %1218 = add i64 %1217, %1216
  store i64 %1218, ptr %246, align 8
  %1219 = load i32, ptr %239, align 4
  %1220 = zext i32 %1219 to i64
  %1221 = load i64, ptr %243, align 8
  %1222 = sub i64 %1221, %1220
  store i64 %1222, ptr %243, align 8
  br label %1137, !llvm.loop !128

1223:                                             ; preds = %1137
  %1224 = load ptr, ptr %248, align 8
  %1225 = getelementptr inbounds i8, ptr %1224, i64 6
  %1226 = getelementptr inbounds i8, ptr %1225, i64 0
  %1227 = load i8, ptr %1226, align 1
  %1228 = zext i8 %1227 to i32
  %1229 = load ptr, ptr %248, align 8
  %1230 = getelementptr inbounds i8, ptr %1229, i64 6
  %1231 = getelementptr inbounds i8, ptr %1230, i64 1
  %1232 = load i8, ptr %1231, align 1
  %1233 = zext i8 %1232 to i32
  %1234 = shl i32 %1233, 8
  %1235 = or i32 %1228, %1234
  store i32 %1235, ptr %240, align 4
  %1236 = load i32, ptr %240, align 4
  %1237 = and i32 %1236, 8
  %1238 = icmp ne i32 %1237, 0
  br i1 %1238, label %1239, label %1629

1239:                                             ; preds = %1223
  %1240 = load ptr, ptr %237, align 8
  %1241 = getelementptr inbounds %struct.mz_zip_archive, ptr %1240, i32 0, i32 15
  %1242 = load ptr, ptr %1241, align 8
  %1243 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1242, i32 0, i32 4
  %1244 = load i32, ptr %1243, align 4
  %1245 = icmp ne i32 %1244, 0
  br i1 %1245, label %1249, label %1246

1246:                                             ; preds = %1239
  %1247 = load i32, ptr %262, align 4
  %1248 = icmp ne i32 %1247, 0
  br i1 %1248, label %1249, label %1305

1249:                                             ; preds = %1246, %1239
  %1250 = load ptr, ptr %237, align 8
  %1251 = getelementptr inbounds %struct.mz_zip_archive, ptr %1250, i32 0, i32 11
  %1252 = load ptr, ptr %1251, align 8
  %1253 = load ptr, ptr %237, align 8
  %1254 = getelementptr inbounds %struct.mz_zip_archive, ptr %1253, i32 0, i32 14
  %1255 = load ptr, ptr %1254, align 8
  %1256 = load i64, ptr %245, align 8
  %1257 = load ptr, ptr %252, align 8
  %1258 = call i64 %1252(ptr noundef %1255, i64 noundef %1256, ptr noundef %1257, i64 noundef 24)
  %1259 = icmp ne i64 %1258, 24
  br i1 %1259, label %1260, label %1276

1260:                                             ; preds = %1249
  %1261 = load ptr, ptr %236, align 8
  %1262 = getelementptr inbounds %struct.mz_zip_archive, ptr %1261, i32 0, i32 8
  %1263 = load ptr, ptr %1262, align 8
  %1264 = load ptr, ptr %236, align 8
  %1265 = getelementptr inbounds %struct.mz_zip_archive, ptr %1264, i32 0, i32 10
  %1266 = load ptr, ptr %1265, align 8
  %1267 = load ptr, ptr %252, align 8
  call void %1263(ptr noundef %1266, ptr noundef %1267)
  %1268 = load ptr, ptr %236, align 8
  store ptr %1268, ptr %209, align 8
  store i32 20, ptr %210, align 4
  %1269 = load ptr, ptr %209, align 8
  %1270 = icmp ne ptr %1269, null
  br i1 %1270, label %1271, label %1275

1271:                                             ; preds = %1260
  %1272 = load i32, ptr %210, align 4
  %1273 = load ptr, ptr %209, align 8
  %1274 = getelementptr inbounds %struct.mz_zip_archive, ptr %1273, i32 0, i32 5
  store i32 %1272, ptr %1274, align 4
  br label %1275

1275:                                             ; preds = %1260, %1271
  store i32 0, ptr %235, align 4
  br label %2607

1276:                                             ; preds = %1249
  %1277 = load ptr, ptr %252, align 8
  %1278 = getelementptr inbounds i8, ptr %1277, i64 0
  %1279 = load i8, ptr %1278, align 1
  %1280 = zext i8 %1279 to i32
  %1281 = load ptr, ptr %252, align 8
  %1282 = getelementptr inbounds i8, ptr %1281, i64 1
  %1283 = load i8, ptr %1282, align 1
  %1284 = zext i8 %1283 to i32
  %1285 = shl i32 %1284, 8
  %1286 = or i32 %1280, %1285
  %1287 = load ptr, ptr %252, align 8
  %1288 = getelementptr inbounds i8, ptr %1287, i64 2
  %1289 = load i8, ptr %1288, align 1
  %1290 = zext i8 %1289 to i32
  %1291 = shl i32 %1290, 16
  %1292 = or i32 %1286, %1291
  %1293 = load ptr, ptr %252, align 8
  %1294 = getelementptr inbounds i8, ptr %1293, i64 3
  %1295 = load i8, ptr %1294, align 1
  %1296 = zext i8 %1295 to i32
  %1297 = shl i32 %1296, 24
  %1298 = or i32 %1292, %1297
  %1299 = icmp eq i32 %1298, 134695760
  %1300 = zext i1 %1299 to i64
  %1301 = select i1 %1299, i32 6, i32 5
  %1302 = sext i32 %1301 to i64
  %1303 = mul i64 4, %1302
  %1304 = trunc i64 %1303 to i32
  store i32 %1304, ptr %239, align 4
  br label %1589

1305:                                             ; preds = %1246
  %1306 = load ptr, ptr %237, align 8
  %1307 = getelementptr inbounds %struct.mz_zip_archive, ptr %1306, i32 0, i32 11
  %1308 = load ptr, ptr %1307, align 8
  %1309 = load ptr, ptr %237, align 8
  %1310 = getelementptr inbounds %struct.mz_zip_archive, ptr %1309, i32 0, i32 14
  %1311 = load ptr, ptr %1310, align 8
  %1312 = load i64, ptr %245, align 8
  %1313 = load ptr, ptr %252, align 8
  %1314 = call i64 %1308(ptr noundef %1311, i64 noundef %1312, ptr noundef %1313, i64 noundef 16)
  %1315 = icmp ne i64 %1314, 16
  br i1 %1315, label %1316, label %1332

1316:                                             ; preds = %1305
  %1317 = load ptr, ptr %236, align 8
  %1318 = getelementptr inbounds %struct.mz_zip_archive, ptr %1317, i32 0, i32 8
  %1319 = load ptr, ptr %1318, align 8
  %1320 = load ptr, ptr %236, align 8
  %1321 = getelementptr inbounds %struct.mz_zip_archive, ptr %1320, i32 0, i32 10
  %1322 = load ptr, ptr %1321, align 8
  %1323 = load ptr, ptr %252, align 8
  call void %1319(ptr noundef %1322, ptr noundef %1323)
  %1324 = load ptr, ptr %236, align 8
  store ptr %1324, ptr %211, align 8
  store i32 20, ptr %212, align 4
  %1325 = load ptr, ptr %211, align 8
  %1326 = icmp ne ptr %1325, null
  br i1 %1326, label %1327, label %1331

1327:                                             ; preds = %1316
  %1328 = load i32, ptr %212, align 4
  %1329 = load ptr, ptr %211, align 8
  %1330 = getelementptr inbounds %struct.mz_zip_archive, ptr %1329, i32 0, i32 5
  store i32 %1328, ptr %1330, align 4
  br label %1331

1331:                                             ; preds = %1316, %1327
  store i32 0, ptr %235, align 4
  br label %2607

1332:                                             ; preds = %1305
  %1333 = load ptr, ptr %252, align 8
  %1334 = getelementptr inbounds i8, ptr %1333, i64 0
  %1335 = load i8, ptr %1334, align 1
  %1336 = zext i8 %1335 to i32
  %1337 = load ptr, ptr %252, align 8
  %1338 = getelementptr inbounds i8, ptr %1337, i64 1
  %1339 = load i8, ptr %1338, align 1
  %1340 = zext i8 %1339 to i32
  %1341 = shl i32 %1340, 8
  %1342 = or i32 %1336, %1341
  %1343 = load ptr, ptr %252, align 8
  %1344 = getelementptr inbounds i8, ptr %1343, i64 2
  %1345 = load i8, ptr %1344, align 1
  %1346 = zext i8 %1345 to i32
  %1347 = shl i32 %1346, 16
  %1348 = or i32 %1342, %1347
  %1349 = load ptr, ptr %252, align 8
  %1350 = getelementptr inbounds i8, ptr %1349, i64 3
  %1351 = load i8, ptr %1350, align 1
  %1352 = zext i8 %1351 to i32
  %1353 = shl i32 %1352, 24
  %1354 = or i32 %1348, %1353
  %1355 = icmp eq i32 %1354, 134695760
  %1356 = zext i1 %1355 to i32
  store i32 %1356, ptr %271, align 4
  %1357 = load ptr, ptr %236, align 8
  %1358 = getelementptr inbounds %struct.mz_zip_archive, ptr %1357, i32 0, i32 15
  %1359 = load ptr, ptr %1358, align 8
  %1360 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1359, i32 0, i32 4
  %1361 = load i32, ptr %1360, align 4
  %1362 = icmp ne i32 %1361, 0
  br i1 %1362, label %1363, label %1580

1363:                                             ; preds = %1332
  %1364 = load ptr, ptr %252, align 8
  %1365 = load i32, ptr %271, align 4
  %1366 = icmp ne i32 %1365, 0
  %1367 = zext i1 %1366 to i64
  %1368 = select i1 %1366, i64 4, i64 0
  %1369 = getelementptr inbounds i8, ptr %1364, i64 %1368
  store ptr %1369, ptr %272, align 8
  %1370 = load ptr, ptr %272, align 8
  %1371 = getelementptr inbounds i8, ptr %1370, i64 0
  %1372 = load i8, ptr %1371, align 1
  %1373 = zext i8 %1372 to i32
  %1374 = load ptr, ptr %272, align 8
  %1375 = getelementptr inbounds i8, ptr %1374, i64 1
  %1376 = load i8, ptr %1375, align 1
  %1377 = zext i8 %1376 to i32
  %1378 = shl i32 %1377, 8
  %1379 = or i32 %1373, %1378
  %1380 = load ptr, ptr %272, align 8
  %1381 = getelementptr inbounds i8, ptr %1380, i64 2
  %1382 = load i8, ptr %1381, align 1
  %1383 = zext i8 %1382 to i32
  %1384 = shl i32 %1383, 16
  %1385 = or i32 %1379, %1384
  %1386 = load ptr, ptr %272, align 8
  %1387 = getelementptr inbounds i8, ptr %1386, i64 3
  %1388 = load i8, ptr %1387, align 1
  %1389 = zext i8 %1388 to i32
  %1390 = shl i32 %1389, 24
  %1391 = or i32 %1385, %1390
  store i32 %1391, ptr %273, align 4
  %1392 = load ptr, ptr %272, align 8
  %1393 = getelementptr inbounds i8, ptr %1392, i64 4
  %1394 = getelementptr inbounds i8, ptr %1393, i64 0
  %1395 = load i8, ptr %1394, align 1
  %1396 = zext i8 %1395 to i32
  %1397 = load ptr, ptr %272, align 8
  %1398 = getelementptr inbounds i8, ptr %1397, i64 4
  %1399 = getelementptr inbounds i8, ptr %1398, i64 1
  %1400 = load i8, ptr %1399, align 1
  %1401 = zext i8 %1400 to i32
  %1402 = shl i32 %1401, 8
  %1403 = or i32 %1396, %1402
  %1404 = load ptr, ptr %272, align 8
  %1405 = getelementptr inbounds i8, ptr %1404, i64 4
  %1406 = getelementptr inbounds i8, ptr %1405, i64 2
  %1407 = load i8, ptr %1406, align 1
  %1408 = zext i8 %1407 to i32
  %1409 = shl i32 %1408, 16
  %1410 = or i32 %1403, %1409
  %1411 = load ptr, ptr %272, align 8
  %1412 = getelementptr inbounds i8, ptr %1411, i64 4
  %1413 = getelementptr inbounds i8, ptr %1412, i64 3
  %1414 = load i8, ptr %1413, align 1
  %1415 = zext i8 %1414 to i32
  %1416 = shl i32 %1415, 24
  %1417 = or i32 %1410, %1416
  %1418 = zext i32 %1417 to i64
  store i64 %1418, ptr %274, align 8
  %1419 = load ptr, ptr %272, align 8
  %1420 = getelementptr inbounds i8, ptr %1419, i64 8
  %1421 = getelementptr inbounds i8, ptr %1420, i64 0
  %1422 = load i8, ptr %1421, align 1
  %1423 = zext i8 %1422 to i32
  %1424 = load ptr, ptr %272, align 8
  %1425 = getelementptr inbounds i8, ptr %1424, i64 8
  %1426 = getelementptr inbounds i8, ptr %1425, i64 1
  %1427 = load i8, ptr %1426, align 1
  %1428 = zext i8 %1427 to i32
  %1429 = shl i32 %1428, 8
  %1430 = or i32 %1423, %1429
  %1431 = load ptr, ptr %272, align 8
  %1432 = getelementptr inbounds i8, ptr %1431, i64 8
  %1433 = getelementptr inbounds i8, ptr %1432, i64 2
  %1434 = load i8, ptr %1433, align 1
  %1435 = zext i8 %1434 to i32
  %1436 = shl i32 %1435, 16
  %1437 = or i32 %1430, %1436
  %1438 = load ptr, ptr %272, align 8
  %1439 = getelementptr inbounds i8, ptr %1438, i64 8
  %1440 = getelementptr inbounds i8, ptr %1439, i64 3
  %1441 = load i8, ptr %1440, align 1
  %1442 = zext i8 %1441 to i32
  %1443 = shl i32 %1442, 24
  %1444 = or i32 %1437, %1443
  %1445 = zext i32 %1444 to i64
  store i64 %1445, ptr %275, align 8
  %1446 = load ptr, ptr %252, align 8
  store ptr %1446, ptr %95, align 8
  store i32 134695760, ptr %96, align 4
  %1447 = load i32, ptr %96, align 4
  %1448 = trunc i32 %1447 to i8
  %1449 = load ptr, ptr %95, align 8
  store i8 %1448, ptr %1449, align 1
  %1450 = load i32, ptr %96, align 4
  %1451 = lshr i32 %1450, 8
  %1452 = trunc i32 %1451 to i8
  %1453 = load ptr, ptr %95, align 8
  %1454 = getelementptr inbounds i8, ptr %1453, i64 1
  store i8 %1452, ptr %1454, align 1
  %1455 = load i32, ptr %96, align 4
  %1456 = lshr i32 %1455, 16
  %1457 = trunc i32 %1456 to i8
  %1458 = load ptr, ptr %95, align 8
  %1459 = getelementptr inbounds i8, ptr %1458, i64 2
  store i8 %1457, ptr %1459, align 1
  %1460 = load i32, ptr %96, align 4
  %1461 = lshr i32 %1460, 24
  %1462 = trunc i32 %1461 to i8
  %1463 = load ptr, ptr %95, align 8
  %1464 = getelementptr inbounds i8, ptr %1463, i64 3
  store i8 %1462, ptr %1464, align 1
  %1465 = load ptr, ptr %252, align 8
  %1466 = getelementptr inbounds i8, ptr %1465, i64 4
  %1467 = load i32, ptr %273, align 4
  store ptr %1466, ptr %97, align 8
  store i32 %1467, ptr %98, align 4
  %1468 = load i32, ptr %98, align 4
  %1469 = trunc i32 %1468 to i8
  %1470 = load ptr, ptr %97, align 8
  store i8 %1469, ptr %1470, align 1
  %1471 = load i32, ptr %98, align 4
  %1472 = lshr i32 %1471, 8
  %1473 = trunc i32 %1472 to i8
  %1474 = load ptr, ptr %97, align 8
  %1475 = getelementptr inbounds i8, ptr %1474, i64 1
  store i8 %1473, ptr %1475, align 1
  %1476 = load i32, ptr %98, align 4
  %1477 = lshr i32 %1476, 16
  %1478 = trunc i32 %1477 to i8
  %1479 = load ptr, ptr %97, align 8
  %1480 = getelementptr inbounds i8, ptr %1479, i64 2
  store i8 %1478, ptr %1480, align 1
  %1481 = load i32, ptr %98, align 4
  %1482 = lshr i32 %1481, 24
  %1483 = trunc i32 %1482 to i8
  %1484 = load ptr, ptr %97, align 8
  %1485 = getelementptr inbounds i8, ptr %1484, i64 3
  store i8 %1483, ptr %1485, align 1
  %1486 = load ptr, ptr %252, align 8
  %1487 = getelementptr inbounds i8, ptr %1486, i64 8
  %1488 = load i64, ptr %274, align 8
  store ptr %1487, ptr %87, align 8
  store i64 %1488, ptr %88, align 8
  %1489 = load ptr, ptr %87, align 8
  %1490 = load i64, ptr %88, align 8
  %1491 = trunc i64 %1490 to i32
  store ptr %1489, ptr %83, align 8
  store i32 %1491, ptr %84, align 4
  %1492 = load i32, ptr %84, align 4
  %1493 = trunc i32 %1492 to i8
  %1494 = load ptr, ptr %83, align 8
  store i8 %1493, ptr %1494, align 1
  %1495 = load i32, ptr %84, align 4
  %1496 = lshr i32 %1495, 8
  %1497 = trunc i32 %1496 to i8
  %1498 = load ptr, ptr %83, align 8
  %1499 = getelementptr inbounds i8, ptr %1498, i64 1
  store i8 %1497, ptr %1499, align 1
  %1500 = load i32, ptr %84, align 4
  %1501 = lshr i32 %1500, 16
  %1502 = trunc i32 %1501 to i8
  %1503 = load ptr, ptr %83, align 8
  %1504 = getelementptr inbounds i8, ptr %1503, i64 2
  store i8 %1502, ptr %1504, align 1
  %1505 = load i32, ptr %84, align 4
  %1506 = lshr i32 %1505, 24
  %1507 = trunc i32 %1506 to i8
  %1508 = load ptr, ptr %83, align 8
  %1509 = getelementptr inbounds i8, ptr %1508, i64 3
  store i8 %1507, ptr %1509, align 1
  %1510 = load ptr, ptr %87, align 8
  %1511 = getelementptr inbounds i8, ptr %1510, i64 4
  %1512 = load i64, ptr %88, align 8
  %1513 = lshr i64 %1512, 32
  %1514 = trunc i64 %1513 to i32
  store ptr %1511, ptr %85, align 8
  store i32 %1514, ptr %86, align 4
  %1515 = load i32, ptr %86, align 4
  %1516 = trunc i32 %1515 to i8
  %1517 = load ptr, ptr %85, align 8
  store i8 %1516, ptr %1517, align 1
  %1518 = load i32, ptr %86, align 4
  %1519 = lshr i32 %1518, 8
  %1520 = trunc i32 %1519 to i8
  %1521 = load ptr, ptr %85, align 8
  %1522 = getelementptr inbounds i8, ptr %1521, i64 1
  store i8 %1520, ptr %1522, align 1
  %1523 = load i32, ptr %86, align 4
  %1524 = lshr i32 %1523, 16
  %1525 = trunc i32 %1524 to i8
  %1526 = load ptr, ptr %85, align 8
  %1527 = getelementptr inbounds i8, ptr %1526, i64 2
  store i8 %1525, ptr %1527, align 1
  %1528 = load i32, ptr %86, align 4
  %1529 = lshr i32 %1528, 24
  %1530 = trunc i32 %1529 to i8
  %1531 = load ptr, ptr %85, align 8
  %1532 = getelementptr inbounds i8, ptr %1531, i64 3
  store i8 %1530, ptr %1532, align 1
  %1533 = load ptr, ptr %252, align 8
  %1534 = getelementptr inbounds i8, ptr %1533, i64 16
  %1535 = load i64, ptr %275, align 8
  store ptr %1534, ptr %93, align 8
  store i64 %1535, ptr %94, align 8
  %1536 = load ptr, ptr %93, align 8
  %1537 = load i64, ptr %94, align 8
  %1538 = trunc i64 %1537 to i32
  store ptr %1536, ptr %89, align 8
  store i32 %1538, ptr %90, align 4
  %1539 = load i32, ptr %90, align 4
  %1540 = trunc i32 %1539 to i8
  %1541 = load ptr, ptr %89, align 8
  store i8 %1540, ptr %1541, align 1
  %1542 = load i32, ptr %90, align 4
  %1543 = lshr i32 %1542, 8
  %1544 = trunc i32 %1543 to i8
  %1545 = load ptr, ptr %89, align 8
  %1546 = getelementptr inbounds i8, ptr %1545, i64 1
  store i8 %1544, ptr %1546, align 1
  %1547 = load i32, ptr %90, align 4
  %1548 = lshr i32 %1547, 16
  %1549 = trunc i32 %1548 to i8
  %1550 = load ptr, ptr %89, align 8
  %1551 = getelementptr inbounds i8, ptr %1550, i64 2
  store i8 %1549, ptr %1551, align 1
  %1552 = load i32, ptr %90, align 4
  %1553 = lshr i32 %1552, 24
  %1554 = trunc i32 %1553 to i8
  %1555 = load ptr, ptr %89, align 8
  %1556 = getelementptr inbounds i8, ptr %1555, i64 3
  store i8 %1554, ptr %1556, align 1
  %1557 = load ptr, ptr %93, align 8
  %1558 = getelementptr inbounds i8, ptr %1557, i64 4
  %1559 = load i64, ptr %94, align 8
  %1560 = lshr i64 %1559, 32
  %1561 = trunc i64 %1560 to i32
  store ptr %1558, ptr %91, align 8
  store i32 %1561, ptr %92, align 4
  %1562 = load i32, ptr %92, align 4
  %1563 = trunc i32 %1562 to i8
  %1564 = load ptr, ptr %91, align 8
  store i8 %1563, ptr %1564, align 1
  %1565 = load i32, ptr %92, align 4
  %1566 = lshr i32 %1565, 8
  %1567 = trunc i32 %1566 to i8
  %1568 = load ptr, ptr %91, align 8
  %1569 = getelementptr inbounds i8, ptr %1568, i64 1
  store i8 %1567, ptr %1569, align 1
  %1570 = load i32, ptr %92, align 4
  %1571 = lshr i32 %1570, 16
  %1572 = trunc i32 %1571 to i8
  %1573 = load ptr, ptr %91, align 8
  %1574 = getelementptr inbounds i8, ptr %1573, i64 2
  store i8 %1572, ptr %1574, align 1
  %1575 = load i32, ptr %92, align 4
  %1576 = lshr i32 %1575, 24
  %1577 = trunc i32 %1576 to i8
  %1578 = load ptr, ptr %91, align 8
  %1579 = getelementptr inbounds i8, ptr %1578, i64 3
  store i8 %1577, ptr %1579, align 1
  store i32 24, ptr %239, align 4
  br label %1588

1580:                                             ; preds = %1332
  %1581 = load i32, ptr %271, align 4
  %1582 = icmp ne i32 %1581, 0
  %1583 = zext i1 %1582 to i64
  %1584 = select i1 %1582, i32 4, i32 3
  %1585 = sext i32 %1584 to i64
  %1586 = mul i64 4, %1585
  %1587 = trunc i64 %1586 to i32
  store i32 %1587, ptr %239, align 4
  br label %1588

1588:                                             ; preds = %1580, %1363
  br label %1589

1589:                                             ; preds = %1588, %1276
  %1590 = load ptr, ptr %236, align 8
  %1591 = getelementptr inbounds %struct.mz_zip_archive, ptr %1590, i32 0, i32 12
  %1592 = load ptr, ptr %1591, align 8
  %1593 = load ptr, ptr %236, align 8
  %1594 = getelementptr inbounds %struct.mz_zip_archive, ptr %1593, i32 0, i32 14
  %1595 = load ptr, ptr %1594, align 8
  %1596 = load i64, ptr %246, align 8
  %1597 = load ptr, ptr %252, align 8
  %1598 = load i32, ptr %239, align 4
  %1599 = zext i32 %1598 to i64
  %1600 = call i64 %1592(ptr noundef %1595, i64 noundef %1596, ptr noundef %1597, i64 noundef %1599)
  %1601 = load i32, ptr %239, align 4
  %1602 = zext i32 %1601 to i64
  %1603 = icmp ne i64 %1600, %1602
  br i1 %1603, label %1604, label %1620

1604:                                             ; preds = %1589
  %1605 = load ptr, ptr %236, align 8
  %1606 = getelementptr inbounds %struct.mz_zip_archive, ptr %1605, i32 0, i32 8
  %1607 = load ptr, ptr %1606, align 8
  %1608 = load ptr, ptr %236, align 8
  %1609 = getelementptr inbounds %struct.mz_zip_archive, ptr %1608, i32 0, i32 10
  %1610 = load ptr, ptr %1609, align 8
  %1611 = load ptr, ptr %252, align 8
  call void %1607(ptr noundef %1610, ptr noundef %1611)
  %1612 = load ptr, ptr %236, align 8
  store ptr %1612, ptr %213, align 8
  store i32 19, ptr %214, align 4
  %1613 = load ptr, ptr %213, align 8
  %1614 = icmp ne ptr %1613, null
  br i1 %1614, label %1615, label %1619

1615:                                             ; preds = %1604
  %1616 = load i32, ptr %214, align 4
  %1617 = load ptr, ptr %213, align 8
  %1618 = getelementptr inbounds %struct.mz_zip_archive, ptr %1617, i32 0, i32 5
  store i32 %1616, ptr %1618, align 4
  br label %1619

1619:                                             ; preds = %1604, %1615
  store i32 0, ptr %235, align 4
  br label %2607

1620:                                             ; preds = %1589
  %1621 = load i32, ptr %239, align 4
  %1622 = zext i32 %1621 to i64
  %1623 = load i64, ptr %245, align 8
  %1624 = add i64 %1623, %1622
  store i64 %1624, ptr %245, align 8
  %1625 = load i32, ptr %239, align 4
  %1626 = zext i32 %1625 to i64
  %1627 = load i64, ptr %246, align 8
  %1628 = add i64 %1627, %1626
  store i64 %1628, ptr %246, align 8
  br label %1629

1629:                                             ; preds = %1620, %1223
  %1630 = load ptr, ptr %236, align 8
  %1631 = getelementptr inbounds %struct.mz_zip_archive, ptr %1630, i32 0, i32 8
  %1632 = load ptr, ptr %1631, align 8
  %1633 = load ptr, ptr %236, align 8
  %1634 = getelementptr inbounds %struct.mz_zip_archive, ptr %1633, i32 0, i32 10
  %1635 = load ptr, ptr %1634, align 8
  %1636 = load ptr, ptr %252, align 8
  call void %1632(ptr noundef %1635, ptr noundef %1636)
  %1637 = load ptr, ptr %251, align 8
  %1638 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1637, i32 0, i32 0
  %1639 = getelementptr inbounds %struct.mz_zip_array, ptr %1638, i32 0, i32 1
  %1640 = load i64, ptr %1639, align 8
  store i64 %1640, ptr %250, align 8
  %1641 = getelementptr inbounds [46 x i8], ptr %249, i64 0, i64 0
  %1642 = load ptr, ptr %253, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1641, ptr align 1 %1642, i64 46, i1 false)
  %1643 = load ptr, ptr %251, align 8
  %1644 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1643, i32 0, i32 4
  %1645 = load i32, ptr %1644, align 4
  %1646 = icmp ne i32 %1645, 0
  br i1 %1646, label %1647, label %2224

1647:                                             ; preds = %1629
  %1648 = load ptr, ptr %253, align 8
  %1649 = getelementptr inbounds i8, ptr %1648, i64 46
  %1650 = load i32, ptr %255, align 4
  %1651 = zext i32 %1650 to i64
  %1652 = getelementptr inbounds i8, ptr %1649, i64 %1651
  store ptr %1652, ptr %276, align 8
  store ptr %277, ptr %166, align 8
  store i32 1, ptr %167, align 4
  %1653 = load ptr, ptr %166, align 8
  %1654 = load ptr, ptr %166, align 8
  %1655 = call i64 @llvm.objectsize.i64.p0(ptr %1654, i1 false, i1 true, i1 false)
  %1656 = call ptr @__memset_chk(ptr noundef %1653, i32 noundef 0, i64 noundef 32, i64 noundef %1655) #11
  %1657 = load i32, ptr %167, align 4
  %1658 = load ptr, ptr %166, align 8
  %1659 = getelementptr inbounds %struct.mz_zip_array, ptr %1658, i32 0, i32 3
  store i32 %1657, ptr %1659, align 8
  %1660 = getelementptr inbounds [46 x i8], ptr %249, i64 0, i64 0
  %1661 = getelementptr inbounds i8, ptr %1660, i64 20
  store ptr %1661, ptr %99, align 8
  store i32 -1, ptr %100, align 4
  %1662 = load i32, ptr %100, align 4
  %1663 = trunc i32 %1662 to i8
  %1664 = load ptr, ptr %99, align 8
  store i8 %1663, ptr %1664, align 1
  %1665 = load i32, ptr %100, align 4
  %1666 = lshr i32 %1665, 8
  %1667 = trunc i32 %1666 to i8
  %1668 = load ptr, ptr %99, align 8
  %1669 = getelementptr inbounds i8, ptr %1668, i64 1
  store i8 %1667, ptr %1669, align 1
  %1670 = load i32, ptr %100, align 4
  %1671 = lshr i32 %1670, 16
  %1672 = trunc i32 %1671 to i8
  %1673 = load ptr, ptr %99, align 8
  %1674 = getelementptr inbounds i8, ptr %1673, i64 2
  store i8 %1672, ptr %1674, align 1
  %1675 = load i32, ptr %100, align 4
  %1676 = lshr i32 %1675, 24
  %1677 = trunc i32 %1676 to i8
  %1678 = load ptr, ptr %99, align 8
  %1679 = getelementptr inbounds i8, ptr %1678, i64 3
  store i8 %1677, ptr %1679, align 1
  %1680 = getelementptr inbounds [46 x i8], ptr %249, i64 0, i64 0
  %1681 = getelementptr inbounds i8, ptr %1680, i64 24
  store ptr %1681, ptr %101, align 8
  store i32 -1, ptr %102, align 4
  %1682 = load i32, ptr %102, align 4
  %1683 = trunc i32 %1682 to i8
  %1684 = load ptr, ptr %101, align 8
  store i8 %1683, ptr %1684, align 1
  %1685 = load i32, ptr %102, align 4
  %1686 = lshr i32 %1685, 8
  %1687 = trunc i32 %1686 to i8
  %1688 = load ptr, ptr %101, align 8
  %1689 = getelementptr inbounds i8, ptr %1688, i64 1
  store i8 %1687, ptr %1689, align 1
  %1690 = load i32, ptr %102, align 4
  %1691 = lshr i32 %1690, 16
  %1692 = trunc i32 %1691 to i8
  %1693 = load ptr, ptr %101, align 8
  %1694 = getelementptr inbounds i8, ptr %1693, i64 2
  store i8 %1692, ptr %1694, align 1
  %1695 = load i32, ptr %102, align 4
  %1696 = lshr i32 %1695, 24
  %1697 = trunc i32 %1696 to i8
  %1698 = load ptr, ptr %101, align 8
  %1699 = getelementptr inbounds i8, ptr %1698, i64 3
  store i8 %1697, ptr %1699, align 1
  %1700 = getelementptr inbounds [46 x i8], ptr %249, i64 0, i64 0
  %1701 = getelementptr inbounds i8, ptr %1700, i64 42
  store ptr %1701, ptr %103, align 8
  store i32 -1, ptr %104, align 4
  %1702 = load i32, ptr %104, align 4
  %1703 = trunc i32 %1702 to i8
  %1704 = load ptr, ptr %103, align 8
  store i8 %1703, ptr %1704, align 1
  %1705 = load i32, ptr %104, align 4
  %1706 = lshr i32 %1705, 8
  %1707 = trunc i32 %1706 to i8
  %1708 = load ptr, ptr %103, align 8
  %1709 = getelementptr inbounds i8, ptr %1708, i64 1
  store i8 %1707, ptr %1709, align 1
  %1710 = load i32, ptr %104, align 4
  %1711 = lshr i32 %1710, 16
  %1712 = trunc i32 %1711 to i8
  %1713 = load ptr, ptr %103, align 8
  %1714 = getelementptr inbounds i8, ptr %1713, i64 2
  store i8 %1712, ptr %1714, align 1
  %1715 = load i32, ptr %104, align 4
  %1716 = lshr i32 %1715, 24
  %1717 = trunc i32 %1716 to i8
  %1718 = load ptr, ptr %103, align 8
  %1719 = getelementptr inbounds i8, ptr %1718, i64 3
  store i8 %1717, ptr %1719, align 1
  %1720 = load ptr, ptr %236, align 8
  %1721 = load ptr, ptr %276, align 8
  %1722 = load i32, ptr %257, align 4
  %1723 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %254, i32 0, i32 7
  %1724 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %254, i32 0, i32 8
  %1725 = call i32 @mz_zip_writer_update_zip64_extension_block(ptr noundef %277, ptr noundef %1720, ptr noundef %1721, i32 noundef %1722, ptr noundef %1723, ptr noundef %1724, ptr noundef %244, ptr noundef null)
  %1726 = icmp ne i32 %1725, 0
  br i1 %1726, label %1741, label %1727

1727:                                             ; preds = %1647
  %1728 = load ptr, ptr %236, align 8
  store ptr %1728, ptr %117, align 8
  store ptr %277, ptr %118, align 8
  %1729 = load ptr, ptr %117, align 8
  %1730 = getelementptr inbounds %struct.mz_zip_archive, ptr %1729, i32 0, i32 8
  %1731 = load ptr, ptr %1730, align 8
  %1732 = load ptr, ptr %117, align 8
  %1733 = getelementptr inbounds %struct.mz_zip_archive, ptr %1732, i32 0, i32 10
  %1734 = load ptr, ptr %1733, align 8
  %1735 = load ptr, ptr %118, align 8
  %1736 = load ptr, ptr %1735, align 8
  call void %1731(ptr noundef %1734, ptr noundef %1736) #11
  %1737 = load ptr, ptr %118, align 8
  %1738 = load ptr, ptr %118, align 8
  %1739 = call i64 @llvm.objectsize.i64.p0(ptr %1738, i1 false, i1 true, i1 false)
  %1740 = call ptr @__memset_chk(ptr noundef %1737, i32 noundef 0, i64 noundef 32, i64 noundef %1739) #11
  store i32 0, ptr %235, align 4
  br label %2607

1741:                                             ; preds = %1647
  %1742 = getelementptr inbounds [46 x i8], ptr %249, i64 0, i64 0
  %1743 = getelementptr inbounds i8, ptr %1742, i64 30
  %1744 = getelementptr inbounds %struct.mz_zip_array, ptr %277, i32 0, i32 1
  %1745 = load i64, ptr %1744, align 8
  %1746 = trunc i64 %1745 to i16
  store ptr %1743, ptr %81, align 8
  store i16 %1746, ptr %82, align 2
  %1747 = load i16, ptr %82, align 2
  %1748 = trunc i16 %1747 to i8
  %1749 = load ptr, ptr %81, align 8
  store i8 %1748, ptr %1749, align 1
  %1750 = load i16, ptr %82, align 2
  %1751 = zext i16 %1750 to i32
  %1752 = ashr i32 %1751, 8
  %1753 = trunc i32 %1752 to i8
  %1754 = load ptr, ptr %81, align 8
  %1755 = getelementptr inbounds i8, ptr %1754, i64 1
  store i8 %1753, ptr %1755, align 1
  %1756 = load ptr, ptr %236, align 8
  %1757 = load ptr, ptr %251, align 8
  %1758 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1757, i32 0, i32 0
  %1759 = getelementptr inbounds [46 x i8], ptr %249, i64 0, i64 0
  store ptr %1756, ptr %10, align 8
  store ptr %1758, ptr %11, align 8
  store ptr %1759, ptr %12, align 8
  store i64 46, ptr %13, align 8
  %1760 = load ptr, ptr %11, align 8
  %1761 = getelementptr inbounds %struct.mz_zip_array, ptr %1760, i32 0, i32 1
  %1762 = load i64, ptr %1761, align 8
  store i64 %1762, ptr %14, align 8
  %1763 = load ptr, ptr %10, align 8
  %1764 = load ptr, ptr %11, align 8
  %1765 = load i64, ptr %14, align 8
  %1766 = load i64, ptr %13, align 8
  %1767 = add i64 %1765, %1766
  store ptr %1763, ptr %5, align 8
  store ptr %1764, ptr %6, align 8
  store i64 %1767, ptr %7, align 8
  store i32 1, ptr %8, align 4
  %1768 = load i64, ptr %7, align 8
  %1769 = load ptr, ptr %6, align 8
  %1770 = getelementptr inbounds %struct.mz_zip_array, ptr %1769, i32 0, i32 2
  %1771 = load i64, ptr %1770, align 8
  %1772 = icmp ugt i64 %1768, %1771
  br i1 %1772, label %1773, label %1782

1773:                                             ; preds = %1741
  %1774 = load ptr, ptr %5, align 8
  %1775 = load ptr, ptr %6, align 8
  %1776 = load i64, ptr %7, align 8
  %1777 = load i32, ptr %8, align 4
  %1778 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %1774, ptr noundef %1775, i64 noundef %1776, i32 noundef %1777)
  %1779 = icmp ne i32 %1778, 0
  br i1 %1779, label %1781, label %1780

1780:                                             ; preds = %1773
  store i32 0, ptr %4, align 4
  br label %1786

1781:                                             ; preds = %1773
  br label %1782

1782:                                             ; preds = %1781, %1741
  %1783 = load i64, ptr %7, align 8
  %1784 = load ptr, ptr %6, align 8
  %1785 = getelementptr inbounds %struct.mz_zip_array, ptr %1784, i32 0, i32 1
  store i64 %1783, ptr %1785, align 8
  store i32 1, ptr %4, align 4
  br label %1786

1786:                                             ; preds = %1782, %1780
  %1787 = load i32, ptr %4, align 4
  %1788 = icmp ne i32 %1787, 0
  br i1 %1788, label %1790, label %1789

1789:                                             ; preds = %1786
  store i32 0, ptr %9, align 4
  br label %1822

1790:                                             ; preds = %1786
  %1791 = load i64, ptr %13, align 8
  %1792 = icmp ugt i64 %1791, 0
  br i1 %1792, label %1793, label %1821

1793:                                             ; preds = %1790
  %1794 = load ptr, ptr %11, align 8
  %1795 = load ptr, ptr %1794, align 8
  %1796 = load i64, ptr %14, align 8
  %1797 = load ptr, ptr %11, align 8
  %1798 = getelementptr inbounds %struct.mz_zip_array, ptr %1797, i32 0, i32 3
  %1799 = load i32, ptr %1798, align 8
  %1800 = zext i32 %1799 to i64
  %1801 = mul i64 %1796, %1800
  %1802 = getelementptr inbounds i8, ptr %1795, i64 %1801
  %1803 = load ptr, ptr %12, align 8
  %1804 = load i64, ptr %13, align 8
  %1805 = load ptr, ptr %11, align 8
  %1806 = getelementptr inbounds %struct.mz_zip_array, ptr %1805, i32 0, i32 3
  %1807 = load i32, ptr %1806, align 8
  %1808 = zext i32 %1807 to i64
  %1809 = mul i64 %1804, %1808
  %1810 = load ptr, ptr %11, align 8
  %1811 = load ptr, ptr %1810, align 8
  %1812 = load i64, ptr %14, align 8
  %1813 = load ptr, ptr %11, align 8
  %1814 = getelementptr inbounds %struct.mz_zip_array, ptr %1813, i32 0, i32 3
  %1815 = load i32, ptr %1814, align 8
  %1816 = zext i32 %1815 to i64
  %1817 = mul i64 %1812, %1816
  %1818 = getelementptr inbounds i8, ptr %1811, i64 %1817
  %1819 = call i64 @llvm.objectsize.i64.p0(ptr %1818, i1 false, i1 true, i1 false)
  %1820 = call ptr @__memcpy_chk(ptr noundef %1802, ptr noundef %1803, i64 noundef %1809, i64 noundef %1819) #11
  br label %1821

1821:                                             ; preds = %1793, %1790
  store i32 1, ptr %9, align 4
  br label %1822

1822:                                             ; preds = %1789, %1821
  %1823 = load i32, ptr %9, align 4
  %1824 = icmp ne i32 %1823, 0
  br i1 %1824, label %1847, label %1825

1825:                                             ; preds = %1822
  %1826 = load ptr, ptr %236, align 8
  store ptr %1826, ptr %119, align 8
  store ptr %277, ptr %120, align 8
  %1827 = load ptr, ptr %119, align 8
  %1828 = getelementptr inbounds %struct.mz_zip_archive, ptr %1827, i32 0, i32 8
  %1829 = load ptr, ptr %1828, align 8
  %1830 = load ptr, ptr %119, align 8
  %1831 = getelementptr inbounds %struct.mz_zip_archive, ptr %1830, i32 0, i32 10
  %1832 = load ptr, ptr %1831, align 8
  %1833 = load ptr, ptr %120, align 8
  %1834 = load ptr, ptr %1833, align 8
  call void %1829(ptr noundef %1832, ptr noundef %1834) #11
  %1835 = load ptr, ptr %120, align 8
  %1836 = load ptr, ptr %120, align 8
  %1837 = call i64 @llvm.objectsize.i64.p0(ptr %1836, i1 false, i1 true, i1 false)
  %1838 = call ptr @__memset_chk(ptr noundef %1835, i32 noundef 0, i64 noundef 32, i64 noundef %1837) #11
  %1839 = load ptr, ptr %236, align 8
  store ptr %1839, ptr %215, align 8
  store i32 16, ptr %216, align 4
  %1840 = load ptr, ptr %215, align 8
  %1841 = icmp ne ptr %1840, null
  br i1 %1841, label %1842, label %1846

1842:                                             ; preds = %1825
  %1843 = load i32, ptr %216, align 4
  %1844 = load ptr, ptr %215, align 8
  %1845 = getelementptr inbounds %struct.mz_zip_archive, ptr %1844, i32 0, i32 5
  store i32 %1843, ptr %1845, align 4
  br label %1846

1846:                                             ; preds = %1825, %1842
  store i32 0, ptr %235, align 4
  br label %2607

1847:                                             ; preds = %1822
  %1848 = load ptr, ptr %236, align 8
  %1849 = load ptr, ptr %251, align 8
  %1850 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1849, i32 0, i32 0
  %1851 = load ptr, ptr %253, align 8
  %1852 = getelementptr inbounds i8, ptr %1851, i64 46
  %1853 = load i32, ptr %255, align 4
  %1854 = zext i32 %1853 to i64
  store ptr %1848, ptr %21, align 8
  store ptr %1850, ptr %22, align 8
  store ptr %1852, ptr %23, align 8
  store i64 %1854, ptr %24, align 8
  %1855 = load ptr, ptr %22, align 8
  %1856 = getelementptr inbounds %struct.mz_zip_array, ptr %1855, i32 0, i32 1
  %1857 = load i64, ptr %1856, align 8
  store i64 %1857, ptr %25, align 8
  %1858 = load ptr, ptr %21, align 8
  %1859 = load ptr, ptr %22, align 8
  %1860 = load i64, ptr %25, align 8
  %1861 = load i64, ptr %24, align 8
  %1862 = add i64 %1860, %1861
  store ptr %1858, ptr %16, align 8
  store ptr %1859, ptr %17, align 8
  store i64 %1862, ptr %18, align 8
  store i32 1, ptr %19, align 4
  %1863 = load i64, ptr %18, align 8
  %1864 = load ptr, ptr %17, align 8
  %1865 = getelementptr inbounds %struct.mz_zip_array, ptr %1864, i32 0, i32 2
  %1866 = load i64, ptr %1865, align 8
  %1867 = icmp ugt i64 %1863, %1866
  br i1 %1867, label %1868, label %1877

1868:                                             ; preds = %1847
  %1869 = load ptr, ptr %16, align 8
  %1870 = load ptr, ptr %17, align 8
  %1871 = load i64, ptr %18, align 8
  %1872 = load i32, ptr %19, align 4
  %1873 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %1869, ptr noundef %1870, i64 noundef %1871, i32 noundef %1872)
  %1874 = icmp ne i32 %1873, 0
  br i1 %1874, label %1876, label %1875

1875:                                             ; preds = %1868
  store i32 0, ptr %15, align 4
  br label %1881

1876:                                             ; preds = %1868
  br label %1877

1877:                                             ; preds = %1876, %1847
  %1878 = load i64, ptr %18, align 8
  %1879 = load ptr, ptr %17, align 8
  %1880 = getelementptr inbounds %struct.mz_zip_array, ptr %1879, i32 0, i32 1
  store i64 %1878, ptr %1880, align 8
  store i32 1, ptr %15, align 4
  br label %1881

1881:                                             ; preds = %1877, %1875
  %1882 = load i32, ptr %15, align 4
  %1883 = icmp ne i32 %1882, 0
  br i1 %1883, label %1885, label %1884

1884:                                             ; preds = %1881
  store i32 0, ptr %20, align 4
  br label %1917

1885:                                             ; preds = %1881
  %1886 = load i64, ptr %24, align 8
  %1887 = icmp ugt i64 %1886, 0
  br i1 %1887, label %1888, label %1916

1888:                                             ; preds = %1885
  %1889 = load ptr, ptr %22, align 8
  %1890 = load ptr, ptr %1889, align 8
  %1891 = load i64, ptr %25, align 8
  %1892 = load ptr, ptr %22, align 8
  %1893 = getelementptr inbounds %struct.mz_zip_array, ptr %1892, i32 0, i32 3
  %1894 = load i32, ptr %1893, align 8
  %1895 = zext i32 %1894 to i64
  %1896 = mul i64 %1891, %1895
  %1897 = getelementptr inbounds i8, ptr %1890, i64 %1896
  %1898 = load ptr, ptr %23, align 8
  %1899 = load i64, ptr %24, align 8
  %1900 = load ptr, ptr %22, align 8
  %1901 = getelementptr inbounds %struct.mz_zip_array, ptr %1900, i32 0, i32 3
  %1902 = load i32, ptr %1901, align 8
  %1903 = zext i32 %1902 to i64
  %1904 = mul i64 %1899, %1903
  %1905 = load ptr, ptr %22, align 8
  %1906 = load ptr, ptr %1905, align 8
  %1907 = load i64, ptr %25, align 8
  %1908 = load ptr, ptr %22, align 8
  %1909 = getelementptr inbounds %struct.mz_zip_array, ptr %1908, i32 0, i32 3
  %1910 = load i32, ptr %1909, align 8
  %1911 = zext i32 %1910 to i64
  %1912 = mul i64 %1907, %1911
  %1913 = getelementptr inbounds i8, ptr %1906, i64 %1912
  %1914 = call i64 @llvm.objectsize.i64.p0(ptr %1913, i1 false, i1 true, i1 false)
  %1915 = call ptr @__memcpy_chk(ptr noundef %1897, ptr noundef %1898, i64 noundef %1904, i64 noundef %1914) #11
  br label %1916

1916:                                             ; preds = %1888, %1885
  store i32 1, ptr %20, align 4
  br label %1917

1917:                                             ; preds = %1884, %1916
  %1918 = load i32, ptr %20, align 4
  %1919 = icmp ne i32 %1918, 0
  br i1 %1919, label %1966, label %1920

1920:                                             ; preds = %1917
  %1921 = load ptr, ptr %236, align 8
  store ptr %1921, ptr %121, align 8
  store ptr %277, ptr %122, align 8
  %1922 = load ptr, ptr %121, align 8
  %1923 = getelementptr inbounds %struct.mz_zip_archive, ptr %1922, i32 0, i32 8
  %1924 = load ptr, ptr %1923, align 8
  %1925 = load ptr, ptr %121, align 8
  %1926 = getelementptr inbounds %struct.mz_zip_archive, ptr %1925, i32 0, i32 10
  %1927 = load ptr, ptr %1926, align 8
  %1928 = load ptr, ptr %122, align 8
  %1929 = load ptr, ptr %1928, align 8
  call void %1924(ptr noundef %1927, ptr noundef %1929) #11
  %1930 = load ptr, ptr %122, align 8
  %1931 = load ptr, ptr %122, align 8
  %1932 = call i64 @llvm.objectsize.i64.p0(ptr %1931, i1 false, i1 true, i1 false)
  %1933 = call ptr @__memset_chk(ptr noundef %1930, i32 noundef 0, i64 noundef 32, i64 noundef %1932) #11
  %1934 = load ptr, ptr %236, align 8
  %1935 = load ptr, ptr %251, align 8
  %1936 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1935, i32 0, i32 0
  %1937 = load i64, ptr %250, align 8
  store ptr %1934, ptr %135, align 8
  store ptr %1936, ptr %136, align 8
  store i64 %1937, ptr %137, align 8
  store i32 0, ptr %138, align 4
  %1938 = load i64, ptr %137, align 8
  %1939 = load ptr, ptr %136, align 8
  %1940 = getelementptr inbounds %struct.mz_zip_array, ptr %1939, i32 0, i32 2
  %1941 = load i64, ptr %1940, align 8
  %1942 = icmp ugt i64 %1938, %1941
  br i1 %1942, label %1943, label %1952

1943:                                             ; preds = %1920
  %1944 = load ptr, ptr %135, align 8
  %1945 = load ptr, ptr %136, align 8
  %1946 = load i64, ptr %137, align 8
  %1947 = load i32, ptr %138, align 4
  %1948 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %1944, ptr noundef %1945, i64 noundef %1946, i32 noundef %1947)
  %1949 = icmp ne i32 %1948, 0
  br i1 %1949, label %1951, label %1950

1950:                                             ; preds = %1943
  store i32 0, ptr %134, align 4
  br label %1956

1951:                                             ; preds = %1943
  br label %1952

1952:                                             ; preds = %1951, %1920
  %1953 = load i64, ptr %137, align 8
  %1954 = load ptr, ptr %136, align 8
  %1955 = getelementptr inbounds %struct.mz_zip_array, ptr %1954, i32 0, i32 1
  store i64 %1953, ptr %1955, align 8
  store i32 1, ptr %134, align 4
  br label %1956

1956:                                             ; preds = %1950, %1952
  %1957 = load i32, ptr %134, align 4
  %1958 = load ptr, ptr %236, align 8
  store ptr %1958, ptr %217, align 8
  store i32 16, ptr %218, align 4
  %1959 = load ptr, ptr %217, align 8
  %1960 = icmp ne ptr %1959, null
  br i1 %1960, label %1961, label %1965

1961:                                             ; preds = %1956
  %1962 = load i32, ptr %218, align 4
  %1963 = load ptr, ptr %217, align 8
  %1964 = getelementptr inbounds %struct.mz_zip_archive, ptr %1963, i32 0, i32 5
  store i32 %1962, ptr %1964, align 4
  br label %1965

1965:                                             ; preds = %1956, %1961
  store i32 0, ptr %235, align 4
  br label %2607

1966:                                             ; preds = %1917
  %1967 = load ptr, ptr %236, align 8
  %1968 = load ptr, ptr %251, align 8
  %1969 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %1968, i32 0, i32 0
  %1970 = getelementptr inbounds %struct.mz_zip_array, ptr %277, i32 0, i32 0
  %1971 = load ptr, ptr %1970, align 8
  %1972 = getelementptr inbounds %struct.mz_zip_array, ptr %277, i32 0, i32 1
  %1973 = load i64, ptr %1972, align 8
  store ptr %1967, ptr %32, align 8
  store ptr %1969, ptr %33, align 8
  store ptr %1971, ptr %34, align 8
  store i64 %1973, ptr %35, align 8
  %1974 = load ptr, ptr %33, align 8
  %1975 = getelementptr inbounds %struct.mz_zip_array, ptr %1974, i32 0, i32 1
  %1976 = load i64, ptr %1975, align 8
  store i64 %1976, ptr %36, align 8
  %1977 = load ptr, ptr %32, align 8
  %1978 = load ptr, ptr %33, align 8
  %1979 = load i64, ptr %36, align 8
  %1980 = load i64, ptr %35, align 8
  %1981 = add i64 %1979, %1980
  store ptr %1977, ptr %27, align 8
  store ptr %1978, ptr %28, align 8
  store i64 %1981, ptr %29, align 8
  store i32 1, ptr %30, align 4
  %1982 = load i64, ptr %29, align 8
  %1983 = load ptr, ptr %28, align 8
  %1984 = getelementptr inbounds %struct.mz_zip_array, ptr %1983, i32 0, i32 2
  %1985 = load i64, ptr %1984, align 8
  %1986 = icmp ugt i64 %1982, %1985
  br i1 %1986, label %1987, label %1996

1987:                                             ; preds = %1966
  %1988 = load ptr, ptr %27, align 8
  %1989 = load ptr, ptr %28, align 8
  %1990 = load i64, ptr %29, align 8
  %1991 = load i32, ptr %30, align 4
  %1992 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %1988, ptr noundef %1989, i64 noundef %1990, i32 noundef %1991)
  %1993 = icmp ne i32 %1992, 0
  br i1 %1993, label %1995, label %1994

1994:                                             ; preds = %1987
  store i32 0, ptr %26, align 4
  br label %2000

1995:                                             ; preds = %1987
  br label %1996

1996:                                             ; preds = %1995, %1966
  %1997 = load i64, ptr %29, align 8
  %1998 = load ptr, ptr %28, align 8
  %1999 = getelementptr inbounds %struct.mz_zip_array, ptr %1998, i32 0, i32 1
  store i64 %1997, ptr %1999, align 8
  store i32 1, ptr %26, align 4
  br label %2000

2000:                                             ; preds = %1996, %1994
  %2001 = load i32, ptr %26, align 4
  %2002 = icmp ne i32 %2001, 0
  br i1 %2002, label %2004, label %2003

2003:                                             ; preds = %2000
  store i32 0, ptr %31, align 4
  br label %2036

2004:                                             ; preds = %2000
  %2005 = load i64, ptr %35, align 8
  %2006 = icmp ugt i64 %2005, 0
  br i1 %2006, label %2007, label %2035

2007:                                             ; preds = %2004
  %2008 = load ptr, ptr %33, align 8
  %2009 = load ptr, ptr %2008, align 8
  %2010 = load i64, ptr %36, align 8
  %2011 = load ptr, ptr %33, align 8
  %2012 = getelementptr inbounds %struct.mz_zip_array, ptr %2011, i32 0, i32 3
  %2013 = load i32, ptr %2012, align 8
  %2014 = zext i32 %2013 to i64
  %2015 = mul i64 %2010, %2014
  %2016 = getelementptr inbounds i8, ptr %2009, i64 %2015
  %2017 = load ptr, ptr %34, align 8
  %2018 = load i64, ptr %35, align 8
  %2019 = load ptr, ptr %33, align 8
  %2020 = getelementptr inbounds %struct.mz_zip_array, ptr %2019, i32 0, i32 3
  %2021 = load i32, ptr %2020, align 8
  %2022 = zext i32 %2021 to i64
  %2023 = mul i64 %2018, %2022
  %2024 = load ptr, ptr %33, align 8
  %2025 = load ptr, ptr %2024, align 8
  %2026 = load i64, ptr %36, align 8
  %2027 = load ptr, ptr %33, align 8
  %2028 = getelementptr inbounds %struct.mz_zip_array, ptr %2027, i32 0, i32 3
  %2029 = load i32, ptr %2028, align 8
  %2030 = zext i32 %2029 to i64
  %2031 = mul i64 %2026, %2030
  %2032 = getelementptr inbounds i8, ptr %2025, i64 %2031
  %2033 = call i64 @llvm.objectsize.i64.p0(ptr %2032, i1 false, i1 true, i1 false)
  %2034 = call ptr @__memcpy_chk(ptr noundef %2016, ptr noundef %2017, i64 noundef %2023, i64 noundef %2033) #11
  br label %2035

2035:                                             ; preds = %2007, %2004
  store i32 1, ptr %31, align 4
  br label %2036

2036:                                             ; preds = %2003, %2035
  %2037 = load i32, ptr %31, align 4
  %2038 = icmp ne i32 %2037, 0
  br i1 %2038, label %2085, label %2039

2039:                                             ; preds = %2036
  %2040 = load ptr, ptr %236, align 8
  store ptr %2040, ptr %123, align 8
  store ptr %277, ptr %124, align 8
  %2041 = load ptr, ptr %123, align 8
  %2042 = getelementptr inbounds %struct.mz_zip_archive, ptr %2041, i32 0, i32 8
  %2043 = load ptr, ptr %2042, align 8
  %2044 = load ptr, ptr %123, align 8
  %2045 = getelementptr inbounds %struct.mz_zip_archive, ptr %2044, i32 0, i32 10
  %2046 = load ptr, ptr %2045, align 8
  %2047 = load ptr, ptr %124, align 8
  %2048 = load ptr, ptr %2047, align 8
  call void %2043(ptr noundef %2046, ptr noundef %2048) #11
  %2049 = load ptr, ptr %124, align 8
  %2050 = load ptr, ptr %124, align 8
  %2051 = call i64 @llvm.objectsize.i64.p0(ptr %2050, i1 false, i1 true, i1 false)
  %2052 = call ptr @__memset_chk(ptr noundef %2049, i32 noundef 0, i64 noundef 32, i64 noundef %2051) #11
  %2053 = load ptr, ptr %236, align 8
  %2054 = load ptr, ptr %251, align 8
  %2055 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %2054, i32 0, i32 0
  %2056 = load i64, ptr %250, align 8
  store ptr %2053, ptr %140, align 8
  store ptr %2055, ptr %141, align 8
  store i64 %2056, ptr %142, align 8
  store i32 0, ptr %143, align 4
  %2057 = load i64, ptr %142, align 8
  %2058 = load ptr, ptr %141, align 8
  %2059 = getelementptr inbounds %struct.mz_zip_array, ptr %2058, i32 0, i32 2
  %2060 = load i64, ptr %2059, align 8
  %2061 = icmp ugt i64 %2057, %2060
  br i1 %2061, label %2062, label %2071

2062:                                             ; preds = %2039
  %2063 = load ptr, ptr %140, align 8
  %2064 = load ptr, ptr %141, align 8
  %2065 = load i64, ptr %142, align 8
  %2066 = load i32, ptr %143, align 4
  %2067 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %2063, ptr noundef %2064, i64 noundef %2065, i32 noundef %2066)
  %2068 = icmp ne i32 %2067, 0
  br i1 %2068, label %2070, label %2069

2069:                                             ; preds = %2062
  store i32 0, ptr %139, align 4
  br label %2075

2070:                                             ; preds = %2062
  br label %2071

2071:                                             ; preds = %2070, %2039
  %2072 = load i64, ptr %142, align 8
  %2073 = load ptr, ptr %141, align 8
  %2074 = getelementptr inbounds %struct.mz_zip_array, ptr %2073, i32 0, i32 1
  store i64 %2072, ptr %2074, align 8
  store i32 1, ptr %139, align 4
  br label %2075

2075:                                             ; preds = %2069, %2071
  %2076 = load i32, ptr %139, align 4
  %2077 = load ptr, ptr %236, align 8
  store ptr %2077, ptr %219, align 8
  store i32 16, ptr %220, align 4
  %2078 = load ptr, ptr %219, align 8
  %2079 = icmp ne ptr %2078, null
  br i1 %2079, label %2080, label %2084

2080:                                             ; preds = %2075
  %2081 = load i32, ptr %220, align 4
  %2082 = load ptr, ptr %219, align 8
  %2083 = getelementptr inbounds %struct.mz_zip_archive, ptr %2082, i32 0, i32 5
  store i32 %2081, ptr %2083, align 4
  br label %2084

2084:                                             ; preds = %2075, %2080
  store i32 0, ptr %235, align 4
  br label %2607

2085:                                             ; preds = %2036
  %2086 = load ptr, ptr %236, align 8
  %2087 = load ptr, ptr %251, align 8
  %2088 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %2087, i32 0, i32 0
  %2089 = load ptr, ptr %253, align 8
  %2090 = getelementptr inbounds i8, ptr %2089, i64 46
  %2091 = load i32, ptr %255, align 4
  %2092 = zext i32 %2091 to i64
  %2093 = getelementptr inbounds i8, ptr %2090, i64 %2092
  %2094 = load i32, ptr %257, align 4
  %2095 = zext i32 %2094 to i64
  %2096 = getelementptr inbounds i8, ptr %2093, i64 %2095
  %2097 = load i32, ptr %256, align 4
  %2098 = zext i32 %2097 to i64
  store ptr %2086, ptr %43, align 8
  store ptr %2088, ptr %44, align 8
  store ptr %2096, ptr %45, align 8
  store i64 %2098, ptr %46, align 8
  %2099 = load ptr, ptr %44, align 8
  %2100 = getelementptr inbounds %struct.mz_zip_array, ptr %2099, i32 0, i32 1
  %2101 = load i64, ptr %2100, align 8
  store i64 %2101, ptr %47, align 8
  %2102 = load ptr, ptr %43, align 8
  %2103 = load ptr, ptr %44, align 8
  %2104 = load i64, ptr %47, align 8
  %2105 = load i64, ptr %46, align 8
  %2106 = add i64 %2104, %2105
  store ptr %2102, ptr %38, align 8
  store ptr %2103, ptr %39, align 8
  store i64 %2106, ptr %40, align 8
  store i32 1, ptr %41, align 4
  %2107 = load i64, ptr %40, align 8
  %2108 = load ptr, ptr %39, align 8
  %2109 = getelementptr inbounds %struct.mz_zip_array, ptr %2108, i32 0, i32 2
  %2110 = load i64, ptr %2109, align 8
  %2111 = icmp ugt i64 %2107, %2110
  br i1 %2111, label %2112, label %2121

2112:                                             ; preds = %2085
  %2113 = load ptr, ptr %38, align 8
  %2114 = load ptr, ptr %39, align 8
  %2115 = load i64, ptr %40, align 8
  %2116 = load i32, ptr %41, align 4
  %2117 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %2113, ptr noundef %2114, i64 noundef %2115, i32 noundef %2116)
  %2118 = icmp ne i32 %2117, 0
  br i1 %2118, label %2120, label %2119

2119:                                             ; preds = %2112
  store i32 0, ptr %37, align 4
  br label %2125

2120:                                             ; preds = %2112
  br label %2121

2121:                                             ; preds = %2120, %2085
  %2122 = load i64, ptr %40, align 8
  %2123 = load ptr, ptr %39, align 8
  %2124 = getelementptr inbounds %struct.mz_zip_array, ptr %2123, i32 0, i32 1
  store i64 %2122, ptr %2124, align 8
  store i32 1, ptr %37, align 4
  br label %2125

2125:                                             ; preds = %2121, %2119
  %2126 = load i32, ptr %37, align 4
  %2127 = icmp ne i32 %2126, 0
  br i1 %2127, label %2129, label %2128

2128:                                             ; preds = %2125
  store i32 0, ptr %42, align 4
  br label %2161

2129:                                             ; preds = %2125
  %2130 = load i64, ptr %46, align 8
  %2131 = icmp ugt i64 %2130, 0
  br i1 %2131, label %2132, label %2160

2132:                                             ; preds = %2129
  %2133 = load ptr, ptr %44, align 8
  %2134 = load ptr, ptr %2133, align 8
  %2135 = load i64, ptr %47, align 8
  %2136 = load ptr, ptr %44, align 8
  %2137 = getelementptr inbounds %struct.mz_zip_array, ptr %2136, i32 0, i32 3
  %2138 = load i32, ptr %2137, align 8
  %2139 = zext i32 %2138 to i64
  %2140 = mul i64 %2135, %2139
  %2141 = getelementptr inbounds i8, ptr %2134, i64 %2140
  %2142 = load ptr, ptr %45, align 8
  %2143 = load i64, ptr %46, align 8
  %2144 = load ptr, ptr %44, align 8
  %2145 = getelementptr inbounds %struct.mz_zip_array, ptr %2144, i32 0, i32 3
  %2146 = load i32, ptr %2145, align 8
  %2147 = zext i32 %2146 to i64
  %2148 = mul i64 %2143, %2147
  %2149 = load ptr, ptr %44, align 8
  %2150 = load ptr, ptr %2149, align 8
  %2151 = load i64, ptr %47, align 8
  %2152 = load ptr, ptr %44, align 8
  %2153 = getelementptr inbounds %struct.mz_zip_array, ptr %2152, i32 0, i32 3
  %2154 = load i32, ptr %2153, align 8
  %2155 = zext i32 %2154 to i64
  %2156 = mul i64 %2151, %2155
  %2157 = getelementptr inbounds i8, ptr %2150, i64 %2156
  %2158 = call i64 @llvm.objectsize.i64.p0(ptr %2157, i1 false, i1 true, i1 false)
  %2159 = call ptr @__memcpy_chk(ptr noundef %2141, ptr noundef %2142, i64 noundef %2148, i64 noundef %2158) #11
  br label %2160

2160:                                             ; preds = %2132, %2129
  store i32 1, ptr %42, align 4
  br label %2161

2161:                                             ; preds = %2128, %2160
  %2162 = load i32, ptr %42, align 4
  %2163 = icmp ne i32 %2162, 0
  br i1 %2163, label %2210, label %2164

2164:                                             ; preds = %2161
  %2165 = load ptr, ptr %236, align 8
  store ptr %2165, ptr %125, align 8
  store ptr %277, ptr %126, align 8
  %2166 = load ptr, ptr %125, align 8
  %2167 = getelementptr inbounds %struct.mz_zip_archive, ptr %2166, i32 0, i32 8
  %2168 = load ptr, ptr %2167, align 8
  %2169 = load ptr, ptr %125, align 8
  %2170 = getelementptr inbounds %struct.mz_zip_archive, ptr %2169, i32 0, i32 10
  %2171 = load ptr, ptr %2170, align 8
  %2172 = load ptr, ptr %126, align 8
  %2173 = load ptr, ptr %2172, align 8
  call void %2168(ptr noundef %2171, ptr noundef %2173) #11
  %2174 = load ptr, ptr %126, align 8
  %2175 = load ptr, ptr %126, align 8
  %2176 = call i64 @llvm.objectsize.i64.p0(ptr %2175, i1 false, i1 true, i1 false)
  %2177 = call ptr @__memset_chk(ptr noundef %2174, i32 noundef 0, i64 noundef 32, i64 noundef %2176) #11
  %2178 = load ptr, ptr %236, align 8
  %2179 = load ptr, ptr %251, align 8
  %2180 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %2179, i32 0, i32 0
  %2181 = load i64, ptr %250, align 8
  store ptr %2178, ptr %145, align 8
  store ptr %2180, ptr %146, align 8
  store i64 %2181, ptr %147, align 8
  store i32 0, ptr %148, align 4
  %2182 = load i64, ptr %147, align 8
  %2183 = load ptr, ptr %146, align 8
  %2184 = getelementptr inbounds %struct.mz_zip_array, ptr %2183, i32 0, i32 2
  %2185 = load i64, ptr %2184, align 8
  %2186 = icmp ugt i64 %2182, %2185
  br i1 %2186, label %2187, label %2196

2187:                                             ; preds = %2164
  %2188 = load ptr, ptr %145, align 8
  %2189 = load ptr, ptr %146, align 8
  %2190 = load i64, ptr %147, align 8
  %2191 = load i32, ptr %148, align 4
  %2192 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %2188, ptr noundef %2189, i64 noundef %2190, i32 noundef %2191)
  %2193 = icmp ne i32 %2192, 0
  br i1 %2193, label %2195, label %2194

2194:                                             ; preds = %2187
  store i32 0, ptr %144, align 4
  br label %2200

2195:                                             ; preds = %2187
  br label %2196

2196:                                             ; preds = %2195, %2164
  %2197 = load i64, ptr %147, align 8
  %2198 = load ptr, ptr %146, align 8
  %2199 = getelementptr inbounds %struct.mz_zip_array, ptr %2198, i32 0, i32 1
  store i64 %2197, ptr %2199, align 8
  store i32 1, ptr %144, align 4
  br label %2200

2200:                                             ; preds = %2194, %2196
  %2201 = load i32, ptr %144, align 4
  %2202 = load ptr, ptr %236, align 8
  store ptr %2202, ptr %221, align 8
  store i32 16, ptr %222, align 4
  %2203 = load ptr, ptr %221, align 8
  %2204 = icmp ne ptr %2203, null
  br i1 %2204, label %2205, label %2209

2205:                                             ; preds = %2200
  %2206 = load i32, ptr %222, align 4
  %2207 = load ptr, ptr %221, align 8
  %2208 = getelementptr inbounds %struct.mz_zip_archive, ptr %2207, i32 0, i32 5
  store i32 %2206, ptr %2208, align 4
  br label %2209

2209:                                             ; preds = %2200, %2205
  store i32 0, ptr %235, align 4
  br label %2607

2210:                                             ; preds = %2161
  %2211 = load ptr, ptr %236, align 8
  store ptr %2211, ptr %127, align 8
  store ptr %277, ptr %128, align 8
  %2212 = load ptr, ptr %127, align 8
  %2213 = getelementptr inbounds %struct.mz_zip_archive, ptr %2212, i32 0, i32 8
  %2214 = load ptr, ptr %2213, align 8
  %2215 = load ptr, ptr %127, align 8
  %2216 = getelementptr inbounds %struct.mz_zip_archive, ptr %2215, i32 0, i32 10
  %2217 = load ptr, ptr %2216, align 8
  %2218 = load ptr, ptr %128, align 8
  %2219 = load ptr, ptr %2218, align 8
  call void %2214(ptr noundef %2217, ptr noundef %2219) #11
  %2220 = load ptr, ptr %128, align 8
  %2221 = load ptr, ptr %128, align 8
  %2222 = call i64 @llvm.objectsize.i64.p0(ptr %2221, i1 false, i1 true, i1 false)
  %2223 = call ptr @__memset_chk(ptr noundef %2220, i32 noundef 0, i64 noundef 32, i64 noundef %2222) #11
  br label %2456

2224:                                             ; preds = %1629
  %2225 = load i64, ptr %246, align 8
  %2226 = icmp ugt i64 %2225, 4294967295
  br i1 %2226, label %2227, label %2236

2227:                                             ; preds = %2224
  %2228 = load ptr, ptr %236, align 8
  store ptr %2228, ptr %223, align 8
  store i32 29, ptr %224, align 4
  %2229 = load ptr, ptr %223, align 8
  %2230 = icmp ne ptr %2229, null
  br i1 %2230, label %2231, label %2235

2231:                                             ; preds = %2227
  %2232 = load i32, ptr %224, align 4
  %2233 = load ptr, ptr %223, align 8
  %2234 = getelementptr inbounds %struct.mz_zip_archive, ptr %2233, i32 0, i32 5
  store i32 %2232, ptr %2234, align 4
  br label %2235

2235:                                             ; preds = %2227, %2231
  store i32 0, ptr %235, align 4
  br label %2607

2236:                                             ; preds = %2224
  %2237 = load i64, ptr %244, align 8
  %2238 = icmp uge i64 %2237, 4294967295
  br i1 %2238, label %2239, label %2248

2239:                                             ; preds = %2236
  %2240 = load ptr, ptr %236, align 8
  store ptr %2240, ptr %225, align 8
  store i32 29, ptr %226, align 4
  %2241 = load ptr, ptr %225, align 8
  %2242 = icmp ne ptr %2241, null
  br i1 %2242, label %2243, label %2247

2243:                                             ; preds = %2239
  %2244 = load i32, ptr %226, align 4
  %2245 = load ptr, ptr %225, align 8
  %2246 = getelementptr inbounds %struct.mz_zip_archive, ptr %2245, i32 0, i32 5
  store i32 %2244, ptr %2246, align 4
  br label %2247

2247:                                             ; preds = %2239, %2243
  store i32 0, ptr %235, align 4
  br label %2607

2248:                                             ; preds = %2236
  %2249 = getelementptr inbounds [46 x i8], ptr %249, i64 0, i64 0
  %2250 = getelementptr inbounds i8, ptr %2249, i64 42
  %2251 = load i64, ptr %244, align 8
  %2252 = trunc i64 %2251 to i32
  store ptr %2250, ptr %105, align 8
  store i32 %2252, ptr %106, align 4
  %2253 = load i32, ptr %106, align 4
  %2254 = trunc i32 %2253 to i8
  %2255 = load ptr, ptr %105, align 8
  store i8 %2254, ptr %2255, align 1
  %2256 = load i32, ptr %106, align 4
  %2257 = lshr i32 %2256, 8
  %2258 = trunc i32 %2257 to i8
  %2259 = load ptr, ptr %105, align 8
  %2260 = getelementptr inbounds i8, ptr %2259, i64 1
  store i8 %2258, ptr %2260, align 1
  %2261 = load i32, ptr %106, align 4
  %2262 = lshr i32 %2261, 16
  %2263 = trunc i32 %2262 to i8
  %2264 = load ptr, ptr %105, align 8
  %2265 = getelementptr inbounds i8, ptr %2264, i64 2
  store i8 %2263, ptr %2265, align 1
  %2266 = load i32, ptr %106, align 4
  %2267 = lshr i32 %2266, 24
  %2268 = trunc i32 %2267 to i8
  %2269 = load ptr, ptr %105, align 8
  %2270 = getelementptr inbounds i8, ptr %2269, i64 3
  store i8 %2268, ptr %2270, align 1
  %2271 = load ptr, ptr %236, align 8
  %2272 = load ptr, ptr %251, align 8
  %2273 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %2272, i32 0, i32 0
  %2274 = getelementptr inbounds [46 x i8], ptr %249, i64 0, i64 0
  store ptr %2271, ptr %54, align 8
  store ptr %2273, ptr %55, align 8
  store ptr %2274, ptr %56, align 8
  store i64 46, ptr %57, align 8
  %2275 = load ptr, ptr %55, align 8
  %2276 = getelementptr inbounds %struct.mz_zip_array, ptr %2275, i32 0, i32 1
  %2277 = load i64, ptr %2276, align 8
  store i64 %2277, ptr %58, align 8
  %2278 = load ptr, ptr %54, align 8
  %2279 = load ptr, ptr %55, align 8
  %2280 = load i64, ptr %58, align 8
  %2281 = load i64, ptr %57, align 8
  %2282 = add i64 %2280, %2281
  store ptr %2278, ptr %49, align 8
  store ptr %2279, ptr %50, align 8
  store i64 %2282, ptr %51, align 8
  store i32 1, ptr %52, align 4
  %2283 = load i64, ptr %51, align 8
  %2284 = load ptr, ptr %50, align 8
  %2285 = getelementptr inbounds %struct.mz_zip_array, ptr %2284, i32 0, i32 2
  %2286 = load i64, ptr %2285, align 8
  %2287 = icmp ugt i64 %2283, %2286
  br i1 %2287, label %2288, label %2297

2288:                                             ; preds = %2248
  %2289 = load ptr, ptr %49, align 8
  %2290 = load ptr, ptr %50, align 8
  %2291 = load i64, ptr %51, align 8
  %2292 = load i32, ptr %52, align 4
  %2293 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %2289, ptr noundef %2290, i64 noundef %2291, i32 noundef %2292)
  %2294 = icmp ne i32 %2293, 0
  br i1 %2294, label %2296, label %2295

2295:                                             ; preds = %2288
  store i32 0, ptr %48, align 4
  br label %2301

2296:                                             ; preds = %2288
  br label %2297

2297:                                             ; preds = %2296, %2248
  %2298 = load i64, ptr %51, align 8
  %2299 = load ptr, ptr %50, align 8
  %2300 = getelementptr inbounds %struct.mz_zip_array, ptr %2299, i32 0, i32 1
  store i64 %2298, ptr %2300, align 8
  store i32 1, ptr %48, align 4
  br label %2301

2301:                                             ; preds = %2297, %2295
  %2302 = load i32, ptr %48, align 4
  %2303 = icmp ne i32 %2302, 0
  br i1 %2303, label %2305, label %2304

2304:                                             ; preds = %2301
  store i32 0, ptr %53, align 4
  br label %2337

2305:                                             ; preds = %2301
  %2306 = load i64, ptr %57, align 8
  %2307 = icmp ugt i64 %2306, 0
  br i1 %2307, label %2308, label %2336

2308:                                             ; preds = %2305
  %2309 = load ptr, ptr %55, align 8
  %2310 = load ptr, ptr %2309, align 8
  %2311 = load i64, ptr %58, align 8
  %2312 = load ptr, ptr %55, align 8
  %2313 = getelementptr inbounds %struct.mz_zip_array, ptr %2312, i32 0, i32 3
  %2314 = load i32, ptr %2313, align 8
  %2315 = zext i32 %2314 to i64
  %2316 = mul i64 %2311, %2315
  %2317 = getelementptr inbounds i8, ptr %2310, i64 %2316
  %2318 = load ptr, ptr %56, align 8
  %2319 = load i64, ptr %57, align 8
  %2320 = load ptr, ptr %55, align 8
  %2321 = getelementptr inbounds %struct.mz_zip_array, ptr %2320, i32 0, i32 3
  %2322 = load i32, ptr %2321, align 8
  %2323 = zext i32 %2322 to i64
  %2324 = mul i64 %2319, %2323
  %2325 = load ptr, ptr %55, align 8
  %2326 = load ptr, ptr %2325, align 8
  %2327 = load i64, ptr %58, align 8
  %2328 = load ptr, ptr %55, align 8
  %2329 = getelementptr inbounds %struct.mz_zip_array, ptr %2328, i32 0, i32 3
  %2330 = load i32, ptr %2329, align 8
  %2331 = zext i32 %2330 to i64
  %2332 = mul i64 %2327, %2331
  %2333 = getelementptr inbounds i8, ptr %2326, i64 %2332
  %2334 = call i64 @llvm.objectsize.i64.p0(ptr %2333, i1 false, i1 true, i1 false)
  %2335 = call ptr @__memcpy_chk(ptr noundef %2317, ptr noundef %2318, i64 noundef %2324, i64 noundef %2334) #11
  br label %2336

2336:                                             ; preds = %2308, %2305
  store i32 1, ptr %53, align 4
  br label %2337

2337:                                             ; preds = %2304, %2336
  %2338 = load i32, ptr %53, align 4
  %2339 = icmp ne i32 %2338, 0
  br i1 %2339, label %2349, label %2340

2340:                                             ; preds = %2337
  %2341 = load ptr, ptr %236, align 8
  store ptr %2341, ptr %227, align 8
  store i32 16, ptr %228, align 4
  %2342 = load ptr, ptr %227, align 8
  %2343 = icmp ne ptr %2342, null
  br i1 %2343, label %2344, label %2348

2344:                                             ; preds = %2340
  %2345 = load i32, ptr %228, align 4
  %2346 = load ptr, ptr %227, align 8
  %2347 = getelementptr inbounds %struct.mz_zip_archive, ptr %2346, i32 0, i32 5
  store i32 %2345, ptr %2347, align 4
  br label %2348

2348:                                             ; preds = %2340, %2344
  store i32 0, ptr %235, align 4
  br label %2607

2349:                                             ; preds = %2337
  %2350 = load ptr, ptr %236, align 8
  %2351 = load ptr, ptr %251, align 8
  %2352 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %2351, i32 0, i32 0
  %2353 = load ptr, ptr %253, align 8
  %2354 = getelementptr inbounds i8, ptr %2353, i64 46
  %2355 = load i32, ptr %242, align 4
  %2356 = zext i32 %2355 to i64
  store ptr %2350, ptr %65, align 8
  store ptr %2352, ptr %66, align 8
  store ptr %2354, ptr %67, align 8
  store i64 %2356, ptr %68, align 8
  %2357 = load ptr, ptr %66, align 8
  %2358 = getelementptr inbounds %struct.mz_zip_array, ptr %2357, i32 0, i32 1
  %2359 = load i64, ptr %2358, align 8
  store i64 %2359, ptr %69, align 8
  %2360 = load ptr, ptr %65, align 8
  %2361 = load ptr, ptr %66, align 8
  %2362 = load i64, ptr %69, align 8
  %2363 = load i64, ptr %68, align 8
  %2364 = add i64 %2362, %2363
  store ptr %2360, ptr %60, align 8
  store ptr %2361, ptr %61, align 8
  store i64 %2364, ptr %62, align 8
  store i32 1, ptr %63, align 4
  %2365 = load i64, ptr %62, align 8
  %2366 = load ptr, ptr %61, align 8
  %2367 = getelementptr inbounds %struct.mz_zip_array, ptr %2366, i32 0, i32 2
  %2368 = load i64, ptr %2367, align 8
  %2369 = icmp ugt i64 %2365, %2368
  br i1 %2369, label %2370, label %2379

2370:                                             ; preds = %2349
  %2371 = load ptr, ptr %60, align 8
  %2372 = load ptr, ptr %61, align 8
  %2373 = load i64, ptr %62, align 8
  %2374 = load i32, ptr %63, align 4
  %2375 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %2371, ptr noundef %2372, i64 noundef %2373, i32 noundef %2374)
  %2376 = icmp ne i32 %2375, 0
  br i1 %2376, label %2378, label %2377

2377:                                             ; preds = %2370
  store i32 0, ptr %59, align 4
  br label %2383

2378:                                             ; preds = %2370
  br label %2379

2379:                                             ; preds = %2378, %2349
  %2380 = load i64, ptr %62, align 8
  %2381 = load ptr, ptr %61, align 8
  %2382 = getelementptr inbounds %struct.mz_zip_array, ptr %2381, i32 0, i32 1
  store i64 %2380, ptr %2382, align 8
  store i32 1, ptr %59, align 4
  br label %2383

2383:                                             ; preds = %2379, %2377
  %2384 = load i32, ptr %59, align 4
  %2385 = icmp ne i32 %2384, 0
  br i1 %2385, label %2387, label %2386

2386:                                             ; preds = %2383
  store i32 0, ptr %64, align 4
  br label %2419

2387:                                             ; preds = %2383
  %2388 = load i64, ptr %68, align 8
  %2389 = icmp ugt i64 %2388, 0
  br i1 %2389, label %2390, label %2418

2390:                                             ; preds = %2387
  %2391 = load ptr, ptr %66, align 8
  %2392 = load ptr, ptr %2391, align 8
  %2393 = load i64, ptr %69, align 8
  %2394 = load ptr, ptr %66, align 8
  %2395 = getelementptr inbounds %struct.mz_zip_array, ptr %2394, i32 0, i32 3
  %2396 = load i32, ptr %2395, align 8
  %2397 = zext i32 %2396 to i64
  %2398 = mul i64 %2393, %2397
  %2399 = getelementptr inbounds i8, ptr %2392, i64 %2398
  %2400 = load ptr, ptr %67, align 8
  %2401 = load i64, ptr %68, align 8
  %2402 = load ptr, ptr %66, align 8
  %2403 = getelementptr inbounds %struct.mz_zip_array, ptr %2402, i32 0, i32 3
  %2404 = load i32, ptr %2403, align 8
  %2405 = zext i32 %2404 to i64
  %2406 = mul i64 %2401, %2405
  %2407 = load ptr, ptr %66, align 8
  %2408 = load ptr, ptr %2407, align 8
  %2409 = load i64, ptr %69, align 8
  %2410 = load ptr, ptr %66, align 8
  %2411 = getelementptr inbounds %struct.mz_zip_array, ptr %2410, i32 0, i32 3
  %2412 = load i32, ptr %2411, align 8
  %2413 = zext i32 %2412 to i64
  %2414 = mul i64 %2409, %2413
  %2415 = getelementptr inbounds i8, ptr %2408, i64 %2414
  %2416 = call i64 @llvm.objectsize.i64.p0(ptr %2415, i1 false, i1 true, i1 false)
  %2417 = call ptr @__memcpy_chk(ptr noundef %2399, ptr noundef %2400, i64 noundef %2406, i64 noundef %2416) #11
  br label %2418

2418:                                             ; preds = %2390, %2387
  store i32 1, ptr %64, align 4
  br label %2419

2419:                                             ; preds = %2386, %2418
  %2420 = load i32, ptr %64, align 4
  %2421 = icmp ne i32 %2420, 0
  br i1 %2421, label %2455, label %2422

2422:                                             ; preds = %2419
  %2423 = load ptr, ptr %236, align 8
  %2424 = load ptr, ptr %251, align 8
  %2425 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %2424, i32 0, i32 0
  %2426 = load i64, ptr %250, align 8
  store ptr %2423, ptr %150, align 8
  store ptr %2425, ptr %151, align 8
  store i64 %2426, ptr %152, align 8
  store i32 0, ptr %153, align 4
  %2427 = load i64, ptr %152, align 8
  %2428 = load ptr, ptr %151, align 8
  %2429 = getelementptr inbounds %struct.mz_zip_array, ptr %2428, i32 0, i32 2
  %2430 = load i64, ptr %2429, align 8
  %2431 = icmp ugt i64 %2427, %2430
  br i1 %2431, label %2432, label %2441

2432:                                             ; preds = %2422
  %2433 = load ptr, ptr %150, align 8
  %2434 = load ptr, ptr %151, align 8
  %2435 = load i64, ptr %152, align 8
  %2436 = load i32, ptr %153, align 4
  %2437 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %2433, ptr noundef %2434, i64 noundef %2435, i32 noundef %2436)
  %2438 = icmp ne i32 %2437, 0
  br i1 %2438, label %2440, label %2439

2439:                                             ; preds = %2432
  store i32 0, ptr %149, align 4
  br label %2445

2440:                                             ; preds = %2432
  br label %2441

2441:                                             ; preds = %2440, %2422
  %2442 = load i64, ptr %152, align 8
  %2443 = load ptr, ptr %151, align 8
  %2444 = getelementptr inbounds %struct.mz_zip_array, ptr %2443, i32 0, i32 1
  store i64 %2442, ptr %2444, align 8
  store i32 1, ptr %149, align 4
  br label %2445

2445:                                             ; preds = %2439, %2441
  %2446 = load i32, ptr %149, align 4
  %2447 = load ptr, ptr %236, align 8
  store ptr %2447, ptr %229, align 8
  store i32 16, ptr %230, align 4
  %2448 = load ptr, ptr %229, align 8
  %2449 = icmp ne ptr %2448, null
  br i1 %2449, label %2450, label %2454

2450:                                             ; preds = %2445
  %2451 = load i32, ptr %230, align 4
  %2452 = load ptr, ptr %229, align 8
  %2453 = getelementptr inbounds %struct.mz_zip_archive, ptr %2452, i32 0, i32 5
  store i32 %2451, ptr %2453, align 4
  br label %2454

2454:                                             ; preds = %2445, %2450
  store i32 0, ptr %235, align 4
  br label %2607

2455:                                             ; preds = %2419
  br label %2456

2456:                                             ; preds = %2455, %2210
  %2457 = load ptr, ptr %251, align 8
  %2458 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %2457, i32 0, i32 0
  %2459 = getelementptr inbounds %struct.mz_zip_array, ptr %2458, i32 0, i32 1
  %2460 = load i64, ptr %2459, align 8
  %2461 = icmp uge i64 %2460, 4294967295
  br i1 %2461, label %2462, label %2495

2462:                                             ; preds = %2456
  %2463 = load ptr, ptr %236, align 8
  %2464 = load ptr, ptr %251, align 8
  %2465 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %2464, i32 0, i32 0
  %2466 = load i64, ptr %250, align 8
  store ptr %2463, ptr %155, align 8
  store ptr %2465, ptr %156, align 8
  store i64 %2466, ptr %157, align 8
  store i32 0, ptr %158, align 4
  %2467 = load i64, ptr %157, align 8
  %2468 = load ptr, ptr %156, align 8
  %2469 = getelementptr inbounds %struct.mz_zip_array, ptr %2468, i32 0, i32 2
  %2470 = load i64, ptr %2469, align 8
  %2471 = icmp ugt i64 %2467, %2470
  br i1 %2471, label %2472, label %2481

2472:                                             ; preds = %2462
  %2473 = load ptr, ptr %155, align 8
  %2474 = load ptr, ptr %156, align 8
  %2475 = load i64, ptr %157, align 8
  %2476 = load i32, ptr %158, align 4
  %2477 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %2473, ptr noundef %2474, i64 noundef %2475, i32 noundef %2476)
  %2478 = icmp ne i32 %2477, 0
  br i1 %2478, label %2480, label %2479

2479:                                             ; preds = %2472
  store i32 0, ptr %154, align 4
  br label %2485

2480:                                             ; preds = %2472
  br label %2481

2481:                                             ; preds = %2480, %2462
  %2482 = load i64, ptr %157, align 8
  %2483 = load ptr, ptr %156, align 8
  %2484 = getelementptr inbounds %struct.mz_zip_array, ptr %2483, i32 0, i32 1
  store i64 %2482, ptr %2484, align 8
  store i32 1, ptr %154, align 4
  br label %2485

2485:                                             ; preds = %2479, %2481
  %2486 = load i32, ptr %154, align 4
  %2487 = load ptr, ptr %236, align 8
  store ptr %2487, ptr %231, align 8
  store i32 15, ptr %232, align 4
  %2488 = load ptr, ptr %231, align 8
  %2489 = icmp ne ptr %2488, null
  br i1 %2489, label %2490, label %2494

2490:                                             ; preds = %2485
  %2491 = load i32, ptr %232, align 4
  %2492 = load ptr, ptr %231, align 8
  %2493 = getelementptr inbounds %struct.mz_zip_archive, ptr %2492, i32 0, i32 5
  store i32 %2491, ptr %2493, align 4
  br label %2494

2494:                                             ; preds = %2485, %2490
  store i32 0, ptr %235, align 4
  br label %2607

2495:                                             ; preds = %2456
  %2496 = load i64, ptr %250, align 8
  %2497 = trunc i64 %2496 to i32
  store i32 %2497, ptr %239, align 4
  %2498 = load ptr, ptr %236, align 8
  %2499 = load ptr, ptr %251, align 8
  %2500 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %2499, i32 0, i32 1
  store ptr %2498, ptr %76, align 8
  store ptr %2500, ptr %77, align 8
  store ptr %239, ptr %78, align 8
  store i64 1, ptr %79, align 8
  %2501 = load ptr, ptr %77, align 8
  %2502 = getelementptr inbounds %struct.mz_zip_array, ptr %2501, i32 0, i32 1
  %2503 = load i64, ptr %2502, align 8
  store i64 %2503, ptr %80, align 8
  %2504 = load ptr, ptr %76, align 8
  %2505 = load ptr, ptr %77, align 8
  %2506 = load i64, ptr %80, align 8
  %2507 = load i64, ptr %79, align 8
  %2508 = add i64 %2506, %2507
  store ptr %2504, ptr %71, align 8
  store ptr %2505, ptr %72, align 8
  store i64 %2508, ptr %73, align 8
  store i32 1, ptr %74, align 4
  %2509 = load i64, ptr %73, align 8
  %2510 = load ptr, ptr %72, align 8
  %2511 = getelementptr inbounds %struct.mz_zip_array, ptr %2510, i32 0, i32 2
  %2512 = load i64, ptr %2511, align 8
  %2513 = icmp ugt i64 %2509, %2512
  br i1 %2513, label %2514, label %2523

2514:                                             ; preds = %2495
  %2515 = load ptr, ptr %71, align 8
  %2516 = load ptr, ptr %72, align 8
  %2517 = load i64, ptr %73, align 8
  %2518 = load i32, ptr %74, align 4
  %2519 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %2515, ptr noundef %2516, i64 noundef %2517, i32 noundef %2518)
  %2520 = icmp ne i32 %2519, 0
  br i1 %2520, label %2522, label %2521

2521:                                             ; preds = %2514
  store i32 0, ptr %70, align 4
  br label %2527

2522:                                             ; preds = %2514
  br label %2523

2523:                                             ; preds = %2522, %2495
  %2524 = load i64, ptr %73, align 8
  %2525 = load ptr, ptr %72, align 8
  %2526 = getelementptr inbounds %struct.mz_zip_array, ptr %2525, i32 0, i32 1
  store i64 %2524, ptr %2526, align 8
  store i32 1, ptr %70, align 4
  br label %2527

2527:                                             ; preds = %2523, %2521
  %2528 = load i32, ptr %70, align 4
  %2529 = icmp ne i32 %2528, 0
  br i1 %2529, label %2531, label %2530

2530:                                             ; preds = %2527
  store i32 0, ptr %75, align 4
  br label %2563

2531:                                             ; preds = %2527
  %2532 = load i64, ptr %79, align 8
  %2533 = icmp ugt i64 %2532, 0
  br i1 %2533, label %2534, label %2562

2534:                                             ; preds = %2531
  %2535 = load ptr, ptr %77, align 8
  %2536 = load ptr, ptr %2535, align 8
  %2537 = load i64, ptr %80, align 8
  %2538 = load ptr, ptr %77, align 8
  %2539 = getelementptr inbounds %struct.mz_zip_array, ptr %2538, i32 0, i32 3
  %2540 = load i32, ptr %2539, align 8
  %2541 = zext i32 %2540 to i64
  %2542 = mul i64 %2537, %2541
  %2543 = getelementptr inbounds i8, ptr %2536, i64 %2542
  %2544 = load ptr, ptr %78, align 8
  %2545 = load i64, ptr %79, align 8
  %2546 = load ptr, ptr %77, align 8
  %2547 = getelementptr inbounds %struct.mz_zip_array, ptr %2546, i32 0, i32 3
  %2548 = load i32, ptr %2547, align 8
  %2549 = zext i32 %2548 to i64
  %2550 = mul i64 %2545, %2549
  %2551 = load ptr, ptr %77, align 8
  %2552 = load ptr, ptr %2551, align 8
  %2553 = load i64, ptr %80, align 8
  %2554 = load ptr, ptr %77, align 8
  %2555 = getelementptr inbounds %struct.mz_zip_array, ptr %2554, i32 0, i32 3
  %2556 = load i32, ptr %2555, align 8
  %2557 = zext i32 %2556 to i64
  %2558 = mul i64 %2553, %2557
  %2559 = getelementptr inbounds i8, ptr %2552, i64 %2558
  %2560 = call i64 @llvm.objectsize.i64.p0(ptr %2559, i1 false, i1 true, i1 false)
  %2561 = call ptr @__memcpy_chk(ptr noundef %2543, ptr noundef %2544, i64 noundef %2550, i64 noundef %2560) #11
  br label %2562

2562:                                             ; preds = %2534, %2531
  store i32 1, ptr %75, align 4
  br label %2563

2563:                                             ; preds = %2530, %2562
  %2564 = load i32, ptr %75, align 4
  %2565 = icmp ne i32 %2564, 0
  br i1 %2565, label %2599, label %2566

2566:                                             ; preds = %2563
  %2567 = load ptr, ptr %236, align 8
  %2568 = load ptr, ptr %251, align 8
  %2569 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %2568, i32 0, i32 0
  %2570 = load i64, ptr %250, align 8
  store ptr %2567, ptr %160, align 8
  store ptr %2569, ptr %161, align 8
  store i64 %2570, ptr %162, align 8
  store i32 0, ptr %163, align 4
  %2571 = load i64, ptr %162, align 8
  %2572 = load ptr, ptr %161, align 8
  %2573 = getelementptr inbounds %struct.mz_zip_array, ptr %2572, i32 0, i32 2
  %2574 = load i64, ptr %2573, align 8
  %2575 = icmp ugt i64 %2571, %2574
  br i1 %2575, label %2576, label %2585

2576:                                             ; preds = %2566
  %2577 = load ptr, ptr %160, align 8
  %2578 = load ptr, ptr %161, align 8
  %2579 = load i64, ptr %162, align 8
  %2580 = load i32, ptr %163, align 4
  %2581 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %2577, ptr noundef %2578, i64 noundef %2579, i32 noundef %2580)
  %2582 = icmp ne i32 %2581, 0
  br i1 %2582, label %2584, label %2583

2583:                                             ; preds = %2576
  store i32 0, ptr %159, align 4
  br label %2589

2584:                                             ; preds = %2576
  br label %2585

2585:                                             ; preds = %2584, %2566
  %2586 = load i64, ptr %162, align 8
  %2587 = load ptr, ptr %161, align 8
  %2588 = getelementptr inbounds %struct.mz_zip_array, ptr %2587, i32 0, i32 1
  store i64 %2586, ptr %2588, align 8
  store i32 1, ptr %159, align 4
  br label %2589

2589:                                             ; preds = %2583, %2585
  %2590 = load i32, ptr %159, align 4
  %2591 = load ptr, ptr %236, align 8
  store ptr %2591, ptr %233, align 8
  store i32 16, ptr %234, align 4
  %2592 = load ptr, ptr %233, align 8
  %2593 = icmp ne ptr %2592, null
  br i1 %2593, label %2594, label %2598

2594:                                             ; preds = %2589
  %2595 = load i32, ptr %234, align 4
  %2596 = load ptr, ptr %233, align 8
  %2597 = getelementptr inbounds %struct.mz_zip_archive, ptr %2596, i32 0, i32 5
  store i32 %2595, ptr %2597, align 4
  br label %2598

2598:                                             ; preds = %2589, %2594
  store i32 0, ptr %235, align 4
  br label %2607

2599:                                             ; preds = %2563
  %2600 = load ptr, ptr %236, align 8
  %2601 = getelementptr inbounds %struct.mz_zip_archive, ptr %2600, i32 0, i32 2
  %2602 = load i32, ptr %2601, align 8
  %2603 = add i32 %2602, 1
  store i32 %2603, ptr %2601, align 8
  %2604 = load i64, ptr %246, align 8
  %2605 = load ptr, ptr %236, align 8
  %2606 = getelementptr inbounds %struct.mz_zip_archive, ptr %2605, i32 0, i32 0
  store i64 %2604, ptr %2606, align 8
  store i32 1, ptr %235, align 4
  br label %2607

2607:                                             ; preds = %2599, %2598, %2494, %2454, %2348, %2247, %2235, %2209, %2084, %1965, %1846, %1727, %1619, %1331, %1275, %1213, %1178, %1135, %1096, %1050, %1042, %868, %837, %785, %756, %713, %575, %542, %517, %509, %494, %473, %412, %375, %330, %304
  %2608 = load i32, ptr %235, align 4
  ret i32 %2608
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_writer_update_zip64_extension_block(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %6, ptr noundef %7) #0 {
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i32, align 4
  %26 = alloca ptr, align 8
  %27 = alloca ptr, align 8
  %28 = alloca i64, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca ptr, align 8
  %32 = alloca ptr, align 8
  %33 = alloca ptr, align 8
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  %36 = alloca ptr, align 8
  %37 = alloca i16, align 2
  %38 = alloca ptr, align 8
  %39 = alloca i16, align 2
  %40 = alloca ptr, align 8
  %41 = alloca i16, align 2
  %42 = alloca ptr, align 8
  %43 = alloca i32, align 4
  %44 = alloca ptr, align 8
  %45 = alloca i32, align 4
  %46 = alloca ptr, align 8
  %47 = alloca i64, align 8
  %48 = alloca ptr, align 8
  %49 = alloca i32, align 4
  %50 = alloca ptr, align 8
  %51 = alloca i32, align 4
  %52 = alloca ptr, align 8
  %53 = alloca i64, align 8
  %54 = alloca ptr, align 8
  %55 = alloca i32, align 4
  %56 = alloca ptr, align 8
  %57 = alloca i32, align 4
  %58 = alloca ptr, align 8
  %59 = alloca i64, align 8
  %60 = alloca ptr, align 8
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  %63 = alloca ptr, align 8
  %64 = alloca ptr, align 8
  %65 = alloca i64, align 8
  %66 = alloca i32, align 4
  %67 = alloca ptr, align 8
  %68 = alloca i32, align 4
  %69 = alloca ptr, align 8
  %70 = alloca i32, align 4
  %71 = alloca ptr, align 8
  %72 = alloca i32, align 4
  %73 = alloca ptr, align 8
  %74 = alloca i32, align 4
  %75 = alloca ptr, align 8
  %76 = alloca i32, align 4
  %77 = alloca i32, align 4
  %78 = alloca ptr, align 8
  %79 = alloca ptr, align 8
  %80 = alloca ptr, align 8
  %81 = alloca i32, align 4
  %82 = alloca ptr, align 8
  %83 = alloca ptr, align 8
  %84 = alloca ptr, align 8
  %85 = alloca ptr, align 8
  %86 = alloca [64 x i8], align 16
  %87 = alloca ptr, align 8
  %88 = alloca i32, align 4
  %89 = alloca ptr, align 8
  %90 = alloca i32, align 4
  %91 = alloca i32, align 4
  %92 = alloca i32, align 4
  store ptr %0, ptr %78, align 8
  store ptr %1, ptr %79, align 8
  store ptr %2, ptr %80, align 8
  store i32 %3, ptr %81, align 4
  store ptr %4, ptr %82, align 8
  store ptr %5, ptr %83, align 8
  store ptr %6, ptr %84, align 8
  store ptr %7, ptr %85, align 8
  %93 = load ptr, ptr %79, align 8
  %94 = load ptr, ptr %78, align 8
  %95 = load i32, ptr %81, align 4
  %96 = add i32 %95, 64
  %97 = zext i32 %96 to i64
  store ptr %93, ptr %10, align 8
  store ptr %94, ptr %11, align 8
  store i64 %97, ptr %12, align 8
  store i32 0, ptr %13, align 4
  %98 = load i64, ptr %12, align 8
  %99 = load ptr, ptr %11, align 8
  %100 = getelementptr inbounds %struct.mz_zip_array, ptr %99, i32 0, i32 2
  %101 = load i64, ptr %100, align 8
  %102 = icmp ugt i64 %98, %101
  br i1 %102, label %103, label %112

103:                                              ; preds = %8
  %104 = load ptr, ptr %10, align 8
  %105 = load ptr, ptr %11, align 8
  %106 = load i64, ptr %12, align 8
  %107 = load i32, ptr %13, align 4
  %108 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %104, ptr noundef %105, i64 noundef %106, i32 noundef %107)
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %103
  store i32 0, ptr %9, align 4
  br label %113

111:                                              ; preds = %103
  br label %112

112:                                              ; preds = %111, %8
  store i32 1, ptr %9, align 4
  br label %113

113:                                              ; preds = %110, %112
  %114 = load i32, ptr %9, align 4
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %125, label %116

116:                                              ; preds = %113
  %117 = load ptr, ptr %79, align 8
  store ptr %117, ptr %67, align 8
  store i32 16, ptr %68, align 4
  %118 = load ptr, ptr %67, align 8
  %119 = icmp ne ptr %118, null
  br i1 %119, label %120, label %124

120:                                              ; preds = %116
  %121 = load i32, ptr %68, align 4
  %122 = load ptr, ptr %67, align 8
  %123 = getelementptr inbounds %struct.mz_zip_archive, ptr %122, i32 0, i32 5
  store i32 %121, ptr %123, align 4
  br label %124

124:                                              ; preds = %116, %120
  store i32 0, ptr %77, align 4
  br label %629

125:                                              ; preds = %113
  %126 = load ptr, ptr %79, align 8
  %127 = load ptr, ptr %78, align 8
  store ptr %126, ptr %63, align 8
  store ptr %127, ptr %64, align 8
  store i64 0, ptr %65, align 8
  store i32 0, ptr %66, align 4
  %128 = load i64, ptr %65, align 8
  %129 = load ptr, ptr %64, align 8
  %130 = getelementptr inbounds %struct.mz_zip_array, ptr %129, i32 0, i32 2
  %131 = load i64, ptr %130, align 8
  %132 = icmp ugt i64 %128, %131
  br i1 %132, label %133, label %142

133:                                              ; preds = %125
  %134 = load ptr, ptr %63, align 8
  %135 = load ptr, ptr %64, align 8
  %136 = load i64, ptr %65, align 8
  %137 = load i32, ptr %66, align 4
  %138 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %134, ptr noundef %135, i64 noundef %136, i32 noundef %137)
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %141, label %140

140:                                              ; preds = %133
  store i32 0, ptr %62, align 4
  br label %146

141:                                              ; preds = %133
  br label %142

142:                                              ; preds = %141, %125
  %143 = load i64, ptr %65, align 8
  %144 = load ptr, ptr %64, align 8
  %145 = getelementptr inbounds %struct.mz_zip_array, ptr %144, i32 0, i32 1
  store i64 %143, ptr %145, align 8
  store i32 1, ptr %62, align 4
  br label %146

146:                                              ; preds = %140, %142
  %147 = load i32, ptr %62, align 4
  %148 = load ptr, ptr %83, align 8
  %149 = icmp ne ptr %148, null
  br i1 %149, label %159, label %150

150:                                              ; preds = %146
  %151 = load ptr, ptr %82, align 8
  %152 = icmp ne ptr %151, null
  br i1 %152, label %159, label %153

153:                                              ; preds = %150
  %154 = load ptr, ptr %84, align 8
  %155 = icmp ne ptr %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %153
  %157 = load ptr, ptr %85, align 8
  %158 = icmp ne ptr %157, null
  br i1 %158, label %159, label %471

159:                                              ; preds = %156, %153, %150, %146
  %160 = getelementptr inbounds [64 x i8], ptr %86, i64 0, i64 0
  store ptr %160, ptr %87, align 8
  %161 = load ptr, ptr %87, align 8
  store ptr %161, ptr %36, align 8
  store i16 1, ptr %37, align 2
  %162 = load i16, ptr %37, align 2
  %163 = trunc i16 %162 to i8
  %164 = load ptr, ptr %36, align 8
  store i8 %163, ptr %164, align 1
  %165 = load i16, ptr %37, align 2
  %166 = zext i16 %165 to i32
  %167 = ashr i32 %166, 8
  %168 = trunc i32 %167 to i8
  %169 = load ptr, ptr %36, align 8
  %170 = getelementptr inbounds i8, ptr %169, i64 1
  store i8 %168, ptr %170, align 1
  %171 = load ptr, ptr %87, align 8
  %172 = getelementptr inbounds i8, ptr %171, i64 2
  store ptr %172, ptr %38, align 8
  store i16 0, ptr %39, align 2
  %173 = load i16, ptr %39, align 2
  %174 = trunc i16 %173 to i8
  %175 = load ptr, ptr %38, align 8
  store i8 %174, ptr %175, align 1
  %176 = load i16, ptr %39, align 2
  %177 = zext i16 %176 to i32
  %178 = ashr i32 %177, 8
  %179 = trunc i32 %178 to i8
  %180 = load ptr, ptr %38, align 8
  %181 = getelementptr inbounds i8, ptr %180, i64 1
  store i8 %179, ptr %181, align 1
  %182 = load ptr, ptr %87, align 8
  %183 = getelementptr inbounds i8, ptr %182, i64 4
  store ptr %183, ptr %87, align 8
  %184 = load ptr, ptr %83, align 8
  %185 = icmp ne ptr %184, null
  br i1 %185, label %186, label %236

186:                                              ; preds = %159
  %187 = load ptr, ptr %87, align 8
  %188 = load ptr, ptr %83, align 8
  %189 = load i64, ptr %188, align 8
  store ptr %187, ptr %46, align 8
  store i64 %189, ptr %47, align 8
  %190 = load ptr, ptr %46, align 8
  %191 = load i64, ptr %47, align 8
  %192 = trunc i64 %191 to i32
  store ptr %190, ptr %42, align 8
  store i32 %192, ptr %43, align 4
  %193 = load i32, ptr %43, align 4
  %194 = trunc i32 %193 to i8
  %195 = load ptr, ptr %42, align 8
  store i8 %194, ptr %195, align 1
  %196 = load i32, ptr %43, align 4
  %197 = lshr i32 %196, 8
  %198 = trunc i32 %197 to i8
  %199 = load ptr, ptr %42, align 8
  %200 = getelementptr inbounds i8, ptr %199, i64 1
  store i8 %198, ptr %200, align 1
  %201 = load i32, ptr %43, align 4
  %202 = lshr i32 %201, 16
  %203 = trunc i32 %202 to i8
  %204 = load ptr, ptr %42, align 8
  %205 = getelementptr inbounds i8, ptr %204, i64 2
  store i8 %203, ptr %205, align 1
  %206 = load i32, ptr %43, align 4
  %207 = lshr i32 %206, 24
  %208 = trunc i32 %207 to i8
  %209 = load ptr, ptr %42, align 8
  %210 = getelementptr inbounds i8, ptr %209, i64 3
  store i8 %208, ptr %210, align 1
  %211 = load ptr, ptr %46, align 8
  %212 = getelementptr inbounds i8, ptr %211, i64 4
  %213 = load i64, ptr %47, align 8
  %214 = lshr i64 %213, 32
  %215 = trunc i64 %214 to i32
  store ptr %212, ptr %44, align 8
  store i32 %215, ptr %45, align 4
  %216 = load i32, ptr %45, align 4
  %217 = trunc i32 %216 to i8
  %218 = load ptr, ptr %44, align 8
  store i8 %217, ptr %218, align 1
  %219 = load i32, ptr %45, align 4
  %220 = lshr i32 %219, 8
  %221 = trunc i32 %220 to i8
  %222 = load ptr, ptr %44, align 8
  %223 = getelementptr inbounds i8, ptr %222, i64 1
  store i8 %221, ptr %223, align 1
  %224 = load i32, ptr %45, align 4
  %225 = lshr i32 %224, 16
  %226 = trunc i32 %225 to i8
  %227 = load ptr, ptr %44, align 8
  %228 = getelementptr inbounds i8, ptr %227, i64 2
  store i8 %226, ptr %228, align 1
  %229 = load i32, ptr %45, align 4
  %230 = lshr i32 %229, 24
  %231 = trunc i32 %230 to i8
  %232 = load ptr, ptr %44, align 8
  %233 = getelementptr inbounds i8, ptr %232, i64 3
  store i8 %231, ptr %233, align 1
  %234 = load ptr, ptr %87, align 8
  %235 = getelementptr inbounds i8, ptr %234, i64 8
  store ptr %235, ptr %87, align 8
  br label %236

236:                                              ; preds = %186, %159
  %237 = load ptr, ptr %82, align 8
  %238 = icmp ne ptr %237, null
  br i1 %238, label %239, label %289

239:                                              ; preds = %236
  %240 = load ptr, ptr %87, align 8
  %241 = load ptr, ptr %82, align 8
  %242 = load i64, ptr %241, align 8
  store ptr %240, ptr %52, align 8
  store i64 %242, ptr %53, align 8
  %243 = load ptr, ptr %52, align 8
  %244 = load i64, ptr %53, align 8
  %245 = trunc i64 %244 to i32
  store ptr %243, ptr %48, align 8
  store i32 %245, ptr %49, align 4
  %246 = load i32, ptr %49, align 4
  %247 = trunc i32 %246 to i8
  %248 = load ptr, ptr %48, align 8
  store i8 %247, ptr %248, align 1
  %249 = load i32, ptr %49, align 4
  %250 = lshr i32 %249, 8
  %251 = trunc i32 %250 to i8
  %252 = load ptr, ptr %48, align 8
  %253 = getelementptr inbounds i8, ptr %252, i64 1
  store i8 %251, ptr %253, align 1
  %254 = load i32, ptr %49, align 4
  %255 = lshr i32 %254, 16
  %256 = trunc i32 %255 to i8
  %257 = load ptr, ptr %48, align 8
  %258 = getelementptr inbounds i8, ptr %257, i64 2
  store i8 %256, ptr %258, align 1
  %259 = load i32, ptr %49, align 4
  %260 = lshr i32 %259, 24
  %261 = trunc i32 %260 to i8
  %262 = load ptr, ptr %48, align 8
  %263 = getelementptr inbounds i8, ptr %262, i64 3
  store i8 %261, ptr %263, align 1
  %264 = load ptr, ptr %52, align 8
  %265 = getelementptr inbounds i8, ptr %264, i64 4
  %266 = load i64, ptr %53, align 8
  %267 = lshr i64 %266, 32
  %268 = trunc i64 %267 to i32
  store ptr %265, ptr %50, align 8
  store i32 %268, ptr %51, align 4
  %269 = load i32, ptr %51, align 4
  %270 = trunc i32 %269 to i8
  %271 = load ptr, ptr %50, align 8
  store i8 %270, ptr %271, align 1
  %272 = load i32, ptr %51, align 4
  %273 = lshr i32 %272, 8
  %274 = trunc i32 %273 to i8
  %275 = load ptr, ptr %50, align 8
  %276 = getelementptr inbounds i8, ptr %275, i64 1
  store i8 %274, ptr %276, align 1
  %277 = load i32, ptr %51, align 4
  %278 = lshr i32 %277, 16
  %279 = trunc i32 %278 to i8
  %280 = load ptr, ptr %50, align 8
  %281 = getelementptr inbounds i8, ptr %280, i64 2
  store i8 %279, ptr %281, align 1
  %282 = load i32, ptr %51, align 4
  %283 = lshr i32 %282, 24
  %284 = trunc i32 %283 to i8
  %285 = load ptr, ptr %50, align 8
  %286 = getelementptr inbounds i8, ptr %285, i64 3
  store i8 %284, ptr %286, align 1
  %287 = load ptr, ptr %87, align 8
  %288 = getelementptr inbounds i8, ptr %287, i64 8
  store ptr %288, ptr %87, align 8
  br label %289

289:                                              ; preds = %239, %236
  %290 = load ptr, ptr %84, align 8
  %291 = icmp ne ptr %290, null
  br i1 %291, label %292, label %342

292:                                              ; preds = %289
  %293 = load ptr, ptr %87, align 8
  %294 = load ptr, ptr %84, align 8
  %295 = load i64, ptr %294, align 8
  store ptr %293, ptr %58, align 8
  store i64 %295, ptr %59, align 8
  %296 = load ptr, ptr %58, align 8
  %297 = load i64, ptr %59, align 8
  %298 = trunc i64 %297 to i32
  store ptr %296, ptr %54, align 8
  store i32 %298, ptr %55, align 4
  %299 = load i32, ptr %55, align 4
  %300 = trunc i32 %299 to i8
  %301 = load ptr, ptr %54, align 8
  store i8 %300, ptr %301, align 1
  %302 = load i32, ptr %55, align 4
  %303 = lshr i32 %302, 8
  %304 = trunc i32 %303 to i8
  %305 = load ptr, ptr %54, align 8
  %306 = getelementptr inbounds i8, ptr %305, i64 1
  store i8 %304, ptr %306, align 1
  %307 = load i32, ptr %55, align 4
  %308 = lshr i32 %307, 16
  %309 = trunc i32 %308 to i8
  %310 = load ptr, ptr %54, align 8
  %311 = getelementptr inbounds i8, ptr %310, i64 2
  store i8 %309, ptr %311, align 1
  %312 = load i32, ptr %55, align 4
  %313 = lshr i32 %312, 24
  %314 = trunc i32 %313 to i8
  %315 = load ptr, ptr %54, align 8
  %316 = getelementptr inbounds i8, ptr %315, i64 3
  store i8 %314, ptr %316, align 1
  %317 = load ptr, ptr %58, align 8
  %318 = getelementptr inbounds i8, ptr %317, i64 4
  %319 = load i64, ptr %59, align 8
  %320 = lshr i64 %319, 32
  %321 = trunc i64 %320 to i32
  store ptr %318, ptr %56, align 8
  store i32 %321, ptr %57, align 4
  %322 = load i32, ptr %57, align 4
  %323 = trunc i32 %322 to i8
  %324 = load ptr, ptr %56, align 8
  store i8 %323, ptr %324, align 1
  %325 = load i32, ptr %57, align 4
  %326 = lshr i32 %325, 8
  %327 = trunc i32 %326 to i8
  %328 = load ptr, ptr %56, align 8
  %329 = getelementptr inbounds i8, ptr %328, i64 1
  store i8 %327, ptr %329, align 1
  %330 = load i32, ptr %57, align 4
  %331 = lshr i32 %330, 16
  %332 = trunc i32 %331 to i8
  %333 = load ptr, ptr %56, align 8
  %334 = getelementptr inbounds i8, ptr %333, i64 2
  store i8 %332, ptr %334, align 1
  %335 = load i32, ptr %57, align 4
  %336 = lshr i32 %335, 24
  %337 = trunc i32 %336 to i8
  %338 = load ptr, ptr %56, align 8
  %339 = getelementptr inbounds i8, ptr %338, i64 3
  store i8 %337, ptr %339, align 1
  %340 = load ptr, ptr %87, align 8
  %341 = getelementptr inbounds i8, ptr %340, i64 8
  store ptr %341, ptr %87, align 8
  br label %342

342:                                              ; preds = %292, %289
  %343 = load ptr, ptr %85, align 8
  %344 = icmp ne ptr %343, null
  br i1 %344, label %345, label %369

345:                                              ; preds = %342
  %346 = load ptr, ptr %87, align 8
  %347 = load ptr, ptr %85, align 8
  %348 = load i32, ptr %347, align 4
  store ptr %346, ptr %60, align 8
  store i32 %348, ptr %61, align 4
  %349 = load i32, ptr %61, align 4
  %350 = trunc i32 %349 to i8
  %351 = load ptr, ptr %60, align 8
  store i8 %350, ptr %351, align 1
  %352 = load i32, ptr %61, align 4
  %353 = lshr i32 %352, 8
  %354 = trunc i32 %353 to i8
  %355 = load ptr, ptr %60, align 8
  %356 = getelementptr inbounds i8, ptr %355, i64 1
  store i8 %354, ptr %356, align 1
  %357 = load i32, ptr %61, align 4
  %358 = lshr i32 %357, 16
  %359 = trunc i32 %358 to i8
  %360 = load ptr, ptr %60, align 8
  %361 = getelementptr inbounds i8, ptr %360, i64 2
  store i8 %359, ptr %361, align 1
  %362 = load i32, ptr %61, align 4
  %363 = lshr i32 %362, 24
  %364 = trunc i32 %363 to i8
  %365 = load ptr, ptr %60, align 8
  %366 = getelementptr inbounds i8, ptr %365, i64 3
  store i8 %364, ptr %366, align 1
  %367 = load ptr, ptr %87, align 8
  %368 = getelementptr inbounds i8, ptr %367, i64 4
  store ptr %368, ptr %87, align 8
  br label %369

369:                                              ; preds = %345, %342
  %370 = getelementptr inbounds [64 x i8], ptr %86, i64 0, i64 0
  %371 = getelementptr inbounds i8, ptr %370, i64 2
  %372 = load ptr, ptr %87, align 8
  %373 = getelementptr inbounds [64 x i8], ptr %86, i64 0, i64 0
  %374 = ptrtoint ptr %372 to i64
  %375 = ptrtoint ptr %373 to i64
  %376 = sub i64 %374, %375
  %377 = sub i64 %376, 4
  %378 = trunc i64 %377 to i16
  store ptr %371, ptr %40, align 8
  store i16 %378, ptr %41, align 2
  %379 = load i16, ptr %41, align 2
  %380 = trunc i16 %379 to i8
  %381 = load ptr, ptr %40, align 8
  store i8 %380, ptr %381, align 1
  %382 = load i16, ptr %41, align 2
  %383 = zext i16 %382 to i32
  %384 = ashr i32 %383, 8
  %385 = trunc i32 %384 to i8
  %386 = load ptr, ptr %40, align 8
  %387 = getelementptr inbounds i8, ptr %386, i64 1
  store i8 %385, ptr %387, align 1
  %388 = load ptr, ptr %79, align 8
  %389 = load ptr, ptr %78, align 8
  %390 = getelementptr inbounds [64 x i8], ptr %86, i64 0, i64 0
  %391 = load ptr, ptr %87, align 8
  %392 = getelementptr inbounds [64 x i8], ptr %86, i64 0, i64 0
  %393 = ptrtoint ptr %391 to i64
  %394 = ptrtoint ptr %392 to i64
  %395 = sub i64 %393, %394
  store ptr %388, ptr %20, align 8
  store ptr %389, ptr %21, align 8
  store ptr %390, ptr %22, align 8
  store i64 %395, ptr %23, align 8
  %396 = load ptr, ptr %21, align 8
  %397 = getelementptr inbounds %struct.mz_zip_array, ptr %396, i32 0, i32 1
  %398 = load i64, ptr %397, align 8
  store i64 %398, ptr %24, align 8
  %399 = load ptr, ptr %20, align 8
  %400 = load ptr, ptr %21, align 8
  %401 = load i64, ptr %24, align 8
  %402 = load i64, ptr %23, align 8
  %403 = add i64 %401, %402
  store ptr %399, ptr %15, align 8
  store ptr %400, ptr %16, align 8
  store i64 %403, ptr %17, align 8
  store i32 1, ptr %18, align 4
  %404 = load i64, ptr %17, align 8
  %405 = load ptr, ptr %16, align 8
  %406 = getelementptr inbounds %struct.mz_zip_array, ptr %405, i32 0, i32 2
  %407 = load i64, ptr %406, align 8
  %408 = icmp ugt i64 %404, %407
  br i1 %408, label %409, label %418

409:                                              ; preds = %369
  %410 = load ptr, ptr %15, align 8
  %411 = load ptr, ptr %16, align 8
  %412 = load i64, ptr %17, align 8
  %413 = load i32, ptr %18, align 4
  %414 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %410, ptr noundef %411, i64 noundef %412, i32 noundef %413)
  %415 = icmp ne i32 %414, 0
  br i1 %415, label %417, label %416

416:                                              ; preds = %409
  store i32 0, ptr %14, align 4
  br label %422

417:                                              ; preds = %409
  br label %418

418:                                              ; preds = %417, %369
  %419 = load i64, ptr %17, align 8
  %420 = load ptr, ptr %16, align 8
  %421 = getelementptr inbounds %struct.mz_zip_array, ptr %420, i32 0, i32 1
  store i64 %419, ptr %421, align 8
  store i32 1, ptr %14, align 4
  br label %422

422:                                              ; preds = %418, %416
  %423 = load i32, ptr %14, align 4
  %424 = icmp ne i32 %423, 0
  br i1 %424, label %426, label %425

425:                                              ; preds = %422
  store i32 0, ptr %19, align 4
  br label %458

426:                                              ; preds = %422
  %427 = load i64, ptr %23, align 8
  %428 = icmp ugt i64 %427, 0
  br i1 %428, label %429, label %457

429:                                              ; preds = %426
  %430 = load ptr, ptr %21, align 8
  %431 = load ptr, ptr %430, align 8
  %432 = load i64, ptr %24, align 8
  %433 = load ptr, ptr %21, align 8
  %434 = getelementptr inbounds %struct.mz_zip_array, ptr %433, i32 0, i32 3
  %435 = load i32, ptr %434, align 8
  %436 = zext i32 %435 to i64
  %437 = mul i64 %432, %436
  %438 = getelementptr inbounds i8, ptr %431, i64 %437
  %439 = load ptr, ptr %22, align 8
  %440 = load i64, ptr %23, align 8
  %441 = load ptr, ptr %21, align 8
  %442 = getelementptr inbounds %struct.mz_zip_array, ptr %441, i32 0, i32 3
  %443 = load i32, ptr %442, align 8
  %444 = zext i32 %443 to i64
  %445 = mul i64 %440, %444
  %446 = load ptr, ptr %21, align 8
  %447 = load ptr, ptr %446, align 8
  %448 = load i64, ptr %24, align 8
  %449 = load ptr, ptr %21, align 8
  %450 = getelementptr inbounds %struct.mz_zip_array, ptr %449, i32 0, i32 3
  %451 = load i32, ptr %450, align 8
  %452 = zext i32 %451 to i64
  %453 = mul i64 %448, %452
  %454 = getelementptr inbounds i8, ptr %447, i64 %453
  %455 = call i64 @llvm.objectsize.i64.p0(ptr %454, i1 false, i1 true, i1 false)
  %456 = call ptr @__memcpy_chk(ptr noundef %438, ptr noundef %439, i64 noundef %445, i64 noundef %455) #11
  br label %457

457:                                              ; preds = %429, %426
  store i32 1, ptr %19, align 4
  br label %458

458:                                              ; preds = %425, %457
  %459 = load i32, ptr %19, align 4
  %460 = icmp ne i32 %459, 0
  br i1 %460, label %470, label %461

461:                                              ; preds = %458
  %462 = load ptr, ptr %79, align 8
  store ptr %462, ptr %69, align 8
  store i32 16, ptr %70, align 4
  %463 = load ptr, ptr %69, align 8
  %464 = icmp ne ptr %463, null
  br i1 %464, label %465, label %469

465:                                              ; preds = %461
  %466 = load i32, ptr %70, align 4
  %467 = load ptr, ptr %69, align 8
  %468 = getelementptr inbounds %struct.mz_zip_archive, ptr %467, i32 0, i32 5
  store i32 %466, ptr %468, align 4
  br label %469

469:                                              ; preds = %461, %465
  store i32 0, ptr %77, align 4
  br label %629

470:                                              ; preds = %458
  br label %471

471:                                              ; preds = %470, %156
  %472 = load ptr, ptr %80, align 8
  %473 = icmp ne ptr %472, null
  br i1 %473, label %474, label %628

474:                                              ; preds = %471
  %475 = load i32, ptr %81, align 4
  %476 = icmp ne i32 %475, 0
  br i1 %476, label %477, label %628

477:                                              ; preds = %474
  %478 = load i32, ptr %81, align 4
  store i32 %478, ptr %88, align 4
  %479 = load ptr, ptr %80, align 8
  store ptr %479, ptr %89, align 8
  br label %480

480:                                              ; preds = %624, %477
  %481 = load i32, ptr %88, align 4
  %482 = zext i32 %481 to i64
  %483 = icmp ult i64 %482, 4
  br i1 %483, label %484, label %493

484:                                              ; preds = %480
  %485 = load ptr, ptr %79, align 8
  store ptr %485, ptr %71, align 8
  store i32 9, ptr %72, align 4
  %486 = load ptr, ptr %71, align 8
  %487 = icmp ne ptr %486, null
  br i1 %487, label %488, label %492

488:                                              ; preds = %484
  %489 = load i32, ptr %72, align 4
  %490 = load ptr, ptr %71, align 8
  %491 = getelementptr inbounds %struct.mz_zip_archive, ptr %490, i32 0, i32 5
  store i32 %489, ptr %491, align 4
  br label %492

492:                                              ; preds = %484, %488
  store i32 0, ptr %77, align 4
  br label %629

493:                                              ; preds = %480
  %494 = load ptr, ptr %89, align 8
  %495 = getelementptr inbounds i8, ptr %494, i64 0
  %496 = load i8, ptr %495, align 1
  %497 = zext i8 %496 to i32
  %498 = load ptr, ptr %89, align 8
  %499 = getelementptr inbounds i8, ptr %498, i64 1
  %500 = load i8, ptr %499, align 1
  %501 = zext i8 %500 to i32
  %502 = shl i32 %501, 8
  %503 = or i32 %497, %502
  store i32 %503, ptr %90, align 4
  %504 = load ptr, ptr %89, align 8
  %505 = getelementptr inbounds i8, ptr %504, i64 2
  %506 = getelementptr inbounds i8, ptr %505, i64 0
  %507 = load i8, ptr %506, align 1
  %508 = zext i8 %507 to i32
  %509 = load ptr, ptr %89, align 8
  %510 = getelementptr inbounds i8, ptr %509, i64 2
  %511 = getelementptr inbounds i8, ptr %510, i64 1
  %512 = load i8, ptr %511, align 1
  %513 = zext i8 %512 to i32
  %514 = shl i32 %513, 8
  %515 = or i32 %508, %514
  store i32 %515, ptr %91, align 4
  %516 = load i32, ptr %91, align 4
  %517 = zext i32 %516 to i64
  %518 = add i64 %517, 4
  %519 = trunc i64 %518 to i32
  store i32 %519, ptr %92, align 4
  %520 = load i32, ptr %92, align 4
  %521 = load i32, ptr %88, align 4
  %522 = icmp ugt i32 %520, %521
  br i1 %522, label %523, label %532

523:                                              ; preds = %493
  %524 = load ptr, ptr %79, align 8
  store ptr %524, ptr %73, align 8
  store i32 9, ptr %74, align 4
  %525 = load ptr, ptr %73, align 8
  %526 = icmp ne ptr %525, null
  br i1 %526, label %527, label %531

527:                                              ; preds = %523
  %528 = load i32, ptr %74, align 4
  %529 = load ptr, ptr %73, align 8
  %530 = getelementptr inbounds %struct.mz_zip_archive, ptr %529, i32 0, i32 5
  store i32 %528, ptr %530, align 4
  br label %531

531:                                              ; preds = %523, %527
  store i32 0, ptr %77, align 4
  br label %629

532:                                              ; preds = %493
  %533 = load i32, ptr %90, align 4
  %534 = icmp ne i32 %533, 1
  br i1 %534, label %535, label %616

535:                                              ; preds = %532
  %536 = load ptr, ptr %79, align 8
  %537 = load ptr, ptr %78, align 8
  %538 = load ptr, ptr %89, align 8
  %539 = load i32, ptr %92, align 4
  %540 = zext i32 %539 to i64
  store ptr %536, ptr %31, align 8
  store ptr %537, ptr %32, align 8
  store ptr %538, ptr %33, align 8
  store i64 %540, ptr %34, align 8
  %541 = load ptr, ptr %32, align 8
  %542 = getelementptr inbounds %struct.mz_zip_array, ptr %541, i32 0, i32 1
  %543 = load i64, ptr %542, align 8
  store i64 %543, ptr %35, align 8
  %544 = load ptr, ptr %31, align 8
  %545 = load ptr, ptr %32, align 8
  %546 = load i64, ptr %35, align 8
  %547 = load i64, ptr %34, align 8
  %548 = add i64 %546, %547
  store ptr %544, ptr %26, align 8
  store ptr %545, ptr %27, align 8
  store i64 %548, ptr %28, align 8
  store i32 1, ptr %29, align 4
  %549 = load i64, ptr %28, align 8
  %550 = load ptr, ptr %27, align 8
  %551 = getelementptr inbounds %struct.mz_zip_array, ptr %550, i32 0, i32 2
  %552 = load i64, ptr %551, align 8
  %553 = icmp ugt i64 %549, %552
  br i1 %553, label %554, label %563

554:                                              ; preds = %535
  %555 = load ptr, ptr %26, align 8
  %556 = load ptr, ptr %27, align 8
  %557 = load i64, ptr %28, align 8
  %558 = load i32, ptr %29, align 4
  %559 = call i32 @mz_zip_array_ensure_capacity(ptr noundef %555, ptr noundef %556, i64 noundef %557, i32 noundef %558)
  %560 = icmp ne i32 %559, 0
  br i1 %560, label %562, label %561

561:                                              ; preds = %554
  store i32 0, ptr %25, align 4
  br label %567

562:                                              ; preds = %554
  br label %563

563:                                              ; preds = %562, %535
  %564 = load i64, ptr %28, align 8
  %565 = load ptr, ptr %27, align 8
  %566 = getelementptr inbounds %struct.mz_zip_array, ptr %565, i32 0, i32 1
  store i64 %564, ptr %566, align 8
  store i32 1, ptr %25, align 4
  br label %567

567:                                              ; preds = %563, %561
  %568 = load i32, ptr %25, align 4
  %569 = icmp ne i32 %568, 0
  br i1 %569, label %571, label %570

570:                                              ; preds = %567
  store i32 0, ptr %30, align 4
  br label %603

571:                                              ; preds = %567
  %572 = load i64, ptr %34, align 8
  %573 = icmp ugt i64 %572, 0
  br i1 %573, label %574, label %602

574:                                              ; preds = %571
  %575 = load ptr, ptr %32, align 8
  %576 = load ptr, ptr %575, align 8
  %577 = load i64, ptr %35, align 8
  %578 = load ptr, ptr %32, align 8
  %579 = getelementptr inbounds %struct.mz_zip_array, ptr %578, i32 0, i32 3
  %580 = load i32, ptr %579, align 8
  %581 = zext i32 %580 to i64
  %582 = mul i64 %577, %581
  %583 = getelementptr inbounds i8, ptr %576, i64 %582
  %584 = load ptr, ptr %33, align 8
  %585 = load i64, ptr %34, align 8
  %586 = load ptr, ptr %32, align 8
  %587 = getelementptr inbounds %struct.mz_zip_array, ptr %586, i32 0, i32 3
  %588 = load i32, ptr %587, align 8
  %589 = zext i32 %588 to i64
  %590 = mul i64 %585, %589
  %591 = load ptr, ptr %32, align 8
  %592 = load ptr, ptr %591, align 8
  %593 = load i64, ptr %35, align 8
  %594 = load ptr, ptr %32, align 8
  %595 = getelementptr inbounds %struct.mz_zip_array, ptr %594, i32 0, i32 3
  %596 = load i32, ptr %595, align 8
  %597 = zext i32 %596 to i64
  %598 = mul i64 %593, %597
  %599 = getelementptr inbounds i8, ptr %592, i64 %598
  %600 = call i64 @llvm.objectsize.i64.p0(ptr %599, i1 false, i1 true, i1 false)
  %601 = call ptr @__memcpy_chk(ptr noundef %583, ptr noundef %584, i64 noundef %590, i64 noundef %600) #11
  br label %602

602:                                              ; preds = %574, %571
  store i32 1, ptr %30, align 4
  br label %603

603:                                              ; preds = %570, %602
  %604 = load i32, ptr %30, align 4
  %605 = icmp ne i32 %604, 0
  br i1 %605, label %615, label %606

606:                                              ; preds = %603
  %607 = load ptr, ptr %79, align 8
  store ptr %607, ptr %75, align 8
  store i32 16, ptr %76, align 4
  %608 = load ptr, ptr %75, align 8
  %609 = icmp ne ptr %608, null
  br i1 %609, label %610, label %614

610:                                              ; preds = %606
  %611 = load i32, ptr %76, align 4
  %612 = load ptr, ptr %75, align 8
  %613 = getelementptr inbounds %struct.mz_zip_archive, ptr %612, i32 0, i32 5
  store i32 %611, ptr %613, align 4
  br label %614

614:                                              ; preds = %606, %610
  store i32 0, ptr %77, align 4
  br label %629

615:                                              ; preds = %603
  br label %616

616:                                              ; preds = %615, %532
  %617 = load i32, ptr %92, align 4
  %618 = load ptr, ptr %89, align 8
  %619 = zext i32 %617 to i64
  %620 = getelementptr inbounds i8, ptr %618, i64 %619
  store ptr %620, ptr %89, align 8
  %621 = load i32, ptr %92, align 4
  %622 = load i32, ptr %88, align 4
  %623 = sub i32 %622, %621
  store i32 %623, ptr %88, align 4
  br label %624

624:                                              ; preds = %616
  %625 = load i32, ptr %88, align 4
  %626 = icmp ne i32 %625, 0
  br i1 %626, label %480, label %627, !llvm.loop !129

627:                                              ; preds = %624
  br label %628

628:                                              ; preds = %627, %474, %471
  store i32 1, ptr %77, align 4
  br label %629

629:                                              ; preds = %628, %614, %531, %492, %469, %124
  %630 = load i32, ptr %77, align 4
  ret i32 %630
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_finalize_archive(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i16, align 2
  %4 = alloca ptr, align 8
  %5 = alloca i16, align 2
  %6 = alloca ptr, align 8
  %7 = alloca i16, align 2
  %8 = alloca ptr, align 8
  %9 = alloca i16, align 2
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca i64, align 8
  %16 = alloca ptr, align 8
  %17 = alloca i32, align 4
  %18 = alloca ptr, align 8
  %19 = alloca i32, align 4
  %20 = alloca ptr, align 8
  %21 = alloca i64, align 8
  %22 = alloca ptr, align 8
  %23 = alloca i32, align 4
  %24 = alloca ptr, align 8
  %25 = alloca i32, align 4
  %26 = alloca ptr, align 8
  %27 = alloca i64, align 8
  %28 = alloca ptr, align 8
  %29 = alloca i32, align 4
  %30 = alloca ptr, align 8
  %31 = alloca i32, align 4
  %32 = alloca ptr, align 8
  %33 = alloca i64, align 8
  %34 = alloca ptr, align 8
  %35 = alloca i32, align 4
  %36 = alloca ptr, align 8
  %37 = alloca i32, align 4
  %38 = alloca ptr, align 8
  %39 = alloca i64, align 8
  %40 = alloca ptr, align 8
  %41 = alloca i32, align 4
  %42 = alloca ptr, align 8
  %43 = alloca i32, align 4
  %44 = alloca ptr, align 8
  %45 = alloca i64, align 8
  %46 = alloca ptr, align 8
  %47 = alloca i32, align 4
  %48 = alloca ptr, align 8
  %49 = alloca i32, align 4
  %50 = alloca ptr, align 8
  %51 = alloca i32, align 4
  %52 = alloca ptr, align 8
  %53 = alloca i32, align 4
  %54 = alloca ptr, align 8
  %55 = alloca i32, align 4
  %56 = alloca ptr, align 8
  %57 = alloca i32, align 4
  %58 = alloca ptr, align 8
  %59 = alloca i32, align 4
  %60 = alloca ptr, align 8
  %61 = alloca i32, align 4
  %62 = alloca ptr, align 8
  %63 = alloca i32, align 4
  %64 = alloca ptr, align 8
  %65 = alloca i32, align 4
  %66 = alloca ptr, align 8
  %67 = alloca i32, align 4
  %68 = alloca ptr, align 8
  %69 = alloca i32, align 4
  %70 = alloca ptr, align 8
  %71 = alloca i32, align 4
  %72 = alloca ptr, align 8
  %73 = alloca i32, align 4
  %74 = alloca i32, align 4
  %75 = alloca ptr, align 8
  %76 = alloca ptr, align 8
  %77 = alloca i64, align 8
  %78 = alloca i64, align 8
  %79 = alloca [256 x i8], align 16
  %80 = alloca i64, align 8
  store ptr %0, ptr %75, align 8
  %81 = load ptr, ptr %75, align 8
  %82 = icmp ne ptr %81, null
  br i1 %82, label %83, label %93

83:                                               ; preds = %1
  %84 = load ptr, ptr %75, align 8
  %85 = getelementptr inbounds %struct.mz_zip_archive, ptr %84, i32 0, i32 15
  %86 = load ptr, ptr %85, align 8
  %87 = icmp ne ptr %86, null
  br i1 %87, label %88, label %93

88:                                               ; preds = %83
  %89 = load ptr, ptr %75, align 8
  %90 = getelementptr inbounds %struct.mz_zip_archive, ptr %89, i32 0, i32 3
  %91 = load i32, ptr %90, align 4
  %92 = icmp ne i32 %91, 2
  br i1 %92, label %93, label %102

93:                                               ; preds = %88, %83, %1
  %94 = load ptr, ptr %75, align 8
  store ptr %94, ptr %58, align 8
  store i32 24, ptr %59, align 4
  %95 = load ptr, ptr %58, align 8
  %96 = icmp ne ptr %95, null
  br i1 %96, label %97, label %101

97:                                               ; preds = %93
  %98 = load i32, ptr %59, align 4
  %99 = load ptr, ptr %58, align 8
  %100 = getelementptr inbounds %struct.mz_zip_archive, ptr %99, i32 0, i32 5
  store i32 %98, ptr %100, align 4
  br label %101

101:                                              ; preds = %93, %97
  store i32 0, ptr %74, align 4
  br label %802

102:                                              ; preds = %88
  %103 = load ptr, ptr %75, align 8
  %104 = getelementptr inbounds %struct.mz_zip_archive, ptr %103, i32 0, i32 15
  %105 = load ptr, ptr %104, align 8
  store ptr %105, ptr %76, align 8
  %106 = load ptr, ptr %76, align 8
  %107 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %106, i32 0, i32 4
  %108 = load i32, ptr %107, align 4
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %102
  %111 = load ptr, ptr %76, align 8
  %112 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %111, i32 0, i32 0
  %113 = getelementptr inbounds %struct.mz_zip_array, ptr %112, i32 0, i32 1
  %114 = load i64, ptr %113, align 8
  %115 = icmp uge i64 %114, 4294967295
  br i1 %115, label %116, label %125

116:                                              ; preds = %110
  %117 = load ptr, ptr %75, align 8
  store ptr %117, ptr %60, align 8
  store i32 2, ptr %61, align 4
  %118 = load ptr, ptr %60, align 8
  %119 = icmp ne ptr %118, null
  br i1 %119, label %120, label %124

120:                                              ; preds = %116
  %121 = load i32, ptr %61, align 4
  %122 = load ptr, ptr %60, align 8
  %123 = getelementptr inbounds %struct.mz_zip_archive, ptr %122, i32 0, i32 5
  store i32 %121, ptr %123, align 4
  br label %124

124:                                              ; preds = %116, %120
  store i32 0, ptr %74, align 4
  br label %802

125:                                              ; preds = %110
  br label %152

126:                                              ; preds = %102
  %127 = load ptr, ptr %75, align 8
  %128 = getelementptr inbounds %struct.mz_zip_archive, ptr %127, i32 0, i32 2
  %129 = load i32, ptr %128, align 8
  %130 = icmp ugt i32 %129, 65535
  br i1 %130, label %142, label %131

131:                                              ; preds = %126
  %132 = load ptr, ptr %75, align 8
  %133 = getelementptr inbounds %struct.mz_zip_archive, ptr %132, i32 0, i32 0
  %134 = load i64, ptr %133, align 8
  %135 = load ptr, ptr %76, align 8
  %136 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %135, i32 0, i32 0
  %137 = getelementptr inbounds %struct.mz_zip_array, ptr %136, i32 0, i32 1
  %138 = load i64, ptr %137, align 8
  %139 = add i64 %134, %138
  %140 = add i64 %139, 22
  %141 = icmp ugt i64 %140, 4294967295
  br i1 %141, label %142, label %151

142:                                              ; preds = %131, %126
  %143 = load ptr, ptr %75, align 8
  store ptr %143, ptr %62, align 8
  store i32 2, ptr %63, align 4
  %144 = load ptr, ptr %62, align 8
  %145 = icmp ne ptr %144, null
  br i1 %145, label %146, label %150

146:                                              ; preds = %142
  %147 = load i32, ptr %63, align 4
  %148 = load ptr, ptr %62, align 8
  %149 = getelementptr inbounds %struct.mz_zip_archive, ptr %148, i32 0, i32 5
  store i32 %147, ptr %149, align 4
  br label %150

150:                                              ; preds = %142, %146
  store i32 0, ptr %74, align 4
  br label %802

151:                                              ; preds = %131
  br label %152

152:                                              ; preds = %151, %125
  store i64 0, ptr %77, align 8
  store i64 0, ptr %78, align 8
  %153 = load ptr, ptr %75, align 8
  %154 = getelementptr inbounds %struct.mz_zip_archive, ptr %153, i32 0, i32 2
  %155 = load i32, ptr %154, align 8
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %198

157:                                              ; preds = %152
  %158 = load ptr, ptr %75, align 8
  %159 = getelementptr inbounds %struct.mz_zip_archive, ptr %158, i32 0, i32 0
  %160 = load i64, ptr %159, align 8
  store i64 %160, ptr %77, align 8
  %161 = load ptr, ptr %76, align 8
  %162 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %161, i32 0, i32 0
  %163 = getelementptr inbounds %struct.mz_zip_array, ptr %162, i32 0, i32 1
  %164 = load i64, ptr %163, align 8
  store i64 %164, ptr %78, align 8
  %165 = load i64, ptr %77, align 8
  %166 = load ptr, ptr %75, align 8
  %167 = getelementptr inbounds %struct.mz_zip_archive, ptr %166, i32 0, i32 1
  store i64 %165, ptr %167, align 8
  %168 = load ptr, ptr %75, align 8
  %169 = getelementptr inbounds %struct.mz_zip_archive, ptr %168, i32 0, i32 12
  %170 = load ptr, ptr %169, align 8
  %171 = load ptr, ptr %75, align 8
  %172 = getelementptr inbounds %struct.mz_zip_archive, ptr %171, i32 0, i32 14
  %173 = load ptr, ptr %172, align 8
  %174 = load i64, ptr %77, align 8
  %175 = load ptr, ptr %76, align 8
  %176 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %175, i32 0, i32 0
  %177 = getelementptr inbounds %struct.mz_zip_array, ptr %176, i32 0, i32 0
  %178 = load ptr, ptr %177, align 8
  %179 = load i64, ptr %78, align 8
  %180 = call i64 %170(ptr noundef %173, i64 noundef %174, ptr noundef %178, i64 noundef %179)
  %181 = load i64, ptr %78, align 8
  %182 = icmp ne i64 %180, %181
  br i1 %182, label %183, label %192

183:                                              ; preds = %157
  %184 = load ptr, ptr %75, align 8
  store ptr %184, ptr %64, align 8
  store i32 19, ptr %65, align 4
  %185 = load ptr, ptr %64, align 8
  %186 = icmp ne ptr %185, null
  br i1 %186, label %187, label %191

187:                                              ; preds = %183
  %188 = load i32, ptr %65, align 4
  %189 = load ptr, ptr %64, align 8
  %190 = getelementptr inbounds %struct.mz_zip_archive, ptr %189, i32 0, i32 5
  store i32 %188, ptr %190, align 4
  br label %191

191:                                              ; preds = %183, %187
  store i32 0, ptr %74, align 4
  br label %802

192:                                              ; preds = %157
  %193 = load i64, ptr %78, align 8
  %194 = load ptr, ptr %75, align 8
  %195 = getelementptr inbounds %struct.mz_zip_archive, ptr %194, i32 0, i32 0
  %196 = load i64, ptr %195, align 8
  %197 = add i64 %196, %193
  store i64 %197, ptr %195, align 8
  br label %198

198:                                              ; preds = %192, %152
  %199 = load ptr, ptr %76, align 8
  %200 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %199, i32 0, i32 4
  %201 = load i32, ptr %200, align 4
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %203, label %630

203:                                              ; preds = %198
  %204 = load ptr, ptr %75, align 8
  %205 = getelementptr inbounds %struct.mz_zip_archive, ptr %204, i32 0, i32 0
  %206 = load i64, ptr %205, align 8
  store i64 %206, ptr %80, align 8
  %207 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 16 %207, i8 0, i64 256, i1 false)
  %208 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %209 = getelementptr inbounds i8, ptr %208, i64 0
  store ptr %209, ptr %46, align 8
  store i32 101075792, ptr %47, align 4
  %210 = load i32, ptr %47, align 4
  %211 = trunc i32 %210 to i8
  %212 = load ptr, ptr %46, align 8
  store i8 %211, ptr %212, align 1
  %213 = load i32, ptr %47, align 4
  %214 = lshr i32 %213, 8
  %215 = trunc i32 %214 to i8
  %216 = load ptr, ptr %46, align 8
  %217 = getelementptr inbounds i8, ptr %216, i64 1
  store i8 %215, ptr %217, align 1
  %218 = load i32, ptr %47, align 4
  %219 = lshr i32 %218, 16
  %220 = trunc i32 %219 to i8
  %221 = load ptr, ptr %46, align 8
  %222 = getelementptr inbounds i8, ptr %221, i64 2
  store i8 %220, ptr %222, align 1
  %223 = load i32, ptr %47, align 4
  %224 = lshr i32 %223, 24
  %225 = trunc i32 %224 to i8
  %226 = load ptr, ptr %46, align 8
  %227 = getelementptr inbounds i8, ptr %226, i64 3
  store i8 %225, ptr %227, align 1
  %228 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %229 = getelementptr inbounds i8, ptr %228, i64 4
  store ptr %229, ptr %14, align 8
  store i64 44, ptr %15, align 8
  %230 = load ptr, ptr %14, align 8
  %231 = load i64, ptr %15, align 8
  %232 = trunc i64 %231 to i32
  store ptr %230, ptr %10, align 8
  store i32 %232, ptr %11, align 4
  %233 = load i32, ptr %11, align 4
  %234 = trunc i32 %233 to i8
  %235 = load ptr, ptr %10, align 8
  store i8 %234, ptr %235, align 1
  %236 = load i32, ptr %11, align 4
  %237 = lshr i32 %236, 8
  %238 = trunc i32 %237 to i8
  %239 = load ptr, ptr %10, align 8
  %240 = getelementptr inbounds i8, ptr %239, i64 1
  store i8 %238, ptr %240, align 1
  %241 = load i32, ptr %11, align 4
  %242 = lshr i32 %241, 16
  %243 = trunc i32 %242 to i8
  %244 = load ptr, ptr %10, align 8
  %245 = getelementptr inbounds i8, ptr %244, i64 2
  store i8 %243, ptr %245, align 1
  %246 = load i32, ptr %11, align 4
  %247 = lshr i32 %246, 24
  %248 = trunc i32 %247 to i8
  %249 = load ptr, ptr %10, align 8
  %250 = getelementptr inbounds i8, ptr %249, i64 3
  store i8 %248, ptr %250, align 1
  %251 = load ptr, ptr %14, align 8
  %252 = getelementptr inbounds i8, ptr %251, i64 4
  %253 = load i64, ptr %15, align 8
  %254 = lshr i64 %253, 32
  %255 = trunc i64 %254 to i32
  store ptr %252, ptr %12, align 8
  store i32 %255, ptr %13, align 4
  %256 = load i32, ptr %13, align 4
  %257 = trunc i32 %256 to i8
  %258 = load ptr, ptr %12, align 8
  store i8 %257, ptr %258, align 1
  %259 = load i32, ptr %13, align 4
  %260 = lshr i32 %259, 8
  %261 = trunc i32 %260 to i8
  %262 = load ptr, ptr %12, align 8
  %263 = getelementptr inbounds i8, ptr %262, i64 1
  store i8 %261, ptr %263, align 1
  %264 = load i32, ptr %13, align 4
  %265 = lshr i32 %264, 16
  %266 = trunc i32 %265 to i8
  %267 = load ptr, ptr %12, align 8
  %268 = getelementptr inbounds i8, ptr %267, i64 2
  store i8 %266, ptr %268, align 1
  %269 = load i32, ptr %13, align 4
  %270 = lshr i32 %269, 24
  %271 = trunc i32 %270 to i8
  %272 = load ptr, ptr %12, align 8
  %273 = getelementptr inbounds i8, ptr %272, i64 3
  store i8 %271, ptr %273, align 1
  %274 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %275 = getelementptr inbounds i8, ptr %274, i64 12
  store ptr %275, ptr %2, align 8
  store i16 798, ptr %3, align 2
  %276 = load i16, ptr %3, align 2
  %277 = trunc i16 %276 to i8
  %278 = load ptr, ptr %2, align 8
  store i8 %277, ptr %278, align 1
  %279 = load i16, ptr %3, align 2
  %280 = zext i16 %279 to i32
  %281 = ashr i32 %280, 8
  %282 = trunc i32 %281 to i8
  %283 = load ptr, ptr %2, align 8
  %284 = getelementptr inbounds i8, ptr %283, i64 1
  store i8 %282, ptr %284, align 1
  %285 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %286 = getelementptr inbounds i8, ptr %285, i64 14
  store ptr %286, ptr %4, align 8
  store i16 45, ptr %5, align 2
  %287 = load i16, ptr %5, align 2
  %288 = trunc i16 %287 to i8
  %289 = load ptr, ptr %4, align 8
  store i8 %288, ptr %289, align 1
  %290 = load i16, ptr %5, align 2
  %291 = zext i16 %290 to i32
  %292 = ashr i32 %291, 8
  %293 = trunc i32 %292 to i8
  %294 = load ptr, ptr %4, align 8
  %295 = getelementptr inbounds i8, ptr %294, i64 1
  store i8 %293, ptr %295, align 1
  %296 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %297 = getelementptr inbounds i8, ptr %296, i64 24
  %298 = load ptr, ptr %75, align 8
  %299 = getelementptr inbounds %struct.mz_zip_archive, ptr %298, i32 0, i32 2
  %300 = load i32, ptr %299, align 8
  %301 = zext i32 %300 to i64
  store ptr %297, ptr %20, align 8
  store i64 %301, ptr %21, align 8
  %302 = load ptr, ptr %20, align 8
  %303 = load i64, ptr %21, align 8
  %304 = trunc i64 %303 to i32
  store ptr %302, ptr %16, align 8
  store i32 %304, ptr %17, align 4
  %305 = load i32, ptr %17, align 4
  %306 = trunc i32 %305 to i8
  %307 = load ptr, ptr %16, align 8
  store i8 %306, ptr %307, align 1
  %308 = load i32, ptr %17, align 4
  %309 = lshr i32 %308, 8
  %310 = trunc i32 %309 to i8
  %311 = load ptr, ptr %16, align 8
  %312 = getelementptr inbounds i8, ptr %311, i64 1
  store i8 %310, ptr %312, align 1
  %313 = load i32, ptr %17, align 4
  %314 = lshr i32 %313, 16
  %315 = trunc i32 %314 to i8
  %316 = load ptr, ptr %16, align 8
  %317 = getelementptr inbounds i8, ptr %316, i64 2
  store i8 %315, ptr %317, align 1
  %318 = load i32, ptr %17, align 4
  %319 = lshr i32 %318, 24
  %320 = trunc i32 %319 to i8
  %321 = load ptr, ptr %16, align 8
  %322 = getelementptr inbounds i8, ptr %321, i64 3
  store i8 %320, ptr %322, align 1
  %323 = load ptr, ptr %20, align 8
  %324 = getelementptr inbounds i8, ptr %323, i64 4
  %325 = load i64, ptr %21, align 8
  %326 = lshr i64 %325, 32
  %327 = trunc i64 %326 to i32
  store ptr %324, ptr %18, align 8
  store i32 %327, ptr %19, align 4
  %328 = load i32, ptr %19, align 4
  %329 = trunc i32 %328 to i8
  %330 = load ptr, ptr %18, align 8
  store i8 %329, ptr %330, align 1
  %331 = load i32, ptr %19, align 4
  %332 = lshr i32 %331, 8
  %333 = trunc i32 %332 to i8
  %334 = load ptr, ptr %18, align 8
  %335 = getelementptr inbounds i8, ptr %334, i64 1
  store i8 %333, ptr %335, align 1
  %336 = load i32, ptr %19, align 4
  %337 = lshr i32 %336, 16
  %338 = trunc i32 %337 to i8
  %339 = load ptr, ptr %18, align 8
  %340 = getelementptr inbounds i8, ptr %339, i64 2
  store i8 %338, ptr %340, align 1
  %341 = load i32, ptr %19, align 4
  %342 = lshr i32 %341, 24
  %343 = trunc i32 %342 to i8
  %344 = load ptr, ptr %18, align 8
  %345 = getelementptr inbounds i8, ptr %344, i64 3
  store i8 %343, ptr %345, align 1
  %346 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %347 = getelementptr inbounds i8, ptr %346, i64 32
  %348 = load ptr, ptr %75, align 8
  %349 = getelementptr inbounds %struct.mz_zip_archive, ptr %348, i32 0, i32 2
  %350 = load i32, ptr %349, align 8
  %351 = zext i32 %350 to i64
  store ptr %347, ptr %26, align 8
  store i64 %351, ptr %27, align 8
  %352 = load ptr, ptr %26, align 8
  %353 = load i64, ptr %27, align 8
  %354 = trunc i64 %353 to i32
  store ptr %352, ptr %22, align 8
  store i32 %354, ptr %23, align 4
  %355 = load i32, ptr %23, align 4
  %356 = trunc i32 %355 to i8
  %357 = load ptr, ptr %22, align 8
  store i8 %356, ptr %357, align 1
  %358 = load i32, ptr %23, align 4
  %359 = lshr i32 %358, 8
  %360 = trunc i32 %359 to i8
  %361 = load ptr, ptr %22, align 8
  %362 = getelementptr inbounds i8, ptr %361, i64 1
  store i8 %360, ptr %362, align 1
  %363 = load i32, ptr %23, align 4
  %364 = lshr i32 %363, 16
  %365 = trunc i32 %364 to i8
  %366 = load ptr, ptr %22, align 8
  %367 = getelementptr inbounds i8, ptr %366, i64 2
  store i8 %365, ptr %367, align 1
  %368 = load i32, ptr %23, align 4
  %369 = lshr i32 %368, 24
  %370 = trunc i32 %369 to i8
  %371 = load ptr, ptr %22, align 8
  %372 = getelementptr inbounds i8, ptr %371, i64 3
  store i8 %370, ptr %372, align 1
  %373 = load ptr, ptr %26, align 8
  %374 = getelementptr inbounds i8, ptr %373, i64 4
  %375 = load i64, ptr %27, align 8
  %376 = lshr i64 %375, 32
  %377 = trunc i64 %376 to i32
  store ptr %374, ptr %24, align 8
  store i32 %377, ptr %25, align 4
  %378 = load i32, ptr %25, align 4
  %379 = trunc i32 %378 to i8
  %380 = load ptr, ptr %24, align 8
  store i8 %379, ptr %380, align 1
  %381 = load i32, ptr %25, align 4
  %382 = lshr i32 %381, 8
  %383 = trunc i32 %382 to i8
  %384 = load ptr, ptr %24, align 8
  %385 = getelementptr inbounds i8, ptr %384, i64 1
  store i8 %383, ptr %385, align 1
  %386 = load i32, ptr %25, align 4
  %387 = lshr i32 %386, 16
  %388 = trunc i32 %387 to i8
  %389 = load ptr, ptr %24, align 8
  %390 = getelementptr inbounds i8, ptr %389, i64 2
  store i8 %388, ptr %390, align 1
  %391 = load i32, ptr %25, align 4
  %392 = lshr i32 %391, 24
  %393 = trunc i32 %392 to i8
  %394 = load ptr, ptr %24, align 8
  %395 = getelementptr inbounds i8, ptr %394, i64 3
  store i8 %393, ptr %395, align 1
  %396 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %397 = getelementptr inbounds i8, ptr %396, i64 40
  %398 = load i64, ptr %78, align 8
  store ptr %397, ptr %32, align 8
  store i64 %398, ptr %33, align 8
  %399 = load ptr, ptr %32, align 8
  %400 = load i64, ptr %33, align 8
  %401 = trunc i64 %400 to i32
  store ptr %399, ptr %28, align 8
  store i32 %401, ptr %29, align 4
  %402 = load i32, ptr %29, align 4
  %403 = trunc i32 %402 to i8
  %404 = load ptr, ptr %28, align 8
  store i8 %403, ptr %404, align 1
  %405 = load i32, ptr %29, align 4
  %406 = lshr i32 %405, 8
  %407 = trunc i32 %406 to i8
  %408 = load ptr, ptr %28, align 8
  %409 = getelementptr inbounds i8, ptr %408, i64 1
  store i8 %407, ptr %409, align 1
  %410 = load i32, ptr %29, align 4
  %411 = lshr i32 %410, 16
  %412 = trunc i32 %411 to i8
  %413 = load ptr, ptr %28, align 8
  %414 = getelementptr inbounds i8, ptr %413, i64 2
  store i8 %412, ptr %414, align 1
  %415 = load i32, ptr %29, align 4
  %416 = lshr i32 %415, 24
  %417 = trunc i32 %416 to i8
  %418 = load ptr, ptr %28, align 8
  %419 = getelementptr inbounds i8, ptr %418, i64 3
  store i8 %417, ptr %419, align 1
  %420 = load ptr, ptr %32, align 8
  %421 = getelementptr inbounds i8, ptr %420, i64 4
  %422 = load i64, ptr %33, align 8
  %423 = lshr i64 %422, 32
  %424 = trunc i64 %423 to i32
  store ptr %421, ptr %30, align 8
  store i32 %424, ptr %31, align 4
  %425 = load i32, ptr %31, align 4
  %426 = trunc i32 %425 to i8
  %427 = load ptr, ptr %30, align 8
  store i8 %426, ptr %427, align 1
  %428 = load i32, ptr %31, align 4
  %429 = lshr i32 %428, 8
  %430 = trunc i32 %429 to i8
  %431 = load ptr, ptr %30, align 8
  %432 = getelementptr inbounds i8, ptr %431, i64 1
  store i8 %430, ptr %432, align 1
  %433 = load i32, ptr %31, align 4
  %434 = lshr i32 %433, 16
  %435 = trunc i32 %434 to i8
  %436 = load ptr, ptr %30, align 8
  %437 = getelementptr inbounds i8, ptr %436, i64 2
  store i8 %435, ptr %437, align 1
  %438 = load i32, ptr %31, align 4
  %439 = lshr i32 %438, 24
  %440 = trunc i32 %439 to i8
  %441 = load ptr, ptr %30, align 8
  %442 = getelementptr inbounds i8, ptr %441, i64 3
  store i8 %440, ptr %442, align 1
  %443 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %444 = getelementptr inbounds i8, ptr %443, i64 48
  %445 = load i64, ptr %77, align 8
  store ptr %444, ptr %38, align 8
  store i64 %445, ptr %39, align 8
  %446 = load ptr, ptr %38, align 8
  %447 = load i64, ptr %39, align 8
  %448 = trunc i64 %447 to i32
  store ptr %446, ptr %34, align 8
  store i32 %448, ptr %35, align 4
  %449 = load i32, ptr %35, align 4
  %450 = trunc i32 %449 to i8
  %451 = load ptr, ptr %34, align 8
  store i8 %450, ptr %451, align 1
  %452 = load i32, ptr %35, align 4
  %453 = lshr i32 %452, 8
  %454 = trunc i32 %453 to i8
  %455 = load ptr, ptr %34, align 8
  %456 = getelementptr inbounds i8, ptr %455, i64 1
  store i8 %454, ptr %456, align 1
  %457 = load i32, ptr %35, align 4
  %458 = lshr i32 %457, 16
  %459 = trunc i32 %458 to i8
  %460 = load ptr, ptr %34, align 8
  %461 = getelementptr inbounds i8, ptr %460, i64 2
  store i8 %459, ptr %461, align 1
  %462 = load i32, ptr %35, align 4
  %463 = lshr i32 %462, 24
  %464 = trunc i32 %463 to i8
  %465 = load ptr, ptr %34, align 8
  %466 = getelementptr inbounds i8, ptr %465, i64 3
  store i8 %464, ptr %466, align 1
  %467 = load ptr, ptr %38, align 8
  %468 = getelementptr inbounds i8, ptr %467, i64 4
  %469 = load i64, ptr %39, align 8
  %470 = lshr i64 %469, 32
  %471 = trunc i64 %470 to i32
  store ptr %468, ptr %36, align 8
  store i32 %471, ptr %37, align 4
  %472 = load i32, ptr %37, align 4
  %473 = trunc i32 %472 to i8
  %474 = load ptr, ptr %36, align 8
  store i8 %473, ptr %474, align 1
  %475 = load i32, ptr %37, align 4
  %476 = lshr i32 %475, 8
  %477 = trunc i32 %476 to i8
  %478 = load ptr, ptr %36, align 8
  %479 = getelementptr inbounds i8, ptr %478, i64 1
  store i8 %477, ptr %479, align 1
  %480 = load i32, ptr %37, align 4
  %481 = lshr i32 %480, 16
  %482 = trunc i32 %481 to i8
  %483 = load ptr, ptr %36, align 8
  %484 = getelementptr inbounds i8, ptr %483, i64 2
  store i8 %482, ptr %484, align 1
  %485 = load i32, ptr %37, align 4
  %486 = lshr i32 %485, 24
  %487 = trunc i32 %486 to i8
  %488 = load ptr, ptr %36, align 8
  %489 = getelementptr inbounds i8, ptr %488, i64 3
  store i8 %487, ptr %489, align 1
  %490 = load ptr, ptr %75, align 8
  %491 = getelementptr inbounds %struct.mz_zip_archive, ptr %490, i32 0, i32 12
  %492 = load ptr, ptr %491, align 8
  %493 = load ptr, ptr %75, align 8
  %494 = getelementptr inbounds %struct.mz_zip_archive, ptr %493, i32 0, i32 14
  %495 = load ptr, ptr %494, align 8
  %496 = load ptr, ptr %75, align 8
  %497 = getelementptr inbounds %struct.mz_zip_archive, ptr %496, i32 0, i32 0
  %498 = load i64, ptr %497, align 8
  %499 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %500 = call i64 %492(ptr noundef %495, i64 noundef %498, ptr noundef %499, i64 noundef 56)
  %501 = icmp ne i64 %500, 56
  br i1 %501, label %502, label %511

502:                                              ; preds = %203
  %503 = load ptr, ptr %75, align 8
  store ptr %503, ptr %66, align 8
  store i32 19, ptr %67, align 4
  %504 = load ptr, ptr %66, align 8
  %505 = icmp ne ptr %504, null
  br i1 %505, label %506, label %510

506:                                              ; preds = %502
  %507 = load i32, ptr %67, align 4
  %508 = load ptr, ptr %66, align 8
  %509 = getelementptr inbounds %struct.mz_zip_archive, ptr %508, i32 0, i32 5
  store i32 %507, ptr %509, align 4
  br label %510

510:                                              ; preds = %502, %506
  store i32 0, ptr %74, align 4
  br label %802

511:                                              ; preds = %203
  %512 = load ptr, ptr %75, align 8
  %513 = getelementptr inbounds %struct.mz_zip_archive, ptr %512, i32 0, i32 0
  %514 = load i64, ptr %513, align 8
  %515 = add i64 %514, 56
  store i64 %515, ptr %513, align 8
  %516 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 16 %516, i8 0, i64 256, i1 false)
  %517 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %518 = getelementptr inbounds i8, ptr %517, i64 0
  store ptr %518, ptr %48, align 8
  store i32 117853008, ptr %49, align 4
  %519 = load i32, ptr %49, align 4
  %520 = trunc i32 %519 to i8
  %521 = load ptr, ptr %48, align 8
  store i8 %520, ptr %521, align 1
  %522 = load i32, ptr %49, align 4
  %523 = lshr i32 %522, 8
  %524 = trunc i32 %523 to i8
  %525 = load ptr, ptr %48, align 8
  %526 = getelementptr inbounds i8, ptr %525, i64 1
  store i8 %524, ptr %526, align 1
  %527 = load i32, ptr %49, align 4
  %528 = lshr i32 %527, 16
  %529 = trunc i32 %528 to i8
  %530 = load ptr, ptr %48, align 8
  %531 = getelementptr inbounds i8, ptr %530, i64 2
  store i8 %529, ptr %531, align 1
  %532 = load i32, ptr %49, align 4
  %533 = lshr i32 %532, 24
  %534 = trunc i32 %533 to i8
  %535 = load ptr, ptr %48, align 8
  %536 = getelementptr inbounds i8, ptr %535, i64 3
  store i8 %534, ptr %536, align 1
  %537 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %538 = getelementptr inbounds i8, ptr %537, i64 8
  %539 = load i64, ptr %80, align 8
  store ptr %538, ptr %44, align 8
  store i64 %539, ptr %45, align 8
  %540 = load ptr, ptr %44, align 8
  %541 = load i64, ptr %45, align 8
  %542 = trunc i64 %541 to i32
  store ptr %540, ptr %40, align 8
  store i32 %542, ptr %41, align 4
  %543 = load i32, ptr %41, align 4
  %544 = trunc i32 %543 to i8
  %545 = load ptr, ptr %40, align 8
  store i8 %544, ptr %545, align 1
  %546 = load i32, ptr %41, align 4
  %547 = lshr i32 %546, 8
  %548 = trunc i32 %547 to i8
  %549 = load ptr, ptr %40, align 8
  %550 = getelementptr inbounds i8, ptr %549, i64 1
  store i8 %548, ptr %550, align 1
  %551 = load i32, ptr %41, align 4
  %552 = lshr i32 %551, 16
  %553 = trunc i32 %552 to i8
  %554 = load ptr, ptr %40, align 8
  %555 = getelementptr inbounds i8, ptr %554, i64 2
  store i8 %553, ptr %555, align 1
  %556 = load i32, ptr %41, align 4
  %557 = lshr i32 %556, 24
  %558 = trunc i32 %557 to i8
  %559 = load ptr, ptr %40, align 8
  %560 = getelementptr inbounds i8, ptr %559, i64 3
  store i8 %558, ptr %560, align 1
  %561 = load ptr, ptr %44, align 8
  %562 = getelementptr inbounds i8, ptr %561, i64 4
  %563 = load i64, ptr %45, align 8
  %564 = lshr i64 %563, 32
  %565 = trunc i64 %564 to i32
  store ptr %562, ptr %42, align 8
  store i32 %565, ptr %43, align 4
  %566 = load i32, ptr %43, align 4
  %567 = trunc i32 %566 to i8
  %568 = load ptr, ptr %42, align 8
  store i8 %567, ptr %568, align 1
  %569 = load i32, ptr %43, align 4
  %570 = lshr i32 %569, 8
  %571 = trunc i32 %570 to i8
  %572 = load ptr, ptr %42, align 8
  %573 = getelementptr inbounds i8, ptr %572, i64 1
  store i8 %571, ptr %573, align 1
  %574 = load i32, ptr %43, align 4
  %575 = lshr i32 %574, 16
  %576 = trunc i32 %575 to i8
  %577 = load ptr, ptr %42, align 8
  %578 = getelementptr inbounds i8, ptr %577, i64 2
  store i8 %576, ptr %578, align 1
  %579 = load i32, ptr %43, align 4
  %580 = lshr i32 %579, 24
  %581 = trunc i32 %580 to i8
  %582 = load ptr, ptr %42, align 8
  %583 = getelementptr inbounds i8, ptr %582, i64 3
  store i8 %581, ptr %583, align 1
  %584 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %585 = getelementptr inbounds i8, ptr %584, i64 16
  store ptr %585, ptr %50, align 8
  store i32 1, ptr %51, align 4
  %586 = load i32, ptr %51, align 4
  %587 = trunc i32 %586 to i8
  %588 = load ptr, ptr %50, align 8
  store i8 %587, ptr %588, align 1
  %589 = load i32, ptr %51, align 4
  %590 = lshr i32 %589, 8
  %591 = trunc i32 %590 to i8
  %592 = load ptr, ptr %50, align 8
  %593 = getelementptr inbounds i8, ptr %592, i64 1
  store i8 %591, ptr %593, align 1
  %594 = load i32, ptr %51, align 4
  %595 = lshr i32 %594, 16
  %596 = trunc i32 %595 to i8
  %597 = load ptr, ptr %50, align 8
  %598 = getelementptr inbounds i8, ptr %597, i64 2
  store i8 %596, ptr %598, align 1
  %599 = load i32, ptr %51, align 4
  %600 = lshr i32 %599, 24
  %601 = trunc i32 %600 to i8
  %602 = load ptr, ptr %50, align 8
  %603 = getelementptr inbounds i8, ptr %602, i64 3
  store i8 %601, ptr %603, align 1
  %604 = load ptr, ptr %75, align 8
  %605 = getelementptr inbounds %struct.mz_zip_archive, ptr %604, i32 0, i32 12
  %606 = load ptr, ptr %605, align 8
  %607 = load ptr, ptr %75, align 8
  %608 = getelementptr inbounds %struct.mz_zip_archive, ptr %607, i32 0, i32 14
  %609 = load ptr, ptr %608, align 8
  %610 = load ptr, ptr %75, align 8
  %611 = getelementptr inbounds %struct.mz_zip_archive, ptr %610, i32 0, i32 0
  %612 = load i64, ptr %611, align 8
  %613 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %614 = call i64 %606(ptr noundef %609, i64 noundef %612, ptr noundef %613, i64 noundef 20)
  %615 = icmp ne i64 %614, 20
  br i1 %615, label %616, label %625

616:                                              ; preds = %511
  %617 = load ptr, ptr %75, align 8
  store ptr %617, ptr %68, align 8
  store i32 19, ptr %69, align 4
  %618 = load ptr, ptr %68, align 8
  %619 = icmp ne ptr %618, null
  br i1 %619, label %620, label %624

620:                                              ; preds = %616
  %621 = load i32, ptr %69, align 4
  %622 = load ptr, ptr %68, align 8
  %623 = getelementptr inbounds %struct.mz_zip_archive, ptr %622, i32 0, i32 5
  store i32 %621, ptr %623, align 4
  br label %624

624:                                              ; preds = %616, %620
  store i32 0, ptr %74, align 4
  br label %802

625:                                              ; preds = %511
  %626 = load ptr, ptr %75, align 8
  %627 = getelementptr inbounds %struct.mz_zip_archive, ptr %626, i32 0, i32 0
  %628 = load i64, ptr %627, align 8
  %629 = add i64 %628, 20
  store i64 %629, ptr %627, align 8
  br label %630

630:                                              ; preds = %625, %198
  %631 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 16 %631, i8 0, i64 256, i1 false)
  %632 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %633 = getelementptr inbounds i8, ptr %632, i64 0
  store ptr %633, ptr %52, align 8
  store i32 101010256, ptr %53, align 4
  %634 = load i32, ptr %53, align 4
  %635 = trunc i32 %634 to i8
  %636 = load ptr, ptr %52, align 8
  store i8 %635, ptr %636, align 1
  %637 = load i32, ptr %53, align 4
  %638 = lshr i32 %637, 8
  %639 = trunc i32 %638 to i8
  %640 = load ptr, ptr %52, align 8
  %641 = getelementptr inbounds i8, ptr %640, i64 1
  store i8 %639, ptr %641, align 1
  %642 = load i32, ptr %53, align 4
  %643 = lshr i32 %642, 16
  %644 = trunc i32 %643 to i8
  %645 = load ptr, ptr %52, align 8
  %646 = getelementptr inbounds i8, ptr %645, i64 2
  store i8 %644, ptr %646, align 1
  %647 = load i32, ptr %53, align 4
  %648 = lshr i32 %647, 24
  %649 = trunc i32 %648 to i8
  %650 = load ptr, ptr %52, align 8
  %651 = getelementptr inbounds i8, ptr %650, i64 3
  store i8 %649, ptr %651, align 1
  %652 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %653 = getelementptr inbounds i8, ptr %652, i64 8
  %654 = load ptr, ptr %75, align 8
  %655 = getelementptr inbounds %struct.mz_zip_archive, ptr %654, i32 0, i32 2
  %656 = load i32, ptr %655, align 8
  %657 = icmp ult i32 65535, %656
  br i1 %657, label %658, label %659

658:                                              ; preds = %630
  br label %663

659:                                              ; preds = %630
  %660 = load ptr, ptr %75, align 8
  %661 = getelementptr inbounds %struct.mz_zip_archive, ptr %660, i32 0, i32 2
  %662 = load i32, ptr %661, align 8
  br label %663

663:                                              ; preds = %659, %658
  %664 = phi i32 [ 65535, %658 ], [ %662, %659 ]
  %665 = trunc i32 %664 to i16
  store ptr %653, ptr %6, align 8
  store i16 %665, ptr %7, align 2
  %666 = load i16, ptr %7, align 2
  %667 = trunc i16 %666 to i8
  %668 = load ptr, ptr %6, align 8
  store i8 %667, ptr %668, align 1
  %669 = load i16, ptr %7, align 2
  %670 = zext i16 %669 to i32
  %671 = ashr i32 %670, 8
  %672 = trunc i32 %671 to i8
  %673 = load ptr, ptr %6, align 8
  %674 = getelementptr inbounds i8, ptr %673, i64 1
  store i8 %672, ptr %674, align 1
  %675 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %676 = getelementptr inbounds i8, ptr %675, i64 10
  %677 = load ptr, ptr %75, align 8
  %678 = getelementptr inbounds %struct.mz_zip_archive, ptr %677, i32 0, i32 2
  %679 = load i32, ptr %678, align 8
  %680 = icmp ult i32 65535, %679
  br i1 %680, label %681, label %682

681:                                              ; preds = %663
  br label %686

682:                                              ; preds = %663
  %683 = load ptr, ptr %75, align 8
  %684 = getelementptr inbounds %struct.mz_zip_archive, ptr %683, i32 0, i32 2
  %685 = load i32, ptr %684, align 8
  br label %686

686:                                              ; preds = %682, %681
  %687 = phi i32 [ 65535, %681 ], [ %685, %682 ]
  %688 = trunc i32 %687 to i16
  store ptr %676, ptr %8, align 8
  store i16 %688, ptr %9, align 2
  %689 = load i16, ptr %9, align 2
  %690 = trunc i16 %689 to i8
  %691 = load ptr, ptr %8, align 8
  store i8 %690, ptr %691, align 1
  %692 = load i16, ptr %9, align 2
  %693 = zext i16 %692 to i32
  %694 = ashr i32 %693, 8
  %695 = trunc i32 %694 to i8
  %696 = load ptr, ptr %8, align 8
  %697 = getelementptr inbounds i8, ptr %696, i64 1
  store i8 %695, ptr %697, align 1
  %698 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %699 = getelementptr inbounds i8, ptr %698, i64 12
  %700 = load i64, ptr %78, align 8
  %701 = icmp ult i64 4294967295, %700
  br i1 %701, label %702, label %703

702:                                              ; preds = %686
  br label %705

703:                                              ; preds = %686
  %704 = load i64, ptr %78, align 8
  br label %705

705:                                              ; preds = %703, %702
  %706 = phi i64 [ 4294967295, %702 ], [ %704, %703 ]
  %707 = trunc i64 %706 to i32
  store ptr %699, ptr %54, align 8
  store i32 %707, ptr %55, align 4
  %708 = load i32, ptr %55, align 4
  %709 = trunc i32 %708 to i8
  %710 = load ptr, ptr %54, align 8
  store i8 %709, ptr %710, align 1
  %711 = load i32, ptr %55, align 4
  %712 = lshr i32 %711, 8
  %713 = trunc i32 %712 to i8
  %714 = load ptr, ptr %54, align 8
  %715 = getelementptr inbounds i8, ptr %714, i64 1
  store i8 %713, ptr %715, align 1
  %716 = load i32, ptr %55, align 4
  %717 = lshr i32 %716, 16
  %718 = trunc i32 %717 to i8
  %719 = load ptr, ptr %54, align 8
  %720 = getelementptr inbounds i8, ptr %719, i64 2
  store i8 %718, ptr %720, align 1
  %721 = load i32, ptr %55, align 4
  %722 = lshr i32 %721, 24
  %723 = trunc i32 %722 to i8
  %724 = load ptr, ptr %54, align 8
  %725 = getelementptr inbounds i8, ptr %724, i64 3
  store i8 %723, ptr %725, align 1
  %726 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %727 = getelementptr inbounds i8, ptr %726, i64 16
  %728 = load i64, ptr %77, align 8
  %729 = icmp ult i64 4294967295, %728
  br i1 %729, label %730, label %731

730:                                              ; preds = %705
  br label %733

731:                                              ; preds = %705
  %732 = load i64, ptr %77, align 8
  br label %733

733:                                              ; preds = %731, %730
  %734 = phi i64 [ 4294967295, %730 ], [ %732, %731 ]
  %735 = trunc i64 %734 to i32
  store ptr %727, ptr %56, align 8
  store i32 %735, ptr %57, align 4
  %736 = load i32, ptr %57, align 4
  %737 = trunc i32 %736 to i8
  %738 = load ptr, ptr %56, align 8
  store i8 %737, ptr %738, align 1
  %739 = load i32, ptr %57, align 4
  %740 = lshr i32 %739, 8
  %741 = trunc i32 %740 to i8
  %742 = load ptr, ptr %56, align 8
  %743 = getelementptr inbounds i8, ptr %742, i64 1
  store i8 %741, ptr %743, align 1
  %744 = load i32, ptr %57, align 4
  %745 = lshr i32 %744, 16
  %746 = trunc i32 %745 to i8
  %747 = load ptr, ptr %56, align 8
  %748 = getelementptr inbounds i8, ptr %747, i64 2
  store i8 %746, ptr %748, align 1
  %749 = load i32, ptr %57, align 4
  %750 = lshr i32 %749, 24
  %751 = trunc i32 %750 to i8
  %752 = load ptr, ptr %56, align 8
  %753 = getelementptr inbounds i8, ptr %752, i64 3
  store i8 %751, ptr %753, align 1
  %754 = load ptr, ptr %75, align 8
  %755 = getelementptr inbounds %struct.mz_zip_archive, ptr %754, i32 0, i32 12
  %756 = load ptr, ptr %755, align 8
  %757 = load ptr, ptr %75, align 8
  %758 = getelementptr inbounds %struct.mz_zip_archive, ptr %757, i32 0, i32 14
  %759 = load ptr, ptr %758, align 8
  %760 = load ptr, ptr %75, align 8
  %761 = getelementptr inbounds %struct.mz_zip_archive, ptr %760, i32 0, i32 0
  %762 = load i64, ptr %761, align 8
  %763 = getelementptr inbounds [256 x i8], ptr %79, i64 0, i64 0
  %764 = call i64 %756(ptr noundef %759, i64 noundef %762, ptr noundef %763, i64 noundef 22)
  %765 = icmp ne i64 %764, 22
  br i1 %765, label %766, label %775

766:                                              ; preds = %733
  %767 = load ptr, ptr %75, align 8
  store ptr %767, ptr %70, align 8
  store i32 19, ptr %71, align 4
  %768 = load ptr, ptr %70, align 8
  %769 = icmp ne ptr %768, null
  br i1 %769, label %770, label %774

770:                                              ; preds = %766
  %771 = load i32, ptr %71, align 4
  %772 = load ptr, ptr %70, align 8
  %773 = getelementptr inbounds %struct.mz_zip_archive, ptr %772, i32 0, i32 5
  store i32 %771, ptr %773, align 4
  br label %774

774:                                              ; preds = %766, %770
  store i32 0, ptr %74, align 4
  br label %802

775:                                              ; preds = %733
  %776 = load ptr, ptr %76, align 8
  %777 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %776, i32 0, i32 6
  %778 = load ptr, ptr %777, align 8
  %779 = icmp ne ptr %778, null
  br i1 %779, label %780, label %795

780:                                              ; preds = %775
  %781 = load ptr, ptr %76, align 8
  %782 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %781, i32 0, i32 6
  %783 = load ptr, ptr %782, align 8
  %784 = call i32 @fflush(ptr noundef %783)
  %785 = icmp eq i32 %784, -1
  br i1 %785, label %786, label %795

786:                                              ; preds = %780
  %787 = load ptr, ptr %75, align 8
  store ptr %787, ptr %72, align 8
  store i32 21, ptr %73, align 4
  %788 = load ptr, ptr %72, align 8
  %789 = icmp ne ptr %788, null
  br i1 %789, label %790, label %794

790:                                              ; preds = %786
  %791 = load i32, ptr %73, align 4
  %792 = load ptr, ptr %72, align 8
  %793 = getelementptr inbounds %struct.mz_zip_archive, ptr %792, i32 0, i32 5
  store i32 %791, ptr %793, align 4
  br label %794

794:                                              ; preds = %786, %790
  store i32 0, ptr %74, align 4
  br label %802

795:                                              ; preds = %780, %775
  %796 = load ptr, ptr %75, align 8
  %797 = getelementptr inbounds %struct.mz_zip_archive, ptr %796, i32 0, i32 0
  %798 = load i64, ptr %797, align 8
  %799 = add i64 %798, 22
  store i64 %799, ptr %797, align 8
  %800 = load ptr, ptr %75, align 8
  %801 = getelementptr inbounds %struct.mz_zip_archive, ptr %800, i32 0, i32 3
  store i32 3, ptr %801, align 4
  store i32 1, ptr %74, align 4
  br label %802

802:                                              ; preds = %795, %794, %774, %624, %510, %191, %150, %124, %101
  %803 = load i32, ptr %74, align 4
  ret i32 %803
}

declare i32 @fflush(ptr noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_writer_finalize_heap_archive(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  store ptr %0, ptr %11, align 8
  store ptr %1, ptr %12, align 8
  store ptr %2, ptr %13, align 8
  %14 = load ptr, ptr %12, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %3
  %17 = load ptr, ptr %13, align 8
  %18 = icmp ne ptr %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %16, %3
  %20 = load ptr, ptr %11, align 8
  store ptr %20, ptr %4, align 8
  store i32 24, ptr %5, align 4
  %21 = load ptr, ptr %4, align 8
  %22 = icmp ne ptr %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = load i32, ptr %5, align 4
  %25 = load ptr, ptr %4, align 8
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %25, i32 0, i32 5
  store i32 %24, ptr %26, align 4
  br label %27

27:                                               ; preds = %19, %23
  store i32 0, ptr %10, align 4
  br label %91

28:                                               ; preds = %16
  %29 = load ptr, ptr %12, align 8
  store ptr null, ptr %29, align 8
  %30 = load ptr, ptr %13, align 8
  store i64 0, ptr %30, align 8
  %31 = load ptr, ptr %11, align 8
  %32 = icmp ne ptr %31, null
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = load ptr, ptr %11, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, ptr %34, i32 0, i32 15
  %36 = load ptr, ptr %35, align 8
  %37 = icmp ne ptr %36, null
  br i1 %37, label %47, label %38

38:                                               ; preds = %33, %28
  %39 = load ptr, ptr %11, align 8
  store ptr %39, ptr %6, align 8
  store i32 24, ptr %7, align 4
  %40 = load ptr, ptr %6, align 8
  %41 = icmp ne ptr %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = load i32, ptr %7, align 4
  %44 = load ptr, ptr %6, align 8
  %45 = getelementptr inbounds %struct.mz_zip_archive, ptr %44, i32 0, i32 5
  store i32 %43, ptr %45, align 4
  br label %46

46:                                               ; preds = %38, %42
  store i32 0, ptr %10, align 4
  br label %91

47:                                               ; preds = %33
  %48 = load ptr, ptr %11, align 8
  %49 = getelementptr inbounds %struct.mz_zip_archive, ptr %48, i32 0, i32 12
  %50 = load ptr, ptr %49, align 8
  %51 = icmp ne ptr %50, @mz_zip_heap_write_func
  br i1 %51, label %52, label %61

52:                                               ; preds = %47
  %53 = load ptr, ptr %11, align 8
  store ptr %53, ptr %8, align 8
  store i32 24, ptr %9, align 4
  %54 = load ptr, ptr %8, align 8
  %55 = icmp ne ptr %54, null
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = load i32, ptr %9, align 4
  %58 = load ptr, ptr %8, align 8
  %59 = getelementptr inbounds %struct.mz_zip_archive, ptr %58, i32 0, i32 5
  store i32 %57, ptr %59, align 4
  br label %60

60:                                               ; preds = %52, %56
  store i32 0, ptr %10, align 4
  br label %91

61:                                               ; preds = %47
  %62 = load ptr, ptr %11, align 8
  %63 = call i32 @mz_zip_writer_finalize_archive(ptr noundef %62)
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  store i32 0, ptr %10, align 4
  br label %91

66:                                               ; preds = %61
  %67 = load ptr, ptr %11, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive, ptr %67, i32 0, i32 15
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %69, i32 0, i32 8
  %71 = load ptr, ptr %70, align 8
  %72 = load ptr, ptr %12, align 8
  store ptr %71, ptr %72, align 8
  %73 = load ptr, ptr %11, align 8
  %74 = getelementptr inbounds %struct.mz_zip_archive, ptr %73, i32 0, i32 15
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %75, i32 0, i32 9
  %77 = load i64, ptr %76, align 8
  %78 = load ptr, ptr %13, align 8
  store i64 %77, ptr %78, align 8
  %79 = load ptr, ptr %11, align 8
  %80 = getelementptr inbounds %struct.mz_zip_archive, ptr %79, i32 0, i32 15
  %81 = load ptr, ptr %80, align 8
  %82 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %81, i32 0, i32 8
  store ptr null, ptr %82, align 8
  %83 = load ptr, ptr %11, align 8
  %84 = getelementptr inbounds %struct.mz_zip_archive, ptr %83, i32 0, i32 15
  %85 = load ptr, ptr %84, align 8
  %86 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %85, i32 0, i32 10
  store i64 0, ptr %86, align 8
  %87 = load ptr, ptr %11, align 8
  %88 = getelementptr inbounds %struct.mz_zip_archive, ptr %87, i32 0, i32 15
  %89 = load ptr, ptr %88, align 8
  %90 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %89, i32 0, i32 9
  store i64 0, ptr %90, align 8
  store i32 1, ptr %10, align 4
  br label %91

91:                                               ; preds = %66, %65, %60, %46, %27
  %92 = load i32, ptr %10, align 4
  ret i32 %92
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_add_mem_to_archive_file_in_place(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, i16 noundef zeroext %5, i32 noundef %6) #0 {
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i16, align 2
  %14 = alloca i32, align 4
  store ptr %0, ptr %8, align 8
  store ptr %1, ptr %9, align 8
  store ptr %2, ptr %10, align 8
  store i64 %3, ptr %11, align 8
  store ptr %4, ptr %12, align 8
  store i16 %5, ptr %13, align 2
  store i32 %6, ptr %14, align 4
  %15 = load ptr, ptr %8, align 8
  %16 = load ptr, ptr %9, align 8
  %17 = load ptr, ptr %10, align 8
  %18 = load i64, ptr %11, align 8
  %19 = load ptr, ptr %12, align 8
  %20 = load i16, ptr %13, align 2
  %21 = load i32, ptr %14, align 4
  %22 = call i32 @mz_zip_add_mem_to_archive_file_in_place_v2(ptr noundef %15, ptr noundef %16, ptr noundef %17, i64 noundef %18, ptr noundef %19, i16 noundef zeroext %20, i32 noundef %21, ptr noundef null)
  ret i32 %22
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_add_mem_to_archive_file_in_place_v2(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, i16 noundef zeroext %5, i32 noundef %6, ptr noundef %7) #0 {
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  %14 = alloca ptr, align 8
  %15 = alloca i16, align 2
  %16 = alloca i32, align 4
  %17 = alloca ptr, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %struct.mz_zip_archive, align 8
  %21 = alloca %struct.stat, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store ptr %0, ptr %10, align 8
  store ptr %1, ptr %11, align 8
  store ptr %2, ptr %12, align 8
  store i64 %3, ptr %13, align 8
  store ptr %4, ptr %14, align 8
  store i16 %5, ptr %15, align 2
  store i32 %6, ptr %16, align 4
  store ptr %7, ptr %17, align 8
  store i32 0, ptr %19, align 4
  store i32 0, ptr %22, align 4
  call void @mz_zip_zero_struct(ptr noundef %20)
  %24 = load i32, ptr %16, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %8
  store i32 6, ptr %16, align 4
  br label %27

27:                                               ; preds = %26, %8
  %28 = load ptr, ptr %10, align 8
  %29 = icmp ne ptr %28, null
  br i1 %29, label %30, label %50

30:                                               ; preds = %27
  %31 = load ptr, ptr %11, align 8
  %32 = icmp ne ptr %31, null
  br i1 %32, label %33, label %50

33:                                               ; preds = %30
  %34 = load i64, ptr %13, align 8
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %33
  %37 = load ptr, ptr %12, align 8
  %38 = icmp ne ptr %37, null
  br i1 %38, label %39, label %50

39:                                               ; preds = %36, %33
  %40 = load i16, ptr %15, align 2
  %41 = zext i16 %40 to i32
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  %44 = load ptr, ptr %14, align 8
  %45 = icmp ne ptr %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %43, %39
  %47 = load i32, ptr %16, align 4
  %48 = and i32 %47, 15
  %49 = icmp ugt i32 %48, 10
  br i1 %49, label %50, label %56

50:                                               ; preds = %46, %43, %36, %30, %27
  %51 = load ptr, ptr %17, align 8
  %52 = icmp ne ptr %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = load ptr, ptr %17, align 8
  store i32 24, ptr %54, align 4
  br label %55

55:                                               ; preds = %53, %50
  store i32 0, ptr %9, align 4
  br label %161

56:                                               ; preds = %46
  %57 = load ptr, ptr %11, align 8
  %58 = call i32 @mz_zip_writer_validate_archive_name(ptr noundef %57)
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %56
  %61 = load ptr, ptr %17, align 8
  %62 = icmp ne ptr %61, null
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = load ptr, ptr %17, align 8
  store i32 25, ptr %64, align 4
  br label %65

65:                                               ; preds = %63, %60
  store i32 0, ptr %9, align 4
  br label %161

66:                                               ; preds = %56
  %67 = load ptr, ptr %10, align 8
  %68 = call i32 @stat(ptr noundef %67, ptr noundef %21)
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %84

70:                                               ; preds = %66
  %71 = load ptr, ptr %10, align 8
  %72 = load i32, ptr %16, align 4
  %73 = call i32 @mz_zip_writer_init_file_v2(ptr noundef %20, ptr noundef %71, i64 noundef 0, i32 noundef %72)
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %70
  %76 = load ptr, ptr %17, align 8
  %77 = icmp ne ptr %76, null
  br i1 %77, label %78, label %82

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.mz_zip_archive, ptr %20, i32 0, i32 5
  %80 = load i32, ptr %79, align 4
  %81 = load ptr, ptr %17, align 8
  store i32 %80, ptr %81, align 4
  br label %82

82:                                               ; preds = %78, %75
  store i32 0, ptr %9, align 4
  br label %161

83:                                               ; preds = %70
  store i32 1, ptr %19, align 4
  br label %113

84:                                               ; preds = %66
  %85 = load ptr, ptr %10, align 8
  %86 = load i32, ptr %16, align 4
  %87 = or i32 %86, 2048
  %88 = call i32 @mz_zip_reader_init_file_v2(ptr noundef %20, ptr noundef %85, i32 noundef %87, i64 noundef 0, i64 noundef 0)
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %84
  %91 = load ptr, ptr %17, align 8
  %92 = icmp ne ptr %91, null
  br i1 %92, label %93, label %97

93:                                               ; preds = %90
  %94 = getelementptr inbounds %struct.mz_zip_archive, ptr %20, i32 0, i32 5
  %95 = load i32, ptr %94, align 4
  %96 = load ptr, ptr %17, align 8
  store i32 %95, ptr %96, align 4
  br label %97

97:                                               ; preds = %93, %90
  store i32 0, ptr %9, align 4
  br label %161

98:                                               ; preds = %84
  %99 = load ptr, ptr %10, align 8
  %100 = load i32, ptr %16, align 4
  %101 = call i32 @mz_zip_writer_init_from_reader_v2(ptr noundef %20, ptr noundef %99, i32 noundef %100)
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %112, label %103

103:                                              ; preds = %98
  %104 = load ptr, ptr %17, align 8
  %105 = icmp ne ptr %104, null
  br i1 %105, label %106, label %110

106:                                              ; preds = %103
  %107 = getelementptr inbounds %struct.mz_zip_archive, ptr %20, i32 0, i32 5
  %108 = load i32, ptr %107, align 4
  %109 = load ptr, ptr %17, align 8
  store i32 %108, ptr %109, align 4
  br label %110

110:                                              ; preds = %106, %103
  %111 = call i32 @mz_zip_reader_end_internal(ptr noundef %20, i32 noundef 0)
  store i32 0, ptr %9, align 4
  br label %161

112:                                              ; preds = %98
  br label %113

113:                                              ; preds = %112, %83
  %114 = load ptr, ptr %11, align 8
  %115 = load ptr, ptr %12, align 8
  %116 = load i64, ptr %13, align 8
  %117 = load ptr, ptr %14, align 8
  %118 = load i16, ptr %15, align 2
  %119 = load i32, ptr %16, align 4
  %120 = call i32 @mz_zip_writer_add_mem_ex(ptr noundef %20, ptr noundef %114, ptr noundef %115, i64 noundef %116, ptr noundef %117, i16 noundef zeroext %118, i32 noundef %119, i64 noundef 0, i32 noundef 0)
  store i32 %120, ptr %18, align 4
  %121 = getelementptr inbounds %struct.mz_zip_archive, ptr %20, i32 0, i32 5
  %122 = load i32, ptr %121, align 4
  store i32 %122, ptr %22, align 4
  %123 = call i32 @mz_zip_writer_finalize_archive(ptr noundef %20)
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %132, label %125

125:                                              ; preds = %113
  %126 = load i32, ptr %22, align 4
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %struct.mz_zip_archive, ptr %20, i32 0, i32 5
  %130 = load i32, ptr %129, align 4
  store i32 %130, ptr %22, align 4
  br label %131

131:                                              ; preds = %128, %125
  store i32 0, ptr %18, align 4
  br label %132

132:                                              ; preds = %131, %113
  %133 = load i32, ptr %18, align 4
  %134 = call i32 @mz_zip_writer_end_internal(ptr noundef %20, i32 noundef %133)
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %143, label %136

136:                                              ; preds = %132
  %137 = load i32, ptr %22, align 4
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %struct.mz_zip_archive, ptr %20, i32 0, i32 5
  %141 = load i32, ptr %140, align 4
  store i32 %141, ptr %22, align 4
  br label %142

142:                                              ; preds = %139, %136
  store i32 0, ptr %18, align 4
  br label %143

143:                                              ; preds = %142, %132
  %144 = load i32, ptr %18, align 4
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %153, label %146

146:                                              ; preds = %143
  %147 = load i32, ptr %19, align 4
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %146
  %150 = load ptr, ptr %10, align 8
  %151 = call i32 @remove(ptr noundef %150)
  store i32 %151, ptr %23, align 4
  %152 = load i32, ptr %23, align 4
  br label %153

153:                                              ; preds = %149, %146, %143
  %154 = load ptr, ptr %17, align 8
  %155 = icmp ne ptr %154, null
  br i1 %155, label %156, label %159

156:                                              ; preds = %153
  %157 = load i32, ptr %22, align 4
  %158 = load ptr, ptr %17, align 8
  store i32 %157, ptr %158, align 4
  br label %159

159:                                              ; preds = %156, %153
  %160 = load i32, ptr %18, align 4
  store i32 %160, ptr %9, align 4
  br label %161

161:                                              ; preds = %159, %110, %97, %82, %65, %55
  %162 = load i32, ptr %9, align 4
  ret i32 %162
}

declare i32 @stat(ptr noundef, ptr noundef) #1

declare i32 @remove(ptr noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @mz_zip_extract_archive_file_to_heap_v2(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4, ptr noundef %5) #0 {
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.mz_zip_archive, align 8
  %16 = alloca ptr, align 8
  store ptr %0, ptr %8, align 8
  store ptr %1, ptr %9, align 8
  store ptr %2, ptr %10, align 8
  store ptr %3, ptr %11, align 8
  store i32 %4, ptr %12, align 4
  store ptr %5, ptr %13, align 8
  store ptr null, ptr %16, align 8
  %17 = load ptr, ptr %11, align 8
  %18 = icmp ne ptr %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %6
  %20 = load ptr, ptr %11, align 8
  store i64 0, ptr %20, align 8
  br label %21

21:                                               ; preds = %19, %6
  %22 = load ptr, ptr %8, align 8
  %23 = icmp ne ptr %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = load ptr, ptr %9, align 8
  %26 = icmp ne ptr %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24, %21
  %28 = load ptr, ptr %13, align 8
  %29 = icmp ne ptr %28, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = load ptr, ptr %13, align 8
  store i32 24, ptr %31, align 4
  br label %32

32:                                               ; preds = %30, %27
  store ptr null, ptr %7, align 8
  br label %71

33:                                               ; preds = %24
  call void @mz_zip_zero_struct(ptr noundef %15)
  %34 = load ptr, ptr %8, align 8
  %35 = load i32, ptr %12, align 4
  %36 = or i32 %35, 2048
  %37 = call i32 @mz_zip_reader_init_file_v2(ptr noundef %15, ptr noundef %34, i32 noundef %36, i64 noundef 0, i64 noundef 0)
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %33
  %40 = load ptr, ptr %13, align 8
  %41 = icmp ne ptr %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.mz_zip_archive, ptr %15, i32 0, i32 5
  %44 = load i32, ptr %43, align 4
  %45 = load ptr, ptr %13, align 8
  store i32 %44, ptr %45, align 4
  br label %46

46:                                               ; preds = %42, %39
  store ptr null, ptr %7, align 8
  br label %71

47:                                               ; preds = %33
  %48 = load ptr, ptr %9, align 8
  %49 = load ptr, ptr %10, align 8
  %50 = load i32, ptr %12, align 4
  %51 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %15, ptr noundef %48, ptr noundef %49, i32 noundef %50, ptr noundef %14)
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %47
  %54 = load i32, ptr %14, align 4
  %55 = load ptr, ptr %11, align 8
  %56 = load i32, ptr %12, align 4
  %57 = call ptr @mz_zip_reader_extract_to_heap(ptr noundef %15, i32 noundef %54, ptr noundef %55, i32 noundef %56)
  store ptr %57, ptr %16, align 8
  br label %58

58:                                               ; preds = %53, %47
  %59 = load ptr, ptr %16, align 8
  %60 = icmp ne ptr %59, null
  %61 = zext i1 %60 to i32
  %62 = call i32 @mz_zip_reader_end_internal(ptr noundef %15, i32 noundef %61)
  %63 = load ptr, ptr %13, align 8
  %64 = icmp ne ptr %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %58
  %66 = getelementptr inbounds %struct.mz_zip_archive, ptr %15, i32 0, i32 5
  %67 = load i32, ptr %66, align 4
  %68 = load ptr, ptr %13, align 8
  store i32 %67, ptr %68, align 4
  br label %69

69:                                               ; preds = %65, %58
  %70 = load ptr, ptr %16, align 8
  store ptr %70, ptr %7, align 8
  br label %71

71:                                               ; preds = %69, %46, %32
  %72 = load ptr, ptr %7, align 8
  ret ptr %72
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @mz_zip_extract_archive_file_to_heap(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store ptr %2, ptr %7, align 8
  store i32 %3, ptr %8, align 4
  %9 = load ptr, ptr %5, align 8
  %10 = load ptr, ptr %6, align 8
  %11 = load ptr, ptr %7, align 8
  %12 = load i32, ptr %8, align 4
  %13 = call ptr @mz_zip_extract_archive_file_to_heap_v2(ptr noundef %9, ptr noundef %10, ptr noundef null, ptr noundef %11, i32 noundef %12, ptr noundef null)
  ret ptr %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_get_mode(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = icmp ne ptr %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = load ptr, ptr %2, align 8
  %7 = getelementptr inbounds %struct.mz_zip_archive, ptr %6, i32 0, i32 3
  %8 = load i32, ptr %7, align 4
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i32 [ %8, %5 ], [ 0, %9 ]
  ret i32 %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_get_type(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = icmp ne ptr %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = load ptr, ptr %2, align 8
  %7 = getelementptr inbounds %struct.mz_zip_archive, ptr %6, i32 0, i32 4
  %8 = load i32, ptr %7, align 8
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i32 [ %8, %5 ], [ 0, %9 ]
  ret i32 %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_set_last_error(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store i32 %1, ptr %5, align 4
  %7 = load ptr, ptr %4, align 8
  %8 = icmp ne ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  store i32 24, ptr %3, align 4
  br label %18

10:                                               ; preds = %2
  %11 = load ptr, ptr %4, align 8
  %12 = getelementptr inbounds %struct.mz_zip_archive, ptr %11, i32 0, i32 5
  %13 = load i32, ptr %12, align 4
  store i32 %13, ptr %6, align 4
  %14 = load i32, ptr %5, align 4
  %15 = load ptr, ptr %4, align 8
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %15, i32 0, i32 5
  store i32 %14, ptr %16, align 4
  %17 = load i32, ptr %6, align 4
  store i32 %17, ptr %3, align 4
  br label %18

18:                                               ; preds = %10, %9
  %19 = load i32, ptr %3, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_peek_last_error(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = icmp ne ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store i32 24, ptr %2, align 4
  br label %11

7:                                                ; preds = %1
  %8 = load ptr, ptr %3, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i32 0, i32 5
  %10 = load i32, ptr %9, align 4
  store i32 %10, ptr %2, align 4
  br label %11

11:                                               ; preds = %7, %6
  %12 = load i32, ptr %2, align 4
  ret i32 %12
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_clear_last_error(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = call i32 @mz_zip_set_last_error(ptr noundef %3, i32 noundef 0)
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_get_last_error(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = icmp ne ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  store i32 24, ptr %2, align 4
  br label %15

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8
  %10 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i32 0, i32 5
  %11 = load i32, ptr %10, align 4
  store i32 %11, ptr %4, align 4
  %12 = load ptr, ptr %3, align 8
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %12, i32 0, i32 5
  store i32 0, ptr %13, align 4
  %14 = load i32, ptr %4, align 4
  store i32 %14, ptr %2, align 4
  br label %15

15:                                               ; preds = %8, %7
  %16 = load i32, ptr %2, align 4
  ret i32 %16
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @mz_zip_get_error_string(i32 noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  %4 = load i32, ptr %3, align 4
  switch i32 %4, label %38 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
    i32 6, label %11
    i32 7, label %12
    i32 8, label %13
    i32 9, label %14
    i32 10, label %15
    i32 11, label %16
    i32 12, label %17
    i32 13, label %18
    i32 14, label %19
    i32 15, label %20
    i32 16, label %21
    i32 17, label %22
    i32 18, label %23
    i32 19, label %24
    i32 20, label %25
    i32 21, label %26
    i32 22, label %27
    i32 23, label %28
    i32 24, label %29
    i32 25, label %30
    i32 26, label %31
    i32 27, label %32
    i32 28, label %33
    i32 29, label %34
    i32 30, label %35
    i32 31, label %36
    i32 32, label %37
  ]

5:                                                ; preds = %1
  store ptr @.str.25, ptr %2, align 8
  br label %40

6:                                                ; preds = %1
  store ptr @.str.26, ptr %2, align 8
  br label %40

7:                                                ; preds = %1
  store ptr @.str.27, ptr %2, align 8
  br label %40

8:                                                ; preds = %1
  store ptr @.str.28, ptr %2, align 8
  br label %40

9:                                                ; preds = %1
  store ptr @.str.29, ptr %2, align 8
  br label %40

10:                                               ; preds = %1
  store ptr @.str.30, ptr %2, align 8
  br label %40

11:                                               ; preds = %1
  store ptr @.str.31, ptr %2, align 8
  br label %40

12:                                               ; preds = %1
  store ptr @.str.32, ptr %2, align 8
  br label %40

13:                                               ; preds = %1
  store ptr @.str.33, ptr %2, align 8
  br label %40

14:                                               ; preds = %1
  store ptr @.str.34, ptr %2, align 8
  br label %40

15:                                               ; preds = %1
  store ptr @.str.35, ptr %2, align 8
  br label %40

16:                                               ; preds = %1
  store ptr @.str.36, ptr %2, align 8
  br label %40

17:                                               ; preds = %1
  store ptr @.str.37, ptr %2, align 8
  br label %40

18:                                               ; preds = %1
  store ptr @.str.38, ptr %2, align 8
  br label %40

19:                                               ; preds = %1
  store ptr @.str.39, ptr %2, align 8
  br label %40

20:                                               ; preds = %1
  store ptr @.str.40, ptr %2, align 8
  br label %40

21:                                               ; preds = %1
  store ptr @.str.41, ptr %2, align 8
  br label %40

22:                                               ; preds = %1
  store ptr @.str.42, ptr %2, align 8
  br label %40

23:                                               ; preds = %1
  store ptr @.str.43, ptr %2, align 8
  br label %40

24:                                               ; preds = %1
  store ptr @.str.44, ptr %2, align 8
  br label %40

25:                                               ; preds = %1
  store ptr @.str.45, ptr %2, align 8
  br label %40

26:                                               ; preds = %1
  store ptr @.str.46, ptr %2, align 8
  br label %40

27:                                               ; preds = %1
  store ptr @.str.47, ptr %2, align 8
  br label %40

28:                                               ; preds = %1
  store ptr @.str.48, ptr %2, align 8
  br label %40

29:                                               ; preds = %1
  store ptr @.str.49, ptr %2, align 8
  br label %40

30:                                               ; preds = %1
  store ptr @.str.50, ptr %2, align 8
  br label %40

31:                                               ; preds = %1
  store ptr @.str.51, ptr %2, align 8
  br label %40

32:                                               ; preds = %1
  store ptr @.str.52, ptr %2, align 8
  br label %40

33:                                               ; preds = %1
  store ptr @.str.53, ptr %2, align 8
  br label %40

34:                                               ; preds = %1
  store ptr @.str.54, ptr %2, align 8
  br label %40

35:                                               ; preds = %1
  store ptr @.str.55, ptr %2, align 8
  br label %40

36:                                               ; preds = %1
  store ptr @.str.56, ptr %2, align 8
  br label %40

37:                                               ; preds = %1
  store ptr @.str.57, ptr %2, align 8
  br label %40

38:                                               ; preds = %1
  br label %39

39:                                               ; preds = %38
  store ptr @.str.58, ptr %2, align 8
  br label %40

40:                                               ; preds = %39, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5
  %41 = load ptr, ptr %2, align 8
  ret ptr %41
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_is_zip64(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = icmp ne ptr %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = load ptr, ptr %3, align 8
  %8 = getelementptr inbounds %struct.mz_zip_archive, ptr %7, i32 0, i32 15
  %9 = load ptr, ptr %8, align 8
  %10 = icmp ne ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %6, %1
  store i32 0, ptr %2, align 4
  br label %18

12:                                               ; preds = %6
  %13 = load ptr, ptr %3, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %13, i32 0, i32 15
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %15, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  store i32 %17, ptr %2, align 4
  br label %18

18:                                               ; preds = %12, %11
  %19 = load i32, ptr %2, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @mz_zip_get_central_dir_size(ptr noundef %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = icmp ne ptr %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = load ptr, ptr %3, align 8
  %8 = getelementptr inbounds %struct.mz_zip_archive, ptr %7, i32 0, i32 15
  %9 = load ptr, ptr %8, align 8
  %10 = icmp ne ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %6, %1
  store i64 0, ptr %2, align 8
  br label %19

12:                                               ; preds = %6
  %13 = load ptr, ptr %3, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %13, i32 0, i32 15
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %15, i32 0, i32 0
  %17 = getelementptr inbounds %struct.mz_zip_array, ptr %16, i32 0, i32 1
  %18 = load i64, ptr %17, align 8
  store i64 %18, ptr %2, align 8
  br label %19

19:                                               ; preds = %12, %11
  %20 = load i64, ptr %2, align 8
  ret i64 %20
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_get_num_files(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = icmp ne ptr %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = load ptr, ptr %2, align 8
  %7 = getelementptr inbounds %struct.mz_zip_archive, ptr %6, i32 0, i32 2
  %8 = load i32, ptr %7, align 8
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i32 [ %8, %5 ], [ 0, %9 ]
  ret i32 %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @mz_zip_get_archive_size(ptr noundef %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = icmp ne ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store i64 0, ptr %2, align 8
  br label %11

7:                                                ; preds = %1
  %8 = load ptr, ptr %3, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i32 0, i32 0
  %10 = load i64, ptr %9, align 8
  store i64 %10, ptr %2, align 8
  br label %11

11:                                               ; preds = %7, %6
  %12 = load i64, ptr %2, align 8
  ret i64 %12
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @mz_zip_get_archive_file_start_offset(ptr noundef %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = icmp ne ptr %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = load ptr, ptr %3, align 8
  %8 = getelementptr inbounds %struct.mz_zip_archive, ptr %7, i32 0, i32 15
  %9 = load ptr, ptr %8, align 8
  %10 = icmp ne ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %6, %1
  store i64 0, ptr %2, align 8
  br label %18

12:                                               ; preds = %6
  %13 = load ptr, ptr %3, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %13, i32 0, i32 15
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %15, i32 0, i32 7
  %17 = load i64, ptr %16, align 8
  store i64 %17, ptr %2, align 8
  br label %18

18:                                               ; preds = %12, %11
  %19 = load i64, ptr %2, align 8
  ret i64 %19
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define ptr @mz_zip_get_cfile(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = icmp ne ptr %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = load ptr, ptr %3, align 8
  %8 = getelementptr inbounds %struct.mz_zip_archive, ptr %7, i32 0, i32 15
  %9 = load ptr, ptr %8, align 8
  %10 = icmp ne ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %6, %1
  store ptr null, ptr %2, align 8
  br label %18

12:                                               ; preds = %6
  %13 = load ptr, ptr %3, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %13, i32 0, i32 15
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %15, i32 0, i32 6
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %2, align 8
  br label %18

18:                                               ; preds = %12, %11
  %19 = load ptr, ptr %2, align 8
  ret ptr %19
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i64 @mz_zip_read_archive_data(ptr noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  store ptr %0, ptr %8, align 8
  store i64 %1, ptr %9, align 8
  store ptr %2, ptr %10, align 8
  store i64 %3, ptr %11, align 8
  %12 = load ptr, ptr %8, align 8
  %13 = icmp ne ptr %12, null
  br i1 %13, label %14, label %27

14:                                               ; preds = %4
  %15 = load ptr, ptr %8, align 8
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %15, i32 0, i32 15
  %17 = load ptr, ptr %16, align 8
  %18 = icmp ne ptr %17, null
  br i1 %18, label %19, label %27

19:                                               ; preds = %14
  %20 = load ptr, ptr %10, align 8
  %21 = icmp ne ptr %20, null
  br i1 %21, label %22, label %27

22:                                               ; preds = %19
  %23 = load ptr, ptr %8, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %23, i32 0, i32 11
  %25 = load ptr, ptr %24, align 8
  %26 = icmp ne ptr %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %22, %19, %14, %4
  %28 = load ptr, ptr %8, align 8
  store ptr %28, ptr %5, align 8
  store i32 24, ptr %6, align 4
  %29 = load ptr, ptr %5, align 8
  %30 = icmp ne ptr %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = load i32, ptr %6, align 4
  %33 = load ptr, ptr %5, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %33, i32 0, i32 5
  store i32 %32, ptr %34, align 4
  br label %35

35:                                               ; preds = %27, %31
  %36 = sext i32 0 to i64
  store i64 %36, ptr %7, align 8
  br label %48

37:                                               ; preds = %22
  %38 = load ptr, ptr %8, align 8
  %39 = getelementptr inbounds %struct.mz_zip_archive, ptr %38, i32 0, i32 11
  %40 = load ptr, ptr %39, align 8
  %41 = load ptr, ptr %8, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive, ptr %41, i32 0, i32 14
  %43 = load ptr, ptr %42, align 8
  %44 = load i64, ptr %9, align 8
  %45 = load ptr, ptr %10, align 8
  %46 = load i64, ptr %11, align 8
  %47 = call i64 %40(ptr noundef %43, i64 noundef %44, ptr noundef %45, i64 noundef %46)
  store i64 %47, ptr %7, align 8
  br label %48

48:                                               ; preds = %37, %35
  %49 = load i64, ptr %7, align 8
  ret i64 %49
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_reader_get_filename(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  store ptr %0, ptr %11, align 8
  store i32 %1, ptr %12, align 4
  store ptr %2, ptr %13, align 8
  store i32 %3, ptr %14, align 4
  %17 = load ptr, ptr %11, align 8
  %18 = load i32, ptr %12, align 4
  store ptr %17, ptr %6, align 8
  store i32 %18, ptr %7, align 4
  %19 = load ptr, ptr %6, align 8
  %20 = icmp ne ptr %19, null
  br i1 %20, label %21, label %32

21:                                               ; preds = %4
  %22 = load ptr, ptr %6, align 8
  %23 = getelementptr inbounds %struct.mz_zip_archive, ptr %22, i32 0, i32 15
  %24 = load ptr, ptr %23, align 8
  %25 = icmp ne ptr %24, null
  br i1 %25, label %26, label %32

26:                                               ; preds = %21
  %27 = load i32, ptr %7, align 4
  %28 = load ptr, ptr %6, align 8
  %29 = getelementptr inbounds %struct.mz_zip_archive, ptr %28, i32 0, i32 2
  %30 = load i32, ptr %29, align 8
  %31 = icmp uge i32 %27, %30
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %21, %4
  store ptr null, ptr %5, align 8
  br label %49

33:                                               ; preds = %26
  %34 = load ptr, ptr %6, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, ptr %34, i32 0, i32 15
  %36 = load ptr, ptr %35, align 8
  %37 = load ptr, ptr %36, align 8
  %38 = load ptr, ptr %6, align 8
  %39 = getelementptr inbounds %struct.mz_zip_archive, ptr %38, i32 0, i32 15
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %40, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8
  %43 = load i32, ptr %7, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, ptr %42, i64 %44
  %46 = load i32, ptr %45, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8, ptr %37, i64 %47
  store ptr %48, ptr %5, align 8
  br label %49

49:                                               ; preds = %32, %33
  %50 = load ptr, ptr %5, align 8
  store ptr %50, ptr %16, align 8
  %51 = load ptr, ptr %16, align 8
  %52 = icmp ne ptr %51, null
  br i1 %52, label %68, label %53

53:                                               ; preds = %49
  %54 = load i32, ptr %14, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %53
  %57 = load ptr, ptr %13, align 8
  %58 = getelementptr inbounds i8, ptr %57, i64 0
  store i8 0, ptr %58, align 1
  br label %59

59:                                               ; preds = %56, %53
  %60 = load ptr, ptr %11, align 8
  store ptr %60, ptr %8, align 8
  store i32 24, ptr %9, align 4
  %61 = load ptr, ptr %8, align 8
  %62 = icmp ne ptr %61, null
  br i1 %62, label %63, label %67

63:                                               ; preds = %59
  %64 = load i32, ptr %9, align 4
  %65 = load ptr, ptr %8, align 8
  %66 = getelementptr inbounds %struct.mz_zip_archive, ptr %65, i32 0, i32 5
  store i32 %64, ptr %66, align 4
  br label %67

67:                                               ; preds = %59, %63
  store i32 0, ptr %10, align 4
  br label %110

68:                                               ; preds = %49
  %69 = load ptr, ptr %16, align 8
  %70 = getelementptr inbounds i8, ptr %69, i64 28
  %71 = getelementptr inbounds i8, ptr %70, i64 0
  %72 = load i8, ptr %71, align 1
  %73 = zext i8 %72 to i32
  %74 = load ptr, ptr %16, align 8
  %75 = getelementptr inbounds i8, ptr %74, i64 28
  %76 = getelementptr inbounds i8, ptr %75, i64 1
  %77 = load i8, ptr %76, align 1
  %78 = zext i8 %77 to i32
  %79 = shl i32 %78, 8
  %80 = or i32 %73, %79
  store i32 %80, ptr %15, align 4
  %81 = load i32, ptr %14, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %107

83:                                               ; preds = %68
  %84 = load i32, ptr %15, align 4
  %85 = load i32, ptr %14, align 4
  %86 = sub i32 %85, 1
  %87 = icmp ult i32 %84, %86
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  %89 = load i32, ptr %15, align 4
  br label %93

90:                                               ; preds = %83
  %91 = load i32, ptr %14, align 4
  %92 = sub i32 %91, 1
  br label %93

93:                                               ; preds = %90, %88
  %94 = phi i32 [ %89, %88 ], [ %92, %90 ]
  store i32 %94, ptr %15, align 4
  %95 = load ptr, ptr %13, align 8
  %96 = load ptr, ptr %16, align 8
  %97 = getelementptr inbounds i8, ptr %96, i64 46
  %98 = load i32, ptr %15, align 4
  %99 = zext i32 %98 to i64
  %100 = load ptr, ptr %13, align 8
  %101 = call i64 @llvm.objectsize.i64.p0(ptr %100, i1 false, i1 true, i1 false)
  %102 = call ptr @__memcpy_chk(ptr noundef %95, ptr noundef %97, i64 noundef %99, i64 noundef %101) #11
  %103 = load ptr, ptr %13, align 8
  %104 = load i32, ptr %15, align 4
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i8, ptr %103, i64 %105
  store i8 0, ptr %106, align 1
  br label %107

107:                                              ; preds = %93, %68
  %108 = load i32, ptr %15, align 4
  %109 = add i32 %108, 1
  store i32 %109, ptr %10, align 4
  br label %110

110:                                              ; preds = %107, %67
  %111 = load i32, ptr %10, align 4
  ret i32 %111
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @mz_zip_end(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = icmp ne ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store i32 0, ptr %2, align 4
  br label %30

7:                                                ; preds = %1
  %8 = load ptr, ptr %3, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i32 0, i32 3
  %10 = load i32, ptr %9, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = load ptr, ptr %3, align 8
  %14 = call i32 @mz_zip_reader_end(ptr noundef %13)
  store i32 %14, ptr %2, align 4
  br label %30

15:                                               ; preds = %7
  %16 = load ptr, ptr %3, align 8
  %17 = getelementptr inbounds %struct.mz_zip_archive, ptr %16, i32 0, i32 3
  %18 = load i32, ptr %17, align 4
  %19 = icmp eq i32 %18, 2
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = load ptr, ptr %3, align 8
  %22 = getelementptr inbounds %struct.mz_zip_archive, ptr %21, i32 0, i32 3
  %23 = load i32, ptr %22, align 4
  %24 = icmp eq i32 %23, 3
  br i1 %24, label %25, label %28

25:                                               ; preds = %20, %15
  %26 = load ptr, ptr %3, align 8
  %27 = call i32 @mz_zip_writer_end(ptr noundef %26)
  store i32 %27, ptr %2, align 4
  br label %30

28:                                               ; preds = %20
  br label %29

29:                                               ; preds = %28
  store i32 0, ptr %2, align 4
  br label %30

30:                                               ; preds = %29, %25, %12, %6
  %31 = load i32, ptr %2, align 4
  ret i32 %31
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @main(i32 noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32 0, ptr %3, align 4
  store i32 %0, ptr %4, align 4
  store ptr %1, ptr %5, align 8
  store i32 0, ptr %6, align 4
  %16 = load ptr, ptr @s_pStr, align 8
  %17 = call i64 @strlen(ptr noundef %16)
  store i64 %17, ptr %8, align 8
  %18 = load i64, ptr %8, align 8
  %19 = call i64 @mz_compressBound(i64 noundef %18)
  store i64 %19, ptr %9, align 8
  %20 = load i64, ptr %8, align 8
  store i64 %20, ptr %10, align 8
  store i32 0, ptr %13, align 4
  %21 = load i32, ptr %4, align 4
  %22 = load ptr, ptr %5, align 8
  %23 = call i32 (ptr, ...) @printf(ptr noundef @.str.59, ptr noundef @.str)
  br label %24

24:                                               ; preds = %128, %2
  %25 = load i64, ptr %9, align 8
  %26 = call ptr @malloc(i64 noundef %25) #9
  store ptr %26, ptr %11, align 8
  %27 = load i64, ptr %8, align 8
  %28 = call ptr @malloc(i64 noundef %27) #9
  store ptr %28, ptr %12, align 8
  %29 = load ptr, ptr %11, align 8
  %30 = icmp ne ptr %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = load ptr, ptr %12, align 8
  %33 = icmp ne ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31, %24
  %35 = call i32 (ptr, ...) @printf(ptr noundef @.str.60)
  store i32 1, ptr %3, align 4
  br label %133

36:                                               ; preds = %31
  %37 = load ptr, ptr %11, align 8
  %38 = load ptr, ptr @s_pStr, align 8
  %39 = load i64, ptr %8, align 8
  %40 = call i32 @mz_compress(ptr noundef %37, ptr noundef %9, ptr noundef %38, i64 noundef %39)
  store i32 %40, ptr %7, align 4
  %41 = load i32, ptr %7, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %36
  %44 = call i32 (ptr, ...) @printf(ptr noundef @.str.61)
  %45 = load ptr, ptr %11, align 8
  call void @free(ptr noundef %45)
  %46 = load ptr, ptr %12, align 8
  call void @free(ptr noundef %46)
  store i32 1, ptr %3, align 4
  br label %133

47:                                               ; preds = %36
  %48 = load i64, ptr %8, align 8
  %49 = trunc i64 %48 to i32
  %50 = load i64, ptr %9, align 8
  %51 = trunc i64 %50 to i32
  %52 = call i32 (ptr, ...) @printf(ptr noundef @.str.62, i32 noundef %49, i32 noundef %51)
  %53 = load i32, ptr %6, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %80

55:                                               ; preds = %47
  %56 = call i32 @rand()
  %57 = srem i32 %56, 3
  %58 = add nsw i32 1, %57
  store i32 %58, ptr %14, align 4
  br label %59

59:                                               ; preds = %63, %55
  %60 = load i32, ptr %14, align 4
  %61 = add i32 %60, -1
  store i32 %61, ptr %14, align 4
  %62 = icmp ne i32 %60, 0
  br i1 %62, label %63, label %79

63:                                               ; preds = %59
  %64 = call i32 @rand()
  %65 = sext i32 %64 to i64
  %66 = load i64, ptr %9, align 8
  %67 = urem i64 %65, %66
  %68 = trunc i64 %67 to i32
  store i32 %68, ptr %15, align 4
  %69 = call i32 @rand()
  %70 = and i32 %69, 255
  %71 = load ptr, ptr %11, align 8
  %72 = load i32, ptr %15, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i8, ptr %71, i64 %73
  %75 = load i8, ptr %74, align 1
  %76 = zext i8 %75 to i32
  %77 = xor i32 %76, %70
  %78 = trunc i32 %77 to i8
  store i8 %78, ptr %74, align 1
  br label %59, !llvm.loop !130

79:                                               ; preds = %59
  br label %80

80:                                               ; preds = %79, %47
  %81 = load ptr, ptr %12, align 8
  %82 = load ptr, ptr %11, align 8
  %83 = load i64, ptr %9, align 8
  %84 = call i32 @mz_uncompress(ptr noundef %81, ptr noundef %10, ptr noundef %82, i64 noundef %83)
  store i32 %84, ptr %7, align 4
  %85 = load i32, ptr %7, align 4
  %86 = icmp eq i32 %85, 0
  %87 = zext i1 %86 to i32
  %88 = load i32, ptr %13, align 4
  %89 = add i32 %88, %87
  store i32 %89, ptr %13, align 4
  %90 = load i32, ptr %6, align 4
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %80
  %93 = load i32, ptr %6, align 4
  %94 = load i32, ptr %13, align 4
  %95 = call i32 (ptr, ...) @printf(ptr noundef @.str.63, i32 noundef %93, i32 noundef %94)
  br label %123

96:                                               ; preds = %80
  %97 = load i32, ptr %7, align 4
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %96
  %100 = call i32 (ptr, ...) @printf(ptr noundef @.str.64)
  %101 = load ptr, ptr %11, align 8
  call void @free(ptr noundef %101)
  %102 = load ptr, ptr %12, align 8
  call void @free(ptr noundef %102)
  store i32 1, ptr %3, align 4
  br label %133

103:                                              ; preds = %96
  %104 = load i64, ptr %9, align 8
  %105 = trunc i64 %104 to i32
  %106 = load i64, ptr %10, align 8
  %107 = trunc i64 %106 to i32
  %108 = call i32 (ptr, ...) @printf(ptr noundef @.str.65, i32 noundef %105, i32 noundef %107)
  %109 = load i64, ptr %10, align 8
  %110 = load i64, ptr %8, align 8
  %111 = icmp ne i64 %109, %110
  br i1 %111, label %118, label %112

112:                                              ; preds = %103
  %113 = load ptr, ptr %12, align 8
  %114 = load ptr, ptr @s_pStr, align 8
  %115 = load i64, ptr %8, align 8
  %116 = call i32 @memcmp(ptr noundef %113, ptr noundef %114, i64 noundef %115)
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %112, %103
  %119 = call i32 (ptr, ...) @printf(ptr noundef @.str.66)
  %120 = load ptr, ptr %11, align 8
  call void @free(ptr noundef %120)
  %121 = load ptr, ptr %12, align 8
  call void @free(ptr noundef %121)
  store i32 1, ptr %3, align 4
  br label %133

122:                                              ; preds = %112
  br label %123

123:                                              ; preds = %122, %92
  %124 = load ptr, ptr %11, align 8
  call void @free(ptr noundef %124)
  %125 = load ptr, ptr %12, align 8
  call void @free(ptr noundef %125)
  %126 = load i32, ptr %6, align 4
  %127 = add i32 %126, 1
  store i32 %127, ptr %6, align 4
  br label %128

128:                                              ; preds = %123
  %129 = load i32, ptr %4, align 4
  %130 = icmp sge i32 %129, 2
  br i1 %130, label %24, label %131, !llvm.loop !131

131:                                              ; preds = %128
  %132 = call i32 (ptr, ...) @printf(ptr noundef @.str.67)
  store i32 0, ptr %3, align 4
  br label %133

133:                                              ; preds = %131, %118, %99, %43, %34
  %134 = load i32, ptr %3, align 4
  ret i32 %134
}

declare i32 @printf(ptr noundef, ...) #1

declare i32 @rand() #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @tdefl_compress_block(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store i32 %1, ptr %4, align 4
  %5 = load i32, ptr %4, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = load ptr, ptr %3, align 8
  call void @tdefl_start_static_block(ptr noundef %8)
  br label %11

9:                                                ; preds = %2
  %10 = load ptr, ptr %3, align 8
  call void @tdefl_start_dynamic_block(ptr noundef %10)
  br label %11

11:                                               ; preds = %9, %7
  %12 = load ptr, ptr %3, align 8
  %13 = call i32 @tdefl_compress_lz_codes(ptr noundef %12)
  ret i32 %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @tdefl_start_static_block(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  %7 = load ptr, ptr %2, align 8
  %8 = getelementptr inbounds %struct.tdefl_compressor, ptr %7, i32 0, i32 38
  %9 = getelementptr inbounds [3 x [288 x i8]], ptr %8, i64 0, i64 0
  %10 = getelementptr inbounds [288 x i8], ptr %9, i64 0, i64 0
  store ptr %10, ptr %4, align 8
  store i32 0, ptr %3, align 4
  br label %11

11:                                               ; preds = %17, %1
  %12 = load i32, ptr %3, align 4
  %13 = icmp ule i32 %12, 143
  br i1 %13, label %14, label %20

14:                                               ; preds = %11
  %15 = load ptr, ptr %4, align 8
  %16 = getelementptr inbounds i8, ptr %15, i32 1
  store ptr %16, ptr %4, align 8
  store i8 8, ptr %15, align 1
  br label %17

17:                                               ; preds = %14
  %18 = load i32, ptr %3, align 4
  %19 = add i32 %18, 1
  store i32 %19, ptr %3, align 4
  br label %11, !llvm.loop !132

20:                                               ; preds = %11
  br label %21

21:                                               ; preds = %27, %20
  %22 = load i32, ptr %3, align 4
  %23 = icmp ule i32 %22, 255
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = load ptr, ptr %4, align 8
  %26 = getelementptr inbounds i8, ptr %25, i32 1
  store ptr %26, ptr %4, align 8
  store i8 9, ptr %25, align 1
  br label %27

27:                                               ; preds = %24
  %28 = load i32, ptr %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, ptr %3, align 4
  br label %21, !llvm.loop !133

30:                                               ; preds = %21
  br label %31

31:                                               ; preds = %37, %30
  %32 = load i32, ptr %3, align 4
  %33 = icmp ule i32 %32, 279
  br i1 %33, label %34, label %40

34:                                               ; preds = %31
  %35 = load ptr, ptr %4, align 8
  %36 = getelementptr inbounds i8, ptr %35, i32 1
  store ptr %36, ptr %4, align 8
  store i8 7, ptr %35, align 1
  br label %37

37:                                               ; preds = %34
  %38 = load i32, ptr %3, align 4
  %39 = add i32 %38, 1
  store i32 %39, ptr %3, align 4
  br label %31, !llvm.loop !134

40:                                               ; preds = %31
  br label %41

41:                                               ; preds = %47, %40
  %42 = load i32, ptr %3, align 4
  %43 = icmp ule i32 %42, 287
  br i1 %43, label %44, label %50

44:                                               ; preds = %41
  %45 = load ptr, ptr %4, align 8
  %46 = getelementptr inbounds i8, ptr %45, i32 1
  store ptr %46, ptr %4, align 8
  store i8 8, ptr %45, align 1
  br label %47

47:                                               ; preds = %44
  %48 = load i32, ptr %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, ptr %3, align 4
  br label %41, !llvm.loop !135

50:                                               ; preds = %41
  %51 = load ptr, ptr %2, align 8
  %52 = getelementptr inbounds %struct.tdefl_compressor, ptr %51, i32 0, i32 38
  %53 = getelementptr inbounds [3 x [288 x i8]], ptr %52, i64 0, i64 1
  %54 = getelementptr inbounds [288 x i8], ptr %53, i64 0, i64 0
  %55 = load ptr, ptr %2, align 8
  %56 = getelementptr inbounds %struct.tdefl_compressor, ptr %55, i32 0, i32 38
  %57 = getelementptr inbounds [3 x [288 x i8]], ptr %56, i64 0, i64 1
  %58 = getelementptr inbounds [288 x i8], ptr %57, i64 0, i64 0
  %59 = call i64 @llvm.objectsize.i64.p0(ptr %58, i1 false, i1 true, i1 false)
  %60 = call ptr @__memset_chk(ptr noundef %54, i32 noundef 5, i64 noundef 32, i64 noundef %59) #11
  %61 = load ptr, ptr %2, align 8
  call void @tdefl_optimize_huffman_table(ptr noundef %61, i32 noundef 0, i32 noundef 288, i32 noundef 15, i32 noundef 1)
  %62 = load ptr, ptr %2, align 8
  call void @tdefl_optimize_huffman_table(ptr noundef %62, i32 noundef 1, i32 noundef 32, i32 noundef 15, i32 noundef 1)
  br label %63

63:                                               ; preds = %50
  store i32 1, ptr %5, align 4
  store i32 2, ptr %6, align 4
  %64 = load i32, ptr %5, align 4
  %65 = load i32, ptr %6, align 4
  %66 = shl i32 1, %65
  %67 = sub i32 %66, 1
  %68 = icmp ule i32 %64, %67
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = icmp ne i64 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %63
  call void @__assert_rtn(ptr noundef @__func__.tdefl_start_static_block, ptr noundef @.str.11, i32 noundef 2521, ptr noundef @.str.72) #12
  unreachable

74:                                               ; No predecessors!
  br label %76

75:                                               ; preds = %63
  br label %76

76:                                               ; preds = %75, %74
  %77 = load i32, ptr %5, align 4
  %78 = load ptr, ptr %2, align 8
  %79 = getelementptr inbounds %struct.tdefl_compressor, ptr %78, i32 0, i32 16
  %80 = load i32, ptr %79, align 4
  %81 = shl i32 %77, %80
  %82 = load ptr, ptr %2, align 8
  %83 = getelementptr inbounds %struct.tdefl_compressor, ptr %82, i32 0, i32 17
  %84 = load i32, ptr %83, align 8
  %85 = or i32 %84, %81
  store i32 %85, ptr %83, align 8
  %86 = load i32, ptr %6, align 4
  %87 = load ptr, ptr %2, align 8
  %88 = getelementptr inbounds %struct.tdefl_compressor, ptr %87, i32 0, i32 16
  %89 = load i32, ptr %88, align 4
  %90 = add i32 %89, %86
  store i32 %90, ptr %88, align 4
  br label %91

91:                                               ; preds = %113, %76
  %92 = load ptr, ptr %2, align 8
  %93 = getelementptr inbounds %struct.tdefl_compressor, ptr %92, i32 0, i32 16
  %94 = load i32, ptr %93, align 4
  %95 = icmp uge i32 %94, 8
  br i1 %95, label %96, label %122

96:                                               ; preds = %91
  %97 = load ptr, ptr %2, align 8
  %98 = getelementptr inbounds %struct.tdefl_compressor, ptr %97, i32 0, i32 11
  %99 = load ptr, ptr %98, align 8
  %100 = load ptr, ptr %2, align 8
  %101 = getelementptr inbounds %struct.tdefl_compressor, ptr %100, i32 0, i32 12
  %102 = load ptr, ptr %101, align 8
  %103 = icmp ult ptr %99, %102
  br i1 %103, label %104, label %113

104:                                              ; preds = %96
  %105 = load ptr, ptr %2, align 8
  %106 = getelementptr inbounds %struct.tdefl_compressor, ptr %105, i32 0, i32 17
  %107 = load i32, ptr %106, align 8
  %108 = trunc i32 %107 to i8
  %109 = load ptr, ptr %2, align 8
  %110 = getelementptr inbounds %struct.tdefl_compressor, ptr %109, i32 0, i32 11
  %111 = load ptr, ptr %110, align 8
  %112 = getelementptr inbounds i8, ptr %111, i32 1
  store ptr %112, ptr %110, align 8
  store i8 %108, ptr %111, align 1
  br label %113

113:                                              ; preds = %104, %96
  %114 = load ptr, ptr %2, align 8
  %115 = getelementptr inbounds %struct.tdefl_compressor, ptr %114, i32 0, i32 17
  %116 = load i32, ptr %115, align 8
  %117 = lshr i32 %116, 8
  store i32 %117, ptr %115, align 8
  %118 = load ptr, ptr %2, align 8
  %119 = getelementptr inbounds %struct.tdefl_compressor, ptr %118, i32 0, i32 16
  %120 = load i32, ptr %119, align 4
  %121 = sub i32 %120, 8
  store i32 %121, ptr %119, align 4
  br label %91, !llvm.loop !136

122:                                              ; preds = %91
  br label %123

123:                                              ; preds = %122
  ret void
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @tdefl_start_dynamic_block(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [320 x i8], align 16
  %13 = alloca [320 x i8], align 16
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  store i8 -1, ptr %14, align 1
  %31 = load ptr, ptr %2, align 8
  %32 = getelementptr inbounds %struct.tdefl_compressor, ptr %31, i32 0, i32 36
  %33 = getelementptr inbounds [3 x [288 x i16]], ptr %32, i64 0, i64 0
  %34 = getelementptr inbounds [288 x i16], ptr %33, i64 0, i64 256
  store i16 1, ptr %34, align 2
  %35 = load ptr, ptr %2, align 8
  call void @tdefl_optimize_huffman_table(ptr noundef %35, i32 noundef 0, i32 noundef 288, i32 noundef 15, i32 noundef 0)
  %36 = load ptr, ptr %2, align 8
  call void @tdefl_optimize_huffman_table(ptr noundef %36, i32 noundef 1, i32 noundef 32, i32 noundef 15, i32 noundef 0)
  store i32 286, ptr %3, align 4
  br label %37

37:                                               ; preds = %52, %1
  %38 = load i32, ptr %3, align 4
  %39 = icmp sgt i32 %38, 257
  br i1 %39, label %40, label %55

40:                                               ; preds = %37
  %41 = load ptr, ptr %2, align 8
  %42 = getelementptr inbounds %struct.tdefl_compressor, ptr %41, i32 0, i32 38
  %43 = getelementptr inbounds [3 x [288 x i8]], ptr %42, i64 0, i64 0
  %44 = load i32, ptr %3, align 4
  %45 = sub nsw i32 %44, 1
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [288 x i8], ptr %43, i64 0, i64 %46
  %48 = load i8, ptr %47, align 1
  %49 = icmp ne i8 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %40
  br label %55

51:                                               ; preds = %40
  br label %52

52:                                               ; preds = %51
  %53 = load i32, ptr %3, align 4
  %54 = add nsw i32 %53, -1
  store i32 %54, ptr %3, align 4
  br label %37, !llvm.loop !137

55:                                               ; preds = %50, %37
  store i32 30, ptr %4, align 4
  br label %56

56:                                               ; preds = %71, %55
  %57 = load i32, ptr %4, align 4
  %58 = icmp sgt i32 %57, 1
  br i1 %58, label %59, label %74

59:                                               ; preds = %56
  %60 = load ptr, ptr %2, align 8
  %61 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i32 0, i32 38
  %62 = getelementptr inbounds [3 x [288 x i8]], ptr %61, i64 0, i64 1
  %63 = load i32, ptr %4, align 4
  %64 = sub nsw i32 %63, 1
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [288 x i8], ptr %62, i64 0, i64 %65
  %67 = load i8, ptr %66, align 1
  %68 = icmp ne i8 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %59
  br label %74

70:                                               ; preds = %59
  br label %71

71:                                               ; preds = %70
  %72 = load i32, ptr %4, align 4
  %73 = add nsw i32 %72, -1
  store i32 %73, ptr %4, align 4
  br label %56, !llvm.loop !138

74:                                               ; preds = %69, %56
  %75 = getelementptr inbounds [320 x i8], ptr %12, i64 0, i64 0
  %76 = load ptr, ptr %2, align 8
  %77 = getelementptr inbounds %struct.tdefl_compressor, ptr %76, i32 0, i32 38
  %78 = getelementptr inbounds [3 x [288 x i8]], ptr %77, i64 0, i64 0
  %79 = getelementptr inbounds [288 x i8], ptr %78, i64 0, i64 0
  %80 = load i32, ptr %3, align 4
  %81 = sext i32 %80 to i64
  %82 = call ptr @__memcpy_chk(ptr noundef %75, ptr noundef %79, i64 noundef %81, i64 noundef 320) #11
  %83 = getelementptr inbounds [320 x i8], ptr %12, i64 0, i64 0
  %84 = load i32, ptr %3, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, ptr %83, i64 %85
  %87 = load ptr, ptr %2, align 8
  %88 = getelementptr inbounds %struct.tdefl_compressor, ptr %87, i32 0, i32 38
  %89 = getelementptr inbounds [3 x [288 x i8]], ptr %88, i64 0, i64 1
  %90 = getelementptr inbounds [288 x i8], ptr %89, i64 0, i64 0
  %91 = load i32, ptr %4, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [320 x i8], ptr %12, i64 0, i64 0
  %94 = load i32, ptr %3, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8, ptr %93, i64 %95
  %97 = call i64 @llvm.objectsize.i64.p0(ptr %96, i1 false, i1 true, i1 false)
  %98 = call ptr @__memcpy_chk(ptr noundef %86, ptr noundef %90, i64 noundef %92, i64 noundef %97) #11
  %99 = load i32, ptr %3, align 4
  %100 = load i32, ptr %4, align 4
  %101 = add nsw i32 %99, %100
  store i32 %101, ptr %7, align 4
  store i32 0, ptr %8, align 4
  store i32 0, ptr %9, align 4
  store i32 0, ptr %10, align 4
  %102 = load ptr, ptr %2, align 8
  %103 = getelementptr inbounds %struct.tdefl_compressor, ptr %102, i32 0, i32 36
  %104 = getelementptr inbounds [3 x [288 x i16]], ptr %103, i64 0, i64 2
  %105 = getelementptr inbounds [288 x i16], ptr %104, i64 0, i64 0
  %106 = load ptr, ptr %2, align 8
  %107 = getelementptr inbounds %struct.tdefl_compressor, ptr %106, i32 0, i32 36
  %108 = getelementptr inbounds [3 x [288 x i16]], ptr %107, i64 0, i64 2
  %109 = getelementptr inbounds [288 x i16], ptr %108, i64 0, i64 0
  %110 = call i64 @llvm.objectsize.i64.p0(ptr %109, i1 false, i1 true, i1 false)
  %111 = call ptr @__memset_chk(ptr noundef %105, i32 noundef 0, i64 noundef 38, i64 noundef %110) #11
  store i32 0, ptr %6, align 4
  br label %112

112:                                              ; preds = %512, %74
  %113 = load i32, ptr %6, align 4
  %114 = load i32, ptr %7, align 4
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %116, label %515

116:                                              ; preds = %112
  %117 = load i32, ptr %6, align 4
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds [320 x i8], ptr %12, i64 0, i64 %118
  %120 = load i8, ptr %119, align 1
  store i8 %120, ptr %15, align 1
  %121 = load i8, ptr %15, align 1
  %122 = icmp ne i8 %121, 0
  br i1 %122, label %272, label %123

123:                                              ; preds = %116
  %124 = load i32, ptr %10, align 4
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %126, label %183

126:                                              ; preds = %123
  %127 = load i32, ptr %10, align 4
  %128 = icmp ult i32 %127, 3
  br i1 %128, label %129, label %158

129:                                              ; preds = %126
  %130 = load ptr, ptr %2, align 8
  %131 = getelementptr inbounds %struct.tdefl_compressor, ptr %130, i32 0, i32 36
  %132 = getelementptr inbounds [3 x [288 x i16]], ptr %131, i64 0, i64 2
  %133 = load i8, ptr %14, align 1
  %134 = zext i8 %133 to i64
  %135 = getelementptr inbounds [288 x i16], ptr %132, i64 0, i64 %134
  %136 = load i16, ptr %135, align 2
  %137 = zext i16 %136 to i32
  %138 = load i32, ptr %10, align 4
  %139 = add i32 %137, %138
  %140 = trunc i32 %139 to i16
  %141 = load ptr, ptr %2, align 8
  %142 = getelementptr inbounds %struct.tdefl_compressor, ptr %141, i32 0, i32 36
  %143 = getelementptr inbounds [3 x [288 x i16]], ptr %142, i64 0, i64 2
  %144 = load i8, ptr %14, align 1
  %145 = zext i8 %144 to i64
  %146 = getelementptr inbounds [288 x i16], ptr %143, i64 0, i64 %145
  store i16 %140, ptr %146, align 2
  br label %147

147:                                              ; preds = %151, %129
  %148 = load i32, ptr %10, align 4
  %149 = add i32 %148, -1
  store i32 %149, ptr %10, align 4
  %150 = icmp ne i32 %148, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %147
  %152 = load i8, ptr %14, align 1
  %153 = load i32, ptr %8, align 4
  %154 = add i32 %153, 1
  store i32 %154, ptr %8, align 4
  %155 = zext i32 %153 to i64
  %156 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %155
  store i8 %152, ptr %156, align 1
  br label %147, !llvm.loop !139

157:                                              ; preds = %147
  br label %182

158:                                              ; preds = %126
  %159 = load ptr, ptr %2, align 8
  %160 = getelementptr inbounds %struct.tdefl_compressor, ptr %159, i32 0, i32 36
  %161 = getelementptr inbounds [3 x [288 x i16]], ptr %160, i64 0, i64 2
  %162 = getelementptr inbounds [288 x i16], ptr %161, i64 0, i64 16
  %163 = load i16, ptr %162, align 2
  %164 = zext i16 %163 to i32
  %165 = add nsw i32 %164, 1
  %166 = trunc i32 %165 to i16
  %167 = load ptr, ptr %2, align 8
  %168 = getelementptr inbounds %struct.tdefl_compressor, ptr %167, i32 0, i32 36
  %169 = getelementptr inbounds [3 x [288 x i16]], ptr %168, i64 0, i64 2
  %170 = getelementptr inbounds [288 x i16], ptr %169, i64 0, i64 16
  store i16 %166, ptr %170, align 2
  %171 = load i32, ptr %8, align 4
  %172 = add i32 %171, 1
  store i32 %172, ptr %8, align 4
  %173 = zext i32 %171 to i64
  %174 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %173
  store i8 16, ptr %174, align 1
  %175 = load i32, ptr %10, align 4
  %176 = sub i32 %175, 3
  %177 = trunc i32 %176 to i8
  %178 = load i32, ptr %8, align 4
  %179 = add i32 %178, 1
  store i32 %179, ptr %8, align 4
  %180 = zext i32 %178 to i64
  %181 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %180
  store i8 %177, ptr %181, align 1
  br label %182

182:                                              ; preds = %158, %157
  store i32 0, ptr %10, align 4
  br label %183

183:                                              ; preds = %182, %123
  %184 = load i32, ptr %9, align 4
  %185 = add i32 %184, 1
  store i32 %185, ptr %9, align 4
  %186 = icmp eq i32 %185, 138
  br i1 %186, label %187, label %271

187:                                              ; preds = %183
  %188 = load i32, ptr %9, align 4
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %190, label %270

190:                                              ; preds = %187
  %191 = load i32, ptr %9, align 4
  %192 = icmp ult i32 %191, 3
  br i1 %192, label %193, label %217

193:                                              ; preds = %190
  %194 = load ptr, ptr %2, align 8
  %195 = getelementptr inbounds %struct.tdefl_compressor, ptr %194, i32 0, i32 36
  %196 = getelementptr inbounds [3 x [288 x i16]], ptr %195, i64 0, i64 2
  %197 = getelementptr inbounds [288 x i16], ptr %196, i64 0, i64 0
  %198 = load i16, ptr %197, align 2
  %199 = zext i16 %198 to i32
  %200 = load i32, ptr %9, align 4
  %201 = add i32 %199, %200
  %202 = trunc i32 %201 to i16
  %203 = load ptr, ptr %2, align 8
  %204 = getelementptr inbounds %struct.tdefl_compressor, ptr %203, i32 0, i32 36
  %205 = getelementptr inbounds [3 x [288 x i16]], ptr %204, i64 0, i64 2
  %206 = getelementptr inbounds [288 x i16], ptr %205, i64 0, i64 0
  store i16 %202, ptr %206, align 2
  br label %207

207:                                              ; preds = %211, %193
  %208 = load i32, ptr %9, align 4
  %209 = add i32 %208, -1
  store i32 %209, ptr %9, align 4
  %210 = icmp ne i32 %208, 0
  br i1 %210, label %211, label %216

211:                                              ; preds = %207
  %212 = load i32, ptr %8, align 4
  %213 = add i32 %212, 1
  store i32 %213, ptr %8, align 4
  %214 = zext i32 %212 to i64
  %215 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %214
  store i8 0, ptr %215, align 1
  br label %207, !llvm.loop !140

216:                                              ; preds = %207
  br label %269

217:                                              ; preds = %190
  %218 = load i32, ptr %9, align 4
  %219 = icmp ule i32 %218, 10
  br i1 %219, label %220, label %244

220:                                              ; preds = %217
  %221 = load ptr, ptr %2, align 8
  %222 = getelementptr inbounds %struct.tdefl_compressor, ptr %221, i32 0, i32 36
  %223 = getelementptr inbounds [3 x [288 x i16]], ptr %222, i64 0, i64 2
  %224 = getelementptr inbounds [288 x i16], ptr %223, i64 0, i64 17
  %225 = load i16, ptr %224, align 2
  %226 = zext i16 %225 to i32
  %227 = add nsw i32 %226, 1
  %228 = trunc i32 %227 to i16
  %229 = load ptr, ptr %2, align 8
  %230 = getelementptr inbounds %struct.tdefl_compressor, ptr %229, i32 0, i32 36
  %231 = getelementptr inbounds [3 x [288 x i16]], ptr %230, i64 0, i64 2
  %232 = getelementptr inbounds [288 x i16], ptr %231, i64 0, i64 17
  store i16 %228, ptr %232, align 2
  %233 = load i32, ptr %8, align 4
  %234 = add i32 %233, 1
  store i32 %234, ptr %8, align 4
  %235 = zext i32 %233 to i64
  %236 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %235
  store i8 17, ptr %236, align 1
  %237 = load i32, ptr %9, align 4
  %238 = sub i32 %237, 3
  %239 = trunc i32 %238 to i8
  %240 = load i32, ptr %8, align 4
  %241 = add i32 %240, 1
  store i32 %241, ptr %8, align 4
  %242 = zext i32 %240 to i64
  %243 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %242
  store i8 %239, ptr %243, align 1
  br label %268

244:                                              ; preds = %217
  %245 = load ptr, ptr %2, align 8
  %246 = getelementptr inbounds %struct.tdefl_compressor, ptr %245, i32 0, i32 36
  %247 = getelementptr inbounds [3 x [288 x i16]], ptr %246, i64 0, i64 2
  %248 = getelementptr inbounds [288 x i16], ptr %247, i64 0, i64 18
  %249 = load i16, ptr %248, align 2
  %250 = zext i16 %249 to i32
  %251 = add nsw i32 %250, 1
  %252 = trunc i32 %251 to i16
  %253 = load ptr, ptr %2, align 8
  %254 = getelementptr inbounds %struct.tdefl_compressor, ptr %253, i32 0, i32 36
  %255 = getelementptr inbounds [3 x [288 x i16]], ptr %254, i64 0, i64 2
  %256 = getelementptr inbounds [288 x i16], ptr %255, i64 0, i64 18
  store i16 %252, ptr %256, align 2
  %257 = load i32, ptr %8, align 4
  %258 = add i32 %257, 1
  store i32 %258, ptr %8, align 4
  %259 = zext i32 %257 to i64
  %260 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %259
  store i8 18, ptr %260, align 1
  %261 = load i32, ptr %9, align 4
  %262 = sub i32 %261, 11
  %263 = trunc i32 %262 to i8
  %264 = load i32, ptr %8, align 4
  %265 = add i32 %264, 1
  store i32 %265, ptr %8, align 4
  %266 = zext i32 %264 to i64
  %267 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %266
  store i8 %263, ptr %267, align 1
  br label %268

268:                                              ; preds = %244, %220
  br label %269

269:                                              ; preds = %268, %216
  store i32 0, ptr %9, align 4
  br label %270

270:                                              ; preds = %269, %187
  br label %271

271:                                              ; preds = %270, %183
  br label %510

272:                                              ; preds = %116
  %273 = load i32, ptr %9, align 4
  %274 = icmp ne i32 %273, 0
  br i1 %274, label %275, label %355

275:                                              ; preds = %272
  %276 = load i32, ptr %9, align 4
  %277 = icmp ult i32 %276, 3
  br i1 %277, label %278, label %302

278:                                              ; preds = %275
  %279 = load ptr, ptr %2, align 8
  %280 = getelementptr inbounds %struct.tdefl_compressor, ptr %279, i32 0, i32 36
  %281 = getelementptr inbounds [3 x [288 x i16]], ptr %280, i64 0, i64 2
  %282 = getelementptr inbounds [288 x i16], ptr %281, i64 0, i64 0
  %283 = load i16, ptr %282, align 2
  %284 = zext i16 %283 to i32
  %285 = load i32, ptr %9, align 4
  %286 = add i32 %284, %285
  %287 = trunc i32 %286 to i16
  %288 = load ptr, ptr %2, align 8
  %289 = getelementptr inbounds %struct.tdefl_compressor, ptr %288, i32 0, i32 36
  %290 = getelementptr inbounds [3 x [288 x i16]], ptr %289, i64 0, i64 2
  %291 = getelementptr inbounds [288 x i16], ptr %290, i64 0, i64 0
  store i16 %287, ptr %291, align 2
  br label %292

292:                                              ; preds = %296, %278
  %293 = load i32, ptr %9, align 4
  %294 = add i32 %293, -1
  store i32 %294, ptr %9, align 4
  %295 = icmp ne i32 %293, 0
  br i1 %295, label %296, label %301

296:                                              ; preds = %292
  %297 = load i32, ptr %8, align 4
  %298 = add i32 %297, 1
  store i32 %298, ptr %8, align 4
  %299 = zext i32 %297 to i64
  %300 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %299
  store i8 0, ptr %300, align 1
  br label %292, !llvm.loop !141

301:                                              ; preds = %292
  br label %354

302:                                              ; preds = %275
  %303 = load i32, ptr %9, align 4
  %304 = icmp ule i32 %303, 10
  br i1 %304, label %305, label %329

305:                                              ; preds = %302
  %306 = load ptr, ptr %2, align 8
  %307 = getelementptr inbounds %struct.tdefl_compressor, ptr %306, i32 0, i32 36
  %308 = getelementptr inbounds [3 x [288 x i16]], ptr %307, i64 0, i64 2
  %309 = getelementptr inbounds [288 x i16], ptr %308, i64 0, i64 17
  %310 = load i16, ptr %309, align 2
  %311 = zext i16 %310 to i32
  %312 = add nsw i32 %311, 1
  %313 = trunc i32 %312 to i16
  %314 = load ptr, ptr %2, align 8
  %315 = getelementptr inbounds %struct.tdefl_compressor, ptr %314, i32 0, i32 36
  %316 = getelementptr inbounds [3 x [288 x i16]], ptr %315, i64 0, i64 2
  %317 = getelementptr inbounds [288 x i16], ptr %316, i64 0, i64 17
  store i16 %313, ptr %317, align 2
  %318 = load i32, ptr %8, align 4
  %319 = add i32 %318, 1
  store i32 %319, ptr %8, align 4
  %320 = zext i32 %318 to i64
  %321 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %320
  store i8 17, ptr %321, align 1
  %322 = load i32, ptr %9, align 4
  %323 = sub i32 %322, 3
  %324 = trunc i32 %323 to i8
  %325 = load i32, ptr %8, align 4
  %326 = add i32 %325, 1
  store i32 %326, ptr %8, align 4
  %327 = zext i32 %325 to i64
  %328 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %327
  store i8 %324, ptr %328, align 1
  br label %353

329:                                              ; preds = %302
  %330 = load ptr, ptr %2, align 8
  %331 = getelementptr inbounds %struct.tdefl_compressor, ptr %330, i32 0, i32 36
  %332 = getelementptr inbounds [3 x [288 x i16]], ptr %331, i64 0, i64 2
  %333 = getelementptr inbounds [288 x i16], ptr %332, i64 0, i64 18
  %334 = load i16, ptr %333, align 2
  %335 = zext i16 %334 to i32
  %336 = add nsw i32 %335, 1
  %337 = trunc i32 %336 to i16
  %338 = load ptr, ptr %2, align 8
  %339 = getelementptr inbounds %struct.tdefl_compressor, ptr %338, i32 0, i32 36
  %340 = getelementptr inbounds [3 x [288 x i16]], ptr %339, i64 0, i64 2
  %341 = getelementptr inbounds [288 x i16], ptr %340, i64 0, i64 18
  store i16 %337, ptr %341, align 2
  %342 = load i32, ptr %8, align 4
  %343 = add i32 %342, 1
  store i32 %343, ptr %8, align 4
  %344 = zext i32 %342 to i64
  %345 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %344
  store i8 18, ptr %345, align 1
  %346 = load i32, ptr %9, align 4
  %347 = sub i32 %346, 11
  %348 = trunc i32 %347 to i8
  %349 = load i32, ptr %8, align 4
  %350 = add i32 %349, 1
  store i32 %350, ptr %8, align 4
  %351 = zext i32 %349 to i64
  %352 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %351
  store i8 %348, ptr %352, align 1
  br label %353

353:                                              ; preds = %329, %305
  br label %354

354:                                              ; preds = %353, %301
  store i32 0, ptr %9, align 4
  br label %355

355:                                              ; preds = %354, %272
  %356 = load i8, ptr %15, align 1
  %357 = zext i8 %356 to i32
  %358 = load i8, ptr %14, align 1
  %359 = zext i8 %358 to i32
  %360 = icmp ne i32 %357, %359
  br i1 %360, label %361, label %443

361:                                              ; preds = %355
  %362 = load i32, ptr %10, align 4
  %363 = icmp ne i32 %362, 0
  br i1 %363, label %364, label %421

364:                                              ; preds = %361
  %365 = load i32, ptr %10, align 4
  %366 = icmp ult i32 %365, 3
  br i1 %366, label %367, label %396

367:                                              ; preds = %364
  %368 = load ptr, ptr %2, align 8
  %369 = getelementptr inbounds %struct.tdefl_compressor, ptr %368, i32 0, i32 36
  %370 = getelementptr inbounds [3 x [288 x i16]], ptr %369, i64 0, i64 2
  %371 = load i8, ptr %14, align 1
  %372 = zext i8 %371 to i64
  %373 = getelementptr inbounds [288 x i16], ptr %370, i64 0, i64 %372
  %374 = load i16, ptr %373, align 2
  %375 = zext i16 %374 to i32
  %376 = load i32, ptr %10, align 4
  %377 = add i32 %375, %376
  %378 = trunc i32 %377 to i16
  %379 = load ptr, ptr %2, align 8
  %380 = getelementptr inbounds %struct.tdefl_compressor, ptr %379, i32 0, i32 36
  %381 = getelementptr inbounds [3 x [288 x i16]], ptr %380, i64 0, i64 2
  %382 = load i8, ptr %14, align 1
  %383 = zext i8 %382 to i64
  %384 = getelementptr inbounds [288 x i16], ptr %381, i64 0, i64 %383
  store i16 %378, ptr %384, align 2
  br label %385

385:                                              ; preds = %389, %367
  %386 = load i32, ptr %10, align 4
  %387 = add i32 %386, -1
  store i32 %387, ptr %10, align 4
  %388 = icmp ne i32 %386, 0
  br i1 %388, label %389, label %395

389:                                              ; preds = %385
  %390 = load i8, ptr %14, align 1
  %391 = load i32, ptr %8, align 4
  %392 = add i32 %391, 1
  store i32 %392, ptr %8, align 4
  %393 = zext i32 %391 to i64
  %394 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %393
  store i8 %390, ptr %394, align 1
  br label %385, !llvm.loop !142

395:                                              ; preds = %385
  br label %420

396:                                              ; preds = %364
  %397 = load ptr, ptr %2, align 8
  %398 = getelementptr inbounds %struct.tdefl_compressor, ptr %397, i32 0, i32 36
  %399 = getelementptr inbounds [3 x [288 x i16]], ptr %398, i64 0, i64 2
  %400 = getelementptr inbounds [288 x i16], ptr %399, i64 0, i64 16
  %401 = load i16, ptr %400, align 2
  %402 = zext i16 %401 to i32
  %403 = add nsw i32 %402, 1
  %404 = trunc i32 %403 to i16
  %405 = load ptr, ptr %2, align 8
  %406 = getelementptr inbounds %struct.tdefl_compressor, ptr %405, i32 0, i32 36
  %407 = getelementptr inbounds [3 x [288 x i16]], ptr %406, i64 0, i64 2
  %408 = getelementptr inbounds [288 x i16], ptr %407, i64 0, i64 16
  store i16 %404, ptr %408, align 2
  %409 = load i32, ptr %8, align 4
  %410 = add i32 %409, 1
  store i32 %410, ptr %8, align 4
  %411 = zext i32 %409 to i64
  %412 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %411
  store i8 16, ptr %412, align 1
  %413 = load i32, ptr %10, align 4
  %414 = sub i32 %413, 3
  %415 = trunc i32 %414 to i8
  %416 = load i32, ptr %8, align 4
  %417 = add i32 %416, 1
  store i32 %417, ptr %8, align 4
  %418 = zext i32 %416 to i64
  %419 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %418
  store i8 %415, ptr %419, align 1
  br label %420

420:                                              ; preds = %396, %395
  store i32 0, ptr %10, align 4
  br label %421

421:                                              ; preds = %420, %361
  %422 = load ptr, ptr %2, align 8
  %423 = getelementptr inbounds %struct.tdefl_compressor, ptr %422, i32 0, i32 36
  %424 = getelementptr inbounds [3 x [288 x i16]], ptr %423, i64 0, i64 2
  %425 = load i8, ptr %15, align 1
  %426 = zext i8 %425 to i64
  %427 = getelementptr inbounds [288 x i16], ptr %424, i64 0, i64 %426
  %428 = load i16, ptr %427, align 2
  %429 = zext i16 %428 to i32
  %430 = add nsw i32 %429, 1
  %431 = trunc i32 %430 to i16
  %432 = load ptr, ptr %2, align 8
  %433 = getelementptr inbounds %struct.tdefl_compressor, ptr %432, i32 0, i32 36
  %434 = getelementptr inbounds [3 x [288 x i16]], ptr %433, i64 0, i64 2
  %435 = load i8, ptr %15, align 1
  %436 = zext i8 %435 to i64
  %437 = getelementptr inbounds [288 x i16], ptr %434, i64 0, i64 %436
  store i16 %431, ptr %437, align 2
  %438 = load i8, ptr %15, align 1
  %439 = load i32, ptr %8, align 4
  %440 = add i32 %439, 1
  store i32 %440, ptr %8, align 4
  %441 = zext i32 %439 to i64
  %442 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %441
  store i8 %438, ptr %442, align 1
  br label %509

443:                                              ; preds = %355
  %444 = load i32, ptr %10, align 4
  %445 = add i32 %444, 1
  store i32 %445, ptr %10, align 4
  %446 = icmp eq i32 %445, 6
  br i1 %446, label %447, label %508

447:                                              ; preds = %443
  %448 = load i32, ptr %10, align 4
  %449 = icmp ne i32 %448, 0
  br i1 %449, label %450, label %507

450:                                              ; preds = %447
  %451 = load i32, ptr %10, align 4
  %452 = icmp ult i32 %451, 3
  br i1 %452, label %453, label %482

453:                                              ; preds = %450
  %454 = load ptr, ptr %2, align 8
  %455 = getelementptr inbounds %struct.tdefl_compressor, ptr %454, i32 0, i32 36
  %456 = getelementptr inbounds [3 x [288 x i16]], ptr %455, i64 0, i64 2
  %457 = load i8, ptr %14, align 1
  %458 = zext i8 %457 to i64
  %459 = getelementptr inbounds [288 x i16], ptr %456, i64 0, i64 %458
  %460 = load i16, ptr %459, align 2
  %461 = zext i16 %460 to i32
  %462 = load i32, ptr %10, align 4
  %463 = add i32 %461, %462
  %464 = trunc i32 %463 to i16
  %465 = load ptr, ptr %2, align 8
  %466 = getelementptr inbounds %struct.tdefl_compressor, ptr %465, i32 0, i32 36
  %467 = getelementptr inbounds [3 x [288 x i16]], ptr %466, i64 0, i64 2
  %468 = load i8, ptr %14, align 1
  %469 = zext i8 %468 to i64
  %470 = getelementptr inbounds [288 x i16], ptr %467, i64 0, i64 %469
  store i16 %464, ptr %470, align 2
  br label %471

471:                                              ; preds = %475, %453
  %472 = load i32, ptr %10, align 4
  %473 = add i32 %472, -1
  store i32 %473, ptr %10, align 4
  %474 = icmp ne i32 %472, 0
  br i1 %474, label %475, label %481

475:                                              ; preds = %471
  %476 = load i8, ptr %14, align 1
  %477 = load i32, ptr %8, align 4
  %478 = add i32 %477, 1
  store i32 %478, ptr %8, align 4
  %479 = zext i32 %477 to i64
  %480 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %479
  store i8 %476, ptr %480, align 1
  br label %471, !llvm.loop !143

481:                                              ; preds = %471
  br label %506

482:                                              ; preds = %450
  %483 = load ptr, ptr %2, align 8
  %484 = getelementptr inbounds %struct.tdefl_compressor, ptr %483, i32 0, i32 36
  %485 = getelementptr inbounds [3 x [288 x i16]], ptr %484, i64 0, i64 2
  %486 = getelementptr inbounds [288 x i16], ptr %485, i64 0, i64 16
  %487 = load i16, ptr %486, align 2
  %488 = zext i16 %487 to i32
  %489 = add nsw i32 %488, 1
  %490 = trunc i32 %489 to i16
  %491 = load ptr, ptr %2, align 8
  %492 = getelementptr inbounds %struct.tdefl_compressor, ptr %491, i32 0, i32 36
  %493 = getelementptr inbounds [3 x [288 x i16]], ptr %492, i64 0, i64 2
  %494 = getelementptr inbounds [288 x i16], ptr %493, i64 0, i64 16
  store i16 %490, ptr %494, align 2
  %495 = load i32, ptr %8, align 4
  %496 = add i32 %495, 1
  store i32 %496, ptr %8, align 4
  %497 = zext i32 %495 to i64
  %498 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %497
  store i8 16, ptr %498, align 1
  %499 = load i32, ptr %10, align 4
  %500 = sub i32 %499, 3
  %501 = trunc i32 %500 to i8
  %502 = load i32, ptr %8, align 4
  %503 = add i32 %502, 1
  store i32 %503, ptr %8, align 4
  %504 = zext i32 %502 to i64
  %505 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %504
  store i8 %501, ptr %505, align 1
  br label %506

506:                                              ; preds = %482, %481
  store i32 0, ptr %10, align 4
  br label %507

507:                                              ; preds = %506, %447
  br label %508

508:                                              ; preds = %507, %443
  br label %509

509:                                              ; preds = %508, %421
  br label %510

510:                                              ; preds = %509, %271
  %511 = load i8, ptr %15, align 1
  store i8 %511, ptr %14, align 1
  br label %512

512:                                              ; preds = %510
  %513 = load i32, ptr %6, align 4
  %514 = add i32 %513, 1
  store i32 %514, ptr %6, align 4
  br label %112, !llvm.loop !144

515:                                              ; preds = %112
  %516 = load i32, ptr %10, align 4
  %517 = icmp ne i32 %516, 0
  br i1 %517, label %518, label %579

518:                                              ; preds = %515
  %519 = load i32, ptr %10, align 4
  %520 = icmp ne i32 %519, 0
  br i1 %520, label %521, label %578

521:                                              ; preds = %518
  %522 = load i32, ptr %10, align 4
  %523 = icmp ult i32 %522, 3
  br i1 %523, label %524, label %553

524:                                              ; preds = %521
  %525 = load ptr, ptr %2, align 8
  %526 = getelementptr inbounds %struct.tdefl_compressor, ptr %525, i32 0, i32 36
  %527 = getelementptr inbounds [3 x [288 x i16]], ptr %526, i64 0, i64 2
  %528 = load i8, ptr %14, align 1
  %529 = zext i8 %528 to i64
  %530 = getelementptr inbounds [288 x i16], ptr %527, i64 0, i64 %529
  %531 = load i16, ptr %530, align 2
  %532 = zext i16 %531 to i32
  %533 = load i32, ptr %10, align 4
  %534 = add i32 %532, %533
  %535 = trunc i32 %534 to i16
  %536 = load ptr, ptr %2, align 8
  %537 = getelementptr inbounds %struct.tdefl_compressor, ptr %536, i32 0, i32 36
  %538 = getelementptr inbounds [3 x [288 x i16]], ptr %537, i64 0, i64 2
  %539 = load i8, ptr %14, align 1
  %540 = zext i8 %539 to i64
  %541 = getelementptr inbounds [288 x i16], ptr %538, i64 0, i64 %540
  store i16 %535, ptr %541, align 2
  br label %542

542:                                              ; preds = %546, %524
  %543 = load i32, ptr %10, align 4
  %544 = add i32 %543, -1
  store i32 %544, ptr %10, align 4
  %545 = icmp ne i32 %543, 0
  br i1 %545, label %546, label %552

546:                                              ; preds = %542
  %547 = load i8, ptr %14, align 1
  %548 = load i32, ptr %8, align 4
  %549 = add i32 %548, 1
  store i32 %549, ptr %8, align 4
  %550 = zext i32 %548 to i64
  %551 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %550
  store i8 %547, ptr %551, align 1
  br label %542, !llvm.loop !145

552:                                              ; preds = %542
  br label %577

553:                                              ; preds = %521
  %554 = load ptr, ptr %2, align 8
  %555 = getelementptr inbounds %struct.tdefl_compressor, ptr %554, i32 0, i32 36
  %556 = getelementptr inbounds [3 x [288 x i16]], ptr %555, i64 0, i64 2
  %557 = getelementptr inbounds [288 x i16], ptr %556, i64 0, i64 16
  %558 = load i16, ptr %557, align 2
  %559 = zext i16 %558 to i32
  %560 = add nsw i32 %559, 1
  %561 = trunc i32 %560 to i16
  %562 = load ptr, ptr %2, align 8
  %563 = getelementptr inbounds %struct.tdefl_compressor, ptr %562, i32 0, i32 36
  %564 = getelementptr inbounds [3 x [288 x i16]], ptr %563, i64 0, i64 2
  %565 = getelementptr inbounds [288 x i16], ptr %564, i64 0, i64 16
  store i16 %561, ptr %565, align 2
  %566 = load i32, ptr %8, align 4
  %567 = add i32 %566, 1
  store i32 %567, ptr %8, align 4
  %568 = zext i32 %566 to i64
  %569 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %568
  store i8 16, ptr %569, align 1
  %570 = load i32, ptr %10, align 4
  %571 = sub i32 %570, 3
  %572 = trunc i32 %571 to i8
  %573 = load i32, ptr %8, align 4
  %574 = add i32 %573, 1
  store i32 %574, ptr %8, align 4
  %575 = zext i32 %573 to i64
  %576 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %575
  store i8 %572, ptr %576, align 1
  br label %577

577:                                              ; preds = %553, %552
  store i32 0, ptr %10, align 4
  br label %578

578:                                              ; preds = %577, %518
  br label %663

579:                                              ; preds = %515
  %580 = load i32, ptr %9, align 4
  %581 = icmp ne i32 %580, 0
  br i1 %581, label %582, label %662

582:                                              ; preds = %579
  %583 = load i32, ptr %9, align 4
  %584 = icmp ult i32 %583, 3
  br i1 %584, label %585, label %609

585:                                              ; preds = %582
  %586 = load ptr, ptr %2, align 8
  %587 = getelementptr inbounds %struct.tdefl_compressor, ptr %586, i32 0, i32 36
  %588 = getelementptr inbounds [3 x [288 x i16]], ptr %587, i64 0, i64 2
  %589 = getelementptr inbounds [288 x i16], ptr %588, i64 0, i64 0
  %590 = load i16, ptr %589, align 2
  %591 = zext i16 %590 to i32
  %592 = load i32, ptr %9, align 4
  %593 = add i32 %591, %592
  %594 = trunc i32 %593 to i16
  %595 = load ptr, ptr %2, align 8
  %596 = getelementptr inbounds %struct.tdefl_compressor, ptr %595, i32 0, i32 36
  %597 = getelementptr inbounds [3 x [288 x i16]], ptr %596, i64 0, i64 2
  %598 = getelementptr inbounds [288 x i16], ptr %597, i64 0, i64 0
  store i16 %594, ptr %598, align 2
  br label %599

599:                                              ; preds = %603, %585
  %600 = load i32, ptr %9, align 4
  %601 = add i32 %600, -1
  store i32 %601, ptr %9, align 4
  %602 = icmp ne i32 %600, 0
  br i1 %602, label %603, label %608

603:                                              ; preds = %599
  %604 = load i32, ptr %8, align 4
  %605 = add i32 %604, 1
  store i32 %605, ptr %8, align 4
  %606 = zext i32 %604 to i64
  %607 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %606
  store i8 0, ptr %607, align 1
  br label %599, !llvm.loop !146

608:                                              ; preds = %599
  br label %661

609:                                              ; preds = %582
  %610 = load i32, ptr %9, align 4
  %611 = icmp ule i32 %610, 10
  br i1 %611, label %612, label %636

612:                                              ; preds = %609
  %613 = load ptr, ptr %2, align 8
  %614 = getelementptr inbounds %struct.tdefl_compressor, ptr %613, i32 0, i32 36
  %615 = getelementptr inbounds [3 x [288 x i16]], ptr %614, i64 0, i64 2
  %616 = getelementptr inbounds [288 x i16], ptr %615, i64 0, i64 17
  %617 = load i16, ptr %616, align 2
  %618 = zext i16 %617 to i32
  %619 = add nsw i32 %618, 1
  %620 = trunc i32 %619 to i16
  %621 = load ptr, ptr %2, align 8
  %622 = getelementptr inbounds %struct.tdefl_compressor, ptr %621, i32 0, i32 36
  %623 = getelementptr inbounds [3 x [288 x i16]], ptr %622, i64 0, i64 2
  %624 = getelementptr inbounds [288 x i16], ptr %623, i64 0, i64 17
  store i16 %620, ptr %624, align 2
  %625 = load i32, ptr %8, align 4
  %626 = add i32 %625, 1
  store i32 %626, ptr %8, align 4
  %627 = zext i32 %625 to i64
  %628 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %627
  store i8 17, ptr %628, align 1
  %629 = load i32, ptr %9, align 4
  %630 = sub i32 %629, 3
  %631 = trunc i32 %630 to i8
  %632 = load i32, ptr %8, align 4
  %633 = add i32 %632, 1
  store i32 %633, ptr %8, align 4
  %634 = zext i32 %632 to i64
  %635 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %634
  store i8 %631, ptr %635, align 1
  br label %660

636:                                              ; preds = %609
  %637 = load ptr, ptr %2, align 8
  %638 = getelementptr inbounds %struct.tdefl_compressor, ptr %637, i32 0, i32 36
  %639 = getelementptr inbounds [3 x [288 x i16]], ptr %638, i64 0, i64 2
  %640 = getelementptr inbounds [288 x i16], ptr %639, i64 0, i64 18
  %641 = load i16, ptr %640, align 2
  %642 = zext i16 %641 to i32
  %643 = add nsw i32 %642, 1
  %644 = trunc i32 %643 to i16
  %645 = load ptr, ptr %2, align 8
  %646 = getelementptr inbounds %struct.tdefl_compressor, ptr %645, i32 0, i32 36
  %647 = getelementptr inbounds [3 x [288 x i16]], ptr %646, i64 0, i64 2
  %648 = getelementptr inbounds [288 x i16], ptr %647, i64 0, i64 18
  store i16 %644, ptr %648, align 2
  %649 = load i32, ptr %8, align 4
  %650 = add i32 %649, 1
  store i32 %650, ptr %8, align 4
  %651 = zext i32 %649 to i64
  %652 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %651
  store i8 18, ptr %652, align 1
  %653 = load i32, ptr %9, align 4
  %654 = sub i32 %653, 11
  %655 = trunc i32 %654 to i8
  %656 = load i32, ptr %8, align 4
  %657 = add i32 %656, 1
  store i32 %657, ptr %8, align 4
  %658 = zext i32 %656 to i64
  %659 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %658
  store i8 %655, ptr %659, align 1
  br label %660

660:                                              ; preds = %636, %612
  br label %661

661:                                              ; preds = %660, %608
  store i32 0, ptr %9, align 4
  br label %662

662:                                              ; preds = %661, %579
  br label %663

663:                                              ; preds = %662, %578
  %664 = load ptr, ptr %2, align 8
  call void @tdefl_optimize_huffman_table(ptr noundef %664, i32 noundef 2, i32 noundef 19, i32 noundef 7, i32 noundef 0)
  br label %665

665:                                              ; preds = %663
  store i32 2, ptr %16, align 4
  store i32 2, ptr %17, align 4
  %666 = load i32, ptr %16, align 4
  %667 = load i32, ptr %17, align 4
  %668 = shl i32 1, %667
  %669 = sub i32 %668, 1
  %670 = icmp ule i32 %666, %669
  %671 = xor i1 %670, true
  %672 = zext i1 %671 to i32
  %673 = sext i32 %672 to i64
  %674 = icmp ne i64 %673, 0
  br i1 %674, label %675, label %677

675:                                              ; preds = %665
  call void @__assert_rtn(ptr noundef @__func__.tdefl_start_dynamic_block, ptr noundef @.str.11, i32 noundef 2479, ptr noundef @.str.72) #12
  unreachable

676:                                              ; No predecessors!
  br label %678

677:                                              ; preds = %665
  br label %678

678:                                              ; preds = %677, %676
  %679 = load i32, ptr %16, align 4
  %680 = load ptr, ptr %2, align 8
  %681 = getelementptr inbounds %struct.tdefl_compressor, ptr %680, i32 0, i32 16
  %682 = load i32, ptr %681, align 4
  %683 = shl i32 %679, %682
  %684 = load ptr, ptr %2, align 8
  %685 = getelementptr inbounds %struct.tdefl_compressor, ptr %684, i32 0, i32 17
  %686 = load i32, ptr %685, align 8
  %687 = or i32 %686, %683
  store i32 %687, ptr %685, align 8
  %688 = load i32, ptr %17, align 4
  %689 = load ptr, ptr %2, align 8
  %690 = getelementptr inbounds %struct.tdefl_compressor, ptr %689, i32 0, i32 16
  %691 = load i32, ptr %690, align 4
  %692 = add i32 %691, %688
  store i32 %692, ptr %690, align 4
  br label %693

693:                                              ; preds = %715, %678
  %694 = load ptr, ptr %2, align 8
  %695 = getelementptr inbounds %struct.tdefl_compressor, ptr %694, i32 0, i32 16
  %696 = load i32, ptr %695, align 4
  %697 = icmp uge i32 %696, 8
  br i1 %697, label %698, label %724

698:                                              ; preds = %693
  %699 = load ptr, ptr %2, align 8
  %700 = getelementptr inbounds %struct.tdefl_compressor, ptr %699, i32 0, i32 11
  %701 = load ptr, ptr %700, align 8
  %702 = load ptr, ptr %2, align 8
  %703 = getelementptr inbounds %struct.tdefl_compressor, ptr %702, i32 0, i32 12
  %704 = load ptr, ptr %703, align 8
  %705 = icmp ult ptr %701, %704
  br i1 %705, label %706, label %715

706:                                              ; preds = %698
  %707 = load ptr, ptr %2, align 8
  %708 = getelementptr inbounds %struct.tdefl_compressor, ptr %707, i32 0, i32 17
  %709 = load i32, ptr %708, align 8
  %710 = trunc i32 %709 to i8
  %711 = load ptr, ptr %2, align 8
  %712 = getelementptr inbounds %struct.tdefl_compressor, ptr %711, i32 0, i32 11
  %713 = load ptr, ptr %712, align 8
  %714 = getelementptr inbounds i8, ptr %713, i32 1
  store ptr %714, ptr %712, align 8
  store i8 %710, ptr %713, align 1
  br label %715

715:                                              ; preds = %706, %698
  %716 = load ptr, ptr %2, align 8
  %717 = getelementptr inbounds %struct.tdefl_compressor, ptr %716, i32 0, i32 17
  %718 = load i32, ptr %717, align 8
  %719 = lshr i32 %718, 8
  store i32 %719, ptr %717, align 8
  %720 = load ptr, ptr %2, align 8
  %721 = getelementptr inbounds %struct.tdefl_compressor, ptr %720, i32 0, i32 16
  %722 = load i32, ptr %721, align 4
  %723 = sub i32 %722, 8
  store i32 %723, ptr %721, align 4
  br label %693, !llvm.loop !147

724:                                              ; preds = %693
  br label %725

725:                                              ; preds = %724
  br label %726

726:                                              ; preds = %725
  %727 = load i32, ptr %3, align 4
  %728 = sub nsw i32 %727, 257
  store i32 %728, ptr %18, align 4
  store i32 5, ptr %19, align 4
  %729 = load i32, ptr %18, align 4
  %730 = load i32, ptr %19, align 4
  %731 = shl i32 1, %730
  %732 = sub i32 %731, 1
  %733 = icmp ule i32 %729, %732
  %734 = xor i1 %733, true
  %735 = zext i1 %734 to i32
  %736 = sext i32 %735 to i64
  %737 = icmp ne i64 %736, 0
  br i1 %737, label %738, label %740

738:                                              ; preds = %726
  call void @__assert_rtn(ptr noundef @__func__.tdefl_start_dynamic_block, ptr noundef @.str.11, i32 noundef 2481, ptr noundef @.str.72) #12
  unreachable

739:                                              ; No predecessors!
  br label %741

740:                                              ; preds = %726
  br label %741

741:                                              ; preds = %740, %739
  %742 = load i32, ptr %18, align 4
  %743 = load ptr, ptr %2, align 8
  %744 = getelementptr inbounds %struct.tdefl_compressor, ptr %743, i32 0, i32 16
  %745 = load i32, ptr %744, align 4
  %746 = shl i32 %742, %745
  %747 = load ptr, ptr %2, align 8
  %748 = getelementptr inbounds %struct.tdefl_compressor, ptr %747, i32 0, i32 17
  %749 = load i32, ptr %748, align 8
  %750 = or i32 %749, %746
  store i32 %750, ptr %748, align 8
  %751 = load i32, ptr %19, align 4
  %752 = load ptr, ptr %2, align 8
  %753 = getelementptr inbounds %struct.tdefl_compressor, ptr %752, i32 0, i32 16
  %754 = load i32, ptr %753, align 4
  %755 = add i32 %754, %751
  store i32 %755, ptr %753, align 4
  br label %756

756:                                              ; preds = %778, %741
  %757 = load ptr, ptr %2, align 8
  %758 = getelementptr inbounds %struct.tdefl_compressor, ptr %757, i32 0, i32 16
  %759 = load i32, ptr %758, align 4
  %760 = icmp uge i32 %759, 8
  br i1 %760, label %761, label %787

761:                                              ; preds = %756
  %762 = load ptr, ptr %2, align 8
  %763 = getelementptr inbounds %struct.tdefl_compressor, ptr %762, i32 0, i32 11
  %764 = load ptr, ptr %763, align 8
  %765 = load ptr, ptr %2, align 8
  %766 = getelementptr inbounds %struct.tdefl_compressor, ptr %765, i32 0, i32 12
  %767 = load ptr, ptr %766, align 8
  %768 = icmp ult ptr %764, %767
  br i1 %768, label %769, label %778

769:                                              ; preds = %761
  %770 = load ptr, ptr %2, align 8
  %771 = getelementptr inbounds %struct.tdefl_compressor, ptr %770, i32 0, i32 17
  %772 = load i32, ptr %771, align 8
  %773 = trunc i32 %772 to i8
  %774 = load ptr, ptr %2, align 8
  %775 = getelementptr inbounds %struct.tdefl_compressor, ptr %774, i32 0, i32 11
  %776 = load ptr, ptr %775, align 8
  %777 = getelementptr inbounds i8, ptr %776, i32 1
  store ptr %777, ptr %775, align 8
  store i8 %773, ptr %776, align 1
  br label %778

778:                                              ; preds = %769, %761
  %779 = load ptr, ptr %2, align 8
  %780 = getelementptr inbounds %struct.tdefl_compressor, ptr %779, i32 0, i32 17
  %781 = load i32, ptr %780, align 8
  %782 = lshr i32 %781, 8
  store i32 %782, ptr %780, align 8
  %783 = load ptr, ptr %2, align 8
  %784 = getelementptr inbounds %struct.tdefl_compressor, ptr %783, i32 0, i32 16
  %785 = load i32, ptr %784, align 4
  %786 = sub i32 %785, 8
  store i32 %786, ptr %784, align 4
  br label %756, !llvm.loop !148

787:                                              ; preds = %756
  br label %788

788:                                              ; preds = %787
  br label %789

789:                                              ; preds = %788
  %790 = load i32, ptr %4, align 4
  %791 = sub nsw i32 %790, 1
  store i32 %791, ptr %20, align 4
  store i32 5, ptr %21, align 4
  %792 = load i32, ptr %20, align 4
  %793 = load i32, ptr %21, align 4
  %794 = shl i32 1, %793
  %795 = sub i32 %794, 1
  %796 = icmp ule i32 %792, %795
  %797 = xor i1 %796, true
  %798 = zext i1 %797 to i32
  %799 = sext i32 %798 to i64
  %800 = icmp ne i64 %799, 0
  br i1 %800, label %801, label %803

801:                                              ; preds = %789
  call void @__assert_rtn(ptr noundef @__func__.tdefl_start_dynamic_block, ptr noundef @.str.11, i32 noundef 2482, ptr noundef @.str.72) #12
  unreachable

802:                                              ; No predecessors!
  br label %804

803:                                              ; preds = %789
  br label %804

804:                                              ; preds = %803, %802
  %805 = load i32, ptr %20, align 4
  %806 = load ptr, ptr %2, align 8
  %807 = getelementptr inbounds %struct.tdefl_compressor, ptr %806, i32 0, i32 16
  %808 = load i32, ptr %807, align 4
  %809 = shl i32 %805, %808
  %810 = load ptr, ptr %2, align 8
  %811 = getelementptr inbounds %struct.tdefl_compressor, ptr %810, i32 0, i32 17
  %812 = load i32, ptr %811, align 8
  %813 = or i32 %812, %809
  store i32 %813, ptr %811, align 8
  %814 = load i32, ptr %21, align 4
  %815 = load ptr, ptr %2, align 8
  %816 = getelementptr inbounds %struct.tdefl_compressor, ptr %815, i32 0, i32 16
  %817 = load i32, ptr %816, align 4
  %818 = add i32 %817, %814
  store i32 %818, ptr %816, align 4
  br label %819

819:                                              ; preds = %841, %804
  %820 = load ptr, ptr %2, align 8
  %821 = getelementptr inbounds %struct.tdefl_compressor, ptr %820, i32 0, i32 16
  %822 = load i32, ptr %821, align 4
  %823 = icmp uge i32 %822, 8
  br i1 %823, label %824, label %850

824:                                              ; preds = %819
  %825 = load ptr, ptr %2, align 8
  %826 = getelementptr inbounds %struct.tdefl_compressor, ptr %825, i32 0, i32 11
  %827 = load ptr, ptr %826, align 8
  %828 = load ptr, ptr %2, align 8
  %829 = getelementptr inbounds %struct.tdefl_compressor, ptr %828, i32 0, i32 12
  %830 = load ptr, ptr %829, align 8
  %831 = icmp ult ptr %827, %830
  br i1 %831, label %832, label %841

832:                                              ; preds = %824
  %833 = load ptr, ptr %2, align 8
  %834 = getelementptr inbounds %struct.tdefl_compressor, ptr %833, i32 0, i32 17
  %835 = load i32, ptr %834, align 8
  %836 = trunc i32 %835 to i8
  %837 = load ptr, ptr %2, align 8
  %838 = getelementptr inbounds %struct.tdefl_compressor, ptr %837, i32 0, i32 11
  %839 = load ptr, ptr %838, align 8
  %840 = getelementptr inbounds i8, ptr %839, i32 1
  store ptr %840, ptr %838, align 8
  store i8 %836, ptr %839, align 1
  br label %841

841:                                              ; preds = %832, %824
  %842 = load ptr, ptr %2, align 8
  %843 = getelementptr inbounds %struct.tdefl_compressor, ptr %842, i32 0, i32 17
  %844 = load i32, ptr %843, align 8
  %845 = lshr i32 %844, 8
  store i32 %845, ptr %843, align 8
  %846 = load ptr, ptr %2, align 8
  %847 = getelementptr inbounds %struct.tdefl_compressor, ptr %846, i32 0, i32 16
  %848 = load i32, ptr %847, align 4
  %849 = sub i32 %848, 8
  store i32 %849, ptr %847, align 4
  br label %819, !llvm.loop !149

850:                                              ; preds = %819
  br label %851

851:                                              ; preds = %850
  store i32 18, ptr %5, align 4
  br label %852

852:                                              ; preds = %869, %851
  %853 = load i32, ptr %5, align 4
  %854 = icmp sge i32 %853, 0
  br i1 %854, label %855, label %872

855:                                              ; preds = %852
  %856 = load ptr, ptr %2, align 8
  %857 = getelementptr inbounds %struct.tdefl_compressor, ptr %856, i32 0, i32 38
  %858 = getelementptr inbounds [3 x [288 x i8]], ptr %857, i64 0, i64 2
  %859 = load i32, ptr %5, align 4
  %860 = sext i32 %859 to i64
  %861 = getelementptr inbounds [19 x i8], ptr @s_tdefl_packed_code_size_syms_swizzle, i64 0, i64 %860
  %862 = load i8, ptr %861, align 1
  %863 = zext i8 %862 to i64
  %864 = getelementptr inbounds [288 x i8], ptr %858, i64 0, i64 %863
  %865 = load i8, ptr %864, align 1
  %866 = icmp ne i8 %865, 0
  br i1 %866, label %867, label %868

867:                                              ; preds = %855
  br label %872

868:                                              ; preds = %855
  br label %869

869:                                              ; preds = %868
  %870 = load i32, ptr %5, align 4
  %871 = add nsw i32 %870, -1
  store i32 %871, ptr %5, align 4
  br label %852, !llvm.loop !150

872:                                              ; preds = %867, %852
  %873 = load i32, ptr %5, align 4
  %874 = add nsw i32 %873, 1
  %875 = icmp sgt i32 4, %874
  br i1 %875, label %876, label %877

876:                                              ; preds = %872
  br label %880

877:                                              ; preds = %872
  %878 = load i32, ptr %5, align 4
  %879 = add nsw i32 %878, 1
  br label %880

880:                                              ; preds = %877, %876
  %881 = phi i32 [ 4, %876 ], [ %879, %877 ]
  store i32 %881, ptr %5, align 4
  br label %882

882:                                              ; preds = %880
  %883 = load i32, ptr %5, align 4
  %884 = sub nsw i32 %883, 4
  store i32 %884, ptr %22, align 4
  store i32 4, ptr %23, align 4
  %885 = load i32, ptr %22, align 4
  %886 = load i32, ptr %23, align 4
  %887 = shl i32 1, %886
  %888 = sub i32 %887, 1
  %889 = icmp ule i32 %885, %888
  %890 = xor i1 %889, true
  %891 = zext i1 %890 to i32
  %892 = sext i32 %891 to i64
  %893 = icmp ne i64 %892, 0
  br i1 %893, label %894, label %896

894:                                              ; preds = %882
  call void @__assert_rtn(ptr noundef @__func__.tdefl_start_dynamic_block, ptr noundef @.str.11, i32 noundef 2488, ptr noundef @.str.72) #12
  unreachable

895:                                              ; No predecessors!
  br label %897

896:                                              ; preds = %882
  br label %897

897:                                              ; preds = %896, %895
  %898 = load i32, ptr %22, align 4
  %899 = load ptr, ptr %2, align 8
  %900 = getelementptr inbounds %struct.tdefl_compressor, ptr %899, i32 0, i32 16
  %901 = load i32, ptr %900, align 4
  %902 = shl i32 %898, %901
  %903 = load ptr, ptr %2, align 8
  %904 = getelementptr inbounds %struct.tdefl_compressor, ptr %903, i32 0, i32 17
  %905 = load i32, ptr %904, align 8
  %906 = or i32 %905, %902
  store i32 %906, ptr %904, align 8
  %907 = load i32, ptr %23, align 4
  %908 = load ptr, ptr %2, align 8
  %909 = getelementptr inbounds %struct.tdefl_compressor, ptr %908, i32 0, i32 16
  %910 = load i32, ptr %909, align 4
  %911 = add i32 %910, %907
  store i32 %911, ptr %909, align 4
  br label %912

912:                                              ; preds = %934, %897
  %913 = load ptr, ptr %2, align 8
  %914 = getelementptr inbounds %struct.tdefl_compressor, ptr %913, i32 0, i32 16
  %915 = load i32, ptr %914, align 4
  %916 = icmp uge i32 %915, 8
  br i1 %916, label %917, label %943

917:                                              ; preds = %912
  %918 = load ptr, ptr %2, align 8
  %919 = getelementptr inbounds %struct.tdefl_compressor, ptr %918, i32 0, i32 11
  %920 = load ptr, ptr %919, align 8
  %921 = load ptr, ptr %2, align 8
  %922 = getelementptr inbounds %struct.tdefl_compressor, ptr %921, i32 0, i32 12
  %923 = load ptr, ptr %922, align 8
  %924 = icmp ult ptr %920, %923
  br i1 %924, label %925, label %934

925:                                              ; preds = %917
  %926 = load ptr, ptr %2, align 8
  %927 = getelementptr inbounds %struct.tdefl_compressor, ptr %926, i32 0, i32 17
  %928 = load i32, ptr %927, align 8
  %929 = trunc i32 %928 to i8
  %930 = load ptr, ptr %2, align 8
  %931 = getelementptr inbounds %struct.tdefl_compressor, ptr %930, i32 0, i32 11
  %932 = load ptr, ptr %931, align 8
  %933 = getelementptr inbounds i8, ptr %932, i32 1
  store ptr %933, ptr %931, align 8
  store i8 %929, ptr %932, align 1
  br label %934

934:                                              ; preds = %925, %917
  %935 = load ptr, ptr %2, align 8
  %936 = getelementptr inbounds %struct.tdefl_compressor, ptr %935, i32 0, i32 17
  %937 = load i32, ptr %936, align 8
  %938 = lshr i32 %937, 8
  store i32 %938, ptr %936, align 8
  %939 = load ptr, ptr %2, align 8
  %940 = getelementptr inbounds %struct.tdefl_compressor, ptr %939, i32 0, i32 16
  %941 = load i32, ptr %940, align 4
  %942 = sub i32 %941, 8
  store i32 %942, ptr %940, align 4
  br label %912, !llvm.loop !151

943:                                              ; preds = %912
  br label %944

944:                                              ; preds = %943
  store i32 0, ptr %6, align 4
  br label %945

945:                                              ; preds = %1022, %944
  %946 = load i32, ptr %6, align 4
  %947 = load i32, ptr %5, align 4
  %948 = icmp slt i32 %946, %947
  br i1 %948, label %949, label %1025

949:                                              ; preds = %945
  br label %950

950:                                              ; preds = %949
  %951 = load ptr, ptr %2, align 8
  %952 = getelementptr inbounds %struct.tdefl_compressor, ptr %951, i32 0, i32 38
  %953 = getelementptr inbounds [3 x [288 x i8]], ptr %952, i64 0, i64 2
  %954 = load i32, ptr %6, align 4
  %955 = zext i32 %954 to i64
  %956 = getelementptr inbounds [19 x i8], ptr @s_tdefl_packed_code_size_syms_swizzle, i64 0, i64 %955
  %957 = load i8, ptr %956, align 1
  %958 = zext i8 %957 to i64
  %959 = getelementptr inbounds [288 x i8], ptr %953, i64 0, i64 %958
  %960 = load i8, ptr %959, align 1
  %961 = zext i8 %960 to i32
  store i32 %961, ptr %24, align 4
  store i32 3, ptr %25, align 4
  %962 = load i32, ptr %24, align 4
  %963 = load i32, ptr %25, align 4
  %964 = shl i32 1, %963
  %965 = sub i32 %964, 1
  %966 = icmp ule i32 %962, %965
  %967 = xor i1 %966, true
  %968 = zext i1 %967 to i32
  %969 = sext i32 %968 to i64
  %970 = icmp ne i64 %969, 0
  br i1 %970, label %971, label %973

971:                                              ; preds = %950
  call void @__assert_rtn(ptr noundef @__func__.tdefl_start_dynamic_block, ptr noundef @.str.11, i32 noundef 2490, ptr noundef @.str.72) #12
  unreachable

972:                                              ; No predecessors!
  br label %974

973:                                              ; preds = %950
  br label %974

974:                                              ; preds = %973, %972
  %975 = load i32, ptr %24, align 4
  %976 = load ptr, ptr %2, align 8
  %977 = getelementptr inbounds %struct.tdefl_compressor, ptr %976, i32 0, i32 16
  %978 = load i32, ptr %977, align 4
  %979 = shl i32 %975, %978
  %980 = load ptr, ptr %2, align 8
  %981 = getelementptr inbounds %struct.tdefl_compressor, ptr %980, i32 0, i32 17
  %982 = load i32, ptr %981, align 8
  %983 = or i32 %982, %979
  store i32 %983, ptr %981, align 8
  %984 = load i32, ptr %25, align 4
  %985 = load ptr, ptr %2, align 8
  %986 = getelementptr inbounds %struct.tdefl_compressor, ptr %985, i32 0, i32 16
  %987 = load i32, ptr %986, align 4
  %988 = add i32 %987, %984
  store i32 %988, ptr %986, align 4
  br label %989

989:                                              ; preds = %1011, %974
  %990 = load ptr, ptr %2, align 8
  %991 = getelementptr inbounds %struct.tdefl_compressor, ptr %990, i32 0, i32 16
  %992 = load i32, ptr %991, align 4
  %993 = icmp uge i32 %992, 8
  br i1 %993, label %994, label %1020

994:                                              ; preds = %989
  %995 = load ptr, ptr %2, align 8
  %996 = getelementptr inbounds %struct.tdefl_compressor, ptr %995, i32 0, i32 11
  %997 = load ptr, ptr %996, align 8
  %998 = load ptr, ptr %2, align 8
  %999 = getelementptr inbounds %struct.tdefl_compressor, ptr %998, i32 0, i32 12
  %1000 = load ptr, ptr %999, align 8
  %1001 = icmp ult ptr %997, %1000
  br i1 %1001, label %1002, label %1011

1002:                                             ; preds = %994
  %1003 = load ptr, ptr %2, align 8
  %1004 = getelementptr inbounds %struct.tdefl_compressor, ptr %1003, i32 0, i32 17
  %1005 = load i32, ptr %1004, align 8
  %1006 = trunc i32 %1005 to i8
  %1007 = load ptr, ptr %2, align 8
  %1008 = getelementptr inbounds %struct.tdefl_compressor, ptr %1007, i32 0, i32 11
  %1009 = load ptr, ptr %1008, align 8
  %1010 = getelementptr inbounds i8, ptr %1009, i32 1
  store ptr %1010, ptr %1008, align 8
  store i8 %1006, ptr %1009, align 1
  br label %1011

1011:                                             ; preds = %1002, %994
  %1012 = load ptr, ptr %2, align 8
  %1013 = getelementptr inbounds %struct.tdefl_compressor, ptr %1012, i32 0, i32 17
  %1014 = load i32, ptr %1013, align 8
  %1015 = lshr i32 %1014, 8
  store i32 %1015, ptr %1013, align 8
  %1016 = load ptr, ptr %2, align 8
  %1017 = getelementptr inbounds %struct.tdefl_compressor, ptr %1016, i32 0, i32 16
  %1018 = load i32, ptr %1017, align 4
  %1019 = sub i32 %1018, 8
  store i32 %1019, ptr %1017, align 4
  br label %989, !llvm.loop !152

1020:                                             ; preds = %989
  br label %1021

1021:                                             ; preds = %1020
  br label %1022

1022:                                             ; preds = %1021
  %1023 = load i32, ptr %6, align 4
  %1024 = add i32 %1023, 1
  store i32 %1024, ptr %6, align 4
  br label %945, !llvm.loop !153

1025:                                             ; preds = %945
  store i32 0, ptr %11, align 4
  br label %1026

1026:                                             ; preds = %1200, %1025
  %1027 = load i32, ptr %11, align 4
  %1028 = load i32, ptr %8, align 4
  %1029 = icmp ult i32 %1027, %1028
  br i1 %1029, label %1030, label %1201

1030:                                             ; preds = %1026
  %1031 = load i32, ptr %11, align 4
  %1032 = add i32 %1031, 1
  store i32 %1032, ptr %11, align 4
  %1033 = zext i32 %1031 to i64
  %1034 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %1033
  %1035 = load i8, ptr %1034, align 1
  %1036 = zext i8 %1035 to i32
  store i32 %1036, ptr %26, align 4
  %1037 = load i32, ptr %26, align 4
  %1038 = icmp ult i32 %1037, 19
  %1039 = xor i1 %1038, true
  %1040 = zext i1 %1039 to i32
  %1041 = sext i32 %1040 to i64
  %1042 = icmp ne i64 %1041, 0
  br i1 %1042, label %1043, label %1045

1043:                                             ; preds = %1030
  call void @__assert_rtn(ptr noundef @__func__.tdefl_start_dynamic_block, ptr noundef @.str.11, i32 noundef 2495, ptr noundef @.str.74) #12
  unreachable

1044:                                             ; No predecessors!
  br label %1046

1045:                                             ; preds = %1030
  br label %1046

1046:                                             ; preds = %1045, %1044
  br label %1047

1047:                                             ; preds = %1046
  %1048 = load ptr, ptr %2, align 8
  %1049 = getelementptr inbounds %struct.tdefl_compressor, ptr %1048, i32 0, i32 37
  %1050 = getelementptr inbounds [3 x [288 x i16]], ptr %1049, i64 0, i64 2
  %1051 = load i32, ptr %26, align 4
  %1052 = zext i32 %1051 to i64
  %1053 = getelementptr inbounds [288 x i16], ptr %1050, i64 0, i64 %1052
  %1054 = load i16, ptr %1053, align 2
  %1055 = zext i16 %1054 to i32
  store i32 %1055, ptr %27, align 4
  %1056 = load ptr, ptr %2, align 8
  %1057 = getelementptr inbounds %struct.tdefl_compressor, ptr %1056, i32 0, i32 38
  %1058 = getelementptr inbounds [3 x [288 x i8]], ptr %1057, i64 0, i64 2
  %1059 = load i32, ptr %26, align 4
  %1060 = zext i32 %1059 to i64
  %1061 = getelementptr inbounds [288 x i8], ptr %1058, i64 0, i64 %1060
  %1062 = load i8, ptr %1061, align 1
  %1063 = zext i8 %1062 to i32
  store i32 %1063, ptr %28, align 4
  %1064 = load i32, ptr %27, align 4
  %1065 = load i32, ptr %28, align 4
  %1066 = shl i32 1, %1065
  %1067 = sub i32 %1066, 1
  %1068 = icmp ule i32 %1064, %1067
  %1069 = xor i1 %1068, true
  %1070 = zext i1 %1069 to i32
  %1071 = sext i32 %1070 to i64
  %1072 = icmp ne i64 %1071, 0
  br i1 %1072, label %1073, label %1075

1073:                                             ; preds = %1047
  call void @__assert_rtn(ptr noundef @__func__.tdefl_start_dynamic_block, ptr noundef @.str.11, i32 noundef 2496, ptr noundef @.str.72) #12
  unreachable

1074:                                             ; No predecessors!
  br label %1076

1075:                                             ; preds = %1047
  br label %1076

1076:                                             ; preds = %1075, %1074
  %1077 = load i32, ptr %27, align 4
  %1078 = load ptr, ptr %2, align 8
  %1079 = getelementptr inbounds %struct.tdefl_compressor, ptr %1078, i32 0, i32 16
  %1080 = load i32, ptr %1079, align 4
  %1081 = shl i32 %1077, %1080
  %1082 = load ptr, ptr %2, align 8
  %1083 = getelementptr inbounds %struct.tdefl_compressor, ptr %1082, i32 0, i32 17
  %1084 = load i32, ptr %1083, align 8
  %1085 = or i32 %1084, %1081
  store i32 %1085, ptr %1083, align 8
  %1086 = load i32, ptr %28, align 4
  %1087 = load ptr, ptr %2, align 8
  %1088 = getelementptr inbounds %struct.tdefl_compressor, ptr %1087, i32 0, i32 16
  %1089 = load i32, ptr %1088, align 4
  %1090 = add i32 %1089, %1086
  store i32 %1090, ptr %1088, align 4
  br label %1091

1091:                                             ; preds = %1113, %1076
  %1092 = load ptr, ptr %2, align 8
  %1093 = getelementptr inbounds %struct.tdefl_compressor, ptr %1092, i32 0, i32 16
  %1094 = load i32, ptr %1093, align 4
  %1095 = icmp uge i32 %1094, 8
  br i1 %1095, label %1096, label %1122

1096:                                             ; preds = %1091
  %1097 = load ptr, ptr %2, align 8
  %1098 = getelementptr inbounds %struct.tdefl_compressor, ptr %1097, i32 0, i32 11
  %1099 = load ptr, ptr %1098, align 8
  %1100 = load ptr, ptr %2, align 8
  %1101 = getelementptr inbounds %struct.tdefl_compressor, ptr %1100, i32 0, i32 12
  %1102 = load ptr, ptr %1101, align 8
  %1103 = icmp ult ptr %1099, %1102
  br i1 %1103, label %1104, label %1113

1104:                                             ; preds = %1096
  %1105 = load ptr, ptr %2, align 8
  %1106 = getelementptr inbounds %struct.tdefl_compressor, ptr %1105, i32 0, i32 17
  %1107 = load i32, ptr %1106, align 8
  %1108 = trunc i32 %1107 to i8
  %1109 = load ptr, ptr %2, align 8
  %1110 = getelementptr inbounds %struct.tdefl_compressor, ptr %1109, i32 0, i32 11
  %1111 = load ptr, ptr %1110, align 8
  %1112 = getelementptr inbounds i8, ptr %1111, i32 1
  store ptr %1112, ptr %1110, align 8
  store i8 %1108, ptr %1111, align 1
  br label %1113

1113:                                             ; preds = %1104, %1096
  %1114 = load ptr, ptr %2, align 8
  %1115 = getelementptr inbounds %struct.tdefl_compressor, ptr %1114, i32 0, i32 17
  %1116 = load i32, ptr %1115, align 8
  %1117 = lshr i32 %1116, 8
  store i32 %1117, ptr %1115, align 8
  %1118 = load ptr, ptr %2, align 8
  %1119 = getelementptr inbounds %struct.tdefl_compressor, ptr %1118, i32 0, i32 16
  %1120 = load i32, ptr %1119, align 4
  %1121 = sub i32 %1120, 8
  store i32 %1121, ptr %1119, align 4
  br label %1091, !llvm.loop !154

1122:                                             ; preds = %1091
  br label %1123

1123:                                             ; preds = %1122
  %1124 = load i32, ptr %26, align 4
  %1125 = icmp uge i32 %1124, 16
  br i1 %1125, label %1126, label %1200

1126:                                             ; preds = %1123
  br label %1127

1127:                                             ; preds = %1126
  %1128 = load i32, ptr %11, align 4
  %1129 = add i32 %1128, 1
  store i32 %1129, ptr %11, align 4
  %1130 = zext i32 %1128 to i64
  %1131 = getelementptr inbounds [320 x i8], ptr %13, i64 0, i64 %1130
  %1132 = load i8, ptr %1131, align 1
  %1133 = zext i8 %1132 to i32
  store i32 %1133, ptr %29, align 4
  %1134 = load i32, ptr %26, align 4
  %1135 = sub i32 %1134, 16
  %1136 = zext i32 %1135 to i64
  %1137 = getelementptr inbounds [4 x i8], ptr @.str.15, i64 0, i64 %1136
  %1138 = load i8, ptr %1137, align 1
  %1139 = sext i8 %1138 to i32
  store i32 %1139, ptr %30, align 4
  %1140 = load i32, ptr %29, align 4
  %1141 = load i32, ptr %30, align 4
  %1142 = shl i32 1, %1141
  %1143 = sub i32 %1142, 1
  %1144 = icmp ule i32 %1140, %1143
  %1145 = xor i1 %1144, true
  %1146 = zext i1 %1145 to i32
  %1147 = sext i32 %1146 to i64
  %1148 = icmp ne i64 %1147, 0
  br i1 %1148, label %1149, label %1151

1149:                                             ; preds = %1127
  call void @__assert_rtn(ptr noundef @__func__.tdefl_start_dynamic_block, ptr noundef @.str.11, i32 noundef 2498, ptr noundef @.str.72) #12
  unreachable

1150:                                             ; No predecessors!
  br label %1152

1151:                                             ; preds = %1127
  br label %1152

1152:                                             ; preds = %1151, %1150
  %1153 = load i32, ptr %29, align 4
  %1154 = load ptr, ptr %2, align 8
  %1155 = getelementptr inbounds %struct.tdefl_compressor, ptr %1154, i32 0, i32 16
  %1156 = load i32, ptr %1155, align 4
  %1157 = shl i32 %1153, %1156
  %1158 = load ptr, ptr %2, align 8
  %1159 = getelementptr inbounds %struct.tdefl_compressor, ptr %1158, i32 0, i32 17
  %1160 = load i32, ptr %1159, align 8
  %1161 = or i32 %1160, %1157
  store i32 %1161, ptr %1159, align 8
  %1162 = load i32, ptr %30, align 4
  %1163 = load ptr, ptr %2, align 8
  %1164 = getelementptr inbounds %struct.tdefl_compressor, ptr %1163, i32 0, i32 16
  %1165 = load i32, ptr %1164, align 4
  %1166 = add i32 %1165, %1162
  store i32 %1166, ptr %1164, align 4
  br label %1167

1167:                                             ; preds = %1189, %1152
  %1168 = load ptr, ptr %2, align 8
  %1169 = getelementptr inbounds %struct.tdefl_compressor, ptr %1168, i32 0, i32 16
  %1170 = load i32, ptr %1169, align 4
  %1171 = icmp uge i32 %1170, 8
  br i1 %1171, label %1172, label %1198

1172:                                             ; preds = %1167
  %1173 = load ptr, ptr %2, align 8
  %1174 = getelementptr inbounds %struct.tdefl_compressor, ptr %1173, i32 0, i32 11
  %1175 = load ptr, ptr %1174, align 8
  %1176 = load ptr, ptr %2, align 8
  %1177 = getelementptr inbounds %struct.tdefl_compressor, ptr %1176, i32 0, i32 12
  %1178 = load ptr, ptr %1177, align 8
  %1179 = icmp ult ptr %1175, %1178
  br i1 %1179, label %1180, label %1189

1180:                                             ; preds = %1172
  %1181 = load ptr, ptr %2, align 8
  %1182 = getelementptr inbounds %struct.tdefl_compressor, ptr %1181, i32 0, i32 17
  %1183 = load i32, ptr %1182, align 8
  %1184 = trunc i32 %1183 to i8
  %1185 = load ptr, ptr %2, align 8
  %1186 = getelementptr inbounds %struct.tdefl_compressor, ptr %1185, i32 0, i32 11
  %1187 = load ptr, ptr %1186, align 8
  %1188 = getelementptr inbounds i8, ptr %1187, i32 1
  store ptr %1188, ptr %1186, align 8
  store i8 %1184, ptr %1187, align 1
  br label %1189

1189:                                             ; preds = %1180, %1172
  %1190 = load ptr, ptr %2, align 8
  %1191 = getelementptr inbounds %struct.tdefl_compressor, ptr %1190, i32 0, i32 17
  %1192 = load i32, ptr %1191, align 8
  %1193 = lshr i32 %1192, 8
  store i32 %1193, ptr %1191, align 8
  %1194 = load ptr, ptr %2, align 8
  %1195 = getelementptr inbounds %struct.tdefl_compressor, ptr %1194, i32 0, i32 16
  %1196 = load i32, ptr %1195, align 4
  %1197 = sub i32 %1196, 8
  store i32 %1197, ptr %1195, align 4
  br label %1167, !llvm.loop !155

1198:                                             ; preds = %1167
  br label %1199

1199:                                             ; preds = %1198
  br label %1200

1200:                                             ; preds = %1199, %1123
  br label %1026, !llvm.loop !156

1201:                                             ; preds = %1026
  ret void
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @tdefl_compress_lz_codes(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  store i32 1, ptr %3, align 4
  %22 = load ptr, ptr %2, align 8
  %23 = getelementptr inbounds %struct.tdefl_compressor, ptr %22, i32 0, i32 39
  %24 = getelementptr inbounds [65536 x i8], ptr %23, i64 0, i64 0
  store ptr %24, ptr %4, align 8
  br label %25

25:                                               ; preds = %525, %1
  %26 = load ptr, ptr %4, align 8
  %27 = load ptr, ptr %2, align 8
  %28 = getelementptr inbounds %struct.tdefl_compressor, ptr %27, i32 0, i32 9
  %29 = load ptr, ptr %28, align 8
  %30 = icmp ult ptr %26, %29
  br i1 %30, label %31, label %528

31:                                               ; preds = %25
  %32 = load i32, ptr %3, align 4
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %31
  %35 = load ptr, ptr %4, align 8
  %36 = getelementptr inbounds i8, ptr %35, i32 1
  store ptr %36, ptr %4, align 8
  %37 = load i8, ptr %35, align 1
  %38 = zext i8 %37 to i32
  %39 = or i32 %38, 256
  store i32 %39, ptr %3, align 4
  br label %40

40:                                               ; preds = %34, %31
  %41 = load i32, ptr %3, align 4
  %42 = and i32 %41, 1
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %426

44:                                               ; preds = %40
  %45 = load ptr, ptr %4, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 0
  %47 = load i8, ptr %46, align 1
  %48 = zext i8 %47 to i32
  store i32 %48, ptr %7, align 4
  %49 = load ptr, ptr %4, align 8
  %50 = getelementptr inbounds i8, ptr %49, i64 1
  %51 = load i8, ptr %50, align 1
  %52 = zext i8 %51 to i32
  %53 = load ptr, ptr %4, align 8
  %54 = getelementptr inbounds i8, ptr %53, i64 2
  %55 = load i8, ptr %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl i32 %56, 8
  %58 = or i32 %52, %57
  store i32 %58, ptr %8, align 4
  %59 = load ptr, ptr %4, align 8
  %60 = getelementptr inbounds i8, ptr %59, i64 3
  store ptr %60, ptr %4, align 8
  %61 = load ptr, ptr %2, align 8
  %62 = getelementptr inbounds %struct.tdefl_compressor, ptr %61, i32 0, i32 38
  %63 = getelementptr inbounds [3 x [288 x i8]], ptr %62, i64 0, i64 0
  %64 = load i32, ptr %7, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds [256 x i16], ptr @s_tdefl_len_sym, i64 0, i64 %65
  %67 = load i16, ptr %66, align 2
  %68 = zext i16 %67 to i64
  %69 = getelementptr inbounds [288 x i8], ptr %63, i64 0, i64 %68
  %70 = load i8, ptr %69, align 1
  %71 = icmp ne i8 %70, 0
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %44
  call void @__assert_rtn(ptr noundef @__func__.tdefl_compress_lz_codes, ptr noundef @.str.11, i32 noundef 2638, ptr noundef @.str.75) #12
  unreachable

77:                                               ; No predecessors!
  br label %79

78:                                               ; preds = %44
  br label %79

79:                                               ; preds = %78, %77
  br label %80

80:                                               ; preds = %79
  %81 = load ptr, ptr %2, align 8
  %82 = getelementptr inbounds %struct.tdefl_compressor, ptr %81, i32 0, i32 37
  %83 = getelementptr inbounds [3 x [288 x i16]], ptr %82, i64 0, i64 0
  %84 = load i32, ptr %7, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds [256 x i16], ptr @s_tdefl_len_sym, i64 0, i64 %85
  %87 = load i16, ptr %86, align 2
  %88 = zext i16 %87 to i64
  %89 = getelementptr inbounds [288 x i16], ptr %83, i64 0, i64 %88
  %90 = load i16, ptr %89, align 2
  %91 = zext i16 %90 to i32
  store i32 %91, ptr %9, align 4
  %92 = load ptr, ptr %2, align 8
  %93 = getelementptr inbounds %struct.tdefl_compressor, ptr %92, i32 0, i32 38
  %94 = getelementptr inbounds [3 x [288 x i8]], ptr %93, i64 0, i64 0
  %95 = load i32, ptr %7, align 4
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds [256 x i16], ptr @s_tdefl_len_sym, i64 0, i64 %96
  %98 = load i16, ptr %97, align 2
  %99 = zext i16 %98 to i64
  %100 = getelementptr inbounds [288 x i8], ptr %94, i64 0, i64 %99
  %101 = load i8, ptr %100, align 1
  %102 = zext i8 %101 to i32
  store i32 %102, ptr %10, align 4
  %103 = load i32, ptr %9, align 4
  %104 = load i32, ptr %10, align 4
  %105 = shl i32 1, %104
  %106 = sub i32 %105, 1
  %107 = icmp ule i32 %103, %106
  %108 = xor i1 %107, true
  %109 = zext i1 %108 to i32
  %110 = sext i32 %109 to i64
  %111 = icmp ne i64 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %80
  call void @__assert_rtn(ptr noundef @__func__.tdefl_compress_lz_codes, ptr noundef @.str.11, i32 noundef 2639, ptr noundef @.str.72) #12
  unreachable

113:                                              ; No predecessors!
  br label %115

114:                                              ; preds = %80
  br label %115

115:                                              ; preds = %114, %113
  %116 = load i32, ptr %9, align 4
  %117 = load ptr, ptr %2, align 8
  %118 = getelementptr inbounds %struct.tdefl_compressor, ptr %117, i32 0, i32 16
  %119 = load i32, ptr %118, align 4
  %120 = shl i32 %116, %119
  %121 = load ptr, ptr %2, align 8
  %122 = getelementptr inbounds %struct.tdefl_compressor, ptr %121, i32 0, i32 17
  %123 = load i32, ptr %122, align 8
  %124 = or i32 %123, %120
  store i32 %124, ptr %122, align 8
  %125 = load i32, ptr %10, align 4
  %126 = load ptr, ptr %2, align 8
  %127 = getelementptr inbounds %struct.tdefl_compressor, ptr %126, i32 0, i32 16
  %128 = load i32, ptr %127, align 4
  %129 = add i32 %128, %125
  store i32 %129, ptr %127, align 4
  br label %130

130:                                              ; preds = %152, %115
  %131 = load ptr, ptr %2, align 8
  %132 = getelementptr inbounds %struct.tdefl_compressor, ptr %131, i32 0, i32 16
  %133 = load i32, ptr %132, align 4
  %134 = icmp uge i32 %133, 8
  br i1 %134, label %135, label %161

135:                                              ; preds = %130
  %136 = load ptr, ptr %2, align 8
  %137 = getelementptr inbounds %struct.tdefl_compressor, ptr %136, i32 0, i32 11
  %138 = load ptr, ptr %137, align 8
  %139 = load ptr, ptr %2, align 8
  %140 = getelementptr inbounds %struct.tdefl_compressor, ptr %139, i32 0, i32 12
  %141 = load ptr, ptr %140, align 8
  %142 = icmp ult ptr %138, %141
  br i1 %142, label %143, label %152

143:                                              ; preds = %135
  %144 = load ptr, ptr %2, align 8
  %145 = getelementptr inbounds %struct.tdefl_compressor, ptr %144, i32 0, i32 17
  %146 = load i32, ptr %145, align 8
  %147 = trunc i32 %146 to i8
  %148 = load ptr, ptr %2, align 8
  %149 = getelementptr inbounds %struct.tdefl_compressor, ptr %148, i32 0, i32 11
  %150 = load ptr, ptr %149, align 8
  %151 = getelementptr inbounds i8, ptr %150, i32 1
  store ptr %151, ptr %149, align 8
  store i8 %147, ptr %150, align 1
  br label %152

152:                                              ; preds = %143, %135
  %153 = load ptr, ptr %2, align 8
  %154 = getelementptr inbounds %struct.tdefl_compressor, ptr %153, i32 0, i32 17
  %155 = load i32, ptr %154, align 8
  %156 = lshr i32 %155, 8
  store i32 %156, ptr %154, align 8
  %157 = load ptr, ptr %2, align 8
  %158 = getelementptr inbounds %struct.tdefl_compressor, ptr %157, i32 0, i32 16
  %159 = load i32, ptr %158, align 4
  %160 = sub i32 %159, 8
  store i32 %160, ptr %158, align 4
  br label %130, !llvm.loop !157

161:                                              ; preds = %130
  br label %162

162:                                              ; preds = %161
  br label %163

163:                                              ; preds = %162
  %164 = load i32, ptr %7, align 4
  %165 = load i32, ptr %7, align 4
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds [256 x i8], ptr @s_tdefl_len_extra, i64 0, i64 %166
  %168 = load i8, ptr %167, align 1
  %169 = zext i8 %168 to i64
  %170 = getelementptr inbounds [17 x i32], ptr @mz_bitmasks, i64 0, i64 %169
  %171 = load i32, ptr %170, align 4
  %172 = and i32 %164, %171
  store i32 %172, ptr %11, align 4
  %173 = load i32, ptr %7, align 4
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [256 x i8], ptr @s_tdefl_len_extra, i64 0, i64 %174
  %176 = load i8, ptr %175, align 1
  %177 = zext i8 %176 to i32
  store i32 %177, ptr %12, align 4
  %178 = load i32, ptr %11, align 4
  %179 = load i32, ptr %12, align 4
  %180 = shl i32 1, %179
  %181 = sub i32 %180, 1
  %182 = icmp ule i32 %178, %181
  %183 = xor i1 %182, true
  %184 = zext i1 %183 to i32
  %185 = sext i32 %184 to i64
  %186 = icmp ne i64 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %163
  call void @__assert_rtn(ptr noundef @__func__.tdefl_compress_lz_codes, ptr noundef @.str.11, i32 noundef 2640, ptr noundef @.str.72) #12
  unreachable

188:                                              ; No predecessors!
  br label %190

189:                                              ; preds = %163
  br label %190

190:                                              ; preds = %189, %188
  %191 = load i32, ptr %11, align 4
  %192 = load ptr, ptr %2, align 8
  %193 = getelementptr inbounds %struct.tdefl_compressor, ptr %192, i32 0, i32 16
  %194 = load i32, ptr %193, align 4
  %195 = shl i32 %191, %194
  %196 = load ptr, ptr %2, align 8
  %197 = getelementptr inbounds %struct.tdefl_compressor, ptr %196, i32 0, i32 17
  %198 = load i32, ptr %197, align 8
  %199 = or i32 %198, %195
  store i32 %199, ptr %197, align 8
  %200 = load i32, ptr %12, align 4
  %201 = load ptr, ptr %2, align 8
  %202 = getelementptr inbounds %struct.tdefl_compressor, ptr %201, i32 0, i32 16
  %203 = load i32, ptr %202, align 4
  %204 = add i32 %203, %200
  store i32 %204, ptr %202, align 4
  br label %205

205:                                              ; preds = %227, %190
  %206 = load ptr, ptr %2, align 8
  %207 = getelementptr inbounds %struct.tdefl_compressor, ptr %206, i32 0, i32 16
  %208 = load i32, ptr %207, align 4
  %209 = icmp uge i32 %208, 8
  br i1 %209, label %210, label %236

210:                                              ; preds = %205
  %211 = load ptr, ptr %2, align 8
  %212 = getelementptr inbounds %struct.tdefl_compressor, ptr %211, i32 0, i32 11
  %213 = load ptr, ptr %212, align 8
  %214 = load ptr, ptr %2, align 8
  %215 = getelementptr inbounds %struct.tdefl_compressor, ptr %214, i32 0, i32 12
  %216 = load ptr, ptr %215, align 8
  %217 = icmp ult ptr %213, %216
  br i1 %217, label %218, label %227

218:                                              ; preds = %210
  %219 = load ptr, ptr %2, align 8
  %220 = getelementptr inbounds %struct.tdefl_compressor, ptr %219, i32 0, i32 17
  %221 = load i32, ptr %220, align 8
  %222 = trunc i32 %221 to i8
  %223 = load ptr, ptr %2, align 8
  %224 = getelementptr inbounds %struct.tdefl_compressor, ptr %223, i32 0, i32 11
  %225 = load ptr, ptr %224, align 8
  %226 = getelementptr inbounds i8, ptr %225, i32 1
  store ptr %226, ptr %224, align 8
  store i8 %222, ptr %225, align 1
  br label %227

227:                                              ; preds = %218, %210
  %228 = load ptr, ptr %2, align 8
  %229 = getelementptr inbounds %struct.tdefl_compressor, ptr %228, i32 0, i32 17
  %230 = load i32, ptr %229, align 8
  %231 = lshr i32 %230, 8
  store i32 %231, ptr %229, align 8
  %232 = load ptr, ptr %2, align 8
  %233 = getelementptr inbounds %struct.tdefl_compressor, ptr %232, i32 0, i32 16
  %234 = load i32, ptr %233, align 4
  %235 = sub i32 %234, 8
  store i32 %235, ptr %233, align 4
  br label %205, !llvm.loop !158

236:                                              ; preds = %205
  br label %237

237:                                              ; preds = %236
  %238 = load i32, ptr %8, align 4
  %239 = icmp ult i32 %238, 512
  br i1 %239, label %240, label %251

240:                                              ; preds = %237
  %241 = load i32, ptr %8, align 4
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds [512 x i8], ptr @s_tdefl_small_dist_sym, i64 0, i64 %242
  %244 = load i8, ptr %243, align 1
  %245 = zext i8 %244 to i32
  store i32 %245, ptr %5, align 4
  %246 = load i32, ptr %8, align 4
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds [512 x i8], ptr @s_tdefl_small_dist_extra, i64 0, i64 %247
  %249 = load i8, ptr %248, align 1
  %250 = zext i8 %249 to i32
  store i32 %250, ptr %6, align 4
  br label %264

251:                                              ; preds = %237
  %252 = load i32, ptr %8, align 4
  %253 = lshr i32 %252, 8
  %254 = zext i32 %253 to i64
  %255 = getelementptr inbounds [128 x i8], ptr @s_tdefl_large_dist_sym, i64 0, i64 %254
  %256 = load i8, ptr %255, align 1
  %257 = zext i8 %256 to i32
  store i32 %257, ptr %5, align 4
  %258 = load i32, ptr %8, align 4
  %259 = lshr i32 %258, 8
  %260 = zext i32 %259 to i64
  %261 = getelementptr inbounds [128 x i8], ptr @s_tdefl_large_dist_extra, i64 0, i64 %260
  %262 = load i8, ptr %261, align 1
  %263 = zext i8 %262 to i32
  store i32 %263, ptr %6, align 4
  br label %264

264:                                              ; preds = %251, %240
  %265 = load ptr, ptr %2, align 8
  %266 = getelementptr inbounds %struct.tdefl_compressor, ptr %265, i32 0, i32 38
  %267 = getelementptr inbounds [3 x [288 x i8]], ptr %266, i64 0, i64 1
  %268 = load i32, ptr %5, align 4
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds [288 x i8], ptr %267, i64 0, i64 %269
  %271 = load i8, ptr %270, align 1
  %272 = icmp ne i8 %271, 0
  %273 = xor i1 %272, true
  %274 = zext i1 %273 to i32
  %275 = sext i32 %274 to i64
  %276 = icmp ne i64 %275, 0
  br i1 %276, label %277, label %279

277:                                              ; preds = %264
  call void @__assert_rtn(ptr noundef @__func__.tdefl_compress_lz_codes, ptr noundef @.str.11, i32 noundef 2652, ptr noundef @.str.76) #12
  unreachable

278:                                              ; No predecessors!
  br label %280

279:                                              ; preds = %264
  br label %280

280:                                              ; preds = %279, %278
  br label %281

281:                                              ; preds = %280
  %282 = load ptr, ptr %2, align 8
  %283 = getelementptr inbounds %struct.tdefl_compressor, ptr %282, i32 0, i32 37
  %284 = getelementptr inbounds [3 x [288 x i16]], ptr %283, i64 0, i64 1
  %285 = load i32, ptr %5, align 4
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds [288 x i16], ptr %284, i64 0, i64 %286
  %288 = load i16, ptr %287, align 2
  %289 = zext i16 %288 to i32
  store i32 %289, ptr %13, align 4
  %290 = load ptr, ptr %2, align 8
  %291 = getelementptr inbounds %struct.tdefl_compressor, ptr %290, i32 0, i32 38
  %292 = getelementptr inbounds [3 x [288 x i8]], ptr %291, i64 0, i64 1
  %293 = load i32, ptr %5, align 4
  %294 = zext i32 %293 to i64
  %295 = getelementptr inbounds [288 x i8], ptr %292, i64 0, i64 %294
  %296 = load i8, ptr %295, align 1
  %297 = zext i8 %296 to i32
  store i32 %297, ptr %14, align 4
  %298 = load i32, ptr %13, align 4
  %299 = load i32, ptr %14, align 4
  %300 = shl i32 1, %299
  %301 = sub i32 %300, 1
  %302 = icmp ule i32 %298, %301
  %303 = xor i1 %302, true
  %304 = zext i1 %303 to i32
  %305 = sext i32 %304 to i64
  %306 = icmp ne i64 %305, 0
  br i1 %306, label %307, label %309

307:                                              ; preds = %281
  call void @__assert_rtn(ptr noundef @__func__.tdefl_compress_lz_codes, ptr noundef @.str.11, i32 noundef 2653, ptr noundef @.str.72) #12
  unreachable

308:                                              ; No predecessors!
  br label %310

309:                                              ; preds = %281
  br label %310

310:                                              ; preds = %309, %308
  %311 = load i32, ptr %13, align 4
  %312 = load ptr, ptr %2, align 8
  %313 = getelementptr inbounds %struct.tdefl_compressor, ptr %312, i32 0, i32 16
  %314 = load i32, ptr %313, align 4
  %315 = shl i32 %311, %314
  %316 = load ptr, ptr %2, align 8
  %317 = getelementptr inbounds %struct.tdefl_compressor, ptr %316, i32 0, i32 17
  %318 = load i32, ptr %317, align 8
  %319 = or i32 %318, %315
  store i32 %319, ptr %317, align 8
  %320 = load i32, ptr %14, align 4
  %321 = load ptr, ptr %2, align 8
  %322 = getelementptr inbounds %struct.tdefl_compressor, ptr %321, i32 0, i32 16
  %323 = load i32, ptr %322, align 4
  %324 = add i32 %323, %320
  store i32 %324, ptr %322, align 4
  br label %325

325:                                              ; preds = %347, %310
  %326 = load ptr, ptr %2, align 8
  %327 = getelementptr inbounds %struct.tdefl_compressor, ptr %326, i32 0, i32 16
  %328 = load i32, ptr %327, align 4
  %329 = icmp uge i32 %328, 8
  br i1 %329, label %330, label %356

330:                                              ; preds = %325
  %331 = load ptr, ptr %2, align 8
  %332 = getelementptr inbounds %struct.tdefl_compressor, ptr %331, i32 0, i32 11
  %333 = load ptr, ptr %332, align 8
  %334 = load ptr, ptr %2, align 8
  %335 = getelementptr inbounds %struct.tdefl_compressor, ptr %334, i32 0, i32 12
  %336 = load ptr, ptr %335, align 8
  %337 = icmp ult ptr %333, %336
  br i1 %337, label %338, label %347

338:                                              ; preds = %330
  %339 = load ptr, ptr %2, align 8
  %340 = getelementptr inbounds %struct.tdefl_compressor, ptr %339, i32 0, i32 17
  %341 = load i32, ptr %340, align 8
  %342 = trunc i32 %341 to i8
  %343 = load ptr, ptr %2, align 8
  %344 = getelementptr inbounds %struct.tdefl_compressor, ptr %343, i32 0, i32 11
  %345 = load ptr, ptr %344, align 8
  %346 = getelementptr inbounds i8, ptr %345, i32 1
  store ptr %346, ptr %344, align 8
  store i8 %342, ptr %345, align 1
  br label %347

347:                                              ; preds = %338, %330
  %348 = load ptr, ptr %2, align 8
  %349 = getelementptr inbounds %struct.tdefl_compressor, ptr %348, i32 0, i32 17
  %350 = load i32, ptr %349, align 8
  %351 = lshr i32 %350, 8
  store i32 %351, ptr %349, align 8
  %352 = load ptr, ptr %2, align 8
  %353 = getelementptr inbounds %struct.tdefl_compressor, ptr %352, i32 0, i32 16
  %354 = load i32, ptr %353, align 4
  %355 = sub i32 %354, 8
  store i32 %355, ptr %353, align 4
  br label %325, !llvm.loop !159

356:                                              ; preds = %325
  br label %357

357:                                              ; preds = %356
  br label %358

358:                                              ; preds = %357
  %359 = load i32, ptr %8, align 4
  %360 = load i32, ptr %6, align 4
  %361 = zext i32 %360 to i64
  %362 = getelementptr inbounds [17 x i32], ptr @mz_bitmasks, i64 0, i64 %361
  %363 = load i32, ptr %362, align 4
  %364 = and i32 %359, %363
  store i32 %364, ptr %15, align 4
  %365 = load i32, ptr %6, align 4
  store i32 %365, ptr %16, align 4
  %366 = load i32, ptr %15, align 4
  %367 = load i32, ptr %16, align 4
  %368 = shl i32 1, %367
  %369 = sub i32 %368, 1
  %370 = icmp ule i32 %366, %369
  %371 = xor i1 %370, true
  %372 = zext i1 %371 to i32
  %373 = sext i32 %372 to i64
  %374 = icmp ne i64 %373, 0
  br i1 %374, label %375, label %377

375:                                              ; preds = %358
  call void @__assert_rtn(ptr noundef @__func__.tdefl_compress_lz_codes, ptr noundef @.str.11, i32 noundef 2654, ptr noundef @.str.72) #12
  unreachable

376:                                              ; No predecessors!
  br label %378

377:                                              ; preds = %358
  br label %378

378:                                              ; preds = %377, %376
  %379 = load i32, ptr %15, align 4
  %380 = load ptr, ptr %2, align 8
  %381 = getelementptr inbounds %struct.tdefl_compressor, ptr %380, i32 0, i32 16
  %382 = load i32, ptr %381, align 4
  %383 = shl i32 %379, %382
  %384 = load ptr, ptr %2, align 8
  %385 = getelementptr inbounds %struct.tdefl_compressor, ptr %384, i32 0, i32 17
  %386 = load i32, ptr %385, align 8
  %387 = or i32 %386, %383
  store i32 %387, ptr %385, align 8
  %388 = load i32, ptr %16, align 4
  %389 = load ptr, ptr %2, align 8
  %390 = getelementptr inbounds %struct.tdefl_compressor, ptr %389, i32 0, i32 16
  %391 = load i32, ptr %390, align 4
  %392 = add i32 %391, %388
  store i32 %392, ptr %390, align 4
  br label %393

393:                                              ; preds = %415, %378
  %394 = load ptr, ptr %2, align 8
  %395 = getelementptr inbounds %struct.tdefl_compressor, ptr %394, i32 0, i32 16
  %396 = load i32, ptr %395, align 4
  %397 = icmp uge i32 %396, 8
  br i1 %397, label %398, label %424

398:                                              ; preds = %393
  %399 = load ptr, ptr %2, align 8
  %400 = getelementptr inbounds %struct.tdefl_compressor, ptr %399, i32 0, i32 11
  %401 = load ptr, ptr %400, align 8
  %402 = load ptr, ptr %2, align 8
  %403 = getelementptr inbounds %struct.tdefl_compressor, ptr %402, i32 0, i32 12
  %404 = load ptr, ptr %403, align 8
  %405 = icmp ult ptr %401, %404
  br i1 %405, label %406, label %415

406:                                              ; preds = %398
  %407 = load ptr, ptr %2, align 8
  %408 = getelementptr inbounds %struct.tdefl_compressor, ptr %407, i32 0, i32 17
  %409 = load i32, ptr %408, align 8
  %410 = trunc i32 %409 to i8
  %411 = load ptr, ptr %2, align 8
  %412 = getelementptr inbounds %struct.tdefl_compressor, ptr %411, i32 0, i32 11
  %413 = load ptr, ptr %412, align 8
  %414 = getelementptr inbounds i8, ptr %413, i32 1
  store ptr %414, ptr %412, align 8
  store i8 %410, ptr %413, align 1
  br label %415

415:                                              ; preds = %406, %398
  %416 = load ptr, ptr %2, align 8
  %417 = getelementptr inbounds %struct.tdefl_compressor, ptr %416, i32 0, i32 17
  %418 = load i32, ptr %417, align 8
  %419 = lshr i32 %418, 8
  store i32 %419, ptr %417, align 8
  %420 = load ptr, ptr %2, align 8
  %421 = getelementptr inbounds %struct.tdefl_compressor, ptr %420, i32 0, i32 16
  %422 = load i32, ptr %421, align 4
  %423 = sub i32 %422, 8
  store i32 %423, ptr %421, align 4
  br label %393, !llvm.loop !160

424:                                              ; preds = %393
  br label %425

425:                                              ; preds = %424
  br label %524

426:                                              ; preds = %40
  %427 = load ptr, ptr %4, align 8
  %428 = getelementptr inbounds i8, ptr %427, i32 1
  store ptr %428, ptr %4, align 8
  %429 = load i8, ptr %427, align 1
  %430 = zext i8 %429 to i32
  store i32 %430, ptr %17, align 4
  %431 = load ptr, ptr %2, align 8
  %432 = getelementptr inbounds %struct.tdefl_compressor, ptr %431, i32 0, i32 38
  %433 = getelementptr inbounds [3 x [288 x i8]], ptr %432, i64 0, i64 0
  %434 = load i32, ptr %17, align 4
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds [288 x i8], ptr %433, i64 0, i64 %435
  %437 = load i8, ptr %436, align 1
  %438 = icmp ne i8 %437, 0
  %439 = xor i1 %438, true
  %440 = zext i1 %439 to i32
  %441 = sext i32 %440 to i64
  %442 = icmp ne i64 %441, 0
  br i1 %442, label %443, label %445

443:                                              ; preds = %426
  call void @__assert_rtn(ptr noundef @__func__.tdefl_compress_lz_codes, ptr noundef @.str.11, i32 noundef 2659, ptr noundef @.str.77) #12
  unreachable

444:                                              ; No predecessors!
  br label %446

445:                                              ; preds = %426
  br label %446

446:                                              ; preds = %445, %444
  br label %447

447:                                              ; preds = %446
  %448 = load ptr, ptr %2, align 8
  %449 = getelementptr inbounds %struct.tdefl_compressor, ptr %448, i32 0, i32 37
  %450 = getelementptr inbounds [3 x [288 x i16]], ptr %449, i64 0, i64 0
  %451 = load i32, ptr %17, align 4
  %452 = zext i32 %451 to i64
  %453 = getelementptr inbounds [288 x i16], ptr %450, i64 0, i64 %452
  %454 = load i16, ptr %453, align 2
  %455 = zext i16 %454 to i32
  store i32 %455, ptr %18, align 4
  %456 = load ptr, ptr %2, align 8
  %457 = getelementptr inbounds %struct.tdefl_compressor, ptr %456, i32 0, i32 38
  %458 = getelementptr inbounds [3 x [288 x i8]], ptr %457, i64 0, i64 0
  %459 = load i32, ptr %17, align 4
  %460 = zext i32 %459 to i64
  %461 = getelementptr inbounds [288 x i8], ptr %458, i64 0, i64 %460
  %462 = load i8, ptr %461, align 1
  %463 = zext i8 %462 to i32
  store i32 %463, ptr %19, align 4
  %464 = load i32, ptr %18, align 4
  %465 = load i32, ptr %19, align 4
  %466 = shl i32 1, %465
  %467 = sub i32 %466, 1
  %468 = icmp ule i32 %464, %467
  %469 = xor i1 %468, true
  %470 = zext i1 %469 to i32
  %471 = sext i32 %470 to i64
  %472 = icmp ne i64 %471, 0
  br i1 %472, label %473, label %475

473:                                              ; preds = %447
  call void @__assert_rtn(ptr noundef @__func__.tdefl_compress_lz_codes, ptr noundef @.str.11, i32 noundef 2660, ptr noundef @.str.72) #12
  unreachable

474:                                              ; No predecessors!
  br label %476

475:                                              ; preds = %447
  br label %476

476:                                              ; preds = %475, %474
  %477 = load i32, ptr %18, align 4
  %478 = load ptr, ptr %2, align 8
  %479 = getelementptr inbounds %struct.tdefl_compressor, ptr %478, i32 0, i32 16
  %480 = load i32, ptr %479, align 4
  %481 = shl i32 %477, %480
  %482 = load ptr, ptr %2, align 8
  %483 = getelementptr inbounds %struct.tdefl_compressor, ptr %482, i32 0, i32 17
  %484 = load i32, ptr %483, align 8
  %485 = or i32 %484, %481
  store i32 %485, ptr %483, align 8
  %486 = load i32, ptr %19, align 4
  %487 = load ptr, ptr %2, align 8
  %488 = getelementptr inbounds %struct.tdefl_compressor, ptr %487, i32 0, i32 16
  %489 = load i32, ptr %488, align 4
  %490 = add i32 %489, %486
  store i32 %490, ptr %488, align 4
  br label %491

491:                                              ; preds = %513, %476
  %492 = load ptr, ptr %2, align 8
  %493 = getelementptr inbounds %struct.tdefl_compressor, ptr %492, i32 0, i32 16
  %494 = load i32, ptr %493, align 4
  %495 = icmp uge i32 %494, 8
  br i1 %495, label %496, label %522

496:                                              ; preds = %491
  %497 = load ptr, ptr %2, align 8
  %498 = getelementptr inbounds %struct.tdefl_compressor, ptr %497, i32 0, i32 11
  %499 = load ptr, ptr %498, align 8
  %500 = load ptr, ptr %2, align 8
  %501 = getelementptr inbounds %struct.tdefl_compressor, ptr %500, i32 0, i32 12
  %502 = load ptr, ptr %501, align 8
  %503 = icmp ult ptr %499, %502
  br i1 %503, label %504, label %513

504:                                              ; preds = %496
  %505 = load ptr, ptr %2, align 8
  %506 = getelementptr inbounds %struct.tdefl_compressor, ptr %505, i32 0, i32 17
  %507 = load i32, ptr %506, align 8
  %508 = trunc i32 %507 to i8
  %509 = load ptr, ptr %2, align 8
  %510 = getelementptr inbounds %struct.tdefl_compressor, ptr %509, i32 0, i32 11
  %511 = load ptr, ptr %510, align 8
  %512 = getelementptr inbounds i8, ptr %511, i32 1
  store ptr %512, ptr %510, align 8
  store i8 %508, ptr %511, align 1
  br label %513

513:                                              ; preds = %504, %496
  %514 = load ptr, ptr %2, align 8
  %515 = getelementptr inbounds %struct.tdefl_compressor, ptr %514, i32 0, i32 17
  %516 = load i32, ptr %515, align 8
  %517 = lshr i32 %516, 8
  store i32 %517, ptr %515, align 8
  %518 = load ptr, ptr %2, align 8
  %519 = getelementptr inbounds %struct.tdefl_compressor, ptr %518, i32 0, i32 16
  %520 = load i32, ptr %519, align 4
  %521 = sub i32 %520, 8
  store i32 %521, ptr %519, align 4
  br label %491, !llvm.loop !161

522:                                              ; preds = %491
  br label %523

523:                                              ; preds = %522
  br label %524

524:                                              ; preds = %523, %425
  br label %525

525:                                              ; preds = %524
  %526 = load i32, ptr %3, align 4
  %527 = lshr i32 %526, 1
  store i32 %527, ptr %3, align 4
  br label %25, !llvm.loop !162

528:                                              ; preds = %25
  br label %529

529:                                              ; preds = %528
  %530 = load ptr, ptr %2, align 8
  %531 = getelementptr inbounds %struct.tdefl_compressor, ptr %530, i32 0, i32 37
  %532 = getelementptr inbounds [3 x [288 x i16]], ptr %531, i64 0, i64 0
  %533 = getelementptr inbounds [288 x i16], ptr %532, i64 0, i64 256
  %534 = load i16, ptr %533, align 2
  %535 = zext i16 %534 to i32
  store i32 %535, ptr %20, align 4
  %536 = load ptr, ptr %2, align 8
  %537 = getelementptr inbounds %struct.tdefl_compressor, ptr %536, i32 0, i32 38
  %538 = getelementptr inbounds [3 x [288 x i8]], ptr %537, i64 0, i64 0
  %539 = getelementptr inbounds [288 x i8], ptr %538, i64 0, i64 256
  %540 = load i8, ptr %539, align 2
  %541 = zext i8 %540 to i32
  store i32 %541, ptr %21, align 4
  %542 = load i32, ptr %20, align 4
  %543 = load i32, ptr %21, align 4
  %544 = shl i32 1, %543
  %545 = sub i32 %544, 1
  %546 = icmp ule i32 %542, %545
  %547 = xor i1 %546, true
  %548 = zext i1 %547 to i32
  %549 = sext i32 %548 to i64
  %550 = icmp ne i64 %549, 0
  br i1 %550, label %551, label %553

551:                                              ; preds = %529
  call void @__assert_rtn(ptr noundef @__func__.tdefl_compress_lz_codes, ptr noundef @.str.11, i32 noundef 2664, ptr noundef @.str.72) #12
  unreachable

552:                                              ; No predecessors!
  br label %554

553:                                              ; preds = %529
  br label %554

554:                                              ; preds = %553, %552
  %555 = load i32, ptr %20, align 4
  %556 = load ptr, ptr %2, align 8
  %557 = getelementptr inbounds %struct.tdefl_compressor, ptr %556, i32 0, i32 16
  %558 = load i32, ptr %557, align 4
  %559 = shl i32 %555, %558
  %560 = load ptr, ptr %2, align 8
  %561 = getelementptr inbounds %struct.tdefl_compressor, ptr %560, i32 0, i32 17
  %562 = load i32, ptr %561, align 8
  %563 = or i32 %562, %559
  store i32 %563, ptr %561, align 8
  %564 = load i32, ptr %21, align 4
  %565 = load ptr, ptr %2, align 8
  %566 = getelementptr inbounds %struct.tdefl_compressor, ptr %565, i32 0, i32 16
  %567 = load i32, ptr %566, align 4
  %568 = add i32 %567, %564
  store i32 %568, ptr %566, align 4
  br label %569

569:                                              ; preds = %591, %554
  %570 = load ptr, ptr %2, align 8
  %571 = getelementptr inbounds %struct.tdefl_compressor, ptr %570, i32 0, i32 16
  %572 = load i32, ptr %571, align 4
  %573 = icmp uge i32 %572, 8
  br i1 %573, label %574, label %600

574:                                              ; preds = %569
  %575 = load ptr, ptr %2, align 8
  %576 = getelementptr inbounds %struct.tdefl_compressor, ptr %575, i32 0, i32 11
  %577 = load ptr, ptr %576, align 8
  %578 = load ptr, ptr %2, align 8
  %579 = getelementptr inbounds %struct.tdefl_compressor, ptr %578, i32 0, i32 12
  %580 = load ptr, ptr %579, align 8
  %581 = icmp ult ptr %577, %580
  br i1 %581, label %582, label %591

582:                                              ; preds = %574
  %583 = load ptr, ptr %2, align 8
  %584 = getelementptr inbounds %struct.tdefl_compressor, ptr %583, i32 0, i32 17
  %585 = load i32, ptr %584, align 8
  %586 = trunc i32 %585 to i8
  %587 = load ptr, ptr %2, align 8
  %588 = getelementptr inbounds %struct.tdefl_compressor, ptr %587, i32 0, i32 11
  %589 = load ptr, ptr %588, align 8
  %590 = getelementptr inbounds i8, ptr %589, i32 1
  store ptr %590, ptr %588, align 8
  store i8 %586, ptr %589, align 1
  br label %591

591:                                              ; preds = %582, %574
  %592 = load ptr, ptr %2, align 8
  %593 = getelementptr inbounds %struct.tdefl_compressor, ptr %592, i32 0, i32 17
  %594 = load i32, ptr %593, align 8
  %595 = lshr i32 %594, 8
  store i32 %595, ptr %593, align 8
  %596 = load ptr, ptr %2, align 8
  %597 = getelementptr inbounds %struct.tdefl_compressor, ptr %596, i32 0, i32 16
  %598 = load i32, ptr %597, align 4
  %599 = sub i32 %598, 8
  store i32 %599, ptr %597, align 4
  br label %569, !llvm.loop !163

600:                                              ; preds = %569
  br label %601

601:                                              ; preds = %600
  %602 = load ptr, ptr %2, align 8
  %603 = getelementptr inbounds %struct.tdefl_compressor, ptr %602, i32 0, i32 11
  %604 = load ptr, ptr %603, align 8
  %605 = load ptr, ptr %2, align 8
  %606 = getelementptr inbounds %struct.tdefl_compressor, ptr %605, i32 0, i32 12
  %607 = load ptr, ptr %606, align 8
  %608 = icmp ult ptr %604, %607
  %609 = zext i1 %608 to i32
  ret i32 %609
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @tdefl_optimize_huffman_table(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [33 x i32], align 16
  %15 = alloca [33 x i32], align 16
  %16 = alloca [288 x %struct.tdefl_sym_freq], align 16
  %17 = alloca [288 x %struct.tdefl_sym_freq], align 16
  %18 = alloca ptr, align 8
  %19 = alloca i32, align 4
  %20 = alloca ptr, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store i32 %1, ptr %7, align 4
  store i32 %2, ptr %8, align 4
  store i32 %3, ptr %9, align 4
  store i32 %4, ptr %10, align 4
  %24 = getelementptr inbounds [33 x i32], ptr %14, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 16 %24, i8 0, i64 132, i1 false)
  %25 = load i32, ptr %10, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %50

27:                                               ; preds = %5
  store i32 0, ptr %11, align 4
  br label %28

28:                                               ; preds = %46, %27
  %29 = load i32, ptr %11, align 4
  %30 = load i32, ptr %8, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %32, label %49

32:                                               ; preds = %28
  %33 = load ptr, ptr %6, align 8
  %34 = getelementptr inbounds %struct.tdefl_compressor, ptr %33, i32 0, i32 38
  %35 = load i32, ptr %7, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [3 x [288 x i8]], ptr %34, i64 0, i64 %36
  %38 = load i32, ptr %11, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [288 x i8], ptr %37, i64 0, i64 %39
  %41 = load i8, ptr %40, align 1
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds [33 x i32], ptr %14, i64 0, i64 %42
  %44 = load i32, ptr %43, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, ptr %43, align 4
  br label %46

46:                                               ; preds = %32
  %47 = load i32, ptr %11, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, ptr %11, align 4
  br label %28, !llvm.loop !164

49:                                               ; preds = %28
  br label %184

50:                                               ; preds = %5
  store i32 0, ptr %19, align 4
  %51 = load ptr, ptr %6, align 8
  %52 = getelementptr inbounds %struct.tdefl_compressor, ptr %51, i32 0, i32 36
  %53 = load i32, ptr %7, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [3 x [288 x i16]], ptr %52, i64 0, i64 %54
  %56 = getelementptr inbounds [288 x i16], ptr %55, i64 0, i64 0
  store ptr %56, ptr %20, align 8
  store i32 0, ptr %11, align 4
  br label %57

57:                                               ; preds = %86, %50
  %58 = load i32, ptr %11, align 4
  %59 = load i32, ptr %8, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %89

61:                                               ; preds = %57
  %62 = load ptr, ptr %20, align 8
  %63 = load i32, ptr %11, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i16, ptr %62, i64 %64
  %66 = load i16, ptr %65, align 2
  %67 = icmp ne i16 %66, 0
  br i1 %67, label %68, label %85

68:                                               ; preds = %61
  %69 = load ptr, ptr %20, align 8
  %70 = load i32, ptr %11, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i16, ptr %69, i64 %71
  %73 = load i16, ptr %72, align 2
  %74 = load i32, ptr %19, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], ptr %16, i64 0, i64 %75
  %77 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %76, i32 0, i32 0
  store i16 %73, ptr %77, align 4
  %78 = load i32, ptr %11, align 4
  %79 = trunc i32 %78 to i16
  %80 = load i32, ptr %19, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, ptr %19, align 4
  %82 = sext i32 %80 to i64
  %83 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], ptr %16, i64 0, i64 %82
  %84 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %83, i32 0, i32 1
  store i16 %79, ptr %84, align 2
  br label %85

85:                                               ; preds = %68, %61
  br label %86

86:                                               ; preds = %85
  %87 = load i32, ptr %11, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, ptr %11, align 4
  br label %57, !llvm.loop !165

89:                                               ; preds = %57
  %90 = load i32, ptr %19, align 4
  %91 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], ptr %16, i64 0, i64 0
  %92 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], ptr %17, i64 0, i64 0
  %93 = call ptr @tdefl_radix_sort_syms(i32 noundef %90, ptr noundef %91, ptr noundef %92)
  store ptr %93, ptr %18, align 8
  %94 = load ptr, ptr %18, align 8
  %95 = load i32, ptr %19, align 4
  call void @tdefl_calculate_minimum_redundancy(ptr noundef %94, i32 noundef %95)
  store i32 0, ptr %11, align 4
  br label %96

96:                                               ; preds = %111, %89
  %97 = load i32, ptr %11, align 4
  %98 = load i32, ptr %19, align 4
  %99 = icmp slt i32 %97, %98
  br i1 %99, label %100, label %114

100:                                              ; preds = %96
  %101 = load ptr, ptr %18, align 8
  %102 = load i32, ptr %11, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %101, i64 %103
  %105 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %104, i32 0, i32 0
  %106 = load i16, ptr %105, align 2
  %107 = zext i16 %106 to i64
  %108 = getelementptr inbounds [33 x i32], ptr %14, i64 0, i64 %107
  %109 = load i32, ptr %108, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, ptr %108, align 4
  br label %111

111:                                              ; preds = %100
  %112 = load i32, ptr %11, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, ptr %11, align 4
  br label %96, !llvm.loop !166

114:                                              ; preds = %96
  %115 = getelementptr inbounds [33 x i32], ptr %14, i64 0, i64 0
  %116 = load i32, ptr %19, align 4
  %117 = load i32, ptr %9, align 4
  call void @tdefl_huffman_enforce_max_code_size(ptr noundef %115, i32 noundef %116, i32 noundef %117)
  %118 = load ptr, ptr %6, align 8
  %119 = getelementptr inbounds %struct.tdefl_compressor, ptr %118, i32 0, i32 38
  %120 = load i32, ptr %7, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds [3 x [288 x i8]], ptr %119, i64 0, i64 %121
  %123 = getelementptr inbounds [288 x i8], ptr %122, i64 0, i64 0
  %124 = load ptr, ptr %6, align 8
  %125 = getelementptr inbounds %struct.tdefl_compressor, ptr %124, i32 0, i32 38
  %126 = load i32, ptr %7, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [3 x [288 x i8]], ptr %125, i64 0, i64 %127
  %129 = getelementptr inbounds [288 x i8], ptr %128, i64 0, i64 0
  %130 = call i64 @llvm.objectsize.i64.p0(ptr %129, i1 false, i1 true, i1 false)
  %131 = call ptr @__memset_chk(ptr noundef %123, i32 noundef 0, i64 noundef 288, i64 noundef %130) #11
  %132 = load ptr, ptr %6, align 8
  %133 = getelementptr inbounds %struct.tdefl_compressor, ptr %132, i32 0, i32 37
  %134 = load i32, ptr %7, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [3 x [288 x i16]], ptr %133, i64 0, i64 %135
  %137 = getelementptr inbounds [288 x i16], ptr %136, i64 0, i64 0
  %138 = load ptr, ptr %6, align 8
  %139 = getelementptr inbounds %struct.tdefl_compressor, ptr %138, i32 0, i32 37
  %140 = load i32, ptr %7, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [3 x [288 x i16]], ptr %139, i64 0, i64 %141
  %143 = getelementptr inbounds [288 x i16], ptr %142, i64 0, i64 0
  %144 = call i64 @llvm.objectsize.i64.p0(ptr %143, i1 false, i1 true, i1 false)
  %145 = call ptr @__memset_chk(ptr noundef %137, i32 noundef 0, i64 noundef 576, i64 noundef %144) #11
  store i32 1, ptr %11, align 4
  %146 = load i32, ptr %19, align 4
  store i32 %146, ptr %12, align 4
  br label %147

147:                                              ; preds = %180, %114
  %148 = load i32, ptr %11, align 4
  %149 = load i32, ptr %9, align 4
  %150 = icmp sle i32 %148, %149
  br i1 %150, label %151, label %183

151:                                              ; preds = %147
  %152 = load i32, ptr %11, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [33 x i32], ptr %14, i64 0, i64 %153
  %155 = load i32, ptr %154, align 4
  store i32 %155, ptr %13, align 4
  br label %156

156:                                              ; preds = %176, %151
  %157 = load i32, ptr %13, align 4
  %158 = icmp sgt i32 %157, 0
  br i1 %158, label %159, label %179

159:                                              ; preds = %156
  %160 = load i32, ptr %11, align 4
  %161 = trunc i32 %160 to i8
  %162 = load ptr, ptr %6, align 8
  %163 = getelementptr inbounds %struct.tdefl_compressor, ptr %162, i32 0, i32 38
  %164 = load i32, ptr %7, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [3 x [288 x i8]], ptr %163, i64 0, i64 %165
  %167 = load ptr, ptr %18, align 8
  %168 = load i32, ptr %12, align 4
  %169 = add nsw i32 %168, -1
  store i32 %169, ptr %12, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %167, i64 %170
  %172 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %171, i32 0, i32 1
  %173 = load i16, ptr %172, align 2
  %174 = zext i16 %173 to i64
  %175 = getelementptr inbounds [288 x i8], ptr %166, i64 0, i64 %174
  store i8 %161, ptr %175, align 1
  br label %176

176:                                              ; preds = %159
  %177 = load i32, ptr %13, align 4
  %178 = add nsw i32 %177, -1
  store i32 %178, ptr %13, align 4
  br label %156, !llvm.loop !167

179:                                              ; preds = %156
  br label %180

180:                                              ; preds = %179
  %181 = load i32, ptr %11, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, ptr %11, align 4
  br label %147, !llvm.loop !168

183:                                              ; preds = %147
  br label %184

184:                                              ; preds = %183, %49
  %185 = getelementptr inbounds [33 x i32], ptr %15, i64 0, i64 1
  store i32 0, ptr %185, align 4
  store i32 0, ptr %12, align 4
  store i32 2, ptr %11, align 4
  br label %186

186:                                              ; preds = %202, %184
  %187 = load i32, ptr %11, align 4
  %188 = load i32, ptr %9, align 4
  %189 = icmp sle i32 %187, %188
  br i1 %189, label %190, label %205

190:                                              ; preds = %186
  %191 = load i32, ptr %12, align 4
  %192 = load i32, ptr %11, align 4
  %193 = sub nsw i32 %192, 1
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [33 x i32], ptr %14, i64 0, i64 %194
  %196 = load i32, ptr %195, align 4
  %197 = add nsw i32 %191, %196
  %198 = shl i32 %197, 1
  store i32 %198, ptr %12, align 4
  %199 = load i32, ptr %11, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [33 x i32], ptr %15, i64 0, i64 %200
  store i32 %198, ptr %201, align 4
  br label %202

202:                                              ; preds = %190
  %203 = load i32, ptr %11, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, ptr %11, align 4
  br label %186, !llvm.loop !169

205:                                              ; preds = %186
  store i32 0, ptr %11, align 4
  br label %206

206:                                              ; preds = %255, %205
  %207 = load i32, ptr %11, align 4
  %208 = load i32, ptr %8, align 4
  %209 = icmp slt i32 %207, %208
  br i1 %209, label %210, label %258

210:                                              ; preds = %206
  store i32 0, ptr %21, align 4
  %211 = load ptr, ptr %6, align 8
  %212 = getelementptr inbounds %struct.tdefl_compressor, ptr %211, i32 0, i32 38
  %213 = load i32, ptr %7, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [3 x [288 x i8]], ptr %212, i64 0, i64 %214
  %216 = load i32, ptr %11, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [288 x i8], ptr %215, i64 0, i64 %217
  %219 = load i8, ptr %218, align 1
  %220 = zext i8 %219 to i32
  store i32 %220, ptr %23, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %210
  br label %255

223:                                              ; preds = %210
  %224 = load i32, ptr %23, align 4
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds [33 x i32], ptr %15, i64 0, i64 %225
  %227 = load i32, ptr %226, align 4
  %228 = add i32 %227, 1
  store i32 %228, ptr %226, align 4
  store i32 %227, ptr %22, align 4
  %229 = load i32, ptr %23, align 4
  store i32 %229, ptr %13, align 4
  br label %230

230:                                              ; preds = %239, %223
  %231 = load i32, ptr %13, align 4
  %232 = icmp sgt i32 %231, 0
  br i1 %232, label %233, label %244

233:                                              ; preds = %230
  %234 = load i32, ptr %21, align 4
  %235 = shl i32 %234, 1
  %236 = load i32, ptr %22, align 4
  %237 = and i32 %236, 1
  %238 = or i32 %235, %237
  store i32 %238, ptr %21, align 4
  br label %239

239:                                              ; preds = %233
  %240 = load i32, ptr %13, align 4
  %241 = add nsw i32 %240, -1
  store i32 %241, ptr %13, align 4
  %242 = load i32, ptr %22, align 4
  %243 = lshr i32 %242, 1
  store i32 %243, ptr %22, align 4
  br label %230, !llvm.loop !170

244:                                              ; preds = %230
  %245 = load i32, ptr %21, align 4
  %246 = trunc i32 %245 to i16
  %247 = load ptr, ptr %6, align 8
  %248 = getelementptr inbounds %struct.tdefl_compressor, ptr %247, i32 0, i32 37
  %249 = load i32, ptr %7, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds [3 x [288 x i16]], ptr %248, i64 0, i64 %250
  %252 = load i32, ptr %11, align 4
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds [288 x i16], ptr %251, i64 0, i64 %253
  store i16 %246, ptr %254, align 2
  br label %255

255:                                              ; preds = %244, %222
  %256 = load i32, ptr %11, align 4
  %257 = add nsw i32 %256, 1
  store i32 %257, ptr %11, align 4
  br label %206, !llvm.loop !171

258:                                              ; preds = %206
  ret void
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal ptr @tdefl_radix_sort_syms(i32 noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [512 x i32], align 16
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  %15 = alloca ptr, align 8
  %16 = alloca [256 x i32], align 16
  %17 = alloca i32, align 4
  %18 = alloca ptr, align 8
  store i32 %0, ptr %4, align 4
  store ptr %1, ptr %5, align 8
  store ptr %2, ptr %6, align 8
  store i32 2, ptr %7, align 4
  %19 = load ptr, ptr %5, align 8
  store ptr %19, ptr %12, align 8
  %20 = load ptr, ptr %6, align 8
  store ptr %20, ptr %13, align 8
  %21 = getelementptr inbounds [512 x i32], ptr %11, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 16 %21, i8 0, i64 2048, i1 false)
  store i32 0, ptr %10, align 4
  br label %22

22:                                               ; preds = %48, %3
  %23 = load i32, ptr %10, align 4
  %24 = load i32, ptr %4, align 4
  %25 = icmp ult i32 %23, %24
  br i1 %25, label %26, label %51

26:                                               ; preds = %22
  %27 = load ptr, ptr %5, align 8
  %28 = load i32, ptr %10, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %27, i64 %29
  %31 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %30, i32 0, i32 0
  %32 = load i16, ptr %31, align 2
  %33 = zext i16 %32 to i32
  store i32 %33, ptr %14, align 4
  %34 = load i32, ptr %14, align 4
  %35 = and i32 %34, 255
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds [512 x i32], ptr %11, i64 0, i64 %36
  %38 = load i32, ptr %37, align 4
  %39 = add i32 %38, 1
  store i32 %39, ptr %37, align 4
  %40 = load i32, ptr %14, align 4
  %41 = lshr i32 %40, 8
  %42 = and i32 %41, 255
  %43 = add i32 256, %42
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [512 x i32], ptr %11, i64 0, i64 %44
  %46 = load i32, ptr %45, align 4
  %47 = add i32 %46, 1
  store i32 %47, ptr %45, align 4
  br label %48

48:                                               ; preds = %26
  %49 = load i32, ptr %10, align 4
  %50 = add i32 %49, 1
  store i32 %50, ptr %10, align 4
  br label %22, !llvm.loop !172

51:                                               ; preds = %22
  br label %52

52:                                               ; preds = %66, %51
  %53 = load i32, ptr %7, align 4
  %54 = icmp ugt i32 %53, 1
  br i1 %54, label %55, label %64

55:                                               ; preds = %52
  %56 = load i32, ptr %4, align 4
  %57 = load i32, ptr %7, align 4
  %58 = sub i32 %57, 1
  %59 = mul i32 %58, 256
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds [512 x i32], ptr %11, i64 0, i64 %60
  %62 = load i32, ptr %61, align 4
  %63 = icmp eq i32 %56, %62
  br label %64

64:                                               ; preds = %55, %52
  %65 = phi i1 [ false, %52 ], [ %63, %55 ]
  br i1 %65, label %66, label %69

66:                                               ; preds = %64
  %67 = load i32, ptr %7, align 4
  %68 = add i32 %67, -1
  store i32 %68, ptr %7, align 4
  br label %52, !llvm.loop !173

69:                                               ; preds = %64
  store i32 0, ptr %8, align 4
  store i32 0, ptr %9, align 4
  br label %70

70:                                               ; preds = %131, %69
  %71 = load i32, ptr %9, align 4
  %72 = load i32, ptr %7, align 4
  %73 = icmp ult i32 %71, %72
  br i1 %73, label %74, label %136

74:                                               ; preds = %70
  %75 = load i32, ptr %9, align 4
  %76 = shl i32 %75, 8
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds [512 x i32], ptr %11, i64 0, i64 %77
  store ptr %78, ptr %15, align 8
  store i32 0, ptr %17, align 4
  store i32 0, ptr %10, align 4
  br label %79

79:                                               ; preds = %94, %74
  %80 = load i32, ptr %10, align 4
  %81 = icmp ult i32 %80, 256
  br i1 %81, label %82, label %97

82:                                               ; preds = %79
  %83 = load i32, ptr %17, align 4
  %84 = load i32, ptr %10, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds [256 x i32], ptr %16, i64 0, i64 %85
  store i32 %83, ptr %86, align 4
  %87 = load ptr, ptr %15, align 8
  %88 = load i32, ptr %10, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %87, i64 %89
  %91 = load i32, ptr %90, align 4
  %92 = load i32, ptr %17, align 4
  %93 = add i32 %92, %91
  store i32 %93, ptr %17, align 4
  br label %94

94:                                               ; preds = %82
  %95 = load i32, ptr %10, align 4
  %96 = add i32 %95, 1
  store i32 %96, ptr %10, align 4
  br label %79, !llvm.loop !174

97:                                               ; preds = %79
  store i32 0, ptr %10, align 4
  br label %98

98:                                               ; preds = %124, %97
  %99 = load i32, ptr %10, align 4
  %100 = load i32, ptr %4, align 4
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %102, label %127

102:                                              ; preds = %98
  %103 = load ptr, ptr %13, align 8
  %104 = load ptr, ptr %12, align 8
  %105 = load i32, ptr %10, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %104, i64 %106
  %108 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %107, i32 0, i32 0
  %109 = load i16, ptr %108, align 2
  %110 = zext i16 %109 to i32
  %111 = load i32, ptr %8, align 4
  %112 = ashr i32 %110, %111
  %113 = and i32 %112, 255
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [256 x i32], ptr %16, i64 0, i64 %114
  %116 = load i32, ptr %115, align 4
  %117 = add i32 %116, 1
  store i32 %117, ptr %115, align 4
  %118 = zext i32 %116 to i64
  %119 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %103, i64 %118
  %120 = load ptr, ptr %12, align 8
  %121 = load i32, ptr %10, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %120, i64 %122
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %119, ptr align 2 %123, i64 4, i1 false)
  br label %124

124:                                              ; preds = %102
  %125 = load i32, ptr %10, align 4
  %126 = add i32 %125, 1
  store i32 %126, ptr %10, align 4
  br label %98, !llvm.loop !175

127:                                              ; preds = %98
  %128 = load ptr, ptr %12, align 8
  store ptr %128, ptr %18, align 8
  %129 = load ptr, ptr %13, align 8
  store ptr %129, ptr %12, align 8
  %130 = load ptr, ptr %18, align 8
  store ptr %130, ptr %13, align 8
  br label %131

131:                                              ; preds = %127
  %132 = load i32, ptr %9, align 4
  %133 = add i32 %132, 1
  store i32 %133, ptr %9, align 4
  %134 = load i32, ptr %8, align 4
  %135 = add i32 %134, 8
  store i32 %135, ptr %8, align 4
  br label %70, !llvm.loop !176

136:                                              ; preds = %70
  %137 = load ptr, ptr %12, align 8
  ret ptr %137
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @tdefl_calculate_minimum_redundancy(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store i32 %1, ptr %4, align 4
  %11 = load i32, ptr %4, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  br label %259

14:                                               ; preds = %2
  %15 = load i32, ptr %4, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %21

17:                                               ; preds = %14
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %18, i64 0
  %20 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %19, i32 0, i32 0
  store i16 1, ptr %20, align 2
  br label %259

21:                                               ; preds = %14
  br label %22

22:                                               ; preds = %21
  %23 = load ptr, ptr %3, align 8
  %24 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %23, i64 1
  %25 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %24, i32 0, i32 0
  %26 = load i16, ptr %25, align 2
  %27 = zext i16 %26 to i32
  %28 = load ptr, ptr %3, align 8
  %29 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %28, i64 0
  %30 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %29, i32 0, i32 0
  %31 = load i16, ptr %30, align 2
  %32 = zext i16 %31 to i32
  %33 = add nsw i32 %32, %27
  %34 = trunc i32 %33 to i16
  store i16 %34, ptr %30, align 2
  store i32 0, ptr %5, align 4
  store i32 2, ptr %6, align 4
  store i32 1, ptr %7, align 4
  br label %35

35:                                               ; preds = %171, %22
  %36 = load i32, ptr %7, align 4
  %37 = load i32, ptr %4, align 4
  %38 = sub nsw i32 %37, 1
  %39 = icmp slt i32 %36, %38
  br i1 %39, label %40, label %174

40:                                               ; preds = %35
  %41 = load i32, ptr %6, align 4
  %42 = load i32, ptr %4, align 4
  %43 = icmp sge i32 %41, %42
  br i1 %43, label %60, label %44

44:                                               ; preds = %40
  %45 = load ptr, ptr %3, align 8
  %46 = load i32, ptr %5, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %45, i64 %47
  %49 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %48, i32 0, i32 0
  %50 = load i16, ptr %49, align 2
  %51 = zext i16 %50 to i32
  %52 = load ptr, ptr %3, align 8
  %53 = load i32, ptr %6, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %52, i64 %54
  %56 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %55, i32 0, i32 0
  %57 = load i16, ptr %56, align 2
  %58 = zext i16 %57 to i32
  %59 = icmp slt i32 %51, %58
  br i1 %59, label %60, label %80

60:                                               ; preds = %44, %40
  %61 = load ptr, ptr %3, align 8
  %62 = load i32, ptr %5, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %61, i64 %63
  %65 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %64, i32 0, i32 0
  %66 = load i16, ptr %65, align 2
  %67 = load ptr, ptr %3, align 8
  %68 = load i32, ptr %7, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %67, i64 %69
  %71 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %70, i32 0, i32 0
  store i16 %66, ptr %71, align 2
  %72 = load i32, ptr %7, align 4
  %73 = trunc i32 %72 to i16
  %74 = load ptr, ptr %3, align 8
  %75 = load i32, ptr %5, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, ptr %5, align 4
  %77 = sext i32 %75 to i64
  %78 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %74, i64 %77
  %79 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %78, i32 0, i32 0
  store i16 %73, ptr %79, align 2
  br label %93

80:                                               ; preds = %44
  %81 = load ptr, ptr %3, align 8
  %82 = load i32, ptr %6, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, ptr %6, align 4
  %84 = sext i32 %82 to i64
  %85 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %81, i64 %84
  %86 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %85, i32 0, i32 0
  %87 = load i16, ptr %86, align 2
  %88 = load ptr, ptr %3, align 8
  %89 = load i32, ptr %7, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %88, i64 %90
  %92 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %91, i32 0, i32 0
  store i16 %87, ptr %92, align 2
  br label %93

93:                                               ; preds = %80, %60
  %94 = load i32, ptr %6, align 4
  %95 = load i32, ptr %4, align 4
  %96 = icmp sge i32 %94, %95
  br i1 %96, label %117, label %97

97:                                               ; preds = %93
  %98 = load i32, ptr %5, align 4
  %99 = load i32, ptr %7, align 4
  %100 = icmp slt i32 %98, %99
  br i1 %100, label %101, label %147

101:                                              ; preds = %97
  %102 = load ptr, ptr %3, align 8
  %103 = load i32, ptr %5, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %102, i64 %104
  %106 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %105, i32 0, i32 0
  %107 = load i16, ptr %106, align 2
  %108 = zext i16 %107 to i32
  %109 = load ptr, ptr %3, align 8
  %110 = load i32, ptr %6, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %109, i64 %111
  %113 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %112, i32 0, i32 0
  %114 = load i16, ptr %113, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp slt i32 %108, %115
  br i1 %116, label %117, label %147

117:                                              ; preds = %101, %93
  %118 = load ptr, ptr %3, align 8
  %119 = load i32, ptr %7, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %118, i64 %120
  %122 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %121, i32 0, i32 0
  %123 = load i16, ptr %122, align 2
  %124 = zext i16 %123 to i32
  %125 = load ptr, ptr %3, align 8
  %126 = load i32, ptr %5, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %125, i64 %127
  %129 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %128, i32 0, i32 0
  %130 = load i16, ptr %129, align 2
  %131 = zext i16 %130 to i32
  %132 = add nsw i32 %124, %131
  %133 = trunc i32 %132 to i16
  %134 = load ptr, ptr %3, align 8
  %135 = load i32, ptr %7, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %134, i64 %136
  %138 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %137, i32 0, i32 0
  store i16 %133, ptr %138, align 2
  %139 = load i32, ptr %7, align 4
  %140 = trunc i32 %139 to i16
  %141 = load ptr, ptr %3, align 8
  %142 = load i32, ptr %5, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, ptr %5, align 4
  %144 = sext i32 %142 to i64
  %145 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %141, i64 %144
  %146 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %145, i32 0, i32 0
  store i16 %140, ptr %146, align 2
  br label %170

147:                                              ; preds = %101, %97
  %148 = load ptr, ptr %3, align 8
  %149 = load i32, ptr %7, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %148, i64 %150
  %152 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %151, i32 0, i32 0
  %153 = load i16, ptr %152, align 2
  %154 = zext i16 %153 to i32
  %155 = load ptr, ptr %3, align 8
  %156 = load i32, ptr %6, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, ptr %6, align 4
  %158 = sext i32 %156 to i64
  %159 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %155, i64 %158
  %160 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %159, i32 0, i32 0
  %161 = load i16, ptr %160, align 2
  %162 = zext i16 %161 to i32
  %163 = add nsw i32 %154, %162
  %164 = trunc i32 %163 to i16
  %165 = load ptr, ptr %3, align 8
  %166 = load i32, ptr %7, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %165, i64 %167
  %169 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %168, i32 0, i32 0
  store i16 %164, ptr %169, align 2
  br label %170

170:                                              ; preds = %147, %117
  br label %171

171:                                              ; preds = %170
  %172 = load i32, ptr %7, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, ptr %7, align 4
  br label %35, !llvm.loop !177

174:                                              ; preds = %35
  %175 = load ptr, ptr %3, align 8
  %176 = load i32, ptr %4, align 4
  %177 = sub nsw i32 %176, 2
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %175, i64 %178
  %180 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %179, i32 0, i32 0
  store i16 0, ptr %180, align 2
  %181 = load i32, ptr %4, align 4
  %182 = sub nsw i32 %181, 3
  store i32 %182, ptr %7, align 4
  br label %183

183:                                              ; preds = %206, %174
  %184 = load i32, ptr %7, align 4
  %185 = icmp sge i32 %184, 0
  br i1 %185, label %186, label %209

186:                                              ; preds = %183
  %187 = load ptr, ptr %3, align 8
  %188 = load ptr, ptr %3, align 8
  %189 = load i32, ptr %7, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %188, i64 %190
  %192 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %191, i32 0, i32 0
  %193 = load i16, ptr %192, align 2
  %194 = zext i16 %193 to i64
  %195 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %187, i64 %194
  %196 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %195, i32 0, i32 0
  %197 = load i16, ptr %196, align 2
  %198 = zext i16 %197 to i32
  %199 = add nsw i32 %198, 1
  %200 = trunc i32 %199 to i16
  %201 = load ptr, ptr %3, align 8
  %202 = load i32, ptr %7, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %201, i64 %203
  %205 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %204, i32 0, i32 0
  store i16 %200, ptr %205, align 2
  br label %206

206:                                              ; preds = %186
  %207 = load i32, ptr %7, align 4
  %208 = add nsw i32 %207, -1
  store i32 %208, ptr %7, align 4
  br label %183, !llvm.loop !178

209:                                              ; preds = %183
  store i32 1, ptr %8, align 4
  store i32 0, ptr %10, align 4
  store i32 0, ptr %9, align 4
  %210 = load i32, ptr %4, align 4
  %211 = sub nsw i32 %210, 2
  store i32 %211, ptr %5, align 4
  %212 = load i32, ptr %4, align 4
  %213 = sub nsw i32 %212, 1
  store i32 %213, ptr %7, align 4
  br label %214

214:                                              ; preds = %254, %209
  %215 = load i32, ptr %8, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %259

217:                                              ; preds = %214
  br label %218

218:                                              ; preds = %233, %217
  %219 = load i32, ptr %5, align 4
  %220 = icmp sge i32 %219, 0
  br i1 %220, label %221, label %231

221:                                              ; preds = %218
  %222 = load ptr, ptr %3, align 8
  %223 = load i32, ptr %5, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %222, i64 %224
  %226 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %225, i32 0, i32 0
  %227 = load i16, ptr %226, align 2
  %228 = zext i16 %227 to i32
  %229 = load i32, ptr %10, align 4
  %230 = icmp eq i32 %228, %229
  br label %231

231:                                              ; preds = %221, %218
  %232 = phi i1 [ false, %218 ], [ %230, %221 ]
  br i1 %232, label %233, label %238

233:                                              ; preds = %231
  %234 = load i32, ptr %9, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, ptr %9, align 4
  %236 = load i32, ptr %5, align 4
  %237 = add nsw i32 %236, -1
  store i32 %237, ptr %5, align 4
  br label %218, !llvm.loop !179

238:                                              ; preds = %231
  br label %239

239:                                              ; preds = %243, %238
  %240 = load i32, ptr %8, align 4
  %241 = load i32, ptr %9, align 4
  %242 = icmp sgt i32 %240, %241
  br i1 %242, label %243, label %254

243:                                              ; preds = %239
  %244 = load i32, ptr %10, align 4
  %245 = trunc i32 %244 to i16
  %246 = load ptr, ptr %3, align 8
  %247 = load i32, ptr %7, align 4
  %248 = add nsw i32 %247, -1
  store i32 %248, ptr %7, align 4
  %249 = sext i32 %247 to i64
  %250 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %246, i64 %249
  %251 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %250, i32 0, i32 0
  store i16 %245, ptr %251, align 2
  %252 = load i32, ptr %8, align 4
  %253 = add nsw i32 %252, -1
  store i32 %253, ptr %8, align 4
  br label %239, !llvm.loop !180

254:                                              ; preds = %239
  %255 = load i32, ptr %9, align 4
  %256 = mul nsw i32 2, %255
  store i32 %256, ptr %8, align 4
  %257 = load i32, ptr %10, align 4
  %258 = add nsw i32 %257, 1
  store i32 %258, ptr %10, align 4
  store i32 0, ptr %9, align 4
  br label %214, !llvm.loop !181

259:                                              ; preds = %13, %17, %214
  ret void
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @tdefl_huffman_enforce_max_code_size(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store i32 %1, ptr %5, align 4
  store i32 %2, ptr %6, align 4
  store i32 0, ptr %8, align 4
  %9 = load i32, ptr %5, align 4
  %10 = icmp sle i32 %9, 1
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  br label %101

12:                                               ; preds = %3
  %13 = load i32, ptr %6, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, ptr %7, align 4
  br label %15

15:                                               ; preds = %30, %12
  %16 = load i32, ptr %7, align 4
  %17 = icmp sle i32 %16, 32
  br i1 %17, label %18, label %33

18:                                               ; preds = %15
  %19 = load ptr, ptr %4, align 8
  %20 = load i32, ptr %7, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, ptr %19, i64 %21
  %23 = load i32, ptr %22, align 4
  %24 = load ptr, ptr %4, align 8
  %25 = load i32, ptr %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, ptr %24, i64 %26
  %28 = load i32, ptr %27, align 4
  %29 = add nsw i32 %28, %23
  store i32 %29, ptr %27, align 4
  br label %30

30:                                               ; preds = %18
  %31 = load i32, ptr %7, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, ptr %7, align 4
  br label %15, !llvm.loop !182

33:                                               ; preds = %15
  %34 = load i32, ptr %6, align 4
  store i32 %34, ptr %7, align 4
  br label %35

35:                                               ; preds = %50, %33
  %36 = load i32, ptr %7, align 4
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %53

38:                                               ; preds = %35
  %39 = load ptr, ptr %4, align 8
  %40 = load i32, ptr %7, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i32, ptr %39, i64 %41
  %43 = load i32, ptr %42, align 4
  %44 = load i32, ptr %6, align 4
  %45 = load i32, ptr %7, align 4
  %46 = sub nsw i32 %44, %45
  %47 = shl i32 %43, %46
  %48 = load i32, ptr %8, align 4
  %49 = add i32 %48, %47
  store i32 %49, ptr %8, align 4
  br label %50

50:                                               ; preds = %38
  %51 = load i32, ptr %7, align 4
  %52 = add nsw i32 %51, -1
  store i32 %52, ptr %7, align 4
  br label %35, !llvm.loop !183

53:                                               ; preds = %35
  br label %54

54:                                               ; preds = %98, %53
  %55 = load i32, ptr %8, align 4
  %56 = zext i32 %55 to i64
  %57 = load i32, ptr %6, align 4
  %58 = zext i32 %57 to i64
  %59 = shl i64 1, %58
  %60 = icmp ne i64 %56, %59
  br i1 %60, label %61, label %101

61:                                               ; preds = %54
  %62 = load ptr, ptr %4, align 8
  %63 = load i32, ptr %6, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, ptr %62, i64 %64
  %66 = load i32, ptr %65, align 4
  %67 = add nsw i32 %66, -1
  store i32 %67, ptr %65, align 4
  %68 = load i32, ptr %6, align 4
  %69 = sub nsw i32 %68, 1
  store i32 %69, ptr %7, align 4
  br label %70

70:                                               ; preds = %95, %61
  %71 = load i32, ptr %7, align 4
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %98

73:                                               ; preds = %70
  %74 = load ptr, ptr %4, align 8
  %75 = load i32, ptr %7, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i32, ptr %74, i64 %76
  %78 = load i32, ptr %77, align 4
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %94

80:                                               ; preds = %73
  %81 = load ptr, ptr %4, align 8
  %82 = load i32, ptr %7, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i32, ptr %81, i64 %83
  %85 = load i32, ptr %84, align 4
  %86 = add nsw i32 %85, -1
  store i32 %86, ptr %84, align 4
  %87 = load ptr, ptr %4, align 8
  %88 = load i32, ptr %7, align 4
  %89 = add nsw i32 %88, 1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i32, ptr %87, i64 %90
  %92 = load i32, ptr %91, align 4
  %93 = add nsw i32 %92, 2
  store i32 %93, ptr %91, align 4
  br label %98

94:                                               ; preds = %73
  br label %95

95:                                               ; preds = %94
  %96 = load i32, ptr %7, align 4
  %97 = add nsw i32 %96, -1
  store i32 %97, ptr %7, align 4
  br label %70, !llvm.loop !184

98:                                               ; preds = %80, %70
  %99 = load i32, ptr %8, align 4
  %100 = add i32 %99, -1
  store i32 %100, ptr %8, align 4
  br label %54, !llvm.loop !185

101:                                              ; preds = %11, %54
  ret void
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_reader_locate_header_sig(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca [1024 x i32], align 16
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store i32 %1, ptr %7, align 4
  store i32 %2, ptr %8, align 4
  store ptr %3, ptr %9, align 8
  %16 = getelementptr inbounds [1024 x i32], ptr %11, i64 0, i64 0
  store ptr %16, ptr %12, align 8
  %17 = load ptr, ptr %6, align 8
  %18 = getelementptr inbounds %struct.mz_zip_archive, ptr %17, i32 0, i32 0
  %19 = load i64, ptr %18, align 8
  %20 = load i32, ptr %8, align 4
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %4
  store i32 0, ptr %5, align 4
  br label %167

24:                                               ; preds = %4
  %25 = load ptr, ptr %6, align 8
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %25, i32 0, i32 0
  %27 = load i64, ptr %26, align 8
  %28 = sub nsw i64 %27, 4096
  %29 = icmp sgt i64 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %24
  %31 = load ptr, ptr %6, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive, ptr %31, i32 0, i32 0
  %33 = load i64, ptr %32, align 8
  %34 = sub nsw i64 %33, 4096
  br label %36

35:                                               ; preds = %24
  br label %36

36:                                               ; preds = %35, %30
  %37 = phi i64 [ %34, %30 ], [ 0, %35 ]
  store i64 %37, ptr %10, align 8
  br label %38

38:                                               ; preds = %162, %36
  %39 = load ptr, ptr %6, align 8
  %40 = getelementptr inbounds %struct.mz_zip_archive, ptr %39, i32 0, i32 0
  %41 = load i64, ptr %40, align 8
  %42 = load i64, ptr %10, align 8
  %43 = sub i64 %41, %42
  %44 = icmp ult i64 4096, %43
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  br label %52

46:                                               ; preds = %38
  %47 = load ptr, ptr %6, align 8
  %48 = getelementptr inbounds %struct.mz_zip_archive, ptr %47, i32 0, i32 0
  %49 = load i64, ptr %48, align 8
  %50 = load i64, ptr %10, align 8
  %51 = sub i64 %49, %50
  br label %52

52:                                               ; preds = %46, %45
  %53 = phi i64 [ 4096, %45 ], [ %51, %46 ]
  %54 = trunc i64 %53 to i32
  store i32 %54, ptr %14, align 4
  %55 = load ptr, ptr %6, align 8
  %56 = getelementptr inbounds %struct.mz_zip_archive, ptr %55, i32 0, i32 11
  %57 = load ptr, ptr %56, align 8
  %58 = load ptr, ptr %6, align 8
  %59 = getelementptr inbounds %struct.mz_zip_archive, ptr %58, i32 0, i32 14
  %60 = load ptr, ptr %59, align 8
  %61 = load i64, ptr %10, align 8
  %62 = load ptr, ptr %12, align 8
  %63 = load i32, ptr %14, align 4
  %64 = sext i32 %63 to i64
  %65 = call i64 %57(ptr noundef %60, i64 noundef %61, ptr noundef %62, i64 noundef %64)
  %66 = load i32, ptr %14, align 4
  %67 = zext i32 %66 to i64
  %68 = icmp ne i64 %65, %67
  br i1 %68, label %69, label %70

69:                                               ; preds = %52
  store i32 0, ptr %5, align 4
  br label %167

70:                                               ; preds = %52
  %71 = load i32, ptr %14, align 4
  %72 = sub nsw i32 %71, 4
  store i32 %72, ptr %13, align 4
  br label %73

73:                                               ; preds = %129, %70
  %74 = load i32, ptr %13, align 4
  %75 = icmp sge i32 %74, 0
  br i1 %75, label %76, label %132

76:                                               ; preds = %73
  %77 = load ptr, ptr %12, align 8
  %78 = load i32, ptr %13, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, ptr %77, i64 %79
  %81 = getelementptr inbounds i8, ptr %80, i64 0
  %82 = load i8, ptr %81, align 1
  %83 = zext i8 %82 to i32
  %84 = load ptr, ptr %12, align 8
  %85 = load i32, ptr %13, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, ptr %84, i64 %86
  %88 = getelementptr inbounds i8, ptr %87, i64 1
  %89 = load i8, ptr %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl i32 %90, 8
  %92 = or i32 %83, %91
  %93 = load ptr, ptr %12, align 8
  %94 = load i32, ptr %13, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8, ptr %93, i64 %95
  %97 = getelementptr inbounds i8, ptr %96, i64 2
  %98 = load i8, ptr %97, align 1
  %99 = zext i8 %98 to i32
  %100 = shl i32 %99, 16
  %101 = or i32 %92, %100
  %102 = load ptr, ptr %12, align 8
  %103 = load i32, ptr %13, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8, ptr %102, i64 %104
  %106 = getelementptr inbounds i8, ptr %105, i64 3
  %107 = load i8, ptr %106, align 1
  %108 = zext i8 %107 to i32
  %109 = shl i32 %108, 24
  %110 = or i32 %101, %109
  store i32 %110, ptr %15, align 4
  %111 = load i32, ptr %15, align 4
  %112 = load i32, ptr %7, align 4
  %113 = icmp eq i32 %111, %112
  br i1 %113, label %114, label %128

114:                                              ; preds = %76
  %115 = load ptr, ptr %6, align 8
  %116 = getelementptr inbounds %struct.mz_zip_archive, ptr %115, i32 0, i32 0
  %117 = load i64, ptr %116, align 8
  %118 = load i64, ptr %10, align 8
  %119 = load i32, ptr %13, align 4
  %120 = sext i32 %119 to i64
  %121 = add nsw i64 %118, %120
  %122 = sub i64 %117, %121
  %123 = load i32, ptr %8, align 4
  %124 = zext i32 %123 to i64
  %125 = icmp uge i64 %122, %124
  br i1 %125, label %126, label %127

126:                                              ; preds = %114
  br label %132

127:                                              ; preds = %114
  br label %128

128:                                              ; preds = %127, %76
  br label %129

129:                                              ; preds = %128
  %130 = load i32, ptr %13, align 4
  %131 = add nsw i32 %130, -1
  store i32 %131, ptr %13, align 4
  br label %73, !llvm.loop !186

132:                                              ; preds = %126, %73
  %133 = load i32, ptr %13, align 4
  %134 = icmp sge i32 %133, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %132
  %136 = load i32, ptr %13, align 4
  %137 = sext i32 %136 to i64
  %138 = load i64, ptr %10, align 8
  %139 = add nsw i64 %138, %137
  store i64 %139, ptr %10, align 8
  br label %164

140:                                              ; preds = %132
  %141 = load i64, ptr %10, align 8
  %142 = icmp ne i64 %141, 0
  br i1 %142, label %143, label %153

143:                                              ; preds = %140
  %144 = load ptr, ptr %6, align 8
  %145 = getelementptr inbounds %struct.mz_zip_archive, ptr %144, i32 0, i32 0
  %146 = load i64, ptr %145, align 8
  %147 = load i64, ptr %10, align 8
  %148 = sub i64 %146, %147
  %149 = load i32, ptr %8, align 4
  %150 = add i32 65535, %149
  %151 = zext i32 %150 to i64
  %152 = icmp uge i64 %148, %151
  br i1 %152, label %153, label %154

153:                                              ; preds = %143, %140
  store i32 0, ptr %5, align 4
  br label %167

154:                                              ; preds = %143
  %155 = load i64, ptr %10, align 8
  %156 = sub i64 %155, 4093
  %157 = icmp ugt i64 %156, 0
  br i1 %157, label %158, label %161

158:                                              ; preds = %154
  %159 = load i64, ptr %10, align 8
  %160 = sub i64 %159, 4093
  br label %162

161:                                              ; preds = %154
  br label %162

162:                                              ; preds = %161, %158
  %163 = phi i64 [ %160, %158 ], [ 0, %161 ]
  store i64 %163, ptr %10, align 8
  br label %38

164:                                              ; preds = %135
  %165 = load i64, ptr %10, align 8
  %166 = load ptr, ptr %9, align 8
  store i64 %165, ptr %166, align 8
  store i32 1, ptr %5, align 4
  br label %167

167:                                              ; preds = %164, %153, %69, %23
  %168 = load i32, ptr %5, align 4
  ret i32 %168
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @mz_zip_reader_sort_central_dir_offsets_by_filename(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca ptr, align 8
  %25 = alloca ptr, align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca ptr, align 8
  %29 = alloca ptr, align 8
  %30 = alloca ptr, align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca ptr, align 8
  %36 = alloca ptr, align 8
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca ptr, align 8
  %40 = alloca ptr, align 8
  %41 = alloca ptr, align 8
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i8, align 1
  %45 = alloca i8, align 1
  %46 = alloca ptr, align 8
  %47 = alloca ptr, align 8
  %48 = alloca ptr, align 8
  %49 = alloca ptr, align 8
  %50 = alloca ptr, align 8
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i64, align 8
  %55 = alloca i64, align 8
  %56 = alloca i32, align 4
  %57 = alloca i64, align 8
  %58 = alloca i64, align 8
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  store ptr %0, ptr %46, align 8
  %61 = load ptr, ptr %46, align 8
  %62 = getelementptr inbounds %struct.mz_zip_archive, ptr %61, i32 0, i32 15
  %63 = load ptr, ptr %62, align 8
  store ptr %63, ptr %47, align 8
  %64 = load ptr, ptr %47, align 8
  %65 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %64, i32 0, i32 1
  store ptr %65, ptr %48, align 8
  %66 = load ptr, ptr %47, align 8
  %67 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %66, i32 0, i32 0
  store ptr %67, ptr %49, align 8
  %68 = load ptr, ptr %46, align 8
  %69 = getelementptr inbounds %struct.mz_zip_archive, ptr %68, i32 0, i32 2
  %70 = load i32, ptr %69, align 8
  store i32 %70, ptr %53, align 4
  %71 = load i32, ptr %53, align 4
  %72 = icmp ule i32 %71, 1
  br i1 %72, label %73, label %74

73:                                               ; preds = %1
  br label %784

74:                                               ; preds = %1
  %75 = load ptr, ptr %47, align 8
  %76 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %75, i32 0, i32 2
  %77 = getelementptr inbounds %struct.mz_zip_array, ptr %76, i32 0, i32 0
  %78 = load ptr, ptr %77, align 8
  %79 = getelementptr inbounds i32, ptr %78, i64 0
  store ptr %79, ptr %50, align 8
  %80 = load i32, ptr %53, align 4
  %81 = sub i32 %80, 2
  %82 = lshr i32 %81, 1
  store i32 %82, ptr %51, align 4
  br label %83

83:                                               ; preds = %422, %74
  %84 = load i32, ptr %51, align 4
  %85 = zext i32 %84 to i64
  store i64 %85, ptr %55, align 8
  br label %86

86:                                               ; preds = %416, %83
  %87 = load i64, ptr %55, align 8
  %88 = shl i64 %87, 1
  %89 = add i64 %88, 1
  store i64 %89, ptr %54, align 8
  %90 = load i32, ptr %53, align 4
  %91 = zext i32 %90 to i64
  %92 = icmp uge i64 %89, %91
  br i1 %92, label %93, label %94

93:                                               ; preds = %86
  br label %418

94:                                               ; preds = %86
  %95 = load i64, ptr %54, align 8
  %96 = add i64 %95, 1
  %97 = load i32, ptr %53, align 4
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %96, %98
  br i1 %99, label %100, label %247

100:                                              ; preds = %94
  %101 = load ptr, ptr %49, align 8
  %102 = load ptr, ptr %48, align 8
  %103 = load ptr, ptr %50, align 8
  %104 = load i64, ptr %54, align 8
  %105 = getelementptr inbounds i32, ptr %103, i64 %104
  %106 = load i32, ptr %105, align 4
  %107 = load ptr, ptr %50, align 8
  %108 = load i64, ptr %54, align 8
  %109 = add i64 %108, 1
  %110 = getelementptr inbounds i32, ptr %107, i64 %109
  %111 = load i32, ptr %110, align 4
  store ptr %101, ptr %2, align 8
  store ptr %102, ptr %3, align 8
  store i32 %106, ptr %4, align 4
  store i32 %111, ptr %5, align 4
  %112 = load ptr, ptr %2, align 8
  %113 = load ptr, ptr %112, align 8
  %114 = load ptr, ptr %3, align 8
  %115 = load ptr, ptr %114, align 8
  %116 = load i32, ptr %4, align 4
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %115, i64 %117
  %119 = load i32, ptr %118, align 4
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds i8, ptr %113, i64 %120
  store ptr %121, ptr %6, align 8
  %122 = load ptr, ptr %2, align 8
  %123 = load ptr, ptr %122, align 8
  %124 = load ptr, ptr %3, align 8
  %125 = load ptr, ptr %124, align 8
  %126 = load i32, ptr %5, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds i32, ptr %125, i64 %127
  %129 = load i32, ptr %128, align 4
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds i8, ptr %123, i64 %130
  store ptr %131, ptr %8, align 8
  %132 = load ptr, ptr %6, align 8
  %133 = getelementptr inbounds i8, ptr %132, i64 28
  %134 = load i8, ptr %133, align 1
  %135 = zext i8 %134 to i32
  %136 = load ptr, ptr %6, align 8
  %137 = getelementptr inbounds i8, ptr %136, i64 28
  %138 = getelementptr inbounds i8, ptr %137, i64 1
  %139 = load i8, ptr %138, align 1
  %140 = zext i8 %139 to i32
  %141 = shl i32 %140, 8
  %142 = or i32 %135, %141
  store i32 %142, ptr %9, align 4
  %143 = load ptr, ptr %8, align 8
  %144 = getelementptr inbounds i8, ptr %143, i64 28
  %145 = load i8, ptr %144, align 1
  %146 = zext i8 %145 to i32
  %147 = load ptr, ptr %8, align 8
  %148 = getelementptr inbounds i8, ptr %147, i64 28
  %149 = getelementptr inbounds i8, ptr %148, i64 1
  %150 = load i8, ptr %149, align 1
  %151 = zext i8 %150 to i32
  %152 = shl i32 %151, 8
  %153 = or i32 %146, %152
  store i32 %153, ptr %10, align 4
  store i8 0, ptr %11, align 1
  store i8 0, ptr %12, align 1
  %154 = load ptr, ptr %6, align 8
  %155 = getelementptr inbounds i8, ptr %154, i64 46
  store ptr %155, ptr %6, align 8
  %156 = load ptr, ptr %8, align 8
  %157 = getelementptr inbounds i8, ptr %156, i64 46
  store ptr %157, ptr %8, align 8
  %158 = load ptr, ptr %6, align 8
  %159 = load i32, ptr %9, align 4
  %160 = load i32, ptr %10, align 4
  %161 = icmp ult i32 %159, %160
  br i1 %161, label %162, label %164

162:                                              ; preds = %100
  %163 = load i32, ptr %9, align 4
  br label %166

164:                                              ; preds = %100
  %165 = load i32, ptr %10, align 4
  br label %166

166:                                              ; preds = %164, %162
  %167 = phi i32 [ %163, %162 ], [ %165, %164 ]
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds i8, ptr %158, i64 %168
  store ptr %169, ptr %7, align 8
  br label %170

170:                                              ; preds = %223, %166
  %171 = load ptr, ptr %6, align 8
  %172 = load ptr, ptr %7, align 8
  %173 = icmp ult ptr %171, %172
  br i1 %173, label %174, label %228

174:                                              ; preds = %170
  %175 = load ptr, ptr %6, align 8
  %176 = load i8, ptr %175, align 1
  %177 = zext i8 %176 to i32
  %178 = icmp sge i32 %177, 65
  br i1 %178, label %179, label %190

179:                                              ; preds = %174
  %180 = load ptr, ptr %6, align 8
  %181 = load i8, ptr %180, align 1
  %182 = zext i8 %181 to i32
  %183 = icmp sle i32 %182, 90
  br i1 %183, label %184, label %190

184:                                              ; preds = %179
  %185 = load ptr, ptr %6, align 8
  %186 = load i8, ptr %185, align 1
  %187 = zext i8 %186 to i32
  %188 = sub nsw i32 %187, 65
  %189 = add nsw i32 %188, 97
  br label %194

190:                                              ; preds = %179, %174
  %191 = load ptr, ptr %6, align 8
  %192 = load i8, ptr %191, align 1
  %193 = zext i8 %192 to i32
  br label %194

194:                                              ; preds = %190, %184
  %195 = phi i32 [ %189, %184 ], [ %193, %190 ]
  %196 = trunc i32 %195 to i8
  store i8 %196, ptr %11, align 1
  %197 = zext i8 %196 to i32
  %198 = load ptr, ptr %8, align 8
  %199 = load i8, ptr %198, align 1
  %200 = zext i8 %199 to i32
  %201 = icmp sge i32 %200, 65
  br i1 %201, label %202, label %213

202:                                              ; preds = %194
  %203 = load ptr, ptr %8, align 8
  %204 = load i8, ptr %203, align 1
  %205 = zext i8 %204 to i32
  %206 = icmp sle i32 %205, 90
  br i1 %206, label %207, label %213

207:                                              ; preds = %202
  %208 = load ptr, ptr %8, align 8
  %209 = load i8, ptr %208, align 1
  %210 = zext i8 %209 to i32
  %211 = sub nsw i32 %210, 65
  %212 = add nsw i32 %211, 97
  br label %217

213:                                              ; preds = %202, %194
  %214 = load ptr, ptr %8, align 8
  %215 = load i8, ptr %214, align 1
  %216 = zext i8 %215 to i32
  br label %217

217:                                              ; preds = %213, %207
  %218 = phi i32 [ %212, %207 ], [ %216, %213 ]
  %219 = trunc i32 %218 to i8
  store i8 %219, ptr %12, align 1
  %220 = zext i8 %219 to i32
  %221 = icmp ne i32 %197, %220
  br i1 %221, label %222, label %223

222:                                              ; preds = %217
  br label %228

223:                                              ; preds = %217
  %224 = load ptr, ptr %6, align 8
  %225 = getelementptr inbounds i8, ptr %224, i32 1
  store ptr %225, ptr %6, align 8
  %226 = load ptr, ptr %8, align 8
  %227 = getelementptr inbounds i8, ptr %226, i32 1
  store ptr %227, ptr %8, align 8
  br label %170, !llvm.loop !187

228:                                              ; preds = %222, %170
  %229 = load ptr, ptr %6, align 8
  %230 = load ptr, ptr %7, align 8
  %231 = icmp eq ptr %229, %230
  br i1 %231, label %232, label %237

232:                                              ; preds = %228
  %233 = load i32, ptr %9, align 4
  %234 = load i32, ptr %10, align 4
  %235 = icmp ult i32 %233, %234
  %236 = zext i1 %235 to i32
  br label %244

237:                                              ; preds = %228
  %238 = load i8, ptr %11, align 1
  %239 = zext i8 %238 to i32
  %240 = load i8, ptr %12, align 1
  %241 = zext i8 %240 to i32
  %242 = icmp slt i32 %239, %241
  %243 = zext i1 %242 to i32
  br label %244

244:                                              ; preds = %232, %237
  %245 = phi i32 [ %236, %232 ], [ %243, %237 ]
  %246 = icmp ne i32 %245, 0
  br label %247

247:                                              ; preds = %244, %94
  %248 = phi i1 [ false, %94 ], [ %246, %244 ]
  %249 = zext i1 %248 to i32
  %250 = sext i32 %249 to i64
  %251 = load i64, ptr %54, align 8
  %252 = add i64 %251, %250
  store i64 %252, ptr %54, align 8
  %253 = load ptr, ptr %49, align 8
  %254 = load ptr, ptr %48, align 8
  %255 = load ptr, ptr %50, align 8
  %256 = load i64, ptr %55, align 8
  %257 = getelementptr inbounds i32, ptr %255, i64 %256
  %258 = load i32, ptr %257, align 4
  %259 = load ptr, ptr %50, align 8
  %260 = load i64, ptr %54, align 8
  %261 = getelementptr inbounds i32, ptr %259, i64 %260
  %262 = load i32, ptr %261, align 4
  store ptr %253, ptr %13, align 8
  store ptr %254, ptr %14, align 8
  store i32 %258, ptr %15, align 4
  store i32 %262, ptr %16, align 4
  %263 = load ptr, ptr %13, align 8
  %264 = load ptr, ptr %263, align 8
  %265 = load ptr, ptr %14, align 8
  %266 = load ptr, ptr %265, align 8
  %267 = load i32, ptr %15, align 4
  %268 = zext i32 %267 to i64
  %269 = getelementptr inbounds i32, ptr %266, i64 %268
  %270 = load i32, ptr %269, align 4
  %271 = zext i32 %270 to i64
  %272 = getelementptr inbounds i8, ptr %264, i64 %271
  store ptr %272, ptr %17, align 8
  %273 = load ptr, ptr %13, align 8
  %274 = load ptr, ptr %273, align 8
  %275 = load ptr, ptr %14, align 8
  %276 = load ptr, ptr %275, align 8
  %277 = load i32, ptr %16, align 4
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds i32, ptr %276, i64 %278
  %280 = load i32, ptr %279, align 4
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds i8, ptr %274, i64 %281
  store ptr %282, ptr %19, align 8
  %283 = load ptr, ptr %17, align 8
  %284 = getelementptr inbounds i8, ptr %283, i64 28
  %285 = load i8, ptr %284, align 1
  %286 = zext i8 %285 to i32
  %287 = load ptr, ptr %17, align 8
  %288 = getelementptr inbounds i8, ptr %287, i64 28
  %289 = getelementptr inbounds i8, ptr %288, i64 1
  %290 = load i8, ptr %289, align 1
  %291 = zext i8 %290 to i32
  %292 = shl i32 %291, 8
  %293 = or i32 %286, %292
  store i32 %293, ptr %20, align 4
  %294 = load ptr, ptr %19, align 8
  %295 = getelementptr inbounds i8, ptr %294, i64 28
  %296 = load i8, ptr %295, align 1
  %297 = zext i8 %296 to i32
  %298 = load ptr, ptr %19, align 8
  %299 = getelementptr inbounds i8, ptr %298, i64 28
  %300 = getelementptr inbounds i8, ptr %299, i64 1
  %301 = load i8, ptr %300, align 1
  %302 = zext i8 %301 to i32
  %303 = shl i32 %302, 8
  %304 = or i32 %297, %303
  store i32 %304, ptr %21, align 4
  store i8 0, ptr %22, align 1
  store i8 0, ptr %23, align 1
  %305 = load ptr, ptr %17, align 8
  %306 = getelementptr inbounds i8, ptr %305, i64 46
  store ptr %306, ptr %17, align 8
  %307 = load ptr, ptr %19, align 8
  %308 = getelementptr inbounds i8, ptr %307, i64 46
  store ptr %308, ptr %19, align 8
  %309 = load ptr, ptr %17, align 8
  %310 = load i32, ptr %20, align 4
  %311 = load i32, ptr %21, align 4
  %312 = icmp ult i32 %310, %311
  br i1 %312, label %313, label %315

313:                                              ; preds = %247
  %314 = load i32, ptr %20, align 4
  br label %317

315:                                              ; preds = %247
  %316 = load i32, ptr %21, align 4
  br label %317

317:                                              ; preds = %315, %313
  %318 = phi i32 [ %314, %313 ], [ %316, %315 ]
  %319 = zext i32 %318 to i64
  %320 = getelementptr inbounds i8, ptr %309, i64 %319
  store ptr %320, ptr %18, align 8
  br label %321

321:                                              ; preds = %374, %317
  %322 = load ptr, ptr %17, align 8
  %323 = load ptr, ptr %18, align 8
  %324 = icmp ult ptr %322, %323
  br i1 %324, label %325, label %379

325:                                              ; preds = %321
  %326 = load ptr, ptr %17, align 8
  %327 = load i8, ptr %326, align 1
  %328 = zext i8 %327 to i32
  %329 = icmp sge i32 %328, 65
  br i1 %329, label %330, label %341

330:                                              ; preds = %325
  %331 = load ptr, ptr %17, align 8
  %332 = load i8, ptr %331, align 1
  %333 = zext i8 %332 to i32
  %334 = icmp sle i32 %333, 90
  br i1 %334, label %335, label %341

335:                                              ; preds = %330
  %336 = load ptr, ptr %17, align 8
  %337 = load i8, ptr %336, align 1
  %338 = zext i8 %337 to i32
  %339 = sub nsw i32 %338, 65
  %340 = add nsw i32 %339, 97
  br label %345

341:                                              ; preds = %330, %325
  %342 = load ptr, ptr %17, align 8
  %343 = load i8, ptr %342, align 1
  %344 = zext i8 %343 to i32
  br label %345

345:                                              ; preds = %341, %335
  %346 = phi i32 [ %340, %335 ], [ %344, %341 ]
  %347 = trunc i32 %346 to i8
  store i8 %347, ptr %22, align 1
  %348 = zext i8 %347 to i32
  %349 = load ptr, ptr %19, align 8
  %350 = load i8, ptr %349, align 1
  %351 = zext i8 %350 to i32
  %352 = icmp sge i32 %351, 65
  br i1 %352, label %353, label %364

353:                                              ; preds = %345
  %354 = load ptr, ptr %19, align 8
  %355 = load i8, ptr %354, align 1
  %356 = zext i8 %355 to i32
  %357 = icmp sle i32 %356, 90
  br i1 %357, label %358, label %364

358:                                              ; preds = %353
  %359 = load ptr, ptr %19, align 8
  %360 = load i8, ptr %359, align 1
  %361 = zext i8 %360 to i32
  %362 = sub nsw i32 %361, 65
  %363 = add nsw i32 %362, 97
  br label %368

364:                                              ; preds = %353, %345
  %365 = load ptr, ptr %19, align 8
  %366 = load i8, ptr %365, align 1
  %367 = zext i8 %366 to i32
  br label %368

368:                                              ; preds = %364, %358
  %369 = phi i32 [ %363, %358 ], [ %367, %364 ]
  %370 = trunc i32 %369 to i8
  store i8 %370, ptr %23, align 1
  %371 = zext i8 %370 to i32
  %372 = icmp ne i32 %348, %371
  br i1 %372, label %373, label %374

373:                                              ; preds = %368
  br label %379

374:                                              ; preds = %368
  %375 = load ptr, ptr %17, align 8
  %376 = getelementptr inbounds i8, ptr %375, i32 1
  store ptr %376, ptr %17, align 8
  %377 = load ptr, ptr %19, align 8
  %378 = getelementptr inbounds i8, ptr %377, i32 1
  store ptr %378, ptr %19, align 8
  br label %321, !llvm.loop !187

379:                                              ; preds = %373, %321
  %380 = load ptr, ptr %17, align 8
  %381 = load ptr, ptr %18, align 8
  %382 = icmp eq ptr %380, %381
  br i1 %382, label %383, label %388

383:                                              ; preds = %379
  %384 = load i32, ptr %20, align 4
  %385 = load i32, ptr %21, align 4
  %386 = icmp ult i32 %384, %385
  %387 = zext i1 %386 to i32
  br label %395

388:                                              ; preds = %379
  %389 = load i8, ptr %22, align 1
  %390 = zext i8 %389 to i32
  %391 = load i8, ptr %23, align 1
  %392 = zext i8 %391 to i32
  %393 = icmp slt i32 %390, %392
  %394 = zext i1 %393 to i32
  br label %395

395:                                              ; preds = %383, %388
  %396 = phi i32 [ %387, %383 ], [ %394, %388 ]
  %397 = icmp ne i32 %396, 0
  br i1 %397, label %399, label %398

398:                                              ; preds = %395
  br label %418

399:                                              ; preds = %395
  br label %400

400:                                              ; preds = %399
  %401 = load ptr, ptr %50, align 8
  %402 = load i64, ptr %55, align 8
  %403 = getelementptr inbounds i32, ptr %401, i64 %402
  %404 = load i32, ptr %403, align 4
  store i32 %404, ptr %56, align 4
  %405 = load ptr, ptr %50, align 8
  %406 = load i64, ptr %54, align 8
  %407 = getelementptr inbounds i32, ptr %405, i64 %406
  %408 = load i32, ptr %407, align 4
  %409 = load ptr, ptr %50, align 8
  %410 = load i64, ptr %55, align 8
  %411 = getelementptr inbounds i32, ptr %409, i64 %410
  store i32 %408, ptr %411, align 4
  %412 = load i32, ptr %56, align 4
  %413 = load ptr, ptr %50, align 8
  %414 = load i64, ptr %54, align 8
  %415 = getelementptr inbounds i32, ptr %413, i64 %414
  store i32 %412, ptr %415, align 4
  br label %416

416:                                              ; preds = %400
  %417 = load i64, ptr %54, align 8
  store i64 %417, ptr %55, align 8
  br label %86

418:                                              ; preds = %398, %93
  %419 = load i32, ptr %51, align 4
  %420 = icmp ne i32 %419, 0
  br i1 %420, label %422, label %421

421:                                              ; preds = %418
  br label %425

422:                                              ; preds = %418
  %423 = load i32, ptr %51, align 4
  %424 = add i32 %423, -1
  store i32 %424, ptr %51, align 4
  br label %83

425:                                              ; preds = %421
  %426 = load i32, ptr %53, align 4
  %427 = sub i32 %426, 1
  store i32 %427, ptr %52, align 4
  br label %428

428:                                              ; preds = %781, %425
  %429 = load i32, ptr %52, align 4
  %430 = icmp ugt i32 %429, 0
  br i1 %430, label %431, label %784

431:                                              ; preds = %428
  store i64 0, ptr %58, align 8
  br label %432

432:                                              ; preds = %431
  %433 = load ptr, ptr %50, align 8
  %434 = load i32, ptr %52, align 4
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds i32, ptr %433, i64 %435
  %437 = load i32, ptr %436, align 4
  store i32 %437, ptr %59, align 4
  %438 = load ptr, ptr %50, align 8
  %439 = getelementptr inbounds i32, ptr %438, i64 0
  %440 = load i32, ptr %439, align 4
  %441 = load ptr, ptr %50, align 8
  %442 = load i32, ptr %52, align 4
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds i32, ptr %441, i64 %443
  store i32 %440, ptr %444, align 4
  %445 = load i32, ptr %59, align 4
  %446 = load ptr, ptr %50, align 8
  %447 = getelementptr inbounds i32, ptr %446, i64 0
  store i32 %445, ptr %447, align 4
  br label %448

448:                                              ; preds = %432
  br label %449

449:                                              ; preds = %779, %448
  %450 = load i64, ptr %58, align 8
  %451 = shl i64 %450, 1
  %452 = add i64 %451, 1
  store i64 %452, ptr %57, align 8
  %453 = load i32, ptr %52, align 4
  %454 = zext i32 %453 to i64
  %455 = icmp uge i64 %452, %454
  br i1 %455, label %456, label %457

456:                                              ; preds = %449
  br label %781

457:                                              ; preds = %449
  %458 = load i64, ptr %57, align 8
  %459 = add i64 %458, 1
  %460 = load i32, ptr %52, align 4
  %461 = zext i32 %460 to i64
  %462 = icmp ult i64 %459, %461
  br i1 %462, label %463, label %610

463:                                              ; preds = %457
  %464 = load ptr, ptr %49, align 8
  %465 = load ptr, ptr %48, align 8
  %466 = load ptr, ptr %50, align 8
  %467 = load i64, ptr %57, align 8
  %468 = getelementptr inbounds i32, ptr %466, i64 %467
  %469 = load i32, ptr %468, align 4
  %470 = load ptr, ptr %50, align 8
  %471 = load i64, ptr %57, align 8
  %472 = add i64 %471, 1
  %473 = getelementptr inbounds i32, ptr %470, i64 %472
  %474 = load i32, ptr %473, align 4
  store ptr %464, ptr %24, align 8
  store ptr %465, ptr %25, align 8
  store i32 %469, ptr %26, align 4
  store i32 %474, ptr %27, align 4
  %475 = load ptr, ptr %24, align 8
  %476 = load ptr, ptr %475, align 8
  %477 = load ptr, ptr %25, align 8
  %478 = load ptr, ptr %477, align 8
  %479 = load i32, ptr %26, align 4
  %480 = zext i32 %479 to i64
  %481 = getelementptr inbounds i32, ptr %478, i64 %480
  %482 = load i32, ptr %481, align 4
  %483 = zext i32 %482 to i64
  %484 = getelementptr inbounds i8, ptr %476, i64 %483
  store ptr %484, ptr %28, align 8
  %485 = load ptr, ptr %24, align 8
  %486 = load ptr, ptr %485, align 8
  %487 = load ptr, ptr %25, align 8
  %488 = load ptr, ptr %487, align 8
  %489 = load i32, ptr %27, align 4
  %490 = zext i32 %489 to i64
  %491 = getelementptr inbounds i32, ptr %488, i64 %490
  %492 = load i32, ptr %491, align 4
  %493 = zext i32 %492 to i64
  %494 = getelementptr inbounds i8, ptr %486, i64 %493
  store ptr %494, ptr %30, align 8
  %495 = load ptr, ptr %28, align 8
  %496 = getelementptr inbounds i8, ptr %495, i64 28
  %497 = load i8, ptr %496, align 1
  %498 = zext i8 %497 to i32
  %499 = load ptr, ptr %28, align 8
  %500 = getelementptr inbounds i8, ptr %499, i64 28
  %501 = getelementptr inbounds i8, ptr %500, i64 1
  %502 = load i8, ptr %501, align 1
  %503 = zext i8 %502 to i32
  %504 = shl i32 %503, 8
  %505 = or i32 %498, %504
  store i32 %505, ptr %31, align 4
  %506 = load ptr, ptr %30, align 8
  %507 = getelementptr inbounds i8, ptr %506, i64 28
  %508 = load i8, ptr %507, align 1
  %509 = zext i8 %508 to i32
  %510 = load ptr, ptr %30, align 8
  %511 = getelementptr inbounds i8, ptr %510, i64 28
  %512 = getelementptr inbounds i8, ptr %511, i64 1
  %513 = load i8, ptr %512, align 1
  %514 = zext i8 %513 to i32
  %515 = shl i32 %514, 8
  %516 = or i32 %509, %515
  store i32 %516, ptr %32, align 4
  store i8 0, ptr %33, align 1
  store i8 0, ptr %34, align 1
  %517 = load ptr, ptr %28, align 8
  %518 = getelementptr inbounds i8, ptr %517, i64 46
  store ptr %518, ptr %28, align 8
  %519 = load ptr, ptr %30, align 8
  %520 = getelementptr inbounds i8, ptr %519, i64 46
  store ptr %520, ptr %30, align 8
  %521 = load ptr, ptr %28, align 8
  %522 = load i32, ptr %31, align 4
  %523 = load i32, ptr %32, align 4
  %524 = icmp ult i32 %522, %523
  br i1 %524, label %525, label %527

525:                                              ; preds = %463
  %526 = load i32, ptr %31, align 4
  br label %529

527:                                              ; preds = %463
  %528 = load i32, ptr %32, align 4
  br label %529

529:                                              ; preds = %527, %525
  %530 = phi i32 [ %526, %525 ], [ %528, %527 ]
  %531 = zext i32 %530 to i64
  %532 = getelementptr inbounds i8, ptr %521, i64 %531
  store ptr %532, ptr %29, align 8
  br label %533

533:                                              ; preds = %586, %529
  %534 = load ptr, ptr %28, align 8
  %535 = load ptr, ptr %29, align 8
  %536 = icmp ult ptr %534, %535
  br i1 %536, label %537, label %591

537:                                              ; preds = %533
  %538 = load ptr, ptr %28, align 8
  %539 = load i8, ptr %538, align 1
  %540 = zext i8 %539 to i32
  %541 = icmp sge i32 %540, 65
  br i1 %541, label %542, label %553

542:                                              ; preds = %537
  %543 = load ptr, ptr %28, align 8
  %544 = load i8, ptr %543, align 1
  %545 = zext i8 %544 to i32
  %546 = icmp sle i32 %545, 90
  br i1 %546, label %547, label %553

547:                                              ; preds = %542
  %548 = load ptr, ptr %28, align 8
  %549 = load i8, ptr %548, align 1
  %550 = zext i8 %549 to i32
  %551 = sub nsw i32 %550, 65
  %552 = add nsw i32 %551, 97
  br label %557

553:                                              ; preds = %542, %537
  %554 = load ptr, ptr %28, align 8
  %555 = load i8, ptr %554, align 1
  %556 = zext i8 %555 to i32
  br label %557

557:                                              ; preds = %553, %547
  %558 = phi i32 [ %552, %547 ], [ %556, %553 ]
  %559 = trunc i32 %558 to i8
  store i8 %559, ptr %33, align 1
  %560 = zext i8 %559 to i32
  %561 = load ptr, ptr %30, align 8
  %562 = load i8, ptr %561, align 1
  %563 = zext i8 %562 to i32
  %564 = icmp sge i32 %563, 65
  br i1 %564, label %565, label %576

565:                                              ; preds = %557
  %566 = load ptr, ptr %30, align 8
  %567 = load i8, ptr %566, align 1
  %568 = zext i8 %567 to i32
  %569 = icmp sle i32 %568, 90
  br i1 %569, label %570, label %576

570:                                              ; preds = %565
  %571 = load ptr, ptr %30, align 8
  %572 = load i8, ptr %571, align 1
  %573 = zext i8 %572 to i32
  %574 = sub nsw i32 %573, 65
  %575 = add nsw i32 %574, 97
  br label %580

576:                                              ; preds = %565, %557
  %577 = load ptr, ptr %30, align 8
  %578 = load i8, ptr %577, align 1
  %579 = zext i8 %578 to i32
  br label %580

580:                                              ; preds = %576, %570
  %581 = phi i32 [ %575, %570 ], [ %579, %576 ]
  %582 = trunc i32 %581 to i8
  store i8 %582, ptr %34, align 1
  %583 = zext i8 %582 to i32
  %584 = icmp ne i32 %560, %583
  br i1 %584, label %585, label %586

585:                                              ; preds = %580
  br label %591

586:                                              ; preds = %580
  %587 = load ptr, ptr %28, align 8
  %588 = getelementptr inbounds i8, ptr %587, i32 1
  store ptr %588, ptr %28, align 8
  %589 = load ptr, ptr %30, align 8
  %590 = getelementptr inbounds i8, ptr %589, i32 1
  store ptr %590, ptr %30, align 8
  br label %533, !llvm.loop !187

591:                                              ; preds = %585, %533
  %592 = load ptr, ptr %28, align 8
  %593 = load ptr, ptr %29, align 8
  %594 = icmp eq ptr %592, %593
  br i1 %594, label %595, label %600

595:                                              ; preds = %591
  %596 = load i32, ptr %31, align 4
  %597 = load i32, ptr %32, align 4
  %598 = icmp ult i32 %596, %597
  %599 = zext i1 %598 to i32
  br label %607

600:                                              ; preds = %591
  %601 = load i8, ptr %33, align 1
  %602 = zext i8 %601 to i32
  %603 = load i8, ptr %34, align 1
  %604 = zext i8 %603 to i32
  %605 = icmp slt i32 %602, %604
  %606 = zext i1 %605 to i32
  br label %607

607:                                              ; preds = %595, %600
  %608 = phi i32 [ %599, %595 ], [ %606, %600 ]
  %609 = icmp ne i32 %608, 0
  br label %610

610:                                              ; preds = %607, %457
  %611 = phi i1 [ false, %457 ], [ %609, %607 ]
  %612 = zext i1 %611 to i32
  %613 = sext i32 %612 to i64
  %614 = load i64, ptr %57, align 8
  %615 = add i64 %614, %613
  store i64 %615, ptr %57, align 8
  %616 = load ptr, ptr %49, align 8
  %617 = load ptr, ptr %48, align 8
  %618 = load ptr, ptr %50, align 8
  %619 = load i64, ptr %58, align 8
  %620 = getelementptr inbounds i32, ptr %618, i64 %619
  %621 = load i32, ptr %620, align 4
  %622 = load ptr, ptr %50, align 8
  %623 = load i64, ptr %57, align 8
  %624 = getelementptr inbounds i32, ptr %622, i64 %623
  %625 = load i32, ptr %624, align 4
  store ptr %616, ptr %35, align 8
  store ptr %617, ptr %36, align 8
  store i32 %621, ptr %37, align 4
  store i32 %625, ptr %38, align 4
  %626 = load ptr, ptr %35, align 8
  %627 = load ptr, ptr %626, align 8
  %628 = load ptr, ptr %36, align 8
  %629 = load ptr, ptr %628, align 8
  %630 = load i32, ptr %37, align 4
  %631 = zext i32 %630 to i64
  %632 = getelementptr inbounds i32, ptr %629, i64 %631
  %633 = load i32, ptr %632, align 4
  %634 = zext i32 %633 to i64
  %635 = getelementptr inbounds i8, ptr %627, i64 %634
  store ptr %635, ptr %39, align 8
  %636 = load ptr, ptr %35, align 8
  %637 = load ptr, ptr %636, align 8
  %638 = load ptr, ptr %36, align 8
  %639 = load ptr, ptr %638, align 8
  %640 = load i32, ptr %38, align 4
  %641 = zext i32 %640 to i64
  %642 = getelementptr inbounds i32, ptr %639, i64 %641
  %643 = load i32, ptr %642, align 4
  %644 = zext i32 %643 to i64
  %645 = getelementptr inbounds i8, ptr %637, i64 %644
  store ptr %645, ptr %41, align 8
  %646 = load ptr, ptr %39, align 8
  %647 = getelementptr inbounds i8, ptr %646, i64 28
  %648 = load i8, ptr %647, align 1
  %649 = zext i8 %648 to i32
  %650 = load ptr, ptr %39, align 8
  %651 = getelementptr inbounds i8, ptr %650, i64 28
  %652 = getelementptr inbounds i8, ptr %651, i64 1
  %653 = load i8, ptr %652, align 1
  %654 = zext i8 %653 to i32
  %655 = shl i32 %654, 8
  %656 = or i32 %649, %655
  store i32 %656, ptr %42, align 4
  %657 = load ptr, ptr %41, align 8
  %658 = getelementptr inbounds i8, ptr %657, i64 28
  %659 = load i8, ptr %658, align 1
  %660 = zext i8 %659 to i32
  %661 = load ptr, ptr %41, align 8
  %662 = getelementptr inbounds i8, ptr %661, i64 28
  %663 = getelementptr inbounds i8, ptr %662, i64 1
  %664 = load i8, ptr %663, align 1
  %665 = zext i8 %664 to i32
  %666 = shl i32 %665, 8
  %667 = or i32 %660, %666
  store i32 %667, ptr %43, align 4
  store i8 0, ptr %44, align 1
  store i8 0, ptr %45, align 1
  %668 = load ptr, ptr %39, align 8
  %669 = getelementptr inbounds i8, ptr %668, i64 46
  store ptr %669, ptr %39, align 8
  %670 = load ptr, ptr %41, align 8
  %671 = getelementptr inbounds i8, ptr %670, i64 46
  store ptr %671, ptr %41, align 8
  %672 = load ptr, ptr %39, align 8
  %673 = load i32, ptr %42, align 4
  %674 = load i32, ptr %43, align 4
  %675 = icmp ult i32 %673, %674
  br i1 %675, label %676, label %678

676:                                              ; preds = %610
  %677 = load i32, ptr %42, align 4
  br label %680

678:                                              ; preds = %610
  %679 = load i32, ptr %43, align 4
  br label %680

680:                                              ; preds = %678, %676
  %681 = phi i32 [ %677, %676 ], [ %679, %678 ]
  %682 = zext i32 %681 to i64
  %683 = getelementptr inbounds i8, ptr %672, i64 %682
  store ptr %683, ptr %40, align 8
  br label %684

684:                                              ; preds = %737, %680
  %685 = load ptr, ptr %39, align 8
  %686 = load ptr, ptr %40, align 8
  %687 = icmp ult ptr %685, %686
  br i1 %687, label %688, label %742

688:                                              ; preds = %684
  %689 = load ptr, ptr %39, align 8
  %690 = load i8, ptr %689, align 1
  %691 = zext i8 %690 to i32
  %692 = icmp sge i32 %691, 65
  br i1 %692, label %693, label %704

693:                                              ; preds = %688
  %694 = load ptr, ptr %39, align 8
  %695 = load i8, ptr %694, align 1
  %696 = zext i8 %695 to i32
  %697 = icmp sle i32 %696, 90
  br i1 %697, label %698, label %704

698:                                              ; preds = %693
  %699 = load ptr, ptr %39, align 8
  %700 = load i8, ptr %699, align 1
  %701 = zext i8 %700 to i32
  %702 = sub nsw i32 %701, 65
  %703 = add nsw i32 %702, 97
  br label %708

704:                                              ; preds = %693, %688
  %705 = load ptr, ptr %39, align 8
  %706 = load i8, ptr %705, align 1
  %707 = zext i8 %706 to i32
  br label %708

708:                                              ; preds = %704, %698
  %709 = phi i32 [ %703, %698 ], [ %707, %704 ]
  %710 = trunc i32 %709 to i8
  store i8 %710, ptr %44, align 1
  %711 = zext i8 %710 to i32
  %712 = load ptr, ptr %41, align 8
  %713 = load i8, ptr %712, align 1
  %714 = zext i8 %713 to i32
  %715 = icmp sge i32 %714, 65
  br i1 %715, label %716, label %727

716:                                              ; preds = %708
  %717 = load ptr, ptr %41, align 8
  %718 = load i8, ptr %717, align 1
  %719 = zext i8 %718 to i32
  %720 = icmp sle i32 %719, 90
  br i1 %720, label %721, label %727

721:                                              ; preds = %716
  %722 = load ptr, ptr %41, align 8
  %723 = load i8, ptr %722, align 1
  %724 = zext i8 %723 to i32
  %725 = sub nsw i32 %724, 65
  %726 = add nsw i32 %725, 97
  br label %731

727:                                              ; preds = %716, %708
  %728 = load ptr, ptr %41, align 8
  %729 = load i8, ptr %728, align 1
  %730 = zext i8 %729 to i32
  br label %731

731:                                              ; preds = %727, %721
  %732 = phi i32 [ %726, %721 ], [ %730, %727 ]
  %733 = trunc i32 %732 to i8
  store i8 %733, ptr %45, align 1
  %734 = zext i8 %733 to i32
  %735 = icmp ne i32 %711, %734
  br i1 %735, label %736, label %737

736:                                              ; preds = %731
  br label %742

737:                                              ; preds = %731
  %738 = load ptr, ptr %39, align 8
  %739 = getelementptr inbounds i8, ptr %738, i32 1
  store ptr %739, ptr %39, align 8
  %740 = load ptr, ptr %41, align 8
  %741 = getelementptr inbounds i8, ptr %740, i32 1
  store ptr %741, ptr %41, align 8
  br label %684, !llvm.loop !187

742:                                              ; preds = %736, %684
  %743 = load ptr, ptr %39, align 8
  %744 = load ptr, ptr %40, align 8
  %745 = icmp eq ptr %743, %744
  br i1 %745, label %746, label %751

746:                                              ; preds = %742
  %747 = load i32, ptr %42, align 4
  %748 = load i32, ptr %43, align 4
  %749 = icmp ult i32 %747, %748
  %750 = zext i1 %749 to i32
  br label %758

751:                                              ; preds = %742
  %752 = load i8, ptr %44, align 1
  %753 = zext i8 %752 to i32
  %754 = load i8, ptr %45, align 1
  %755 = zext i8 %754 to i32
  %756 = icmp slt i32 %753, %755
  %757 = zext i1 %756 to i32
  br label %758

758:                                              ; preds = %746, %751
  %759 = phi i32 [ %750, %746 ], [ %757, %751 ]
  %760 = icmp ne i32 %759, 0
  br i1 %760, label %762, label %761

761:                                              ; preds = %758
  br label %781

762:                                              ; preds = %758
  br label %763

763:                                              ; preds = %762
  %764 = load ptr, ptr %50, align 8
  %765 = load i64, ptr %58, align 8
  %766 = getelementptr inbounds i32, ptr %764, i64 %765
  %767 = load i32, ptr %766, align 4
  store i32 %767, ptr %60, align 4
  %768 = load ptr, ptr %50, align 8
  %769 = load i64, ptr %57, align 8
  %770 = getelementptr inbounds i32, ptr %768, i64 %769
  %771 = load i32, ptr %770, align 4
  %772 = load ptr, ptr %50, align 8
  %773 = load i64, ptr %58, align 8
  %774 = getelementptr inbounds i32, ptr %772, i64 %773
  store i32 %771, ptr %774, align 4
  %775 = load i32, ptr %60, align 4
  %776 = load ptr, ptr %50, align 8
  %777 = load i64, ptr %57, align 8
  %778 = getelementptr inbounds i32, ptr %776, i64 %777
  store i32 %775, ptr %778, align 4
  br label %779

779:                                              ; preds = %763
  %780 = load i64, ptr %57, align 8
  store i64 %780, ptr %58, align 8
  br label %449

781:                                              ; preds = %761, %456
  %782 = load i32, ptr %52, align 4
  %783 = add i32 %782, -1
  store i32 %783, ptr %52, align 4
  br label %428, !llvm.loop !188

784:                                              ; preds = %73, %428
  ret void
}

declare i64 @fread(ptr noundef, i64 noundef, i64 noundef, ptr noundef) #1

declare i64 @fwrite(ptr noundef, i64 noundef, i64 noundef, ptr noundef) #1

declare i32 @utime(ptr noundef, ptr noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @mz_zip_dos_to_time_t(i32 noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.tm, align 8
  store i32 %0, ptr %3, align 4
  store i32 %1, ptr %4, align 4
  call void @llvm.memset.p0.i64(ptr align 8 %5, i8 0, i64 56, i1 false)
  %6 = getelementptr inbounds %struct.tm, ptr %5, i32 0, i32 8
  store i32 -1, ptr %6, align 8
  %7 = load i32, ptr %4, align 4
  %8 = ashr i32 %7, 9
  %9 = and i32 %8, 127
  %10 = add nsw i32 %9, 1980
  %11 = sub nsw i32 %10, 1900
  %12 = getelementptr inbounds %struct.tm, ptr %5, i32 0, i32 5
  store i32 %11, ptr %12, align 4
  %13 = load i32, ptr %4, align 4
  %14 = ashr i32 %13, 5
  %15 = and i32 %14, 15
  %16 = sub nsw i32 %15, 1
  %17 = getelementptr inbounds %struct.tm, ptr %5, i32 0, i32 4
  store i32 %16, ptr %17, align 8
  %18 = load i32, ptr %4, align 4
  %19 = and i32 %18, 31
  %20 = getelementptr inbounds %struct.tm, ptr %5, i32 0, i32 3
  store i32 %19, ptr %20, align 4
  %21 = load i32, ptr %3, align 4
  %22 = ashr i32 %21, 11
  %23 = and i32 %22, 31
  %24 = getelementptr inbounds %struct.tm, ptr %5, i32 0, i32 2
  store i32 %23, ptr %24, align 8
  %25 = load i32, ptr %3, align 4
  %26 = ashr i32 %25, 5
  %27 = and i32 %26, 63
  %28 = getelementptr inbounds %struct.tm, ptr %5, i32 0, i32 1
  store i32 %27, ptr %28, align 4
  %29 = load i32, ptr %3, align 4
  %30 = shl i32 %29, 1
  %31 = and i32 %30, 62
  %32 = getelementptr inbounds %struct.tm, ptr %5, i32 0, i32 0
  store i32 %31, ptr %32, align 8
  %33 = call i64 @mktime(ptr noundef %5)
  ret i64 %33
}

declare i64 @mktime(ptr noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_array_ensure_capacity(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  store ptr %0, ptr %6, align 8
  store ptr %1, ptr %7, align 8
  store i64 %2, ptr %8, align 8
  store i32 %3, ptr %9, align 4
  %12 = load i64, ptr %8, align 8
  store i64 %12, ptr %11, align 8
  %13 = load ptr, ptr %7, align 8
  %14 = getelementptr inbounds %struct.mz_zip_array, ptr %13, i32 0, i32 3
  %15 = load i32, ptr %14, align 8
  %16 = icmp ne i32 %15, 0
  %17 = xor i1 %16, true
  %18 = zext i1 %17 to i32
  %19 = sext i32 %18 to i64
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %4
  call void @__assert_rtn(ptr noundef @__func__.mz_zip_array_ensure_capacity, ptr noundef @.str.11, i32 noundef 4785, ptr noundef @.str.78) #12
  unreachable

22:                                               ; No predecessors!
  br label %24

23:                                               ; preds = %4
  br label %24

24:                                               ; preds = %23, %22
  %25 = load ptr, ptr %7, align 8
  %26 = getelementptr inbounds %struct.mz_zip_array, ptr %25, i32 0, i32 2
  %27 = load i64, ptr %26, align 8
  %28 = load i64, ptr %8, align 8
  %29 = icmp uge i64 %27, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %24
  store i32 1, ptr %5, align 4
  br label %79

31:                                               ; preds = %24
  %32 = load i32, ptr %9, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %54

34:                                               ; preds = %31
  %35 = load ptr, ptr %7, align 8
  %36 = getelementptr inbounds %struct.mz_zip_array, ptr %35, i32 0, i32 2
  %37 = load i64, ptr %36, align 8
  %38 = icmp ugt i64 1, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  br label %44

40:                                               ; preds = %34
  %41 = load ptr, ptr %7, align 8
  %42 = getelementptr inbounds %struct.mz_zip_array, ptr %41, i32 0, i32 2
  %43 = load i64, ptr %42, align 8
  br label %44

44:                                               ; preds = %40, %39
  %45 = phi i64 [ 1, %39 ], [ %43, %40 ]
  store i64 %45, ptr %11, align 8
  br label %46

46:                                               ; preds = %50, %44
  %47 = load i64, ptr %11, align 8
  %48 = load i64, ptr %8, align 8
  %49 = icmp ult i64 %47, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %46
  %51 = load i64, ptr %11, align 8
  %52 = mul i64 %51, 2
  store i64 %52, ptr %11, align 8
  br label %46, !llvm.loop !189

53:                                               ; preds = %46
  br label %54

54:                                               ; preds = %53, %31
  %55 = load ptr, ptr %6, align 8
  %56 = getelementptr inbounds %struct.mz_zip_archive, ptr %55, i32 0, i32 9
  %57 = load ptr, ptr %56, align 8
  %58 = load ptr, ptr %6, align 8
  %59 = getelementptr inbounds %struct.mz_zip_archive, ptr %58, i32 0, i32 10
  %60 = load ptr, ptr %59, align 8
  %61 = load ptr, ptr %7, align 8
  %62 = getelementptr inbounds %struct.mz_zip_array, ptr %61, i32 0, i32 0
  %63 = load ptr, ptr %62, align 8
  %64 = load ptr, ptr %7, align 8
  %65 = getelementptr inbounds %struct.mz_zip_array, ptr %64, i32 0, i32 3
  %66 = load i32, ptr %65, align 8
  %67 = zext i32 %66 to i64
  %68 = load i64, ptr %11, align 8
  %69 = call ptr %57(ptr noundef %60, ptr noundef %63, i64 noundef %67, i64 noundef %68)
  store ptr %69, ptr %10, align 8
  %70 = icmp eq ptr null, %69
  br i1 %70, label %71, label %72

71:                                               ; preds = %54
  store i32 0, ptr %5, align 4
  br label %79

72:                                               ; preds = %54
  %73 = load ptr, ptr %10, align 8
  %74 = load ptr, ptr %7, align 8
  %75 = getelementptr inbounds %struct.mz_zip_array, ptr %74, i32 0, i32 0
  store ptr %73, ptr %75, align 8
  %76 = load i64, ptr %11, align 8
  %77 = load ptr, ptr %7, align 8
  %78 = getelementptr inbounds %struct.mz_zip_array, ptr %77, i32 0, i32 2
  store i64 %76, ptr %78, align 8
  store i32 1, ptr %5, align 4
  br label %79

79:                                               ; preds = %72, %71, %30
  %80 = load i32, ptr %5, align 4
  ret i32 %80
}

declare ptr @localtime(ptr noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @mz_zip_writer_create_central_dir_header(ptr noundef %0, ptr noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3, i16 noundef zeroext %4, i64 noundef %5, i64 noundef %6, i32 noundef %7, i16 noundef zeroext %8, i16 noundef zeroext %9, i16 noundef zeroext %10, i16 noundef zeroext %11, i64 noundef %12, i32 noundef %13) #0 {
  %15 = alloca ptr, align 8
  %16 = alloca i16, align 2
  %17 = alloca ptr, align 8
  %18 = alloca i16, align 2
  %19 = alloca ptr, align 8
  %20 = alloca i16, align 2
  %21 = alloca ptr, align 8
  %22 = alloca i16, align 2
  %23 = alloca ptr, align 8
  %24 = alloca i16, align 2
  %25 = alloca ptr, align 8
  %26 = alloca i16, align 2
  %27 = alloca ptr, align 8
  %28 = alloca i16, align 2
  %29 = alloca ptr, align 8
  %30 = alloca i16, align 2
  %31 = alloca ptr, align 8
  %32 = alloca i32, align 4
  %33 = alloca ptr, align 8
  %34 = alloca i32, align 4
  %35 = alloca ptr, align 8
  %36 = alloca i32, align 4
  %37 = alloca ptr, align 8
  %38 = alloca i32, align 4
  %39 = alloca ptr, align 8
  %40 = alloca i32, align 4
  %41 = alloca ptr, align 8
  %42 = alloca i32, align 4
  %43 = alloca ptr, align 8
  %44 = alloca ptr, align 8
  %45 = alloca i16, align 2
  %46 = alloca i16, align 2
  %47 = alloca i16, align 2
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i32, align 4
  %51 = alloca i16, align 2
  %52 = alloca i16, align 2
  %53 = alloca i16, align 2
  %54 = alloca i16, align 2
  %55 = alloca i64, align 8
  %56 = alloca i32, align 4
  store ptr %0, ptr %43, align 8
  store ptr %1, ptr %44, align 8
  store i16 %2, ptr %45, align 2
  store i16 %3, ptr %46, align 2
  store i16 %4, ptr %47, align 2
  store i64 %5, ptr %48, align 8
  store i64 %6, ptr %49, align 8
  store i32 %7, ptr %50, align 4
  store i16 %8, ptr %51, align 2
  store i16 %9, ptr %52, align 2
  store i16 %10, ptr %53, align 2
  store i16 %11, ptr %54, align 2
  store i64 %12, ptr %55, align 8
  store i32 %13, ptr %56, align 4
  %57 = load ptr, ptr %43, align 8
  %58 = load ptr, ptr %44, align 8
  %59 = load ptr, ptr %44, align 8
  %60 = call i64 @llvm.objectsize.i64.p0(ptr %59, i1 false, i1 true, i1 false)
  %61 = call ptr @__memset_chk(ptr noundef %58, i32 noundef 0, i64 noundef 46, i64 noundef %60) #11
  %62 = load ptr, ptr %44, align 8
  %63 = getelementptr inbounds i8, ptr %62, i64 0
  store ptr %63, ptr %31, align 8
  store i32 33639248, ptr %32, align 4
  %64 = load i32, ptr %32, align 4
  %65 = trunc i32 %64 to i8
  %66 = load ptr, ptr %31, align 8
  store i8 %65, ptr %66, align 1
  %67 = load i32, ptr %32, align 4
  %68 = lshr i32 %67, 8
  %69 = trunc i32 %68 to i8
  %70 = load ptr, ptr %31, align 8
  %71 = getelementptr inbounds i8, ptr %70, i64 1
  store i8 %69, ptr %71, align 1
  %72 = load i32, ptr %32, align 4
  %73 = lshr i32 %72, 16
  %74 = trunc i32 %73 to i8
  %75 = load ptr, ptr %31, align 8
  %76 = getelementptr inbounds i8, ptr %75, i64 2
  store i8 %74, ptr %76, align 1
  %77 = load i32, ptr %32, align 4
  %78 = lshr i32 %77, 24
  %79 = trunc i32 %78 to i8
  %80 = load ptr, ptr %31, align 8
  %81 = getelementptr inbounds i8, ptr %80, i64 3
  store i8 %79, ptr %81, align 1
  %82 = load ptr, ptr %44, align 8
  %83 = getelementptr inbounds i8, ptr %82, i64 6
  %84 = load i16, ptr %51, align 2
  %85 = zext i16 %84 to i32
  %86 = icmp ne i32 %85, 0
  %87 = zext i1 %86 to i64
  %88 = select i1 %86, i32 20, i32 0
  %89 = trunc i32 %88 to i16
  store ptr %83, ptr %15, align 8
  store i16 %89, ptr %16, align 2
  %90 = load i16, ptr %16, align 2
  %91 = trunc i16 %90 to i8
  %92 = load ptr, ptr %15, align 8
  store i8 %91, ptr %92, align 1
  %93 = load i16, ptr %16, align 2
  %94 = zext i16 %93 to i32
  %95 = ashr i32 %94, 8
  %96 = trunc i32 %95 to i8
  %97 = load ptr, ptr %15, align 8
  %98 = getelementptr inbounds i8, ptr %97, i64 1
  store i8 %96, ptr %98, align 1
  %99 = load ptr, ptr %44, align 8
  %100 = getelementptr inbounds i8, ptr %99, i64 8
  %101 = load i16, ptr %52, align 2
  store ptr %100, ptr %17, align 8
  store i16 %101, ptr %18, align 2
  %102 = load i16, ptr %18, align 2
  %103 = trunc i16 %102 to i8
  %104 = load ptr, ptr %17, align 8
  store i8 %103, ptr %104, align 1
  %105 = load i16, ptr %18, align 2
  %106 = zext i16 %105 to i32
  %107 = ashr i32 %106, 8
  %108 = trunc i32 %107 to i8
  %109 = load ptr, ptr %17, align 8
  %110 = getelementptr inbounds i8, ptr %109, i64 1
  store i8 %108, ptr %110, align 1
  %111 = load ptr, ptr %44, align 8
  %112 = getelementptr inbounds i8, ptr %111, i64 10
  %113 = load i16, ptr %51, align 2
  store ptr %112, ptr %19, align 8
  store i16 %113, ptr %20, align 2
  %114 = load i16, ptr %20, align 2
  %115 = trunc i16 %114 to i8
  %116 = load ptr, ptr %19, align 8
  store i8 %115, ptr %116, align 1
  %117 = load i16, ptr %20, align 2
  %118 = zext i16 %117 to i32
  %119 = ashr i32 %118, 8
  %120 = trunc i32 %119 to i8
  %121 = load ptr, ptr %19, align 8
  %122 = getelementptr inbounds i8, ptr %121, i64 1
  store i8 %120, ptr %122, align 1
  %123 = load ptr, ptr %44, align 8
  %124 = getelementptr inbounds i8, ptr %123, i64 12
  %125 = load i16, ptr %53, align 2
  store ptr %124, ptr %21, align 8
  store i16 %125, ptr %22, align 2
  %126 = load i16, ptr %22, align 2
  %127 = trunc i16 %126 to i8
  %128 = load ptr, ptr %21, align 8
  store i8 %127, ptr %128, align 1
  %129 = load i16, ptr %22, align 2
  %130 = zext i16 %129 to i32
  %131 = ashr i32 %130, 8
  %132 = trunc i32 %131 to i8
  %133 = load ptr, ptr %21, align 8
  %134 = getelementptr inbounds i8, ptr %133, i64 1
  store i8 %132, ptr %134, align 1
  %135 = load ptr, ptr %44, align 8
  %136 = getelementptr inbounds i8, ptr %135, i64 14
  %137 = load i16, ptr %54, align 2
  store ptr %136, ptr %23, align 8
  store i16 %137, ptr %24, align 2
  %138 = load i16, ptr %24, align 2
  %139 = trunc i16 %138 to i8
  %140 = load ptr, ptr %23, align 8
  store i8 %139, ptr %140, align 1
  %141 = load i16, ptr %24, align 2
  %142 = zext i16 %141 to i32
  %143 = ashr i32 %142, 8
  %144 = trunc i32 %143 to i8
  %145 = load ptr, ptr %23, align 8
  %146 = getelementptr inbounds i8, ptr %145, i64 1
  store i8 %144, ptr %146, align 1
  %147 = load ptr, ptr %44, align 8
  %148 = getelementptr inbounds i8, ptr %147, i64 16
  %149 = load i32, ptr %50, align 4
  store ptr %148, ptr %33, align 8
  store i32 %149, ptr %34, align 4
  %150 = load i32, ptr %34, align 4
  %151 = trunc i32 %150 to i8
  %152 = load ptr, ptr %33, align 8
  store i8 %151, ptr %152, align 1
  %153 = load i32, ptr %34, align 4
  %154 = lshr i32 %153, 8
  %155 = trunc i32 %154 to i8
  %156 = load ptr, ptr %33, align 8
  %157 = getelementptr inbounds i8, ptr %156, i64 1
  store i8 %155, ptr %157, align 1
  %158 = load i32, ptr %34, align 4
  %159 = lshr i32 %158, 16
  %160 = trunc i32 %159 to i8
  %161 = load ptr, ptr %33, align 8
  %162 = getelementptr inbounds i8, ptr %161, i64 2
  store i8 %160, ptr %162, align 1
  %163 = load i32, ptr %34, align 4
  %164 = lshr i32 %163, 24
  %165 = trunc i32 %164 to i8
  %166 = load ptr, ptr %33, align 8
  %167 = getelementptr inbounds i8, ptr %166, i64 3
  store i8 %165, ptr %167, align 1
  %168 = load ptr, ptr %44, align 8
  %169 = getelementptr inbounds i8, ptr %168, i64 20
  %170 = load i64, ptr %49, align 8
  %171 = icmp ult i64 %170, 4294967295
  br i1 %171, label %172, label %174

172:                                              ; preds = %14
  %173 = load i64, ptr %49, align 8
  br label %175

174:                                              ; preds = %14
  br label %175

175:                                              ; preds = %174, %172
  %176 = phi i64 [ %173, %172 ], [ 4294967295, %174 ]
  %177 = trunc i64 %176 to i32
  store ptr %169, ptr %35, align 8
  store i32 %177, ptr %36, align 4
  %178 = load i32, ptr %36, align 4
  %179 = trunc i32 %178 to i8
  %180 = load ptr, ptr %35, align 8
  store i8 %179, ptr %180, align 1
  %181 = load i32, ptr %36, align 4
  %182 = lshr i32 %181, 8
  %183 = trunc i32 %182 to i8
  %184 = load ptr, ptr %35, align 8
  %185 = getelementptr inbounds i8, ptr %184, i64 1
  store i8 %183, ptr %185, align 1
  %186 = load i32, ptr %36, align 4
  %187 = lshr i32 %186, 16
  %188 = trunc i32 %187 to i8
  %189 = load ptr, ptr %35, align 8
  %190 = getelementptr inbounds i8, ptr %189, i64 2
  store i8 %188, ptr %190, align 1
  %191 = load i32, ptr %36, align 4
  %192 = lshr i32 %191, 24
  %193 = trunc i32 %192 to i8
  %194 = load ptr, ptr %35, align 8
  %195 = getelementptr inbounds i8, ptr %194, i64 3
  store i8 %193, ptr %195, align 1
  %196 = load ptr, ptr %44, align 8
  %197 = getelementptr inbounds i8, ptr %196, i64 24
  %198 = load i64, ptr %48, align 8
  %199 = icmp ult i64 %198, 4294967295
  br i1 %199, label %200, label %202

200:                                              ; preds = %175
  %201 = load i64, ptr %48, align 8
  br label %203

202:                                              ; preds = %175
  br label %203

203:                                              ; preds = %202, %200
  %204 = phi i64 [ %201, %200 ], [ 4294967295, %202 ]
  %205 = trunc i64 %204 to i32
  store ptr %197, ptr %37, align 8
  store i32 %205, ptr %38, align 4
  %206 = load i32, ptr %38, align 4
  %207 = trunc i32 %206 to i8
  %208 = load ptr, ptr %37, align 8
  store i8 %207, ptr %208, align 1
  %209 = load i32, ptr %38, align 4
  %210 = lshr i32 %209, 8
  %211 = trunc i32 %210 to i8
  %212 = load ptr, ptr %37, align 8
  %213 = getelementptr inbounds i8, ptr %212, i64 1
  store i8 %211, ptr %213, align 1
  %214 = load i32, ptr %38, align 4
  %215 = lshr i32 %214, 16
  %216 = trunc i32 %215 to i8
  %217 = load ptr, ptr %37, align 8
  %218 = getelementptr inbounds i8, ptr %217, i64 2
  store i8 %216, ptr %218, align 1
  %219 = load i32, ptr %38, align 4
  %220 = lshr i32 %219, 24
  %221 = trunc i32 %220 to i8
  %222 = load ptr, ptr %37, align 8
  %223 = getelementptr inbounds i8, ptr %222, i64 3
  store i8 %221, ptr %223, align 1
  %224 = load ptr, ptr %44, align 8
  %225 = getelementptr inbounds i8, ptr %224, i64 28
  %226 = load i16, ptr %45, align 2
  store ptr %225, ptr %25, align 8
  store i16 %226, ptr %26, align 2
  %227 = load i16, ptr %26, align 2
  %228 = trunc i16 %227 to i8
  %229 = load ptr, ptr %25, align 8
  store i8 %228, ptr %229, align 1
  %230 = load i16, ptr %26, align 2
  %231 = zext i16 %230 to i32
  %232 = ashr i32 %231, 8
  %233 = trunc i32 %232 to i8
  %234 = load ptr, ptr %25, align 8
  %235 = getelementptr inbounds i8, ptr %234, i64 1
  store i8 %233, ptr %235, align 1
  %236 = load ptr, ptr %44, align 8
  %237 = getelementptr inbounds i8, ptr %236, i64 30
  %238 = load i16, ptr %46, align 2
  store ptr %237, ptr %27, align 8
  store i16 %238, ptr %28, align 2
  %239 = load i16, ptr %28, align 2
  %240 = trunc i16 %239 to i8
  %241 = load ptr, ptr %27, align 8
  store i8 %240, ptr %241, align 1
  %242 = load i16, ptr %28, align 2
  %243 = zext i16 %242 to i32
  %244 = ashr i32 %243, 8
  %245 = trunc i32 %244 to i8
  %246 = load ptr, ptr %27, align 8
  %247 = getelementptr inbounds i8, ptr %246, i64 1
  store i8 %245, ptr %247, align 1
  %248 = load ptr, ptr %44, align 8
  %249 = getelementptr inbounds i8, ptr %248, i64 32
  %250 = load i16, ptr %47, align 2
  store ptr %249, ptr %29, align 8
  store i16 %250, ptr %30, align 2
  %251 = load i16, ptr %30, align 2
  %252 = trunc i16 %251 to i8
  %253 = load ptr, ptr %29, align 8
  store i8 %252, ptr %253, align 1
  %254 = load i16, ptr %30, align 2
  %255 = zext i16 %254 to i32
  %256 = ashr i32 %255, 8
  %257 = trunc i32 %256 to i8
  %258 = load ptr, ptr %29, align 8
  %259 = getelementptr inbounds i8, ptr %258, i64 1
  store i8 %257, ptr %259, align 1
  %260 = load ptr, ptr %44, align 8
  %261 = getelementptr inbounds i8, ptr %260, i64 38
  %262 = load i32, ptr %56, align 4
  store ptr %261, ptr %39, align 8
  store i32 %262, ptr %40, align 4
  %263 = load i32, ptr %40, align 4
  %264 = trunc i32 %263 to i8
  %265 = load ptr, ptr %39, align 8
  store i8 %264, ptr %265, align 1
  %266 = load i32, ptr %40, align 4
  %267 = lshr i32 %266, 8
  %268 = trunc i32 %267 to i8
  %269 = load ptr, ptr %39, align 8
  %270 = getelementptr inbounds i8, ptr %269, i64 1
  store i8 %268, ptr %270, align 1
  %271 = load i32, ptr %40, align 4
  %272 = lshr i32 %271, 16
  %273 = trunc i32 %272 to i8
  %274 = load ptr, ptr %39, align 8
  %275 = getelementptr inbounds i8, ptr %274, i64 2
  store i8 %273, ptr %275, align 1
  %276 = load i32, ptr %40, align 4
  %277 = lshr i32 %276, 24
  %278 = trunc i32 %277 to i8
  %279 = load ptr, ptr %39, align 8
  %280 = getelementptr inbounds i8, ptr %279, i64 3
  store i8 %278, ptr %280, align 1
  %281 = load ptr, ptr %44, align 8
  %282 = getelementptr inbounds i8, ptr %281, i64 42
  %283 = load i64, ptr %55, align 8
  %284 = icmp ult i64 %283, 4294967295
  br i1 %284, label %285, label %287

285:                                              ; preds = %203
  %286 = load i64, ptr %55, align 8
  br label %288

287:                                              ; preds = %203
  br label %288

288:                                              ; preds = %287, %285
  %289 = phi i64 [ %286, %285 ], [ 4294967295, %287 ]
  %290 = trunc i64 %289 to i32
  store ptr %282, ptr %41, align 8
  store i32 %290, ptr %42, align 4
  %291 = load i32, ptr %42, align 4
  %292 = trunc i32 %291 to i8
  %293 = load ptr, ptr %41, align 8
  store i8 %292, ptr %293, align 1
  %294 = load i32, ptr %42, align 4
  %295 = lshr i32 %294, 8
  %296 = trunc i32 %295 to i8
  %297 = load ptr, ptr %41, align 8
  %298 = getelementptr inbounds i8, ptr %297, i64 1
  store i8 %296, ptr %298, align 1
  %299 = load i32, ptr %42, align 4
  %300 = lshr i32 %299, 16
  %301 = trunc i32 %300 to i8
  %302 = load ptr, ptr %41, align 8
  %303 = getelementptr inbounds i8, ptr %302, i64 2
  store i8 %301, ptr %303, align 1
  %304 = load i32, ptr %42, align 4
  %305 = lshr i32 %304, 24
  %306 = trunc i32 %305 to i8
  %307 = load ptr, ptr %41, align 8
  %308 = getelementptr inbounds i8, ptr %307, i64 3
  store i8 %306, ptr %308, align 1
  ret i32 1
}

attributes #0 = { noinline nounwind optnone ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }
attributes #2 = { allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }
attributes #3 = { allocsize(1) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #5 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }
attributes #6 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #7 = { cold noreturn "disable-tail-calls"="true" "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cmov,+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }
attributes #8 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #9 = { allocsize(0) }
attributes #10 = { allocsize(1) }
attributes #11 = { nounwind }
attributes #12 = { cold noreturn }
attributes #13 = { cold noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"Homebrew clang version 17.0.6"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.mustprogress"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !6}
!11 = distinct !{!11, !6}
!12 = distinct !{!12, !6}
!13 = distinct !{!13, !6}
!14 = distinct !{!14, !6}
!15 = distinct !{!15, !6}
!16 = distinct !{!16, !6}
!17 = distinct !{!17, !6}
!18 = distinct !{!18, !6}
!19 = distinct !{!19, !6}
!20 = distinct !{!20, !6}
!21 = distinct !{!21, !6}
!22 = distinct !{!22, !6}
!23 = distinct !{!23, !6}
!24 = distinct !{!24, !6}
!25 = distinct !{!25, !6}
!26 = distinct !{!26, !6}
!27 = distinct !{!27, !6}
!28 = distinct !{!28, !6}
!29 = distinct !{!29, !6}
!30 = distinct !{!30, !6}
!31 = distinct !{!31, !6}
!32 = distinct !{!32, !6}
!33 = distinct !{!33, !6}
!34 = distinct !{!34, !6}
!35 = distinct !{!35, !6}
!36 = distinct !{!36, !6}
!37 = distinct !{!37, !6}
!38 = distinct !{!38, !6}
!39 = distinct !{!39, !6}
!40 = distinct !{!40, !6}
!41 = distinct !{!41, !6}
!42 = distinct !{!42, !6}
!43 = distinct !{!43, !6}
!44 = distinct !{!44, !6}
!45 = distinct !{!45, !6}
!46 = distinct !{!46, !6}
!47 = distinct !{!47, !6}
!48 = distinct !{!48, !6}
!49 = distinct !{!49, !6}
!50 = distinct !{!50, !6}
!51 = distinct !{!51, !6}
!52 = distinct !{!52, !6}
!53 = distinct !{!53, !6}
!54 = distinct !{!54, !6}
!55 = distinct !{!55, !6}
!56 = distinct !{!56, !6}
!57 = distinct !{!57, !6}
!58 = distinct !{!58, !6}
!59 = distinct !{!59, !6}
!60 = distinct !{!60, !6}
!61 = distinct !{!61, !6}
!62 = distinct !{!62, !6}
!63 = distinct !{!63, !6}
!64 = distinct !{!64, !6}
!65 = distinct !{!65, !6}
!66 = distinct !{!66, !6}
!67 = distinct !{!67, !6}
!68 = distinct !{!68, !6}
!69 = distinct !{!69, !6}
!70 = distinct !{!70, !6}
!71 = distinct !{!71, !6}
!72 = distinct !{!72, !6}
!73 = distinct !{!73, !6}
!74 = distinct !{!74, !6}
!75 = distinct !{!75, !6}
!76 = distinct !{!76, !6}
!77 = distinct !{!77, !6}
!78 = distinct !{!78, !6}
!79 = distinct !{!79, !6}
!80 = distinct !{!80, !6}
!81 = distinct !{!81, !6}
!82 = distinct !{!82, !6}
!83 = distinct !{!83, !6}
!84 = distinct !{!84, !6}
!85 = distinct !{!85, !6}
!86 = distinct !{!86, !6}
!87 = distinct !{!87, !6}
!88 = distinct !{!88, !6}
!89 = distinct !{!89, !6}
!90 = distinct !{!90, !6}
!91 = distinct !{!91, !6}
!92 = distinct !{!92, !6}
!93 = distinct !{!93, !6}
!94 = distinct !{!94, !6}
!95 = distinct !{!95, !6}
!96 = distinct !{!96, !6}
!97 = distinct !{!97, !6}
!98 = distinct !{!98, !6}
!99 = distinct !{!99, !6}
!100 = distinct !{!100, !6}
!101 = distinct !{!101, !6}
!102 = distinct !{!102, !6}
!103 = distinct !{!103, !6}
!104 = distinct !{!104, !6}
!105 = distinct !{!105, !6}
!106 = distinct !{!106, !6}
!107 = distinct !{!107, !6}
!108 = distinct !{!108, !6}
!109 = distinct !{!109, !6}
!110 = distinct !{!110, !6}
!111 = distinct !{!111, !6}
!112 = distinct !{!112, !6}
!113 = distinct !{!113, !6}
!114 = distinct !{!114, !6}
!115 = distinct !{!115, !6}
!116 = distinct !{!116, !6}
!117 = distinct !{!117, !6}
!118 = distinct !{!118, !6}
!119 = distinct !{!119, !6}
!120 = distinct !{!120, !6}
!121 = distinct !{!121, !6}
!122 = distinct !{!122, !6}
!123 = distinct !{!123, !6}
!124 = distinct !{!124, !6}
!125 = distinct !{!125, !6}
!126 = distinct !{!126, !6}
!127 = distinct !{!127, !6}
!128 = distinct !{!128, !6}
!129 = distinct !{!129, !6}
!130 = distinct !{!130, !6}
!131 = distinct !{!131, !6}
!132 = distinct !{!132, !6}
!133 = distinct !{!133, !6}
!134 = distinct !{!134, !6}
!135 = distinct !{!135, !6}
!136 = distinct !{!136, !6}
!137 = distinct !{!137, !6}
!138 = distinct !{!138, !6}
!139 = distinct !{!139, !6}
!140 = distinct !{!140, !6}
!141 = distinct !{!141, !6}
!142 = distinct !{!142, !6}
!143 = distinct !{!143, !6}
!144 = distinct !{!144, !6}
!145 = distinct !{!145, !6}
!146 = distinct !{!146, !6}
!147 = distinct !{!147, !6}
!148 = distinct !{!148, !6}
!149 = distinct !{!149, !6}
!150 = distinct !{!150, !6}
!151 = distinct !{!151, !6}
!152 = distinct !{!152, !6}
!153 = distinct !{!153, !6}
!154 = distinct !{!154, !6}
!155 = distinct !{!155, !6}
!156 = distinct !{!156, !6}
!157 = distinct !{!157, !6}
!158 = distinct !{!158, !6}
!159 = distinct !{!159, !6}
!160 = distinct !{!160, !6}
!161 = distinct !{!161, !6}
!162 = distinct !{!162, !6}
!163 = distinct !{!163, !6}
!164 = distinct !{!164, !6}
!165 = distinct !{!165, !6}
!166 = distinct !{!166, !6}
!167 = distinct !{!167, !6}
!168 = distinct !{!168, !6}
!169 = distinct !{!169, !6}
!170 = distinct !{!170, !6}
!171 = distinct !{!171, !6}
!172 = distinct !{!172, !6}
!173 = distinct !{!173, !6}
!174 = distinct !{!174, !6}
!175 = distinct !{!175, !6}
!176 = distinct !{!176, !6}
!177 = distinct !{!177, !6}
!178 = distinct !{!178, !6}
!179 = distinct !{!179, !6}
!180 = distinct !{!180, !6}
!181 = distinct !{!181, !6}
!182 = distinct !{!182, !6}
!183 = distinct !{!183, !6}
!184 = distinct !{!184, !6}
!185 = distinct !{!185, !6}
!186 = distinct !{!186, !6}
!187 = distinct !{!187, !6}
!188 = distinct !{!188, !6}
!189 = distinct !{!189, !6}
